sub_4015a0
push 0xffffffff
push sub_43d281
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
push ebx
push esi
mov esi ecx
mov [ esp + 0x8 ] esi
lea ecx [ esi + 0xc ]
mov [ ecx ] eax
xor ebx ebx
mov [ esi + 0x40 ] r--data
mov [ esp + 0x14 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x48 ] r--data
mov [ esp + 0x14 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_42496a
mov ecx [ esp + 0xc ]
or eax 0xffffffff
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x10 ] bl
mov [ esi + 0x20 ] bl
mov [ esi + 0x11 ] bl
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x12 ] bl
mov [ esi + 0x13 ] bl
mov [ esi + 0x14 ] 0x1
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x38 ] bl
mov [ esi + 0x39 ] bl
mov [ esi + 0x3c ] 0xff
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4016c0
push 0xffffffff
push sub_43d2c1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi + 0xc ] eax
xor eax eax
mov [ esi + 0x40 ] r--data
mov [ esp + 0x10 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x48 ] r--data
mov ecx [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x2
push ecx
mov ecx esi
mov [ esi ] r--data
call j_sub_401840
mov ecx [ esp + 0x8 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_401750
push 0xffffffff
push sub_43d311
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
mov esi ecx
push edi
mov [ esp + 0xc ] esi
mov [ esi ] r--data
lea edi [ esi + 0xc ]
mov [ esp + 0x1c ] 0x2
mov ecx edi
call sub_42496a
lea ebx [ esi + 0x40 ]
mov ecx ebx
call sub_42e37f
add esi 0x48
mov ecx esi
call sub_42e37f
mov ecx esi
mov [ esp + 0x10 ] ecx
mov [ ecx ] r--data
mov [ esp + 0x1c ] 0x3
call sub_42e37f
mov ecx ebx
mov [ esp + 0x10 ] ecx
mov [ ecx ] r--data
mov [ esp + 0x1c ] 0x4
call sub_42e37f
mov ecx edi
mov [ esp + 0x1c ] 0xffffffff
call sub_4249df
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
sub_401840
push ebp
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
mov eax [ edi + 0x4 ]
lea edx [ edi + 0xc ]
mov [ esi + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ esi + 0x8 ] ecx
push edx
lea ecx [ esi + 0xc ]
call sub_424b18
mov al [ edi + 0x10 ]
mov [ esi + 0x10 ] al
mov cl [ edi + 0x11 ]
mov [ esi + 0x11 ] cl
mov dl [ edi + 0x20 ]
mov [ esi + 0x20 ] dl
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
mov ecx [ edi + 0x28 ]
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x2c ]
mov [ esi + 0x2c ] edx
mov eax [ edi + 0x30 ]
mov [ esi + 0x30 ] eax
mov ecx [ edi + 0x34 ]
mov [ esi + 0x34 ] ecx
mov dl [ edi + 0x12 ]
mov [ esi + 0x12 ] dl
mov al [ edi + 0x13 ]
mov [ esi + 0x13 ] al
mov cl [ edi + 0x14 ]
mov [ esi + 0x14 ] cl
mov edx [ edi + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
mov cl [ edi + 0x38 ]
mov [ esi + 0x38 ] cl
mov dl [ edi + 0x39 ]
mov [ esi + 0x39 ] dl
mov eax [ edi + 0x3c ]
lea ecx [ esi + 0x40 ]
lea edx [ edi + 0x40 ]
push ecx
push edx
mov [ esi + 0x3c ] eax
call j_sub_401a50
mov al [ esi + 0x11 ]
add esp 0x8
test al al
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
retn 0x4
lea eax [ edi + 0x48 ]
test eax eax
je r-xdata
mov [ esi + 0x11 ] 0x0
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x4c ]
push 0x0
push 0x0
push eax
call [ GetRegionData@IAT ]
mov ebp eax
test ebp ebp
jle r-xdata
push ebx
push ebp
call sub_4250b0
mov ecx [ edi + 0x4c ]
add esp 0x4
mov ebx eax
push ebx
push ebp
push ecx
call [ GetRegionData@IAT ]
cmp ebp eax
jne r-xdata
push ebx
call sub_4250d9
add esp 0x4
mov eax esi
pop ebx
pop edi
pop esi
pop ebp
retn 0x4
lea edi [ esi + 0x48 ]
mov ecx edi
call sub_42e37f
push ebx
push ebp
push 0x0
call [ ExtCreateRegion@IAT ]
push eax
mov ecx edi
call sub_42e328
sub_401a50
mov ecx [ esp + 0x4 ]
sub esp 0x24
lea eax [ esp + 0xc ]
mov edx [ ecx + 0x4 ]
push ebx
push eax
push 0x18
push edx
xor bl bl
call [ GetObjectA@IAT ]
test eax eax
jne r-xdata
push ebp
push esi
push 0x0
call [ GetDC@IAT ]
mov ecx [ esp + 0x1c ]
mov ebp eax
mov eax [ esp + 0x20 ]
push eax
push ecx
call j_sub_401db0
mov esi eax
add esp 0x8
test esi esi
mov [ esp + 0xc ] esi
je r-xdata
xor al al
pop ebx
add esp 0x24
retn
push ebp
push 0x0
call [ ReleaseDC@IAT ]
pop esi
mov al bl
pop ebp
pop ebx
add esp 0x24
retn
mov edx [ esi + 0x14 ]
push edi
push edx
call sub_4250b0
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push esi
call sub_4250d9
add esp 0x4
pop edi
mov eax [ esp + 0x38 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
push 0x0
push esi
push edi
push ecx
push 0x0
push eax
push ebp
call [ GetDIBits@IAT ]
mov esi [ esp + 0x3c ]
mov ecx esi
call sub_42e37f
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push edx
push eax
push ebp
call [ CreateCompatibleBitmap@IAT ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x24 ]
push 0x0
push ecx
push edi
mov ebx eax
push edx
push 0x0
push ebx
push ebp
call [ SetDIBits@IAT ]
mov ecx esi
call sub_42e355
push ebx
mov ecx esi
call sub_42e328
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x14 ]
push eax
mov eax [ esi + 0x4 ]
push ecx
push edx
push eax
call [ SetBitmapDimensionEx@IAT ]
push edi
call sub_4250d9
mov esi [ esp + 0x14 ]
add esp 0x4
mov bl 0x1
mov eax [ eax + 0x4 ]
sub_401bb0
push 0xffffffff
push sub_43d340
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push ebx
push ebp
push esi
mov esi [ esp + 0x4c ]
push edi
mov ebp [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
mov edx [ esi ]
sub ebp ecx
lea ecx [ esp + 0x28 ]
sub edi edx
call sub_42cf8a
lea ecx [ esp + 0x18 ]
mov [ esp + 0x40 ] 0x0
call sub_42cf8a
mov ebx [ esp + 0x54 ]
mov [ esp + 0x40 ] 0x1
test ebx ebx
jne r-xdata
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x2c ]
call sub_42d041
test ebx ebx
jne r-xdata
mov ecx [ esp + 0x1c ]
push eax
push ecx
call sub_42d1ba
test ebx ebx
mov [ esp + 0x54 ] eax
jne r-xdata
mov eax [ eax + 0x4 ]
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x1c ]
call sub_42d041
mov ecx [ esp + 0x4c ]
call sub_42e37f
mov eax [ ebx + 0x4 ]
push ebp
push edi
push eax
call [ CreateCompatibleBitmap@IAT ]
mov ebx [ esp + 0x4c ]
push eax
mov ecx ebx
call sub_42e328
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x1c ]
push eax
push ecx
call sub_42d1ba
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
mov edx [ esp + 0x2c ]
push eax
push edx
call sub_42d1ba
mov edx [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
mov ebx [ esi ]
mov esi [ esi + 0x8 ]
mov [ esp + 0x50 ] eax
lea eax [ esp + 0x18 ]
sub ecx edx
sub esi ebx
neg eax
sbb eax eax
push 0xcc0020
and eax [ esp + 0x20 ]
push ecx
push esi
push edx
push ebx
push eax
mov eax [ esp + 0x44 ]
push ebp
push edi
push 0x0
push 0x0
push eax
call [ StretchBlt@IAT ]
mov edx [ esp + 0x4c ]
lea ecx [ esp + 0x10 ]
push ecx
push ebp
mov eax [ edx + 0x4 ]
push edi
push eax
call [ SetBitmapDimensionEx@IAT ]
mov eax [ esp + 0x50 ]
pop edi
pop esi
pop ebp
test eax eax
pop ebx
je r-xdata
mov edx [ esp + 0xc ]
push eax
push edx
call sub_42d1ba
lea ecx [ esp + 0x8 ]
mov [ esp + 0x30 ] 0x0
call sub_42d0bf
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] 0xffffffff
call sub_42d0bf
mov ecx [ esp + 0x28 ]
mov al 0x1
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
mov eax [ eax + 0x4 ]
sub_401db0
push edi
push 0x2c
call sub_4250b0
mov edx eax
mov ecx 0xb
xor eax eax
mov edi edx
[ edi ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ edx + 0x4 ] eax
add esp 0x4
lea eax [ eax + eax * 2 + 0x3 ]
mov [ edx ] 0x28
and al 0xfc
mov [ edx + 0x8 ] ecx
imul eax ecx
mov [ edx + 0x14 ] eax
mov [ edx + 0xc ] 0x1
mov [ edx + 0xe ] 0x18
mov eax edx
pop edi
retn
sub_401e20
push 0xffffffff
push sub_43d358
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push esi
push edi
lea ecx [ esp + 0x8 ]
xor edi edi
call sub_42cf8a
mov esi [ esp + 0x44 ]
mov [ esp + 0x38 ] edi
test esi esi
je r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x38 ] 0xffffffff
call sub_42d0bf
mov ecx [ esp + 0x30 ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push 0x18
push eax
call [ GetObjectA@IAT ]
test eax eax
je r-xdata
push edi
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0xc ]
call sub_42d041
mov edx [ esi + 0x4 ]
mov eax [ esp + 0xc ]
push edx
push eax
call sub_42d1ba
mov esi eax
mov eax [ esp + 0x40 ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
push ecx
mov ecx [ esp + 0x14 ]
push ecx
call [ GetPixel@IAT ]
test esi esi
mov edi eax
je r-xdata
mov edx [ esp + 0xc ]
push esi
push edx
call sub_42d1ba
mov esi [ esi + 0x4 ]
sub_401f10
push 0xffffffff
push sub_43d3a4
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
mov esi ecx
push edi
mov [ esp + 0x14 ] esi
call sub_421249
mov [ esi ] r--data
xor edi edi
mov [ esi + 0x3c ] r--data
mov [ esp + 0x20 ] edi
mov [ esi + 0x40 ] edi
mov al [ esp + 0x13 ]
mov [ esi + 0x48 ] edi
mov [ esi + 0x44 ] al
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov ecx [ rw-data ]
mov [ esi + 0x58 ] ecx
lea ecx [ esi + 0x5c ]
mov [ esp + 0x20 ] 0x3
call sub_41c843
mov [ esi ] r--data
mov [ esi + 0x54 ] 0x0
mov [ esi + 0x55 ] 0x0
mov [ esi + 0x56 ] 0x0
mov [ esi + 0xb5 ] 0x0
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] 0x1
mov ebx [ esi + 0x4c ]
mov ebp [ esi + 0x48 ]
mov edi ebx
cmp edi ebx
mov [ esp + 0x20 ] 0x4
je r-xdata
mov ebx [ esi + 0x4c ]
mov edi ebp
cmp ebp ebx
je r-xdata
push edi
mov ecx ebp
call j_sub_4019a0
add edi 0x50
add ebp 0x50
cmp edi ebx
jne r-xdata
lea ecx [ esi + 0x58 ]
mov [ esi + 0x4c ] ebp
call sub_42496a
mov ecx [ esp + 0x18 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
push 0x0
mov ecx edi
call [ edx ]
add edi 0x50
cmp edi ebx
jne r-xdata
sub_402070
push 0xffffffff
push sub_43d3fc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
mov esi ecx
push edi
mov [ esp + 0x10 ] esi
mov [ esi ] r--data
mov edi [ esi + 0x4c ]
mov ebx [ esi + 0x48 ]
cmp edi edi
mov [ esp + 0x20 ] 0x4
mov ebp edi
je r-xdata
mov ebp [ esi + 0x4c ]
mov edi ebx
cmp ebx ebp
je r-xdata
push ebp
mov ecx ebx
call j_sub_4019a0
add ebp 0x50
add ebx 0x50
cmp ebp edi
jne r-xdata
lea edi [ esi + 0x58 ]
mov [ esi + 0x4c ] ebx
mov ecx edi
call sub_42496a
lea ecx [ esi + 0x5c ]
mov [ esp + 0x20 ] 0x3
call sub_41c8ed
mov ecx edi
mov [ esp + 0x20 ] 0x2
call sub_4249df
mov ebx [ esi + 0x4c ]
mov edi [ esi + 0x48 ]
cmp edi ebx
mov [ esp + 0x20 ] 0x1
je r-xdata
mov eax [ edi ]
push 0x0
mov ecx edi
call [ eax ]
add edi 0x50
cmp edi ebp
jne r-xdata
mov eax [ esi + 0x48 ]
push eax
call sub_4250d9
xor eax eax
lea ecx [ esi + 0x3c ]
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
add esp 0x4
mov [ esp + 0x14 ] ecx
mov [ ecx ] r--data
mov [ esp + 0x20 ] 0x5
call sub_42e37f
mov ecx esi
mov [ esp + 0x20 ] 0xffffffff
call sub_433a4e
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ edi ]
push 0x0
mov ecx edi
call [ edx ]
add edi 0x50
cmp edi ebx
jne r-xdata
sub_4021b0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push 0x0
push eax
mov eax [ esp + 0x10 ]
push edx
mov edx [ esp + 0x10 ]
push eax
push 0x50000000
push 0x0
push 0x0
push edx
call sub_421bab
retn 0x10
sub_4021f0
push esi
mov esi ecx
mov al [ esi + 0x55 ]
test al al
jne r-xdata
pop esi
retn
push ebx
push edi
lea edi [ esi + 0x5c ]
push 0x0
push esi
mov ecx edi
call sub_41c898
mov eax [ esi + 0x78 ]
mov ebx [ SendMessageA@IAT ]
push 0x0
push 0x1
push 0x401
push eax
call ebx
push 0x0
push 0x0
push 0xffffffff
push esi
mov ecx edi
call sub_41ca63
mov ecx [ esi + 0x78 ]
push 0x0
push 0x0
push 0x403
push ecx
call ebx
pop edi
mov [ esi + 0x55 ] 0x1
pop ebx
sub_4022c0
mov al [ esp + 0x4 ]
push esi
mov esi ecx
test al al
mov [ esi + 0xb5 ] al
je r-xdata
mov [ esi + 0xb8 ] 0x0
mov eax [ esi + 0x1c ]
push eax
call [ GetParent@IAT ]
push eax
call sub_42166a
test eax eax
je r-xdata
pop esi
retn 0x8
mov ecx esi
call j_sub_404030
mov cl [ esi + 0xb4 ]
dec cl
neg cl
sbb ecx ecx
and ecx 0xfffffff6
add ecx 0xf
push ecx
call [ GetSysColor@IAT ]
mov [ esi + 0xb8 ] eax
jmp r-xdata
push r--data
mov ecx eax
call sub_425c67
test eax eax
je r-xdata
mov al [ esp + 0xc ]
test al al
je r-xdata
mov [ esi + 0xb4 ] 0x0
mov [ esi + 0xb4 ] 0x1
jmp r-xdata
sub_402400
sub esp 0x8
mov eax [ ecx + 0x48 ]
push ebx
push ebp
push esi
lea esi [ ecx + 0x44 ]
xor bl bl
push edi
test eax eax
jne r-xdata
mov edx [ esi + 0x8 ]
sub edx eax
mov eax 0x66666667
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov edi edx
xor edi edi
jmp r-xdata
pop edi
pop esi
mov al bl
pop ebp
pop ebx
add esp 0x8
retn 0x4
mov [ ebp + 0x8 ] edi
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0xc ]
mov eax 0x66666667
sub edx ecx
mov edi ecx
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
cmp edx 0x1
jae r-xdata
mov ebp [ esp + 0x1c ]
mov edx [ ebp + 0x4 ]
push edx
call j_sub_4034b0
test eax eax
jne r-xdata
mov edx ecx
mov eax 0x66666667
sub edx edi
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
cmp edx 0x1
jae r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
push ecx
push ecx
add ecx 0xffffffb0
push ecx
mov ecx esi
call j_sub_404eb0
mov eax [ esi + 0x8 ]
push eax
add eax 0xffffffb0
push eax
push edi
call j_sub_404f80
lea eax [ edi + 0x50 ]
push ebp
push eax
push edi
call j_sub_404f40
mov eax [ esi + 0x8 ]
add esp 0x18
add eax 0x50
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x8
retn 0x4
lea edx [ edi + 0x50 ]
push edx
push ecx
push edi
mov ecx esi
call j_sub_404eb0
mov ebx [ esi + 0x8 ]
mov eax 0x66666667
mov ecx ebx
push ebp
sub ecx edi
imul ecx
sar edx 0x5
mov eax edx
mov ecx 0x1
shr eax 0x1f
add edx eax
sub ecx edx
push ecx
push ebx
mov ecx esi
call j_sub_404f00
mov edx [ esi + 0x8 ]
push ebp
push edx
push edi
call j_sub_404f40
mov eax [ esi + 0x8 ]
add esp 0xc
add eax 0x50
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x8
retn 0x4
mov ebp 0x1
mov edx ecx
mov eax 0x66666667
sub edx ebx
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
cmp edx 0x1
mov ebp edx
ja r-xdata
sub ecx ebx
mov eax 0x66666667
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
test ebx ebx
jne r-xdata
lea edx [ eax + eax * 4 ]
shl edx 0x4
push edx
call sub_4250b0
mov ebp [ esi + 0x4 ]
add esp 0x4
cmp ebp edi
mov [ esp + 0x14 ] eax
mov ebx eax
je r-xdata
xor eax eax
lea eax [ edx + ebp ]
test eax eax
mov [ esp + 0x10 ] eax
jge r-xdata
mov eax [ esp + 0x1c ]
mov ecx esi
push eax
push 0x1
push ebx
call j_sub_404f00
mov ecx [ esi + 0x8 ]
add ebx 0x50
push ebx
push ecx
push edi
mov ecx esi
call j_sub_404eb0
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
push edx
push eax
mov ecx esi
call j_sub_404e70
mov ecx [ esi + 0x4 ]
push ecx
call sub_4250d9
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
add esp 0x4
mov ecx esi
lea edx [ eax + eax * 4 ]
shl edx 0x4
add edx edi
mov [ esi + 0xc ] edx
call j_sub_404e30
inc eax
mov [ esi + 0x4 ] edi
lea eax [ eax + eax * 4 ]
shl eax 0x4
add eax edi
pop edi
mov [ esi + 0x8 ] eax
pop esi
pop ebp
mov al 0x1
pop ebx
add esp 0x8
retn 0x4
push ebp
push ebx
call j_sub_404fd0
add ebp 0x50
add esp 0x8
add ebx 0x50
cmp ebp edi
jne r-xdata
sub_4026b0
push ebx
push ebp
mov ebp ecx
xor bl bl
push esi
mov eax [ ebp + 0x48 ]
mov ecx [ ebp + 0x4c ]
cmp eax ecx
jae r-xdata
mov ecx ebp
call j_sub_402770
pop esi
mov al bl
pop ebp
pop ebx
retn 0x4
mov edx [ esp + 0x10 ]
mov ebx [ ebp + 0x4c ]
lea esi [ eax + 0x50 ]
cmp esi ebx
push edi
je r-xdata
add eax 0x50
cmp eax ecx
jb r-xdata
mov edi [ ebp + 0x4c ]
lea esi [ edi - 0x50 ]
cmp esi edi
je r-xdata
lea edi [ esi - 0x50 ]
cmp [ eax + 0x4 ] edx
je r-xdata
mov ecx ebp
call j_sub_402770
pop esi
mov al bl
pop ebp
pop ebx
retn 0x4
mov eax [ ebp + 0x4c ]
mov bl 0x1
add eax 0xffffffb0
pop edi
mov [ ebp + 0x4c ] eax
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax ]
add esi 0x50
cmp esi edi
jne r-xdata
push esi
mov ecx edi
call j_sub_4019a0
add esi 0x50
add edi 0x50
cmp esi ebx
jne r-xdata
sub_402770
mov eax [ ecx + 0x48 ]
push esi
xor esi esi
test eax eax
je r-xdata
xor al al
pop esi
retn
mov edx [ ecx + 0x4c ]
sub edx eax
mov eax 0x66666667
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
jne r-xdata
mov eax [ ecx + 0x48 ]
mov edx [ ecx + 0x4c ]
cmp eax edx
jae r-xdata
mov al 0x1
pop esi
retn
mov [ eax + 0x8 ] esi
mov edx [ ecx + 0x4c ]
add eax 0x50
inc esi
cmp eax edx
jb r-xdata
sub_4027e0
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
mov edi ecx
push eax
xor bl bl
call j_sub_4034b0
mov esi eax
test esi esi
je r-xdata
pop edi
mov al bl
pop esi
pop ebx
retn 0x8
mov ecx [ esp + 0x14 ]
push ecx
mov ecx edi
call j_sub_4034b0
test eax eax
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ esi + 0x8 ] edx
mov [ eax + 0x8 ] ecx
mov ecx edi
call j_sub_403460
pop edi
pop esi
pop ebx
retn 0x8
sub_402850
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
mov esi ecx
push eax
xor bl bl
call j_sub_4034b0
mov edi eax
test edi edi
je r-xdata
pop edi
mov al bl
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x48 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x4c ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
xor edx edx
jmp r-xdata
mov ecx esi
call j_sub_402770
pop edi
pop esi
pop ebx
retn 0x4
mov ecx esi
mov [ edi + 0x8 ] edx
call j_sub_403460
test al al
je r-xdata
sub_4028d0
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x8
mov cl [ esp + 0xc ]
pop ebx
mov [ eax + 0x10 ] cl
mov al 0x1
retn 0x8
sub_402910
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0xc
mov cl [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov [ eax + 0x20 ] cl
mov [ eax + 0x24 ] edx
mov al 0x1
pop ebx
retn 0xc
sub_402950
mov eax [ esp + 0x4 ]
push ebx
push esi
push eax
xor bl bl
call j_sub_4034b0
mov esi eax
test esi esi
je r-xdata
mov al bl
pop esi
pop ebx
retn 0xc
mov cl [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push edi
mov [ esi + 0x20 ] cl
mov edi [ edx ]
lea eax [ esi + 0x28 ]
cmp cl 0x1
mov [ eax ] edi
mov edx [ edx + 0x4 ]
mov [ esi + 0x2c ] edx
pop edi
jne r-xdata
pop esi
mov al 0x1
pop ebx
retn 0xc
lea ecx [ esi + 0x40 ]
push ecx
push eax
call j_sub_401e20
add esp 0x8
mov [ esi + 0x24 ] eax
sub_4029d0
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x4
mov al [ eax + 0x20 ]
pop ebx
retn 0x4
sub_402a00
mov eax [ esp + 0x4 ]
push esi
push eax
xor esi esi
call j_sub_4034b0
test eax eax
je r-xdata
mov eax esi
pop esi
retn 0x4
mov eax [ eax + 0x24 ]
pop esi
retn 0x4
sub_402a30
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x8
mov ecx [ esp + 0xc ]
push ecx
lea ecx [ eax + 0xc ]
call sub_424b18
mov al 0x1
pop ebx
retn 0x8
sub_402a70
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x8
mov ecx [ esp + 0xc ]
add eax 0xc
push eax
call sub_424b18
mov al 0x1
pop ebx
retn 0x8
sub_402ab0
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x8
mov cl [ esp + 0xc ]
pop ebx
mov [ eax + 0x12 ] cl
mov al 0x1
retn 0x8
sub_402af0
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x4
mov al [ eax + 0x12 ]
pop ebx
retn 0x4
sub_402b20
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x8
mov cl [ esp + 0xc ]
pop ebx
mov [ eax + 0x14 ] cl
mov al 0x1
retn 0x8
sub_402b60
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x4
mov al [ eax + 0x14 ]
pop ebx
retn 0x4
sub_402b90
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x8
mov ebx [ esp + 0xc ]
mov edx [ eax + 0x30 ]
push esi
mov esi [ eax + 0x34 ]
mov ecx [ ebx ]
push edi
sub ecx edx
mov edi ecx
add edx edi
mov [ eax + 0x30 ] edx
mov ecx [ ebx + 0x4 ]
sub ecx esi
lea edx [ eax + 0x48 ]
add esi ecx
test edx edx
mov [ eax + 0x34 ] esi
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
retn 0x8
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
push ecx
mov ecx [ eax + 0x4c ]
push edi
push ecx
call [ OffsetRgn@IAT ]
sub_402c10
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x8
mov ecx [ esp + 0xc ]
mov edx [ eax + 0x30 ]
pop ebx
mov [ ecx ] edx
mov eax [ eax + 0x34 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
retn 0x8
sub_402c50
mov eax [ esp + 0x4 ]
sub esp 0x8
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
add esp 0x8
retn 0x8
mov edx [ eax + 0x44 ]
lea ecx [ esp + 0x4 ]
push ecx
push edx
call [ GetBitmapDimensionEx@IAT ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
pop ebx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
add esp 0x8
retn 0x8
sub_402cc0
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x8
mov cl [ esp + 0xc ]
pop ebx
mov [ eax + 0x38 ] cl
mov al 0x1
retn 0x8
sub_402d00
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x4
mov al [ eax + 0x38 ]
pop ebx
retn 0x4
sub_402d30
mov eax [ esp + 0x4 ]
push ebx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop ebx
retn 0x8
mov ecx [ esp + 0xc ]
pop ebx
mov [ eax + 0x3c ] ecx
mov al 0x1
retn 0x8
sub_402d70
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi 0xff
call j_sub_4034b0
test eax eax
je r-xdata
mov eax esi
pop esi
retn 0x4
mov eax [ eax + 0x3c ]
pop esi
retn 0x4
sub_402db0
mov eax [ esp + 0x4 ]
push esi
push eax
or esi 0xffffffff
call j_sub_4034b0
test eax eax
je r-xdata
mov eax esi
pop esi
retn 0x4
mov eax [ eax + 0x8 ]
pop esi
retn 0x4
sub_402de0
mov ecx [ ecx + 0x1c ]
sub esp 0x28
lea eax [ esp ]
push ebx
push ebp
push esi
push edi
push eax
push ecx
xor bl bl
call [ GetClientRect@IAT ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
add eax edx
cdq
sub eax edx
mov edx [ esp + 0x14 ]
mov esi eax
mov ebp [ esp + 0x3c ]
lea eax [ edx + ecx ]
cdq
mov ecx [ ebp + 0x44 ]
sub eax edx
mov edi eax
lea eax [ esp + 0x20 ]
push eax
push 0x18
push ecx
sar esi 0x1
sar edi 0x1
call [ GetObjectA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov al bl
pop ebp
pop ebx
add esp 0x28
retn 0x4
mov eax [ esp + 0x24 ]
cdq
sub eax edx
sar eax 0x1
sub esi eax
mov eax [ esp + 0x28 ]
cdq
sub eax edx
mov [ ebp + 0x30 ] esi
sar eax 0x1
sub edi eax
mov al 0x1
mov [ ebp + 0x34 ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0x4
sub_402ea0
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop esi
pop ebx
retn 0x4
push eax
mov ecx esi
call j_sub_402de0
pop esi
pop ebx
retn 0x4
sub_402ee0
push 0xffffffff
push sub_43d448
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
push ebx
push ebp
push esi
lea ecx [ esp + 0x1c ]
call sub_42cf8a
mov ebx [ esp + 0x54 ]
xor ebp ebp
cmp ebx ebp
mov [ esp + 0x4c ] ebp
jne r-xdata
lea esi [ ebx + 0x40 ]
cmp esi ebp
je r-xdata
lea ecx [ esp + 0x1c ]
mov [ esp + 0x4c ] 0xffffffff
call sub_42d0bf
pop esi
pop ebp
xor al al
pop ebx
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
add esp 0x44
retn 0x4
lea ecx [ esp + 0x1c ]
mov [ esp + 0x4c ] 0xffffffff
call sub_42d0bf
pop esi
pop ebp
xor al al
pop ebx
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
add esp 0x44
retn 0x4
cmp [ esi + 0x4 ] ebp
jne r-xdata
mov ecx [ ebx + 0x44 ]
lea eax [ esp + 0x2c ]
push eax
push 0x18
push ecx
call [ GetObjectA@IAT ]
cmp eax ebp
jne r-xdata
push ebp
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x20 ]
call sub_42d041
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0x1c ]
mov [ esp + 0x4c ] 0xffffffff
call sub_42d0bf
pop esi
pop ebp
xor al al
pop ebx
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
add esp 0x44
retn 0x4
mov eax [ esi + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ esp + 0x38 ]
test eax eax
jle r-xdata
mov ecx [ ebx + 0x2c ]
push ecx
push eax
mov eax [ esp + 0x2c ]
push eax
call [ GetPixel@IAT ]
mov [ ebx + 0x24 ] eax
mov edx [ esp + 0x20 ]
push edi
push eax
push edx
call sub_42d1ba
lea esi [ ebx + 0x48 ]
mov edi eax
mov ecx esi
mov [ esp + 0x58 ] edi
mov [ ebx + 0x11 ] 0x1
call sub_42e37f
push ebp
push ebp
push ebp
push ebp
call [ CreateRectRgn@IAT ]
push eax
mov ecx esi
call sub_42e328
mov eax [ ebx + 0x28 ]
cmp eax 0xffffffff
jle r-xdata
test edi edi
je r-xdata
mov eax [ esp + 0x34 ]
xor edi edi
xor esi esi
test eax eax
jle r-xdata
mov eax [ esp + 0x24 ]
push edi
push eax
call sub_42d1ba
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0xffffffff
call sub_42d0bf
mov ecx [ esp + 0x48 ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x44
retn 0x4
mov edi [ edi + 0x4 ]
mov eax [ esp + 0x38 ]
inc ebp
cmp ebp eax
jl r-xdata
mov ecx [ esp + 0x24 ]
push ebp
push esi
push ecx
call [ GetPixel@IAT ]
cmp [ ebx + 0x24 ] eax
jne r-xdata
mov edi [ esp + 0x58 ]
mov eax [ esp + 0x34 ]
inc esi
cmp esi eax
jl r-xdata
cmp edi esi
jne r-xdata
cmp edi esi
je r-xdata
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] r--data
lea edx [ ebp + 0x1 ]
mov [ esp + 0x50 ] 0x1
push edx
push esi
push ebp
push edi
call [ CreateRectRgn@IAT ]
push eax
lea ecx [ esp + 0x14 ]
call sub_42e328
mov edi [ esp + 0x14 ]
lea eax [ esp + 0x10 ]
neg eax
sbb eax eax
lea ecx [ ebx + 0x48 ]
and eax edi
test ecx ecx
je r-xdata
inc edi
jmp r-xdata
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x18 ] r--data
lea ecx [ ebp + 0x1 ]
mov [ esp + 0x50 ] 0x3
push ecx
push esi
push ebp
push edi
call [ CreateRectRgn@IAT ]
push eax
lea ecx [ esp + 0x1c ]
call sub_42e328
mov esi [ esp + 0x1c ]
lea eax [ esp + 0x18 ]
neg eax
sbb eax eax
lea ecx [ ebx + 0x48 ]
and eax esi
test ecx ecx
je r-xdata
push 0x2
push eax
mov eax [ ebx + 0x4c ]
push ecx
push eax
call [ CombineRgn@IAT ]
lea edi [ esi + 0x1 ]
mov [ esp + 0x10 ] r--data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x50 ] 0x2
call sub_42e37f
mov [ esp + 0x50 ] 0x0
mov ecx [ ecx + 0x4 ]
mov edx [ ebx + 0x4c ]
push 0x2
push eax
push ecx
push edx
call [ CombineRgn@IAT ]
mov [ esp + 0x18 ] r--data
lea ecx [ esp + 0x18 ]
mov [ esp + 0x50 ] 0x4
call sub_42e37f
mov [ esp + 0x50 ] 0x0
mov ecx [ ecx + 0x4 ]
sub_403230
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
push eax
xor bl bl
call j_sub_4034b0
test eax eax
je r-xdata
mov al bl
pop esi
pop ebx
retn 0x4
push eax
mov ecx esi
call j_sub_402ee0
pop esi
pop ebx
retn 0x4
sub_403270
sub esp 0x3c
push ebx
push esi
push edi
mov edi [ esp + 0x4c ]
xor ebx ebx
lea eax [ edi + 0x40 ]
mov [ esp + 0xf ] bl
cmp eax ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
je r-xdata
pop edi
pop esi
xor al al
pop ebx
add esp 0x3c
retn 0xc
cmp [ eax + 0x4 ] ebx
je r-xdata
mov esi [ esp + 0x50 ]
lea eax [ esi + 0x40 ]
cmp eax ebx
je r-xdata
cmp [ eax + 0x4 ] ebx
je r-xdata
mov ecx [ edi + 0x44 ]
lea eax [ esp + 0x10 ]
push ebp
mov ebp [ GetBitmapDimensionEx@IAT ]
push eax
push ecx
call ebp
mov eax [ edi + 0x30 ]
mov edx [ esp + 0x14 ]
mov edi [ edi + 0x34 ]
add edx eax
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x34 ] edx
mov edx [ esi + 0x44 ]
lea ecx [ esp + 0x14 ]
add eax edi
push ecx
push edx
mov [ esp + 0x38 ] edi
mov [ esp + 0x40 ] eax
call ebp
mov eax [ esi + 0x30 ]
mov ecx [ esp + 0x14 ]
mov esi [ esi + 0x34 ]
mov edx [ esp + 0x18 ]
add ecx eax
add edx esi
mov [ esp + 0x24 ] ecx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x28 ] edx
call sub_43455f
lea ecx [ esp + 0x1c ]
call sub_43455f
lea eax [ esp + 0x1c ]
lea ecx [ esp + 0x2c ]
push eax
lea edx [ esp + 0x40 ]
push ecx
push edx
call [ IntersectRect@IAT ]
test eax eax
pop ebp
je r-xdata
mov eax [ esp + 0x54 ]
cmp eax ebx
je r-xdata
mov [ esp + 0xf ] 0x1
mov al [ esp + 0xf ]
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0xc
lea ecx [ esp + 0x38 ]
push ecx
push eax
call [ CopyRect@IAT ]
sub_4033d0
sub esp 0x10
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
xor ebp ebp
mov esi ecx
push eax
xor bl bl
mov [ esp + 0x14 ] ebp
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] ebp
mov [ esp + 0x20 ] ebp
call j_sub_4034b0
mov edi eax
cmp edi ebp
je r-xdata
mov eax [ esp + 0x2c ]
cmp eax ebp
je r-xdata
mov ecx [ esp + 0x28 ]
push ecx
mov ecx esi
call j_sub_4034b0
cmp eax ebp
je r-xdata
pop edi
pop esi
mov al bl
pop ebp
pop ebx
add esp 0x10
retn 0xc
lea ecx [ esp + 0x10 ]
push ecx
push eax
call [ CopyRect@IAT ]
lea edx [ esp + 0x10 ]
mov ecx esi
push edx
push eax
push edi
call j_sub_403270
mov bl al
sub_403460
mov eax [ ecx + 0x48 ]
push ebx
xor bl bl
test eax eax
je r-xdata
mov al bl
pop ebx
retn
mov edx [ ecx + 0x4c ]
sub edx eax
mov eax 0x66666667
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
je r-xdata
mov edx [ ecx + 0x4c ]
mov eax [ ecx + 0x48 ]
push 0x0
push edx
push eax
call j_sub_405060
add esp 0xc
mov al 0x1
pop ebx
retn
sub_4034b0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ ecx + 0x48 ]
push edi
xor edi edi
xor ebx ebx
mov edx [ ecx + 0x4c ]
mov eax 0x66666667
sub edx esi
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
xor edx edx
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
mov edx [ ecx + 0x48 ]
cmp [ edx + ebx + 0x4 ] ebp
je r-xdata
cmp edi edx
jge r-xdata
mov edx [ ecx + 0x48 ]
lea eax [ edi + edi * 4 ]
pop edi
pop esi
shl eax 0x4
pop ebp
add eax edx
pop ebx
retn 0x4
inc edi
add ebx 0x50
jmp r-xdata
test esi esi
jne r-xdata
sub_403530
push 0xffffffff
push sub_43d468
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x2c
push ebx
push ebp
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
push eax
call [ GetDC@IAT ]
push eax
call sub_42d02c
mov edx [ esi + 0x1c ]
lea ecx [ esp + 0x1c ]
push ecx
push edx
mov [ esp + 0x18 ] eax
call [ GetClientRect@IAT ]
mov ebx [ esp + 0x24 ]
mov ebp [ esp + 0x1c ]
mov edi [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
sub ebx ebp
lea ebp [ esi + 0x3c ]
mov ecx ebp
sub edi eax
call sub_42e37f
mov eax [ esp + 0x10 ]
push edi
push ebx
mov ecx [ eax + 0x4 ]
push ecx
call [ CreateCompatibleBitmap@IAT ]
push eax
mov ecx ebp
call sub_42e328
mov eax [ esi + 0x40 ]
lea edx [ esp + 0x14 ]
push edx
push edi
push ebx
push eax
call [ SetBitmapDimensionEx@IAT ]
lea ecx [ esp + 0x2c ]
call sub_42cf8a
mov eax [ esp + 0x10 ]
xor ebx ebx
cmp eax ebx
mov [ esp + 0x44 ] ebx
jne r-xdata
mov eax [ eax + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x4 ]
xor eax eax
jmp r-xdata
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x30 ]
call sub_42d041
cmp ebp ebx
jne r-xdata
mov edi [ edi + 0x4 ]
xor edi edi
jmp r-xdata
mov ecx [ esp + 0x30 ]
push eax
push ecx
call sub_42d1ba
mov edx [ esi + 0xb8 ]
mov ecx [ esp + 0x24 ]
mov edi eax
mov eax [ esp + 0x28 ]
push edx
mov edx [ esp + 0x24 ]
sub eax edx
mov edx [ esp + 0x20 ]
sub ecx edx
push eax
push ecx
push ebx
push ebx
lea ecx [ esp + 0x40 ]
call sub_43439b
cmp edi ebx
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esi + 0x1c ]
mov eax [ edx + 0x4 ]
push eax
push ecx
call [ ReleaseDC@IAT ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x44 ] 0xffffffff
call sub_42d0bf
mov ecx [ esp + 0x3c ]
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x38
retn
mov ecx [ esi + 0x4c ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
je r-xdata
mov edx [ esp + 0x30 ]
push edi
push edx
call sub_42d1ba
mov eax [ esi + 0x48 ]
cmp eax ebx
je r-xdata
xor edi edi
mov ecx [ esi + 0x4c ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp edi edx
jae r-xdata
mov eax [ esi + 0x48 ]
add eax ebx
mov cl [ eax + 0x10 ]
test cl cl
je r-xdata
inc edi
add ebx 0x50
jmp r-xdata
push eax
push ebp
mov ecx esi
call j_sub_403750
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
sub_403750
push 0xffffffff
push sub_43d4ed
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x9c
push ebx
push ebp
push esi
push edi
mov edi ecx
lea ecx [ esp + 0x3c ]
mov [ esp + 0x90 ] edi
call sub_42cf8a
lea ecx [ esp + 0x64 ]
mov [ esp + 0xb4 ] 0x0
call sub_42cf8a
lea ecx [ esp + 0x54 ]
mov [ esp + 0xb4 ] 0x1
call sub_42cf8a
lea ecx [ esp + 0x2c ]
mov [ esp + 0xb4 ] 0x2
call sub_42cf8a
lea ecx [ esp + 0x74 ]
mov [ esp + 0xb4 ] 0x3
call sub_42cf8a
lea ecx [ esp + 0x18 ]
mov [ esp + 0xb4 ] 0x4
call j_sub_403f90
mov esi r--data
mov [ esp + 0x18 ] esi
lea ecx [ esp + 0x10 ]
mov [ esp + 0xb4 ] 0x5
call j_sub_403f90
mov [ esp + 0x10 ] esi
lea ecx [ esp + 0x20 ]
mov [ esp + 0xb4 ] 0x6
call j_sub_403f90
mov [ esp + 0x20 ] esi
mov eax [ esp + 0xbc ]
mov [ esp + 0xb4 ] 0x7
test eax eax
je r-xdata
lea ecx [ esp + 0x20 ]
mov [ esp + 0xb4 ] 0x6
mov [ esp + 0x20 ] esi
call j_sub_403fe0
lea ecx [ esp + 0x10 ]
mov [ esp + 0xb4 ] 0x5
mov [ esp + 0x10 ] esi
call j_sub_403fe0
lea ecx [ esp + 0x18 ]
mov [ esp + 0xb4 ] 0x4
mov [ esp + 0x18 ] esi
call j_sub_403fe0
lea ecx [ esp + 0x74 ]
mov [ esp + 0xb4 ] 0x3
call sub_42d0bf
lea ecx [ esp + 0x2c ]
mov [ esp + 0xb4 ] 0x2
call sub_42d0bf
lea ecx [ esp + 0x54 ]
mov [ esp + 0xb4 ] 0x1
call sub_42d0bf
lea ecx [ esp + 0x64 ]
mov [ esp + 0xb4 ] 0x0
call sub_42d0bf
lea ecx [ esp + 0x3c ]
mov [ esp + 0xb4 ] 0xffffffff
call sub_42d0bf
xor al al
mov ebp [ esp + 0xc0 ]
test ebp ebp
je r-xdata
lea ebx [ ebp + 0x40 ]
test ebx ebx
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x1c ]
push eax
call [ GetDC@IAT ]
push eax
call sub_42d02c
mov esi [ CreateCompatibleDC@IAT ]
push 0x0
mov [ esp + 0x88 ] eax
call esi
push eax
lea ecx [ esp + 0x40 ]
call sub_42d041
push 0x0
call esi
push eax
lea ecx [ esp + 0x68 ]
call sub_42d041
push 0x0
call esi
push eax
lea ecx [ esp + 0x58 ]
call sub_42d041
push 0x0
call esi
push eax
lea ecx [ esp + 0x30 ]
call sub_42d041
push 0x0
call esi
push eax
lea ecx [ esp + 0x78 ]
call sub_42d041
mov edx [ edi + 0x1c ]
lea ecx [ esp + 0x9c ]
push ecx
push edx
call [ GetClientRect@IAT ]
mov edi [ esp + 0xa4 ]
mov eax [ esp + 0x9c ]
mov esi [ esp + 0xa8 ]
mov ecx [ esp + 0xa0 ]
mov edx [ esp + 0x68 ]
sub edi eax
mov eax [ esp + 0xbc ]
sub esi ecx
mov ecx [ eax + 0x4 ]
push ecx
push edx
call sub_42d1ba
test ebx ebx
mov [ esp + 0x94 ] eax
je r-xdata
mov eax [ esp + 0x40 ]
push ebx
push eax
call sub_42d1ba
mov edx [ ebp + 0x44 ]
lea ecx [ esp + 0x4c ]
mov ebx eax
push ecx
push edx
mov [ esp + 0x94 ] ebx
call [ GetBitmapDimensionEx@IAT ]
mov al [ ebp + 0x20 ]
test al al
je r-xdata
mov ebx [ ebx + 0x4 ]
mov edx [ esp + 0x40 ]
lea eax [ esp + 0x3c ]
mov ecx [ ebp + 0x34 ]
mov ebp [ ebp + 0x30 ]
neg eax
sbb eax eax
push 0xcc0020
and eax edx
push 0x0
push 0x0
push eax
mov eax [ esp + 0x78 ]
push esi
push edi
push ecx
push ebp
push eax
call [ BitBlt@IAT ]
mov eax [ ebp + 0x28 ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
push esi
push edi
call [ CreateBitmap@IAT ]
push eax
lea ecx [ esp + 0x1c ]
call sub_42e328
mov ecx [ esp + 0x68 ]
mov ebx [ CreateCompatibleBitmap@IAT ]
push esi
push edi
push ecx
call ebx
push eax
lea ecx [ esp + 0x24 ]
call sub_42e328
mov edx [ esp + 0x68 ]
push esi
push edi
push edx
call ebx
push eax
lea ecx [ esp + 0x14 ]
call sub_42e328
mov ebx [ esp + 0x1c ]
lea eax [ esp + 0x18 ]
neg eax
sbb eax eax
and eax ebx
push eax
mov eax [ esp + 0x5c ]
push eax
call sub_42d1ba
mov edx [ esp + 0x24 ]
mov [ esp + 0x28 ] eax
mov ecx [ esp + 0x78 ]
lea eax [ esp + 0x20 ]
neg eax
sbb eax eax
and eax edx
push eax
push ecx
call sub_42d1ba
mov edx [ esp + 0x14 ]
mov [ esp + 0x88 ] eax
lea eax [ esp + 0x10 ]
neg eax
sbb eax eax
and eax edx
mov edx [ esp + 0x30 ]
push eax
push edx
call sub_42d1ba
mov [ esp + 0x98 ] eax
mov eax [ ebp + 0x24 ]
push eax
lea ecx [ esp + 0x40 ]
call sub_42d346
push 0x3
lea ecx [ esp + 0x58 ]
mov ebx eax
call sub_42d3ff
mov edx [ esp + 0x40 ]
lea eax [ esp + 0x3c ]
neg eax
sbb eax eax
push 0x330008
and eax edx
mov edx [ esp + 0x54 ]
push edx
mov edx [ esp + 0x54 ]
mov ecx [ ebp + 0x34 ]
push edx
push 0x0
push 0x0
push eax
mov eax [ esp + 0x68 ]
push eax
push edx
mov eax [ ebp + 0x30 ]
push ecx
mov ecx [ esp + 0x7c ]
push eax
push ecx
call [ StretchBlt@IAT ]
push ebx
lea ecx [ esp + 0x58 ]
call sub_42d346
mov edx [ esp + 0x58 ]
lea eax [ esp + 0x54 ]
neg eax
sbb eax eax
push 0x330008
mov ebx [ BitBlt@IAT ]
and eax edx
mov edx [ esp + 0x7c ]
push 0x0
push 0x0
push eax
push esi
push edi
push 0x0
push 0x0
push edx
call ebx
mov ecx [ esp + 0x68 ]
lea eax [ esp + 0x64 ]
neg eax
sbb eax eax
push 0x8800c6
and eax ecx
push 0x0
push 0x0
push eax
mov eax [ esp + 0x88 ]
push esi
push edi
push 0x0
push 0x0
push eax
call ebx
mov ecx [ esp + 0x58 ]
lea eax [ esp + 0x54 ]
neg eax
sbb eax eax
push 0xcc0020
and eax ecx
mov ecx [ esp + 0x34 ]
push 0x0
push 0x0
push eax
push esi
push edi
push 0x0
push 0x0
push ecx
call ebx
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x2c ]
push ecx
push eax
mov eax [ esp + 0x48 ]
push eax
call [ GetPixel@IAT ]
mov [ ebp + 0x24 ] eax
mov edx [ esp + 0x68 ]
push eax
push edx
call sub_42d1ba
mov eax [ esp + 0x84 ]
mov edx [ esp + 0x90 ]
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x1c ]
push ecx
push eax
call [ ReleaseDC@IAT ]
mov esi r--data
mov [ esp + 0x20 ] esi
lea ecx [ esp + 0x20 ]
mov [ esp + 0xb4 ] 0x8
call sub_42e37f
mov [ esp + 0x10 ] esi
lea ecx [ esp + 0x10 ]
mov [ esp + 0xb4 ] 0x9
call sub_42e37f
mov [ esp + 0x18 ] esi
lea ecx [ esp + 0x18 ]
mov [ esp + 0xb4 ] 0xa
call sub_42e37f
lea ecx [ esp + 0x74 ]
mov [ esp + 0xb4 ] 0x3
call sub_42d0bf
lea ecx [ esp + 0x2c ]
mov [ esp + 0xb4 ] 0x2
call sub_42d0bf
lea ecx [ esp + 0x54 ]
mov [ esp + 0xb4 ] 0x1
call sub_42d0bf
lea ecx [ esp + 0x64 ]
mov [ esp + 0xb4 ] 0x0
call sub_42d0bf
lea ecx [ esp + 0x3c ]
mov [ esp + 0xb4 ] 0xffffffff
call sub_42d0bf
mov al 0x1
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x40 ]
push eax
push ecx
call sub_42d1ba
mov eax [ esp + 0x94 ]
test eax eax
je r-xdata
mov edx [ esp + 0x58 ]
push eax
push edx
call sub_42d1ba
lea ecx [ esp + 0x18 ]
call sub_42e37f
mov eax [ esp + 0x6c ]
push 0x5
push eax
call [ GetCurrentObject@IAT ]
push eax
call sub_42e313
test eax eax
mov [ esp + 0x28 ] eax
je r-xdata
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0xac ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xa8
retn 0x8
push 0x3
lea ecx [ esp + 0x30 ]
call sub_42d3ff
mov edx [ esp + 0x40 ]
lea eax [ esp + 0x3c ]
neg eax
sbb eax eax
push 0x8800c6
and eax edx
mov edx [ esp + 0x54 ]
push edx
mov ecx [ ebp + 0x34 ]
push [ esp + 0x54 ]
mov ebp [ ebp + 0x30 ]
push 0x0
push 0x0
push eax
mov eax [ esp + 0x48 ]
push edx
mov edx [ esp + 0x68 ]
push edx
push ecx
push ebp
push eax
call [ StretchBlt@IAT ]
mov ecx [ esp + 0x78 ]
lea eax [ esp + 0x74 ]
neg eax
sbb eax eax
push 0xee0086
and eax ecx
mov ecx [ esp + 0x34 ]
push 0x0
push 0x0
push eax
push esi
push edi
push 0x0
push 0x0
push ecx
call ebx
mov eax [ esp + 0x88 ]
test eax eax
je r-xdata
push 0x0
push eax
lea ecx [ esp + 0x34 ]
call sub_42d324
mov ecx [ esp + 0x30 ]
mov [ esp + 0x28 ] eax
push ecx
call [ RealizePalette@IAT ]
mov edx [ esp + 0x78 ]
push eax
push edx
call sub_42d1ba
lea ecx [ esp + 0x20 ]
call sub_42e37f
mov ecx [ esp + 0x30 ]
lea eax [ esp + 0x2c ]
neg eax
sbb eax eax
push 0xcc0020
and eax ecx
push 0x0
push 0x0
push eax
mov eax [ esp + 0x78 ]
push esi
push edi
push 0x0
push 0x0
push eax
call ebx
mov ecx [ esp + 0x28 ]
push 0x0
push ecx
lea ecx [ esp + 0x34 ]
call sub_42d324
mov eax [ esp + 0x98 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
mov edx [ esp + 0x30 ]
push eax
push edx
call sub_42d1ba
lea ecx [ esp + 0x10 ]
call sub_42e37f
mov ebx [ esp + 0x8c ]
jmp r-xdata
mov eax [ eax + 0x4 ]
test ebx ebx
jne r-xdata
sub_403fe0
push 0xffffffff
push sub_43d528
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ esp ] ecx
mov [ ecx ] r--data
mov [ esp + 0xc ] 0x0
call sub_42e37f
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404030
push esi
mov esi ecx
call j_sub_403460
mov ecx esi
call j_sub_403530
test al al
je r-xdata
mov al 0x1
pop esi
retn
mov eax [ esi + 0x1c ]
push 0x1
push 0x0
push eax
call [ InvalidateRect@IAT ]
sub_404070
push 0xffffffff
push sub_43d573
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push ebx
push ebp
push esi
push edi
lea ecx [ esp + 0x28 ]
call sub_42cf8a
xor edi edi
mov [ esp + 0x20 ] r--data
mov [ esp + 0x40 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x18 ] r--data
mov bl 0x2
push 0x50
mov [ esp + 0x44 ] bl
call sub_4250b0
add esp 0x4
mov [ esp + 0x10 ] eax
cmp eax edi
mov [ esp + 0x40 ] 0x3
je r-xdata
xor esi esi
mov ecx eax
call j_sub_4015a0
mov esi eax
jmp r-xdata
mov eax [ eax + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x50 ]
mov [ esi + 0x30 ] eax
mov eax [ esp + 0x48 ]
cmp eax edi
mov [ esp + 0x40 ] bl
mov [ esi + 0x20 ] 0x1
mov [ esi + 0x34 ] ecx
mov [ esi + 0x24 ] 0xff00ff
jne r-xdata
mov ecx [ esp + 0x2c ]
push ebp
push ecx
call sub_42d1ba
push 0xff00ff
mov ebp eax
call [ CreateSolidBrush@IAT ]
push eax
lea ecx [ esp + 0x1c ]
call sub_42e328
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x28 ]
push edx
call sub_42d253
mov [ esp + 0x48 ] eax
mov eax [ esp + 0x5c ]
push eax
push 0x1
push 0x0
call [ CreatePen@IAT ]
push eax
lea ecx [ esp + 0x24 ]
call sub_42e328
lea ecx [ esp + 0x20 ]
push ecx
lea ecx [ esp + 0x2c ]
call sub_42d20d
mov edx [ esp + 0x2c ]
push edi
push ebx
push 0x0
push 0x0
push edx
mov [ esp + 0x60 ] eax
call [ Rectangle@IAT ]
mov ecx [ esi + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
push edi
push ebx
push ecx
call [ SetBitmapDimensionEx@IAT ]
mov edx [ esp + 0x48 ]
lea ecx [ esp + 0x28 ]
push edx
call sub_42d253
mov eax [ esp + 0x4c ]
lea ecx [ esp + 0x28 ]
push eax
call sub_42d20d
lea ecx [ esp + 0x18 ]
call sub_42e37f
lea ecx [ esp + 0x20 ]
call sub_42e37f
test ebp ebp
je r-xdata
mov ebp [ ebp + 0x4 ]
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x2c ]
call sub_42d041
mov edx [ esp + 0x48 ]
mov edi [ esp + 0x58 ]
mov ebx [ esp + 0x54 ]
push edi
mov eax [ edx + 0x4 ]
push ebx
push eax
lea ebp [ esi + 0x40 ]
call [ CreateCompatibleBitmap@IAT ]
push eax
mov ecx ebp
call sub_42e328
test ebp ebp
je r-xdata
mov ecx [ esp + 0x2c ]
push ebp
push ecx
call sub_42d1ba
mov edi r--data
mov [ esp + 0x18 ] edi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x40 ] 0x4
call sub_42e37f
mov [ esp + 0x20 ] edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x40 ] 0x5
call sub_42e37f
lea ecx [ esp + 0x28 ]
mov [ esp + 0x40 ] 0xffffffff
call sub_42d0bf
mov ecx [ esp + 0x38 ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x34
retn 0x18
mov ebp [ ebp + 0x4 ]
sub_404310
push 0xffffffff
push sub_43d598
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ esp ] ecx
mov [ ecx ] r--data
mov [ esp + 0xc ] 0x0
call sub_42e37f
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404390
push 0xffffffff
push sub_43d5b8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ esp ] ecx
mov [ ecx ] r--data
mov [ esp + 0xc ] 0x0
call sub_42e37f
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404400
push 0xffffffff
push sub_43d604
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xbc
push ebx
push ebp
push esi
push edi
mov edi ecx
push edi
lea ecx [ esp + 0x7c ]
mov [ esp + 0x38 ] edi
call sub_42e1e8
xor esi esi
lea ecx [ esp + 0x3c ]
mov [ esp + 0xd4 ] esi
call sub_42cf8a
mov [ esp + 0x28 ] esi
mov [ esp + 0x24 ] r--data
lea eax [ esp + 0x24 ]
lea ecx [ edi + 0x3c ]
xor ebx ebx
push eax
push ecx
mov [ esp + 0xdc ] 0x2
mov [ esp + 0x1b ] 0x0
mov [ esp + 0x34 ] ebx
call j_sub_401a50
mov eax [ edi + 0x1c ]
add esp 0x8
lea edx [ esp + 0x64 ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ebp [ esp + 0x7c ]
lea eax [ esp + 0x78 ]
neg eax
sbb eax eax
and eax ebp
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x40 ]
call sub_42d041
mov [ esp + 0x30 ] esi
mov [ esp + 0x38 ] esi
mov ebx [ esp + 0x28 ]
lea eax [ esp + 0x24 ]
neg eax
sbb eax eax
and eax ebx
push eax
mov eax [ esp + 0x44 ]
push eax
call sub_42d1ba
mov ecx [ esp + 0x70 ]
mov edi [ esp + 0x68 ]
mov edx [ esp + 0x6c ]
mov ebx [ esp + 0x64 ]
mov ebp [ esp + 0x40 ]
mov esi eax
lea eax [ esp + 0x3c ]
sub ecx edi
sub edx ebx
push 0xcc0020
neg eax
sbb eax eax
push 0x0
and eax ebp
push 0x0
push eax
push ecx
mov ecx [ esp + 0x90 ]
push edx
push edi
push ebx
push ecx
call [ BitBlt@IAT ]
test esi esi
je r-xdata
mov ecx [ edi + 0x4c ]
sub ecx eax
mov eax 0x66666667
imul ecx
mov eax [ esp + 0x30 ]
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp eax edx
jae r-xdata
mov edx [ esp + 0x40 ]
push esi
push edx
call sub_42d1ba
mov [ esp + 0x24 ] r--data
lea ecx [ esp + 0x24 ]
mov [ esp + 0xd4 ] 0x4
call sub_42e37f
lea ecx [ esp + 0x3c ]
mov [ esp + 0xd4 ] 0x0
call sub_42d0bf
lea ecx [ esp + 0x78 ]
mov [ esp + 0xd4 ] 0xffffffff
call sub_42e25a
mov ecx [ esp + 0xcc ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xc8
retn
mov esi [ esi + 0x4 ]
mov eax [ edi + 0x48 ]
add esi eax
mov al [ esp + 0x13 ]
test al al
je r-xdata
cmp [ esi + 0x13 ] 0x1
jne r-xdata
mov al [ esi + 0x10 ]
test al al
je r-xdata
cmp [ esi + 0x39 ] 0x1
jne r-xdata
lea eax [ esp + 0x24 ]
push esi
push eax
mov ecx edi
call j_sub_403750
mov al [ esi + 0x14 ]
mov [ esp + 0x2c ] esi
test al al
jne r-xdata
lea edx [ esp + 0x14 ]
push edx
call [ SetRectEmpty@IAT ]
test ebx ebx
je r-xdata
mov ecx [ esp + 0x30 ]
mov esi [ esp + 0x38 ]
mov ebx [ esp + 0x2c ]
inc ecx
add esi 0x50
mov [ esp + 0x30 ] ecx
mov [ esp + 0x38 ] esi
jmp r-xdata
mov edx [ esi + 0x44 ]
lea ecx [ esp + 0x5c ]
push ecx
push edx
call [ GetBitmapDimensionEx@IAT ]
mov eax [ esi + 0x3c ]
mov ecx [ esp + 0x60 ]
mov edx [ esp + 0x5c ]
push eax
mov eax [ esi + 0x34 ]
push ecx
mov ecx [ esi + 0x30 ]
push edx
push eax
lea edx [ esp + 0x88 ]
push ecx
push edx
mov ecx edi
call j_sub_404070
mov esi eax
test esi esi
je r-xdata
mov [ esp + 0x13 ] 0x1
lea eax [ esp + 0x14 ]
mov ecx edi
push eax
push esi
push ebx
call j_sub_403270
test al al
je r-xdata
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
lea eax [ esp + 0x24 ]
push esi
push eax
mov ecx edi
call j_sub_403750
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
push 0x50
call sub_4250b0
add esp 0x4
mov [ esp + 0x74 ] eax
test eax eax
mov [ esp + 0xd4 ] 0x3
je r-xdata
xor edi edi
push esi
mov ecx eax
call j_sub_4016c0
mov edi eax
jmp r-xdata
xor eax eax
mov eax [ esp + 0x54 ]
cmp [ esp + 0x4c ] eax
jge r-xdata
or eax 0xffffffff
mov [ esp + 0xd4 ] 0x2
mov [ edi + 0x28 ] eax
mov [ edi + 0x2c ] eax
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x4c ]
mov [ edi + 0x30 ] ecx
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x2c ]
mov [ edi + 0x34 ] edx
mov ebp [ esp + 0x1c ]
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
sub ebp ebx
mov ebx [ esp + 0x20 ]
push eax
sub ebx edx
mov edx [ ecx + 0x44 ]
push edx
call [ GetBitmapDimensionEx@IAT ]
mov ecx [ esi + 0x44 ]
lea eax [ esp + 0x54 ]
push eax
push ecx
call [ GetBitmapDimensionEx@IAT ]
mov edx [ esp + 0x2c ]
mov ecx [ esi + 0x30 ]
cmp [ edx + 0x30 ] ecx
jl r-xdata
xor eax eax
mov eax [ esp + 0x58 ]
mov edx [ esp + 0x50 ]
cmp edx eax
jge r-xdata
sub eax ebp
jmp r-xdata
cmp eax ebp
jle r-xdata
mov edi [ esp + 0x34 ]
mov edx [ edi ]
push 0x1
mov ecx edi
call [ edx ]
sub eax ebx
jmp r-xdata
cmp eax ebx
jle r-xdata
add ebp eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] ebp
mov ecx [ esi + 0x34 ]
cmp [ edx + 0x34 ] ecx
jl r-xdata
mov eax [ esp + 0x14 ]
sub eax ecx
jmp r-xdata
mov [ esp + 0x18 ] eax
add ebx eax
lea edx [ esp + 0x78 ]
lea eax [ esp + 0x14 ]
push edx
lea ecx [ edi + 0x40 ]
push eax
lea edx [ esi + 0x40 ]
push ecx
push edx
mov [ esp + 0x30 ] ebx
call j_sub_401bb0
mov ecx [ esp + 0x44 ]
add esp 0x10
lea eax [ esp + 0x24 ]
push edi
push eax
call j_sub_403750
test edi edi
je r-xdata
mov eax [ esp + 0x18 ]
sub eax ecx
jmp r-xdata
sub_4048b0
push 0xffffffff
push sub_43d628
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ esp ] ecx
mov [ ecx ] r--data
mov [ esp + 0xc ] 0x0
call sub_42e37f
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404900
push ebx
push edi
mov edi ecx
xor bl bl
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
mov ecx edi
call sub_4215d1
pop edi
pop ebx
retn 0xc
mov ecx [ edi + 0x4c ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
jne r-xdata
mov eax [ edi + 0x48 ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ edi + 0x4c ]
sub esi 0x50
cmp esi eax
jb r-xdata
mov al [ edi + 0x54 ]
test al al
je r-xdata
mov eax [ esp + 0x14 ]
and eax 0x1
mov [ esp + 0x14 ] eax
mov ecx edi
call sub_4215d1
pop esi
pop ebp
pop edi
pop ebx
retn 0xc
mov al [ edi + 0x56 ]
test al al
jne r-xdata
mov ecx [ edi + 0x48 ]
sub esi 0x50
cmp esi ecx
jae r-xdata
cmp [ esi + 0x13 ] 0x1
je r-xdata
mov esi [ edi + 0x4c ]
mov eax [ edi + 0x48 ]
sub esi 0x50
cmp esi eax
jb r-xdata
test eax eax
je r-xdata
test bl bl
je r-xdata
mov [ edi + 0x56 ] 0x1
mov eax [ esi + 0x18 ]
mov ebx [ esi + 0x30 ]
mov edx [ esi + 0x1c ]
mov ecx ebp
cmp ebp eax
sub ecx eax
mov eax [ esp + 0x1c ]
add ebx ecx
cmp eax edx
mov [ esi + 0x30 ] ebx
mov ebx [ esi + 0x18 ]
sub eax edx
mov edx [ esi + 0x34 ]
add edx eax
add ebx ecx
mov [ esi + 0x34 ] edx
mov edx [ esi + 0x1c ]
add edx eax
push eax
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] edx
push ecx
mov ecx [ esi + 0x4c ]
push ecx
call [ OffsetRgn@IAT ]
mov eax [ esp + 0x14 ]
mov bl 0x1
cmp [ esi + 0x39 ] 0x1
jne r-xdata
lea ecx [ edi + 0x58 ]
call sub_42496a
mov edx [ edi + 0x78 ]
push 0x0
push 0x0
push 0x41c
push edx
call [ SendMessageA@IAT ]
mov ebx [ PtInRegion@IAT ]
mov edx [ edi + 0x1c ]
push 0x1
push 0x0
push edx
call [ InvalidateRect@IAT ]
mov eax [ edi + 0x48 ]
sub esi 0x50
cmp esi eax
jae r-xdata
cmp [ esi + 0x11 ] 0x1
jne r-xdata
mov al [ esi + 0x10 ]
test al al
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esi + 0x4c ]
push eax
push ebp
push ecx
call ebx
test eax eax
jne r-xdata
mov edx [ esi + 0xc ]
lea eax [ esi + 0xc ]
mov ecx [ edx - 0x8 ]
test ecx ecx
je r-xdata
lea esi [ edi + 0x58 ]
push eax
mov ecx esi
call sub_424b18
mov eax [ esi ]
push 0x0
push edi
push eax
lea ecx [ edi + 0x5c ]
call sub_41cc6e
mov ecx [ edi + 0x78 ]
push 0x0
push 0x0
push 0x41d
push ecx
call [ SendMessageA@IAT ]
mov ecx edi
call sub_4215d1
pop esi
pop ebp
pop edi
pop ebx
retn 0xc
sub_404b00
push edi
mov edi ecx
mov eax [ edi + 0x48 ]
test eax eax
je r-xdata
mov ecx edi
call sub_4215d1
pop edi
retn 0xc
mov ecx [ edi + 0x4c ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
jne r-xdata
mov eax [ edi + 0x48 ]
push ebx
push ebp
push esi
mov esi [ edi + 0x4c ]
sub esi 0x50
cmp esi eax
jb r-xdata
mov ecx edi
call j_sub_404030
mov ecx edi
call sub_4215d1
pop esi
pop ebp
pop ebx
pop edi
retn 0xc
mov ebp [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
mov eax [ edi + 0x48 ]
sub esi 0x50
cmp esi eax
jae r-xdata
cmp [ esi + 0x11 ] 0x1
jne r-xdata
mov al [ esi + 0x10 ]
test al al
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x4c ]
push ebx
push ebp
push ecx
call [ PtInRegion@IAT ]
test eax eax
jne r-xdata
mov al [ esi + 0x12 ]
test al al
je r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
mov [ esi + 0x18 ] ebp
mov [ esi + 0x1c ] ebx
mov [ esi + 0x13 ] 0x1
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x39 ] 0x1
sub_404be0
push ebx
push esi
mov esi ecx
xor ebx ebx
mov eax [ esi + 0x48 ]
cmp eax ebx
je r-xdata
mov ecx esi
call sub_4215d1
pop esi
pop ebx
retn 0xc
mov ecx [ esi + 0x4c ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
je r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ esi + 0x48 ]
sub eax 0x50
cmp eax ecx
jb r-xdata
mov ecx esi
call j_sub_404030
mov cl 0x1
cmp [ eax + 0x39 ] bl
je r-xdata
mov [ eax + 0x10 ] cl
mov [ eax + 0x13 ] bl
mov [ esi + 0x56 ] bl
mov edx [ esi + 0x48 ]
sub eax 0x50
cmp eax edx
jae r-xdata
mov [ eax + 0x39 ] bl
cmp [ eax + 0x13 ] bl
je r-xdata
sub_404ca0
push 0xffffffff
push sub_43d648
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ esp ] ecx
mov [ ecx ] r--data
mov [ esp + 0xc ] 0x0
call sub_42e37f
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404cf0
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov eax [ edi + 0x4 ]
cmp eax 0x200
jb r-xdata
push edi
mov ecx esi
call sub_421f7a
pop edi
pop esi
retn 0x4
cmp eax 0x209
ja r-xdata
mov eax [ edi ]
push eax
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov al [ esi + 0x54 ]
test al al
je r-xdata
mov ecx [ esi + 0x58 ]
mov eax [ ecx - 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0x78 ]
push edi
push 0x0
push 0x407
push edx
call [ SendMessageA@IAT ]
sub_404d70
push esi
mov esi ecx
call sub_423821
mov ecx esi
call j_sub_402380
test al al
je r-xdata
pop esi
retn
mov al [ esi + 0xb4 ]
dec al
neg al
sbb eax eax
and al 0xf6
add eax 0xf
push eax
call [ GetSysColor@IAT ]
mov ecx esi
mov [ esi + 0xb8 ] eax
call j_sub_404030
sub_404dc0
push ebx
push esi
push edi
mov edi ecx
mov ebx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
cmp esi ebx
je r-xdata
mov ecx [ edi + 0x4 ]
push ecx
call sub_4250d9
add esp 0x4
mov [ edi + 0x4 ] 0x0
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax ]
add esi 0x50
cmp esi ebx
jne r-xdata
sub_404e30
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x66666667
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax edx
retn
retn
sub_404e70
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax ]
add esi 0x50
cmp esi edi
jne r-xdata
sub_404eb0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
retn 0xc
push edi
mov edi [ esp + 0x18 ]
push esi
push edi
call j_sub_404fd0
add esi 0x50
add esp 0x8
add edi 0x50
cmp esi ebx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn 0xc
sub_404f00
push edi
mov edi [ esp + 0xc ]
test edi edi
jbe r-xdata
pop edi
retn 0xc
push ebx
mov ebx [ esp + 0x14 ]
push esi
mov esi [ esp + 0x10 ]
push ebx
push esi
call j_sub_404fd0
add esp 0x8
add esi 0x50
dec edi
jne r-xdata
pop esi
pop ebx
sub_404f40
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn
push ebx
mov ebx [ esp + 0x18 ]
push ebx
mov ecx esi
call j_sub_4019a0
add esi 0x50
cmp esi edi
jne r-xdata
pop ebx
sub_404f80
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
sub esi 0x50
sub edi 0x50
push esi
mov ecx edi
call j_sub_4019a0
cmp esi ebx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_404fd0
push 0xffffffff
push sub_43d671
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov ecx [ esp + 0x14 ]
mov [ esp ] ecx
test ecx ecx
mov [ esp + 0xc ] 0x0
je r-xdata
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ esp + 0x18 ]
push eax
call j_sub_4016c0
sub_405060
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_43d6b9
push eax
mov [ fs : 0x0 ] esp
sub esp 0xac
mov eax 0x66666667
push ebx
mov ebx [ esp + 0xc0 ]
push ebp
mov ebp [ esp + 0xc8 ]
mov ecx ebp
push esi
sub ecx ebx
push edi
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
cmp edx 0x10
jg r-xdata
cmp edx 0x10
mov edi ebp
mov esi ebx
jle r-xdata
cmp ebx ebp
je r-xdata
lea edi [ ebx + 0x500 ]
cmp ebx edi
je r-xdata
sub esp 0x50
lea edx [ edi - 0x50 ]
mov ebp esp
mov [ esp + 0x64 ] esp
sub esp 0x50
mov ecx esp
mov [ esp + 0xb4 ] esp
push edx
call j_sub_4016c0
mov ecx edi
mov eax 0x66666667
sub ecx esi
sub esp 0x50
imul ecx
mov eax edx
mov [ esp + 0x108 ] esp
sar eax 0x5
mov ecx eax
mov [ esp + 0x1b4 ] 0x1
shr ecx 0x1f
add eax ecx
mov ecx esp
cdq
sub eax edx
sar eax 0x1
lea edx [ eax + eax * 4 ]
shl edx 0x4
add edx esi
push edx
call j_sub_4016c0
sub esp 0x50
mov [ esp + 0x204 ] 0x2
mov ecx esp
mov [ esp + 0x150 ] esp
push esi
call j_sub_4016c0
push ebp
mov [ esp + 0x208 ] 0xffffffff
call j_sub_405660
add esp 0xf4
push edi
push esi
call j_sub_4057d0
mov ebp eax
mov ecx edi
sub ecx ebp
mov eax 0x66666667
imul ecx
mov ecx edx
mov edx ebp
sar ecx 0x5
mov eax ecx
sub edx esi
shr eax 0x1f
add ecx eax
mov eax 0x66666667
imul edx
sar edx 0x5
mov eax edx
add esp 0x58
shr eax 0x1f
add edx eax
push 0x0
cmp ecx edx
jg r-xdata
mov ecx [ esp + 0xbc ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0xb8
retn
mov edi [ esp + 0xd0 ]
lea ebp [ ebx + 0x50 ]
cmp ebp edi
je r-xdata
mov esi edi
cmp esi ebp
je r-xdata
lea ebp [ ebx + 0x50 ]
cmp ebp edi
je r-xdata
push ebp
push esi
call j_sub_405410
add esp 0xc
mov esi ebp
push edi
push ebp
call j_sub_405410
add esp 0xc
mov edi ebp
jmp r-xdata
push ebp
lea ecx [ esp + 0x20 ]
call j_sub_4016c0
push ebx
lea ecx [ esp + 0x20 ]
mov [ esp + 0xc8 ] 0x0
call j_sub_4019f0
test al al
jne r-xdata
sub esp 0x50
mov ecx esp
mov [ esp + 0x60 ] esp
push esi
call j_sub_4016c0
push esi
call j_sub_4055c0
add esi 0x50
add esp 0x54
cmp esi ebp
jne r-xdata
mov ebp [ esp + 0xd0 ]
push ebp
lea ecx [ esp + 0x70 ]
call j_sub_4016c0
push ebx
lea ecx [ esp + 0x70 ]
mov [ esp + 0xc8 ] 0x3
call j_sub_4019f0
test al al
jne r-xdata
mov ebp [ esp + 0xd0 ]
mov ecx edi
mov eax 0x66666667
sub ecx esi
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp edx 0x10
jg r-xdata
cmp ebx ebp
mov esi ebp
je r-xdata
sub esp 0x50
lea edx [ esp + 0x6c ]
mov ecx esp
mov [ esp + 0x64 ] esp
push edx
call j_sub_4016c0
push ebp
call j_sub_4055c0
add esp 0x54
jmp r-xdata
cmp ebx ebp
mov esi ebp
je r-xdata
sub esp 0x50
lea edx [ esp + 0xbc ]
mov ecx esp
mov [ esp + 0x60 ] esp
push edx
call j_sub_4016c0
push ebp
call j_sub_4055c0
add esp 0x54
jmp r-xdata
lea eax [ esp + 0x1c ]
mov ecx ebx
push eax
call j_sub_4019a0
sub esi 0x50
push esi
lea ecx [ esi + 0x50 ]
call j_sub_4019a0
cmp esi ebx
jne r-xdata
lea ecx [ esp + 0x1c ]
mov [ esp + 0xc4 ] 0xffffffff
call j_sub_401750
add ebp 0x50
cmp ebp edi
jne r-xdata
lea eax [ esp + 0x6c ]
mov ecx ebx
push eax
call j_sub_4019a0
sub esi 0x50
push esi
lea ecx [ esi + 0x50 ]
call j_sub_4019a0
cmp esi ebx
jne r-xdata
lea ecx [ esp + 0x6c ]
mov [ esp + 0xc4 ] 0xffffffff
call j_sub_401750
add ebp 0x50
cmp ebp edi
jne r-xdata
jmp r-xdata
sub_405410
push 0xffffffff
push sub_43d6e0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esp + 0x28 ]
mov ecx edi
mov eax 0x66666667
sub ecx esi
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov ebp edx
cmp ebp 0x10
jle r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
pop ebx
add esp 0x10
retn
sub esp 0x50
lea edx [ edi - 0x50 ]
mov ebx esp
mov [ esp + 0x78 ] esp
sub esp 0x50
mov ecx esp
mov [ esp + 0xc8 ] esp
push edx
call j_sub_4016c0
mov eax ebp
sub esp 0x50
cdq
sub eax edx
mov ecx esp
sar eax 0x1
mov [ esp + 0x114 ] esp
mov [ esp + 0x10c ] 0x0
lea eax [ eax + eax * 4 ]
shl eax 0x4
add eax esi
push eax
call j_sub_4016c0
sub esp 0x50
mov [ esp + 0x15c ] 0x1
mov ecx esp
mov [ esp + 0x150 ] esp
push esi
call j_sub_4016c0
push ebx
mov [ esp + 0x160 ] 0xffffffff
call j_sub_405660
add esp 0xf4
push edi
push esi
call j_sub_4057d0
mov ebp eax
mov ecx edi
sub ecx ebp
mov eax 0x66666667
imul ecx
mov ecx edx
mov eax 0x66666667
sar ecx 0x5
mov edx ecx
add esp 0x58
shr edx 0x1f
add ecx edx
mov edx ebp
sub edx esi
push 0x0
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
cmp ecx edx
jg r-xdata
push ebp
push esi
call j_sub_405410
add esp 0xc
mov esi ebp
push edi
push ebp
call j_sub_405410
add esp 0xc
mov edi ebp
jmp r-xdata
mov ecx edi
mov eax 0x66666667
sub ecx esi
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ebp edx
cmp ebp 0x10
jg r-xdata
sub_4055c0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_43d6f8
push eax
mov [ fs : 0x0 ] esp
push esi
push edi
mov edi [ esp + 0x18 ]
lea ecx [ esp + 0x1c ]
mov [ esp + 0x10 ] 0x0
lea esi [ edi - 0x50 ]
push esi
call j_sub_4019f0
test al al
je r-xdata
lea eax [ esp + 0x1c ]
mov ecx edi
push eax
call j_sub_4019a0
lea ecx [ esp + 0x1c ]
mov [ esp + 0x10 ] 0xffffffff
call j_sub_401750
mov ecx [ esp + 0x8 ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0xc
retn
push esi
mov ecx edi
call j_sub_4019a0
mov edi esi
sub esi 0x50
push esi
lea ecx [ esp + 0x20 ]
call j_sub_4019f0
test al al
jne r-xdata
sub_405660
push 0xffffffff
push sub_43d742
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov [ esp + 0x4 ] 0x0
lea eax [ esp + 0x6c ]
lea ecx [ esp + 0x1c ]
push eax
mov [ esp + 0x14 ] 0x3
call j_sub_4019f0
test al al
je r-xdata
lea eax [ esp + 0xbc ]
lea ecx [ esp + 0x1c ]
push eax
call j_sub_4019f0
test al al
je r-xdata
lea ecx [ esp + 0xbc ]
push ecx
lea ecx [ esp + 0x70 ]
call j_sub_4019f0
test al al
je r-xdata
lea ecx [ esp + 0xbc ]
push ecx
lea ecx [ esp + 0x70 ]
call j_sub_4019f0
test al al
lea eax [ esp + 0xbc ]
jne r-xdata
lea eax [ esp + 0x1c ]
jmp r-xdata
lea edx [ esp + 0xbc ]
lea ecx [ esp + 0x1c ]
push edx
call j_sub_4019f0
test al al
lea eax [ esp + 0xbc ]
jne r-xdata
lea eax [ esp + 0x6c ]
jmp r-xdata
mov esi [ esp + 0x18 ]
push eax
mov ecx esi
call j_sub_4016c0
mov [ esp + 0x4 ] 0x1
lea eax [ esp + 0x6c ]
mov esi [ esp + 0x18 ]
push eax
mov ecx esi
call j_sub_4016c0
mov [ esp + 0x4 ] 0x1
jmp r-xdata
lea eax [ esp + 0x1c ]
lea ecx [ esp + 0x1c ]
mov [ esp + 0x10 ] 0x2
call j_sub_401750
lea ecx [ esp + 0x6c ]
mov [ esp + 0x10 ] 0x1
call j_sub_401750
lea ecx [ esp + 0xbc ]
mov [ esp + 0x10 ] 0x0
call j_sub_401750
mov ecx [ esp + 0x8 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4057d0
push 0xffffffff
push sub_43d770
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
push esi
push edi
mov edi [ esp + 0x6c ]
mov esi [ esp + 0x68 ]
mov [ esp + 0x60 ] 0x0
sub edi 0x50
lea ecx [ esp + 0x70 ]
push edi
call j_sub_4019f0
test al al
je r-xdata
lea ecx [ esp + 0x70 ]
add esi 0x50
push ecx
mov ecx esi
call j_sub_4019f0
test al al
jne r-xdata
cmp edi esi
jbe r-xdata
sub edi 0x50
lea ecx [ esp + 0x70 ]
push edi
call j_sub_4019f0
test al al
jne r-xdata
lea ecx [ esp + 0x70 ]
mov [ esp + 0x60 ] 0xffffffff
call j_sub_401750
mov ecx [ esp + 0x58 ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x5c
retn
push esi
lea ecx [ esp + 0xc ]
call j_sub_4016c0
push edi
mov ecx esi
mov [ esp + 0x64 ] 0x1
call j_sub_4019a0
lea edx [ esp + 0x8 ]
mov ecx edi
push edx
call j_sub_4019a0
lea ecx [ esp + 0x8 ]
mov [ esp + 0x60 ] 0x0
call j_sub_401750
add esi 0x50
jmp r-xdata
lea eax [ esp + 0x70 ]
mov ecx esi
push eax
call j_sub_4019f0
test al al
je r-xdata
sub_405970
push ebp
mov ebp esp
sub esp 0x30
mov eax 0x6c
mov ecx 0x65
mov dl 0x74
mov [ ebp - 0xe ] al
mov [ ebp - 0x26 ] ax
mov [ ebp - 0x1c ] ax
mov [ ebp - 0x1a ] ax
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x2e ] cx
mov [ ebp - 0x28 ] cx
lea eax [ ebp - 0x14 ]
push ebx
mov [ ebp - 0x11 ] dl
mov [ ebp - 0xa ] dl
mov [ ebp - 0x7 ] dl
lea ecx [ ebp - 0x30 ]
mov ebx 0x72
xor edx edx
push eax
push ecx
mov [ ebp - 0x14 ] 0x56
mov [ ebp - 0x13 ] 0x69
mov [ ebp - 0x12 ] bl
mov [ ebp - 0x10 ] 0x75
mov [ ebp - 0xf ] 0x61
mov [ ebp - 0xd ] 0x50
mov [ ebp - 0xc ] bl
mov [ ebp - 0xb ] 0x6f
mov [ ebp - 0x8 ] 0x63
mov [ ebp - 0x6 ] dl
mov [ ebp - 0x30 ] 0x6b
mov [ ebp - 0x2c ] bx
mov [ ebp - 0x2a ] 0x6e
mov [ ebp - 0x24 ] 0x33
mov [ ebp - 0x22 ] 0x32
mov [ ebp - 0x20 ] 0x2e
mov [ ebp - 0x1e ] 0x64
mov [ ebp - 0x18 ] dx
call [ GetModuleHandleW@IAT ]
push eax
call [ GetProcAddress@IAT ]
lea edx [ ebp - 0x4 ]
push edx
push 0x40
push 0x6000
push rw-data
call eax
push ecx
push ebx
lea eax [ rw-data ]
xor ecx ecx
mov bl [ eax + ecx ]
xor bl 0x5
not bl
xor bl 0x67
mov [ eax + ecx ] bl
inc ecx
cmp ecx 0x5f51
jne r-xdata
pop ebx
pop ecx
push 0x0
push rw-data
call [ GetProcessWindowStation@IAT ]
push eax
call [ EnumDesktopsW@IAT ]
pop ebx
mov esp ebp
pop ebp
retn
sub_405bd0
push 0xffffffff
push sub_43d7c2
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20c
push esi
mov esi ecx
call sub_43912a
call j_sub_405970
push 0x0
lea ecx [ esp + 0x8 ]
call j_sub_405e70
lea eax [ esp + 0x4 ]
lea ecx [ esp + 0x4 ]
mov [ esp + 0x218 ] 0x0
mov [ esi + 0x1c ] eax
call sub_4263be
lea ecx [ esp + 0x1d0 ]
mov [ esp + 0x218 ] 0x5
call sub_433ce5
lea ecx [ esp + 0x194 ]
mov [ esp + 0x218 ] 0x4
call sub_433ce5
lea ecx [ esp + 0x158 ]
mov [ esp + 0x218 ] 0x3
call sub_433ce5
lea ecx [ esp + 0x11c ]
mov [ esp + 0x218 ] 0x2
call sub_433ce5
lea ecx [ esp + 0x60 ]
mov [ esp + 0x218 ] 0x1
call j_sub_402070
lea ecx [ esp + 0x4 ]
mov [ esp + 0x218 ] 0xffffffff
call sub_425ef9
mov ecx [ esp + 0x210 ]
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x218
retn
sub_405cf0
push 0xffffffff
push sub_43d81d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x1cc ]
mov [ esp + 0x10 ] 0x4
call sub_433ce5
lea ecx [ esi + 0x190 ]
mov [ esp + 0x10 ] 0x3
call sub_433ce5
lea ecx [ esi + 0x154 ]
mov [ esp + 0x10 ] 0x2
call sub_433ce5
lea ecx [ esi + 0x118 ]
mov [ esp + 0x10 ] 0x1
call sub_433ce5
lea ecx [ esi + 0x5c ]
mov [ esp + 0x10 ] 0x0
call j_sub_402070
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_425ef9
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405e70
push 0xffffffff
push sub_43d88b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
push edi
mov esi ecx
push eax
push 0x66
mov [ esp + 0x10 ] esi
call sub_4262ce
lea ecx [ esi + 0x5c ]
mov [ esp + 0x14 ] 0x0
call j_sub_401f10
lea edi [ esi + 0x118 ]
mov [ esp + 0x14 ] 0x1
mov ecx edi
call sub_421249
mov [ edi ] r--data
lea edi [ esi + 0x154 ]
mov [ esp + 0x14 ] 0x2
mov ecx edi
call sub_421249
mov [ edi ] r--data
lea edi [ esi + 0x190 ]
mov [ esp + 0x14 ] 0x3
mov ecx edi
call sub_421249
mov [ edi ] r--data
lea edi [ esi + 0x1cc ]
mov [ esp + 0x14 ] 0x4
mov ecx edi
call sub_421249
mov [ edi ] r--data
mov [ esp + 0x14 ] 0x5
mov [ esi ] r--data
call sub_439511
call sub_439511
mov eax [ eax + 0xc ]
push 0x80
push eax
call [ LoadIconA@IAT ]
mov ecx [ esp + 0xc ]
mov [ esi + 0x208 ] eax
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_405fc0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x5c ]
push eax
push 0x3eb
push edi
call sub_431892
lea ecx [ esi + 0x118 ]
push ecx
push 0x3e8
push edi
call sub_431892
lea edx [ esi + 0x154 ]
push edx
push 0x3e9
push edi
call sub_431892
lea eax [ esi + 0x190 ]
push eax
push 0x3ea
push edi
call sub_431892
add esi 0x1cc
push esi
push 0x3ed
push edi
call sub_431892
pop edi
pop esi
retn 0x4
sub_406050
push 0xffffffff
push sub_43d8fd
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov edi ecx
push 0x50
mov [ esp + 0x14 ] edi
call sub_4250b0
add esp 0x4
mov [ esp + 0x14 ] eax
xor esi esi
cmp eax esi
mov [ esp + 0x20 ] esi
je r-xdata
push rw-data
lea ecx [ esi + 0xc ]
mov [ esp + 0x24 ] 0xffffffff
mov [ esi + 0x4 ] 0x64
call sub_424b68
call sub_439511
mov eax [ eax + 0xc ]
mov ebp [ LoadBitmapA@IAT ]
push 0x82
push eax
call ebp
push eax
lea ecx [ esi + 0x40 ]
call sub_42e328
add edi 0x5c
push esi
mov ecx edi
call j_sub_402400
test esi esi
mov ebx 0x1
je r-xdata
mov ecx eax
call j_sub_4015a0
mov esi eax
push 0x50
call sub_4250b0
add esp 0x4
mov [ esp + 0x14 ] eax
test eax eax
mov [ esp + 0x20 ] ebx
je r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax ]
xor esi esi
mov ecx eax
call j_sub_4015a0
mov esi eax
jmp r-xdata
push 0x50
call sub_4250b0
add esp 0x4
mov [ esp + 0x14 ] eax
test eax eax
mov [ esp + 0x20 ] 0x2
je r-xdata
mov edx [ esi ]
push ebx
mov ecx esi
call [ edx ]
push rw-data
lea ecx [ esi + 0xc ]
mov [ esp + 0x24 ] 0xffffffff
mov [ esi + 0x4 ] 0x65
call sub_424b68
call sub_439511
mov eax [ eax + 0xc ]
push 0x81
push eax
call ebp
push eax
lea ecx [ esi + 0x40 ]
call sub_42e328
push esi
mov ecx edi
call j_sub_402400
test esi esi
je r-xdata
xor esi esi
mov ecx eax
call j_sub_4015a0
mov esi eax
jmp r-xdata
push 0x50
call sub_4250b0
add esp 0x4
mov [ esp + 0x14 ] eax
test eax eax
mov [ esp + 0x20 ] 0x3
je r-xdata
mov edx [ esi ]
push ebx
mov ecx esi
call [ edx ]
push rw-data
lea ecx [ esi + 0xc ]
mov [ esp + 0x24 ] 0xffffffff
mov [ esi + 0x4 ] 0x66
call sub_424b68
mov [ esi + 0x20 ] bl
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] 0xc8
mov [ esi + 0x34 ] 0xd2
mov [ esi + 0x12 ] bl
mov [ esi + 0x38 ] bl
mov [ esi + 0x3c ] 0xff00
call sub_439511
mov eax [ eax + 0xc ]
push 0x86
push eax
call ebp
push eax
lea ecx [ esi + 0x40 ]
call sub_42e328
push esi
mov ecx edi
call j_sub_402ee0
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
push eax
mov eax [ esi + 0x4c ]
push ecx
push eax
call [ OffsetRgn@IAT ]
push esi
mov ecx edi
call j_sub_402400
test esi esi
je r-xdata
xor esi esi
mov ecx eax
call j_sub_4015a0
mov esi eax
jmp r-xdata
push 0x50
call sub_4250b0
add esp 0x4
mov [ esp + 0x14 ] eax
test eax eax
mov [ esp + 0x20 ] 0x4
je r-xdata
mov edx [ esi ]
push ebx
mov ecx esi
call [ edx ]
push rw-data
lea ecx [ esi + 0xc ]
mov [ esp + 0x24 ] 0xffffffff
mov [ esi + 0x4 ] 0x67
call sub_424b68
mov [ esi + 0x20 ] bl
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] 0xc8
mov [ esi + 0x34 ] 0xd2
mov [ esi + 0x12 ] bl
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] bl
mov [ esi + 0x3c ] 0xffff
call sub_439511
mov eax [ eax + 0xc ]
push 0x83
push eax
call ebp
push eax
lea ecx [ esi + 0x40 ]
call sub_42e328
push esi
mov ecx edi
call j_sub_402ee0
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
push eax
mov eax [ esi + 0x4c ]
push ecx
push eax
call [ OffsetRgn@IAT ]
push esi
mov ecx edi
call j_sub_402400
test esi esi
je r-xdata
xor esi esi
mov ecx eax
call j_sub_4015a0
mov esi eax
jmp r-xdata
push 0x50
call sub_4250b0
add esp 0x4
mov [ esp + 0x14 ] eax
test eax eax
mov [ esp + 0x20 ] 0x5
je r-xdata
mov edx [ esi ]
push ebx
mov ecx esi
call [ edx ]
push rw-data
lea ecx [ esi + 0xc ]
mov [ esp + 0x24 ] 0xffffffff
mov [ esi + 0x4 ] 0x68
call sub_424b68
mov [ esi + 0x20 ] bl
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] 0x96
mov [ esi + 0x34 ] 0xe6
mov [ esi + 0x12 ] bl
mov [ esi + 0x38 ] bl
call sub_439511
mov eax [ eax + 0xc ]
push 0x85
push eax
call ebp
push eax
lea ecx [ esi + 0x40 ]
call sub_42e328
push esi
mov ecx edi
call j_sub_402ee0
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
push eax
mov eax [ esi + 0x4c ]
push ecx
push eax
call [ OffsetRgn@IAT ]
push esi
mov ecx edi
call j_sub_402400
test esi esi
je r-xdata
xor esi esi
mov ecx eax
call j_sub_4015a0
mov esi eax
jmp r-xdata
push 0x50
call sub_4250b0
add esp 0x4
mov [ esp + 0x14 ] eax
test eax eax
mov [ esp + 0x20 ] 0x6
je r-xdata
mov edx [ esi ]
push ebx
mov ecx esi
call [ edx ]
push rw-data
lea ecx [ esi + 0xc ]
mov [ esp + 0x24 ] 0xffffffff
mov [ esi + 0x4 ] 0x6a
call sub_424b68
mov [ esi + 0x20 ] bl
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] 0xd2
mov [ esi + 0x34 ] 0xde
mov [ esi + 0x12 ] bl
mov [ esi + 0x38 ] bl
call sub_439511
mov eax [ eax + 0xc ]
push 0x87
push eax
call ebp
push eax
lea ecx [ esi + 0x40 ]
call sub_42e328
push esi
mov ecx edi
call j_sub_402ee0
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
push eax
mov eax [ esi + 0x4c ]
push ecx
push eax
call [ OffsetRgn@IAT ]
push esi
mov ecx edi
call j_sub_402400
test esi esi
je r-xdata
xor esi esi
mov ecx eax
call j_sub_4015a0
mov esi eax
jmp r-xdata
mov esi [ esp + 0x10 ]
mov ecx esi
call j_sub_406610
mov ecx esi
call j_sub_406aa0
mov ecx esi
call j_sub_406ea0
mov ecx edi
call j_sub_404030
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax ]
push rw-data
lea ecx [ esi + 0xc ]
mov [ esp + 0x24 ] 0xffffffff
mov [ esi + 0x4 ] 0x69
call sub_424b68
mov [ esi + 0x20 ] bl
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] 0xcf
mov [ esi + 0x34 ] 0xc5
mov [ esi + 0x12 ] bl
mov [ esi + 0x38 ] bl
call sub_439511
mov eax [ eax + 0xc ]
push 0x84
push eax
call ebp
push eax
lea ecx [ esi + 0x40 ]
call sub_42e328
push esi
mov ecx edi
call j_sub_402ee0
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x4c ]
push eax
push ecx
push edx
call [ OffsetRgn@IAT ]
push esi
mov ecx edi
call j_sub_402400
test esi esi
je r-xdata
sub_406610
push 0xffffffff
push sub_43d953
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push ebp
push esi
push edi
mov edi ecx
push 0x50
mov [ esp + 0x28 ] edi
call sub_4250b0
add esp 0x4
mov [ esp + 0x20 ] eax
xor ebx ebx
cmp eax ebx
mov [ esp + 0x70 ] ebx
je r-xdata
xor esi esi
mov ecx eax
call j_sub_4015a0
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x4 ]
xor eax eax
jmp r-xdata
push rw-data
lea ecx [ esi + 0xc ]
mov [ esp + 0x74 ] 0xffffffff
mov [ esi + 0x4 ] 0x6b
call sub_424b68
mov [ esi + 0x20 ] 0x1
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
mov eax [ edi + 0x78 ]
push eax
call [ GetDC@IAT ]
push eax
call sub_42d02c
mov ebp eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0x14 ] ebp
call sub_42cf8a
mov eax r--data
mov [ esp + 0x70 ] 0x1
mov [ esp + 0x2c ] ebx
mov [ esp + 0x28 ] eax
mov [ esp + 0x34 ] ebx
mov [ esp + 0x30 ] eax
mov edx [ edi + 0x78 ]
lea ecx [ esp + 0x48 ]
push ecx
push edx
mov [ esp + 0x78 ] 0x3
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x50 ]
mov eax [ esp + 0x48 ]
sub ecx eax
mov eax 0x88888889
imul ecx
add edx ecx
mov ecx [ esp + 0x54 ]
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esp + 0x4c ]
sub ecx eax
mov eax 0x88888889
mov [ esp + 0x10 ] edx
imul ecx
add edx ecx
mov [ esi + 0x24 ] 0xffffff
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add edx ecx
cmp ebp ebx
mov [ esp + 0x18 ] edx
jne r-xdata
mov edi [ edi + 0x4 ]
xor edi edi
jmp r-xdata
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x5c ]
call sub_42d041
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x4c ]
mov edi [ esp + 0x48 ]
mov edx [ ebp + 0x4 ]
sub eax ecx
mov ecx [ esp + 0x50 ]
sub ecx edi
push eax
push ecx
push edx
lea edi [ esi + 0x40 ]
call [ CreateCompatibleBitmap@IAT ]
push eax
mov ecx edi
call sub_42e328
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x18 ]
mov edi 0x1e
cmp eax ebx
jle r-xdata
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x5c ]
push edi
push eax
call sub_42d1ba
mov ecx [ esp + 0x54 ]
mov edi [ esp + 0x4c ]
mov edx [ esp + 0x50 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x48 ]
sub ecx edi
push 0xffffff
sub edx eax
push ecx
push edx
push ebx
push ebx
lea ecx [ esp + 0x6c ]
call sub_43439b
mov edi [ CreatePen@IAT ]
push 0xc0c0c0
push 0x2
push ebx
call edi
push eax
lea ecx [ esp + 0x2c ]
call sub_42e328
push ebx
push 0x1
push ebx
call edi
push eax
lea ecx [ esp + 0x34 ]
call sub_42e328
lea eax [ esp + 0x28 ]
lea ecx [ esp + 0x58 ]
push eax
call sub_42d20d
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
cmp eax ebx
mov edi 0x1e
jle r-xdata
mov ecx [ esp + 0x1c ]
push ecx
lea ecx [ esp + 0x5c ]
call sub_42d20d
mov eax [ esp + 0x20 ]
cmp eax ebx
jne r-xdata
mov [ esp + 0x10 ] eax
push ebx
lea ecx [ esp + 0x3c ]
push edi
push ecx
lea ecx [ esp + 0x64 ]
call sub_42d8c6
mov edx [ esp + 0x54 ]
mov ecx [ esp + 0x4c ]
sub edx ecx
lea ecx [ esp + 0x58 ]
push edx
push edi
call sub_42d912
lea eax [ esp + 0x30 ]
lea ecx [ esp + 0x58 ]
push eax
call sub_42d20d
lea ebp [ edi + 0x1 ]
push ebx
lea ecx [ esp + 0x44 ]
push ebp
push ecx
lea ecx [ esp + 0x64 ]
call sub_42d8c6
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x4c ]
sub edx eax
lea ecx [ esp + 0x58 ]
push edx
push ebp
call sub_42d912
lea eax [ esp + 0x28 ]
lea ecx [ esp + 0x58 ]
push eax
call sub_42d20d
mov eax [ esp + 0x10 ]
add edi 0x1e
dec eax
mov [ esp + 0x10 ] eax
jne r-xdata
mov ebp [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
xor eax eax
jmp r-xdata
push edi
lea ecx [ esp + 0x44 ]
push ebx
push ecx
lea ecx [ esp + 0x64 ]
call sub_42d8c6
mov edx [ esp + 0x50 ]
mov eax [ esp + 0x48 ]
sub edx eax
push edi
push edx
lea ecx [ esp + 0x60 ]
call sub_42d912
lea eax [ esp + 0x30 ]
lea ecx [ esp + 0x58 ]
push eax
call sub_42d20d
lea ebp [ edi + 0x1 ]
lea ecx [ esp + 0x38 ]
push ebp
push ebx
push ecx
lea ecx [ esp + 0x64 ]
call sub_42d8c6
mov edx [ esp + 0x50 ]
mov eax [ esp + 0x48 ]
sub edx eax
push ebp
push edx
lea ecx [ esp + 0x60 ]
call sub_42d912
lea eax [ esp + 0x28 ]
lea ecx [ esp + 0x58 ]
push eax
call sub_42d20d
mov eax [ esp + 0x10 ]
add edi 0x1e
dec eax
mov [ esp + 0x10 ] eax
jne r-xdata
mov ebp [ esp + 0x14 ]
mov ecx [ ebp + 0x4 ]
mov edx [ edi + 0x78 ]
push ecx
push edx
call [ ReleaseDC@IAT ]
mov esi r--data
mov [ esp + 0x30 ] esi
lea ecx [ esp + 0x30 ]
mov [ esp + 0x70 ] 0x4
call sub_42e37f
mov [ esp + 0x28 ] esi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x70 ] 0x5
call sub_42e37f
lea ecx [ esp + 0x58 ]
mov [ esp + 0x70 ] 0xffffffff
call sub_42d0bf
mov ecx [ esp + 0x68 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x64
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov edx [ esp + 0x5c ]
push eax
push edx
call sub_42d1ba
lea ecx [ esp + 0x28 ]
call sub_42e37f
lea ecx [ esp + 0x30 ]
call sub_42e37f
mov edi [ esp + 0x24 ]
push esi
mov [ esi + 0x24 ] 0xffffff
lea ecx [ edi + 0x5c ]
call j_sub_402400
cmp esi ebx
je r-xdata
sub_406aa0
push 0xffffffff
push sub_43d9a3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x40
push ebx
push ebp
push esi
push edi
mov esi ecx
push 0x50
mov [ esp + 0x14 ] esi
call sub_4250b0
add esp 0x4
mov [ esp + 0x1c ] eax
xor ebp ebp
cmp eax ebp
mov [ esp + 0x58 ] ebp
je r-xdata
xor edi edi
mov ecx eax
call j_sub_4015a0
mov edi eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push rw-data
lea ecx [ edi + 0xc ]
mov [ esp + 0x5c ] 0xffffffff
mov [ edi + 0x4 ] 0x6c
call sub_424b68
mov [ edi + 0x20 ] 0x1
mov [ edi + 0x24 ] 0xff00ff
mov [ edi + 0x30 ] ebp
mov [ edi + 0x34 ] ebp
mov eax [ esi + 0x78 ]
push eax
call [ GetDC@IAT ]
push eax
call sub_42d02c
mov ebx eax
lea ecx [ esp + 0x40 ]
mov [ esp + 0x1c ] ebx
call sub_42cf8a
mov edx [ esi + 0x78 ]
lea ecx [ esp + 0x30 ]
push ecx
push edx
mov [ esp + 0x60 ] 0x1
call [ GetClientRect@IAT ]
cmp ebx ebp
jne r-xdata
mov esi [ esi + 0x4 ]
xor esi esi
jmp r-xdata
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x44 ]
call sub_42d041
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x34 ]
mov esi [ esp + 0x30 ]
sub eax ecx
mov ecx [ esp + 0x38 ]
push eax
mov eax [ ebx + 0x4 ]
sub ecx esi
push ecx
push eax
lea esi [ edi + 0x40 ]
call [ CreateCompatibleBitmap@IAT ]
push eax
mov ecx esi
call sub_42e328
cmp esi ebp
jne r-xdata
mov ebx [ ebx + 0x4 ]
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x44 ]
push esi
push ecx
call sub_42d1ba
mov edx [ esp + 0x3c ]
mov ecx [ esp + 0x30 ]
mov ebx eax
mov eax [ esp + 0x34 ]
sub edx eax
mov eax [ esp + 0x38 ]
push ebp
sub eax ecx
push edx
push eax
push ebp
push ebp
lea ecx [ esp + 0x54 ]
call sub_43439b
mov [ esp + 0x2c ] ebp
mov [ esp + 0x28 ] r--data
mov [ esp + 0x24 ] ebp
mov [ esp + 0x20 ] r--data
push 0xff00ff
push 0x1
push ebp
mov [ esp + 0x64 ] 0x3
call [ CreatePen@IAT ]
push eax
lea ecx [ esp + 0x2c ]
call sub_42e328
lea ecx [ esp + 0x28 ]
push ecx
lea ecx [ esp + 0x44 ]
call sub_42d20d
push 0xff00ff
mov [ esp + 0x1c ] eax
call [ CreateSolidBrush@IAT ]
push eax
lea ecx [ esp + 0x24 ]
call sub_42e328
lea edx [ esp + 0x20 ]
lea ecx [ esp + 0x40 ]
push edx
call sub_42d253
push 0x20
mov [ esp + 0x18 ] eax
call sub_4250b0
mov edx [ esp + 0x34 ]
mov esi eax
mov eax [ esp + 0x3c ]
add esp 0x4
sub eax edx
mov [ esi + 0x4 ] ebp
cdq
sub eax edx
mov [ esi + 0x8 ] ebp
sar eax 0x1
mov [ esi ] eax
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x34 ]
push 0x4
sub eax ecx
mov [ esi + 0xc ] eax
mov ecx [ esp + 0x3c ]
sub ecx [ esp + 0x34 ]
mov [ esi + 0x10 ] ecx
mov edx [ esp + 0x40 ]
sub edx [ esp + 0x38 ]
mov [ esi + 0x14 ] edx
mov eax [ esp + 0x3c ]
mov edx [ esp + 0x34 ]
mov [ esi + 0x1c ] ebp
sub eax edx
cdq
sub eax edx
sar eax 0x1
mov [ esi + 0x18 ] eax
mov eax [ esp + 0x48 ]
push esi
push eax
call [ Polygon@IAT ]
push 0x1
push 0x4
push esi
call [ CreatePolygonRgn@IAT ]
push eax
lea ecx [ edi + 0x48 ]
call sub_42e328
mov ecx [ esp + 0x10 ]
push edi
add ecx 0x5c
call j_sub_402de0
mov eax [ edi + 0x34 ]
mov ecx [ edi + 0x30 ]
mov edx [ edi + 0x4c ]
push eax
push ecx
push edx
call [ OffsetRgn@IAT ]
push esi
call sub_4250d9
mov eax [ esp + 0x18 ]
add esp 0x4
lea ecx [ esp + 0x40 ]
push eax
call sub_42d253
mov ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0x44 ]
call sub_42d20d
cmp ebx ebp
jne r-xdata
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x10 ]
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x78 ]
push ecx
push eax
call [ ReleaseDC@IAT ]
mov esi r--data
mov [ esp + 0x20 ] esi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x58 ] 0x4
call sub_42e37f
mov [ esp + 0x28 ] esi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x58 ] 0x5
call sub_42e37f
lea ecx [ esp + 0x40 ]
mov [ esp + 0x58 ] 0xffffffff
call sub_42d0bf
mov ecx [ esp + 0x50 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x4c
retn
mov edx [ edi ]
push 0x1
mov ecx edi
call [ edx ]
mov edx [ esp + 0x44 ]
push ebx
push edx
call sub_42d1ba
lea ecx [ esp + 0x28 ]
call sub_42e37f
lea ecx [ esp + 0x20 ]
call sub_42e37f
mov eax [ esp + 0x10 ]
push edi
lea ecx [ eax + 0x5c ]
call j_sub_402400
cmp edi ebp
je r-xdata
sub_406e60
mov eax [ esp + 0xc ]
dec eax
js r-xdata
retn 0x10
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
lea edi [ eax + 0x1 ]
mov ecx esi
call ebx
add esi ebp
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
sub_406ea0
push 0xffffffff
push sub_43d9f3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x3c
push ebp
push esi
push edi
mov ebp ecx
push 0x50
mov [ esp + 0x18 ] ebp
call sub_4250b0
add esp 0x4
mov [ esp + 0x10 ] eax
xor edi edi
cmp eax edi
mov [ esp + 0x50 ] edi
je r-xdata
xor esi esi
mov ecx eax
call j_sub_4015a0
mov esi eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push ebx
push rw-data
lea ecx [ esi + 0xc ]
mov [ esp + 0x58 ] 0xffffffff
mov [ esi + 0x4 ] 0x6d
call sub_424b68
mov [ esi + 0x20 ] 0x1
mov [ esi + 0x24 ] 0xff00ff
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov eax [ ebp + 0x78 ]
push eax
call [ GetDC@IAT ]
push eax
call sub_42d02c
mov ebx eax
lea ecx [ esp + 0x3c ]
mov [ esp + 0x14 ] ebx
call sub_42cf8a
mov edx [ ebp + 0x78 ]
lea ecx [ esp + 0x2c ]
push ecx
push edx
mov [ esp + 0x5c ] 0x1
call [ GetClientRect@IAT ]
cmp ebx edi
jne r-xdata
mov edi [ edi + 0x4 ]
xor edi edi
jmp r-xdata
push eax
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x40 ]
call sub_42d041
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
sub eax ecx
mov ecx [ esp + 0x34 ]
push eax
mov eax [ ebx + 0x4 ]
sub ecx edi
push ecx
push eax
lea edi [ esi + 0x40 ]
call [ CreateCompatibleBitmap@IAT ]
push eax
mov ecx edi
call sub_42e328
xor ebx ebx
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x3c ]
push edi
push eax
call sub_42d1ba
lea ecx [ esp + 0x20 ]
call sub_42e37f
lea ecx [ esp + 0x18 ]
call sub_42e37f
push esi
mov ecx ebp
call j_sub_402400
test esi esi
je r-xdata
mov edi [ edi + 0x4 ]
mov ecx [ esp + 0x40 ]
push edi
push ecx
call sub_42d1ba
mov edx [ esp + 0x38 ]
mov ecx [ esp + 0x30 ]
mov edi eax
mov eax [ esp + 0x34 ]
sub edx ecx
mov ecx [ esp + 0x2c ]
push ebx
sub eax ecx
push edx
push eax
push ebx
push ebx
lea ecx [ esp + 0x50 ]
call sub_43439b
mov [ esp + 0x28 ] ebx
mov [ esp + 0x24 ] r--data
mov [ esp + 0x20 ] ebx
mov [ esp + 0x1c ] r--data
push 0xff00ff
push 0x1
push ebx
mov [ esp + 0x60 ] 0x3
call [ CreatePen@IAT ]
push eax
lea ecx [ esp + 0x28 ]
call sub_42e328
lea ecx [ esp + 0x24 ]
push ecx
lea ecx [ esp + 0x40 ]
call sub_42d20d
push 0xff00ff
mov ebx eax
call [ CreateSolidBrush@IAT ]
push eax
lea ecx [ esp + 0x20 ]
call sub_42e328
lea edx [ esp + 0x1c ]
lea ecx [ esp + 0x3c ]
push edx
call sub_42d253
mov [ esp + 0x10 ] eax
push 0xfffffffe
lea eax [ esp + 0x30 ]
push 0xfffffffe
push eax
call [ InflateRect@IAT ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
push ecx
mov ecx [ esp + 0x30 ]
push edx
mov edx [ esp + 0x48 ]
push eax
push ecx
push edx
call [ Ellipse@IAT ]
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
push eax
mov eax [ esp + 0x30 ]
push ecx
push edx
push eax
call [ CreateEllipticRgn@IAT ]
push eax
lea ecx [ esi + 0x48 ]
call sub_42e328
add ebp 0x5c
push esi
mov ecx ebp
call j_sub_402de0
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
push eax
push ecx
mov ecx [ esi + 0x4c ]
push ecx
call [ OffsetRgn@IAT ]
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x3c ]
push edx
call sub_42d253
push ebx
lea ecx [ esp + 0x40 ]
call sub_42d20d
test edi edi
pop ebx
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x78 ]
push ecx
push eax
call [ ReleaseDC@IAT ]
mov esi r--data
mov [ esp + 0x18 ] esi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x50 ] 0x4
call sub_42e37f
mov [ esp + 0x20 ] esi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x50 ] 0x5
call sub_42e37f
lea ecx [ esp + 0x38 ]
mov [ esp + 0x50 ] 0xffffffff
call sub_42d0bf
mov ecx [ esp + 0x48 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x48
retn
mov edx [ esi ]
push 0x1
mov ecx esi
call [ edx ]
sub_407210
push esi
mov esi ecx
push edi
mov edi [ SendMessageA@IAT ]
mov eax [ esi + 0x134 ]
push rw-data
push 0x0
push 0x143
push eax
call edi
mov ecx [ esi + 0x134 ]
push rw-data
push 0x0
push 0x143
push ecx
call edi
mov edx [ esi + 0x134 ]
push rw-data
push 0x0
push 0x143
push edx
call edi
mov eax [ esi + 0x170 ]
push rw-data
push 0x0
push 0x143
push eax
call edi
mov ecx [ esi + 0x170 ]
push rw-data
push 0x0
push 0x143
push ecx
call edi
mov edx [ esi + 0x170 ]
push rw-data
push 0x0
push 0x143
push edx
call edi
mov eax [ esi + 0x170 ]
push rw-data
push 0x0
push 0x143
push eax
call edi
mov ecx [ esi + 0x1ac ]
push rw-data
push 0x0
push 0x143
push ecx
call edi
mov edx [ esi + 0x1ac ]
push rw-data
push 0x0
push 0x143
push edx
call edi
mov eax [ esi + 0x1ac ]
push rw-data
push 0x0
push 0x143
push eax
call edi
mov ecx [ esi + 0x1ac ]
push rw-data
push 0x0
push 0x143
push ecx
call edi
mov edx [ esi + 0x1ac ]
push rw-data
push 0x0
push 0x143
push edx
call edi
mov eax [ esi + 0x1e8 ]
push rw-data
push 0x0
push 0x143
push eax
call edi
mov ecx [ esi + 0x1e8 ]
push rw-data
push 0x0
push 0x143
push ecx
call edi
mov edx [ esi + 0x1e8 ]
push rw-data
push 0x0
push 0x143
push edx
call edi
mov eax [ esi + 0x1e8 ]
push rw-data
push 0x0
push 0x143
push eax
call edi
mov ecx [ esi + 0x1e8 ]
push rw-data
push 0x0
push 0x143
push ecx
call edi
mov edx [ esi + 0x1e8 ]
push rw-data
push 0x0
push 0x143
push edx
call edi
mov eax [ esi + 0x134 ]
push 0x0
push 0x0
push 0x14e
push eax
call edi
mov ecx [ esi + 0x170 ]
push 0x0
push 0x0
push 0x14e
push ecx
call edi
mov edx [ esi + 0x1ac ]
push 0x0
push 0x0
push 0x14e
push edx
call edi
mov eax [ esi + 0x1e8 ]
push 0x0
push 0x0
push 0x14e
push eax
call edi
pop edi
pop esi
retn
sub_407480
push 0xffffffff
push sub_43da18
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov esi ecx
call sub_426647
mov eax [ esi + 0x1c ]
push 0x0
push eax
call [ GetSystemMenu@IAT ]
push eax
call sub_4274b5
mov edi eax
test edi edi
je r-xdata
mov eax [ esi + 0x208 ]
mov ecx [ esi + 0x1c ]
mov edi [ SendMessageA@IAT ]
push eax
push 0x1
push 0x80
push ecx
call edi
mov edx [ esi + 0x208 ]
mov eax [ esi + 0x1c ]
push edx
push 0x0
push 0x80
push eax
call edi
lea edi [ esi + 0x5c ]
push 0x0
push 0x1
mov ecx edi
call j_sub_4022c0
mov ecx esi
call j_sub_406050
mov ecx esi
call j_sub_407210
push 0x1
mov ecx edi
call j_sub_402270
mov ecx [ esp + 0xc ]
pop edi
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ rw-data ]
mov [ esp + 0x8 ] ecx
push 0x65
lea ecx [ esp + 0xc ]
mov [ esp + 0x18 ] 0x0
call sub_427320
mov edx [ esp + 0x8 ]
mov eax [ edx - 0x8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x14 ] 0xffffffff
call sub_4249df
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ AppendMenuA@IAT ]
push 0x0
push 0x0
push 0x800
push eax
call ebx
mov ecx [ esp + 0xc ]
mov edx [ edi + 0x4 ]
push ecx
push 0x10
push 0x0
push edx
call ebx
pop ebx
sub_4075c0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_43da38
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
and eax 0xfff0
sub esp 0x5c
cmp eax 0x10
jne r-xdata
call sub_4215d1
mov ecx [ esp + 0x5c ]
mov [ fs : 0x0 ] ecx
add esp 0x68
retn 0x8
lea ecx [ esp ]
call j_sub_405db0
lea ecx [ esp ]
mov [ esp + 0x64 ] 0x0
call sub_4263be
lea ecx [ esp ]
mov [ esp + 0x64 ] 0xffffffff
call sub_425ef9
mov ecx [ esp + 0x5c ]
mov [ fs : 0x0 ] ecx
add esp 0x68
retn 0x8
sub_407660
sub esp 0x64
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
push eax
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov ecx esi
call sub_4215d1
pop esi
add esp 0x64
retn
push ebx
push edi
push esi
lea ecx [ esp + 0x20 ]
call sub_42e1e8
mov edi [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
mov ecx [ esi + 0x1c ]
push 0x0
neg eax
sbb eax eax
and eax edi
push eax
push 0x27
push ecx
call [ SendMessageA@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push 0xb
call edi
push 0xc
mov ebx eax
call edi
mov edi eax
mov eax [ esi + 0x1c ]
lea edx [ esp + 0xc ]
push edx
push eax
call [ GetClientRect@IAT ]
mov ecx [ esi + 0x208 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
sub eax ecx
sub eax edi
inc eax
cdq
sub eax edx
mov edx [ esp + 0x10 ]
sar eax 0x1
push eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax ebx
inc eax
cdq
sub eax edx
mov edx [ esp + 0x28 ]
sar eax 0x1
push eax
push edx
call [ DrawIcon@IAT ]
lea ecx [ esp + 0x1c ]
call sub_42e25a
pop edi
pop ebx
pop esi
add esp 0x64
retn
sub_407770
push esi
mov esi ecx
push edi
push 0x0
mov eax [ esi + 0x134 ]
push 0x0
push 0x147
push eax
call [ SendMessageA@IAT ]
inc eax
cmp eax 0x3
ja r-xdata
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
jmp [ eax * 4 + jump_table_407804 ]
lea edi [ esi + 0x5c ]
push 0x0
push 0x64
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x65
mov ecx edi
call j_sub_4028d0
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
lea edi [ esi + 0x5c ]
push 0x1
push 0x64
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x65
mov ecx edi
call j_sub_4028d0
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
lea edi [ esi + 0x5c ]
push 0x0
push 0x64
mov ecx edi
call j_sub_4028d0
push 0x1
push 0x65
mov ecx edi
call j_sub_4028d0
sub_407814
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
int3
sub_407850
push esi
mov esi ecx
push edi
push 0x0
mov eax [ esi + 0x170 ]
push 0x0
push 0x147
push eax
call [ SendMessageA@IAT ]
inc eax
cmp eax 0x4
ja r-xdata
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
jmp [ eax * 4 + jump_table_4078ec ]
lea edi [ esi + 0x5c ]
push 0x0
push 0x66
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x67
mov ecx edi
call j_sub_4028d0
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
lea edi [ esi + 0x5c ]
push 0x1
push 0x66
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x67
mov ecx edi
call j_sub_4028d0
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
lea edi [ esi + 0x5c ]
push 0x0
jmp r-xdata
lea edi [ esi + 0x5c ]
push 0x1
push 0x66
mov ecx edi
call j_sub_4028d0
push 0x1
push 0x67
mov ecx edi
call j_sub_4028d0
sub_407930
push esi
mov esi ecx
push edi
push 0x0
mov eax [ esi + 0x1ac ]
push 0x0
push 0x147
push eax
call [ SendMessageA@IAT ]
inc eax
cmp eax 0x5
ja r-xdata
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
jmp [ eax * 4 + jump_table_407a2c ]
lea edi [ esi + 0x5c ]
push 0x0
push 0x68
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x69
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x6a
mov ecx edi
call j_sub_4028d0
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
lea edi [ esi + 0x5c ]
push 0x1
push 0x68
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x69
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x6a
mov ecx edi
call j_sub_4028d0
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
lea edi [ esi + 0x5c ]
push 0x0
push 0x68
mov ecx edi
call j_sub_4028d0
push 0x0
jmp r-xdata
lea edi [ esi + 0x5c ]
push 0x0
push 0x68
mov ecx edi
call j_sub_4028d0
push 0x1
push 0x69
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x6a
mov ecx edi
call j_sub_4028d0
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
lea edi [ esi + 0x5c ]
push 0x1
push 0x68
mov ecx edi
call j_sub_4028d0
push 0x1
push 0x69
mov ecx edi
call j_sub_4028d0
push 0x1
push 0x6a
mov ecx edi
call j_sub_4028d0
sub_407aa0
push esi
mov esi ecx
push edi
push 0x0
mov eax [ esi + 0x1e8 ]
push 0x0
push 0x147
push eax
call [ SendMessageA@IAT ]
inc eax
cmp eax 0x6
ja r-xdata
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
jmp [ eax * 4 + jump_table_407ba0 ]
lea edi [ esi + 0x5c ]
push 0x0
push 0x6b
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x6c
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x6d
mov ecx edi
call j_sub_4028d0
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
lea edi [ esi + 0x5c ]
push 0x1
push 0x6b
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x6c
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x6d
mov ecx edi
call j_sub_4028d0
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
lea edi [ esi + 0x5c ]
push 0x0
push 0x6b
mov ecx edi
call j_sub_4028d0
push 0x1
push 0x6c
mov ecx edi
call j_sub_4028d0
push 0x0
push 0x6d
mov ecx edi
call j_sub_4028d0
lea ecx [ esi + 0x5c ]
call j_sub_404030
pop edi
pop esi
retn
lea edi [ esi + 0x5c ]
push 0x0
push 0x6b
mov ecx edi
call j_sub_4028d0
push 0x0
jmp r-xdata
lea edi [ esi + 0x5c ]
push 0x0
jmp r-xdata
lea edi [ esi + 0x5c ]
push 0x1
push 0x6c
mov ecx edi
call j_sub_4028d0
push 0x1
push 0x6d
mov ecx edi
call j_sub_4028d0
push 0x6b
mov ecx edi
call j_sub_4028d0
push 0x1
sub_407ba3
add bl cl
jpe r-xdata
int3
add dl bh
jpe r-xdata
int3
add [ ecx ] ch
jpo r-xdata
int3
add [ eax + 0x7b ] bl
inc eax
add [ edx + 0x7b ] ch
inc eax
add [ ecx + 0x7b ] dh
inc eax
add [ eax - 0x336f6f70 ] dl
int3
sub_407c58
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
setne al
jmp r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push 0x1
pop eax
mov [ rw-data ] eax
jmp r-xdata
sub_407d30
call sub_407c58
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
cmp eax 0x4c
jl r-xdata
push [ esp + 0x4 ]
call [ rw-data ]
jmp r-xdata
push eax
call [ GetSystemMetrics@IAT ]
cmp eax 0x4d
jle r-xdata
retn 0x4
xor eax eax
jmp r-xdata
cmp eax 0x4e
je r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x4f
je r-xdata
push 0x1
pop eax
jle r-xdata
cmp eax 0x51
jg r-xdata
push 0x1
pop eax
jmp r-xdata
sub_407d7e
push ebp
mov ebp esp
push esi
call sub_407c58
test eax eax
je r-xdata
test [ ebp + 0x10 ] 0x3
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
mov eax 0x12340042
cmp [ ebp + 0x8 ] 0x0
jl r-xdata
pop esi
pop ebp
retn 0xc
xor eax eax
jmp r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x0
call esi
cmp [ ebp + 0x8 ] eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call esi
cmp [ ebp + 0xc ] eax
jl r-xdata
sub_407dd4
push esi
push edi
call sub_407c58
test eax eax
je r-xdata
test [ esp + 0x10 ] 0x3
jne r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ rw-data ]
jmp r-xdata
mov eax 0x12340042
mov esi [ esp + 0xc ]
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] eax
jle r-xdata
mov edi [ GetSystemMetrics@IAT ]
push eax
call edi
cmp [ esi ] eax
jge r-xdata
push 0x1
call edi
cmp [ esi + 0x4 ] eax
jl r-xdata
sub_407e2a
push ebp
mov ebp esp
sub esp 0x2c
call sub_407c58
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowPlacement@IAT ]
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_407dd4
jmp r-xdata
test eax eax
je r-xdata
sub_407e95
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_407c58
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x12340042
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
pop esi
pop ebx
leave
retn 0x8
cmp [ ebx ] 0x28
jb r-xdata
lea eax [ ebp - 0x10 ]
push esi
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
push edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
push esi
mov esi [ GetSystemMetrics@IAT ]
call esi
push 0x1
mov [ ebx + 0xc ] eax
call esi
lea edi [ ebx + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx ] 0x48
push 0x1
movsd [ edi ] [ esi ]
pop esi
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x24 ] esi
pop edi
jb r-xdata
mov eax esi
jmp r-xdata
add ebx 0x28
push r--data
push ebx
call [ lstrcpyA@IAT ]
sub_407f28
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
call sub_407c58
test eax eax
je r-xdata
xor edi edi
cmp [ ebp + 0x10 ] edi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetSystemMetrics@IAT ]
push edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
call esi
push 0x1
mov [ ebp - 0x10 ] eax
call esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
cmp ebx edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp [ ebp + 0xc ] edi
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
push ebx
call [ GetClipBox@IAT ]
sub eax edi
je r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
push ebx
push 0x12340042
call [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ IntersectRect@IAT ]
dec eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push ebx
call [ GetDCOrgEx@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ OffsetRect@IAT ]
lea eax [ ebp - 0x28 ]
mov esi [ IntersectRect@IAT ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
test eax eax
je r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
test eax eax
jne r-xdata
sub_408138
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutA@IAT ]
pop ebp
retn 0x1c
sub_40815d
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutA@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
movsx eax ax
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_4081b1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringA@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_408379
mov eax sub_43e0be
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_42788c
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x20 ]
call sub_41fa3f
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call sub_41fa3f
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4083c1
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0xc ] 0x0
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
lea eax [ esi + 0x10 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn 0x8
sub_4083fd
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x8 ]
call sub_41e8b3
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
retn
sub_408425
mov eax sub_43e104
call sub_408db8
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edi [ esi + 0xc ]
push ebx
mov eax [ edi ]
mov [ esi + 0xc ] eax
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push [ esi ]
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x8 ]
push [ esi + 0x4 ]
push eax
call sub_41e893
mov ecx [ esi + 0x4 ]
dec ecx
mov edx ecx
imul edx [ esi ]
test ecx ecx
lea eax [ edx + eax + 0x4 ]
jl r-xdata
inc ecx
mov edx [ esi + 0xc ]
mov [ eax ] edx
mov [ esi + 0xc ] eax
sub eax [ esi ]
dec ecx
jne r-xdata
sub_4084b4
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
push ebx
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0xc ]
push ebx
mov [ edi ] eax
mov [ esi + 0xc ] edi
call [ LeaveCriticalSection@IAT ]
pop ebx
sub_40854f
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
add eax 0x4
cmp eax [ esi + 0x28 ]
jbe r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
add [ esi + 0x24 ] 0x4
mov eax esi
pop esi
retn 0x4
call sub_42edf2
sub_408575
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
add [ esi + 0x24 ] 0x4
mov eax esi
pop esi
retn 0x4
sub eax ecx
mov ecx esi
add eax 0x4
push eax
call sub_42ee6e
sub_4085a7
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
inc eax
cmp eax [ esi + 0x28 ]
jbe r-xdata
mov eax [ esi + 0x24 ]
mov cl [ esp + 0x8 ]
mov [ eax ] cl
inc [ esi + 0x24 ]
mov eax esi
pop esi
retn 0x4
call sub_42edf2
sub_4085ca
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
inc eax
inc eax
cmp eax [ esi + 0x28 ]
jbe r-xdata
mov eax [ esi + 0x24 ]
mov cx [ esp + 0x8 ]
mov [ eax ] cx
add [ esi + 0x24 ] 0x2
mov eax esi
pop esi
retn 0x4
call sub_42edf2
sub_4085f1
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
lea edx [ eax + 0x1 ]
cmp edx ecx
jbe r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esp + 0x8 ]
mov al [ eax ]
mov [ ecx ] al
inc [ esi + 0x24 ]
mov eax esi
pop esi
retn 0x4
sub eax ecx
mov ecx esi
inc eax
push eax
call sub_42ee6e
sub_408620
push esi
mov esi ecx
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
lea edx [ eax + 0x2 ]
cmp edx ecx
jbe r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esp + 0x8 ]
mov ax [ eax ]
mov [ ecx ] ax
add [ esi + 0x24 ] 0x2
mov eax esi
pop esi
retn 0x4
sub eax ecx
mov ecx esi
inc eax
inc eax
push eax
call sub_42ee6e
sub_40869b
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_4086e4
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_408733
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b875
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_408783
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_4087d7
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40c090
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_4087d7
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40b875
add esp 0x20
pop ebp
retn
sub_4087fc
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_4088b2
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_40c161
call [ eax + 0x68 ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_4088b2
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_40b875
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4086e4
pop edi
pop esi
pop ebx
pop ebp
retn
sub_408927
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_40c2ed
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_40c2ed
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_4089a4
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4089e6
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_4089c4
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_408a7a
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_408a92
push esi
call sub_409788
push [ rw-data ]
call sub_409b20
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
jae r-xdata
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
mov esi eax
push edx
call sub_409b20
add eax 0x10
push eax
push [ rw-data ]
call sub_40c343
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
xor esi esi
jmp r-xdata
call sub_409791
mov eax esi
pop esi
retn
sub_408b22
push 0x80
call sub_40941c
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_408c59
mov eax [ rw-data ]
pop ecx
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x1
call sub_40cc93
pop ecx
test eax eax
jne r-xdata
call sub_40c0dc
test eax eax
jne r-xdata
push 0x1c
call sub_408c7e
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_40ca83
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40c951
mov [ rw-data ] eax
call sub_40c704
call sub_40c64b
call sub_409676
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_40c5f3
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x10
call sub_408c7e
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_4166a7
mov [ ebp - 0x60 ] eax
push eax
call sub_4096a3
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_40c47b
pop ecx
pop ecx
retn
sub_408ca2
push esi
mov esi ecx
push 0x1b
mov [ esi ] r--data
call sub_40d076
mov esi [ esi + 0x4 ]
pop ecx
test esi esi
je r-xdata
push 0x1b
call sub_40d0d7
pop ecx
pop esi
retn
push esi
call sub_4094a8
pop ecx
sub_408d1e
mov eax [ esp + 0x4 ]
add ecx 0x9
add eax 0x9
push ecx
push eax
call sub_40d110
pop ecx
pop ecx
xor ecx ecx
test eax eax
setg cl
mov eax ecx
retn 0x4
sub_408d60
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_408dd7
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_408e20
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_408e80 ]
jmp [ ecx * 4 + jump_table_408efc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408f68 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_408f68 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_409100 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_409008 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409100 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408f68 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408f68 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408f68 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409100 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409100 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409100 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409100 ]
sub_409155
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x0
lea eax [ ecx + 0x2 ]
je r-xdata
sub eax ecx
sar eax 0x1
dec eax
retn
mov dx [ eax ]
inc eax
inc eax
test dx dx
jne r-xdata
sub_409172
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
jne r-xdata
push 0x19
call sub_40d076
mov esi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d210
pop ecx
pop ecx
jmp r-xdata
push 0x19
call sub_40d0d7
mov eax [ ebp + 0xc ]
pop ecx
movzx ecx bx
sub eax ecx
neg eax
sbb eax eax
not eax
and eax esi
movzx eax bl
test [ eax + rw-data ] 0x4
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx eax bx
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
inc esi
jmp r-xdata
push 0x19
call sub_40d0d7
pop ecx
xor eax eax
jmp r-xdata
movzx ecx bx
movzx eax al
shl ecx 0x8
or ecx eax
cmp [ ebp + 0xc ] ecx
je r-xdata
movzx bx [ esi ]
test bx bx
je r-xdata
push 0x19
call sub_40d0d7
pop ecx
lea eax [ esi - 0x1 ]
jmp r-xdata
jmp r-xdata
sub_409209
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
push 0x19
call sub_40d076
mov esi [ esp + 0x10 ]
pop ecx
cmp [ esi ] bl
je r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_40d2d0
pop ecx
pop ecx
pop ebx
retn
push 0x19
call sub_40d0d7
mov al [ esi ]
pop ecx
neg al
sbb eax eax
and eax esi
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x14 ]
cmp [ eax ] bl
jne r-xdata
mov cl [ eax ]
movzx edx cl
test [ edx + rw-data ] 0x4
je r-xdata
pop edi
movzx eax [ esi ]
test [ eax + rw-data ] 0x4
je r-xdata
cmp cl [ esi ]
je r-xdata
cmp cl [ esi ]
jne r-xdata
inc esi
cmp [ esi ] bl
jne r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
cmp [ eax + 0x1 ] bl
lea ecx [ eax + 0x1 ]
je r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ esi + 0x1 ]
je r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
mov eax ecx
jmp r-xdata
sub_40929e
push ebp
mov ebp esp
push esi
push edi
push 0x19
call sub_40d076
mov edi [ ebp + 0x8 ]
pop ecx
mov esi edi
cmp [ edi ] 0x0
je r-xdata
push 0x19
call sub_40d0d7
pop ecx
mov eax edi
movzx ecx [ esi ]
mov al [ ecx + rw-data ]
test al 0x4
je r-xdata
and al 0x20
cmp al 0x20
jne r-xdata
push 0x1
lea eax [ ebp + 0x8 ]
push [ rw-data ]
push 0x2
push eax
push 0x2
push esi
push 0x200
push [ rw-data ]
call sub_40d30a
add esp 0x20
test eax eax
je r-xdata
mov [ esi ] cl
movzx ecx [ ecx + rw-data ]
push 0x19
call sub_40d0d7
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp eax 0x1
mov [ esi ] cl
jle r-xdata
pop edi
pop esi
pop ebp
retn
inc esi
cmp [ esi ] 0x0
jne r-xdata
inc esi
mov [ esi ] ch
jmp r-xdata
sub_409328
push ebp
mov ebp esp
push esi
push edi
push 0x19
call sub_40d076
mov edi [ ebp + 0x8 ]
pop ecx
mov esi edi
cmp [ edi ] 0x0
je r-xdata
push 0x19
call sub_40d0d7
pop ecx
mov eax edi
movzx ecx [ esi ]
mov al [ ecx + rw-data ]
test al 0x4
je r-xdata
and al 0x10
cmp al 0x10
jne r-xdata
push 0x1
lea eax [ ebp + 0x8 ]
push [ rw-data ]
push 0x2
push eax
push 0x2
push esi
push 0x100
push [ rw-data ]
call sub_40d30a
add esp 0x20
test eax eax
je r-xdata
mov [ esi ] cl
movzx ecx [ ecx + rw-data ]
push 0x19
call sub_40d0d7
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp eax 0x1
mov [ esi ] cl
jle r-xdata
pop edi
pop esi
pop ebp
retn
inc esi
cmp [ esi ] 0x0
jne r-xdata
inc esi
mov [ esi ] ch
jmp r-xdata
sub_4093b2
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov ebx esi
mov edi esi
jne r-xdata
push 0x19
call sub_40d076
pop ecx
push esi
call sub_40d560
pop ecx
jmp r-xdata
dec esi
cmp edi esi
jae r-xdata
movzx eax al
mov al [ eax + rw-data ]
and al 0x4
inc esi
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0x19
call sub_40d0d7
pop ecx
mov eax ebx
mov cl [ esi ]
mov al [ edi ]
mov [ edi ] cl
inc edi
mov [ esi ] al
jmp r-xdata
mov al [ esi ]
test al al
je r-xdata
mov al [ esi ]
test al al
je r-xdata
mov cl [ esi - 0x1 ]
mov [ esi - 0x1 ] al
mov [ esi ] cl
inc esi
jmp r-xdata
sub_40942e
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_40945a
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_40d5ba
test eax eax
pop ecx
jne r-xdata
sub_40945a
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
push edi
ja r-xdata
test esi esi
jne r-xdata
push 0x9
call sub_40d076
push esi
call sub_40d986
push 0x9
mov edi eax
call sub_40d0d7
add esp 0xc
test edi edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push 0x1
pop esi
mov eax edi
jmp r-xdata
pop edi
pop esi
retn
sub_4094a8
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0x9
call sub_40d076
push esi
call sub_40d630
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x9
call sub_40d0d7
pop ecx
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push esi
push eax
call sub_40d65b
push 0x9
call sub_40d0d7
add esp 0xc
pop esi
retn
sub_4094f0
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
inc esi
inc edi
dec eax
je r-xdata
mov eax 0x0
dec eax
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
dec eax
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
dec eax
sub_40959c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
push 0x19
call sub_40d076
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d110
pop ecx
pop ecx
jmp r-xdata
movzx bx [ esi ]
movzx eax bl
inc esi
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0xc ] bx
jne r-xdata
mov al [ esi ]
test al al
jne r-xdata
xor edx edx
inc edi
mov dh cl
mov dl al
mov [ ebp + 0xc ] edx
and [ ebp + 0xc ] 0x0
jmp r-xdata
push 0x19
call sub_40d0d7
cmp bx [ ebp + 0xc ]
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor ecx ecx
inc esi
mov ch bl
mov cl al
mov ebx ecx
xor ebx ebx
jmp r-xdata
push 0x19
call sub_40d0d7
pop ecx
xor eax eax
jmp r-xdata
movzx cx [ edi ]
movzx eax cl
inc edi
mov [ ebp + 0xc ] ecx
test [ eax + rw-data ] 0x4
je r-xdata
sub_40964b
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_40e630
inc eax
push eax
call sub_40941c
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_40e540
pop ecx
pop ecx
pop esi
retn
sub_4096e3
push edi
call sub_409788
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_40979a
pop ecx
pop ecx
test ebx ebx
pop ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
call sub_409791
pop edi
retn
push rw-data
push rw-data
call sub_40979a
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_4097b4
push ebp
mov ebp esp
push esi
push edi
push 0x74
push 0x1
xor edi edi
call sub_40e6ab
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
call sub_4094a8
test edi edi
pop ecx
je r-xdata
push esi
call sub_40c14e
pop ecx
mov eax [ ebp + 0x10 ]
push [ ebp + 0x1c ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x48 ] eax
mov eax [ ebp + 0x14 ]
push [ ebp + 0x18 ]
mov [ esi + 0x4c ] eax
push esi
push sub_40981f
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
xor eax eax
push edi
call sub_40a6a2
pop ecx
pop edi
pop esi
pop ebp
retn
call [ GetLastError@IAT ]
mov edi eax
sub_40981f
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
jne r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x10
call sub_408c59
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x4c ]
call [ esi + 0x48 ]
push eax
call sub_4098bb
call eax
sub_4098bb
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
call sub_40c161
mov esi eax
test esi esi
jne r-xdata
call eax
push esi
call sub_40c1c8
pop ecx
push [ esp + 0x8 ]
call [ ExitThread@IAT ]
push 0x10
call sub_408c59
pop ecx
sub_409904
push ebp
mov ebp esp
sub esp 0xc
push ebx
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] esi
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax bl
push 0x8
push eax
call sub_40e87b
pop ecx
pop ecx
jmp r-xdata
cmp bl 0x2d
mov [ ebp - 0x4 ] esi
jne r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jl r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
push 0x10
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov edi 0x103
mov [ ebp - 0xc ] eax
cmp bl 0x30
jne r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40e87b
pop ecx
pop ecx
jmp r-xdata
mov al [ esi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] ecx
cmp al 0x58
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
test eax eax
je r-xdata
mov bl [ esi + 0x1 ]
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
mov eax [ rw-data ]
mov ax [ eax + esi * 2 ]
and eax edi
push edi
push esi
call sub_40e87b
pop ecx
pop ecx
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp + 0x14 ]
dec [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
test al 0x8
jne r-xdata
movsx eax bl
push eax
call sub_40e740
pop ecx
mov ecx eax
sub ecx 0x37
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
or [ ebp + 0x14 ] 0x8
cmp esi [ ebp - 0xc ]
jb r-xdata
test al 0x4
mov esi 0x7fffffff
jne r-xdata
test ebx ebx
je r-xdata
imul esi [ ebp + 0x10 ]
add esi ecx
mov [ ebp - 0x8 ] esi
jne r-xdata
call sub_40a715
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x1
movzx esi bl
jle r-xdata
or [ ebp + 0x14 ] 0x4
jmp r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ecx edx
jbe r-xdata
mov eax [ ebp + 0x14 ]
and al 0x2
neg al
sbb eax eax
neg eax
add eax esi
mov [ ebp - 0x8 ] eax
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
and eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov bl [ eax ]
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] esi
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_409b20
push esi
push 0x9
call sub_40d076
mov esi [ esp + 0xc ]
push esi
call sub_40d630
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x9
call sub_40d0d7
pop ecx
push esi
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
mov esi [ esi - 0x4 ]
push 0x9
sub esi 0x9
call sub_40d0d7
pop ecx
jmp r-xdata
mov eax esi
pop esi
retn
sub_409b65
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_40e87b
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40e87b
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_409bfb
push ecx
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_40e87b
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov [ esp + 0x10 ] esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40e87b
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
xor ebp ebp
cmp [ esp + 0x10 ] 0x2d
mov eax ebx
jne r-xdata
lea eax [ esi - 0x30 ]
push 0x0
cdq
mov esi eax
push 0xa
push ebp
mov [ esp + 0x24 ] esi
push ebx
mov esi edx
call sub_40e8f0
mov ecx [ esp + 0x18 ]
add ecx eax
adc esi edx
mov ebx ecx
mov ebp esi
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
mov edx ebp
neg eax
mov edx ebp
adc edx 0x0
neg edx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_409cb5
push ebx
push esi
mov esi [ esp + 0x10 ]
cmp esi 0xffffffe0
jbe r-xdata
push 0x9
call sub_40d076
mov ebx [ esp + 0x10 ]
push ebx
call sub_40d630
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
push 0x9
call sub_40d0d7
test esi esi
pop ecx
jne r-xdata
push edi
xor edi edi
cmp esi [ rw-data ]
ja r-xdata
pop esi
pop ebx
retn
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
push 0x1
pop esi
push 0x9
call sub_40d0d7
pop ecx
mov eax edi
pop edi
jmp r-xdata
push esi
push ebx
push eax
call sub_40de3b
add esp 0xc
test eax eax
je r-xdata
mov edi ebx
sub_409d30
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_409d90 ]
jmp [ ecx * 4 + jump_table_409e0c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409e78 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409e78 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_40a010 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_409f18 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a010 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409e78 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409e78 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409e78 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40a010 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a010 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a010 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a010 ]
sub_40a070
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_40a0b6
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_40a120
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_40a138
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_40a1a0
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_40a1b8
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_40a22c
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x19
call sub_40d076
push [ ebp + 0x8 ]
call sub_40a3d9
mov ebx eax
pop ecx
cmp ebx [ rw-data ]
pop ecx
mov [ ebp + 0x8 ] ebx
jne r-xdata
test ebx ebx
je r-xdata
xor esi esi
jmp r-xdata
call sub_40a456
xor edx edx
mov eax rw-data
push 0x19
call sub_40d0d7
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x4 ] 0x0
push 0x40
pop ecx
xor eax eax
mov edi rw-data
lea esi [ edx + edx * 2 ]
[ edi ]
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
push 0x1
pop esi
cmp eax esi
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_40a423
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x40
and [ rw-data ] 0x0
pop ecx
xor eax eax
mov edi rw-data
cmp [ ebp - 0x18 ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_40a47f
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or esi 0xffffffff
and [ rw-data ] 0x0
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
mov eax esi
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push ebx
call sub_40a423
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] esi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_40a3d9
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_40a423
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40a456
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_40a47f
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_40e924
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_40d30a
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_40d30a
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_40a630
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push edi
push 0x19
call sub_40d076
pop ecx
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ea70
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp + 0xc ] eax
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
je r-xdata
pop esi
pop ebp
retn
inc ecx
test dl dl
jne r-xdata
mov esi ecx
test esi esi
jmp r-xdata
movzx edi dl
shl eax 0x8
or eax edi
cmp [ ebp + 0xc ] eax
jne r-xdata
mov dl [ ecx ]
movzx eax dl
movzx edi al
test [ edi + rw-data ] 0x4
je r-xdata
push 0x19
call sub_40d0d7
pop ecx
mov eax esi
pop edi
jne r-xdata
lea esi [ ecx - 0x1 ]
jmp r-xdata
sub_40a6a2
push esi
call sub_40a71e
mov ecx [ esp + 0x8 ]
xor esi esi
mov [ eax ] ecx
mov eax rw-data
call sub_40a715
mov ecx [ esi * 8 + rw-data ]
pop esi
mov [ eax ] ecx
retn
add eax 0x8
inc esi
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
call sub_40a715
mov [ eax ] 0x16
pop esi
retn
cmp ecx 0xca
ja r-xdata
call sub_40a715
mov [ eax ] 0xd
pop esi
retn
call sub_40a715
mov [ eax ] 0x8
pop esi
retn
sub_40a743
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x14 ]
cmp ecx 0x45
jl r-xdata
or eax 0xffffffff
cmp ecx 0x8b
jg r-xdata
mov esi [ edi + 0x10 ]
test esi esi
jl r-xdata
push ebx
mov eax esi
push 0xc
cdq
pop ebx
idiv ebx
push ebx
add ecx eax
mov eax esi
cdq
pop esi
pop ebx
idiv esi
test edx edx
mov [ edi + 0x10 ] edx
jge r-xdata
cmp esi 0xb
jle r-xdata
cmp ecx 0x45
jl r-xdata
add edx 0xc
dec ecx
mov [ edi + 0x10 ] edx
mov edx [ edi + 0x10 ]
test cl 0x3
mov eax [ edx * 4 + rw-data ]
jne r-xdata
cmp ecx 0x8b
jg r-xdata
lea edx [ ecx - 0x1 ]
imul ecx ecx 0x16d
sar edx 0x2
add eax edx
lea eax [ ecx + eax - 0x63df ]
mov ecx [ edi + 0xc ]
test eax eax
lea esi [ eax + ecx ]
jl r-xdata
cmp edx 0x1
jle r-xdata
test ecx ecx
jge r-xdata
test ecx ecx
jl r-xdata
inc eax
lea ecx [ esi + esi * 2 ]
shl ecx 0x3
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x18
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
test ecx ecx
lea esi [ eax + ecx ]
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
mov ecx esi
imul ecx ecx 0x3c
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x3c
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
test ecx ecx
lea esi [ eax + ecx ]
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
mov ecx esi
imul ecx ecx 0x3c
test esi esi
je r-xdata
test esi esi
jge r-xdata
test esi esi
jl r-xdata
xor eax eax
mov eax ecx
cdq
idiv esi
xor edx edx
cmp eax 0x3c
setne dl
mov eax edx
jmp r-xdata
jmp r-xdata
mov eax [ edi ]
test ecx ecx
lea edx [ eax + ecx ]
mov [ ebp + 0x8 ] edx
jl r-xdata
test eax eax
jne r-xdata
test eax eax
jge r-xdata
test eax eax
jl r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
test edx edx
jge r-xdata
test edx edx
jl r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_40aa03
test eax eax
pop ecx
je r-xdata
call sub_40ea97
mov eax [ rw-data ]
add [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_40ab0d
test eax eax
pop ecx
je r-xdata
jmp r-xdata
push 0x9
mov esi eax
mov eax [ ebp + 0x8 ]
pop ecx
[ edi ] [ esi ]
jmp r-xdata
mov ecx [ edi + 0x20 ]
test ecx ecx
jg r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ rw-data ]
add [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_40ab0d
pop ecx
jmp r-xdata
jge r-xdata
cmp [ eax + 0x20 ] 0x0
jle r-xdata
sub_40a927
push ebp
mov ebp esp
sub esp 0xcc
lea eax [ ebp - 0x10 ]
push eax
call [ GetLocalTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call [ GetSystemTime@IAT ]
mov ax [ ebp - 0x16 ]
cmp ax [ rw-data ]
jne r-xdata
lea eax [ ebp - 0xcc ]
push eax
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ax [ ebp - 0x18 ]
cmp ax [ rw-data ]
jne r-xdata
or eax 0xffffffff
cmp eax 0x2
jne r-xdata
mov ax [ ebp - 0x1a ]
cmp ax [ rw-data ]
jne r-xdata
leave
retn
mov [ ecx ] eax
xor eax eax
jmp r-xdata
cmp [ ebp - 0x32 ] 0x0
je r-xdata
mov ax [ ebp - 0x1e ]
cmp ax [ rw-data ]
jne r-xdata
push esi
push edi
lea esi [ ebp - 0x20 ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov [ rw-data ] eax
pop esi
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ax [ ebp - 0x20 ]
cmp ax [ rw-data ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov eax [ rw-data ]
jmp r-xdata
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
call sub_40f06f
mov ecx [ ebp + 0x8 ]
add esp 0x1c
test ecx ecx
je r-xdata
sub_40aa03
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
mov esi [ eax ]
xor ebx ebx
call sub_40c161
test esi esi
mov edi eax
jge r-xdata
cmp [ edi + 0x40 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x40 ]
push 0x24
call sub_40941c
pop ecx
mov [ edi + 0x40 ] eax
test eax eax
mov ecx rw-data
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov [ ecx + 0x14 ] edx
cdq
mov edi 0x15180
idiv edi
mov edi rw-data
mov [ ecx + 0x1c ] eax
imul eax eax 0xfffeae80
add esi eax
test ebx ebx
jne r-xdata
sub esi eax
inc edx
cmp esi eax
jl r-xdata
mov eax esi
mov edi 0x7861f80
cdq
idiv edi
mov edx eax
imul edx edx 0xf879e080
add esi edx
lea edx [ eax * 4 + 0x46 ]
mov eax 0x1e13380
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x1c ]
push 0x1
pop eax
lea ebx [ edi + 0x4 ]
mov edi rw-data
sub esi eax
mov eax 0x1e28500
inc edx
cmp esi eax
jl r-xdata
mov edx [ ecx + 0x1c ]
dec eax
mov [ ecx + 0x10 ] eax
push 0x7
sub edx [ edi + eax * 4 ]
mov eax [ esp + 0x14 ]
mov edi 0x15180
mov [ ecx + 0xc ] edx
mov eax [ eax ]
cdq
idiv edi
pop edi
push 0x3c
add eax 0x4
cdq
idiv edi
mov eax esi
mov edi 0xe10
mov [ ecx + 0x18 ] edx
cdq
idiv edi
pop edi
mov [ ecx + 0x8 ] eax
imul eax eax 0xfffff1f0
add esi eax
mov eax esi
cdq
idiv edi
mov [ ecx + 0x4 ] eax
imul eax eax 0x3c
sub esi eax
and [ ecx + 0x20 ] 0x0
mov [ ecx ] esi
mov eax ecx
inc eax
add ebx 0x4
jmp r-xdata
push 0x1
pop ebx
inc edx
sub esi eax
jmp r-xdata
cmp [ ebx ] edx
jge r-xdata
sub_40ab0d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jge r-xdata
call sub_40ea97
mov eax [ esi ]
cmp eax 0x3f480
jle r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_40aa03
mov esi eax
push esi
call sub_40ed62
pop ecx
test eax eax
mov eax [ esi ]
pop ecx
je r-xdata
cmp eax 0x7ffc0b7f
jge r-xdata
pop esi
pop ebp
retn
sub eax [ rw-data ]
push edi
push 0x3c
mov [ ebp + 0x8 ] eax
pop ecx
cdq
mov edi ecx
idiv edi
test edx edx
mov [ esi ] edx
jge r-xdata
sub eax [ rw-data ]
sub eax [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_40aa03
cmp [ rw-data ] 0x0
pop ecx
mov esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi ecx
cdq
idiv edi
add eax [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
cdq
idiv edi
pop edi
test edx edx
mov [ esi + 0x4 ] edx
jge r-xdata
add edx ecx
mov [ esi ] edx
sub [ ebp + 0x8 ] ecx
mov eax esi
push esi
call sub_40ed62
test eax eax
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x18
cdq
idiv ecx
pop ecx
add eax [ esi + 0x8 ]
mov [ ebp + 0x8 ] eax
cdq
idiv ecx
test edx edx
mov [ esi + 0x8 ] edx
jge r-xdata
add edx 0x3c
mov [ esi + 0x4 ] edx
sub [ ebp + 0x8 ] ecx
mov eax [ rw-data ]
sub [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_40aa03
mov esi eax
pop ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push 0x18
cdq
pop ecx
idiv ecx
mov ecx eax
test ecx ecx
mov [ ebp + 0x8 ] ecx
jle r-xdata
add edx ecx
mov [ esi + 0x8 ] edx
sub [ ebp + 0x8 ] ecx
jge r-xdata
mov eax [ esi + 0x18 ]
push 0x7
add eax ecx
pop ecx
cdq
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp + 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0x18 ]
push 0x7
lea eax [ eax + ecx + 0x7 ]
pop ecx
cdq
idiv ecx
mov [ esi + 0x18 ] edx
mov eax [ ebp + 0x8 ]
add [ esi + 0xc ] eax
mov eax [ esi + 0xc ]
test eax eax
jg r-xdata
mov eax [ ebp + 0x8 ]
add [ esi + 0x1c ] eax
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x1c ] 0x16c
mov [ esi + 0x10 ] 0xb
jmp r-xdata
sub_40ac6d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rw-data ]
push edi
mov [ ebp - 0x8 ] esi
xor ebx ebx
mov [ ebp - 0x4 ] 0x7
push [ esi + 0x1c ]
call sub_40e630
push [ esi ]
mov edi eax
call sub_40e630
add eax ebx
pop ecx
add esi 0x4
dec [ ebp - 0x4 ]
pop ecx
lea ebx [ eax + edi + 0x2 ]
jne r-xdata
inc ebx
push ebx
call sub_40941c
mov esi eax
pop ecx
test esi esi
mov [ ebp - 0x4 ] esi
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edi [ ebp - 0x8 ]
push 0x7
pop ebx
mov [ esi ] 0x3a
push [ edi ]
inc esi
push esi
call sub_40e540
push eax
call sub_40e630
add esi eax
mov [ esi ] 0x3a
push [ edi + 0x1c ]
inc esi
push esi
call sub_40e540
push eax
call sub_40e630
add esp 0x18
add esi eax
add edi 0x4
dec ebx
jne r-xdata
and [ esi ] 0x0
sub_40acfc
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x8 ] 0xc
lea esi [ edi + 0x38 ]
push [ esi + 0x30 ]
call sub_40e630
push [ esi ]
mov ebx eax
call sub_40e630
add eax [ ebp - 0x4 ]
pop ecx
add esi 0x4
dec [ ebp - 0x8 ]
pop ecx
lea eax [ eax + ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
jne r-xdata
inc eax
push eax
call sub_40941c
mov esi eax
pop ecx
test esi esi
mov [ ebp - 0x8 ] esi
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
push 0xc
add edi 0x68
pop ebx
mov [ esi ] 0x3a
push [ edi - 0x30 ]
inc esi
push esi
call sub_40e540
push eax
call sub_40e630
add esi eax
mov [ esi ] 0x3a
push [ edi ]
inc esi
push esi
call sub_40e540
push eax
call sub_40e630
add esp 0x18
add esi eax
add edi 0x4
dec ebx
jne r-xdata
and [ esi ] 0x0
sub_40ad91
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] 0x7
mov ebx [ ebp - 0x8 ]
push [ ebx + 0x1c ]
call sub_40e630
push [ ebx ]
mov edx eax
mov [ ebp - 0x10 ] edx
call sub_40e630
add [ ebp - 0x8 ] 0x4
pop ecx
pop ecx
add eax edi
mov ecx [ ebp - 0x10 ]
dec [ ebp - 0xc ]
lea edi [ eax + ecx + 0x2 ]
jne r-xdata
lea eax [ esi + 0x38 ]
mov [ ebp - 0xc ] 0xc
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
push [ ebx + 0x30 ]
call sub_40e630
push [ ebx ]
mov edx eax
mov [ ebp - 0x10 ] edx
call sub_40e630
add [ ebp - 0x8 ] 0x4
pop ecx
pop ecx
add eax edi
mov ecx [ ebp - 0x10 ]
dec [ ebp - 0xc ]
lea edi [ eax + ecx + 0x2 ]
jne r-xdata
push [ esi + 0x98 ]
call sub_40e630
push [ esi + 0x9c ]
mov ebx eax
call sub_40e630
push [ esi + 0xa0 ]
add eax edi
lea edi [ eax + ebx + 0x2 ]
call sub_40e630
push [ esi + 0xa4 ]
lea edi [ edi + eax + 0x1 ]
call sub_40e630
push [ esi + 0xa8 ]
lea edi [ edi + eax + 0x1 ]
call sub_40e630
lea eax [ edi + eax + 0x1 ]
add eax 0xac
push eax
call sub_40941c
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
leave
retn
push 0xac
lea edi [ ebx + 0xac ]
push [ rw-data ]
push ebx
call sub_408e20
lea eax [ esi + 0x1c ]
mov [ ebp - 0x8 ] ebx
add esp 0xc
sub [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x7
mov eax [ ebp - 0xc ]
mov [ eax ] edi
mov eax [ ebp - 0x4 ]
push [ eax - 0x1c ]
push edi
call sub_40e540
push eax
call sub_40e630
mov ecx [ ebp - 0x8 ]
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + eax ] edi
push [ eax ]
push edi
call sub_40e540
push eax
call sub_40e630
add [ ebp - 0xc ] 0x4
add [ ebp - 0x4 ] 0x4
add esp 0x18
dec [ ebp - 0x10 ]
lea edi [ edi + eax + 0x1 ]
jne r-xdata
lea eax [ ebx + 0x68 ]
mov [ ebp - 0x10 ] 0xc
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x38 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + ecx ] edi
push [ eax ]
push edi
call sub_40e540
push eax
call sub_40e630
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0xc ]
mov [ eax ] edi
mov eax [ ebp - 0x4 ]
push [ eax + 0x30 ]
push edi
call sub_40e540
push eax
call sub_40e630
add [ ebp - 0x4 ] 0x4
add [ ebp - 0xc ] 0x4
add esp 0x18
dec [ ebp - 0x10 ]
lea edi [ edi + eax + 0x1 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x98 ] edi
push [ esi + 0x98 ]
push edi
call sub_40e540
push eax
call sub_40e630
lea edi [ edi + eax + 0x1 ]
mov [ ebx + 0x9c ] edi
push [ esi + 0x9c ]
push edi
call sub_40e540
push eax
call sub_40e630
lea edi [ edi + eax + 0x1 ]
mov [ ebx + 0xa0 ] edi
push [ esi + 0xa0 ]
push edi
call sub_40e540
push eax
call sub_40e630
lea edi [ edi + eax + 0x1 ]
mov [ ebx + 0xa4 ] edi
push [ esi + 0xa4 ]
push edi
call sub_40e540
push eax
call sub_40e630
lea eax [ eax + edi + 0x1 ]
add esp 0x30
mov [ ebx + 0xa8 ] eax
sub_40afde
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x18 ]
push ebx
push esi
xor esi esi
cmp eax esi
push edi
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov edi rw-data
mov [ ebp + 0x18 ] eax
push edi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] esi
mov ebx [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] esi
push edi
call ebx
push 0x13
call sub_40d076
pop ecx
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi [ ebp + 0x10 ]
cmp [ ebp + 0x18 ] esi
jbe r-xdata
push edi
call ebx
push 0x13
call sub_40d0d7
pop ecx
jmp r-xdata
cmp al 0x25
je r-xdata
xor eax eax
leave
retn
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x18 ]
leave
retn
cmp [ ebp + 0x18 ] 0x0
pop edi
pop esi
pop ebx
jbe r-xdata
and [ rw-data ] 0x0
inc esi
cmp [ esi ] 0x23
jne r-xdata
mov edx [ rw-data ]
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
mov al [ esi ]
push [ ebp + 0x14 ]
push eax
call sub_40b0d8
add esp 0x14
inc esi
mov [ rw-data ] 0x1
inc esi
mov ecx [ ebp + 0x8 ]
mov al [ esi ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp + 0x18 ]
jmp r-xdata
cmp [ ebp + 0x18 ] 0x1
jbe r-xdata
mov al [ esi ]
test al al
je r-xdata
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp + 0x18 ]
sub_40b0d8
push ebp
mov ebp esp
movsx eax [ ebp + 0x8 ]
push ebx
push esi
cmp eax 0x5a
push edi
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
call sub_40ea97
mov ecx [ ebp + 0xc ]
push [ ebp + 0x14 ]
xor eax eax
cmp [ ecx + 0x20 ] eax
push [ ebp + 0x10 ]
setne al
push [ eax * 4 + rw-data ]
jmp r-xdata
cmp eax 0x4d
jg r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0x14 ]
cmp [ eax + 0x8 ] 0xb
push [ ebp + 0x10 ]
mov eax [ ebp + 0x18 ]
jg r-xdata
sub eax 0x7
je r-xdata
mov eax [ rw-data ]
push [ ebp + 0x14 ]
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov eax [ eax + 0x10 ]
push 0x2
jmp r-xdata
sub eax 0x61
je r-xdata
call sub_40b4c7
add esp 0xc
sub eax 0x53
je r-xdata
je r-xdata
push [ eax + 0x9c ]
push [ eax + 0x98 ]
jmp r-xdata
push [ ebp + 0x14 ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
push 0x1
push [ eax + 0x18 ]
jmp r-xdata
dec eax
je r-xdata
inc eax
push eax
jmp r-xdata
push [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
push [ ebp + 0x10 ]
mov eax [ eax + 0x18 ]
push [ ecx + eax * 4 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x14 ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
push 0x2
push [ eax ]
jmp r-xdata
dec eax
dec eax
je r-xdata
push [ ebp + 0x14 ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
push 0x2
push [ eax + 0x4 ]
jmp r-xdata
sub eax 0x25
je r-xdata
call sub_40b4ee
add esp 0x10
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec eax
je r-xdata
push [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
push [ ebp + 0x10 ]
mov eax [ eax + 0x10 ]
push [ ecx + eax * 4 + 0x38 ]
jmp r-xdata
dec eax
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
mov esi [ eax + 0x18 ]
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov [ ecx ] 0x25
inc [ eax ]
mov eax [ ebp + 0x14 ]
dec [ eax ]
jmp r-xdata
sub eax 0x1c
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0xa0 ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
and [ rw-data ] 0x0
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0xa4 ]
mov eax [ rw-data ]
push [ ebp + 0x14 ]
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
push 0x2
push 0x64
cdq
pop ecx
idiv ecx
jmp r-xdata
dec eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec eax
je r-xdata
mov eax ecx
push 0x7
cdq
pop edi
idiv edi
push 0x7
mov edi eax
mov eax ecx
cdq
pop ecx
idiv ecx
cmp edx esi
jl r-xdata
xor edi edi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
dec eax
je r-xdata
push [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
push [ ebp + 0x10 ]
mov eax [ eax + 0x18 ]
push [ ecx + eax * 4 + 0x1c ]
jmp r-xdata
dec eax
je r-xdata
call sub_40b5a6
add esp 0x14
jmp r-xdata
push edx
jmp r-xdata
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0xc ]
push [ ebx + 0xa0 ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
and [ rw-data ] 0x0
push ebx
push esi
push edi
push [ ebp + 0xc ]
push [ ebx + 0xa4 ]
jmp r-xdata
push [ ebp + 0x14 ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
push 0x2
push [ eax + 0xc ]
jmp r-xdata
sub eax 0x6
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x2
push edi
jmp r-xdata
inc edi
lea esi [ ecx - 0x1 ]
jmp r-xdata
push 0x6
pop esi
jmp r-xdata
mov eax [ ebp + 0x18 ]
and [ rw-data ] 0x0
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0xa8 ]
jmp r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
push [ ebp + 0x10 ]
mov eax [ eax + 0x10 ]
push [ ecx + eax * 4 + 0x68 ]
jmp r-xdata
sub eax 0x6
je r-xdata
mov eax [ edi ]
push ebx
push esi
push edi
push [ ebp + 0xc ]
mov [ eax ] 0x20
inc [ edi ]
dec [ esi ]
push [ ebx + 0xa8 ]
jmp r-xdata
call sub_40b5a6
add esp 0x14
cmp [ esi ] 0x0
je r-xdata
mov eax [ rw-data ]
push [ ebp + 0x14 ]
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov eax [ eax + 0x1c ]
push 0x3
mov ecx [ eax + 0x1c ]
cmp ecx esi
jge r-xdata
mov eax [ rw-data ]
push [ ebp + 0x14 ]
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov ecx [ eax + 0x14 ]
push 0x4
mov eax ecx
push 0x64
cdq
pop esi
idiv esi
push 0x64
mov esi eax
mov eax ecx
cdq
pop ecx
add esi 0x13
idiv ecx
imul esi esi 0x64
add esi edx
push esi
push [ ebp + 0x14 ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
push 0x2
push [ eax + 0x8 ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ rw-data ]
push 0xc
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
pop ecx
mov eax [ eax + 0x8 ]
cdq
idiv ecx
test edx edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x2
push ecx
pop edx
sub_40b4c7
mov ecx [ esp + 0xc ]
push esi
push edi
cmp [ ecx ] 0x0
je r-xdata
pop edi
pop esi
retn
mov eax [ esp + 0x10 ]
mov esi [ esp + 0xc ]
mov edi [ eax ]
mov [ edi ] dl
inc [ eax ]
inc esi
dec [ ecx ]
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
sub_40b4ee
push ebp
mov ebp esp
push ecx
xor eax eax
push edi
cmp [ rw-data ] eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov edi [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ edi ]
jae r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40b55d
add esp 0xc
jmp r-xdata
mov [ edi ] eax
dec ecx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
test eax eax
je r-xdata
pop edi
leave
retn
mov eax [ ebp - 0x4 ]
add [ esi ] eax
sub [ edi ] eax
pop esi
jmp r-xdata
push ebx
mov eax [ ebp + 0x8 ]
push 0xa
cdq
pop ebx
idiv ebx
mov eax [ esi ]
add dl 0x30
mov [ eax + ecx ] dl
mov eax [ ebp + 0x8 ]
cdq
idiv ebx
inc [ ebp - 0x4 ]
dec ecx
cmp ecx 0xffffffff
mov [ ebp + 0x8 ] eax
jne r-xdata
pop ebx
sub_40b55d
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
mov eax [ edi ]
mov [ edi ] ecx
dec ecx
mov eax [ ebp + 0x8 ]
push 0xa
cdq
pop ebx
idiv ebx
mov eax [ ebp + 0x8 ]
add dl 0x30
mov [ ecx ] dl
inc ecx
cdq
idiv ebx
dec [ esi ]
test eax eax
mov [ ebp + 0x8 ] eax
jg r-xdata
mov bl [ eax ]
mov dl [ ecx ]
mov [ ecx ] bl
dec ecx
mov [ eax ] dl
inc eax
cmp eax ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ esi ] 0x1
jbe r-xdata
sub_40b5a6
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ rw-data ] ecx
mov al [ ebx ]
mov [ ebp + 0xb ] al
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov dl [ ebp + 0xb ]
inc ecx
inc [ ebp + 0x10 ]
mov al [ eax ]
cmp al dl
je r-xdata
dec [ ebp + 0x10 ]
mov [ ebp + 0x8 ] ecx
movsx eax dl
cmp eax 0x64
jg r-xdata
sub eax 0x68
je r-xdata
je r-xdata
dec ecx
je r-xdata
sub eax 0x5
je r-xdata
dec ecx
je r-xdata
cmp eax 0x27
je r-xdata
mov [ rw-data ] 0x1
dec ecx
je r-xdata
dec ecx
je r-xdata
sub eax 0x6
je r-xdata
mov [ rw-data ] 0x1
dec ecx
je r-xdata
test cl 0x1
je r-xdata
cmp eax 0x41
je r-xdata
mov ebx [ ebp + 0x10 ]
jmp r-xdata
mov [ ebp + 0x14 ] 0x49
jmp r-xdata
mov [ rw-data ] 0x1
dec ecx
je r-xdata
dec ecx
je r-xdata
dec eax
je r-xdata
push [ ebp + 0x18 ]
push edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
call sub_40b0d8
add esp 0x14
jmp r-xdata
mov [ ebp + 0x14 ] 0x64
jmp r-xdata
dec ecx
je r-xdata
add ebx ecx
jmp r-xdata
add ebx ecx
push r--data
push ebx
call sub_40f7b0
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp eax 0x48
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ rw-data ]
movzx eax dl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov [ ebp + 0x14 ] 0x4d
jmp r-xdata
jmp r-xdata
mov [ rw-data ] 0x1
dec ecx
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp + 0x18 ]
jg r-xdata
sub eax 0x5
jne r-xdata
mov [ ebp + 0x14 ] 0x61
jmp r-xdata
dec ecx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
push r--data
push ebx
call sub_40f7b0
pop ecx
test eax eax
pop ecx
jne r-xdata
add ebx 0x5
jmp r-xdata
dec ecx
je r-xdata
cmp eax 0x4d
je r-xdata
xor ecx ecx
cmp [ edi ] ecx
je r-xdata
mov eax [ esi ]
mov cl [ ebx ]
mov [ eax ] cl
inc [ esi ]
inc ebx
dec [ edi ]
mov eax [ esi ]
mov ebx [ ebp - 0x4 ]
mov [ eax ] dl
inc [ esi ]
dec [ edi ]
mov [ ebp + 0x14 ] 0x53
jmp r-xdata
jmp r-xdata
mov eax [ eax + 0x9c ]
mov eax [ eax + 0x98 ]
jmp r-xdata
mov eax ecx
dec eax
dec eax
je r-xdata
mov [ ebp + 0x14 ] 0x41
jmp r-xdata
cmp al 0x27
je r-xdata
mov [ ebp + 0x14 ] 0x70
jmp r-xdata
add ebx 0x3
mov [ ebp + 0x10 ] ebx
mov [ rw-data ] 0x1
dec ecx
je r-xdata
dec ecx
je r-xdata
cmp eax 0x61
je r-xdata
cmp [ edi ] 0x0
jbe r-xdata
test ecx ecx
jle r-xdata
mov [ ebp + 0x14 ] 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
inc ebx
jmp r-xdata
mov edx [ rw-data ]
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
mov [ ebp + 0x14 ] 0x48
jmp r-xdata
jmp r-xdata
mov [ rw-data ] 0x1
dec ecx
je r-xdata
mov cl [ eax ]
mov ebx [ rw-data ]
movzx edx cl
test [ ebx + edx * 2 + 0x1 ] 0x80
je r-xdata
mov [ ebp + 0x14 ] 0x59
jmp r-xdata
mov eax [ esi ]
mov cl [ ebx ]
mov [ eax ] cl
inc [ esi ]
inc ebx
dec [ edi ]
jmp r-xdata
cmp [ edi ] 0x1
jbe r-xdata
mov [ ebp + 0x14 ] 0x6d
jmp r-xdata
dec ecx
je r-xdata
mov ecx [ esi ]
mov dl [ eax ]
mov [ ecx ] dl
inc [ esi ]
inc eax
dec [ edi ]
dec [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi ] 0x1
jbe r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx [ esi ]
mov [ ecx ] al
inc [ esi ]
inc ebx
dec [ edi ]
mov [ ebp + 0x14 ] 0x62
jmp r-xdata
dec ecx
jne r-xdata
mov edx [ esi ]
mov [ edx ] cl
inc [ esi ]
inc eax
dec [ edi ]
mov [ ebp + 0x14 ] 0x42
jmp r-xdata
sub_40b875
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_40c2ed
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40b910
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40bbca
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_40b910
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_40c2ed
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_40c274
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40bac3
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
call sub_40c161
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_408927
add esp 0x14
mov ebx eax
call sub_40c161
mov esi [ eax + 0x6c ]
call sub_40c161
mov eax [ eax + 0x70 ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_40f880
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_40c2ed
push 0x1
push esi
call sub_40c002
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_40bb6d
add esp 0xc
test eax eax
jne r-xdata
call sub_40c2ed
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40bc7e
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_40bac3
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_40c161
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_408927
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4087fc
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bc7e
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_40bb6d
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_40d110
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_40bbca
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_40c2ed
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_40c090
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40bc7e
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_40be3e
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_40869b
call sub_4086e4
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40bbca
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40bcf9
add esp 0x2c
test eax eax
je r-xdata
sub_40bcf9
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x24 ] 0x0
mov esi [ ebp + 0xc ]
mov eax [ esi - 0x4 ]
mov [ ebp - 0x28 ] eax
call sub_40c161
mov eax [ eax + 0x6c ]
mov [ ebp - 0x1c ] eax
call sub_40c161
mov eax [ eax + 0x70 ]
mov [ ebp - 0x20 ] eax
call sub_40c161
mov edi [ ebp + 0x8 ]
mov [ eax + 0x6c ] edi
call sub_40c161
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x70 ] ecx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push [ ebp + 0x14 ]
push esi
call sub_408783
add esp 0x14
mov [ ebp - 0x2c ] eax
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
call sub_40bdc6
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_40bdc6
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
call sub_40c161
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x6c ] ecx
call sub_40c161
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x70 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
call sub_408a4e
push eax
push edi
call sub_40c002
pop ecx
pop ecx
sub_40be14
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_40be3e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_40f880
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_40f880
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40c2ed
push 0x1
push edi
call sub_40f89c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40f880
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40f880
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40f89c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_40f89c
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40f89c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_409d30
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_40f8b8
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_40c069
pop ecx
pop ecx
push eax
push edi
call sub_409d30
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40c069
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_4086d6
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40c069
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_4086dd
jmp r-xdata
push eax
call sub_40c069
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_40c002
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_4086cf
or [ ebp - 0x4 ] 0xffffffff
sub_40c069
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_40c090
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_408a71
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_408a71
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40c0dc
push esi
call sub_40cfe1
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
pop esi
retn
push 0x74
push 0x1
call sub_40e6ab
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_40c14e
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
push 0x1
mov [ esi ] eax
pop eax
pop esi
retn
sub_40c161
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
pop edi
pop esi
retn
push 0x74
push 0x1
call sub_40e6ab
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x10
call sub_408c59
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_40c14e
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40c1c8
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call sub_4094a8
pop ecx
push 0x0
push [ rw-data ]
call [ TlsSetValue@IAT ]
pop esi
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call sub_4094a8
pop ecx
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
push eax
call sub_4094a8
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_4094a8
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_4094a8
pop ecx
mov eax [ esi + 0x50 ]
cmp eax rw-data
je r-xdata
push eax
call sub_4094a8
pop ecx
push esi
call sub_4094a8
pop ecx
push eax
call sub_4094a8
pop ecx
sub_40c274
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_40c161
cmp [ eax + 0x60 ] esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call sub_40c161
call [ eax + 0x60 ]
mov [ ebp - 0x4 ] esi
jmp r-xdata
push 0xa
call sub_40ce5d
push 0x16
call sub_4114a5
pop ecx
pop ecx
push 0x3
call sub_4096b4
push 0x1
push 0x0
push [ esp + 0xc ]
call sub_40f9c4
add esp 0xc
retn
sub_40c2ed
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_40c274
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_40c343
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40941c
pop ecx
jmp r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
push ebx
call sub_4094a8
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push 0x9
call sub_40d076
push ebx
call sub_40d630
pop ecx
mov [ ebp + 0xc ] eax
test eax eax
pop ecx
je r-xdata
mov eax edi
push esi
call sub_40d5ba
test eax eax
pop ecx
jne r-xdata
push 0x9
call sub_40d0d7
test esi esi
pop ecx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne r-xdata
push esi
push ebx
push eax
call sub_40de3b
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x1
pop esi
push esi
call sub_40d986
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edi ebx
jmp r-xdata
push 0x9
call sub_40d0d7
pop ecx
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
push eax
push ebx
push edi
call sub_408e20
push ebx
push [ ebp + 0xc ]
call sub_40d65b
add esp 0x14
mov eax esi
push eax
push ebx
push edi
call sub_408e20
push ebx
push [ ebp + 0xc ]
call sub_40d65b
add esp 0x14
mov eax esi
sub_40c47b
push ebp
mov ebp esp
push ecx
push ebx
push esi
call sub_40c161
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_40c5b9
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x54 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop esi
pop ebx
leave
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
add ecx edx
push edi
cmp edx ecx
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x58 ]
cmp eax 0xc000008e
jne r-xdata
lea ecx [ edx + edx * 2 ]
shl ecx 0x2
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x58 ] 0x83
jmp r-xdata
mov edi [ esi + 0x50 ]
add ecx 0xc
and [ ecx + edi - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x58 ] 0x81
jmp r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x58 ] edi
pop ecx
pop edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x58 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x58 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x58 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x58 ] 0x86
jmp r-xdata
mov [ esi + 0x58 ] 0x8a
sub_40c5b9
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax ] esi
je r-xdata
cmp [ eax ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_40c5f3
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_40a614
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_40f97b
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_40c64b
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_40a614
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_40941c
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_408c59
pop ecx
push esi
call sub_40e630
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_4094a8
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_40941c
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_40e630
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_40e540
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_408c59
pop ecx
sub_40c704
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_40a614
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_40c79d
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_40941c
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_40c79d
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_408c59
pop ecx
sub_40c79d
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_40c951
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_40941c
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_40941c
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_408e20
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4094a8
pop ecx
mov [ esp + 0x10 ] ebx
sub_40ca83
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x480
call sub_40941c
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x480 ]
push 0x1b
call sub_408c59
pop ecx
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x24
add eax 0x480
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
cmp [ ecx + eax * 4 ] 0xffffffff
lea esi [ ecx + eax * 4 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
cmp eax 0x3
jne r-xdata
add [ ebp - 0x4 ] 0x4
inc esi
inc ebx
cmp esi edi
jl r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx 0x480
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test al 0x8
jne r-xdata
push 0x480
call sub_40941c
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov cl [ ebx ]
mov [ eax + 0x4 ] cl
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_40cc3f
push ebx
push esi
push edi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jl r-xdata
mov edi eax
add eax 0x480
cmp edi eax
jae r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push [ esi ]
call sub_4094a8
and [ esi ] 0x0
pop ecx
lea ebx [ edi + 0xc ]
mov eax [ esi ]
add edi 0x24
add eax 0x480
add ebx 0x24
cmp edi eax
jb r-xdata
push ebx
call [ DeleteCriticalSection@IAT ]
cmp [ ebx - 0x4 ] 0x0
je r-xdata
sub_40cc93
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_40d5f2
test eax eax
jne r-xdata
push 0x1
pop eax
retn
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_40cccf
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push ebp
mov ebp [ HeapFree@IAT ]
jle r-xdata
push [ rw-data ]
push 0x0
push [ rw-data ]
call ebp
push [ rw-data ]
call [ HeapDestroy@IAT ]
pop ebp
pop ebx
retn
mov eax [ rw-data ]
push esi
push edi
mov edi [ VirtualFree@IAT ]
lea esi [ eax + 0xc ]
push 0x4000
push 0x100000
push [ esi ]
call edi
push 0x8000
push 0x0
push [ esi ]
call edi
push [ esi + 0x4 ]
push 0x0
push [ rw-data ]
call ebp
add esi 0x14
inc ebx
cmp ebx [ rw-data ]
jl r-xdata
pop edi
pop esi
sub_40cd44
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_4089e6
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_4089a4
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_4089e6
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_408a7a
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_40ce24
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40ce5d
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_40ce5d
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40ce5d
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_40e630
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_40e630
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_40e540
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40e540
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_40e550
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40e550
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_40e550
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_40f9f5
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_40e630
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_40fa80
add esp 0x10
sub_40cfb0
mov ecx [ esp + 0x4 ]
xor edx edx
mov eax rw-data
mov eax edx
shl eax 0x3
cmp ecx [ eax + rw-data ]
jne r-xdata
add eax 0x8
inc edx
cmp eax rw-data
jl r-xdata
xor eax eax
retn
mov eax [ eax + rw-data ]
retn
cmp ecx [ eax ]
je r-xdata
sub_40d00a
push esi
push edi
mov edi [ DeleteCriticalSection@IAT ]
mov esi rw-data
add esi 0x4
cmp esi rw-data
jl r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push [ rw-data ]
call edi
push [ rw-data ]
call edi
push [ rw-data ]
call edi
push [ rw-data ]
call edi
pop edi
pop esi
retn
cmp esi rw-data
je r-xdata
cmp esi rw-data
je r-xdata
cmp esi rw-data
je r-xdata
push eax
call edi
push [ esi ]
call sub_4094a8
pop ecx
sub_40d076
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
cmp [ eax * 4 + rw-data ] 0x0
lea esi [ eax * 4 + rw-data ]
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push edi
push 0x18
call sub_40941c
mov edi eax
pop ecx
test edi edi
jne r-xdata
push 0x11
call sub_40d076
cmp [ esi ] 0x0
pop ecx
push edi
jne r-xdata
push 0x11
call sub_408c59
pop ecx
call sub_4094a8
pop ecx
call [ InitializeCriticalSection@IAT ]
mov [ esi ] edi
jmp r-xdata
push 0x11
call sub_40d0d7
pop ecx
pop edi
sub_40d110
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40d194
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_40f8b8
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_40c274
pop esi
retn 0x4
sub_40d210
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_40d2d0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
inc edx
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40d30a
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40d52e
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_40a070
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40a070
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_40d52e
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_40d560
push ebp
mov ebp esp
push edi
push esi
mov edi [ ebp + 0x8 ]
mov edx edi
mov esi edi
xor eax eax
or ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
je r-xdata
mov eax edx
pop esi
pop edi
leave
retn
dec edi
dec edi
mov ah [ esi ]
mov al [ edi ]
mov [ esi ] al
mov [ edi ] ah
inc esi
dec edi
jmp r-xdata
cmp esi edi
jae r-xdata
sub_40d590
push esi
push 0x9
call sub_40d076
mov eax [ esp + 0xc ]
mov esi [ rw-data ]
push 0x9
mov [ rw-data ] eax
call sub_40d0d7
pop ecx
mov eax esi
pop ecx
pop esi
retn
sub_40d5ba
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_40d5f2
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_40d630
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_40d65b
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov eax [ ecx + 0x10 ]
mov esi edx
sub esi [ ecx + 0xc ]
mov ebx [ edx - 0x4 ]
add edx 0xfffffffc
push edi
shr esi 0xf
mov ecx esi
mov edi [ edx - 0x4 ]
imul ecx ecx 0x204
dec ebx
mov [ ebp - 0x4 ] edi
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + edx ]
test cl 0x1
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edi ebx
sar edi 0x4
dec edi
cmp edi 0x3f
jbe r-xdata
sar ecx 0x4
push 0x3f
dec ecx
pop edi
mov [ ebp + 0xc ] ecx
cmp ecx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x1
mov [ ebp - 0x14 ] ecx
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebx + edx + 0x4 ]
cmp ecx [ ebx + edx + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
push 0x3f
mov [ ebp - 0x8 ] edx
dec ecx
pop edx
cmp ecx edx
mov [ ebp + 0xc ] ecx
jbe r-xdata
mov ecx [ ebx + edx + 0x8 ]
mov edi [ ebx + edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ ebx + edx + 0x4 ]
mov edi [ ebx + edx + 0x8 ]
add ebx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] edi
mov [ ebp - 0xc ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
add ebx [ ebp - 0x4 ]
mov edi ebx
mov [ ebp - 0xc ] ebx
sar edi 0x4
dec edi
cmp edi edx
jbe r-xdata
mov [ ebp + 0xc ] edx
mov ecx edx
add ecx 0xffffffe0
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0xc4 ] edi
dec [ ecx ]
jne r-xdata
mov edi 0x80000000
shr edi cl
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0x44 ] edi
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ edx ] ebx
mov [ ebx + edx - 0x4 ] ebx
dec [ eax ]
jne r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
cmp ecx edi
je r-xdata
mov edi edx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edi
mov ecx [ ebp + 0x8 ]
and [ ecx ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edi - 0x20 ]
mov edi 0x80000000
shr edi cl
lea eax [ eax + esi * 4 + 0xc4 ]
or [ eax ] edi
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edi
shr ebx cl
lea eax [ eax + esi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
mov ebx [ ebp - 0xc ]
add ecx 0xffffffe0
mov edx 0x80000000
shr edx cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0xc4 ] edx
dec [ ecx ]
jne r-xdata
mov edx 0x80000000
shr edx cl
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0x44 ] edx
dec [ ecx ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call edi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_409d30
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
and [ ecx ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x14
mov [ rw-data ] eax
mov [ rw-data ] esi
sub_40d986
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_40dd40
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40dc8f
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_40dc8f
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_40dd40
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_40de3b
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_40e131
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ rw-data ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
push 0x8000
push ecx
call [ VirtualFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
and [ rw-data ] 0x0
cmp [ rw-data ] 0x1
jle r-xdata
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_409d30
add esp 0xc
dec [ rw-data ]
sub_40e202
push ebp
mov ebp esp
sub esp 0x13c
mov eax [ rw-data ]
push ebx
push esi
push edi
lea eax [ eax + eax * 4 ]
shl eax 0x2
push eax
push [ rw-data ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov ebx [ rw-data ]
xor edi edi
cmp [ rw-data ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x20 ] edi
jle r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov esi [ ebx + 0x10 ]
push 0x41c4
push esi
call [ IsBadWritePtr@IAT ]
test eax eax
jne r-xdata
push 0xfffffffe
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x144 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebx + 0x8 ]
add esi 0xc4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x3c ] esi
jmp r-xdata
pop eax
jmp r-xdata
push 0x40
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] edi
xor eax eax
pop ecx
cmp [ ebp - 0x14 ] eax
lea edi [ ebp - 0x13c ]
[ edi ]
jl r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ esi - 0x80 ]
jne r-xdata
push 0x8000
push [ ebp - 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
jne r-xdata
push 0xfffffff0
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ esi ]
jne r-xdata
push 0xfffffffc
jmp r-xdata
mov eax [ ebp - 0xc ]
xor ebx ebx
lea edx [ eax + 0xffc ]
add [ ebp - 0xc ] 0x8000
add [ ebp - 0x28 ] 0x204
shl [ ebp - 0x14 ] 0x1
inc [ ebp - 0x30 ]
add esi 0x4
cmp [ ebp - 0x30 ] 0x20
mov [ ebp - 0x3c ] esi
jl r-xdata
push 0xfffffffb
jmp r-xdata
cmp [ edx ] 0xffffffff
jne r-xdata
xor edi edi
mov eax [ ebp - 0x2c ]
cmp eax [ ebx ]
jne r-xdata
mov ecx [ esi ]
test cl 0x1
mov edi ecx
je r-xdata
push 0xffffffef
mov eax [ ebp - 0x18 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax ecx
sar eax 0x4
dec eax
cmp eax 0x3f
jle r-xdata
dec ecx
cmp ecx 0x400
jg r-xdata
add ebx 0x14
inc [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] ebx
cmp eax [ rw-data ]
jl r-xdata
inc [ ebp + eax * 4 - 0x13c ]
lea eax [ ebp + eax * 4 - 0x13c ]
push 0x3f
pop eax
push 0xfffffffa
jmp r-xdata
inc [ ebp - 0x4 ]
jmp r-xdata
xor edi edi
push 0xfffffff9
jmp r-xdata
test cl 0xf
jne r-xdata
cmp ecx 0x10
jl r-xdata
cmp ecx 0xff0
jg r-xdata
cmp [ ecx + esi - 0x4 ] edi
lea eax [ ecx + esi ]
jne r-xdata
push 0xfffffff8
jmp r-xdata
mov esi eax
cmp esi edx
jb r-xdata
jne r-xdata
add edx 0x1000
inc ebx
cmp ebx 0x8
jl r-xdata
cmp [ edx - 0xff4 ] 0xffffffff
lea esi [ edx - 0xff0 ]
jne r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
cmp [ esi ] eax
jne r-xdata
push 0xfffffff7
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x4 ] eax
cmp [ edx + 0x4 ] esi
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebx ]
je r-xdata
push 0xfffffff2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
cmp eax [ ecx ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
cmp eax ecx
jb r-xdata
cmp [ edi ] edx
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp ecx 0x20
jge r-xdata
push 0xfffffff6
jmp r-xdata
add ecx 0x8000
cmp eax ecx
jae r-xdata
push 0xfffffff1
jmp r-xdata
inc [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x8 ] 0x40
mov esi edi
jl r-xdata
add ecx 0xffffffe0
mov eax 0x80000000
shr eax cl
or [ ebp - 0x1c ] eax
or [ ebp - 0x18 ] eax
mov eax 0x80000000
shr eax cl
or [ ebp - 0x24 ] eax
or [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx eax
and cx 0xf000
add ecx 0xc
lea edx [ ecx + 0xff0 ]
cmp ecx edx
je r-xdata
mov eax [ esi + 0x4 ]
and [ ebp - 0x10 ] 0x0
lea edi [ esi + 0x8 ]
mov edx esi
cmp eax esi
mov [ ebp - 0x34 ] edx
je r-xdata
mov esi [ ebp - 0x3c ]
mov ebx [ ebp - 0x38 ]
push 0xfffffff5
jmp r-xdata
cmp ecx eax
je r-xdata
cmp ecx edx
je r-xdata
mov ebx [ ecx ]
and ebx 0xfffffffe
add ecx ebx
cmp ecx edx
jne r-xdata
mov ecx [ eax ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
jle r-xdata
cmp ecx [ ebp - 0x8 ]
jne r-xdata
push 0x3f
pop ecx
push 0xfffffff4
jmp r-xdata
mov ecx [ ebp - 0x34 ]
cmp [ eax + 0x8 ] ecx
jne r-xdata
push 0xfffffff3
jmp r-xdata
inc [ ebp - 0x10 ]
mov edx eax
mov eax [ eax + 0x4 ]
mov [ ebp - 0x34 ] edx
cmp eax esi
jne r-xdata
sub_40e540
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_40e550
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_40e630
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40e6ab
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
imul esi [ esp + 0x14 ]
cmp esi 0xffffffe0
mov ebx esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_40d5ba
test eax eax
pop ecx
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0x9
call sub_40d076
push ebx
call sub_40d986
push 0x9
mov edi eax
call sub_40d0d7
add esp 0xc
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push ebx
push 0x0
push edi
call sub_408d60
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_40e740
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x61
jl r-xdata
push [ esp + 0x10 ]
call sub_40e7af
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_40d076
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x7a
jg r-xdata
push esi
call edi
push 0x13
call sub_40d0d7
pop ecx
jmp r-xdata
sub eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_40e7af
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop ebx
leave
retn
cmp eax 0x7a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_40e87b
pop ecx
pop ecx
jmp r-xdata
sub eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rw-data ]
call sub_40d30a
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_40e87b
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40e924
add esp 0x1c
test eax eax
jne r-xdata
sub_40e8f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40e924
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_40a070
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_408d60
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_40ea70
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_40ea97
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xb
call sub_40d076
cmp [ rw-data ] 0x0
pop ecx
jne r-xdata
push 0xb
call sub_40d0d7
pop ecx
call sub_40eadb
inc [ rw-data ]
sub_40eadb
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0xc
pop edi
xor ebx ebx
push edi
mov [ ebp - 0x8 ] ebx
call sub_40d076
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
mov [ rw-data ] ebx
mov [ esp ] r--data
call sub_40fb9f
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push edi
call sub_40d0d7
mov [ esp ] rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax 0xffffffff
je r-xdata
push edi
call sub_40d0d7
pop ecx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov ecx [ rw-data ]
imul eax eax 0x3c
cmp [ rw-data ] bx
push 0x1
pop edx
mov [ rw-data ] eax
mov [ rw-data ] edx
je r-xdata
push [ rw-data ]
call sub_4094a8
push esi
call sub_40e630
inc eax
push eax
call sub_40941c
add esp 0xc
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push eax
push esi
call sub_40d110
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov esi ecx
imul esi esi 0x3c
add eax esi
mov [ rw-data ] eax
push esi
push eax
call sub_40e540
push edi
call sub_40d0d7
push 0x3
push esi
push [ rw-data ]
call sub_40fa80
mov eax [ rw-data ]
add esi 0x3
add esp 0x18
and [ eax + 0x3 ] 0x0
cmp [ esi ] 0x2d
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_409b65
pop ecx
mov bl 0x30
mov ecx eax
imul ecx ecx 0xe10
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] 0x1
inc esi
mov eax [ rw-data ]
and [ eax ] 0x0
cmp [ ebp - 0x4 ] ebx
jne r-xdata
sub eax ecx
mov [ rw-data ] edx
imul eax eax 0x3c
mov [ rw-data ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al bl
jl r-xdata
mov eax [ rw-data ]
and [ eax ] 0x0
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov esi [ WideCharToMultiByte@IAT ]
push eax
push ebx
push 0x3f
mov edi 0x220
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ rw-data ]
and [ eax + 0x3f ] 0x0
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x3f
push [ rw-data ]
push 0xffffffff
push rw-data
push edi
push [ rw-data ]
call esi
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
inc esi
push esi
call sub_409b65
imul eax eax 0x3c
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
movsx eax [ esi ]
test eax eax
mov [ rw-data ] eax
je r-xdata
neg ecx
mov [ rw-data ] ecx
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
push 0x3
push esi
push [ rw-data ]
call sub_40fa80
mov eax [ rw-data ]
add esp 0xc
and [ eax + 0x3 ] 0x0
jmp r-xdata
inc esi
push esi
call sub_409b65
pop ecx
mov ecx [ rw-data ]
add ecx eax
mov [ rw-data ] ecx
inc esi
jmp r-xdata
cmp al 0x39
jg r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
inc esi
jmp r-xdata
mov al [ esi ]
cmp al bl
jl r-xdata
sub_40ed83
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x1
pop ebx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] edi
je r-xdata
cmp eax [ rw-data ]
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push edi
push edi
push 0x2
push edi
push edi
push ebx
push 0x4
push eax
push ebx
push ebx
call sub_40ef2f
push edi
push edi
push edi
push 0x2
push edi
push edi
push 0x5
push 0xa
push [ esi + 0x14 ]
push ebx
push edi
call sub_40ef2f
add esp 0x58
movzx ecx [ rw-data ]
push ecx
cmp [ rw-data ] di
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ esi + 0x1c ]
cmp edx eax
jge r-xdata
cmp ecx eax
jl r-xdata
cmp ecx edx
jl r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
movzx ecx [ rw-data ]
push edi
push ecx
push eax
push edi
movzx ecx [ rw-data ]
push edi
push ecx
movzx ecx [ rw-data ]
push ecx
movzx ecx [ rw-data ]
push ecx
push eax
push ebx
jmp r-xdata
mov eax ebx
cmp ecx edx
jg r-xdata
cmp ecx eax
jg r-xdata
movzx eax [ rw-data ]
push eax
push edi
movzx eax [ rw-data ]
push edi
push eax
push [ esi + 0x14 ]
push edi
jmp r-xdata
movzx eax [ rw-data ]
push edi
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
push [ esi + 0x14 ]
push ebx
push ebx
call sub_40ef2f
movzx eax [ rw-data ]
add esp 0x2c
cmp [ rw-data ] di
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
jne r-xdata
cmp ecx eax
jle r-xdata
cmp ecx edx
jle r-xdata
push edi
call sub_40ef2f
add esp 0x2c
jmp r-xdata
mov eax [ esi + 0x8 ]
imul eax eax 0x3c
add eax [ esi + 0x4 ]
imul eax eax 0x3c
add eax [ esi ]
imul eax eax 0x3e8
cmp ecx edx
jne r-xdata
cmp ecx edx
jl r-xdata
cmp ecx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
jmp r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setge cl
mov eax ecx
jmp r-xdata
sub_40ef2f
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push ebx
mov ebx [ ebp + 0x10 ]
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test bl 0x3
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp + 0x10 ] ebx
and [ ebp + 0x10 ] 0x3
mov esi eax
jne r-xdata
mov ecx [ eax * 4 + rw-data ]
mov ecx [ eax * 4 + rw-data ]
jmp r-xdata
shl esi 0x2
mov eax [ esi + rw-data ]
shl esi 0x2
mov eax [ esi + rw-data ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
imul eax eax 0x3c
add eax [ rw-data ]
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jns r-xdata
mov eax [ ebp + 0x24 ]
mov [ rw-data ] ecx
imul eax eax 0x3c
add eax [ ebp + 0x28 ]
mov [ rw-data ] ebx
imul eax eax 0x3c
add eax [ ebp + 0x2c ]
imul eax eax 0x3e8
add eax [ ebp + 0x30 ]
mov [ rw-data ] eax
jmp r-xdata
add ecx [ ebp + 0x20 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
add ecx eax
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x1c ]
lea ecx [ ecx + eax - 0x7 ]
jmp r-xdata
mov edx ebx
lea ecx [ eax + 0x1 ]
imul edx edx 0x16d
lea eax [ ebx - 0x1 ]
push edi
sar eax 0x2
mov edi ecx
push 0x7
add edi eax
lea eax [ edx + edi - 0x63db ]
pop edi
cdq
idiv edi
mov eax [ ebp + 0x18 ]
pop edi
cmp edx [ ebp + 0x1c ]
jge r-xdata
mov edx 0x5265c00
cmp eax edx
jl r-xdata
add eax 0x5265c00
dec ecx
mov [ rw-data ] eax
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x18 ] 0x5
jne r-xdata
mov [ rw-data ] ebx
sub eax edx
inc ecx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov esi [ esi + rw-data ]
mov esi [ esi + rw-data ]
jmp r-xdata
sub ecx 0x7
jmp r-xdata
cmp ecx esi
jle r-xdata
sub_40f06f
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x76c
cmp ebx 0x46
jl r-xdata
or eax 0xffffffff
cmp ebx 0x8a
jg r-xdata
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ edi * 4 + rw-data ]
add esi [ ebp + 0x10 ]
test bl 0x3
jne r-xdata
call sub_40ea97
mov eax ebx
lea ecx [ ebx - 0x1 ]
imul eax eax 0x16d
sar ecx 0x2
mov edx esi
mov [ ebp - 0x8 ] esi
add edx ecx
mov [ ebp - 0x10 ] ebx
add eax edx
mov edx [ ebp + 0x1c ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
lea ecx [ eax + ecx * 8 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x18 ]
imul ecx ecx 0x3c
add ecx [ rw-data ]
dec edi
cmp [ ebp + 0x20 ] 0x1
mov [ ebp - 0x14 ] edi
pop edi
pop esi
lea ecx [ ecx + edx + 0x7c558180 ]
mov [ ebp + 0x8 ] ecx
je r-xdata
cmp edi 0x2
jle r-xdata
add ecx [ rw-data ]
cmp [ ebp + 0x20 ] 0xffffffff
jne r-xdata
inc esi
pop ebx
leave
retn
mov eax ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40ed62
pop ecx
mov ecx [ ebp + 0x8 ]
test eax eax
je r-xdata
sub_40f131
push ebp
mov ebp esp
sub esp 0x88
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
jl r-xdata
xor eax eax
cmp esi 0x5
jg r-xdata
push 0x13
call sub_40d076
inc [ rw-data ]
pop ecx
cmp esi ebx
push edi
je r-xdata
push 0x1
call [ Sleep@IAT ]
jmp r-xdata
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
cmp edi ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
call sub_40f492
cmp [ edi ] 0x4c
jne r-xdata
lea eax [ esi + esi * 2 ]
mov esi [ eax * 4 + rw-data ]
jmp r-xdata
push [ ebp + 0xc ]
push esi
call sub_40f377
pop ecx
pop ecx
jmp r-xdata
pop esi
pop ebx
leave
retn
push ebx
push ebx
lea eax [ ebp - 0x88 ]
push ebx
push eax
push edi
call sub_40f54b
mov esi eax
add esp 0x14
cmp esi ebx
je r-xdata
cmp [ edi + 0x1 ] 0x43
jne r-xdata
push 0x13
call sub_40d0d7
pop ecx
mov esi eax
mov esi rw-data
mov edi esi
cmp [ edi + 0x2 ] 0x5f
jne r-xdata
add edi 0xc
inc ebx
cmp edi rw-data
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_40d110
pop ecx
test eax eax
pop ecx
je r-xdata
push r--data
push edi
call sub_40d2d0
mov esi eax
pop ecx
cmp esi ebx
pop ecx
je r-xdata
cmp edi esi
je r-xdata
xor edi edi
cmp [ ebp - 0x4 ] edi
je r-xdata
inc [ ebp + 0x8 ]
lea eax [ ebp - 0x88 ]
push eax
push ebx
call sub_40f377
pop ecx
test eax eax
pop ecx
jne r-xdata
push 0x13
call sub_40d0d7
pop ecx
xor esi esi
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] edi
jmp r-xdata
call sub_40f492
push [ rw-data ]
mov esi eax
call sub_4094a8
pop ecx
mov [ rw-data ] edi
jmp r-xdata
and [ ebp - 0x4 ] eax
jmp r-xdata
dec [ rw-data ]
mov eax esi
pop edi
jmp r-xdata
mov eax esi
sub eax edi
mov [ ebp - 0x4 ] eax
je r-xdata
jne r-xdata
cmp [ esi ] 0x3b
je r-xdata
xor esi esi
jmp r-xdata
mov [ ebp + 0xc ] 0x1
mov ebx rw-data
jmp r-xdata
push eax
push edi
push [ ebx ]
call sub_4108a0
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp + 0xc ]
add ebx 0xc
cmp ebx rw-data
jle r-xdata
push [ ebx ]
call sub_40e630
cmp [ ebp - 0x4 ] eax
pop ecx
je r-xdata
mov eax [ ebp - 0x4 ]
inc esi
push r--data
push esi
call sub_410860
mov edi eax
pop ecx
test edi edi
pop ecx
jne r-xdata
cmp [ ebp + 0xc ] 0x5
jg r-xdata
cmp [ esi ] 0x3b
jne r-xdata
add edi esi
cmp [ edi ] 0x0
je r-xdata
push edi
lea eax [ ebp - 0x88 ]
push esi
push eax
call sub_40fa80
and [ ebp + edi - 0x88 ] 0x0
lea eax [ ebp - 0x88 ]
push eax
push [ ebp + 0xc ]
call sub_40f377
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
inc edi
cmp [ edi ] 0x0
je r-xdata
inc [ ebp + 0x8 ]
push r--data
push edi
call sub_40d2d0
mov esi eax
pop ecx
test esi esi
pop ecx
jne r-xdata
xor ebx ebx
xor ebx ebx
sub_40f377
push ebp
mov ebp esp
sub esp 0xa4
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push edi
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xa4 ]
push eax
push [ ebp + 0xc ]
call sub_40f54b
add esp 0x14
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0xa4 ]
push eax
call sub_40e630
inc eax
push eax
call sub_40941c
pop ecx
mov [ ebp + 0xc ] eax
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea esi [ edi + edi * 2 ]
lea ebx [ edi * 4 + rw-data ]
shl esi 0x2
push 0x6
mov eax [ esi + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
mov [ ebp - 0x14 ] eax
lea eax [ edi + edi * 2 ]
lea eax [ eax * 2 + rw-data ]
mov [ ebp - 0x8 ] eax
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_408e20
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xa4 ]
push eax
push [ ebp + 0xc ]
call sub_40e540
mov [ esi + rw-data ] eax
push 0x6
movzx eax [ ebp - 0x10 ]
mov [ ebx ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
call sub_408e20
mov eax [ ebp - 0x18 ]
add esp 0x20
cmp edi 0x2
jne r-xdata
cmp edi 0x1
jne r-xdata
mov [ rw-data ] eax
call [ esi + rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] eax
cmp [ ebp + 0x8 ] rw-data
je r-xdata
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi + rw-data ] eax
call sub_4094a8
mov eax [ ebp - 0x14 ]
pop ecx
mov [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
mov eax [ esi + rw-data ]
push [ ebp + 0x8 ]
call sub_4094a8
pop ecx
sub_40f492
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
push 0x1
test eax eax
pop ebp
jne r-xdata
and [ eax ] 0x0
push [ rw-data ]
mov edi r--data
push edi
push [ rw-data ]
push 0x3
push [ rw-data ]
call sub_40f666
mov esi rw-data
add esp 0x14
mov ebx esi
push 0x351
call sub_40941c
pop ecx
mov [ rw-data ] eax
push [ esi ]
mov ebx esi
push edi
push [ esi - 0x4 ]
push 0x3
push [ rw-data ]
call sub_40f666
add esp 0x14
cmp esi rw-data
jl r-xdata
xor ebp ebp
push r--data
push [ rw-data ]
call sub_40e550
push [ esi + 0xc ]
add esi 0xc
push [ ebx ]
call sub_40d110
add esp 0x10
test eax eax
je r-xdata
pop edi
pop esi
test ebp ebp
pop ebp
pop ebx
jne r-xdata
push [ rw-data ]
call sub_4094a8
and [ rw-data ] 0x0
mov eax [ rw-data ]
pop ecx
retn
mov eax [ rw-data ]
retn
sub_40f54b
push ebp
mov ebp esp
sub esp 0x88
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
cmp esi edx
push edi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] 0x43
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edi rw-data
push esi
push edi
call sub_40d110
pop ecx
test eax eax
pop ecx
je r-xdata
cmp [ esi + 0x1 ] dl
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ebx rw-data
push esi
push ebx
call sub_40d110
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
and [ eax + 0x1 ] dl
cmp ecx edx
mov [ eax ] 0x43
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push 0x6
push rw-data
push [ ebp + 0x10 ]
call sub_408e20
add esp 0xc
lea eax [ ebp - 0x88 ]
push esi
push eax
call sub_40f68b
pop ecx
test eax eax
pop ecx
jne r-xdata
mov ecx [ ebp + 0x14 ]
cmp ecx edx
je r-xdata
mov [ ecx ] dx
mov [ ecx + 0x2 ] dx
mov [ ecx + 0x4 ] dx
push edi
push [ ebp + 0xc ]
call sub_40e540
pop ecx
mov eax edi
pop ecx
push 0x4
push rw-data
push [ ebp + 0x14 ]
call sub_408e20
add esp 0xc
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0x88 ]
push rw-data
push eax
call sub_4108d8
add esp 0xc
test eax eax
jne r-xdata
mov [ ecx ] edx
jmp r-xdata
movzx eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x88 ]
push eax
push edi
call sub_40f757
cmp [ esi ] 0x0
pop ecx
pop ecx
je r-xdata
push edi
push esi
jmp r-xdata
push ebx
call sub_40e540
pop ecx
pop ecx
sub_40f666
push edi
mov edi [ esp + 0xc ]
test edi edi
jle r-xdata
pop edi
retn
push esi
lea esi [ esp + 0x10 ]
push [ esi + 0x4 ]
add esi 0x4
push [ esp + 0x10 ]
call sub_40e550
pop ecx
dec edi
pop ecx
jne r-xdata
pop esi
sub_40f68b
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x88
push 0x0
push edi
call sub_408d60
mov esi [ ebp + 0xc ]
add esp 0xc
mov al [ esi ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp al 0x2e
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
and [ ebp + 0xc ] 0x0
cmp [ esi + 0x1 ] 0x0
lea eax [ esi + 0x1 ]
je r-xdata
or eax 0xffffffff
cmp [ ebp + 0xc ] 0x0
mov bl [ eax + esi ]
lea edi [ eax + esi ]
jne r-xdata
add edi 0x80
push eax
push edi
call sub_40e540
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jge r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jge r-xdata
cmp bl 0x2e
je r-xdata
test bl bl
je r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push [ ebp + 0x8 ]
jmp r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
add eax 0x80
cmp bl 0x2c
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
add eax 0x40
jmp r-xdata
call sub_40fa80
add esp 0xc
cmp bl 0x2c
je r-xdata
test bl bl
je r-xdata
push eax
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
jmp r-xdata
push r--data
push esi
call sub_410860
pop ecx
test eax eax
pop ecx
je r-xdata
sub_40f757
push esi
mov esi [ esp + 0xc ]
push esi
push [ esp + 0xc ]
call sub_40e540
cmp [ esi + 0x40 ] 0x0
lea eax [ esi + 0x40 ]
pop ecx
pop ecx
je r-xdata
cmp [ esi + 0x80 ] 0x0
lea eax [ esi + 0x80 ]
pop esi
je r-xdata
push eax
push r--data
push 0x2
push [ esp + 0x14 ]
call sub_40f666
add esp 0x10
retn
push eax
push r--data
push 0x2
push [ esp + 0x10 ]
call sub_40f666
add esp 0x10
sub_40f7b0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov al 0xff
mov edi edi
[ rw-data ]
push 0x13
call sub_40d076
mov [ esp ] 0x1
push 0x0
jmp r-xdata
movsx eax al
jmp r-xdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je r-xdata
mov ebx eax
pop eax
or eax eax
jne r-xdata
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je r-xdata
mov eax 0xff
xor ebx ebx
nop
pop ebx
pop esi
pop edi
leave
retn
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
push 0x13
call sub_40d0d7
add esp 0x4
[ rw-data ]
jmp r-xdata
or al al
je r-xdata
push eax
push ebx
call sub_4111f6
mov ebx eax
add esp 0x4
call sub_4111f6
add esp 0x4
cmp bl al
je r-xdata
sbb al al
sbb al 0xff
mov eax ebx
sbb eax eax
sbb eax 0xffffffff
sub_40f99d
cmp [ rw-data ] 0x3a4
jne r-xdata
xor eax eax
retn
push 0x3
push 0x0
push [ esp + 0xc ]
call sub_40f9c4
add esp 0xc
test eax eax
je r-xdata
push 0x1
pop eax
retn
sub_40f9c4
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_40f9f5
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_40fa80
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_40fb9f
cmp [ rw-data ] 0x0
push ebx
push esi
mov esi [ rw-data ]
push edi
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ rw-data ] esi
je r-xdata
push ebx
call sub_40e630
pop ecx
mov edi eax
call sub_4116b5
test eax eax
jne r-xdata
push eax
call sub_40e630
cmp eax edi
pop ecx
jbe r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
add esi 0x4
jmp r-xdata
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push edi
push ebx
push eax
call sub_411676
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40fc1c
cmp [ rw-data ] 0x0
push esi
je r-xdata
push [ rw-data ]
mov [ rw-data ] rw-data
call sub_40fffb
push [ rw-data ]
call sub_4094a8
and [ rw-data ] 0x0
pop ecx
pop ecx
push 0xac
push 0x1
call sub_40e6ab
mov esi eax
pop ecx
test esi esi
pop ecx
jne r-xdata
push esi
call sub_40fcad
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
pop esi
retn
push [ rw-data ]
mov [ rw-data ] esi
call sub_40fffb
push [ rw-data ]
call sub_4094a8
pop ecx
mov [ rw-data ] esi
pop ecx
jmp r-xdata
push esi
call sub_40fffb
push esi
call sub_4094a8
pop ecx
pop ecx
jmp r-xdata
xor eax eax
pop esi
retn
sub_40fcad
push ebp
mov ebp esp
push ecx
push ecx
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
test esi esi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
jne r-xdata
push ebx
lea ecx [ esi + 0x4 ]
push edi
push ecx
push 0x31
push eax
push 0x1
pop ebx
push ebx
call sub_411723
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push [ ebp - 0x4 ]
push ebx
call sub_411723
add esp 0x40
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push [ ebp - 0x4 ]
push ebx
call sub_411723
push esi
push 0x37
push [ ebp - 0x4 ]
or edi eax
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push [ ebp - 0x4 ]
push ebx
call sub_411723
add esp 0x40
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push [ ebp - 0x4 ]
push ebx
call sub_411723
add esp 0x40
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push [ ebp - 0x4 ]
push ebx
call sub_411723
add esp 0x40
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push [ ebp - 0x4 ]
push ebx
call sub_411723
add esp 0x40
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push [ ebp - 0x4 ]
push ebx
call sub_411723
add esp 0x40
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push [ ebp - 0x4 ]
push ebx
call sub_411723
add esp 0x40
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push [ ebp - 0x4 ]
push ebx
call sub_411723
add esp 0x40
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push [ ebp - 0x4 ]
push ebx
call sub_411723
add esp 0x40
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push [ ebp - 0x4 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push [ ebp - 0x4 ]
push ebx
call sub_411723
add esp 0x40
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x8 ]
push ebx
call sub_411723
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x8 ]
push ebx
call sub_411723
add esi 0xa8
or edi eax
push esi
push 0x1003
push [ ebp - 0x8 ]
push ebx
call sub_411723
add esp 0x30
or eax edi
pop edi
pop ebx
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_40fffb
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push [ esi + 0x4 ]
call sub_4094a8
push [ esi + 0x8 ]
call sub_4094a8
push [ esi + 0xc ]
call sub_4094a8
push [ esi + 0x10 ]
call sub_4094a8
push [ esi + 0x14 ]
call sub_4094a8
push [ esi + 0x18 ]
call sub_4094a8
push [ esi ]
call sub_4094a8
push [ esi + 0x20 ]
call sub_4094a8
push [ esi + 0x24 ]
call sub_4094a8
push [ esi + 0x28 ]
call sub_4094a8
push [ esi + 0x2c ]
call sub_4094a8
push [ esi + 0x30 ]
call sub_4094a8
push [ esi + 0x34 ]
call sub_4094a8
push [ esi + 0x1c ]
call sub_4094a8
push [ esi + 0x38 ]
call sub_4094a8
push [ esi + 0x3c ]
call sub_4094a8
add esp 0x40
push [ esi + 0x40 ]
call sub_4094a8
push [ esi + 0x44 ]
call sub_4094a8
push [ esi + 0x48 ]
call sub_4094a8
push [ esi + 0x4c ]
call sub_4094a8
push [ esi + 0x50 ]
call sub_4094a8
push [ esi + 0x54 ]
call sub_4094a8
push [ esi + 0x58 ]
call sub_4094a8
push [ esi + 0x5c ]
call sub_4094a8
push [ esi + 0x60 ]
call sub_4094a8
push [ esi + 0x64 ]
call sub_4094a8
push [ esi + 0x68 ]
call sub_4094a8
push [ esi + 0x6c ]
call sub_4094a8
push [ esi + 0x70 ]
call sub_4094a8
push [ esi + 0x74 ]
call sub_4094a8
push [ esi + 0x78 ]
call sub_4094a8
push [ esi + 0x7c ]
call sub_4094a8
add esp 0x40
push [ esi + 0x80 ]
call sub_4094a8
push [ esi + 0x84 ]
call sub_4094a8
push [ esi + 0x88 ]
call sub_4094a8
push [ esi + 0x8c ]
call sub_4094a8
push [ esi + 0x90 ]
call sub_4094a8
push [ esi + 0x94 ]
call sub_4094a8
push [ esi + 0x98 ]
call sub_4094a8
push [ esi + 0x9c ]
call sub_4094a8
push [ esi + 0xa0 ]
call sub_4094a8
push [ esi + 0xa4 ]
call sub_4094a8
push [ esi + 0xa8 ]
call sub_4094a8
add esp 0x2c
sub_41018b
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push ebp
push edi
movzx edi [ rw-data ]
je r-xdata
push [ rw-data ]
call sub_4094a8
push [ rw-data ]
call sub_4094a8
push [ rw-data ]
call sub_4094a8
push 0x2
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_40941c
mov ecx [ rw-data ]
add esp 0x10
mov [ ecx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax ebx
je r-xdata
push esi
push rw-data
push 0xe
push edi
push 0x1
pop ebp
push ebp
call sub_411723
push rw-data
push 0xf
push edi
push ebp
mov esi eax
call sub_411723
push rw-data
push 0x10
push edi
push ebp
or esi eax
call sub_411723
push [ rw-data ]
or esi eax
call sub_410360
add esp 0x34
cmp esi ebx
pop esi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push r--data
push eax
call sub_40e540
push 0x2
call sub_40941c
mov ecx [ rw-data ]
add esp 0xc
mov [ ecx + 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax rw-data
je r-xdata
push [ rw-data ]
call sub_4094a8
push [ rw-data ]
call sub_4094a8
push [ rw-data ]
call sub_4094a8
add esp 0xc
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
pop edi
pop ebp
pop ebx
retn
push 0x2
mov [ eax ] bl
call sub_40941c
pop ecx
mov ecx [ rw-data ]
mov [ ecx + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov [ ecx ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ eax + 0x8 ] ecx
mov eax [ rw-data ]
mov eax [ eax ]
mov al [ eax ]
mov [ rw-data ] ebp
mov [ rw-data ] al
jmp r-xdata
push eax
call sub_4094a8
mov eax [ rw-data ]
push [ eax + 0x4 ]
call sub_4094a8
mov eax [ rw-data ]
push [ eax + 0x8 ]
call sub_4094a8
add esp 0xc
mov [ eax ] bl
mov eax [ rw-data ]
mov eax [ eax ]
mov al [ eax ]
mov [ rw-data ] 0x1
mov [ rw-data ] al
xor eax eax
sub_410360
mov ecx [ esp + 0x4 ]
mov al [ ecx ]
test al al
je r-xdata
retn
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
cmp al 0x30
jl r-xdata
pop esi
mov dl [ eax + 0x1 ]
lea esi [ eax + 0x1 ]
mov [ eax ] dl
mov eax esi
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
sub_410397
cmp [ rw-data ] 0x0
push esi
je r-xdata
mov eax [ rw-data ]
push [ rw-data ]
mov ecx [ eax ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
mov eax [ eax + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] rw-data
call sub_4105bb
push [ rw-data ]
call sub_4094a8
and [ rw-data ] 0x0
pop ecx
pop ecx
push 0x30
push 0x1
call sub_40e6ab
mov esi eax
pop ecx
test esi esi
pop ecx
jne r-xdata
push esi
call sub_410462
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
pop esi
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov [ esi + 0x8 ] eax
push [ rw-data ]
mov [ rw-data ] esi
call sub_4105bb
push [ rw-data ]
call sub_4094a8
pop ecx
mov [ rw-data ] esi
pop ecx
jmp r-xdata
push esi
call sub_4105bb
push esi
call sub_4094a8
pop ecx
pop ecx
jmp r-xdata
xor eax eax
pop esi
retn
sub_410462
push esi
mov esi [ esp + 0x8 ]
push edi
movzx edi [ rw-data ]
test esi esi
jne r-xdata
lea eax [ esi + 0xc ]
push ebx
push eax
push 0x15
push edi
push 0x1
call sub_411723
mov ebx eax
lea eax [ esi + 0x10 ]
push eax
push 0x14
push edi
push 0x1
call sub_411723
or ebx eax
lea eax [ esi + 0x14 ]
push eax
push 0x16
push edi
push 0x1
call sub_411723
or ebx eax
lea eax [ esi + 0x18 ]
push eax
push 0x17
push edi
push 0x1
call sub_411723
add esp 0x40
or ebx eax
lea eax [ esi + 0x1c ]
push eax
push 0x18
push edi
push 0x1
call sub_411723
push [ esi + 0x1c ]
or ebx eax
call sub_410584
lea eax [ esi + 0x20 ]
push eax
push 0x50
push edi
push 0x1
call sub_411723
or ebx eax
lea eax [ esi + 0x24 ]
push eax
push 0x51
push edi
push 0x1
call sub_411723
or ebx eax
lea eax [ esi + 0x28 ]
push eax
push 0x1a
push edi
push 0x0
call sub_411723
add esp 0x44
or ebx eax
lea eax [ esi + 0x29 ]
push eax
push 0x19
push edi
push 0x0
call sub_411723
or ebx eax
lea eax [ esi + 0x2a ]
push eax
push 0x54
push edi
push 0x0
call sub_411723
or ebx eax
lea eax [ esi + 0x2b ]
push eax
push 0x55
push edi
push 0x0
call sub_411723
or ebx eax
lea eax [ esi + 0x2c ]
push eax
push 0x56
push edi
push 0x0
call sub_411723
add esp 0x40
or ebx eax
lea eax [ esi + 0x2d ]
push eax
push 0x57
push edi
push 0x0
call sub_411723
or ebx eax
lea eax [ esi + 0x2e ]
push eax
push 0x52
push edi
push 0x0
call sub_411723
add esi 0x2f
or ebx eax
push esi
push 0x53
push edi
push 0x0
call sub_411723
add esp 0x30
or eax ebx
pop ebx
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
retn
sub_410584
mov ecx [ esp + 0x4 ]
mov al [ ecx ]
test al al
je r-xdata
retn
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
cmp al 0x30
jl r-xdata
pop esi
mov dl [ eax + 0x1 ]
lea esi [ eax + 0x1 ]
mov [ eax ] dl
mov eax esi
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
sub_4105bb
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
cmp eax rw-data
je r-xdata
push eax
call sub_4094a8
push [ esi + 0x10 ]
call sub_4094a8
push [ esi + 0x14 ]
call sub_4094a8
push [ esi + 0x18 ]
call sub_4094a8
push [ esi + 0x1c ]
call sub_4094a8
push [ esi + 0x20 ]
call sub_4094a8
push [ esi + 0x24 ]
call sub_4094a8
add esp 0x1c
sub_410609
push ebp
mov ebp esp
sub esp 0x24
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
push [ rw-data ]
mov eax rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_4094a8
push [ rw-data ]
call sub_4094a8
pop ecx
mov [ rw-data ] ebx
pop ecx
mov [ rw-data ] ebx
xor eax eax
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi 0x202
push esi
call sub_40941c
mov edi eax
push esi
mov [ ebp - 0x10 ] edi
call sub_40941c
push 0x101
mov [ ebp - 0xc ] eax
call sub_40941c
push esi
mov [ ebp - 0x4 ] eax
call sub_40941c
add esp 0x10
cmp edi ebx
mov [ ebp - 0x8 ] eax
je r-xdata
movzx eax [ rw-data ]
push rw-data
push 0x1004
push eax
push ebx
call sub_411723
add esp 0x10
test eax eax
jne r-xdata
push [ ebp - 0x10 ]
call sub_4094a8
push [ ebp - 0xc ]
call sub_4094a8
pop ecx
pop ecx
push 0x1
pop ebx
jmp r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0x4 ]
call sub_4094a8
push [ ebp - 0x8 ]
call sub_4094a8
pop ecx
mov eax ebx
pop ecx
pop edi
pop esi
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop ebx
leave
retn
cmp eax ebx
je r-xdata
xor eax eax
mov esi 0x100
mov ecx [ ebp - 0x4 ]
mov [ eax + ecx ] al
inc eax
cmp eax esi
jl r-xdata
lea eax [ ebp - 0x24 ]
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] 0x2
ja r-xdata
movzx eax [ ebp - 0x24 ]
cmp eax 0x1
mov [ rw-data ] eax
jle r-xdata
push ebx
lea eax [ edi + 0x2 ]
push ebx
push ebx
push eax
push esi
push [ ebp - 0x4 ]
push 0x1
call sub_40e924
add esp 0x1c
test eax eax
je r-xdata
cmp [ ebp - 0x1e ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ edi ] bx
xor eax eax
lea eax [ ebp - 0x1d ]
mov [ ecx ] ax
inc ecx
inc ecx
inc eax
cmp eax esi
jl r-xdata
mov eax [ ebp - 0xc ]
push ebx
push ebx
lea edi [ eax + 0x2 ]
push edi
push esi
push [ ebp - 0x8 ]
push 0x1
call sub_411861
add esp 0x18
test eax eax
je r-xdata
movzx ecx [ eax - 0x1 ]
movzx edx dl
mov eax [ ebp - 0xc ]
mov [ eax ] bx
cmp [ rw-data ] 0x1
jle r-xdata
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ ecx + edx ] bl
inc ecx
movzx edx [ eax ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] edi
add eax 0x2
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0x1e ] bl
je r-xdata
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp ecx edx
jg r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
call sub_4094a8
pop ecx
lea eax [ ebp - 0x1d ]
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
push eax
call sub_4094a8
pop ecx
movzx esi [ eax - 0x1 ]
movzx ecx cl
cmp esi ecx
jg r-xdata
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + esi * 2 + 0x2 ]
mov cl [ eax ]
cmp cl bl
je r-xdata
mov [ ecx ] 0x8000
inc esi
movzx edx [ eax ]
inc ecx
inc ecx
cmp esi edx
jle r-xdata
sub_410860
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_4108a0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_4108d8
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ esp + 0x10 ]
cmp esi ebx
je r-xdata
call sub_411009
test eax eax
je r-xdata
call sub_410f08
mov [ rw-data ] esi
cmp [ esi ] bl
je r-xdata
mov [ rw-data ] sub_41103f
mov eax [ GetLocaleInfoA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
add esi 0x80
push esi
call sub_410f22
mov edi eax
pop ecx
cmp edi ebx
je r-xdata
lea eax [ esi + 0x40 ]
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push rw-data
push 0x40
push rw-data
call sub_410a55
add esp 0xc
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ebx
cmp ecx ebx
je r-xdata
cmp [ eax ] bl
je r-xdata
push 0x1
push [ rw-data ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
cmp eax ebx
je r-xdata
cmp [ ecx ] bl
je r-xdata
push rw-data
push 0x16
push rw-data
call sub_410a55
mov eax [ rw-data ]
add esp 0xc
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
cmp [ eax ] bl
je r-xdata
cmp eax ebx
je r-xdata
mov esi [ esp + 0x18 ]
cmp esi ebx
je r-xdata
mov cx [ rw-data ]
mov [ eax ] cx
mov cx [ rw-data ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] di
call sub_410e4b
jmp r-xdata
call sub_410d38
jmp r-xdata
cmp [ eax ] bl
je r-xdata
push 0x1
pop eax
jmp r-xdata
push 0x40
push esi
push 0x1001
push [ rw-data ]
call [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
call sub_410aad
jmp r-xdata
pop edi
pop esi
pop ebx
retn
lea eax [ esi + 0x40 ]
push 0x40
push eax
push 0x1002
push [ rw-data ]
call [ rw-data ]
test eax eax
je r-xdata
add esi 0x80
push 0xa
push esi
push edi
call sub_411a26
add esp 0xc
sub_410a55
push ebp
mov ebp esp
push ebx
push esi
push edi
xor ebx ebx
cmp [ ebp + 0xc ] ebx
push 0x1
pop eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
push [ eax + esi * 8 ]
lea edi [ eax + esi * 8 ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_40f7b0
pop ecx
test eax eax
pop ecx
jne r-xdata
jge r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
sub_410aad
push [ rw-data ]
call sub_40e630
push [ rw-data ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ rw-data ] eax
call sub_40e630
sub eax 0x3
pop ecx
neg eax
sbb eax eax
and [ rw-data ] 0x0
inc eax
cmp [ rw-data ] 0x0
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ rw-data ]
call sub_41115e
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
jmp r-xdata
and [ rw-data ] 0x0
test ah 0x2
je r-xdata
push 0x1
push sub_410b34
call [ EnumSystemLocalesA@IAT ]
mov eax [ rw-data ]
test ah 0x1
je r-xdata
test al 0x7
jne r-xdata
retn
sub_410b34
push ebp
mov ebp esp
sub esp 0x78
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_411125
pop ecx
mov esi eax
lea eax [ ebp - 0x78 ]
push 0x78
push eax
mov eax [ rw-data ]
neg eax
sbb eax eax
and ax 0xf005
add eax 0x1002
push eax
push esi
call [ rw-data ]
test eax eax
je r-xdata
and [ rw-data ] 0x0
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x78 ]
push eax
push [ rw-data ]
call sub_40f7b0
pop ecx
mov ebx 0xfffff002
test eax eax
pop ecx
mov edi 0x1001
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ecx [ rw-data ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
lea eax [ ebp - 0x78 ]
push 0x78
push eax
mov eax [ rw-data ]
neg eax
sbb eax eax
and eax ebx
add eax edi
push eax
push esi
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
not eax
shr eax 0x2
and eax 0x1
lea eax [ ebp - 0x78 ]
push 0x78
push eax
mov eax [ rw-data ]
neg eax
sbb eax eax
and eax ebx
add eax edi
push eax
push esi
call [ rw-data ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
push [ rw-data ]
call sub_40f7b0
pop ecx
test eax eax
pop ecx
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
push [ rw-data ]
call sub_40f7b0
pop ecx
test eax eax
pop ecx
jne r-xdata
test [ rw-data ] 0x2
jne r-xdata
or [ rw-data ] 0x304
mov [ rw-data ] esi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
or [ rw-data ] 0x2
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
or [ rw-data ] 0x1
cmp [ rw-data ] edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
test [ rw-data ] 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x78 ]
push eax
push [ rw-data ]
call sub_411bd0
add esp 0xc
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x78 ]
push eax
push [ rw-data ]
call sub_411bd0
add esp 0xc
test eax eax
jne r-xdata
mov [ rw-data ] esi
push [ rw-data ]
call sub_40e630
cmp eax [ rw-data ]
pop ecx
jne r-xdata
push esi
call sub_410f88
test eax eax
pop ecx
je r-xdata
push [ rw-data ]
or [ rw-data ] 0x2
mov [ rw-data ] esi
call sub_40e630
cmp eax [ rw-data ]
pop ecx
jne r-xdata
push edi
push 0x1
jmp r-xdata
or [ rw-data ] 0x1
mov [ rw-data ] esi
jmp r-xdata
push esi
call sub_410fa7
pop ecx
test eax eax
pop ecx
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
sub_410d38
push [ rw-data ]
call sub_40e630
sub eax 0x3
pop ecx
neg eax
sbb eax eax
inc eax
mov [ rw-data ] eax
je r-xdata
push [ rw-data ]
call sub_41115e
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
jmp r-xdata
retn
and [ rw-data ] 0x0
push 0x1
push sub_410d8e
call [ EnumSystemLocalesA@IAT ]
test [ rw-data ] 0x4
jne r-xdata
sub_410d8e
push ebp
mov ebp esp
sub esp 0x78
push esi
push [ ebp + 0x8 ]
call sub_411125
pop ecx
mov esi eax
lea eax [ ebp - 0x78 ]
push 0x78
push eax
mov eax [ rw-data ]
neg eax
sbb eax eax
and ax 0xf002
add eax 0x1001
push eax
push esi
call [ rw-data ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
push [ rw-data ]
call sub_40f7b0
pop ecx
test eax eax
pop ecx
jne r-xdata
and [ rw-data ] eax
push 0x1
pop eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] eax
jne r-xdata
pop esi
leave
retn 0x4
mov eax [ rw-data ]
not eax
shr eax 0x2
and eax 0x1
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ rw-data ] 0x4
mov [ rw-data ] esi
mov [ rw-data ] esi
push 0x1
jmp r-xdata
push eax
lea eax [ ebp - 0x78 ]
push eax
push [ rw-data ]
call sub_411bd0
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_410fa7
pop ecx
test eax eax
pop ecx
je r-xdata
push eax
sub_410e4b
push [ rw-data ]
call sub_40e630
sub eax 0x3
pop ecx
neg eax
sbb eax eax
push 0x1
inc eax
push sub_410e82
mov [ rw-data ] eax
call [ EnumSystemLocalesA@IAT ]
test [ rw-data ] 0x4
jne r-xdata
retn
and [ rw-data ] 0x0
sub_410e82
push ebp
mov ebp esp
sub esp 0x78
push esi
push [ ebp + 0x8 ]
call sub_411125
pop ecx
mov esi eax
lea eax [ ebp - 0x78 ]
push 0x78
push eax
mov eax [ rw-data ]
neg eax
sbb eax eax
and ax 0xf005
add eax 0x1002
push eax
push esi
call [ rw-data ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
push [ rw-data ]
call sub_40f7b0
pop ecx
test eax eax
pop ecx
jne r-xdata
and [ rw-data ] eax
push 0x1
pop eax
jmp r-xdata
mov eax [ rw-data ]
not eax
shr eax 0x2
and eax 0x1
push esi
call sub_410f88
test eax eax
pop ecx
je r-xdata
pop esi
leave
retn 0x4
or [ rw-data ] 0x4
mov [ rw-data ] esi
mov [ rw-data ] esi
sub_410f22
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x8 ]
push 0x8
push eax
push 0x1004
cmp [ esi ] 0x0
je r-xdata
pop esi
leave
retn
lea esi [ ebp - 0x8 ]
push r--data
push esi
call sub_40d110
pop ecx
test eax eax
pop ecx
je r-xdata
push r--data
push esi
call sub_40d110
pop ecx
test eax eax
pop ecx
jne r-xdata
push esi
call sub_409b65
pop ecx
lea eax [ ebp - 0x8 ]
push 0x8
push eax
push 0xb
jmp r-xdata
push [ rw-data ]
call [ rw-data ]
test eax eax
je r-xdata
sub_410f88
mov eax rw-data
xor eax eax
retn
inc eax
inc eax
cmp eax rw-data
jl r-xdata
mov cx [ esp + 0x4 ]
cmp cx [ eax ]
je r-xdata
push 0x1
pop eax
retn
sub_410fa7
push ebp
mov ebp esp
sub esp 0x78
lea eax [ ebp - 0x78 ]
push 0x78
push eax
mov eax [ ebp + 0x8 ]
and eax 0x3ff
push 0x1
or ah 0x4
push eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x78 ]
push eax
call sub_411125
cmp [ ebp + 0x8 ] eax
pop ecx
je r-xdata
push 0x1
pop eax
leave
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
push [ rw-data ]
call sub_41115e
push [ rw-data ]
mov esi eax
call sub_40e630
pop ecx
cmp esi eax
pop ecx
pop esi
jne r-xdata
sub_411009
push ebp
mov ebp esp
sub esp 0x94
lea eax [ ebp - 0x94 ]
mov [ ebp - 0x94 ] 0x94
push eax
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
cmp [ ebp - 0x84 ] 0x2
jne r-xdata
push 0x1
pop eax
leave
retn
sub_41103f
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x1a
xor esi esi
pop edi
mov ecx [ ebp + 0xc ]
dec ecx
je r-xdata
cmp [ ebp + 0x8 ] ecx
jae r-xdata
imul eax eax 0x2c
add eax rw-data
dec ecx
dec ecx
je r-xdata
lea esi [ eax + 0x1 ]
lea edi [ eax - 0x1 ]
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoA@IAT ]
cmp ebx 0x1
jl r-xdata
imul eax eax 0x2c
add eax rw-data
jmp r-xdata
sub ecx 0x4
je r-xdata
lea eax [ edi + esi ]
mov ebx [ ebp + 0x14 ]
cdq
sub eax edx
sar eax 0x1
mov ecx eax
imul ecx ecx 0x2c
mov ecx [ ecx + rw-data ]
cmp [ ebp + 0x8 ] ecx
je r-xdata
cmp esi edi
jle r-xdata
mov esi [ ebp + 0x10 ]
lea ecx [ ebx - 0x1 ]
push ecx
push eax
push esi
call sub_40fa80
add esp 0xc
and [ esi + ebx - 0x1 ] 0x0
push 0x1
pop eax
jmp r-xdata
test eax eax
je r-xdata
imul eax eax 0x2c
add eax rw-data
jmp r-xdata
sub ecx 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
imul eax eax 0x2c
add eax rw-data
jmp r-xdata
sub ecx 0xff6
je r-xdata
imul eax eax 0x2c
mov eax [ eax + rw-data ]
jmp r-xdata
dec ecx
je r-xdata
imul eax eax 0x2c
mov eax [ eax + rw-data ]
jmp r-xdata
dec ecx
dec ecx
jne r-xdata
imul eax eax 0x2c
add eax rw-data
jmp r-xdata
sub_411125
mov edx [ esp + 0x4 ]
xor eax eax
retn
cmp cl 0x61
jl r-xdata
cmp cl 0x41
jl r-xdata
cmp cl 0x66
jg r-xdata
add eax 0xffffffd
movsx ecx cl
shl eax 0x4
add eax ecx
jmp r-xdata
cmp cl 0x46
jg r-xdata
add cl 0xd9
jmp r-xdata
mov cl [ edx ]
inc edx
test cl cl
je r-xdata
add cl 0xf9
sub_41115e
mov edx [ esp + 0x4 ]
xor eax eax
cmp cl 0x61
jl r-xdata
cmp cl 0x5a
jle r-xdata
retn
cmp cl 0x7a
jg r-xdata
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_411187
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x41
jl r-xdata
push [ esp + 0x10 ]
call sub_4111f6
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_40d076
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x5a
jg r-xdata
push esi
call edi
push 0x13
call sub_40d0d7
pop ecx
jmp r-xdata
add eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_4111f6
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_40e87b
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_40d30a
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_4112c1
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
cmp esi 0x4
je r-xdata
call sub_40a715
mov [ eax ] 0x16
or eax 0xffffffff
cmp esi 0x3
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x2
je r-xdata
push 0x1
pop edi
push edi
call sub_40d076
cmp ebx 0x2
pop ecx
je r-xdata
cmp ebx 0x15
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x15
jne r-xdata
cmp ebx 0x16
je r-xdata
dec ebx
dec ebx
je r-xdata
push edi
push sub_411443
call [ SetConsoleCtrlHandler@IAT ]
cmp eax edi
jne r-xdata
cmp ebx 0xf
je r-xdata
mov edi [ rw-data ]
mov [ rw-data ] esi
jmp r-xdata
sub ebx 0xd
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
call sub_40a71e
push edi
mov [ eax ] esi
call sub_40d0d7
pop ecx
mov [ rw-data ] edi
cmp ebx 0x8
je r-xdata
push 0x1
call sub_40d0d7
pop ecx
mov edi [ rw-data ]
mov [ rw-data ] esi
jmp r-xdata
sub ebx 0x6
je r-xdata
call sub_40c161
mov esi eax
mov edi rw-data
cmp [ esi + 0x50 ] edi
jne r-xdata
cmp ebx 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ rw-data ]
mov [ rw-data ] esi
jmp r-xdata
dec ebx
jne r-xdata
push [ esi + 0x50 ]
push ebx
call sub_411627
pop ecx
test eax eax
pop ecx
je r-xdata
push [ rw-data ]
call sub_40941c
test eax eax
pop ecx
mov [ esi + 0x50 ] eax
je r-xdata
cmp ebx 0xb
jne r-xdata
mov edi [ ebp + 0xc ]
mov edi [ rw-data ]
mov [ rw-data ] esi
jmp r-xdata
mov edi [ eax + 0x8 ]
push [ rw-data ]
push edi
push eax
call sub_408e20
add esp 0xc
mov eax edi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ rw-data ]
mov edx [ esi + 0x50 ]
add eax 0xc
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
jmp r-xdata
cmp [ eax + 0x4 ] ebx
jne r-xdata
sub_411443
push ebx
push esi
push edi
push 0x1
pop ebx
push ebx
call sub_40d076
cmp [ esp + 0x14 ] 0x0
pop ecx
jne r-xdata
mov esi [ rw-data ]
mov eax rw-data
push 0x15
mov esi [ rw-data ]
mov eax rw-data
push 0x2
jmp r-xdata
cmp esi ebx
je r-xdata
push ebx
call sub_40d0d7
pop ecx
xor eax eax
jmp r-xdata
test esi esi
pop edi
jne r-xdata
push ebx
call sub_40d0d7
and [ eax ] 0x0
push ebx
call sub_40d0d7
push edi
call esi
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
pop ecx
mov eax ebx
sub_4114a5
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
dec eax
push ebx
push esi
dec eax
push edi
je r-xdata
mov ebx [ rw-data ]
mov edi rw-data
dec eax
dec eax
je r-xdata
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_40c161
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_411627
mov edi eax
pop ecx
add edi 0x8
pop ecx
mov ebx [ edi ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
push ebx
call sub_40d0d7
pop ecx
jmp r-xdata
cmp ebx 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov edx [ esi + 0x54 ]
cmp eax 0x8
mov [ ebp - 0x8 ] edx
mov [ esi + 0x54 ] ecx
jne r-xdata
cmp eax 0xb
je r-xdata
push 0x3
call sub_4096b4
push 0x1
call sub_40d0d7
pop ecx
sub eax 0x4
je r-xdata
mov [ edi ] ecx
mov edx [ esi + 0x58 ]
mov [ esi + 0x58 ] 0x8c
mov [ ebp - 0xc ] edx
cmp eax 0x4
jne r-xdata
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
push 0x1
call sub_40d0d7
pop ecx
mov ecx [ rw-data ]
mov eax [ rw-data ]
add eax ecx
cmp ecx eax
jge r-xdata
cmp eax 0x8
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x1
call sub_40d076
mov esi [ ebp + 0x8 ]
pop ecx
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call ebx
cmp [ ebp + 0x8 ] 0xb
pop ecx
je r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x8
mov [ esi + 0x54 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov edx [ esi + 0x50 ]
add eax 0xc
and [ edx + eax - 0x4 ] 0x0
mov edx [ rw-data ]
mov edi [ rw-data ]
inc ecx
add edi edx
cmp ecx edi
jl r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
mov [ esi + 0x58 ] eax
sub_411627
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx + 0x4 ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax + 0x4 ] esi
je r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_411676
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ rw-data ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push 0x1
push [ rw-data ]
call sub_411cd1
add esp 0x1c
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
add eax 0xfffffffe
pop ebp
retn
mov eax 0x7fffffff
pop ebp
retn
sub_4116b5
push ecx
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push ebp
call sub_40941c
cmp eax edi
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
push edi
push ebp
push eax
push 0xffffffff
push [ esi ]
push edi
push 0x1
call ebx
test eax eax
je r-xdata
push edi
push [ esp + 0x14 ]
call sub_411f79
mov eax [ esi + 0x4 ]
add esi 0x4
pop ecx
cmp eax edi
pop ecx
jne r-xdata
push edi
push edi
push edi
push edi
push 0xffffffff
push eax
push edi
push 0x1
call ebx
mov ebp eax
cmp ebp edi
je r-xdata
sub_411723
push ebp
mov ebp esp
sub esp 0x80
cmp [ ebp + 0x8 ] 0x1
push ebx
push esi
push edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor ebx ebx
lea eax [ ebp - 0x80 ]
push ebx
push 0x80
push eax
lea edi [ ebp - 0x80 ]
push [ ebp + 0x10 ]
mov [ ebp + 0x8 ] ebx
push [ ebp + 0xc ]
call sub_4122d2
mov esi eax
add esp 0x14
cmp esi ebx
jne r-xdata
or eax 0xffffffff
push 0x0
mov esi rw-data
push 0x4
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4121bf
add esp 0x14
test eax eax
je r-xdata
push esi
call sub_40941c
pop ecx
cmp eax ebx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov edi [ ebp + 0x14 ]
and [ edi ] 0x0
push esi
push edi
push eax
call sub_40fa80
add esp 0xc
cmp [ ebp + 0x8 ] ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4122d2
mov esi eax
add esp 0x14
cmp esi ebx
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_40e87b
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_4094a8
pop ecx
jmp r-xdata
push edi
call sub_4094a8
pop ecx
push esi
call sub_40941c
mov edi eax
pop ecx
cmp edi ebx
je r-xdata
mov al [ edi ]
mov cl 0xa
imul cl
add al bl
sub al 0x30
inc esi
inc esi
mov [ edi ] al
cmp esi rw-data
jl r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push ebx
push esi
push edi
mov [ ebp + 0x8 ] 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4122d2
mov esi eax
add esp 0x14
cmp esi ebx
je r-xdata
cmp [ rw-data ] 0x1
mov bl [ esi ]
jle r-xdata
sub_411861
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor edi edi
cmp eax edi
jne r-xdata
cmp eax 0x1
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push edi
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x2
pop eax
mov [ rw-data ] eax
push edi
push edi
push edi
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x220
push [ ebp + 0x18 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x4 ] edi
add eax 0x3
and al 0xfc
call sub_40a070
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x2c ] eax
push esi
push edi
push eax
call sub_408d60
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x2c ] edi
je r-xdata
push edi
push edi
push esi
push [ ebp - 0x2c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x220
push [ ebp + 0x18 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi + 0x2 ]
add eax 0x3
and al 0xfc
call sub_40a070
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x24 ] ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x1c ]
cmp eax edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
lea edi [ ecx + ecx ]
lea esi [ edi + ebx ]
or [ esi ] 0xffff
or [ esi - 0x2 ] 0xffff
push ebx
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
mov [ ebp - 0x20 ] eax
cmp [ esi - 0x2 ] 0xffff
je r-xdata
mov eax [ rw-data ]
cmp [ esi ] 0xffff
jne r-xdata
push edi
push ebx
push [ ebp + 0x14 ]
call sub_409d30
add esp 0xc
mov eax [ ebp - 0x20 ]
jmp r-xdata
sub_411a26
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411a53
mov eax [ ebp + 0xc ]
add esp 0x10
pop ebp
retn
sub_411a53
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
je r-xdata
mov esi [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
mov [ ecx ] 0x2d
inc ecx
neg esi
jmp r-xdata
add bl 0x30
add bl 0x57
jmp r-xdata
mov edi ecx
mov eax esi
xor edx edx
div [ ebp + 0x10 ]
mov eax esi
mov ebx edx
xor edx edx
div [ ebp + 0x10 ]
cmp ebx 0x9
mov esi eax
jbe r-xdata
and [ ecx ] 0x0
dec ecx
mov [ ecx ] bl
inc ecx
test esi esi
ja r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
mov [ edi ] al
dec ecx
inc edi
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_411aaf
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411a53
mov eax [ ebp + 0xc ]
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
push 0x1
pop eax
sub_411af4
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411b25
mov eax [ ebp + 0x10 ]
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
push 0x1
pop eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_411b25
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
je r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ esi ] 0x2d
inc esi
neg ebx
adc edi 0x0
neg edi
jmp r-xdata
add al 0x30
add al 0x57
jmp r-xdata
mov [ ebp + 0x10 ] esi
xor eax eax
push eax
push [ ebp + 0x14 ]
push edi
push ebx
call sub_412460
mov [ ebp + 0x18 ] eax
xor eax eax
push eax
push [ ebp + 0x14 ]
push edi
push ebx
call sub_4123f0
mov ebx eax
mov eax [ ebp + 0x18 ]
cmp eax 0x9
mov edi edx
jbe r-xdata
jb r-xdata
mov [ esi ] al
inc esi
test edi edi
ja r-xdata
and [ esi ] 0x0
dec esi
test ebx ebx
ja r-xdata
mov eax [ ebp + 0x10 ]
mov cl [ esi ]
mov dl [ eax ]
mov [ esi ] dl
mov [ eax ] cl
dec esi
inc eax
cmp eax esi
mov [ ebp + 0x10 ] eax
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
sub_411bd0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
[ rw-data ]
mov ebx ecx
push 0x13
call sub_40d076
mov [ esp ] 0x1
mov ecx ebx
push 0x0
jmp r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
pop eax
or eax eax
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_4111f6
mov ebx eax
add esp 0x4
call sub_4111f6
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov ebx ecx
push 0x13
call sub_40d0d7
add esp 0x4
mov ecx ebx
[ rw-data ]
jmp r-xdata
neg ecx
dec ecx
jne r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_411cd1
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
cmp [ rw-data ] ebx
push 0x1
pop edi
jne r-xdata
mov esi [ ebp + 0x14 ]
cmp esi ebx
jle r-xdata
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_411f4e
pop ecx
pop ecx
mov esi eax
mov [ ebp + 0x14 ] esi
push edi
mov eax r--data
push eax
push edi
push eax
push ebx
push ebx
call [ CompareStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_411f4e
pop ecx
pop ecx
mov [ ebp + 0x1c ] eax
xor eax eax
mov [ rw-data ] 0x2
cmp eax edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
jmp r-xdata
cmp [ ebp + 0x20 ] ebx
jne r-xdata
lea esp [ ebp - 0x4c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
cmp esi [ ebp + 0x1c ]
jne r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x1c ] edi
jle r-xdata
push 0x2
push ebx
push ebx
push esi
push [ ebp + 0x10 ]
push 0x9
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax ebx
je r-xdata
cmp esi edi
jg r-xdata
mov eax edi
jmp r-xdata
mov [ ebp - 0x4 ] ebx
add eax eax
add eax 0x3
and al 0xfc
call sub_40a070
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x3
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop eax
jmp r-xdata
cmp esi ebx
jle r-xdata
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov esi [ MultiByteToWideChar@IAT ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x1c ] ebx
jle r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
push ebx
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x9
push [ ebp + 0x20 ]
call esi
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x3c ] 0x2
jb r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40a070
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x28 ] edi
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x36 ]
cmp [ ebp - 0x36 ] bl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
cmp edi ebx
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl bl
je r-xdata
mov ecx [ ebp + 0x10 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push esi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
push esi
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
inc eax
inc eax
cmp [ eax ] bl
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
sub_411f4e
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_411f79
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
push 0x3d
push [ ebp + 0x8 ]
call sub_409172
mov esi eax
pop ecx
cmp esi edi
pop ecx
mov [ ebp - 0x8 ] esi
je r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp [ esi + 0x1 ] bl
sete bl
cmp eax [ rw-data ]
jne r-xdata
cmp eax edi
jne r-xdata
push eax
call sub_412158
pop ecx
mov [ rw-data ] eax
sub esi [ ebp + 0x8 ]
mov edi [ rw-data ]
mov [ ebp - 0x4 ] edi
push esi
push [ ebp + 0x8 ]
call sub_412100
mov esi eax
pop ecx
test esi esi
pop ecx
jl r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
test ebx ebx
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp ebx edi
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
xor eax eax
jmp r-xdata
test esi esi
jge r-xdata
test ebx ebx
je r-xdata
push 0x4
call sub_40941c
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
call sub_4116b5
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ esi * 4 + 0x8 ]
push eax
push edi
call sub_40c343
pop ecx
test eax eax
pop ecx
je r-xdata
neg esi
mov eax [ ebp + 0x8 ]
mov [ edi + esi * 4 ] eax
jmp r-xdata
push [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
call sub_4094a8
pop ecx
mov [ eax ] edi
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + esi * 4 ] ecx
and [ eax + esi * 4 + 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax esi
shl eax 0x2
push eax
push [ ebp - 0x4 ]
call sub_40c343
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ edi + 0x4 ]
inc esi
mov [ edi ] eax
add edi 0x4
jmp r-xdata
push 0x4
call sub_40941c
cmp eax edi
pop ecx
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40e630
inc eax
inc eax
push eax
call sub_40941c
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov [ eax ] edi
push [ ebp + 0x8 ]
push esi
call sub_40e540
mov eax esi
pop ecx
sub eax [ ebp + 0x8 ]
pop ecx
add eax [ ebp - 0x8 ]
and [ eax ] 0x0
inc eax
neg ebx
sbb ebx ebx
not ebx
and ebx eax
push ebx
push esi
call [ SetEnvironmentVariableA@IAT ]
push esi
call sub_4094a8
pop ecx
mov [ rw-data ] eax
sub_412100
push esi
mov esi [ rw-data ]
push edi
mov eax [ esi ]
test eax eax
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
add esi 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi ]
cmp al 0x3d
je r-xdata
push edi
push eax
push [ esp + 0x14 ]
call sub_411676
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
pop esi
retn
sub_412158
push edi
mov edi [ esp + 0x8 ]
xor ecx ecx
test edi edi
jne r-xdata
cmp [ edi ] 0x0
lea eax [ edi + 0x4 ]
je r-xdata
xor eax eax
pop edi
retn
push ebx
push ebp
lea eax [ ecx * 4 + 0x4 ]
push esi
push eax
call sub_40941c
mov esi eax
pop ecx
test esi esi
mov ebp esi
jne r-xdata
mov edx [ eax ]
inc ecx
add eax 0x4
test edx edx
jne r-xdata
mov eax [ edi ]
mov ebx edi
push 0x9
call sub_408c59
pop ecx
and [ esi ] 0x0
mov eax ebp
pop esi
pop ebp
pop ebx
pop edi
retn
push eax
add ebx 0x4
call sub_40964b
mov [ esi ] eax
mov eax [ ebx ]
pop ecx
add esi 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_4121bf
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor edi edi
cmp eax edi
jne r-xdata
cmp eax 0x1
jne r-xdata
push edi
push edi
push 0x1
push edi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoW@IAT ]
jmp r-xdata
push edi
push edi
push 0x1
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
push 0x1
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] edi
jne r-xdata
lea esp [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x2
pop eax
mov [ rw-data ] eax
push edi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoA@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x4 ] edi
add eax 0x3
and al 0xfc
call sub_40a070
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x20 ] esi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi edi
je r-xdata
push [ ebp - 0x1c ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push edi
jmp r-xdata
push 0xffffffff
push esi
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
jmp r-xdata
sub_4122d2
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor esi esi
cmp eax esi
jne r-xdata
cmp eax 0x2
jne r-xdata
push esi
push esi
push 0x1
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoA@IAT ]
jmp r-xdata
push esi
push esi
push 0x1
push esi
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
push 0x1
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] esi
jne r-xdata
lea esp [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x2
pop eax
mov [ rw-data ] eax
push esi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoW@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax esi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x4 ] esi
add eax eax
add eax 0x3
and al 0xfc
call sub_40a070
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x20 ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp edi esi
je r-xdata
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x14 ] esi
push esi
push esi
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
push esi
jmp r-xdata
push 0xffffffff
push edi
push 0x220
push [ ebp + 0x18 ]
call [ WideCharToMultiByte@IAT ]
jmp r-xdata
sub_4123f0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_412460
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_412e80
push esi
push edi
mov esi [ esp + 0xc ]
push esi
call sub_412e60
add esp 0x4
mov edi eax
test edi edi
jne r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ esp + 0x10 ]
cmp eax 0x6
jne r-xdata
lea eax [ eax + eax * 2 ]
mov edi [ eax * 8 + rw-data ]
mov edi [ rw-data ]
jmp r-xdata
push edi
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
sub_412ed0
sub esp 0x10
xor eax eax
mov ax [ rw-data ]
push esi
mov esi [ esp + 0x18 ]
push edi
push eax
mov edi [ GetPropA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0x10
retn
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
push esi
call sub_412e60
add esp 0x4
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x20 ]
push eax
push 0xfffffffc
push esi
call [ SetWindowLongA@IAT ]
push eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
push esi
call [ IsWindowUnicode@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push 0x10
push eax
push esi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
call [ lstrcmpiA@IAT ]
test eax eax
sub_412fc0
mov eax [ esp + 0x8 ]
sub esp 0x4
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x14 ]
push edi
push esi
mov edx [ rw-data ]
push eax
push ecx
push edx
call [ CallNextHookEx@IAT ]
mov edi eax
mov ecx [ rw-data ]
cmp [ esi + 0xc ] ecx
jne r-xdata
mov eax edi
pop edi
pop esi
add esp 0x4
retn 0xc
mov eax [ rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
cmp [ rw-data ] 0x35f
jb r-xdata
mov [ esp + 0x8 ] 0x1
push 0xfffffff0
mov eax [ esi + 0xc ]
push eax
call [ GetWindowLongA@IAT ]
mov [ esp + 0x8 ] 0x0
test al 0x4
jne r-xdata
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov ecx [ esi + 0xc ]
push eax
push ecx
call sub_412ed0
add esp 0x8
lea eax [ esp + 0x8 ]
mov ecx [ esi + 0xc ]
push eax
push 0x0
push 0x11f0
push ecx
call [ SendMessageA@IAT ]
cmp [ esp + 0x8 ] 0x0
je r-xdata
sub_413070
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
call [ GetCurrentThreadId@IAT ]
push eax
mov ecx [ rw-data ]
push ecx
push sub_412fc0
push 0x4
call [ SetWindowsHookExA@IAT ]
mov [ rw-data ] eax
retn
sub_4130b0
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
mov esi [ esp + 0x10 ]
push eax
push esi
call sub_412e80
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
add esp 0x8
push ecx
push edx
push ebx
push esi
push eax
call [ CallWindowProcA@IAT ]
mov edi eax
mov ebx [ RemovePropA@IAT ]
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_413130
push esi
mov esi rw-data
push esi
call sub_413110
add esp 0x4
add esi 0x4
cmp esi rw-data
jb r-xdata
push rw-data
call sub_413110
add esp 0x4
pop esi
retn
sub_413160
mov eax [ esp + 0x8 ]
push esi
push 0xf00021
mov esi [ eax + 0x4 ]
mov edx [ eax ]
mov ecx [ eax + 0xc ]
sub ecx esi
mov eax [ eax + 0x8 ]
push ecx
sub eax edx
mov ecx [ esp + 0x10 ]
push eax
push esi
push edx
push ecx
call [ PatBlt@IAT ]
pop esi
retn
sub_413190
mov eax [ esp + 0xc ]
sub esp 0x10
and eax 0xffff
push ebx
push esi
push edi
push ebp
mov ecx [ eax * 4 + rw-data ]
mov edi [ esp + 0x24 ]
push ecx
push edi
call [ SetBkColor@IAT ]
mov esi eax
mov ebx [ esp + 0x28 ]
lea ecx [ esp + 0x10 ]
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
mov ebp [ ebx + 0x8 ]
mov [ ecx ] eax
mov eax [ ebx + 0xc ]
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] ebp
mov bp [ esp + 0x34 ]
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x14 ]
inc eax
test bp 0x2
mov [ esp + 0x1c ] eax
je r-xdata
mov eax [ ebx + 0xc ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x10 ]
inc eax
test bp 0x1
mov [ esp + 0x18 ] eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
mov ax [ esp + 0x30 ]
cmp [ esp + 0x2c ] ax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
mov eax [ ebx + 0x8 ]
mov [ esp + 0x18 ] eax
dec eax
test bp 0x4
mov [ esp + 0x10 ] eax
je r-xdata
movzx eax ax
mov ecx [ eax * 4 + rw-data ]
push ecx
push edi
call [ SetBkColor@IAT ]
test bp 0x8
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
push esi
push edi
call [ SetBkColor@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov eax [ ebx ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
dec eax
test bp 0x1000
mov [ esp + 0x14 ] eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push eax
push 0x2
push 0x0
push 0x0
push edi
call [ ExtTextOutA@IAT ]
sub [ esp + 0x18 ] 0x2
sub_4132d0
mov ecx [ esp + 0x8 ]
sub esp 0x10
lea edx [ esp ]
push esi
push edi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
mov edi [ ecx + 0x8 ]
mov [ edx ] eax
mov eax [ ecx + 0xc ]
mov [ edx + 0x4 ] esi
mov [ edx + 0x8 ] edi
mov di [ esp + 0x24 ]
mov [ edx + 0xc ] eax
mov ax di
lea edx [ esp + 0x8 ]
and ax 0xf
mov esi [ esp + 0x1c ]
push eax
push 0x1
push 0x7
push edx
push esi
call sub_413190
dec [ esp + 0x1c ]
dec [ esp + 0x20 ]
lea ecx [ esp + 0x1c ]
inc [ esp + 0x24 ]
inc [ esp + 0x28 ]
add esp 0x14
push edi
push 0x0
push 0x2
push ecx
push esi
call sub_413190
add esp 0x14
pop edi
pop esi
add esp 0x10
retn
sub_413340
mov ecx [ esp + 0x4 ]
sub esp 0x10
lea eax [ esp ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push ecx
mov ecx [ esp + 0x4 ]
push edx
mov edx [ esp + 0x20 ]
push eax
push ecx
push edx
call [ IntersectClipRect@IAT ]
add esp 0x10
retn
sub_413380
mov eax [ esp + 0x8 ]
sub esp 0x108
push ebx
cmp [ eax ] 0x0
push esi
push edi
lea esi [ esp + 0x14 ]
je r-xdata
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x14 ]
push eax
mov [ esi ] 0x0
push ecx
call [ lstrlenA@IAT ]
lea ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x120 ]
push ecx
push eax
call [ GetTextExtentPointA@IAT ]
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x120 ]
mov edx [ esp + 0x10 ]
mov [ eax ] ecx
mov ecx [ esp + 0x124 ]
pop edi
pop esi
pop ebx
mov [ ecx ] edx
add esp 0x108
retn
mov edi [ CharNextA@IAT ]
xor ebx ebx
cmp [ rw-data ] bl
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
mov cl [ eax ]
inc eax
mov [ esi ] cl
inc esi
cmp cl [ rw-data ]
jne r-xdata
jmp r-xdata
mov cl [ eax ]
cmp cl 0x26
jne r-xdata
cmp cl 0x1e
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
inc eax
cmp [ eax ] bl
je r-xdata
cmp cl 0x1f
jne r-xdata
jmp r-xdata
push eax
call edi
jmp r-xdata
cmp [ eax ] bl
jne r-xdata
sub_413436
call [ InitializeCriticalSection@IAT ]
push rw-data
call [ EnterCriticalSection@IAT ]
push rw-data
inc [ rw-data ]
call [ LeaveCriticalSection@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
mov esi [ esp + 0x8 ]
mov esi [ esp + 0x8 ]
push 0x0
push 0x1
push esi
call sub_416440
add esp 0xc
call sub_413fc0
jmp r-xdata
mov eax [ rw-data ]
pop esi
retn 0x4
push esi
call sub_413560
call sub_4136b0
test eax eax
je r-xdata
sub_4134a0
push ebx
push esi
push edi
push ebp
xor ebp ebp
call [ GetCurrentThreadId@IAT ]
mov ebx eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] ebp
jle r-xdata
push rw-data
dec [ rw-data ]
call [ LeaveCriticalSection@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp * 4 ]
cmp [ eax + eax * 4 + rw-data ] ebx
lea esi [ eax + eax * 4 ]
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
call sub_4141b0
inc ebp
cmp ebp [ rw-data ]
jl r-xdata
mov eax [ esi + rw-data ]
dec eax
mov [ esi + rw-data ] eax
je r-xdata
mov eax [ esi + rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
dec [ rw-data ]
cmp ebp [ rw-data ]
jge r-xdata
mov eax [ esp + 0x14 ]
cmp [ esi + rw-data ] eax
jne r-xdata
lea edi [ esi + rw-data ]
lea eax [ edi + 0x14 ]
mov ecx 0x5
mov esi eax
inc ebp
[ edi ] [ esi ]
mov edi eax
cmp ebp [ rw-data ]
jl r-xdata
sub_413570
cmp [ rw-data ] 0x30a
push esi
push edi
jae r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edi
pop esi
retn 0x8
mov esi [ esp + 0x10 ]
or esi 0x1
test esi 0x2
je r-xdata
xor eax eax
pop edi
pop esi
retn 0x8
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] 0x80
je r-xdata
and esi 0xfffffffc
push rw-data
call [ LeaveCriticalSection@IAT ]
xor eax eax
pop edi
pop esi
retn 0x8
call [ GetCurrentThreadId@IAT ]
mov edi eax
xor eax eax
cmp [ rw-data ] eax
jle r-xdata
push edi
mov eax [ rw-data ]
push eax
push sub_414790
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
je r-xdata
mov ecx rw-data
mov edx [ rw-data ]
mov ecx [ esp + 0xc ]
shl edx 0x2
mov [ edx + edx * 4 + rw-data ] ecx
mov ecx [ rw-data ]
shl ecx 0x2
mov [ ecx + ecx * 4 + rw-data ] edi
mov ecx [ rw-data ]
shl ecx 0x2
mov [ ecx + ecx * 4 + rw-data ] eax
mov eax [ rw-data ]
shl eax 0x2
mov [ eax + eax * 4 + rw-data ] 0x1
mov eax [ rw-data ]
shl eax 0x2
mov [ eax + eax * 4 + rw-data ] esi
mov ecx [ rw-data ]
mov [ rw-data ] edi
mov [ rw-data ] ecx
inc [ rw-data ]
shl eax 0x2
inc [ eax + eax * 4 + rw-data ]
jmp r-xdata
add ecx 0x14
inc eax
cmp eax [ rw-data ]
jl r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
pop edi
pop esi
retn 0x8
cmp [ ecx ] edi
je r-xdata
sub_4136b0
call [ GetCurrentThreadId@IAT ]
xor edx edx
cmp [ rw-data ] edx
jle r-xdata
xor eax eax
retn
mov ecx rw-data
mov eax 0x1
retn
add ecx 0x14
inc edx
cmp edx [ rw-data ]
jl r-xdata
cmp [ ecx ] eax
je r-xdata
sub_4136e0
push ebx
push esi
push edi
push ebp
xor ebp ebp
call [ GetCurrentThreadId@IAT ]
mov ebx eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] ebp
jle r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp * 4 ]
cmp [ eax + eax * 4 + rw-data ] ebx
lea esi [ eax + eax * 4 ]
jne r-xdata
inc ebp
cmp ebp [ rw-data ]
jl r-xdata
mov eax [ esi + rw-data ]
dec eax
mov [ esi + rw-data ] eax
jne r-xdata
mov eax [ esi + rw-data ]
push eax
call [ UnhookWindowsHookEx@IAT ]
dec [ rw-data ]
cmp ebp [ rw-data ]
jge r-xdata
lea edi [ esi + rw-data ]
lea eax [ edi + 0x14 ]
mov ecx 0x5
mov esi eax
inc ebp
[ edi ] [ esi ]
mov edi eax
cmp ebp [ rw-data ]
jl r-xdata
sub_4137e0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov esi [ esp + 0x14 ]
push 0xfffffffc
push esi
call [ GetWindowLongA@IAT ]
xor ecx ecx
mov edi [ SetWindowLongA@IAT ]
mov ebx [ RemovePropA@IAT ]
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
inc ecx
cmp ecx 0x6
jl r-xdata
push ecx
push esi
call sub_412e80
add esp 0x8
mov ebp eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
push ebp
push 0xfffffffc
push esi
call edi
xor eax eax
mov ecx 0x10
lea edx [ ecx + ecx * 2 ]
cmp [ edx * 8 + rw-data ] eax
jne r-xdata
jne r-xdata
push 0x5
push esi
mov esi [ GetWindow@IAT ]
call esi
mov edi eax
test edi edi
je r-xdata
cmp eax sub_414420
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
push edi
call sub_4137e0
push 0x2
push edi
call esi
mov edi eax
test edi edi
jne r-xdata
xor eax eax
mov edi [ GetPropA@IAT ]
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
push ecx
push esi
call sub_412e80
add esp 0x8
mov ebp eax
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call ebx
push ebp
push 0xfffffffc
push esi
call edi
jmp r-xdata
push 0x1
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ SetPropA@IAT ]
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call edi
test eax eax
je r-xdata
sub_4138f0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov edi [ esp + 0x14 ]
test edi edi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
cmp edi 0x6
jg r-xdata
mov esi [ esp + 0x10 ]
push esi
call sub_412e60
add esp 0x4
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov ebx eax
push esi
call [ GetParent@IAT ]
push eax
push 0x0
push 0xffff
mov eax edi
shl eax 0x5
push ebx
push esi
call [ eax + r--data ]
add esp 0x14
cmp eax 0x1
jne r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
mov eax 0x1
pop edi
pop esi
pop ebx
retn 0x8
lea eax [ edi + edi * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_412ed0
add esp 0x8
sub_413980
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov eax [ esp + 0x10 ]
push 0x5
push eax
mov esi [ GetWindow@IAT ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
retn 0x8
mov eax 0x1
pop edi
pop esi
pop ebx
retn 0x8
mov di [ esp + 0x14 ]
push 0x0
push 0x0
push edi
push ebx
call sub_414b70
add esp 0x10
push 0x2
push ebx
call esi
mov ebx eax
test ebx ebx
jne r-xdata
sub_4139e0
sub esp 0x4
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
push esi
call sub_412e60
add esp 0x4
test eax eax
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
push eax
push 0x0
push ecx
push esi
call sub_414b70
add esp 0x10
pop edi
pop esi
pop ebx
add esp 0x4
retn
pop edi
pop esi
pop ebx
add esp 0x4
retn
lea ebx [ esp + 0xc ]
mov edi [ SendMessageA@IAT ]
mov [ esp + 0xc ] 0x29a
push ebx
push 0x0
push 0x1944
push esi
call edi
cmp [ esp + 0xc ] 0x29a
jne r-xdata
push ebx
push 0x0
push 0x1943
push esi
call edi
cmp [ esp + 0xc ] 0x29a
jne r-xdata
xor eax eax
mov ax [ rw-data ]
push eax
push esi
call [ RemovePropA@IAT ]
mov ax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push ecx
push 0x0
push eax
push esi
call sub_414b70
add esp 0x10
sub_413a90
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov eax [ esp + 0x14 ]
push 0x5
push eax
mov ebp [ GetWindow@IAT ]
call ebp
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov si [ esp + 0x18 ]
push 0x2
push edi
call ebp
mov edi eax
test edi edi
jne r-xdata
push edi
push esi
push ebx
call sub_4139e0
add esp 0xc
push 0x2
push ebx
call ebp
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push esi
push edi
call sub_4139e0
add esp 0xc
push 0x5
push edi
call ebp
mov ebx eax
test ebx ebx
je r-xdata
sub_413b10
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
push ebp
jne r-xdata
mov edi [ esp + 0x14 ]
push 0x5
push edi
mov esi [ GetWindow@IAT ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
push sub_414420
push edi
call sub_412ed0
add esp 0x8
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn 0x8
mov bp [ esp + 0x18 ]
push 0x0
push 0x0
push ebp
push ebx
call sub_414b70
add esp 0x10
push 0x2
push ebx
call esi
mov ebx eax
test ebx ebx
jne r-xdata
sub_413b90
cmp [ rw-data ] 0x0
push esi
je r-xdata
xor eax eax
pop esi
retn 0xc
mov eax [ esp + 0x8 ]
cmp eax 0x134
jb r-xdata
cmp eax 0x137
je r-xdata
cmp eax 0x134
jne r-xdata
mov esi [ esp + 0xc ]
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov ecx [ rw-data ]
push ecx
push esi
call [ SetBkColor@IAT ]
mov eax [ rw-data ]
pop esi
retn 0xc
cmp [ rw-data ] 0x35f
jae r-xdata
xor eax eax
pop esi
retn 0xc
mov esi [ esp + 0x10 ]
push 0x5
push esi
call [ GetWindow@IAT ]
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
and al 0x3
cmp al 0x3
jne r-xdata
sub_413c70
sub esp 0x3c
cmp [ esp + 0x50 ] 0x0
push ebx
push esi
push edi
push ebp
je r-xdata
mov esi [ esp + 0x50 ]
push 0x6
push esi
call sub_412e80
add esp 0x8
xor eax eax
mov esi [ esp + 0x50 ]
jmp r-xdata
mov eax [ esp + 0x5c ]
mov edx [ esp + 0x58 ]
push eax
push edx
push esi
call [ DefWindowProcA@IAT ]
mov edx [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push edx
push ebx
push esi
push eax
call [ CallWindowProcA@IAT ]
jmp r-xdata
mov ecx [ esp + 0x5c ]
test eax eax
push ecx
je r-xdata
push esi
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
cmp [ rw-data ] 0x0
mov [ esp + 0x10 ] eax
jne r-xdata
mov [ esp + 0x14 ] 0x1
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x11ef
push esi
call [ SendMessageA@IAT ]
push 0xfffffff0
mov ebp [ GetWindowLongA@IAT ]
push esi
call ebp
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x3c
retn 0x14
mov ecx eax
and ecx 0x10400080
cmp ecx 0x10400080
jne r-xdata
and eax 0xc00000
mov ebx [ rw-data ]
sub eax 0xc00000
cmp eax 0x1
push esi
sbb ebp ebp
neg ebp
cmp ebp 0x1
sbb eax eax
inc eax
sub ebx eax
call [ GetWindowDC@IAT ]
mov edi eax
lea eax [ esp + 0x1c ]
push eax
push esi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
sub [ esp + 0x24 ] ecx
push 0xf
lea eax [ esp + 0x20 ]
push 0x7
sub [ esp + 0x30 ] edx
push 0x2
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x28 ] 0x0
push eax
push edi
call sub_413190
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
lea ecx [ esp + 0x1c ]
push 0xf
push 0x2
push 0x0
push ecx
push edi
call sub_413190
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
mov ecx [ rw-data ]
push ecx
push edi
call [ SelectObject@IAT ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x1c ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
push ecx
push edi
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x24 ]
add eax [ rw-data ]
mov [ esp + 0x3c ] eax
call sub_413160
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x34 ]
sub eax [ esp + 0x24 ]
add esp 0x8
sub eax [ rw-data ]
push 0x0
push eax
push ecx
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x2c ]
push ecx
push edi
call sub_413160
mov eax [ esp + 0x24 ]
add esp 0x8
add eax [ rw-data ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x24 ]
sub eax [ rw-data ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x34 ] eax
push ecx
mov eax [ esp + 0x34 ]
push edi
add eax ebx
mov [ esp + 0x40 ] eax
call sub_413160
add esp 0x8
test ebp ebp
je r-xdata
mov eax [ esp + 0x28 ]
lea ecx [ esp + 0x2c ]
sub eax [ esp + 0x20 ]
push ecx
sub eax [ rw-data ]
push edi
add [ esp + 0x38 ] eax
mov eax [ esp + 0x38 ]
add eax [ rw-data ]
mov [ esp + 0x40 ] eax
call sub_413160
mov ecx [ esp + 0x20 ]
add esp 0x8
push ecx
push edi
call [ SelectObject@IAT ]
push edi
push esi
call [ ReleaseDC@IAT ]
mov ebp [ esp + 0x30 ]
lea edx [ esp + 0x2c ]
lea ecx [ esp + 0x3c ]
mov eax [ edx ]
add ebx [ esp + 0x30 ]
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x4 ] ebp
mov edx [ edx + 0xc ]
mov [ ecx + 0x8 ] eax
mov eax [ rw-data ]
push 0xf
add eax ebx
push 0x0
push 0x2
mov [ ecx + 0xc ] edx
lea ecx [ esp + 0x48 ]
mov [ esp + 0x4c ] ebx
mov [ esp + 0x54 ] eax
push ecx
push edi
call sub_413190
add esp 0x14
sub_413f20
sub esp 0xc
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
pop edi
pop esi
add esp 0xc
retn
push rw-data
call [ EnterCriticalSection@IAT ]
lea eax [ esp + 0x8 ]
push 0x9
push eax
mov esi [ GetProfileStringA@IAT ]
mov [ rw-data ] 0x1e
push rw-data
push rw-data
push rw-data
call esi
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
mov edi [ lstrcmpiA@IAT ]
call edi
test eax eax
jne r-xdata
lea eax [ esp + 0x8 ]
push 0x9
push eax
push rw-data
push rw-data
push rw-data
call esi
lea eax [ esp + 0x8 ]
push rw-data
push eax
call edi
test eax eax
jne r-xdata
mov [ rw-data ] 0x1f
push rw-data
call [ LeaveCriticalSection@IAT ]
mov [ rw-data ] 0x1f
sub_413fc0
sub esp 0x28
push ebx
push esi
push edi
push rw-data
call [ EnterCriticalSection@IAT ]
push 0x0
call [ GetDC@IAT ]
mov ebx eax
push 0xc
push ebx
mov esi [ GetDeviceCaps@IAT ]
call esi
mov edi eax
push 0xe
push ebx
call esi
imul edi eax
mov eax 0x1
cmp edi 0x4
jge r-xdata
push 0x1
mov edi [ GetSystemMetrics@IAT ]
mov [ rw-data ] eax
call edi
cmp eax 0x15e
jne r-xdata
xor eax eax
push ebx
push 0x0
call [ ReleaseDC@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
call edi
cmp eax 0x280
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax [ rw-data ]
pop edi
pop esi
pop ebx
add esp 0x28
retn
push rw-data
mov esi [ GlobalAddAtomA@IAT ]
call esi
mov [ rw-data ] ax
test ax ax
jne r-xdata
mov [ rw-data ] 0x0
push rw-data
call esi
mov [ rw-data ] ax
test ax ax
je r-xdata
mov [ rw-data ] 0x0
push rw-data
call esi
mov [ rw-data ] ax
push rw-data
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] ax
je r-xdata
xor eax eax
pop edi
mov [ rw-data ] 0x0
pop esi
pop ebx
add esp 0x28
retn
test ax ax
je r-xdata
push rw-data
call esi
mov [ rw-data ] ax
push rw-data
call esi
cmp [ rw-data ] 0x0
mov [ rw-data ] ax
je r-xdata
xor eax eax
pop edi
mov [ rw-data ] 0x0
pop esi
pop ebx
add esp 0x28
retn
test ax ax
je r-xdata
push rw-data
call esi
mov [ rw-data ] ax
test ax ax
je r-xdata
push 0x2a
call edi
mov [ rw-data ] al
call sub_413f20
push 0x1
call sub_414290
add esp 0x4
test eax eax
je r-xdata
mov ebx rw-data
mov esi r--data
mov edi [ GetClassInfoA@IAT ]
mov eax [ esi ]
lea edx [ esi - 0x14 ]
mov [ ebx ] eax
lea ecx [ esp + 0xc ]
push ecx
add ebx 0x18
push edx
add esi 0x20
push 0x0
call edi
mov ecx [ esp + 0x10 ]
cmp esi r--data
mov [ ebx - 0x14 ] ecx
jb r-xdata
lea eax [ esp + 0xc ]
push eax
push 0x8002
push 0x0
call edi
test eax eax
je r-xdata
mov eax [ DefDlgProcA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
jmp r-xdata
sub_4141b0
push esi
push rw-data
call [ EnterCriticalSection@IAT ]
mov eax rw-data
add eax 0x18
cmp eax rw-data
jb r-xdata
mov [ eax ] 0x0
cmp [ eax ] 0x0
je r-xdata
call sub_413130
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ GlobalDeleteAtom@IAT ]
mov ax [ rw-data ]
mov esi [ GlobalDeleteAtom@IAT ]
push eax
call esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
cmp [ rw-data ] 0x0
je r-xdata
mov ax [ rw-data ]
push eax
call esi
mov [ rw-data ] 0x0
push rw-data
call [ LeaveCriticalSection@IAT ]
pop esi
retn
mov ax [ rw-data ]
push eax
call esi
sub_414290
sub esp 0x30
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor si si
mov ebx [ GetSysColor@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x30
retn
movzx edi si
inc si
xor eax eax
mov ax [ edi * 2 + r--data ]
push eax
call ebx
cmp si 0x8
mov [ esp + edi * 4 + 0x1c ] eax
jb r-xdata
cmp [ rw-data ] 0x300
jne r-xdata
cmp [ esp + 0x34 ] 0x0
je r-xdata
mov [ esp + 0x1c ] 0xffffff
cmp [ esp + 0x20 ] 0x808080
mov [ esp + 0x34 ] 0xc0c0c0
je r-xdata
mov eax [ esp + 0x34 ]
cmp [ esp + 0x20 ] eax
jne r-xdata
cmp [ esp + 0x40 ] 0x0
jne r-xdata
mov [ esp + 0x34 ] 0x808080
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x3c ]
push eax
push ecx
mov eax [ rw-data ]
xor si si
push edx
push 0x67c7
push eax
call sub_416510
mov edi [ CreateSolidBrush@IAT ]
mov [ esp + 0xc ] eax
mov esi rw-data
lea edi [ esp + 0x1c ]
mov ecx 0x20
[ esi ] [ edi ]
jne r-xdata
movzx eax si
inc si
mov ecx [ esp + eax * 4 + 0x1c ]
lea ebx [ eax * 4 ]
push ecx
call edi
cmp si 0x3
mov [ esp + ebx + 0x10 ] eax
jb r-xdata
xor eax eax
xor ecx ecx
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x30
retn
xor si si
inc ax
cmp ax 0x3
jb r-xdata
movzx eax si
inc si
lea ecx [ esp + eax * 4 + 0x10 ]
push ecx
call sub_413110
add esp 0x4
cmp si 0x3
jb r-xdata
lea eax [ esp + 0xc ]
push eax
call sub_413110
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x30
retn
movzx edx ax
cmp [ esp + edx * 4 + 0x10 ] ecx
je r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
call sub_413130
mov ebx [ esp + 0x14 ]
lea ecx [ esp + 0x10 ]
mov edx rw-data
lea esi [ esp + 0x1c ]
mov eax [ ecx ]
mov edi rw-data
mov ecx [ ecx + 0x8 ]
mov [ edx ] eax
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] ecx
mov ecx 0x8
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop edi
pop esi
mov [ rw-data ] eax
mov eax 0x1
pop ebx
add esp 0x30
retn
sub_414420
sub esp 0x18
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x30 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x2c ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov ebp [ esp + 0x38 ]
push 0x6
mov ebx [ esp + 0x38 ]
push ebp
mov esi [ esp + 0x34 ]
push ebx
push edi
push esi
call sub_4130b0
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp edi 0x86
ja r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp edi 0x138
ja r-xdata
cmp edi 0x85
jae r-xdata
cmp edi 0x1943
jb r-xdata
cmp edi 0x132
jae r-xdata
cmp [ rw-data ] 0x35f
jae r-xdata
cmp edi 0xc
je r-xdata
mov ebx [ esp + 0x34 ]
mov ebp [ esp + 0x38 ]
cmp edi 0x1944
jbe r-xdata
lea eax [ esp + 0x18 ]
push 0x10
push eax
push esi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
cmp edi 0x110
je r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
push esi
call [ IsIconic@IAT ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x38 ]
mov eax 0x3ee
mov [ ebp ] 0x1
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
jmp r-xdata
push 0x4
push esi
call [ GetWindowLongA@IAT ]
test eax eax
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
push 0x6
push esi
call sub_412e80
mov [ esp + 0x1c ] eax
add esp 0x8
cmp [ rw-data ] 0x35f
jb r-xdata
jmp r-xdata
mov ebp [ esp + 0x38 ]
push 0x0
mov ebx [ esp + 0x38 ]
push ebp
push ebx
push edi
push esi
call sub_413c70
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
cmp eax 0xffff0000
jbe r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
jmp r-xdata
push ebp
cmp eax 0x1
jne r-xdata
mov [ esp + 0x10 ] 0x1
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] 0x0
test al 0x4
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x30a
ja r-xdata
push ebx
push edi
call sub_413b90
push ebp
push ebx
push edi
push esi
push 0x6
push esi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
test eax eax
je r-xdata
jmp r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
cmp [ rw-data ] 0x35f
mov edi eax
jb r-xdata
push esi
call sub_4137e0
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
push ebp
push ebx
push edi
push esi
push eax
call [ CallWindowProcA@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x11f0
push esi
call [ SendMessageA@IAT ]
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov ebp [ esp + 0x38 ]
mov ebx [ esp + 0x34 ]
push ebp
lea eax [ edi + 0xcbf ]
push ebx
push eax
push esi
push 0x6
push esi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
test eax eax
je r-xdata
push 0xffff
push esi
call sub_413a90
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test al 0x4
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0x10
jmp r-xdata
sub_414750
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_412e60
add esp 0x4
test eax eax
jne r-xdata
cmp [ rw-data ] 0x35f
jb r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test al 0x4
je r-xdata
xor eax eax
pop esi
retn
sub_414790
sub esp 0x4
push ebx
push esi
push edi
push ebp
call [ GetCurrentThreadId@IAT ]
mov esi eax
push rw-data
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] esi
je r-xdata
mov edi [ rw-data ]
push rw-data
call [ LeaveCriticalSection@IAT ]
mov esi [ esp + 0x18 ]
mov ebx [ esp + 0x20 ]
cmp esi 0x3
jne r-xdata
xor ecx ecx
cmp ecx [ rw-data ]
jge r-xdata
shl edi 0x2
push ebx
mov eax [ esp + 0x20 ]
mov ecx [ edi + edi * 4 + rw-data ]
push eax
push esi
push ecx
call [ CallNextHookEx@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0xc
mov ebp [ ebx ]
cmp [ ebp + 0x28 ] 0x8002
jne r-xdata
jne r-xdata
mov eax rw-data
lea eax [ edi * 4 ]
test [ eax + eax * 4 + rw-data ] 0x1
je r-xdata
cmp [ rw-data ] 0x20
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov ebx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
push ebx
push eax
push esi
push 0x0
call [ CallNextHookEx@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0xc
mov [ rw-data ] ecx
mov [ rw-data ] esi
add eax 0x14
inc ecx
cmp ecx [ rw-data ]
jl r-xdata
mov eax [ ebp + 0xc ]
push eax
call sub_414750
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
push sub_414420
push eax
call sub_413070
add esp 0x8
jmp r-xdata
cmp [ rw-data ] 0x35f
jb r-xdata
cmp [ eax ] esi
je r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esp + 0x1c ]
push eax
push 0x1
push 0xffff
push ecx
call sub_414b70
add esp 0x10
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
mov eax [ esp + 0x1c ]
push 0xfffffff0
push eax
mov ebp [ GetWindowLongA@IAT ]
call ebp
mov [ esp + 0x10 ] 0x0
test al 0x4
jne r-xdata
cmp ecx [ rw-data ]
cmp [ rw-data ] 0x18
je r-xdata
push sub_414420
push ebp
call sub_412ed0
add esp 0x8
jmp r-xdata
mov ebp [ esp + 0x1c ]
lea eax [ esp + 0x10 ]
push eax
push 0x0
push 0x11f0
push ebp
call [ SendMessageA@IAT ]
cmp [ esp + 0x10 ] 0x0
je r-xdata
push eax
call [ GetParent@IAT ]
push eax
call sub_414750
add esp 0x4
test eax eax
je r-xdata
sub_414970
sub esp 0x10
cmp [ rw-data ] 0x35f
jb r-xdata
mov eax 0x1
add esp 0x10
retn
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea ecx [ esp ]
push 0x10
push ecx
push eax
call [ GetClassNameA@IAT ]
lea ecx [ esp ]
push r--data
push ecx
call [ lstrcmpA@IAT ]
cmp eax 0x1
sbb eax eax
add esp 0x10
inc eax
retn
sub_4149c0
sub esp 0x10
cmp [ rw-data ] 0x35f
jb r-xdata
mov eax 0x1
add esp 0x10
retn
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea ecx [ esp ]
push 0x10
push ecx
push eax
call [ GetClassNameA@IAT ]
lea ecx [ esp ]
push r--data
push ecx
call [ lstrcmpA@IAT ]
cmp eax 0x1
sbb eax eax
add esp 0x10
inc eax
retn
sub_414a10
cmp [ rw-data ] 0x35f
jb r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
mov eax 0x1
retn
mov eax [ esp + 0x14 ]
push 0xfffffff0
push eax
call [ GetWindowLongA@IAT ]
and eax 0x3
cmp eax 0x2
je r-xdata
xor eax eax
retn
cmp eax 0x3
je r-xdata
mov eax 0x1
retn
sub_414a50
cmp [ rw-data ] 0x35f
push ebx
push esi
push edi
push ebp
jb r-xdata
mov eax [ esp + 0x18 ]
and eax 0x3
cmp eax 0x2
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x3
jne r-xdata
mov bx [ esp + 0x20 ]
cmp bx 0x1
jne r-xdata
mov bx [ esp + 0x20 ]
cmp bx 0x1
jne r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x14 ]
push 0x5
push edi
call [ GetWindow@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x14 ]
push 0x5
push edi
mov esi [ GetWindow@IAT ]
call esi
mov ebp eax
test ebp ebp
je r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x4
push eax
call sub_414b70
add esp 0x10
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x2
push ebp
call sub_414b70
add esp 0x10
push 0x2
push ebp
call esi
test eax eax
je r-xdata
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
push edi
push ebx
push 0x4
push eax
call sub_414b70
add esp 0x10
sub_414b20
mov eax [ esp + 0x8 ]
and ax 0x1f
movzx ecx ax
cmp ecx 0x3
je r-xdata
xor eax eax
retn
mov ax [ esp + 0xc ]
test al 0x10
je r-xdata
test al 0x20
je r-xdata
cmp ecx 0x2
jle r-xdata
cmp ecx 0x4
jl r-xdata
mov eax 0x1
retn
cmp ecx 0xc
je r-xdata
cmp [ rw-data ] 0x35f
jae r-xdata
cmp ecx 0x9
jle r-xdata
cmp ecx 0x10
jl r-xdata
cmp ecx 0x12
jg r-xdata
sub_414b70
sub esp 0x10
push ebx
push esi
mov esi [ esp + 0x1c ]
push edi
push ebp
push esi
call sub_412e60
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x10
push eax
xor ebp ebp
push esi
mov ebx r--data
call [ GetClassNameA@IAT ]
mov di [ esp + 0x28 ]
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
add ebx 0x20
inc ebp
cmp ebx r--data
jb r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ ebx - 0x1c ]
push eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
test [ ebx ] di
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x10
retn
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov bx [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
push ecx
push ebx
push edi
push eax
push esi
mov eax ebp
shl eax 0x5
call [ eax + r--data ]
add esp 0x14
mov edi eax
cmp edi 0x1
jne r-xdata
sbb eax eax
pop ebp
inc eax
pop edi
pop esi
pop ebx
add esp 0x10
retn
cmp bx 0x1
jne r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_412ed0
add esp 0x8
cmp edi 0x1
cmp [ rw-data ] 0x10
jne r-xdata
lea eax [ ebp + ebp * 2 ]
mov ecx [ eax * 8 + rw-data ]
push ecx
push esi
call sub_413070
add esp 0x8
cmp edi 0x1
sbb eax eax
pop ebp
inc eax
pop edi
pop esi
pop ebx
add esp 0x10
retn
sub_414c60
sub esp 0x10
lea eax [ esp ]
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
push eax
push edi
call [ GetWindowRect@IAT ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
mov esi eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
push 0x1
push 0x1
push eax
call [ InflateRect@IAT ]
push edi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
test esi 0x200000
je r-xdata
mov ecx [ eax + 0x18 ]
test cl 0xc0
jne r-xdata
lea eax [ esp + 0xc ]
push 0x0
push eax
push edi
call [ InvalidateRect@IAT ]
inc [ esp + 0x14 ]
and cl 0x3
cmp cl 0x2
jne r-xdata
test cl 0x2
je r-xdata
mov ecx [ esp + 0x14 ]
sub ecx [ eax + 0x10 ]
cmp ecx [ esp + 0xc ]
jne r-xdata
test cl 0x1
jne r-xdata
mov eax [ eax + 0x14 ]
mov ecx [ esp + 0x18 ]
sub ecx [ esp + 0x10 ]
cmp ecx eax
jl r-xdata
inc eax
add [ esp + 0x10 ] eax
sub_414d20
sub esp 0x10
push ebx
push esi
push edi
push 0xfffffff0
mov edi [ esp + 0x24 ]
push edi
call [ GetWindowLongA@IAT ]
mov esi eax
lea eax [ esp + 0xc ]
push eax
push edi
call [ GetWindowRect@IAT ]
lea ecx [ esp + 0xc ]
push 0x1
push 0x1
push ecx
call [ InflateRect@IAT ]
push edi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
test esi 0x200000
je r-xdata
lea eax [ esp + 0xc ]
push eax
push edi
call [ ValidateRect@IAT ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
inc [ esp + 0x14 ]
sub_414d90
sub esp 0x1c
lea ecx [ esp + 0xc ]
push ebx
push esi
push edi
mov edi [ esp + 0x34 ]
push ebp
mov eax [ edi ]
mov edx [ edi + 0x4 ]
mov ebx [ edi + 0x8 ]
push 0xf
push 0x7
mov [ ecx ] eax
mov eax [ edi + 0xc ]
push 0x7
mov esi [ esp + 0x40 ]
push edi
push esi
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] ebx
mov [ ecx + 0xc ] eax
call sub_413190
lea ecx [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ InflateRect@IAT ]
cmp [ esp + 0x44 ] 0x1
jne r-xdata
push 0xf00021
mov eax [ edi + 0x4 ]
push 0x1
mov ecx [ edi ]
push 0x1
push eax
push ecx
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov ecx [ edi + 0x4 ]
push 0x1
mov eax [ edi + 0x8 ]
push 0x1
dec eax
push ecx
push eax
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov eax [ edi + 0xc ]
push 0x1
dec eax
push 0x1
mov ecx [ edi ]
push eax
push ecx
push esi
call [ PatBlt@IAT ]
push 0xf00021
mov eax [ edi + 0xc ]
push 0x1
dec eax
push 0x1
push eax
mov eax [ edi + 0x8 ]
dec eax
push eax
push esi
call [ PatBlt@IAT ]
cmp [ esp + 0x48 ] 0x1
sbb ebx ebx
neg ebx
inc ebx
cmp [ esp + 0x48 ] 0x0
je r-xdata
mov eax [ esp + 0x30 ]
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
jmp r-xdata
lea eax [ esp + 0x1c ]
push 0xf
push 0x7
push 0x7
push eax
push esi
call sub_413190
lea eax [ esp + 0x30 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push eax
call [ InflateRect@IAT ]
mov eax [ rw-data ]
inc [ esp + 0x1c ]
inc [ esp + 0x20 ]
push eax
push esi
call [ SelectObject@IAT ]
mov eax [ esp + 0x28 ]
push 0xf00021
sub eax [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov ecx [ esp + 0x30 ]
push ecx
call [ IsWindowEnabled@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
xor ebp ebp
push eax
push esi
call [ SelectObject@IAT ]
dec [ esp + 0x28 ]
dec [ esp + 0x24 ]
test ebx ebx
jle r-xdata
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x20 ]
push 0xf00021
mov edx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push eax
push ebx
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov eax [ esp + 0x24 ]
push 0xf00021
sub eax [ esp + 0x20 ]
push ebx
mov ecx [ esp + 0x28 ]
push eax
mov edx [ esp + 0x28 ]
push ecx
push edx
push esi
call [ PatBlt@IAT ]
cmp [ esp + 0x48 ] 0x0
jne r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x14 ]
mov ebx [ esp + 0x3c ]
push eax
push ecx
push ebx
push esi
call sub_413380
mov eax [ esp + 0x38 ]
sub eax [ esp + 0x30 ]
sub eax [ esp + 0x28 ]
add esp 0x10
cdq
sub eax edx
sar eax 0x1
add [ esp + 0x20 ] eax
mov eax [ esp + 0x24 ]
sub eax [ esp + 0x1c ]
sub eax [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
cdq
sub eax edx
sar eax 0x1
add [ esp + 0x1c ] eax
mov eax [ esp + 0x20 ]
add eax [ esp + 0x18 ]
cmp eax ecx
jl r-xdata
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x24 ]
push 0xf00021
sub eax [ esp + 0x20 ]
push 0x1
inc eax
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x24 ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
mov eax [ esp + 0x28 ]
push 0xf00021
sub eax [ esp + 0x24 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
push eax
push 0x1
push ecx
push edx
push esi
call [ PatBlt@IAT ]
lea ecx [ ebx - 0x1 ]
cmp ecx ebp
jle r-xdata
mov ecx [ esp + 0x24 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x1c ]
add eax [ esp + 0x14 ]
cmp eax ecx
jl r-xdata
mov eax ecx
inc ebp
cmp ebx ebp
jg r-xdata
lea eax [ esp + 0x1c ]
push 0xffffffff
push 0xffffffff
push eax
call [ InflateRect@IAT ]
cmp [ esp + 0x48 ] 0x0
mov [ esp + 0x24 ] eax
je r-xdata
mov eax ecx
lea eax [ esp + 0x1c ]
push 0x20
mov ecx [ esp + 0x44 ]
push eax
push ecx
push ebx
push esi
call [ DrawTextA@IAT ]
mov ebp [ GetFocus@IAT ]
call ebp
cmp eax [ esp + 0x30 ]
jne r-xdata
lea eax [ esp + 0x1c ]
push 0x1
push 0x1
mov ebp [ OffsetRect@IAT ]
push eax
call ebp
mov eax [ edi + 0x8 ]
mov ecx [ esp + 0x24 ]
sub eax 0x3
cmp eax ecx
jl r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
lea eax [ esp + 0x1c ]
push 0x1
push 0x1
push eax
call [ InflateRect@IAT ]
lea eax [ esp + 0x1c ]
push edi
push eax
lea eax [ esp + 0x24 ]
push eax
call [ IntersectRect@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push esi
call [ DrawFocusRect@IAT ]
mov ecx [ esp + 0x28 ]
mov [ esp + 0x24 ] eax
mov eax [ edi + 0xc ]
sub eax 0x3
cmp eax ecx
jl r-xdata
mov eax ecx
pop ebp
pop edi
pop esi
pop ebx
add esp 0x1c
retn
mov eax [ esp + 0x10 ]
push eax
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x28 ] eax
mov eax ecx
sub_4150d0
sub esp 0x154
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x168 ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
mov ebx eax
push edi
and eax 0x20
and ebx 0x1f
mov ebp [ GetParent@IAT ]
mov [ esp + 0x24 ] eax
call ebp
mov esi [ esp + 0x16c ]
push 0x2
mov [ esp + 0x20 ] eax
push esi
call [ SetBkMode@IAT ]
lea eax [ esp + 0x44 ]
mov ebp [ GetClientRect@IAT ]
push eax
push edi
call ebp
mov ebp [ esp + 0x48 ]
lea edx [ esp + 0x44 ]
lea ecx [ esp + 0x34 ]
mov eax [ edx ]
push 0x0
push 0x0
push 0x31
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
push edi
mov edx [ edx + 0xc ]
mov [ ecx + 0x4 ] ebp
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
call [ SendMessageA@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
push 0xf
mov ebp [ GetSysColor@IAT ]
call ebp
push eax
push esi
call [ SetBkColor@IAT ]
push 0x12
call ebp
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x1c ]
push edi
push esi
push 0x135
push eax
call [ SendMessageA@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x40 ]
push eax
mov ebp [ IntersectClipRect@IAT ]
mov eax [ esp + 0x38 ]
push ecx
push edx
push eax
push esi
call ebp
mov ebp [ esp + 0x170 ]
test ebp 0x10
je r-xdata
push eax
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x10 ] eax
push edi
call [ IsWindowEnabled@IAT ]
mov [ esp + 0x28 ] eax
push 0x0
push 0x0
push 0xf2
push edi
call [ SendMessageA@IAT ]
mov [ esp + 0x18 ] 0x0
mov ecx eax
and ecx 0x3
mov [ esp + 0x30 ] ecx
cmp ecx 0x1
sbb ecx ecx
and eax 0x4
inc ecx
mov [ esp + 0x54 ] eax
sar eax 0x1
or eax ecx
mov edx eax
shl eax 0x3
sub eax edx
add eax eax
cmp [ esp + 0x28 ] 0x0
mov [ esp + 0x14 ] eax
jne r-xdata
cmp ebx 0x7
je r-xdata
test ebp 0xa
jne r-xdata
add ecx 0x2
mov eax ecx
shl ecx 0x3
sub ecx eax
mov eax [ esp + 0x14 ]
lea edx [ eax + ecx * 2 ]
mov [ esp + 0x14 ] edx
mov eax [ esp + 0x40 ]
push 0xf00021
sub eax [ esp + 0x3c ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
push eax
mov eax [ esp + 0x44 ]
sub eax [ esp + 0x3c ]
push eax
push ecx
push edx
push esi
call [ PatBlt@IAT ]
lea eax [ esp + 0x64 ]
push 0x100
push eax
push edi
call [ GetWindowTextA@IAT ]
mov [ esp + 0x24 ] eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x2c ]
push eax
push esi
call [ SelectObject@IAT ]
cmp [ esp + 0x10 ] 0x0
je r-xdata
jmp [ ebx * 4 + jump_table_4155f4 ]
cmp ebx 0x1
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x154
retn
mov eax [ esp + 0x10 ]
push eax
push esi
call [ SelectObject@IAT ]
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x24 ]
lea edx [ esp + 0x64 ]
push eax
lea eax [ esp + 0x48 ]
push ebx
push ecx
push edx
push eax
push esi
push edi
call sub_414d90
add esp 0x1c
jmp r-xdata
mov [ esp + 0x18 ] 0xd
test ebp 0x4
je r-xdata
cmp [ esp + 0x30 ] 0x2
jne r-xdata
test ebp 0x6
je r-xdata
cmp ebx 0x9
ja r-xdata
test ebp 0x2
je r-xdata
push esi
call [ CreateCompatibleDC@IAT ]
mov edi eax
test edi edi
je r-xdata
mov [ esp + 0x18 ] 0x1a
jmp r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x30 ]
lea edx [ esp + 0x64 ]
push eax
push ecx
push edx
push esi
call sub_413380
add esp 0x10
cmp [ esp + 0x20 ] 0x0
jne r-xdata
test ebp 0x8
je r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push edi
call [ SelectObject@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
add [ esp + 0x34 ] 0x4
mov eax [ esp + 0x30 ]
add eax [ esp + 0x34 ]
add eax 0x4
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x20 ]
add eax [ esp + 0x38 ]
test ebp 0x20
mov [ esp + 0x40 ] eax
je r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x54 ]
push eax
push ecx
push rw-data
push esi
call sub_413380
add esp 0x10
lea eax [ esp + 0x30 ]
lea ecx [ esp + 0x54 ]
lea edx [ esp + 0x64 ]
push eax
push ecx
push edx
push esi
call sub_413380
mov eax [ esp + 0x50 ]
sub eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
add esp 0x10
cdq
sub eax edx
sar eax 0x1
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x30 ]
add eax [ esp + 0x38 ]
cmp [ esp + 0x20 ] 0x0
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x44 ]
je r-xdata
mov eax [ esp + 0x44 ]
add eax 0x12
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x4c ]
sub eax 0x12
mov [ esp + 0x3c ] eax
jmp r-xdata
push edi
call [ DeleteDC@IAT ]
mov eax [ esp + 0x18 ]
push 0xcc0020
mov ecx [ esp + 0x18 ]
push eax
mov eax [ esp + 0x48 ]
push ecx
cmp [ esp + 0x2c ] 0x0
push edi
push 0xd
push 0xe
je r-xdata
mov eax [ esp + 0x20 ]
dec [ esp + 0x4c ]
dec [ esp + 0x50 ]
push 0xf
cdq
sub eax edx
push 0x2
sar eax 0x1
push 0x2
add [ esp + 0x54 ] eax
lea eax [ esp + 0x50 ]
push eax
push esi
call sub_413190
lea eax [ esp + 0x58 ]
add esp 0x14
push 0x1
push 0x1
push eax
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x44 ]
push 0xf
push 0x0
push 0x0
push ecx
push esi
call sub_413190
add esp 0x14
cmp [ esp + 0x28 ] 0x0
jne r-xdata
mov ebx [ esp + 0x38 ]
mov ebp [ esp + 0x3c ]
lea ecx [ esp + 0x34 ]
lea edx [ esp + 0x54 ]
mov eax [ ecx ]
mov [ edx ] eax
mov eax [ ecx + 0xc ]
mov ecx [ esp + 0x4c ]
push edx
push edi
mov esi [ ClientToScreen@IAT ]
mov [ edx + 0x4 ] ebx
mov [ edx + 0x8 ] ebp
mov [ edx + 0xc ] eax
mov [ esp + 0x64 ] ecx
call esi
lea ecx [ esp + 0x5c ]
push ecx
push edi
call esi
lea eax [ esp + 0x54 ]
mov ecx [ esp + 0x1c ]
push eax
mov esi [ ScreenToClient@IAT ]
push ecx
call esi
lea ecx [ esp + 0x5c ]
mov eax [ esp + 0x1c ]
push ecx
push eax
call esi
lea ecx [ esp + 0x54 ]
push 0x1
mov edx [ esp + 0x20 ]
push ecx
push edx
call [ InvalidateRect@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x154
retn
add eax 0x12
mov [ esp + 0x34 ] eax
sub [ esp + 0x4c ] 0x12
mov [ esp + 0x34 ] eax
jmp r-xdata
lea eax [ esp + 0x34 ]
push 0x24
mov ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x6c ]
push ecx
push edx
push esi
call [ DrawTextA@IAT ]
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
cmp [ esp + 0x28 ] 0x0
jne r-xdata
sub eax [ esp + 0x50 ]
mov ecx [ esp + 0x50 ]
sub eax 0xd
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax [ esp + 0x4c ]
push ecx
sub eax [ esp + 0x50 ]
mov ecx [ esp + 0x50 ]
sub eax 0xd
cdq
sub eax edx
sar eax 0x1
add ecx eax
mov eax [ esp + 0x54 ]
push ecx
sub eax 0xe
jmp r-xdata
lea eax [ esp + 0x34 ]
push 0x20
mov ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x6c ]
push ecx
push edx
push esi
call [ DrawTextA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push eax
push esi
call [ SetTextColor@IAT ]
mov eax [ esp + 0x54 ]
push 0x1
add eax [ esp + 0x38 ]
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0x44 ] eax
push ecx
call [ InflateRect@IAT ]
lea ecx [ esp + 0x44 ]
lea eax [ esp + 0x34 ]
push ecx
push eax
lea eax [ esp + 0x3c ]
push eax
call [ IntersectRect@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
push esi
call [ DrawFocusRect@IAT ]
push eax
push esi
call [ BitBlt@IAT ]
push ebx
push edi
call [ SelectObject@IAT ]
sub_415620
sub esp 0x48
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x60 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x5c ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x68 ]
push 0x0
mov ebx [ esp + 0x68 ]
push eax
mov esi [ esp + 0x64 ]
push ebx
push edi
push esi
call sub_4130b0
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp edi 0xf1
mov eax edi
ja r-xdata
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_412e80
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp eax 0xf3
je r-xdata
je r-xdata
mov ebp 0x4
cmp eax 0x1943
jb r-xdata
sub eax 0x7
cmp eax 0x8
ja r-xdata
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_412e80
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
cmp edi 0x7
je r-xdata
cmp eax 0x1944
jbe r-xdata
jmp [ eax * 4 + jump_table_4158d0 ]
mov eax [ esp + 0x68 ]
mov ebx [ esp + 0x64 ]
push eax
push ebx
push edi
push esi
push 0x0
push esi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov [ esp + 0x14 ] eax
cmp edi 0x7
je r-xdata
and eax 0xefffffff
push eax
push 0xfffffff0
push esi
call [ SetWindowLongA@IAT ]
mov eax [ esp + 0x68 ]
pop ebp
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3e8
add esp 0x48
retn 0x10
mov ebp 0x16
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
and al 0x1f
cmp al 0x9
jne r-xdata
mov ebp 0x6
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov edi eax
mov ebx [ esp + 0x64 ]
mov ebp ebx
test ebp ebp
jne r-xdata
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov ebx eax
cmp edi 0xf3
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
or eax 0x10000000
push eax
push 0xfffffff0
push esi
call [ SetWindowLongA@IAT ]
push 0x0
push 0x0
push 0xf2
push esi
call [ SendMessageA@IAT ]
mov [ esp + 0x10 ] eax
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
xor ebp ebp
jmp r-xdata
push 0x0
push 0x0
push 0xf3
push esi
call [ SendMessageA@IAT ]
mov ebp 0x16
jmp r-xdata
and al 0x1f
cmp al 0x7
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
lea eax [ esp + 0x18 ]
mov ebp [ BeginPaint@IAT ]
push eax
push esi
call ebp
mov ebp eax
cmp ebx [ esp + 0x10 ]
je r-xdata
cmp edi 0xf1
jne r-xdata
mov ebp 0x22
jmp r-xdata
test ebx ebx
jne r-xdata
and edi 0x8
or edi 0x6
push edi
push ebp
push esi
call sub_4150d0
add esp 0xc
mov eax [ esp + 0x14 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
push esi
call [ GetDC@IAT ]
mov edi eax
test edi edi
je r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x48
retn 0x10
lea eax [ esp + 0x18 ]
push eax
push esi
call [ EndPaint@IAT ]
xor ebx [ esp + 0x10 ]
test bl 0x3
je r-xdata
push esi
and ebx 0x8
push edi
or ebx ebp
call [ ExcludeUpdateRgn@IAT ]
push ebx
push edi
push esi
call sub_4150d0
add esp 0xc
push edi
push esi
call [ ReleaseDC@IAT ]
or ebp 0x4
sub_415900
sub esp 0x44
push ebx
push esi
mov esi [ esp + 0x50 ]
push edi
push ebp
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] eax
test eax 0x10000000
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x44
retn
cmp [ esp + 0x60 ] 0x3
jne r-xdata
cmp [ esp + 0x5c ] 0x0
je r-xdata
and al 0x3
cmp al 0x3
jne r-xdata
lea eax [ esp + 0x24 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push esi
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0x24 ]
push eax
push edi
call ebx
lea ecx [ esp + 0x2c ]
mov bp 0xf
push ecx
push edi
call ebx
push edi
call [ GetDC@IAT ]
mov ebx eax
mov eax [ esp + 0x10 ]
and eax 0x100000
mov [ esp + 0x1c ] eax
je r-xdata
push esi
call [ HideCaret@IAT ]
push 0x0
push 0x0
push 0x157
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
and eax 0x200000
mov [ esp + 0x20 ] eax
je r-xdata
mov bp 0x7
push 0xfffffff4
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x5c ]
sub ecx eax
cmp ecx 0xfffffc18
jne r-xdata
and bp 0xfffb
lea eax [ esp + 0x24 ]
push ebp
push eax
push ebx
call sub_4132d0
add esp 0xc
cmp [ esp + 0x60 ] 0x3
jne r-xdata
mov [ esp + 0x18 ] 0x29a
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x1944
push edi
call [ SendMessageA@IAT ]
cmp [ esp + 0x18 ] 0x29a
mov [ esp + 0x34 ] eax
jne r-xdata
cmp [ esp + 0x20 ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
and al 0x3
cmp al 0x3
jne r-xdata
lea eax [ esp + 0x44 ]
push 0x10
push eax
push edi
call [ GetClassNameA@IAT ]
lea ecx [ esp + 0x44 ]
push r--data
push ecx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x1943
push edi
call [ SendMessageA@IAT ]
mov [ esp + 0x34 ] eax
cmp [ esp + 0x1c ] 0x0
je r-xdata
lea eax [ esp + 0x24 ]
push 0x4
inc [ esp + 0x30 ]
push 0x0
push 0x0
push eax
push ebx
call sub_413190
mov eax [ esp + 0x38 ]
dec [ esp + 0x40 ]
mov ebp [ esp + 0x40 ]
mov [ esp + 0x58 ] eax
add esp 0x14
push 0x2
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0x8
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x2c ] ebp
push 0x7
push eax
push ebx
call sub_413190
mov eax [ esp + 0x58 ]
mov [ esp + 0x38 ] eax
add esp 0x14
mov ebp [ esp + 0x2c ]
push 0x2
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0xc
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x2c ] ebp
push 0x7
push eax
push ebx
call sub_413190
add esp 0x14
push esi
call sub_414d20
add esp 0x4
jmp r-xdata
push edi
call [ GetParent@IAT ]
mov [ esp + 0x14 ] eax
push 0x2
lea eax [ esp + 0x28 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edi
call [ MapWindowPoints@IAT ]
push ebx
push edi
call [ ReleaseDC@IAT ]
mov ecx [ esp + 0x14 ]
push ecx
call [ GetDC@IAT ]
cmp [ esp + 0x5c ] 0x0
mov ebx eax
je r-xdata
cmp [ esp + 0x18 ] 0x1
jne r-xdata
push ebx
push edi
call [ ReleaseDC@IAT ]
cmp [ esp + 0x5c ] 0x0
je r-xdata
lea eax [ esp + 0x24 ]
push 0x8
inc [ esp + 0x34 ]
push 0x0
push 0x0
push eax
push ebx
call sub_413190
dec [ esp + 0x44 ]
add esp 0x14
mov ebp [ esp + 0x30 ]
push 0x15
call [ GetSystemMetrics@IAT ]
sub ebp eax
push 0x4
lea eax [ esp + 0x28 ]
push 0x7
mov [ esp + 0x30 ] ebp
push 0x7
push eax
push ebx
call sub_413190
add esp 0x14
and bp 0xfffd
inc [ esp + 0x28 ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
and eax 0x3
cmp eax 0x2
je r-xdata
cmp [ esp + 0x34 ] 0x3eb
jne r-xdata
push esi
call [ ShowCaret@IAT ]
push 0x0
push 0x0
push 0x157
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
cmp eax 0x3
je r-xdata
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push ebx
push eax
call [ ReleaseDC@IAT ]
push esi
call [ ShowCaret@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x44
retn
and bp 0xfff7
push 0x5
push edi
call [ GetWindow@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
push eax
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x34 ]
push 0x1008
sub eax [ esp + 0x40 ]
lea ecx [ esp + 0x28 ]
add [ esp + 0x30 ] eax
push ecx
push ebx
call sub_4132d0
mov eax [ esp + 0x48 ]
sub eax [ esp + 0x40 ]
add [ esp + 0x38 ] eax
add esp 0xc
jmp r-xdata
sub_415c40
sub esp 0x4
push ebx
push esi
push edi
push ebp
mov edi [ esp + 0x1c ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x18 ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
mov ebp [ esp + 0x24 ]
test eax eax
mov eax [ esp + 0x20 ]
push ebp
mov ebx [ esp + 0x2c ]
push eax
push edi
push esi
push ebx
push esi
je r-xdata
mov ebx [ esp + 0x28 ]
mov ebp [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push ebx
mov esi [ esp + 0x1c ]
push ebp
push eax
push edi
push esi
call sub_4130b0
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov [ esp + 0x10 ] eax
cmp ebx 0x3
jne r-xdata
call sub_412e80
add esp 0x8
mov ebp [ CallWindowProcA@IAT ]
push eax
call ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
mov eax [ esp + 0x10 ]
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov ecx eax
and cl 0x3
cmp cl 0x2
jne r-xdata
cmp edi 0x46
je r-xdata
je r-xdata
cmp edi 0x18
ja r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
cmp [ rw-data ] 0x30a
jb r-xdata
cmp edi 0x1943
jb r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp edi 0xf
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
push ebp
push esi
call sub_414c60
add esp 0x8
jmp r-xdata
cmp edi 0x1944
jbe r-xdata
cmp [ esp + 0x20 ] 0x0
jne r-xdata
cmp ebx 0x3
jne r-xdata
mov eax 0x3ea
mov [ ebp ] 0x1
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn
jmp r-xdata
push 0x0
push esi
call sub_414c60
add esp 0x8
jmp r-xdata
push ebx
push 0x1
push esi
call sub_415900
add esp 0xc
jmp r-xdata
and eax 0x3
cmp eax 0x2
je r-xdata
cmp eax 0x3
jne r-xdata
sub_415dc0
sub esp 0x20
push ebx
push esi
mov esi [ esp + 0x30 ]
push edi
cmp esi 0x82
jne r-xdata
xor eax eax
mov edi [ esp + 0x30 ]
mov ax [ rw-data ]
push eax
push edi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
push eax
mov edi [ esp + 0x34 ]
push ecx
push edx
push esi
push edi
call sub_4130b0
add esp 0x14
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x18
ja r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push eax
push ecx
push esi
push edi
push edx
push edi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x83
ja r-xdata
je r-xdata
cmp esi 0x1943
jb r-xdata
je r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp esi 0xf
je r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push eax
push ecx
push esi
push edi
push edx
push edi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x20
retn
cmp esi 0x1944
jbe r-xdata
cmp [ rw-data ] 0x30a
jae r-xdata
cmp esi 0x46
je r-xdata
cmp [ esp + 0x38 ] 0x0
jne r-xdata
mov ebx [ esp + 0x40 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
push eax
push ecx
push esi
push edi
push ebx
push edi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov esi eax
push ebx
push 0x0
push edi
call sub_415900
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x3c ]
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3e9
add esp 0x20
retn
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
push ecx
push eax
push esi
push edi
push edx
push edi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
mov esi eax
mov edx [ esp + 0x3c ]
lea ecx [ esp + 0xc ]
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
push 0x1
push 0x2
mov [ ecx ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x4 ] ebx
mov edx [ edx + 0xc ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
lea ecx [ esp + 0x14 ]
push ecx
call [ InflateRect@IAT ]
mov ecx [ esp + 0x28 ]
cmp [ esp + 0x18 ] ecx
jge r-xdata
cmp [ rw-data ] 0x30a
jb r-xdata
jmp r-xdata
push 0x0
push edi
call sub_414c60
add esp 0x8
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x18 ]
push edi
inc eax
mov [ esp + 0x14 ] eax
lea eax [ ecx + 0x1 ]
mov [ esp + 0x1c ] eax
call [ GetParent@IAT ]
mov edi eax
mov ebx [ ScreenToClient@IAT ]
lea eax [ esp + 0xc ]
push eax
push edi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push edi
call ebx
lea eax [ esp + 0xc ]
push 0x1
push eax
push edi
call [ InvalidateRect@IAT ]
mov eax [ esp + 0x3c ]
push eax
push edi
call sub_414c60
add esp 0x8
jmp r-xdata
sub_416020
mov ecx [ esp + 0x8 ]
cmp ecx 0x1943
jb r-xdata
mov eax [ esp + 0x10 ]
push 0x3
mov edx [ esp + 0x10 ]
push eax
push edx
push ecx
mov ecx [ esp + 0x14 ]
push ecx
call sub_415c40
add esp 0x14
retn 0x10
cmp ecx 0x1944
jbe r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] 0x1
mov eax 0x3eb
retn 0x10
sub_416070
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
push 0xf00021
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
mov eax [ esi + 0xc ]
sub eax edx
push eax
mov eax [ esi + 0x8 ]
sub eax ecx
push eax
push edx
push ecx
mov ecx [ ebp + 0xc ]
push ecx
call [ PatBlt@IAT ]
mov edi [ ebp + 0x8 ]
push edi
call [ GetWindowTextLengthA@IAT ]
mov ebx eax
lea eax [ eax + 0x5 ]
add eax 0x3
and eax 0xfffffffc
call sub_40a070
mov [ ebp - 0x4 ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add ebx 0x2
mov eax [ ebp - 0x4 ]
push ebx
push eax
push edi
call [ GetWindowTextA@IAT ]
test eax eax
je r-xdata
mov bx 0x140
mov edi [ ebp + 0x14 ]
mov eax edi
and al 0xf
cmp al 0xc
je r-xdata
test edi 0x80
je r-xdata
mov ebx edi
and bx 0xf
or bx 0x150
and edi 0x8000000
je r-xdata
or bh 0x8
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
movzx eax bx
push eax
push esi
push 0xffffffff
push ecx
push edx
call [ DrawTextA@IAT ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call [ SetTextColor@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
push eax
push ecx
call [ SetTextColor@IAT ]
sub_416150
sub esp 0x14
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
push ebp
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
mov [ esp + 0x10 ] eax
test eax 0x10000000
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push eax
push esi
call [ GetClientRect@IAT ]
mov eax [ esp + 0x10 ]
and eax 0x1f
cmp eax 0x12
ja r-xdata
xor ecx ecx
mov cl [ eax + lookup_table_4162dc ]
jmp [ ecx * 4 + jump_table_4162b4 ]
push 0x0
mov ebp [ SendMessageA@IAT ]
push 0x0
push 0x31
push esi
call ebp
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x0
push 0x2
push eax
push edi
call sub_413190
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x0
inc [ esp + 0x1c ]
push 0x0
inc [ esp + 0x24 ]
push eax
push edi
call sub_413190
lea ecx [ esp + 0x28 ]
add esp 0x14
push 0xffffffff
push 0xffffffff
push ecx
call [ OffsetRect@IAT ]
lea ecx [ esp + 0x14 ]
push 0xf
push 0x2
push 0x2
push ecx
push edi
call sub_413190
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
lea eax [ esp + 0x14 ]
push 0xf
mov edi [ esp + 0x30 ]
push 0x2
push 0x0
push eax
push edi
call sub_413190
add esp 0x14
mov edi [ esp + 0x2c ]
mov edi [ esp + 0x2c ]
push ebx
push edi
call [ SelectObject@IAT ]
mov ebx eax
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push edi
push esi
call sub_416070
add esp 0x10
test ebx ebx
je r-xdata
push ebp
push edi
call [ SelectObject@IAT ]
mov ebp eax
push 0x2
push edi
call [ SetBkMode@IAT ]
push esi
push edi
push 0x138
push esi
call [ GetParent@IAT ]
push eax
call ebp
mov ebp eax
test ebp ebp
je r-xdata
test ebp ebp
je r-xdata
push ebx
push edi
call [ SelectObject@IAT ]
push ebp
push edi
call [ SelectObject@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
sub_4162f0
sub esp 0x40
push ebx
push esi
push edi
mov edi [ esp + 0x54 ]
cmp edi 0x82
jne r-xdata
xor eax eax
mov esi [ esp + 0x50 ]
mov ax [ rw-data ]
push eax
push esi
call [ GetPropA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x5c ]
push 0x4
mov ebx [ esp + 0x5c ]
push eax
mov esi [ esp + 0x58 ]
push ebx
push edi
push esi
call sub_4130b0
add esp 0x14
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0xf
ja r-xdata
mov eax [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push eax
push ebx
push edi
push esi
push 0x4
push esi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0x1943
jb r-xdata
je r-xdata
mov eax [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
push eax
push ebx
push edi
push esi
push 0x4
push esi
call sub_412e80
add esp 0x8
push eax
call [ CallWindowProcA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
cmp edi 0x1944
jbe r-xdata
mov ebx [ esp + 0x58 ]
mov edi ebx
test edi edi
jne r-xdata
cmp edi 0xa
je r-xdata
mov eax [ esp + 0x5c ]
pop edi
pop esi
pop ebx
mov [ eax ] 0x1
mov eax 0x3ec
add esp 0x40
retn 0x10
push edi
push esi
call sub_416150
add esp 0x8
test ebx ebx
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push esi
call [ BeginPaint@IAT ]
push eax
mov edi eax
push esi
call sub_413340
add esp 0x8
push esi
call [ GetDC@IAT ]
push eax
mov edi eax
push esi
call sub_413340
add esp 0x8
push edi
push esi
call sub_416150
add esp 0x8
push edi
push esi
call [ ReleaseDC@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x40
retn 0x10
lea eax [ esp + 0xc ]
push eax
push esi
call [ EndPaint@IAT ]
sub_416440
sub esp 0x4
cmp [ esp + 0xc ] 0x1
push esi
jne r-xdata
mov eax 0x1
pop esi
add esp 0x4
retn
push rw-data
call [ GetModuleHandleA@IAT ]
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov esi [ esp + 0xc ]
mov [ esp + 0x4 ] eax
test eax eax
je r-xdata
push rw-data
call [ EnterCriticalSection@IAT ]
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
movzx cx al
shl cx 0x8
movzx dx ah
or cx dx
test eax 0x80000000
mov [ rw-data ] cx
je r-xdata
push esi
call [ esp + 0x8 ]
mov [ rw-data ] 0x20
mov [ rw-data ] 0x10
cmp cx 0x35f
jb r-xdata
push 0x7
mov esi [ GetSystemMetrics@IAT ]
call esi
dec eax
push 0x8
mov [ rw-data ] eax
call esi
dec eax
push 0x4
mov [ rw-data ] eax
call esi
push 0x1e
mov [ rw-data ] eax
call esi
push rw-data
mov [ rw-data ] eax
call [ LeaveCriticalSection@IAT ]
sub_416510
mov eax [ esp + 0x8 ]
sub esp 0x4
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
push ebp
push 0x2
push eax
push esi
call [ FindResourceA@IAT ]
mov edi eax
test edi edi
jne r-xdata
push edi
push esi
call [ SizeofResource@IAT ]
mov ebx eax
push edi
push esi
call [ LoadResource@IAT ]
mov esi eax
test esi esi
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
push ebx
push 0x40
call [ GlobalAlloc@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
mov edi ebp
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x20 ]
xor ecx ecx
mov cl ah
mov edx eax
mov [ esp + 0x10 ] 0x0
shl ecx 0x8
shr edx 0x10
mov [ esp + 0x10 ] dl
xor edx edx
or ecx [ esp + 0x10 ]
mov dl al
shl edx 0x10
mov eax [ esp + 0x28 ]
or ecx edx
mov edx eax
shr edx 0x10
mov [ ebp + 0x28 ] ecx
mov [ esp + 0x10 ] 0x0
xor ecx ecx
mov [ esp + 0x10 ] dl
mov cl ah
xor edx edx
shl ecx 0x8
mov dl al
shl edx 0x10
or ecx [ esp + 0x10 ]
or ecx edx
mov eax [ esp + 0x24 ]
mov edx eax
mov [ ebp + 0x44 ] ecx
shr edx 0x10
xor ecx ecx
mov [ esp + 0x10 ] 0x0
mov cl ah
mov [ esp + 0x10 ] dl
shl ecx 0x8
xor edx edx
or ecx [ esp + 0x10 ]
mov dl al
shl edx 0x10
mov eax [ esp + 0x2c ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x48 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
mov eax [ esp + 0x30 ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x64 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
mov eax [ esp + 0x34 ]
or ecx edx
xor edx edx
mov dl al
mov [ ebp + 0x54 ] ecx
shl edx 0x10
xor ecx ecx
mov cl ah
shl ecx 0x8
push 0x0
shr eax 0x10
or ecx edx
xor edx edx
mov dl al
or ecx edx
mov [ ebp + 0x50 ] ecx
call [ GetDC@IAT ]
mov edi eax
push 0x0
push ebp
lea ecx [ ebp + 0x68 ]
push ecx
push 0x4
push ebp
push edi
call [ CreateDIBitmap@IAT ]
mov esi eax
push edi
push 0x0
call [ ReleaseDC@IAT ]
push ebp
call [ GlobalFree@IAT ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
xor eax eax
pop ebp
pop edi
pop esi
pop ebx
add esp 0x4
retn 0x20
sub_41b0f7
push esi
mov esi ecx
push 0x80
lea eax [ esi + 0x14 ]
mov [ esi + 0xc ] 0x1
push eax
push [ esi + 0x94 ]
call sub_4273a4
neg eax
sbb eax eax
neg eax
mov [ esi + 0x10 ] eax
pop esi
retn
sub_41b120
mov eax [ esp + 0xc ]
push esi
test eax eax
mov esi ecx
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ eax ] 0x0
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx esi
call sub_41b0f7
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
push [ esp + 0xc ]
lea eax [ esi + 0x14 ]
push eax
push [ esp + 0x10 ]
call [ lstrcpynA@IAT ]
jmp r-xdata
mov eax [ esi + 0x10 ]
pop esi
retn 0xc
sub_41b195
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0x1c ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
dec eax
mov esi ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffff894
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
call sub_40a727
mov [ esi ] eax
pop ecx
mov eax esi
pop esi
leave
retn 0x1c
sub_41b1e1
push ebp
mov ebp esp
sub esp 0x24
movzx eax [ ebp + 0xc ]
push esi
mov esi ecx
mov edx eax
mov ecx 0xffff001f
and edx ecx
shl edx 0x1
mov [ ebp - 0x24 ] edx
mov edx eax
shr eax 0xb
shr edx 0x5
mov [ ebp - 0x1c ] eax
and dx 0xf83f
movzx eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] edx
mov edx eax
and edx ecx
mov ecx eax
shr eax 0x9
add eax 0x50
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
shr ecx 0x5
and cx 0xf80f
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
dec ecx
push eax
mov [ ebp - 0x14 ] ecx
call sub_40a727
mov [ esi ] eax
pop ecx
mov eax esi
pop esi
leave
retn 0xc
sub_41b24a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov cx [ eax ]
cmp cx 0x76c
jae r-xdata
movzx edx [ eax + 0xc ]
push [ ebp + 0xc ]
push edx
movzx edx [ eax + 0xa ]
push edx
movzx edx [ eax + 0x8 ]
push edx
movzx edx [ eax + 0x6 ]
movzx eax [ eax + 0x2 ]
push edx
push eax
movzx eax cx
push eax
lea ecx [ ebp + 0x8 ]
call sub_41b195
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
and [ esi ] 0x0
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
sub_41b296
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x8 ]
push esi
push eax
mov esi ecx
push [ ebp + 0x8 ]
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
jne r-xdata
mov eax esi
pop esi
leave
retn 0x8
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0x8 ]
push eax
call sub_41b24a
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
sub_41b2f5
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
je r-xdata
push ecx
call sub_40aa03
pop ecx
push esi
push edi
push ecx
call sub_40aa03
pop ecx
mov esi eax
push 0x9
mov edi ebx
pop ecx
mov eax ebx
[ edi ] [ esi ]
pop edi
pop esi
jmp r-xdata
pop ebx
retn 0x4
sub_41b321
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
push ecx
je r-xdata
call sub_40ab0d
pop ecx
call sub_40ab0d
test eax eax
pop ecx
je r-xdata
pop ebx
retn 0x4
push esi
push edi
push 0x9
mov esi eax
pop ecx
mov edi ebx
[ edi ] [ esi ]
pop edi
mov eax ebx
pop esi
jmp r-xdata
sub_41b350
push 0x0
call sub_41b321
test eax eax
je r-xdata
retn 0x4
mov dx [ eax + 0x14 ]
mov ecx [ esp + 0x4 ]
add dx 0x76c
push 0x1
mov [ ecx ] dx
mov dx [ eax + 0x10 ]
inc dx
mov [ ecx + 0x2 ] dx
mov dx [ eax + 0x18 ]
mov [ ecx + 0x4 ] dx
mov dx [ eax + 0xc ]
mov [ ecx + 0x6 ] dx
mov dx [ eax + 0x8 ]
mov [ ecx + 0x8 ] dx
mov dx [ eax + 0x4 ]
mov [ ecx + 0xa ] dx
mov ax [ eax ]
and [ ecx + 0xe ] 0x0
mov [ ecx + 0xc ] ax
pop eax
sub_41b3e7
sub esp 0x84
and [ esp ] 0x0
push ebp
mov ebp [ esp + 0x90 ]
push esi
push edi
mov edi ecx
mov al [ ebp ]
inc ebp
test al al
lea esi [ esp + 0x10 ]
je r-xdata
mov ecx [ esp + 0x94 ]
and [ esi ] 0x0
lea eax [ esp + 0x10 ]
push eax
call sub_424a4d
mov eax [ esp + 0x94 ]
pop edi
pop esi
pop ebp
add esp 0x84
retn 0x8
push ebx
mov ebx [ wsprintfA@IAT ]
mov [ esi ] al
inc esi
movzx eax al
test [ eax + rw-data ] 0x4
je r-xdata
mov cl [ ebp ]
inc ebp
movsx eax cl
cmp eax 0x25
mov [ esp + 0x9c ] ebp
je r-xdata
mov al [ ebp ]
inc ebp
test al al
jne r-xdata
mov al [ ebp ]
mov [ esi ] al
inc esi
inc ebp
mov [ esi ] cl
inc esi
jmp r-xdata
cmp eax 0x44
je r-xdata
cmp al 0x25
jne r-xdata
pop ebx
mov eax [ edi ]
mov ecx 0x15180
cdq
idiv ecx
push eax
push r--data
push esi
call ebx
add esp 0xc
add esi eax
jmp r-xdata
cmp eax 0x48
je r-xdata
mov ecx [ edi ]
mov ebp 0x15180
mov eax ecx
cdq
idiv ebp
lea eax [ eax + eax * 2 ]
shl eax 0x3
mov ebp eax
mov eax ecx
cdq
mov ecx 0xe10
cmp eax 0x4d
je r-xdata
mov ecx [ edi ]
mov ebp 0xe10
mov eax ecx
push 0x3c
cdq
idiv ebp
mov ebp eax
mov eax ecx
imul ebp ebp 0x3c
cdq
pop ecx
jmp r-xdata
cmp eax 0x53
jne r-xdata
idiv ecx
sub eax ebp
push eax
mov ecx [ edi ]
push 0x3c
mov eax ecx
pop ebp
cdq
idiv ebp
imul eax eax 0x3c
sub ecx eax
push ecx
jmp r-xdata
push r--data
push esi
call ebx
mov ebp [ esp + 0xa8 ]
add esp 0xc
add esi eax
jmp r-xdata
sub_41b513
mov eax sub_43e43f
call sub_408db8
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] eax
push 0x1
lea ecx [ ebp - 0x10 ]
pop esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
call sub_427320
push [ ebp - 0x10 ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_41b3e7
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_41b56f
push ebp
mov ebp esp
sub esp 0x84
and [ ebp - 0x4 ] 0x0
push ecx
call sub_40ab0d
test eax eax
pop ecx
je r-xdata
and [ ebp - 0x84 ] 0x0
push eax
lea eax [ ebp - 0x84 ]
push [ ebp + 0xc ]
push 0x80
push eax
call sub_40afc3
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x84 ]
push eax
call sub_424a4d
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_41b5c0
push ebp
mov ebp esp
sub esp 0x84
and [ ebp - 0x4 ] 0x0
push ecx
call sub_40aa03
test eax eax
pop ecx
je r-xdata
and [ ebp - 0x84 ] 0x0
push eax
lea eax [ ebp - 0x84 ]
push [ ebp + 0xc ]
push 0x80
push eax
call sub_40afc3
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x84 ]
push eax
call sub_424a4d
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_41b611
mov eax sub_43e46b
call sub_408db8
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] eax
push 0x1
lea ecx [ ebp - 0x10 ]
pop esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
call sub_427320
push [ ebp - 0x10 ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_41b56f
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_41b66d
mov eax sub_43e497
call sub_408db8
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
push edi
mov edi ecx
mov [ ebp - 0x10 ] eax
push 0x1
lea ecx [ ebp - 0x10 ]
pop esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
call sub_427320
push [ ebp - 0x10 ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_41b5c0
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_41c843
mov eax sub_43dd94
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_421249
and [ ebp - 0x4 ] 0x0
push 0xa
lea ecx [ esi + 0x3c ]
call sub_41fc59
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41c898
push ebx
push esi
push edi
mov ebx ecx
push 0x1000
call sub_424301
mov edi [ esp + 0x10 ]
xor esi esi
cmp edi esi
jne r-xdata
mov eax [ edi + 0x1c ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x8
cmp edi esi
je r-xdata
mov ecx [ esp + 0x14 ]
push esi
push esi
push eax
mov eax 0x80000000
push eax
push eax
push eax
or ecx eax
push eax
push ecx
push esi
push r--data
push esi
mov ecx ebx
call sub_421bf2
cmp eax esi
je r-xdata
mov [ ebx + 0x20 ] esi
mov esi [ edi + 0x1c ]
sub_41c8ed
mov eax sub_43ddb3
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_421ee2
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x3c ]
call sub_41fd33
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d24
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41c934
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x58 ]
test esi esi
je r-xdata
push 0x1
pop eax
pop esi
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_41c94e
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov ebx ecx
push 0xb
pop ecx
lea edi [ ebp - 0x2c ]
[ edi ] [ esi ]
xor edi edi
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebx ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx ebx
push [ ebp + 0x8 ]
push 0x404
call [ eax + 0xa0 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
lea eax [ ebp + 0xc ]
lea esi [ ebx + 0x3c ]
push eax
mov ecx esi
push [ ebp - 0x8 ]
call sub_41fe3d
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
push [ ebp - 0x8 ]
call sub_41fe5f
push [ ebp - 0x8 ]
mov ecx esi
call sub_41fe81
mov [ eax ] edi
sub_41c9f0
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
push edi
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov ecx [ eax + 0x4 ]
push ecx
mov [ ebp - 0x4 ] ecx
push [ eax ]
call [ WindowFromPoint@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
leave
retn 0x8
push esi
call [ GetParent@IAT ]
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push esi
call [ ScreenToClient@IAT ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push esi
call sub_42e683
mov edi eax
test edi edi
je r-xdata
push 0x2
push edi
call sub_42e60e
test eax eax
je r-xdata
mov eax esi
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
mov eax edi
je r-xdata
mov eax edi
jmp r-xdata
sub_41ca63
push ebp
mov ebp esp
sub esp 0x2c
push esi
lea eax [ ebp - 0x2c ]
push [ ebp + 0x14 ]
mov esi ecx
push [ ebp + 0x8 ]
push eax
call sub_41ccf5
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x404
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
pop esi
leave
retn 0x10
push 0x10
lea eax [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push eax
call sub_408e20
add esp 0xc
sub_41cab1
push ebp
mov ebp esp
sub esp 0x2c
push esi
lea eax [ ebp - 0x2c ]
push [ ebp + 0x14 ]
mov esi ecx
push [ ebp + 0x8 ]
push eax
call sub_41ccf5
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_439511
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
movzx eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x404
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
pop esi
leave
retn 0x10
push 0x10
lea eax [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push eax
call sub_408e20
add esp 0xc
sub_41cb0b
push ebp
mov ebp esp
sub esp 0x2c
push esi
lea eax [ ebp - 0x2c ]
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
push eax
call sub_41ccf5
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x405
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
pop esi
leave
retn 0x8
sub_41cb3c
push ebp
mov ebp esp
sub esp 0x2c
push esi
lea eax [ ebp - 0x2c ]
push [ ebp + 0x10 ]
mov esi ecx
push [ ebp + 0xc ]
push eax
call sub_41ccf5
mov ecx [ ebp + 0x8 ]
push 0x100
call sub_424e0f
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x40b
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
mov ecx [ ebp + 0x8 ]
push 0xffffffff
call sub_424e5e
pop esi
leave
retn 0xc
sub_41cb87
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push esi
call sub_41ccf5
push esi
lea eax [ esi + 0x2c ]
push 0x0
push 0x408
mov [ esi + 0x24 ] eax
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
pop edi
pop esi
retn 0xc
sub_41cbb9
push ebp
mov ebp esp
sub esp 0x38
push edi
push 0x38
lea eax [ ebp - 0x38 ]
push 0x0
mov edi ecx
push eax
call sub_408d60
mov eax [ ebp + 0x8 ]
add esp 0xc
test eax eax
mov [ ebp - 0x2c ] 0x28
jne r-xdata
mov eax [ eax + 0x1c ]
mov [ ebp - 0x38 ] eax
and [ ebp - 0x38 ] eax
jmp r-xdata
xor eax eax
lea eax [ ebp - 0x2c ]
push 0x28
push eax
push [ ebp + 0x14 ]
call sub_408e20
add esp 0xc
push 0x1
pop eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x38 ]
push eax
push 0x0
push 0x40a
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
pop edi
je r-xdata
leave
retn 0x10
sub_41cc2c
push ebp
mov ebp esp
sub esp 0x2c
push esi
lea eax [ ebp - 0x2c ]
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
push eax
call sub_41ccf5
push 0x10
lea eax [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push eax
call sub_408e20
add esp 0xc
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x406
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
pop esi
leave
retn 0xc
sub_41cc6e
push ebp
mov ebp esp
sub esp 0x2c
push esi
lea eax [ ebp - 0x2c ]
push [ ebp + 0x10 ]
mov esi ecx
push [ ebp + 0xc ]
push eax
call sub_41ccf5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x40c
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
pop esi
leave
retn 0xc
sub_41cca5
mov eax sub_43ddc8
call sub_408db8
push ecx
mov eax [ rw-data ]
push esi
mov esi ecx
mov [ ebp - 0x10 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_427320
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
call sub_41cc6e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_41ccf5
push esi
mov esi [ esp + 0x8 ]
push edi
push 0x28
pop edi
push edi
push 0x0
push esi
call sub_408d60
mov eax [ esp + 0x1c ]
add esp 0xc
test eax eax
mov [ esi ] edi
jne r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
push edi
call [ GetParent@IAT ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] edi
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
pop edi
pop esi
retn 0xc
sub_41cd48
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_439281
cmp [ ebp + 0x8 ] 0x0
mov edi [ eax + 0xcc ]
jne r-xdata
mov edi [ ebp + 0xc ]
test [ esi + 0x24 ] edi
jne r-xdata
mov ebx [ ebp + 0xc ]
test [ esi + 0x24 ] ebx
je r-xdata
push 0x1
pop eax
pop edi
pop esi
pop ebx
leave
retn 0x8
call sub_439511
mov [ eax + 0x1034 ] sub_41ce8c
or [ esi + 0x24 ] edi
cmp [ eax + 0xd0 ] esi
jne r-xdata
test edi edi
je r-xdata
push 0x1
call sub_421f99
not ebx
and [ esi + 0x24 ] ebx
jmp r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_408d60
mov eax [ esi + 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0x28
push eax
push 0x0
push 0x405
mov [ ebp - 0x28 ] 0x1
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
sub_41ce0a
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push 0x7
mov esi ebx
pop ecx
lea edi [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
[ edi ] [ esi ]
mov edi [ ebp + 0x8 ]
mov esi [ SendMessageA@IAT ]
push eax
push 0x0
push 0x410
push [ edi + 0x1c ]
call esi
mov ecx [ ebx + 0x14 ]
cmp [ ebp - 0x20 ] 0x200
mov [ ebp - 0x8 ] ecx
mov ecx [ ebx + 0x18 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] ecx
jb r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp - 0x8 ]
shl eax 0x10
or eax ecx
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x407
push [ edi + 0x1c ]
call esi
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ebp - 0x20 ] 0x209
ja r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ ScreenToClient@IAT ]
sub_41ce9c
mov eax sub_43dddd
call sub_408db8
sub esp 0x74
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi [ ebx + 0x4 ]
mov edi ecx
cmp esi 0x200
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x1c ] esi
je r-xdata
mov esi [ GetKeyState@IAT ]
push 0x1
call esi
test ax ax
jl r-xdata
cmp esi 0xa0
je r-xdata
mov esi [ ebp - 0x1c ]
push 0x2
call esi
test ax ax
jl r-xdata
cmp esi 0x202
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push [ ebx ]
push 0x4
call esi
test ax ax
jl r-xdata
cmp esi 0x205
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edi
je r-xdata
push [ ebx ]
cmp esi 0x208
jne r-xdata
cmp esi 0x100
jb r-xdata
test [ eax + 0x24 ] 0x401
jne r-xdata
cmp eax edi
je r-xdata
test [ eax + 0x24 ] 0x401
jne r-xdata
test [ edi + 0x24 ] 0x401
je r-xdata
cmp esi 0x104
jb r-xdata
cmp esi 0x108
jbe r-xdata
push [ eax + 0x1c ]
call [ GetParent@IAT ]
push eax
jmp r-xdata
push sub_43860d
mov ecx rw-data
call sub_439bd8
mov esi eax
mov ecx edi
mov [ ebp - 0x18 ] esi
mov ebx [ esi + 0xcc ]
call sub_422df5
test ebx ebx
mov [ ebp - 0x14 ] eax
je r-xdata
test eax eax
jne r-xdata
push [ eax + 0x1c ]
call [ GetParent@IAT ]
push eax
jmp r-xdata
xor eax eax
cmp esi 0x107
ja r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_42166a
test eax eax
je r-xdata
push 0x58
call sub_4250b0
pop ecx
mov [ ebp - 0x1c ] eax
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx ebx
call sub_408019
cmp eax [ ebp - 0x14 ]
je r-xdata
push sub_43860d
mov ecx rw-data
call sub_439bd8
and [ eax + 0xd0 ] 0x0
or [ eax + 0xd4 ] 0xffffffff
jmp r-xdata
call sub_42166a
test eax eax
je r-xdata
test eax eax
jne r-xdata
test [ edi + 0x25 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x1
push [ ebp - 0x14 ]
mov ecx ebx
call sub_41c898
test eax eax
jne r-xdata
mov ecx eax
call sub_41c843
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x58 ]
mov eax [ ebx ]
push 0x1
mov ecx ebx
call [ eax + 0x4 ]
xor ebx ebx
mov [ esi + 0xcc ] ebx
push eax
call sub_421f99
cmp esi 0x201
je r-xdata
push 0x0
push 0x0
push 0x401
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
mov edi [ ebp - 0x10 ]
mov [ esi + 0xcc ] ebx
test ebx ebx
je r-xdata
push 0x2c
lea eax [ ebp - 0x54 ]
push 0x0
push eax
call sub_408d60
mov eax [ edi + 0x1c ]
add esp 0xc
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x54 ] 0x28
push eax
push 0x0
push 0x408
mov [ ebp - 0x50 ] 0x1
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp esi 0x203
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x28 ] ecx
push [ edi + 0x1c ]
call [ ScreenToClient@IAT ]
push 0x2c
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_408d60
add esp 0xc
mov eax [ edi ]
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x80 ] 0x28
push ecx
mov ecx edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
call [ eax + 0x64 ]
mov ecx eax
mov [ ebp - 0x1c ] eax
inc ecx
neg ecx
sbb ecx ecx
and ecx edi
cmp [ esi + 0xd4 ] eax
mov [ ebp - 0x14 ] ecx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
push 0x0
push 0x404
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
mov eax [ ebx ]
push 0x1
mov ecx ebx
call [ eax + 0x4 ]
jmp r-xdata
cmp esi 0x204
je r-xdata
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0xd0 ] ecx
jne r-xdata
cmp esi 0x206
je r-xdata
push 0x0
push 0x0
push 0x401
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
mov eax [ ebp - 0x7c ]
push 0xb
pop ecx
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x54 ]
and eax 0x3fffffff
[ edi ] [ esi ]
mov ecx [ ebp - 0x10 ]
mov edi 0x400
mov [ ebp - 0x50 ] eax
test [ ecx + 0x24 ] edi
je r-xdata
test [ edi + 0x25 ] 0x4
je r-xdata
cmp esi 0x207
je r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_41ce0a
cmp [ esi + 0xd8 ] 0x28
lea edi [ esi + 0xd8 ]
jb r-xdata
lea eax [ ebp - 0x54 ]
xor esi esi
push eax
push esi
push 0x404
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
test [ ebp - 0x79 ] 0x40
jne r-xdata
or al 0x20
mov [ ebp - 0x50 ] eax
cmp eax 0xffffffff
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
call [ GetCursorPos@IAT ]
movzx eax [ ebp - 0x1c ]
movzx ecx [ ebp - 0x20 ]
shl eax 0x10
or eax ecx
push eax
push 0x0
push 0x412
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
jmp r-xdata
cmp esi 0x209
je r-xdata
mov eax [ ebp - 0x14 ]
push 0xb
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0xd4 ] eax
pop ecx
lea esi [ ebp - 0x80 ]
[ edi ] [ esi ]
push edi
push 0x0
push 0x405
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
push esi
push 0x1
push 0x401
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
mov eax [ ebp - 0x10 ]
test [ eax + 0x24 ] edi
je r-xdata
mov ecx [ ebp - 0x10 ]
call sub_422e39
test eax eax
je r-xdata
cmp [ ebp - 0x5c ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_41ce0a
jmp r-xdata
cmp esi 0xa1
je r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
push 0x213
push esi
push esi
push esi
push esi
push esi
push [ ebx + 0x1c ]
call [ SetWindowPos@IAT ]
lea eax [ ebp - 0x54 ]
push eax
push 0x1
push 0x411
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
mov esi [ ebp - 0x18 ]
cmp esi 0xa3
je r-xdata
push [ ebp - 0x5c ]
call sub_4094a8
pop ecx
jmp r-xdata
cmp esi 0xa4
je r-xdata
cmp esi 0xa6
je r-xdata
cmp esi 0xa7
je r-xdata
cmp esi 0xa9
jne r-xdata
sub_41e5f9
push esi
mov esi ecx
push edi
xor edi edi
mov ecx [ esi + 0x14 ]
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
call sub_41e8b3
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
sub_41e642
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov [ esi + 0x10 ] ecx
mov ecx [ esp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax ] ecx
inc [ esi + 0xc ]
and [ eax + 0x8 ] 0x0
pop esi
retn 0x8
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_41e893
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_41e6b3
push esi
mov esi ecx
push [ esi + 0x4 ]
push 0x0
call sub_41e642
mov ecx [ esp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi + 0x8 ] eax
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov [ esi + 0x4 ] eax
pop esi
retn 0x4
sub_41e6dd
push esi
mov esi ecx
push 0x0
push [ esi + 0x8 ]
call sub_41e642
mov ecx [ esp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] eax
mov [ ecx ] eax
jmp r-xdata
mov [ esi + 0x8 ] eax
pop esi
retn 0x4
sub_41e706
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi ecx
mov esi [ eax + 0x8 ]
pop edi
pop esi
retn 0x4
mov eax esi
mov esi [ esi + 0x4 ]
mov ecx edi
push [ eax + 0x8 ]
call sub_41e6b3
jmp r-xdata
test esi esi
je r-xdata
sub_41e72b
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi ecx
mov esi [ eax + 0x4 ]
pop edi
pop esi
retn 0x4
mov eax esi
mov esi [ esi ]
mov ecx edi
push [ eax + 0x8 ]
call sub_41e6dd
jmp r-xdata
test esi esi
je r-xdata
sub_41e74f
mov eax [ ecx + 0x4 ]
push esi
mov edx [ eax ]
mov esi [ eax + 0x8 ]
test edx edx
mov [ ecx + 0x4 ] edx
je r-xdata
and [ ecx + 0x8 ] 0x0
and [ edx + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_41e69a
mov eax esi
pop esi
retn
sub_41e773
mov eax [ ecx + 0x8 ]
push esi
mov edx [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
test edx edx
mov [ ecx + 0x8 ] edx
je r-xdata
and [ ecx + 0x4 ] 0x0
and [ edx ] 0x0
jmp r-xdata
push eax
call sub_41e69a
mov eax esi
pop esi
retn
sub_41e797
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
test esi esi
jne r-xdata
push esi
mov ecx edi
push [ esi + 0x4 ]
call sub_41e642
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push [ esp + 0x10 ]
call sub_41e6b3
jmp r-xdata
mov [ edi + 0x4 ] eax
mov [ ecx ] eax
jmp r-xdata
pop edi
pop esi
retn 0x8
mov [ esi + 0x4 ] eax
sub_41e7d6
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
test esi esi
jne r-xdata
push [ esi ]
mov ecx edi
push esi
call sub_41e642
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
push [ esp + 0x10 ]
call sub_41e6dd
jmp r-xdata
mov [ edi + 0x8 ] eax
mov [ ecx + 0x4 ] eax
jmp r-xdata
pop edi
pop esi
retn 0x8
mov [ esi ] eax
sub_41e813
mov eax [ esp + 0x4 ]
push esi
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov esi [ eax ]
mov [ edx ] esi
mov edx [ eax ]
mov [ ecx + 0x4 ] edx
jmp r-xdata
mov edx [ eax ]
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov edx [ eax + 0x4 ]
mov [ ecx + 0x8 ] edx
jmp r-xdata
cmp eax [ ecx + 0x8 ]
jne r-xdata
push eax
call sub_41e69a
pop esi
retn 0x4
sub_41e84a
mov edx [ esp + 0x4 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
xor eax eax
test edx edx
jl r-xdata
mov eax [ ecx + 0x4 ]
mov ecx edx
dec edx
test ecx ecx
je r-xdata
retn 0x4
lea ecx [ edx + 0x1 ]
mov eax [ eax ]
dec ecx
jne r-xdata
jmp r-xdata
sub_41e870
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
xor eax eax
mov ecx [ eax + 0x8 ]
cmp ecx [ esp + 0x4 ]
jne r-xdata
test eax eax
je r-xdata
jmp r-xdata
retn 0x8
sub_41f9cf
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov ebx [ esp + 0xc ]
je r-xdata
push eax
call sub_4250d9
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn 0x8
push edi
mov edi ebx
shl edi 0x2
push edi
call sub_4250b0
push edi
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_408d60
add esp 0x10
pop edi
sub_41fa14
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
call sub_41e8b3
and [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_4250d9
and [ esi + 0x4 ] 0x0
pop ecx
sub_41fa68
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
pop esi
retn
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_41e893
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_41face
push esi
mov esi [ esp + 0x8 ]
mov eax esi
xor edx edx
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
retn 0x8
mov eax [ eax ]
jmp r-xdata
test eax eax
je r-xdata
sub_41fb00
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov edx [ esi + edx * 4 ]
cmp [ edx + 0x4 ] edi
je r-xdata
mov eax [ edx + 0x8 ]
jmp r-xdata
mov edx [ edx ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test edx edx
je r-xdata
sub_41fb33
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_41face
test eax eax
je r-xdata
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push 0x1
mov [ ecx ] eax
pop eax
sub_41fb55
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
push edi
call sub_41face
test eax eax
jne r-xdata
pop edi
add eax 0x8
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx esi
call sub_41fa68
mov [ eax + 0x4 ] edi
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx * 4 ] eax
push 0x1
mov ecx esi
push [ esi + 0x8 ]
call sub_41f9cf
sub_41fba5
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esi + edx * 4 ]
lea edx [ esi + edx * 4 ]
cmp [ eax + 0x4 ] edi
je r-xdata
mov esi [ eax ]
push eax
mov [ edx ] esi
call sub_41fab5
push 0x1
pop eax
jmp r-xdata
mov edx eax
mov eax [ eax ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
sub_41fbe7
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
cmp esi 0xffffffff
jne r-xdata
mov edi [ esi ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esi + 0x8 ]
pop edi
mov [ ecx ] eax
pop esi
retn 0xc
mov eax [ esi + 0x4 ]
push ebx
mov ebx [ ecx + 0x8 ]
xor edx edx
shr eax 0x4
div ebx
inc edx
cmp edx ebx
jae r-xdata
mov eax [ ecx + 0x4 ]
pop ebx
mov eax [ ecx + 0x4 ]
lea eax [ eax + edx * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc edx
add eax 0x4
cmp edx ebx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
mov edi [ eax ]
test edi edi
jne r-xdata
sub_41fc9c
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov ebx [ esp + 0xc ]
je r-xdata
push eax
call sub_4250d9
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn 0x8
push edi
mov edi ebx
shl edi 0x2
push edi
call sub_4250b0
push edi
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_408d60
add esp 0x10
pop edi
sub_41fce1
push ebp
push esi
mov esi ecx
xor ebp ebp
cmp [ esi + 0x4 ] ebp
je r-xdata
mov ecx [ esi + 0x14 ]
mov [ esi + 0xc ] ebp
mov [ esi + 0x10 ] ebp
call sub_41e8b3
mov [ esi + 0x14 ] ebp
pop esi
pop ebp
retn
push ebx
xor ebx ebx
cmp [ esi + 0x8 ] ebp
jbe r-xdata
push [ esi + 0x4 ]
call sub_4250d9
pop ecx
mov [ esi + 0x4 ] ebp
pop ebx
push edi
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
lea ecx [ edi + 0x8 ]
call sub_4249df
mov edi [ edi ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edi [ eax + ebx * 4 ]
pop edi
cmp edi ebp
je r-xdata
sub_41fd5c
push esi
mov esi ecx
push edi
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edi [ esi + 0x10 ]
push 0x4
push rw-data
mov eax [ edi ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] eax
lea eax [ edi + 0x8 ]
push eax
call sub_408e20
and [ edi + 0xc ] 0x0
add esp 0xc
mov eax edi
pop edi
pop esi
retn
push 0x10
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_41e893
mov ecx [ esi + 0x18 ]
add eax 0x4
mov edx ecx
shl edx 0x4
dec ecx
test ecx ecx
lea eax [ eax + edx - 0x10 ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0x10
dec ecx
jne r-xdata
sub_41fdbe
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
lea ecx [ edi + 0x8 ]
call sub_4249df
mov eax [ esi + 0x10 ]
mov [ edi ] eax
dec [ esi + 0xc ]
mov [ esi + 0x10 ] edi
jne r-xdata
pop edi
pop esi
retn 0x4
mov ecx esi
call sub_41fce1
sub_41fde7
push esi
push edi
mov edi [ esp + 0xc ]
xor eax eax
mov esi edi
mov dl [ edi ]
xor edx edx
div [ ecx + 0x8 ]
mov eax [ esp + 0x10 ]
mov [ eax ] edx
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
imul eax eax 0x21
movsx edx dl
add eax edx
mov dl [ esi + 0x1 ]
inc esi
jmp r-xdata
xor eax eax
mov esi [ eax + edx * 4 ]
test dl dl
je r-xdata
mov eax [ esi + 0x8 ]
push edi
push eax
call sub_40959c
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax esi
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
pop edi
pop esi
retn 0x8
test esi esi
je r-xdata
sub_41fe3d
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_41fde7
test eax eax
je r-xdata
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
push 0x1
mov [ ecx ] eax
pop eax
sub_41fe5f
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_41fde7
test eax eax
je r-xdata
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push 0x1
mov [ ecx ] eax
pop eax
sub_41fe81
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
mov edi ecx
call sub_41fde7
mov esi eax
test esi esi
jne r-xdata
lea eax [ esi + 0xc ]
pop edi
pop esi
leave
retn 0x4
cmp [ edi + 0x4 ] eax
jne r-xdata
mov ecx edi
call sub_41fd5c
push [ ebp + 0x8 ]
mov esi eax
mov eax [ ebp - 0x4 ]
lea ecx [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
call sub_424b68
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov eax [ eax + ecx * 4 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + ecx * 4 ] esi
push 0x1
mov ecx edi
push [ edi + 0x8 ]
call sub_41fc9c
sub_41fee3
push ebx
mov ebx ecx
push esi
push edi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
xor eax eax
mov edx [ esp + 0x10 ]
xor eax eax
xor edx edx
div [ ebx + 0x8 ]
lea edi [ esi + edx * 4 ]
mov esi [ esi + edx * 4 ]
imul eax eax 0x21
movsx ecx cl
add eax ecx
inc edx
jmp r-xdata
push [ esp + 0x10 ]
mov eax [ esi + 0x8 ]
push eax
call sub_40959c
pop ecx
test eax eax
pop ecx
je r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
mov eax [ esi ]
push esi
mov ecx ebx
mov [ edi ] eax
call sub_41fdbe
push 0x1
pop eax
jmp r-xdata
mov edi esi
mov esi [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
test esi esi
je r-xdata
sub_41ff47
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov esi [ ebx ]
cmp esi 0xffffffff
jne r-xdata
mov edx [ esi ]
test edx edx
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ esi + 0x8 ]
push eax
mov [ ebx ] edx
call sub_424b18
mov ecx [ esp + 0x18 ]
mov eax [ esi + 0xc ]
pop edi
pop esi
mov [ ecx ] eax
pop ebx
retn 0xc
mov eax [ esi + 0x4 ]
mov edi [ ecx + 0x8 ]
inc eax
cmp eax edi
jae r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
lea ecx [ ecx + eax * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc eax
add ecx 0x4
cmp eax edi
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
mov edx [ ecx ]
test edx edx
jne r-xdata
sub_421249
push esi
mov esi ecx
call sub_425715
push 0x20
lea eax [ esi + 0x1c ]
push 0x0
push eax
mov [ esi ] r--data
call sub_408d60
add esp 0xc
mov eax esi
pop esi
retn
sub_421287
push esi
push edi
mov esi ecx
call sub_425715
lea edi [ esi + 0x1c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_408d60
mov eax [ esp + 0x18 ]
add esp 0xc
mov [ edi ] eax
mov eax esi
pop edi
pop esi
retn 0x4
sub_4212b3
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
mov ecx [ ebp + 0x10 ]
not ecx
and ecx eax
or ecx [ ebp + 0x14 ]
cmp eax ecx
jne r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowLongA@IAT ]
mov eax [ ebp + 0x18 ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
or al 0x17
push eax
push ecx
push ecx
push ecx
push ecx
push ecx
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
pop ebp
retn 0x14
sub_421359
push ebp
mov ebp esp
sub esp 0x10
test [ ebp + 0x13 ] 0x10
push esi
jne r-xdata
pop esi
leave
retn 0xc
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_425366
test eax 0x50000000
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push eax
call sub_42166a
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xac ]
test eax eax
je r-xdata
mov ecx eax
call sub_425568
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_423caa
sub_4213d2
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_425366
test eax 0x40000000
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx esi
call sub_422d9d
mov edi [ ebp + 0x10 ]
mov ebx eax
mov ecx edi
call sub_422d9d
cmp ebx eax
je r-xdata
mov eax [ esi + 0x1c ]
test edi edi
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x36e
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
sub_421433
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xfffffffe
push esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x201
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_422d9d
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x207
je r-xdata
push [ eax + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_42166a
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x204
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call sub_42166a
cmp esi eax
je r-xdata
mov ecx esi
call sub_425568
test eax eax
je r-xdata
push [ esi + 0x1c ]
call [ SetForegroundWindow@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_4214a9
mov eax sub_43da48
call sub_408db8
sub esp 0x34
push ebx
push esi
push edi
mov ecx rw-data
mov [ ebp - 0x10 ] esp
push sub_43860d
call sub_439bd8
mov ebx eax
push 0x7
pop ecx
lea edi [ ebp - 0x40 ]
lea eax [ ebx + 0x34 ]
and [ ebp - 0x4 ] 0x0
mov esi eax
mov [ ebp - 0x14 ] ebx
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
cmp esi 0x2
mov [ ebx + 0x3c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebx + 0x38 ] esi
mov [ ebx + 0x40 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
cmp esi 0x110
jne r-xdata
mov ecx [ edi + 0x34 ]
test ecx ecx
je r-xdata
push [ ebp + 0x18 ]
mov eax [ edi ]
mov ecx edi
push [ ebp + 0x14 ]
push esi
call [ eax + 0x98 ]
cmp esi 0x110
mov [ ebp + 0x18 ] eax
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_421336
mov eax [ ecx ]
push 0x0
call [ eax + 0x5c ]
push 0x7
mov eax [ ebp + 0x18 ]
lea edi [ ebx + 0x34 ]
pop ecx
lea esi [ ebp - 0x40 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
push [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_421359
jmp r-xdata
sub_421553
call sub_426ac9
mov ecx [ ebp - 0x14 ]
mov edx [ eax ]
add ecx 0x34
push ecx
mov ecx eax
push [ ebp + 0xc ]
call [ edx + 0x6c ]
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x18 ] eax
call sub_427571
mov eax r-xdata
retn
sub_42159c
push esi
push sub_43860d
mov ecx rw-data
call sub_439bd8
mov esi eax
call [ GetMessageTime@IAT ]
mov [ esi + 0x44 ] eax
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
movsx eax ax
mov [ esi + 0x48 ] ecx
mov [ esi + 0x4c ] eax
lea eax [ esi + 0x34 ]
pop esi
retn
sub_4215d1
push esi
mov esi ecx
push sub_43860d
mov ecx rw-data
call sub_439bd8
push [ eax + 0x40 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa0 ]
pop esi
retn
sub_4215f8
mov eax sub_43da5e
call sub_408db8
push esi
call sub_439537
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_42e816
call sub_42509e
push 0x48
mov ebx eax
call sub_4250b0
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x1c
push r--data
call sub_427768
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x14 ] eax
call sub_42509e
pop ebx
sub_42166a
push esi
push edi
push 0x1
call sub_4215f8
mov esi eax
push [ esp + 0xc ]
mov ecx esi
call sub_4277cd
mov edi eax
push esi
mov ecx edi
call sub_42568b
mov eax edi
pop edi
pop esi
retn 0x4
sub_4216af
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
push 0x1
call sub_4215f8
mov edi eax
push ebx
mov [ esi + 0x1c ] ebx
lea ecx [ edi + 0x4 ]
call sub_41fb55
push edi
mov ecx esi
mov [ eax ] esi
call sub_42568b
push 0x1
pop eax
pop edi
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_4216e8
push esi
mov esi ecx
push edi
mov edi [ esi + 0x1c ]
test edi edi
je r-xdata
and [ esi + 0x38 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4215f8
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_41fba5
sub_421717
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x360
jne r-xdata
push [ ebp + 0x8 ]
call sub_421691
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4214a9
push 0x1
pop eax
jmp r-xdata
pop ebp
retn 0x10
sub_42174c
mov eax sub_43da68
call sub_408db8
sub esp 0x40
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi r--data
mov [ ebp - 0x10 ] esp
push esi
push edi
call [ GetPropA@IAT ]
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
push 0x1
sub eax 0x6
pop ebx
je r-xdata
push [ ebp + 0x14 ]
call sub_42166a
push edi
mov esi eax
call sub_42166a
push esi
push [ ebp + 0x10 ]
push eax
call sub_4213d2
sub eax 0x1a
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push edi
call sub_42166a
mov ecx [ ebp + 0x14 ]
shr ecx 0x10
push ecx
movsx ecx [ ebp + 0x14 ]
push ecx
push eax
call sub_421433
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
sub eax 0x62
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push 0xfffffffc
push edi
call [ SetWindowLongA@IAT ]
push esi
push edi
call [ RemovePropA@IAT ]
push esi
call [ GlobalFindAtomA@IAT ]
push eax
call [ GlobalDeleteAtom@IAT ]
jmp r-xdata
sub eax 0x8e
jne r-xdata
push edi
call sub_42166a
mov esi eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_421336
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x110
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_421359
sub_42186f
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] eax
call sub_426ac9
mov edx [ eax ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx eax
push [ ebp - 0x20 ]
call [ edx + 0x6c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
call sub_427571
mov eax r-xdata
retn
sub_4218ab
push ebp
mov ebp esp
push esi
push edi
push sub_438641
mov ecx rw-data
call sub_439c9a
mov edi [ ebp + 0xc ]
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_42174c
cmp edi 0x135
je r-xdata
push [ esi + 0x8 ]
push eax
lea eax [ edi - 0x132 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_423b75
test eax eax
je r-xdata
cmp edi 0x136
je r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp edi 0x138
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
cmp edi 0x137
je r-xdata
cmp edi 0x134
jne r-xdata
sub_421927
push ebp
mov ebp esp
sub esp 0x10
push sub_43860d
mov ecx rw-data
call sub_439bd8
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ eax + 0x14 ]
push edi
mov edi [ ecx ]
call sub_439511
movzx eax [ eax + 0x14 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x2c ]
call [ CallNextHookEx@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test [ edi + 0x23 ] 0x40
jne r-xdata
leave
retn 0xc
test esi esi
je r-xdata
push 0xffffffe6
push ebx
call [ GetClassLongA@IAT ]
test eax 0x10000
jne r-xdata
mov esi [ ebp - 0x4 ]
test eax eax
jne r-xdata
push 0xfffffffc
push ebx
call [ GetWindowLongA@IAT ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
push ebx
mov ecx esi
call sub_4216af
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
cmp [ rw-data ] 0x0
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ edi + 0x28 ]
mov ecx eax
shr ecx 0x10
test cx cx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
push [ esi + 0x2c ]
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
mov edi [ GetPropA@IAT ]
mov esi r--data
push esi
push ebx
call edi
test eax eax
jne r-xdata
call sub_421746
mov esi eax
push esi
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push r--data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x10 ] cl
lea eax [ ebp - 0x10 ]
push 0x5
push eax
mov ax [ edi + 0x28 ]
push eax
call [ GlobalGetAtomNameA@IAT ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push esi
push ebx
call [ SetPropA@IAT ]
push esi
push ebx
call edi
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
and [ esi + 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov edi [ rw-data ]
test edi edi
je r-xdata
push esi
call [ GlobalAddAtomA@IAT ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
mov eax sub_4218ab
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push 0x3
push [ esi + 0x2c ]
call [ CallNextHookEx@IAT ]
cmp [ ebp - 0x8 ] 0x0
mov edi eax
je r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
push eax
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
mov eax sub_42174c
push 0x0
push 0x0
push 0x36f
push ebx
push esi
call sub_4214a9
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
call sub_421746
push 0xfffffffc
push ebx
mov [ ebp + 0x8 ] eax
call [ GetWindowLongA@IAT ]
push [ ebp - 0x10 ]
mov esi eax
sub esi [ ebp + 0x8 ]
push ebx
neg esi
sbb esi esi
inc esi
call [ edi + 0x20 ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
jmp r-xdata
sub_421b1d
push esi
push edi
push sub_43860d
mov ecx rw-data
call sub_439bd8
mov esi eax
mov edi [ esp + 0xc ]
cmp [ esi + 0x14 ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_421927
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
mov [ esi + 0x2c ] eax
jne r-xdata
call sub_41b163
sub_421b69
push esi
push sub_43860d
mov ecx rw-data
call sub_439bd8
mov esi eax
call sub_439511
cmp [ eax + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
and [ esi + 0x14 ] 0x0
xor eax eax
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
sub_421bab
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
push esi
test eax eax
push edi
jne r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebp + 0x18 ]
push [ ebp + 0x20 ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
sub eax esi
push edi
push eax
push edx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421bf2
pop edi
pop esi
pop ebp
retn 0x20
sub_421bf2
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x2c ]
mov esi ecx
mov [ ebp - 0x28 ] eax
call sub_439511
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
test eax eax
jne r-xdata
push edi
push esi
call sub_421b1d
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ CreateWindowExA@IAT ]
mov edi eax
call sub_421b69
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
xor eax eax
jmp r-xdata
xor eax eax
test edi edi
setne al
pop edi
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop esi
leave
retn 0x2c
sub_421cd8
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
test eax eax
push edi
jne r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
sub eax esi
push edi
push eax
mov eax [ ebp + 0x10 ]
push edx
or eax 0x40000000
push esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_421bf2
pop edi
pop esi
pop ebp
retn 0x1c
sub_421d24
mov eax sub_43da7c
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp esi rw-data
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_42572f
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ eax + 0x24 ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
and [ eax + 0x24 ] 0x0
cmp esi rw-data
je r-xdata
call sub_421ee2
sub_421da0
push esi
mov esi ecx
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
and [ esi + 0x34 ] 0x0
mov ecx esi
call sub_4215d1
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_421dbe
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_426ac9
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x30 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x1c ] esi
jne r-xdata
mov ecx [ esi + 0x34 ]
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0x30 ] ebx
cmp [ edi + 0x20 ] esi
jne r-xdata
call sub_439511
cmp [ eax + 0x14 ] bl
jne r-xdata
and [ esi + 0x34 ] 0x0
test [ esi + 0x24 ] bl
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov [ edi + 0x20 ] ebx
mov [ edi + 0x1c ] ebx
call sub_439511
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edi [ GetWindowLongA@IAT ]
push 0xfffffffc
push [ esi + 0x1c ]
call edi
mov ecx esi
mov ebx eax
call sub_4215d1
push 0xfffffffc
push [ esi + 0x1c ]
call edi
cmp eax ebx
jne r-xdata
call sub_439281
mov edi [ eax + 0xcc ]
test edi edi
je r-xdata
push ebx
call sub_43c0d3
call sub_4346a7
test eax eax
je r-xdata
mov ecx esi
call sub_4216e8
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
push eax
push 0xfffffffc
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_408d60
mov eax [ esi + 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0x28
push eax
push 0x0
push 0x405
mov [ ebp - 0x28 ] ebx
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
sub_421ee2
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push ebx
push edi
push 0x0
call sub_4215f8
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_41fb00
mov ecx [ esi + 0x38 ]
mov edi eax
test ecx ecx
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x50 ]
push [ esi + 0x1c ]
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax ebx
pop edi
pop ebx
pop esi
retn
mov ecx esi
call sub_4216e8
test edi edi
mov ebx eax
jne r-xdata
sub_421f2f
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x28 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push eax
call [ CallWindowProcA@IAT ]
mov eax [ esi ]
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_421f99
push esi
call sub_439281
mov esi eax
mov eax [ esi + 0xcc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
mov esi [ esi + 0x108 ]
je r-xdata
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
pop esi
retn 0x4
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x401
push eax
call [ SendMessageA@IAT ]
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
sub_421ff0
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
push [ ebx + 0x1c ]
call sub_42e683
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
push esi
push edi
call [ GetDlgCtrlID@IAT ]
mov esi [ ebp + 0x10 ]
movzx eax ax
test esi esi
mov [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
jmp r-xdata
cmp [ esi ] 0x28
jb r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x1c ]
or [ esi + 0x4 ] 0x1
or [ esi + 0x24 ] 0xffffffff
push 0x0
push 0x0
push 0x87
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
call [ SendMessageA@IAT ]
test ah 0x20
jne r-xdata
or [ esi + 0x4 ] 0x80000002
sub_422061
push esi
mov esi ecx
mov ecx [ esi + 0x38 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x88 ]
push [ esi + 0x1c ]
call [ GetWindowTextLengthA@IAT ]
lea ecx [ eax + 0x1 ]
push ecx
mov ecx [ esp + 0xc ]
push eax
call sub_424e86
push eax
push [ esi + 0x1c ]
call [ GetWindowTextA@IAT ]
mov ecx [ esp + 0x8 ]
push 0xffffffff
call sub_424e5e
jmp r-xdata
pop esi
retn 0x4
sub_4220a9
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
push rw-data
mov ecx edi
call sub_424b68
cmp [ esi + 0x34 ] 0x0
push [ esp + 0xc ]
jne r-xdata
mov ecx esi
call sub_425165
test eax eax
je r-xdata
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ edi ]
pop edi
pop esi
mov eax [ eax - 0x8 ]
retn 0x8
push edi
mov ecx eax
call sub_422061
push esi
call [ GetWindowTextLengthA@IAT ]
lea ecx [ eax + 0x1 ]
push ecx
push eax
mov ecx edi
call sub_424e86
push eax
push esi
call [ GetWindowTextA@IAT ]
push 0xffffffff
mov ecx edi
call sub_424e5e
jmp r-xdata
sub_422147
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
push 0x0
push [ esi + 0x14 ]
call sub_4235eb
test eax eax
jne r-xdata
push [ esi + 0x14 ]
call sub_4274ca
test eax eax
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx edi
call sub_4215d1
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
sub_422184
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x8 ]
call sub_4235eb
test eax eax
je r-xdata
mov ecx esi
call sub_4215d1
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_4221ce
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4215d1
lea eax [ ebp + 0xc ]
push eax
call sub_4235be
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_4221f9
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4215d1
lea eax [ ebp + 0xc ]
push eax
call sub_4235be
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_422224
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
call sub_439281
mov esi eax
mov eax [ esi + 0x54 ]
mov ebx [ esi + 0x50 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
mov [ esi + 0x50 ] eax
mov ecx [ edi + 0x4 ]
push eax
push 0x0
push [ ebp + 0x10 ]
mov [ esi + 0x54 ] ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
call [ TrackPopupMenu@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x50 ] ebx
mov [ esi + 0x54 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
mov eax [ eax + 0x1c ]
sub_422278
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
mov ebx eax
xor edi edi
test ebx ebx
jle r-xdata
xor eax eax
push edi
push [ esi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_4274b5
test eax eax
je r-xdata
push edi
push [ esi + 0x4 ]
call [ GetMenuItemID@IAT ]
cmp eax [ esp + 0x14 ]
je r-xdata
push [ esp + 0x14 ]
push eax
call sub_422278
test eax eax
jne r-xdata
push [ esi + 0x4 ]
call sub_4274ca
jmp r-xdata
inc edi
cmp edi ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn 0x8
jmp r-xdata
sub_4222db
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push esi
push [ edi + 0x1c ]
call sub_422f3b
test eax eax
je r-xdata
push sub_43860d
mov ecx rw-data
call sub_439bd8
mov ecx [ edi + 0x1c ]
cmp [ eax + 0x50 ] ecx
jne r-xdata
mov ecx edi
call sub_4215d1
push 0x0
mov ecx eax
call sub_4235be
test eax eax
jne r-xdata
push ecx
call [ GetMenu@IAT ]
push eax
push [ eax + 0x54 ]
jmp r-xdata
pop edi
pop esi
retn 0x8
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x10 ]
jmp r-xdata
call sub_4274b5
push [ esi + 0x8 ]
push eax
call sub_422278
test eax eax
je r-xdata
sub_422353
mov eax sub_43da88
call sub_408db8
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] esp
push eax
push [ esi + 0x24 ]
push [ esi + 0x10 ]
call [ GetClassInfoA@IAT ]
test eax eax
jne r-xdata
push 0x1
pop eax
push esi
call [ RegisterClassA@IAT ]
test ax ax
jne r-xdata
call sub_439511
xor ebx ebx
cmp [ eax + 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
call sub_43a141
mov [ ebp - 0x4 ] ebx
call sub_439511
push [ esi + 0x24 ]
mov esi [ lstrcatA@IAT ]
lea edi [ eax + 0x34 ]
push edi
call esi
lea eax [ ebp + 0xa ]
mov [ ebp + 0xa ] 0xa
push eax
push edi
mov [ ebp + 0xb ] bl
call esi
or [ ebp - 0x4 ] 0xffffffff
push 0x1
call sub_43a1b1
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_4223f4
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
call sub_439281
mov esi eax
add esi 0x58
call sub_439511
mov ebx [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
push [ ebp + 0x8 ]
push edi
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x1c
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
leave
retn 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x28 ] eax
mov eax [ DefWindowProcA@IAT ]
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] esi
call sub_422353
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
call sub_42e551
push [ ebp + 0x8 ]
push edi
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
push esi
push edi
call [ GetClassInfoA@IAT ]
test eax eax
jne r-xdata
sub_4224a8
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
push sub_43860d
mov ecx rw-data
mov [ ebp - 0xc ] eax
call sub_439bd8
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0xc ]
sub eax 0x132
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0x0
push 0x19
mov ecx esi
call [ eax + 0x98 ]
pop esi
leave
retn 0x8
sub_4224ee
mov eax sub_43da9c
call sub_408db8
push ecx
push ebx
push esi
mov esi ecx
call sub_439511
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
call sub_439511
mov ecx [ eax + 0x4 ]
call sub_425989
mov eax [ esi ]
xor ebx ebx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call [ eax + 0xb0 ]
test eax eax
je r-xdata
push edi
mov edi [ SendMessageA@IAT ]
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_422fb4
mov ecx esi
call sub_422d9d
push ebx
mov esi eax
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_422fb4
call [ GetCapture@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x8c ]
push [ esi + 0x1c ]
call [ WinHelpA@IAT ]
test eax eax
pop edi
jne r-xdata
push ebx
push ebx
push 0x1f
push eax
call edi
or [ ebp - 0x4 ] 0xffffffff
call sub_439511
mov ecx [ eax + 0x4 ]
call sub_42599e
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push 0xffffffff
push ebx
push 0xf107
call sub_430dd8
sub_4225d6
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebx ]
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
add ebx 0x18
jmp r-xdata
cmp ecx [ ebx + 0x8 ]
jb r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp ecx [ ebx + 0xc ]
ja r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0x10
sub_42262b
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push ecx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x9c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xa0 ]
mov [ ebp - 0x4 ] eax
sub_42266f
mov eax sub_43dac0
call sub_408db8
sub esp 0x54
and [ ebp - 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
cmp ebx 0x111
mov edi ecx
jne r-xdata
cmp ebx 0x4e
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ edi ]
push [ ebp + 0xc ]
call [ eax + 0x78 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp ebx 0x6
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp ebx 0x20
jne r-xdata
push esi
call sub_42166a
push eax
push [ ebp + 0xc ]
push edi
call sub_4213d2
mov edx [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0xc ]
mov ecx edi
call [ edx + 0x7c ]
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ebx eax
mov eax 0x1ff
and ebx eax
and ecx eax
push 0x7
xor ebx ecx
call sub_43a141
mov ecx [ ebp + 0x8 ]
lea eax [ ebx + ebx * 2 ]
cmp ecx [ eax * 4 + rw-data ]
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
jne r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push edi
call sub_421433
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
mov [ ebx ] ecx
mov [ ebx + 0x8 ] eax
je r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
and [ ebx + 0x4 ] 0x0
push 0x7
call sub_43a1b1
jmp r-xdata
mov ebx [ ebx + 0x4 ]
push 0x7
mov [ ebp + 0x10 ] ebx
call sub_43a1b1
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov edx 0xc000
cmp ecx edx
jae r-xdata
cmp [ ebp + 0x8 ] 0xc000
jb r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push 0x0
push edx
push eax
call sub_4225d6
test eax eax
mov [ ebp + 0x10 ] eax
je r-xdata
push 0x0
push 0x0
push ecx
push [ eax + 0x4 ]
call sub_4225d6
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx + 0x14 ]
cmp [ ecx + 0x8 ] 0x1a
mov eax [ ecx + 0x10 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x14 ] eax
jne r-xdata
jmp r-xdata
push 0x7
mov [ ebx + 0x4 ] eax
call sub_43a1b1
mov ebx [ ebp + 0x10 ]
jmp r-xdata
dec eax
cmp eax 0x30
ja r-xdata
call [ GetVersion@IAT ]
mov ecx [ ebp + 0x10 ]
cmp al 0x4
sbb eax eax
and al 0xf0
add eax 0x2f
mov ebx [ ebx + 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
cmp [ ecx ] edx
je r-xdata
jmp [ eax * 4 + jump_table_422b1d ]
push 0x7
mov [ ebx + 0x4 ] eax
call sub_43a1b1
mov ebx [ ebp + 0x10 ]
push 0x0
push 0x0
add eax 0x18
push 0xc000
push eax
call sub_4225d6
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
push [ ebp + 0xc ]
call sub_42d02c
push eax
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push [ ebp + 0xc ]
call sub_42166a
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_42166a
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_42cf8a
mov eax [ esi + 0x4 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x20 ] eax
call sub_421249
mov eax [ esi ]
mov esi [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x44 ] eax
call sub_421691
test eax eax
jne r-xdata
lea ecx [ ebp - 0x24 ]
call sub_42cf8a
mov eax [ esi + 0x4 ]
push [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call ebx
and [ ebp - 0x20 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_42166a
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push esi
push esi
call sub_4274b5
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
movsx eax ax
push eax
movsx eax si
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
push [ ebp + 0xc ]
call sub_42166a
push eax
push esi
call sub_42166a
push eax
xor eax eax
cmp [ edi + 0x1c ] esi
sete al
push [ ebp + 0xc ]
call sub_42d02c
push [ ebp + 0xc ]
call sub_4274b5
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push eax
push [ ebp + 0xc ]
call sub_4274b5
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
push esi
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
push [ ebp + 0xc ]
call sub_42166a
jmp r-xdata
push esi
call sub_42166a
push eax
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_42166a
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx edx ax
shr eax 0x10
cmp [ ecx + 0x10 ] 0x1d
mov [ ebp + 0x8 ] edx
movsx eax ax
mov [ ebp + 0xc ] eax
jne r-xdata
push esi
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
mov ecx edi
call ebx
jmp r-xdata
push esi
mov eax [ ebp + 0xc ]
push esi
shr eax 0x10
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
mov ecx edi
push [ ebp + 0xc ]
call ebx
movzx eax si
shr esi 0x10
push esi
push eax
mov eax [ ebp + 0xc ]
mov ecx edi
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
call ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
push esi
push [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov ecx edi
call ebx
jmp r-xdata
push eax
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
call ebx
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
call sub_421d24
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
jmp r-xdata
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
push eax
movzx eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push eax
jmp r-xdata
call sub_42166a
jmp r-xdata
push eax
push [ ebp + 0xc ]
call sub_42166a
jmp r-xdata
push eax
jmp r-xdata
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push eax
push edx
jmp r-xdata
push esi
call sub_42166a
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
mov ecx edi
call ebx
test eax eax
jne r-xdata
call sub_42d0bf
jmp r-xdata
lea eax [ ebp - 0x60 ]
push [ ebp - 0x44 ]
lea ecx [ eax + 0x20 ]
call sub_41fb00
test eax eax
je r-xdata
mov [ ebp - 0x28 ] eax
sub_422c14
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx edi ax
xor ebx ebx
mov esi ecx
shr eax 0x10
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
jne r-xdata
push sub_43860d
mov ecx rw-data
call sub_439bd8
mov eax [ eax + 0xb8 ]
cmp eax [ esi + 0x1c ]
je r-xdata
cmp edi ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
push ebx
push [ ebp + 0xc ]
call sub_4235eb
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_422be1
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
push 0xffffffff
push edi
mov ecx esi
mov [ ebp - 0x28 ] edi
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp edi ebx
jne r-xdata
mov [ ebp + 0x8 ] ebx
mov eax [ esi ]
push ebx
push ebx
mov ecx esi
push [ ebp + 0x8 ]
push edi
call [ eax + 0xc ]
sub_422ca0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov ebx [ esi ]
push ebx
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
push sub_43860d
mov ecx rw-data
mov [ ebp + 0xc ] eax
call sub_439bd8
mov eax [ eax + 0xb8 ]
cmp eax [ edi + 0x1c ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
push [ ebp + 0x10 ]
push ebx
call sub_4235eb
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xc ]
push 0x0
push ecx
movzx ecx [ ebp + 0xc ]
or ecx 0x4e0000
mov [ ebp - 0xc ] eax
mov eax [ edi ]
push ecx
push [ ebp - 0x4 ]
mov ecx edi
mov [ ebp - 0x8 ] esi
call [ eax + 0xc ]
sub_422d1a
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov edi [ GetParent@IAT ]
push eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
push [ esi + 0x1c ]
jmp r-xdata
pop edi
pop esi
retn
call edi
push eax
call sub_42166a
mov esi eax
test esi esi
je r-xdata
sub_422d58
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_421691
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
mov ecx eax
call sub_408019
test eax eax
je r-xdata
push 0x4
push esi
call [ GetWindow@IAT ]
push esi
call [ GetParent@IAT ]
jmp r-xdata
pop esi
retn 0x4
mov eax [ eax + 0x1c ]
jmp r-xdata
sub_422d9d
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
push esi
mov esi eax
push esi
push esi
call sub_42166a
pop esi
retn
mov esi eax
push eax
jmp r-xdata
call sub_422d58
test eax eax
je r-xdata
sub_422dc5
test ecx ecx
push edi
je r-xdata
xor eax eax
pop edi
retn
mov edi [ ecx + 0x1c ]
test edi edi
jne r-xdata
push esi
mov esi [ GetWindow@IAT ]
push 0x4
push edi
push edi
call sub_42166a
pop esi
pop edi
retn
push 0x4
mov edi eax
push eax
jmp r-xdata
call esi
test eax eax
je r-xdata
sub_422df5
test ecx ecx
push esi
je r-xdata
xor eax eax
pop esi
retn
mov esi [ ecx + 0x1c ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ GetWindowLongA@IAT ]
push 0xfffffff0
push esi
call edi
mov ebx 0x40000000
push esi
call sub_42166a
pop edi
pop ebx
pop esi
retn
push esi
call [ GetParent@IAT ]
test eax eax
je r-xdata
push 0xfffffff0
push eax
mov esi eax
call edi
jmp r-xdata
test ebx eax
je r-xdata
sub_422e39
push esi
push edi
mov esi ecx
call [ GetForegroundWindow@IAT ]
push eax
call sub_42166a
mov ecx esi
mov edi eax
call sub_422d9d
push [ eax + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_42166a
xor ecx ecx
cmp edi eax
sete cl
pop edi
mov eax ecx
pop esi
retn
sub_422e6d
push esi
push edi
mov esi ecx
call sub_422d9d
mov edi eax
call [ GetForegroundWindow@IAT ]
push eax
call sub_42166a
test eax eax
je r-xdata
push [ edi + 0x1c ]
call [ SetForegroundWindow@IAT ]
mov eax [ eax + 0x1c ]
mov ecx [ esi + 0x1c ]
cmp eax ecx
je r-xdata
pop edi
pop esi
retn
push ecx
push eax
call [ IsChild@IAT ]
test eax eax
jne r-xdata
sub_422eaa
push esi
mov esi ecx
test esi esi
je r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov ecx esi
call sub_422d1a
mov esi eax
mov eax esi
pop esi
retn
mov ecx esi
mov esi eax
mov ecx eax
jmp r-xdata
call sub_422d1a
test eax eax
je r-xdata
sub_422f09
mov eax [ esp + 0x8 ]
push esi
test eax eax
mov esi ecx
jne r-xdata
test esi esi
jne r-xdata
call sub_439511
mov eax [ eax + 0x10 ]
mov ecx [ esi + 0x1c ]
xor ecx ecx
jmp r-xdata
push [ esp + 0x10 ]
push eax
push [ esp + 0x10 ]
push ecx
call [ MessageBoxA@IAT ]
pop esi
retn 0xc
sub_422f3b
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov edi [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call edi
push esi
call edi
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_422f3b
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_422f3b
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
call sub_421691
test eax eax
jne r-xdata
call sub_42166a
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
sub_422fb4
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi [ GetTopWindow@IAT ]
call edi
pop edi
pop esi
pop ebp
retn 0x18
cmp [ ebp + 0x1c ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ SendMessageA@IAT ]
push esi
call sub_421691
test eax eax
je r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push eax
call sub_4214a9
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_422fb4
sub_423036
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x68 ]
push [ ebp + 0x10 ]
test eax eax
push [ ebp + 0xc ]
je r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push 0x2
push [ eax + 0x1c ]
jmp r-xdata
call [ SetScrollPos@IAT ]
pop esi
pop ebp
retn 0xc
sub_423066
push esi
mov esi ecx
push [ esp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x68 ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
push 0x2
push [ eax + 0x1c ]
jmp r-xdata
call [ GetScrollPos@IAT ]
pop esi
retn 0x4
sub_42308e
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x68 ]
push [ ebp + 0x14 ]
test eax eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
je r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push 0x2
push [ eax + 0x1c ]
jmp r-xdata
call [ SetScrollRange@IAT ]
pop esi
pop ebp
retn 0x10
sub_4230c1
push ebp
mov ebp esp
push esi
mov esi ecx
push [ ebp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x68 ]
push [ ebp + 0x10 ]
test eax eax
push [ ebp + 0xc ]
je r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push 0x2
push [ eax + 0x1c ]
jmp r-xdata
call [ GetScrollRange@IAT ]
pop esi
pop ebp
retn 0xc
sub_4230f1
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0x3
jne r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x68 ]
push [ esp + 0x10 ]
test eax eax
je r-xdata
push [ esp + 0x10 ]
push 0x0
call sub_4230f1
push 0x1
pop edi
push edi
push [ esi + 0x1c ]
call [ ShowScrollBar@IAT ]
mov ecx eax
call sub_425583
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_423134
cmp [ rw-data ] 0x333
jae r-xdata
push esi
mov esi [ ecx + 0x1c ]
push edi
mov edi [ esp + 0xc ]
cmp edi 0x2
je r-xdata
xor eax eax
jmp r-xdata
push [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push eax
push edi
push esi
mov [ eax ] 0x1c
call [ SetScrollInfo@IAT ]
push 0x1
pop eax
pop edi
pop esi
mov eax [ ecx ]
push edi
call [ eax + 0x68 ]
test eax eax
je r-xdata
retn 0xc
mov esi [ eax + 0x1c ]
push 0x2
pop edi
sub_423181
cmp [ rw-data ] 0x333
jae r-xdata
push esi
mov esi [ ecx + 0x1c ]
push edi
mov edi [ esp + 0xc ]
cmp edi 0x2
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push eax
push edi
push esi
mov [ eax ] 0x1c
mov [ eax + 0x4 ] ecx
call [ GetScrollInfo@IAT ]
pop edi
pop esi
mov eax [ ecx ]
push edi
call [ eax + 0x68 ]
test eax eax
je r-xdata
retn 0xc
mov esi [ eax + 0x1c ]
push 0x2
pop edi
sub_4231ce
push ebp
mov ebp esp
sub esp 0x24
lea eax [ ebp - 0x4 ]
push esi
push eax
lea eax [ ebp - 0x8 ]
push eax
mov esi ecx
push [ ebp + 0x8 ]
call sub_4230c1
lea eax [ ebp - 0x24 ]
push 0x2
push eax
mov ecx esi
push [ ebp + 0x8 ]
call sub_423181
test eax eax
pop esi
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x4
mov eax [ ebp - 0x14 ]
xor edx edx
lea ecx [ eax - 0x1 ]
dec eax
cmp edx ecx
sbb ecx ecx
and ecx eax
sub [ ebp - 0x4 ] ecx
sub_423215
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push edi
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ ScrollWindow@IAT ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
push [ ebp + 0xc ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0x58 ]
mov ebx [ GetWindow@IAT ]
push 0x5
push [ esi + 0x1c ]
mov esi [ esi + 0x34 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edi
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_42da8e
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
xor eax eax
push 0x15
push eax
add ecx edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
mov ecx [ ebp - 0x10 ]
add ecx edx
push ecx
push eax
push edi
call [ SetWindowPos@IAT ]
push 0x2
push edi
jmp r-xdata
call ebx
mov edi eax
test edi edi
je r-xdata
sub_4232bb
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x1c ]
mov ebx ecx
mov ecx [ ebp + 0x20 ]
xor eax eax
cmp esi eax
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebx + 0x1c ]
call [ GetClientRect@IAT ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
push 0x8
call [ BeginDeferWindowPos@IAT ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp [ ebp + 0x14 ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
push esi
call [ GetDlgCtrlID@IAT ]
push esi
movzx edi ax
call sub_421691
cmp edi [ ebp + 0x10 ]
jne r-xdata
push [ ebx + 0x1c ]
call [ GetTopWindow@IAT ]
mov esi eax
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp edi [ ebp + 0x8 ]
jb r-xdata
mov [ ebp - 0x4 ] esi
jmp r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0xc ] ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x18 ]
call [ CopyRect@IAT ]
jmp r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
mov esi eax
jmp r-xdata
cmp edi [ ebp + 0xc ]
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
push [ ebp - 0x24 ]
call [ EndDeferWindowPos@IAT ]
push [ ebp - 0x4 ]
call sub_42166a
cmp [ ebp + 0x14 ] 0x2
jne r-xdata
cmp esi ebx
je r-xdata
cmp eax ebx
je r-xdata
mov edx [ eax ]
lea ecx [ ebp - 0x20 ]
push ebx
push ecx
mov ecx eax
call [ edx + 0x60 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
push [ ebp - 0x4 ]
push eax
call sub_4233f5
mov edx [ ebp + 0x18 ]
mov ecx [ edx ]
add [ ebp - 0x20 ] ecx
mov ecx [ edx + 0x4 ]
add [ ebp - 0x1c ] ecx
mov ecx [ edx + 0x8 ]
sub [ ebp - 0x18 ] ecx
mov ecx [ edx + 0xc ]
sub [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x24 ]
push eax
push ebx
push 0x361
push esi
call [ SendMessageA@IAT ]
sub_4233f5
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push ebx
call [ GetParent@IAT ]
mov edi [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
test edi edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
call [ GetWindowRect@IAT ]
mov esi [ ScreenToClient@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
call esi
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push esi
push eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ esi + 0xc ]
push 0x14
test edi edi
je r-xdata
sub edx eax
push edx
mov edx [ esi + 0x8 ]
sub edx ecx
push edx
push eax
push ecx
push 0x0
push ebx
call [ SetWindowPos@IAT ]
sub edx eax
push edx
mov edx [ esi + 0x8 ]
sub edx ecx
push edx
push eax
push ecx
push 0x0
push ebx
push [ edi ]
call [ DeferWindowPos@IAT ]
mov [ edi ] eax
jmp r-xdata
sub_42348f
push esi
mov esi ecx
call sub_425380
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
push 0x0
mov ecx esi
call sub_425366
push eax
push [ esp + 0x14 ]
call [ AdjustWindowRectEx@IAT ]
pop esi
retn 0x8
and ah 0xfd
sub_4234ba
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
call sub_422d9d
mov ecx [ ebp + 0x8 ]
mov esi eax
and ecx 0xfff0
mov eax ecx
sub eax 0xf040
je r-xdata
cmp [ ebp + 0xc ] 0x75
jne r-xdata
sub eax 0x10
je r-xdata
xor eax eax
test esi esi
je r-xdata
sub eax 0x10
je r-xdata
mov ecx esi
call sub_4255aa
jmp r-xdata
cmp ecx 0xf060
je r-xdata
sub eax 0xa0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
leave
retn 0x8
push ebx
mov ebx [ edi + 0x1c ]
call [ GetFocus@IAT ]
push [ esi + 0x1c ]
mov edi [ SetActiveWindow@IAT ]
mov [ ebp - 0x4 ] eax
call edi
push eax
call sub_42166a
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x112
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
mov esi [ IsWindow@IAT ]
push ebx
call esi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call esi
test eax eax
pop ebx
je r-xdata
push ebx
call edi
push [ ebp - 0x4 ]
call [ SetFocus@IAT ]
sub_42357c
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi [ edi ]
xor eax eax
push esi
call sub_421691
test eax eax
je r-xdata
cmp esi [ esp + 0xc ]
je r-xdata
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x90 ]
test eax eax
jne r-xdata
push esi
call [ GetParent@IAT ]
mov esi eax
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x8
sub_4235be
push esi
mov esi ecx
push sub_43860d
mov ecx rw-data
call sub_439bd8
push [ esp + 0x8 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x40 ]
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa8 ]
pop esi
retn 0x4
sub_4235eb
mov eax sub_43dad4
call sub_408db8
sub esp 0x3c
push esi
push edi
push 0x0
call sub_4215f8
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ eax + 0x4 ]
push edi
mov ecx esi
call sub_41fb00
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push [ ebp + 0xc ]
mov ecx eax
call sub_4235be
push edi
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_41fb00
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
push edi
lea ecx [ eax + 0x20 ]
call sub_41fb00
mov esi eax
test esi esi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
call sub_421287
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] esi
call sub_4235be
and [ ebp - 0x2c ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x48 ]
mov esi eax
call sub_421d24
mov eax esi
jmp r-xdata
sub_42368f
push ebp
mov ebp esp
cmp [ ecx + 0x38 ] 0x0
push esi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4236ea
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x2000 ]
push eax
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
cmp esi 0x132
jb r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
cmp esi 0x138
ja r-xdata
push 0x1
pop eax
jmp r-xdata
mov [ ecx ] eax
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x10
sub_4236ea
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov edx 0x111
cmp eax edx
push esi
ja r-xdata
cmp eax 0x114
jb r-xdata
je r-xdata
cmp eax 0x132
jb r-xdata
cmp eax 0x115
jbe r-xdata
mov eax [ ebp + 0xc ]
xor esi esi
shr eax 0x10
push esi
or eax 0xbd110000
push esi
push eax
push esi
call sub_425861
test eax eax
je r-xdata
cmp eax 0x2b
jb r-xdata
xor eax eax
cmp eax 0x138
ja r-xdata
push [ ebp + 0x14 ]
add eax 0xbc00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_42266f
jmp r-xdata
cmp eax 0x210
jne r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
cmp ecx esi
pop eax
je r-xdata
cmp eax 0x2f
jbe r-xdata
mov edx [ ebp + 0xc ]
add eax 0xfffffece
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push edi
xor esi esi
push eax
push esi
push 0xbc19
mov [ ebp - 0x8 ] edx
call sub_42266f
cmp [ edi ] esi
pop edi
jne r-xdata
pop esi
leave
retn 0x10
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x39
je r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov edx [ eax + 0x8 ]
xor esi esi
lea eax [ ebp - 0x8 ]
push esi
push eax
movzx eax dx
or eax 0xbc4e0000
push eax
push esi
call sub_425861
jmp r-xdata
sub_4237d2
cmp [ esp + 0x4 ] 0x1
push esi
mov esi ecx
je r-xdata
push 0x0
push [ esp + 0x10 ]
call sub_4235eb
test eax eax
jne r-xdata
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_4215d1
sub_423821
push esi
mov esi ecx
call sub_439511
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_439511
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
mov ecx esi
call sub_425366
test eax 0x40000000
jne r-xdata
call sub_426ac9
test eax eax
je r-xdata
mov ecx rw-data
call sub_427932
mov ecx esi
call sub_4215d1
pop esi
retn
push 0x1
push 0x1
push 0x0
push 0x0
push 0x15
push [ esi + 0x1c ]
call sub_422fb4
call sub_426ac9
cmp [ eax + 0x1c ] esi
jne r-xdata
push sub_438672
mov ecx rw-data
call sub_439c9a
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
call eax
sub_42389e
push esi
push edi
mov edi ecx
call sub_439511
cmp [ eax + 0x14 ] 0x0
jne r-xdata
and [ rw-data ] 0x0
push 0x0
push 0x0
mov ecx edi
call sub_4239ec
pop edi
pop esi
retn 0x8
push sub_438672
mov ecx rw-data
call sub_439c9a
mov esi eax
call sub_426ac9
test eax eax
je r-xdata
call sub_426ac9
cmp [ eax + 0x1c ] edi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
call eax
sub_4238f1
push esi
push edi
mov edi ecx
call sub_439511
cmp [ eax + 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x0
mov ecx edi
call sub_4239ec
pop edi
pop esi
retn 0x4
push sub_438672
mov ecx rw-data
call sub_439c9a
mov esi eax
call sub_426ac9
test eax eax
je r-xdata
call sub_426ac9
cmp [ eax + 0x1c ] edi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
call eax
sub_42393d
push esi
mov esi ecx
call sub_439511
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_425366
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
pop esi
retn 0x4
call sub_42159c
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_422fb4
push [ esp + 0x8 ]
mov ecx eax
call sub_4268ee
sub_423988
push ebx
push esi
push edi
mov ebx ecx
call sub_425366
test eax 0x40000000
jne r-xdata
mov ecx ebx
call sub_4215d1
call sub_408030
mov esi eax
test esi esi
je r-xdata
mov edi [ GetKeyState@IAT ]
push 0x10
call edi
test ax ax
jl r-xdata
push 0x11
call edi
test ax ax
jl r-xdata
push 0x12
call edi
test ax ax
jl r-xdata
push 0x0
push 0xe146
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_4239ec
push esi
mov esi ecx
call sub_408030
cmp eax esi
jne r-xdata
mov ecx esi
call sub_425366
test eax 0x40000000
jne r-xdata
mov ecx rw-data
call sub_427976
mov ecx esi
call sub_4215d1
pop esi
retn 0x8
call sub_42159c
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_422fb4
sub_423a35
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x4 ]
call sub_4235eb
test eax eax
je r-xdata
mov ecx esi
call sub_4215d1
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_423a5f
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4215d1
push 0x0
call sub_4235be
test eax eax
jne r-xdata
pop esi
retn 0xc
sub_423a80
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4215d1
push 0x0
call sub_4235be
test eax eax
jne r-xdata
pop esi
retn 0xc
sub_423aa1
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ PeekMessageA@IAT ]
mov esi 0x121
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
mov ebx ecx
push eax
mov ecx ebx
call sub_4215d1
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
push eax
jmp r-xdata
call edi
test eax eax
je r-xdata
sub_423aeb
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
call sub_4235be
test eax eax
je r-xdata
mov ecx esi
call sub_4215d1
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_423b12
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
call sub_4235be
test eax eax
je r-xdata
push sub_438641
mov ecx rw-data
call sub_439c9a
test edi edi
mov esi eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
push [ esi + 0x4 ]
push [ ebp + 0x10 ]
push edi
push [ eax + 0x4 ]
call sub_423b75
test eax eax
jne r-xdata
mov edi [ edi + 0x1c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
mov ecx ebx
call sub_4215d1
jmp r-xdata
sub_423b75
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
je r-xdata
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xc
push [ ebp + 0x14 ]
call [ GetObjectA@IAT ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ SetBkColor@IAT ]
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
push eax
push [ ebp + 0xc ]
call sub_42e60e
test eax eax
je r-xdata
push eax
push [ ebp + 0x8 ]
call [ SetTextColor@IAT ]
push 0x1
pop eax
jmp r-xdata
push 0x8
call [ GetSysColor@IAT ]
leave
retn 0x14
sub_423bf2
mov eax sub_43dae0
call sub_408db8
sub esp 0x24
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_423c94
call sub_439281
mov edi eax
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] edi
mov ecx [ edi + 0xb8 ]
lea eax [ edi + 0xb8 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ esi + 0x1c ]
mov [ eax ] ecx
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call [ eax + 0x84 ]
mov [ ebp + 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ edi + 0xb8 ] eax
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_423caa
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_425366
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp - 0x1 ] 0x40
je r-xdata
mov edi [ eax + 0x1c ]
jmp r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push [ esi + 0x1c ]
call [ GetParent@IAT ]
jmp r-xdata
mov ebx [ GetWindowRect@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push [ esi + 0x1c ]
call ebx
test [ ebp - 0x1 ] 0x40
jne r-xdata
push 0x0
push 0x0
push 0x36b
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
mov esi [ GetClientRect@IAT ]
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call esi
lea eax [ ebp - 0x38 ]
push eax
push edi
call esi
lea eax [ ebp - 0x38 ]
push 0x2
push eax
push ebx
push edi
call [ MapWindowPoints@IAT ]
test edi edi
je r-xdata
mov edi eax
mov eax [ ebp - 0x10 ]
add edi ecx
cmp edi eax
jle r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
test edi edi
mov [ ebp - 0x60 ] 0x28
jne r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
cmp esi [ ebp - 0x14 ]
jge r-xdata
sub eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
mov ecx eax
lea eax [ ebp - 0x38 ]
push eax
push edi
call ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x2
push edi
call sub_407e2a
push eax
call sub_407e95
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ CopyRect@IAT ]
jmp r-xdata
call sub_408030
test eax eax
je r-xdata
xor edi edi
test eax 0x20000000
je r-xdata
add ebx esi
cmp ebx [ ebp - 0xc ]
jle r-xdata
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x30 ]
mov edi [ ebp - 0x20 ]
add eax ecx
sub edi [ ebp - 0x28 ]
mov ebx [ ebp - 0x1c ]
cdq
sub eax edx
sub ebx [ ebp - 0x24 ]
mov ecx eax
mov eax edi
cdq
sub eax edx
mov edx [ ebp - 0x2c ]
sar ecx 0x1
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x34 ]
add eax edx
cdq
sub eax edx
mov esi eax
mov eax ebx
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
cmp ecx [ ebp - 0x18 ]
jge r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x1
push eax
call sub_407e2a
push eax
call sub_407e95
mov esi [ CopyRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
mov eax [ eax + 0x1c ]
push 0x15
push 0xffffffff
push 0xffffffff
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push 0x0
call sub_4254f2
pop edi
pop esi
pop ebx
leave
retn 0x4
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x1c ]
add esi [ ebp - 0xc ]
sub_423e63
push ebx
push esi
push edi
xor edi edi
cmp [ esp + 0x10 ] edi
mov ebx ecx
je r-xdata
push edi
mov ecx ebx
call sub_423eb3
call sub_439511
mov esi [ eax + 0xc ]
push 0xf0
push [ esp + 0x14 ]
push esi
call [ FindResourceA@IAT ]
cmp eax edi
je r-xdata
push eax
push esi
call [ LoadResource@IAT ]
cmp eax edi
jne r-xdata
push eax
call [ LockResource@IAT ]
mov edi eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_423eb3
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push 0x364
push [ ebx + 0x1c ]
call sub_422fb4
push edi
mov edi [ SendDlgItemMessageA@IAT ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
inc esi
inc esi
mov ax [ esi ]
inc esi
inc esi
mov edx [ esi ]
add esi 0x4
cmp ax 0x1234
mov [ ebp + 0x8 ] edx
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
leave
retn 0x4
or [ ebp - 0x24 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x20 ] esi
push 0x401
jmp r-xdata
cmp ax 0x401
jne r-xdata
movzx eax cx
push eax
push [ ebx + 0x1c ]
call edi
cmp eax 0xffffffff
jne r-xdata
cmp ax 0x403
jne r-xdata
mov eax 0x180
jmp r-xdata
add esi [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp ax 0x401
jne r-xdata
mov eax 0x143
movzx eax ax
push esi
push 0x0
push eax
mov cx [ esi ]
test cx cx
je r-xdata
cmp ax 0x180
je r-xdata
cmp ax 0x143
jne r-xdata
sub_423f85
mov eax sub_43daf4
call sub_408db8
sub esp 0x68
push esi
mov esi ecx
push edi
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x10 ] esi
call sub_425a3b
lea ecx [ ebp - 0x74 ]
call sub_421249
push [ esi + 0x1c ]
xor edi edi
mov [ ebp - 0x4 ] edi
call [ GetTopWindow@IAT ]
mov esi eax
cmp esi edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x58 ] edi
call sub_421d24
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push ebx
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
push edi
push eax
push 0xffffffff
push [ ebp - 0x34 ]
call sub_425861
test eax eax
jne r-xdata
lea ecx [ ebp - 0x38 ]
push edi
push ecx
push 0xbd11ffff
push edi
mov ecx eax
call sub_425861
test eax eax
jne r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
mov ebx [ ebp + 0xc ]
cmp ebx edi
je r-xdata
push esi
mov [ ebp - 0x58 ] esi
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x74 ]
push esi
mov [ ebp - 0x24 ] eax
call sub_421691
cmp eax edi
je r-xdata
pop ebx
push ebx
lea ecx [ ebp - 0x38 ]
push [ ebp + 0x8 ]
call sub_425c00
push edi
push edi
push 0x87
push [ ebp - 0x58 ]
call [ SendMessageA@IAT ]
test ah 0x20
je r-xdata
xor ebx ebx
lea ecx [ ebp - 0x74 ]
call sub_425366
and eax 0xf
cmp eax 0x3
je r-xdata
cmp eax 0x6
je r-xdata
cmp eax 0x7
je r-xdata
cmp eax 0x9
jne r-xdata
sub_42408a
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
cmp eax 0x200
jb r-xdata
cmp eax 0x108
jbe r-xdata
xor eax eax
cmp eax 0x209
ja r-xdata
push edx
call sub_425333
jmp r-xdata
retn 0x4
sub_4240ba
sub esp 0x10
push ebx
push ebp
push esi
push edi
push 0x1
xor edi edi
test [ esp + 0x28 ] 0x4
pop ebx
mov esi ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] edi
je r-xdata
mov [ esp + 0x10 ] edi
call sub_425366
test eax 0x10000000
mov [ esp + 0x10 ] ebx
je r-xdata
call sub_426ac9
mov edx [ eax ]
mov ecx eax
call [ edx + 0x5c ]
test eax eax
je r-xdata
push edi
push edi
push edi
push edi
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
or [ esi + 0x24 ] 0x18
mov [ esp + 0x1c ] eax
call sub_426ac9
mov ebx [ UpdateWindow@IAT ]
mov ebp eax
add ebp 0x30
push edi
call sub_43c0d3
or eax 0xffffffff
jmp r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x70 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
cmp eax 0x118
je r-xdata
test [ esp + 0x24 ] 0x1
jne r-xdata
push 0x1
mov ecx esi
call sub_425541
push [ esi + 0x1c ]
call ebx
mov [ esp + 0x10 ] edi
and [ esi + 0x24 ] 0xffffffe7
mov eax [ esi + 0x2c ]
call sub_426ac9
mov edx [ eax ]
push ebp
mov ecx eax
call [ edx + 0x64 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_425541
push [ esi + 0x1c ]
call ebx
mov [ esp + 0x10 ] edi
cmp eax 0x104
jne r-xdata
test [ esp + 0x24 ] 0x2
jne r-xdata
cmp [ esp + 0x1c ] edi
je r-xdata
push edi
push edi
push edi
push edi
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
jmp r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x14 ]
push eax
push edi
push 0x36a
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ esp + 0x14 ] edi
jne r-xdata
jmp r-xdata
cmp [ esp + 0x18 ] edi
je r-xdata
push [ esi + 0x1c ]
push edi
push 0x121
push [ esp + 0x28 ]
call [ SendMessageA@IAT ]
sub_424220
mov eax [ esp + 0x4 ]
mov [ ecx + 0x2c ] eax
mov eax [ ecx + 0x24 ]
test al 0x10
je r-xdata
retn 0x4
and al 0xef
mov [ ecx + 0x24 ] eax
xor eax eax
push eax
push eax
push eax
push [ ecx + 0x1c ]
call [ PostMessageA@IAT ]
sub_424249
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov [ esi + 0x24 ] eax
call sub_439511
movzx ecx [ esp + 0x14 ]
mov eax [ eax + 0xc ]
mov edi [ LoadIconA@IAT ]
push ecx
push eax
call edi
test eax eax
mov [ esi + 0x14 ] eax
jne r-xdata
push esi
call sub_422353
pop edi
pop esi
retn 0xc
push 0x7f00
push eax
call edi
mov [ esi + 0x14 ] eax
sub_42428a
push ebx
push esi
mov esi r--data
push edi
push esi
call [ GetModuleHandleA@IAT ]
push esi
mov edi eax
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push r--data
push ebx
xor esi esi
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x10 ]
call eax
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edi 0x3fc0
and eax edi
cmp eax [ esp + 0x14 ]
jne r-xdata
push ebx
call [ FreeLibrary@IAT ]
mov eax esi
mov esi [ esp + 0x14 ]
test edi edi
jne r-xdata
call [ InitCommonControls@IAT ]
mov esi edi
jmp r-xdata
call [ InitCommonControls@IAT ]
or si 0x3fc0
sub_424301
push ebp
mov ebp esp
sub esp 0x34
call sub_439511
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x18 ]
not eax
and [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
xor edi edi
push 0x28
lea eax [ ebp - 0x34 ]
push edi
push eax
xor esi esi
call sub_408d60
mov eax [ DefWindowProcA@IAT ]
add esp 0xc
mov [ ebp - 0x30 ] eax
call sub_439511
mov eax [ eax + 0x8 ]
push 0x8
test [ ebp + 0x8 ] 0x1
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
pop ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] 0xb
push eax
mov [ ebp - 0x10 ] r--data
call sub_422353
test eax eax
je r-xdata
leave
retn 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
or [ ebp - 0x34 ] 0x8b
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_422353
test eax eax
je r-xdata
push 0x1
pop esi
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] edi
push eax
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x18 ] 0x10
call sub_422353
test eax eax
je r-xdata
or esi 0x20
test [ ebp + 0x8 ] bl
je r-xdata
push 0x7a01
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] edi
call sub_424249
test eax eax
je r-xdata
or esi 0x2
test [ ebp + 0x8 ] 0x10
je r-xdata
push 0x7a02
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x18 ] 0x6
call sub_424249
test eax eax
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x40
je r-xdata
lea eax [ ebp - 0xc ]
push 0x3fc0
push eax
mov [ ebp - 0x8 ] 0xff
call sub_42428a
or esi eax
and [ ebp + 0x8 ] 0xc03f
or esi ebx
test [ ebp + 0x8 ] 0x80
je r-xdata
lea eax [ ebp - 0xc ]
push 0x40
push eax
mov [ ebp - 0x8 ] 0x10
call sub_42428a
or esi eax
mov eax 0x100
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push 0x80
push eax
mov [ ebp - 0x8 ] 0x2
call sub_42428a
or esi eax
mov eax 0x200
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_42428a
or esi eax
mov ebx 0x400
test [ ebp + 0x8 ] ebx
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x20
call sub_42428a
or esi eax
mov edi 0x800
test [ ebp + 0x8 ] edi
je r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
mov [ ebp - 0x8 ] 0x1
call sub_42428a
or esi eax
mov eax 0x1000
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push edi
push eax
mov [ ebp - 0x8 ] 0x40
call sub_42428a
or esi eax
mov eax 0x2000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x4
call sub_42428a
or esi eax
mov eax 0x4000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x80
call sub_42428a
or esi eax
mov eax 0x8000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_42428a
or esi eax
mov eax 0x10000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_42428a
or esi eax
mov eax 0x20000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x200
call sub_42428a
or esi eax
mov ecx [ ebp - 0x4 ]
mov edx 0x3fc0
or [ ecx + 0x18 ] esi
mov eax [ ecx + 0x18 ]
mov edi eax
and edi edx
cmp edi edx
jne r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x100
call sub_42428a
or esi eax
mov eax esi
pop edi
and eax [ ebp + 0x8 ]
pop esi
pop ebx
sub eax [ ebp + 0x8 ]
neg eax
sbb eax eax
inc eax
or al 0x10
or esi 0x10
mov [ ecx + 0x18 ] eax
sub_4245de
push esi
mov esi ecx
call sub_439511
cmp [ eax + 0x14 ] 0x0
jne r-xdata
xor eax eax
push sub_438672
mov ecx rw-data
call sub_439c9a
cmp [ esp + 0x8 ] 0xffffffff
jne r-xdata
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov eax [ eax + 0x28 ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
call eax
jmp r-xdata
push [ esi + 0x1c ]
call eax
jmp r-xdata
pop esi
retn 0x4
sub_424628
push esi
mov esi ecx
call sub_439511
cmp [ eax + 0x14 ] 0x0
jne r-xdata
xor eax eax
push sub_438672
mov ecx rw-data
call sub_439c9a
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
call eax
jmp r-xdata
pop esi
retn 0x4
sub_42466d
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_4216af
test eax eax
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
mov esi eax
call sub_421746
push eax
push 0xfffffffc
push [ esp + 0x10 ]
call [ SetWindowLongA@IAT ]
cmp [ esi ] 0x0
jne r-xdata
push 0x1
pop eax
mov [ esi ] eax
sub_4246b0
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
push [ esp + 0x10 ]
mov ebx ecx
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
push eax
mov ecx ebx
call sub_42466d
jmp r-xdata
xor eax eax
mov eax [ ecx ]
push [ esp + 0x10 ]
call [ eax + 0x50 ]
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push [ edi + 0x20 ]
mov ecx ebx
call sub_42466d
push [ edi + 0x20 ]
call [ GetParent@IAT ]
cmp [ esi + 0x1c ] eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
push esi
mov ecx ebx
call sub_4256c8
sub_424717
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0x80 ]
mov edi eax
push [ edi ]
push 0xfffffffc
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
and [ edi ] 0x0
mov ecx esi
call sub_4216e8
pop edi
pop esi
retn
sub_424754
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
mov eax [ ecx ]
cmp [ eax - 0xc ] 0x0
jl r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
push [ ecx ]
mov ecx esi
call sub_424b68
mov [ esi ] eax
add eax 0xfffffff4
push eax
call [ InterlockedIncrement@IAT ]
jmp r-xdata
mov eax esi
pop esi
retn 0x4
sub_42484c
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx ecx
test esi esi
jne r-xdata
push edi
push 0x40
pop edi
cmp esi edi
jg r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
jmp r-xdata
mov edi 0x80
cmp esi edi
jg r-xdata
mov ecx rw-data
pop esi
pop ebx
retn 0x4
mov edi 0x100
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
mov [ eax ] 0x1
and [ eax + esi + 0xc ] 0x0
mov [ eax + 0x4 ] esi
add eax 0xc
mov [ ebx ] eax
pop edi
mov edi 0x200
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
call sub_408425
mov [ eax + 0x8 ] edi
jmp r-xdata
lea eax [ esi + 0xd ]
push eax
call sub_4250b0
pop ecx
mov [ eax + 0x8 ] esi
mov ecx rw-data
jmp r-xdata
sub_4248ce
mov eax [ ecx + 0x8 ]
cmp eax 0x40
jne r-xdata
cmp eax 0x80
jne r-xdata
push ecx
mov ecx rw-data
cmp eax 0x100
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
cmp eax 0x200
push ecx
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
call sub_4084b4
retn
call sub_4250d9
pop ecx
retn
mov ecx rw-data
jmp r-xdata
sub_424916
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
mov ecx [ esi ]
sub ecx 0xc
call sub_4248ce
sub_424988
push esi
push edi
mov edi ecx
mov esi [ edi ]
cmp [ esi - 0xc ] 0x1
jle r-xdata
pop edi
pop esi
retn
call sub_424916
push [ esi - 0x8 ]
mov ecx edi
call sub_42484c
mov eax [ esi - 0x8 ]
inc eax
push eax
push esi
push [ edi ]
call sub_408e20
add esp 0xc
sub_4249b6
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
jg r-xdata
mov ecx esi
call sub_424916
push edi
mov ecx esi
call sub_42484c
cmp edi [ eax - 0x4 ]
jle r-xdata
pop edi
pop esi
retn 0x4
sub_4249df
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx [ esi ]
sub ecx 0xc
call sub_4248ce
sub_424a09
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push edi
add eax ebx
mov edi ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_42484c
mov eax [ edi ]
push ebx
add eax [ ebp + 0x10 ]
push eax
push [ esi ]
call sub_408e20
add esp 0xc
pop esi
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ eax ] ecx
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x10
sub_424a4d
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
test ebx ebx
mov [ esi ] eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
mov eax ebx
shr eax 0x10
test ax ax
jne r-xdata
push ebx
call [ lstrlenA@IAT ]
mov edi eax
test edi edi
je r-xdata
movzx eax bx
push eax
call sub_427320
jmp r-xdata
push edi
mov ecx esi
call sub_42484c
push edi
push ebx
push [ esi ]
call sub_408e20
add esp 0xc
sub_424a9f
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
mov [ esi ] eax
je r-xdata
xor eax eax
push ebx
call sub_409155
pop ecx
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn 0x4
push edi
lea edi [ eax + eax ]
push edi
mov ecx esi
call sub_42484c
inc edi
push edi
push ebx
push [ esi ]
call sub_424fd2
add esp 0xc
mov ecx esi
push 0xffffffff
call sub_424e5e
pop edi
test eax eax
je r-xdata
sub_424aeb
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_4249b6
push edi
push [ esp + 0x14 ]
push [ esi ]
call sub_408e20
mov eax [ esi ]
add esp 0xc
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
pop edi
pop esi
retn 0x8
sub_424b18
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov ecx [ esi ]
mov eax [ edi ]
cmp ecx eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
cmp [ ecx - 0xc ] 0x0
jge r-xdata
cmp [ eax - 0xc ] 0x0
jge r-xdata
add ecx 0xfffffff4
cmp ecx [ rw-data ]
jne r-xdata
mov ecx esi
call sub_424916
mov eax [ edi ]
mov [ esi ] eax
add eax 0xfffffff4
push eax
call [ InterlockedIncrement@IAT ]
push eax
mov ecx esi
push [ eax - 0x8 ]
call sub_424aeb
jmp r-xdata
sub_424b68
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_424aeb
mov eax esi
pop edi
pop esi
retn 0x4
sub_424b8f
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
test ebx ebx
mov esi ecx
je r-xdata
xor eax eax
push ebx
call sub_409155
pop ecx
jmp r-xdata
lea edi [ eax + eax ]
mov ecx esi
push edi
call sub_4249b6
inc edi
push edi
push ebx
push [ esi ]
call sub_424fd2
add esp 0xc
mov ecx esi
push 0xffffffff
call sub_424e5e
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
sub_424bd0
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
lea eax [ edi + ebx ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0x10
push eax
call sub_42484c
push edi
push [ esp + 0x18 ]
push [ esi ]
call sub_408e20
mov eax [ esi ]
push ebx
push [ esp + 0x2c ]
add eax edi
push eax
call sub_408e20
add esp 0x18
sub_424c0e
mov eax sub_43dc9b
call sub_408db8
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push 0x1
mov eax [ eax ]
mov ecx [ ecx ]
pop esi
push eax
mov [ ebp - 0x4 ] esi
push [ eax - 0x8 ]
push ecx
push [ ecx - 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_424bd0
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_424754
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_424c74
mov eax sub_43dcc7
call sub_408db8
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x10 ] 0x0
push 0x1
pop esi
mov [ ebp - 0x4 ] esi
jne r-xdata
push [ ebp + 0x10 ]
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov ecx [ ecx ]
push eax
push ecx
push [ ecx - 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_424bd0
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_424754
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_424ce8
mov eax sub_43dcf3
call sub_408db8
push ecx
push ecx
mov eax [ rw-data ]
and [ ebp - 0x14 ] 0x0
push esi
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0xc ] 0x0
push 0x1
pop esi
mov [ ebp - 0x4 ] esi
jne r-xdata
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx ]
push ecx
push [ ecx - 0x8 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_424bd0
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_424754
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_424d5c
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push [ esp + 0x14 ]
mov ecx esi
push edi
push eax
push [ eax - 0x8 ]
call sub_424bd0
push ebx
call sub_424947
mov ecx [ eax - 0x8 ]
lea edx [ ecx + edi ]
cmp edx [ eax - 0x4 ]
jg r-xdata
push edi
add ecx eax
push [ esp + 0x18 ]
push ecx
call sub_408e20
mov eax [ esi ]
add esp 0xc
add [ eax - 0x8 ] edi
mov eax [ esi ]
mov ecx [ eax - 0x8 ]
and [ ecx + eax ] 0x0
jmp r-xdata
sub_424dbb
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_424d5c
mov eax esi
pop edi
pop esi
retn 0x4
sub_424e0f
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push edi
mov edi [ eax - 0x8 ]
cmp ecx edi
jge r-xdata
cmp ecx [ eax - 0x4 ]
jle r-xdata
push ecx
mov ecx esi
call sub_42484c
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0xc ]
push eax
push [ esi ]
call sub_408e20
mov eax [ esi ]
add esp 0xc
push ebx
mov [ eax - 0x8 ] edi
call sub_424947
pop edi
mov ecx edi
mov eax [ esi ]
pop esi
pop ebx
retn 0x4
sub_424e5e
push esi
mov esi ecx
call sub_424988
mov eax [ esp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov [ ecx - 0x8 ] eax
mov ecx [ esi ]
pop esi
and [ ecx + eax ] 0x0
retn 0x4
push [ esi ]
call [ lstrlenA@IAT ]
sub_424e86
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_424e0f
mov eax [ esi ]
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
mov eax [ esi ]
pop edi
pop esi
retn 0x4
sub_424ea6
push edi
mov edi ecx
mov eax [ edi ]
mov ecx [ eax - 0x8 ]
cmp ecx [ eax - 0x4 ]
je r-xdata
pop edi
retn
push esi
push ecx
mov ecx edi
lea esi [ eax - 0xc ]
call sub_42484c
push [ esi + 0x4 ]
lea eax [ esi + 0xc ]
push eax
push [ edi ]
call sub_408e20
add esp 0xc
push esi
call sub_424947
pop esi
sub_424f0e
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp ecx [ eax - 0x8 ]
jge r-xdata
or eax 0xffffffff
jmp r-xdata
add eax ecx
movzx ecx [ esp + 0x8 ]
push ecx
push eax
call sub_409172
pop ecx
test eax eax
pop ecx
jne r-xdata
pop esi
retn 0x8
sub eax [ esi ]
sub_424f3b
push esi
mov esi ecx
push [ esp + 0x8 ]
mov eax [ esi ]
push eax
call sub_409209
pop ecx
test eax eax
pop ecx
jne r-xdata
sub eax [ esi ]
or eax 0xffffffff
jmp r-xdata
pop esi
retn 0x4
sub_424fd2
push ebx
xor ebx ebx
cmp [ esp + 0x10 ] ebx
push esi
mov esi [ esp + 0xc ]
jne r-xdata
push ebx
push ebx
push [ esp + 0x1c ]
push esi
push 0xffffffff
push [ esp + 0x24 ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
jle r-xdata
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
mov [ eax + esi - 0x1 ] bl
xor eax eax
jmp r-xdata
sub_425008
cmp [ esp + 0xc ] 0x0
push esi
mov esi [ esp + 0x8 ]
jne r-xdata
push [ esp + 0x10 ]
push esi
push 0xffffffff
push [ esp + 0x18 ]
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jle r-xdata
test esi esi
je r-xdata
pop esi
retn
and [ esi + eax * 2 - 0x2 ] 0x0
xor eax eax
pop esi
retn
sub_42503d
xor eax eax
cmp [ esp + 0x8 ] eax
je r-xdata
retn 0xc
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0x10 ]
mov [ esi ] ax
push esi
push 0xffffffff
push [ esp + 0x18 ]
push eax
push eax
call [ MultiByteToWideChar@IAT ]
mov eax esi
pop esi
sub_425066
xor eax eax
cmp [ esp + 0x8 ] eax
je r-xdata
retn 0xc
push esi
mov esi [ esp + 0x8 ]
push eax
push eax
push [ esp + 0x18 ]
mov [ esi ] al
push esi
push 0xffffffff
push [ esp + 0x20 ]
push eax
push eax
call [ WideCharToMultiByte@IAT ]
mov eax esi
pop esi
sub_4250b0
push esi
push edi
mov edi [ esp + 0xc ]
mov eax esi
pop edi
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call eax
test eax eax
pop ecx
jne r-xdata
push edi
call sub_40941c
mov esi eax
pop ecx
test esi esi
jne r-xdata
sub_425107
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x64 ]
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
call [ CheckDlgButton@IAT ]
jmp r-xdata
retn 0x8
sub_425133
push ebp
mov ebp esp
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x68 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call [ CheckRadioButton@IAT ]
jmp r-xdata
pop ebp
retn 0xc
sub_425165
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x70 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ GetDlgItem@IAT ]
push eax
call sub_42166a
jmp r-xdata
retn 0x4
sub_42518f
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x6c ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ GetDlgItem@IAT ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
retn 0x8
sub_4251bd
push ebp
mov ebp esp
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x74 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call [ GetDlgItemInt@IAT ]
jmp r-xdata
pop ebp
retn 0xc
sub_4251ef
push ebp
mov ebp esp
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x78 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call [ GetDlgItemTextA@IAT ]
jmp r-xdata
pop ebp
retn 0xc
sub_425221
push ebp
mov ebp esp
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x7c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
pop ebp
retn 0x10
sub_425259
push ebp
mov ebp esp
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x80 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call [ SetDlgItemInt@IAT ]
jmp r-xdata
pop ebp
retn 0xc
sub_42528e
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x84 ]
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
call [ SetDlgItemTextA@IAT ]
jmp r-xdata
retn 0x8
sub_4252e4
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
test eax eax
push edi
mov esi ecx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ ScrollWindowEx@IAT ]
mov ecx [ esi + 0x34 ]
mov edi eax
test ecx ecx
je r-xdata
mov eax [ eax + 0x4 ]
mov eax edi
pop edi
pop esi
pop ebp
retn 0x1c
test [ ebp + 0x20 ] 0x1
je r-xdata
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
call [ eax + 0x58 ]
sub_425333
push esi
mov esi ecx
test [ esi + 0x25 ] 0x1
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
call [ IsDialogMessageA@IAT ]
call sub_439511
mov eax [ eax + 0x1038 ]
push [ esp + 0x8 ]
mov ecx eax
mov edx [ eax ]
push esi
call [ edx + 0x24 ]
jmp r-xdata
pop esi
retn 0x4
sub_42539a
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x78 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call sub_421302
jmp r-xdata
pop ebp
retn 0xc
sub_4253cb
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x7c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call sub_42131c
jmp r-xdata
pop ebp
retn 0xc
sub_425423
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ esp + 0x8 ]
mov edx [ eax ]
mov ecx eax
push [ esp + 0x8 ]
call [ edx + 0x84 ]
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
call [ GetWindowTextA@IAT ]
jmp r-xdata
retn 0x8
sub_425488
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x94 ]
push [ esp + 0x4 ]
push 0xfffffff4
push [ ecx + 0x1c ]
call [ SetWindowLongA@IAT ]
jmp r-xdata
retn 0x4
sub_4254b1
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x18 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x98 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call [ MoveWindow@IAT ]
jmp r-xdata
pop ebp
retn 0x14
sub_4254f2
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x1c ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x1c ]
call [ SetWindowPos@IAT ]
jmp r-xdata
mov eax [ eax + 0x1c ]
pop ebp
retn 0x18
sub_4255cb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
pop ebp
retn
lea edx [ ebp + 0x20 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ eax + 0x58 ]
sub_425632
push esi
mov esi ecx
mov ecx [ esi + 0x38 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xb0 ]
mov eax [ esi + 0x38 ]
mov ecx [ eax + 0x88 ]
mov eax [ ecx ]
call [ eax ]
pop esi
retn
xor eax eax
pop esi
retn
sub_42568b
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn 0x4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
mov eax [ esp + 0xc ]
lea ecx [ eax + 0x4 ]
call sub_41fb00
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x8c ]
sub_4256e7
push esi
mov esi [ esp + 0x8 ]
add ecx 0x20
push [ esi + 0x1c ]
call sub_41fb00
test eax eax
je r-xdata
pop esi
retn 0x4
mov ecx [ eax + 0x24 ]
test ecx ecx
je r-xdata
mov [ esi + 0x38 ] eax
mov [ eax + 0x24 ] esi
cmp [ ecx + 0x38 ] eax
jne r-xdata
and [ ecx + 0x38 ] 0x0
sub_42572f
mov eax sub_43dd08
call sub_408db8
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ecx + 0x10 ]
and [ ebp - 0x4 ] 0x0
add ecx 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call [ eax + 0x1c ]
sub_42575a
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push ebx
push esi
push 0x1
test eax eax
pop ebx
je r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0x28
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub eax 0x29
je r-xdata
je r-xdata
mov eax ebx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0xa
je r-xdata
xor ebx ebx
cmp [ esi + 0x1c ] ebx
sete bl
and [ esi + 0x1c ] 0x0
jmp r-xdata
push [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x18 ]
dec eax
je r-xdata
mov ebx eax
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0x16
je r-xdata
push [ ebp + 0x18 ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub eax 0x3
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x1c
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub_425861
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cmp eax 0xfffffffe
mov edi ecx
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
call sub_439511
push [ ebp + 0x14 ]
mov eax [ eax + 0x1038 ]
mov ecx eax
push [ ebp + 0x10 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
push edi
call [ edx + 0x4 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0x10 ]
and [ ebp + 0xc ] 0x0
mov ecx edi
mov eax [ ebx + 0x30 ]
mov [ ebp + 0x10 ] eax
mov eax [ edi ]
call [ eax + 0x2c ]
mov edi eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ebx 0x111
mov ebx eax
movzx eax ax
shr ebx 0x10
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push ebx
push [ esi + 0x4 ]
call sub_4225d6
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov esi eax
mov esi [ edi + 0x4 ]
push [ ebp + 0x14 ]
push [ eax + 0x10 ]
push [ ebp + 0x10 ]
push [ eax + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_42575a
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov edi [ edi ]
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
add esi 0xc
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x10
push eax
push [ ebp + 0x10 ]
call sub_4094f0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp + 0xc ] 0x1
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_4259e0
push esi
mov esi ecx
push 0xd
call sub_43a141
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
test eax eax
je r-xdata
push 0xd
call sub_43a1b1
test esi esi
je r-xdata
mov ecx eax
call sub_43954e
pop esi
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_425a3b
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x20 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_425a61
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
push edi
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx [ esi + 0x14 ]
call sub_425583
pop edi
mov edi [ esi + 0x14 ]
call [ GetFocus@IAT ]
cmp eax [ edi + 0x1c ]
jne r-xdata
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x3
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ EnableMenuItem@IAT ]
jmp r-xdata
push [ edi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_42166a
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov [ esi + 0x18 ] 0x1
push 0x0
push ecx
push [ eax + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_42166a
mov ecx eax
call sub_4255aa
mov ecx [ ecx + 0x1c ]
sub_425af1
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x87
push [ eax + 0x1c ]
call edi
test ah 0x20
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
retn 0x4
mov eax [ esi + 0x14 ]
push 0x0
push [ esp + 0x10 ]
push 0xf1
push [ eax + 0x1c ]
call edi
mov ecx [ esp + 0xc ]
neg ecx
sbb ecx ecx
and ecx 0x8
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ CheckMenuItem@IAT ]
jmp r-xdata
sub_425b53
push esi
push edi
mov esi ecx
xor edi edi
xor ecx ecx
cmp [ esp + 0xc ] edi
mov eax [ esi ]
setne cl
push ecx
mov ecx esi
call [ eax + 0x4 ]
cmp [ esi + 0xc ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push [ rw-data ]
mov eax [ esi + 0xc ]
push edi
push 0x400
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ SetMenuItemBitmaps@IAT ]
call sub_4388c1
cmp [ rw-data ] edi
je r-xdata
sub_425ba9
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov eax [ esi + 0x14 ]
push [ eax + 0x1c ]
call sub_42e6f8
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x8 ]
push edi
mov edi 0x400
push edi
push ecx
push [ eax + 0x4 ]
call [ GetMenuState@IAT ]
push [ esp + 0xc ]
and ax 0xf6fb
or eax edi
push [ esi + 0x4 ]
push eax
mov eax [ esi + 0xc ]
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ ModifyMenuA@IAT ]
pop edi
jmp r-xdata
sub_425c00
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
push 0x1
pop eax
cmp ax 0xffff
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
push ebx
mov [ esi + 0x18 ] ebx
mov edx [ edi ]
push esi
push 0xffffffff
push eax
mov ecx edi
call [ edx + 0xc ]
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
jmp r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
pop esi
pop ebx
leave
retn 0x8
mov eax [ edi ]
lea ecx [ ebp - 0x8 ]
push ecx
push esi
push ebx
mov ecx edi
push [ esi + 0x4 ]
mov [ ebp - 0x8 ] ebx
call [ eax + 0xc ]
mov edx [ esi ]
push eax
mov ecx esi
call [ edx ]
sub_425c99
mov eax sub_43dde8
call sub_408db8
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
cmp [ ecx + 0xc ] eax
mov [ ebp - 0x10 ] esp
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
call [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
sub_425d18
push esi
push edi
mov edi ecx
call sub_439511
push 0x0
mov esi eax
call sub_43a141
push [ esp + 0xc ]
lea ecx [ esi + 0x1c ]
call sub_43970c
push 0x0
call sub_43a1b1
mov eax edi
pop edi
pop esi
retn 0x4
sub_425d5d
cmp [ esp + 0x8 ] 0x110
jne r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_421691
push eax
push r--data
call sub_425c79
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0xbc ]
jmp r-xdata
retn 0x10
sub_425d9d
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_421f7a
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx esi
call sub_422eaa
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ edi + 0x4 ] 0x100
jne r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
push edi
mov ecx esi
call sub_42408a
mov eax [ edi + 0x8 ]
cmp eax 0x1b
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ edi ]
call [ GetWindowLongA@IAT ]
test al 0x4
je r-xdata
cmp eax 0x3
jne r-xdata
push r--data
push [ edi ]
call sub_42e658
test eax eax
je r-xdata
push 0x2
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
sub_425e36
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
push edi
push [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x10 ]
push edi
push ebx
call sub_425861
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
test bh 0x80
je r-xdata
cmp edi 0xffffffff
jne r-xdata
xor eax eax
cmp ebx 0xf000
jae r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_42166a
test eax eax
je r-xdata
call sub_426ac9
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
je r-xdata
sub_425ebb
push esi
mov esi ecx
call sub_421249
push 0x20
lea eax [ esi + 0x3c ]
push 0x0
push eax
mov [ esi ] r--data
call sub_408d60
add esp 0xc
mov eax esi
pop esi
retn
sub_425ef9
mov eax sub_43ddfc
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d24
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
call sub_421ee2
sub_425f37
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov eax ebx
push edi
mov edi ecx
shr eax 0x10
test ax ax
mov [ edi + 0x40 ] ebx
jne r-xdata
call sub_439511
mov esi [ eax + 0xc ]
push 0x5
push ebx
push esi
call [ FindResourceA@IAT ]
push eax
push esi
call [ LoadResource@IAT ]
push esi
mov ecx edi
push [ esp + 0x18 ]
push eax
call sub_425f98
pop edi
pop esi
pop ebx
retn 0x8
cmp [ edi + 0x3c ] 0x0
jne r-xdata
movzx eax bx
mov [ edi + 0x3c ] eax
sub_425fd1
mov eax [ esp + 0x8 ]
push esi
test eax eax
mov esi ecx
jne r-xdata
push [ esp + 0x14 ]
mov ecx [ esp + 0x14 ]
mov [ esi + 0x4c ] ecx
mov ecx esi
push eax
push [ esp + 0x10 ]
call sub_426052
pop esi
retn 0x10
call sub_408030
sub_425ffc
push ebx
push esi
push edi
mov ebx ecx
xor edi edi
call sub_439511
mov esi [ eax + 0xc ]
push 0x5
push [ esp + 0x14 ]
push esi
call [ FindResourceA@IAT ]
push eax
push esi
call [ LoadResource@IAT ]
test eax eax
je r-xdata
push esi
mov ecx ebx
push [ esp + 0x18 ]
push edi
call sub_426052
pop edi
pop esi
pop ebx
retn 0x8
push eax
call [ LockResource@IAT ]
mov edi eax
sub_426052
mov eax sub_43de18
call sub_408db8
sub esp 0x34
push ebx
push esi
xor ebx ebx
push edi
cmp [ ebp + 0x10 ] ebx
mov esi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x24 ] esi
jne r-xdata
call sub_439511
mov edi [ eax + 0x1038 ]
push 0x10
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_424301
push 0x3c000
call sub_424301
cmp edi ebx
je r-xdata
call sub_439511
mov eax [ eax + 0x8 ]
mov [ ebp + 0x10 ] eax
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx esi
call [ eax + 0xb4 ]
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x8 ]
call sub_427d79
add esp 0xc
xor ecx ecx
cmp eax ebx
sete cl
mov eax ecx
cmp eax ebx
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_427b07
push [ ebp - 0x20 ]
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_427f30
lea ecx [ ebp - 0x40 ]
call sub_427c3a
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_427bd7
cmp [ ebp - 0x14 ] ebx
je r-xdata
push 0x2a
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
or [ esi + 0x2c ] 0xffffffff
or [ esi + 0x24 ] 0x10
push esi
call sub_421b1d
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
push [ ebp - 0x14 ]
call [ GlobalLock@IAT ]
mov [ ebp + 0x8 ] eax
push r--data
push [ ebp - 0x1c ]
call sub_40959c
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0x20 ] 0x8
jne r-xdata
push r--data
push [ ebp - 0x1c ]
call sub_40959c
pop ecx
test eax eax
pop ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp edi ebx
je r-xdata
push ebx
push sub_425d5d
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call [ CreateDialogIndirectParamA@IAT ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] bl
call sub_4249df
jmp r-xdata
mov [ ebp - 0x20 ] ebx
push r--data
push [ ebp - 0x1c ]
call sub_40959c
pop ecx
test eax eax
pop ecx
jne r-xdata
call sub_421b69
test eax eax
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
cmp [ ebp - 0x18 ] ebx
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xb4 ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
test [ esi + 0x24 ] 0x10
jne r-xdata
cmp [ ebp - 0x18 ] ebx
jne r-xdata
push [ ebp - 0x14 ]
call [ GlobalUnlock@IAT ]
push [ ebp - 0x14 ]
call [ GlobalFree@IAT ]
push [ ebp - 0x18 ]
call [ DestroyWindow@IAT ]
mov [ ebp - 0x18 ] ebx
push 0x1
pop eax
test [ esi + 0x24 ] 0x10
je r-xdata
sub_42628c
push esi
push edi
mov esi ecx
call sub_421249
lea edi [ esi + 0x3c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_408d60
mov eax [ esp + 0x1c ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x40 ] eax
shr eax 0x10
test ax ax
jne r-xdata
mov eax esi
pop edi
pop esi
retn 0x8
movzx eax [ esi + 0x40 ]
mov [ edi ] eax
sub_4262ce
push esi
push edi
mov esi ecx
call sub_421249
lea edi [ esi + 0x3c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_408d60
mov eax [ esp + 0x1c ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov eax [ esp + 0xc ]
movzx ecx ax
mov [ edi ] eax
mov [ esi + 0x40 ] ecx
mov eax esi
pop edi
pop esi
retn 0x8
sub_426342
push esi
push edi
mov esi ecx
call sub_439511
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push 0x0
mov ecx eax
call sub_430c8b
lea ecx [ esi + 0x54 ]
push ecx
push eax
call sub_430e31
push esi
mov edi eax
call sub_421b1d
mov eax edi
pop edi
pop esi
retn
mov eax [ eax + 0x1c ]
sub_42637c
push esi
mov esi ecx
call sub_421b69
mov ecx esi
call sub_4216e8
push [ esi + 0x54 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
and [ esi + 0x54 ] 0x0
call sub_439511
mov eax [ eax + 0x4 ]
pop esi
test eax eax
je r-xdata
push 0x1
push [ esi + 0x54 ]
call [ EnableWindow@IAT ]
retn
push 0x1
mov ecx eax
call sub_430c8b
sub_4263be
mov eax sub_43de24
call sub_408db8
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] esi
mov eax [ esi + 0x48 ]
mov edi [ esi + 0x44 ]
mov [ ebp - 0x18 ] eax
call sub_439511
cmp [ esi + 0x40 ] 0x0
mov ebx [ eax + 0xc ]
je r-xdata
test edi edi
je r-xdata
call sub_439511
mov ebx [ eax + 0xc ]
push 0x5
push [ esi + 0x40 ]
push ebx
call [ FindResourceA@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
mov edi eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
push edi
call [ LockResource@IAT ]
mov [ ebp - 0x18 ] eax
mov ecx esi
call sub_426342
mov [ ebp - 0x14 ] eax
call sub_421b69
xor edi edi
cmp [ ebp - 0x14 ] edi
mov [ ebp - 0x20 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x4 ] edi
call sub_421b1d
push [ ebp - 0x14 ]
call sub_42166a
push ebx
push eax
push [ ebp - 0x18 ]
mov ecx esi
call sub_426052
cmp eax edi
je r-xdata
push [ ebp - 0x14 ]
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x20 ] edi
je r-xdata
test [ esi + 0x24 ] 0x10
je r-xdata
push edi
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
mov [ ebp - 0x20 ] 0x1
cmp [ ebp - 0x14 ] edi
je r-xdata
push 0x1
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
cmp [ esi + 0x1c ] edi
je r-xdata
push 0x4
mov ecx esi
pop ebx
call sub_425366
test ah 0x1
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x58 ]
mov ecx esi
call sub_42637c
mov eax [ esi + 0x2c ]
call [ GetActiveWindow@IAT ]
cmp eax [ esi + 0x1c ]
jne r-xdata
push 0x97
push edi
push edi
push edi
push edi
push edi
mov ecx esi
call sub_4254f2
jmp r-xdata
push ebx
mov ecx esi
call sub_4240ba
push 0x5
pop ebx
push [ ebp - 0x14 ]
call [ SetActiveWindow@IAT ]
sub_426541
push esi
push edi
push [ esp + 0xc ]
mov esi ecx
mov edi [ esi ]
call sub_42e313
push eax
mov ecx esi
call [ edi + 0xc0 ]
mov ecx esi
call sub_4215d1
pop edi
pop esi
retn 0x8
sub_426566
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0xcc ]
call sub_439511
mov ecx [ eax + 0x1038 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4215d1
mov edi eax
test edi edi
je r-xdata
mov eax [ esi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
test [ esi + 0x25 ] 0x1
je r-xdata
mov edx [ esi + 0x4c ]
test edx edx
je r-xdata
push 0x0
push 0x0
push [ esi + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_42166a
test eax eax
je r-xdata
mov edx [ ecx ]
push eax
push [ esi + 0x40 ]
push esi
call [ edx + 0x20 ]
mov edi [ ecx ]
push eax
push edx
push esi
call [ edi + 0x1c ]
jmp r-xdata
mov ecx eax
call sub_4255aa
xor edi edi
push 0xffffffff
mov ecx esi
call sub_42651e
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x8
sub_4265ee
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_439511
xor edi edi
cmp [ eax + 0x4 ] edi
jne r-xdata
call sub_408030
cmp eax edi
mov esi 0xe146
je r-xdata
xor eax eax
jmp r-xdata
call sub_439511
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
mov edx [ eax ]
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
mov edx [ eax ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push 0x1
pop eax
jmp r-xdata
sub_426647
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
push [ esi + 0x40 ]
mov ecx esi
call sub_423e63
push eax
call sub_423eb3
jmp r-xdata
push 0xffffffff
mov ecx esi
call sub_42651e
xor eax eax
pop esi
retn
push 0x0
mov ecx esi
call sub_423bf2
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0xe146
mov ecx esi
call sub_425165
mov esi eax
test esi esi
je r-xdata
push 0x1
pop eax
pop esi
retn
call sub_4265ee
neg eax
sbb eax eax
mov ecx esi
and eax 0x5
push eax
call sub_425541
sub_4266cd
push esi
push edi
mov edi ecx
cmp [ edi + 0x40 ] 0x0
mov esi [ edi + 0x48 ]
mov eax [ edi + 0x44 ]
je r-xdata
test eax eax
je r-xdata
push ebx
call sub_439511
mov ebx [ eax + 0xc ]
push 0x5
push [ edi + 0x40 ]
push ebx
call [ FindResourceA@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
pop ebx
push 0x1
test esi esi
pop eax
je r-xdata
push eax
call [ LockResource@IAT ]
mov esi eax
pop edi
pop esi
retn
cmp [ esi + 0x2 ] 0xffff
mov ecx [ esi ]
jne r-xdata
mov ax [ esi + 0xa ]
mov si [ esi + 0xc ]
mov ecx [ esi + 0xc ]
mov ax [ esi + 0x12 ]
mov si [ esi + 0x14 ]
jmp r-xdata
xor eax eax
test ax ax
jne r-xdata
test cx 0x1801
jne r-xdata
test si si
jne r-xdata
push 0x1
pop eax
jmp r-xdata
sub_42675d
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
call sub_439511
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
push 0x1
push esi
mov ecx eax
call [ edx + 0x98 ]
xor eax eax
lea esi [ eax + 0x20000 ]
test esi esi
je r-xdata
pop esi
retn 0x8
sub_4267b4
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx esi
call sub_426dbd
pop esi
retn
call sub_4346ef
test eax eax
je r-xdata
push 0x0
call sub_43c0d3
sub_4267d6
push esi
push edi
mov edi ecx
call sub_408030
mov esi eax
xor eax eax
push eax
push eax
push 0x36a
mov [ edi + 0x84 ] eax
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
push [ esp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ esp + 0x10 ]
call [ eax + 0x6c ]
pop edi
pop esi
retn 0x8
sub_42680d
mov edx [ esp + 0x8 ]
push esi
mov eax [ edx + 0x4 ]
mov esi eax
dec esi
je r-xdata
push edx
push [ esp + 0xc ]
call sub_427088
sub esi 0xe
je r-xdata
push ebx
xor ebx ebx
push edi
cmp eax 0x111
mov edi 0xf108
jne r-xdata
mov esi [ esp + 0x10 ]
push r--data
mov ecx esi
call sub_425c67
test eax eax
je r-xdata
cmp [ edx + 0xc ] ebx
jne r-xdata
push r--data
mov ecx esi
call sub_425c67
test eax eax
jne r-xdata
mov eax [ esi ]
push edi
push 0x1030
jmp r-xdata
push 0x1
pop ebx
inc edi
mov eax ebx
pop edi
pop ebx
jmp r-xdata
mov eax [ esi ]
push edi
push 0x10
mov ecx esi
call [ eax + 0x10 ]
pop esi
retn 0x8
sub_426884
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jg r-xdata
cmp edi 0x1
jne r-xdata
push edi
call sub_426e99
mov ecx [ esi + 0x80 ]
and [ ebp + 0x8 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
cmp edi 0x1
pop edi
pop esi
setl al
pop ebp
retn 0x4
push edi
mov ecx esi
call sub_426e99
mov eax [ ecx ]
call [ eax + 0x10 ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
mov ecx [ esi + 0x80 ]
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ecx ]
call [ eax + 0x14 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x88 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
sub_4268ee
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x98 ]
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ebx [ GlobalLock@IAT ]
push eax
call ebx
movzx ecx [ eax + 0x2 ]
push [ ebp + 0x8 ]
add ecx eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ esi + 0x94 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
push eax
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x94 ] eax
call ebx
push 0x2
push edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
cmp eax 0x1
je r-xdata
push eax
call sub_42e7e0
push [ ebp - 0x4 ]
call ClosePrinter
push [ esi + 0x94 ]
call sub_42e7e0
mov [ esi + 0x94 ] edi
sub_42699b
mov eax sub_43df40
call sub_408db8
sub esp 0x48
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x10 ] esp
mov esi [ edi + 0x4 ]
mov [ ebp - 0x14 ] esi
call sub_421249
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
call sub_439281
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
call sub_439511
push sub_438ff4
lea ecx [ eax + 0x1070 ]
call sub_439bd8
mov [ eax + 0x4 ] esi
call sub_426c03
call sub_439511
mov eax [ eax + 0x4 ]
cmp eax ebx
je r-xdata
push [ edi + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov ebx [ edi + 0x14 ]
call [ SetEvent@IAT ]
push 0xffffffff
push ebx
call [ WaitForSingleObject@IAT ]
push ebx
call [ CloseHandle@IAT ]
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
test eax eax
mov eax [ esi ]
mov ecx esi
jne r-xdata
push [ esi + 0x4c ]
call eax
pop ecx
jmp r-xdata
mov eax [ eax + 0x1c ]
cmp eax ebx
je r-xdata
call [ eax + 0x54 ]
call [ eax + 0x68 ]
jmp r-xdata
lea ecx [ ebp - 0x50 ]
mov esi eax
call sub_4216e8
push 0x1
push esi
call sub_426bbe
cmp [ eax + 0x1c ] ebx
je r-xdata
push [ eax + 0x1c ]
lea ecx [ ebp - 0x50 ]
call sub_4216af
lea eax [ ebp - 0x50 ]
mov [ esi + 0x1c ] eax
jmp r-xdata
sub_426ade
mov eax sub_43df55
call sub_408db8
push ecx
push esi
push 0x68
call sub_4250b0
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor esi esi
cmp ecx esi
mov [ ebp - 0x4 ] esi
je r-xdata
push [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
or al 0x4
push [ ebp + 0x14 ]
mov ecx esi
push eax
call sub_426cc6
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_439025
mov esi eax
push [ ebp + 0x10 ]
push [ esi + 0x28 ]
call [ SetThreadPriority@IAT ]
test [ ebp + 0x18 ] 0x4
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x78 ]
xor eax eax
jmp r-xdata
mov eax esi
push [ esi + 0x28 ]
call [ ResumeThread@IAT ]
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x18
sub_426b5f
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
call sub_425c99
mov esi eax
test esi esi
jne r-xdata
push [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
and [ esi + 0x4c ] 0x0
or al 0x4
push [ ebp + 0x10 ]
mov ecx esi
push eax
call sub_426cc6
test eax eax
jne r-xdata
call sub_41b163
push [ ebp + 0xc ]
push [ esi + 0x28 ]
call [ SetThreadPriority@IAT ]
test [ ebp + 0x14 ] 0x4
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x78 ]
xor eax eax
jmp r-xdata
mov eax esi
push [ esi + 0x28 ]
call [ ResumeThread@IAT ]
pop esi
pop ebp
retn 0x14
sub_426bbe
push esi
push edi
call sub_439537
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
push 0x0
call sub_426c62
push [ esp + 0xc ]
call sub_4098bb
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
push 0x0
push 0x1
call eax
and [ edi + 0x4 ] 0x0
mov eax [ esi ]
mov ecx esi
call [ eax + 0x78 ]
sub_426c03
call sub_439511
cmp [ eax + 0x14 ] 0x0
jne r-xdata
retn
push esi
call sub_439281
mov esi eax
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_4270ad
push 0xffffffff
call [ SetWindowsHookExA@IAT ]
push sub_438672
mov ecx rw-data
mov [ esi + 0x30 ] eax
call sub_439c9a
mov esi eax
cmp [ esi + 0x14 ] 0x0
je r-xdata
push sub_4390fa
mov ecx rw-data
call sub_439bd8
pop esi
call sub_439511
push [ eax + 0x8 ]
call [ esi + 0x14 ]
sub_426c62
push esi
call sub_427665
push 0xffffffff
call sub_42766e
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
pop esi
test ecx ecx
je r-xdata
mov ecx rw-data
call sub_439c4f
mov esi eax
test esi esi
je r-xdata
retn 0x4
push 0x0
push [ esp + 0x8 ]
call sub_439b7f
mov ecx [ esi + 0xcc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ecx [ esi + 0xcc ]
test ecx ecx
je r-xdata
and [ esi + 0xcc ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_426cc6
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
xor ebx ebx
push 0x1c
lea eax [ ebp - 0x1c ]
push ebx
mov esi ecx
push eax
call sub_408d60
add esp 0xc
call sub_439281
mov edi [ CreateEventA@IAT ]
push ebx
push ebx
push 0x1
push ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] esi
call edi
push ebx
push ebx
push 0x1
push ebx
mov [ ebp - 0xc ] eax
call edi
cmp [ ebp - 0xc ] ebx
mov edi [ CloseHandle@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
xor eax eax
push [ ebp - 0x8 ]
call edi
push [ ebp - 0xc ]
call edi
lea ecx [ esi + 0x2c ]
or al 0x4
push ecx
push eax
lea eax [ ebp - 0x1c ]
push eax
push sub_42699b
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
call sub_4097b4
add esp 0x18
cmp eax ebx
mov [ esi + 0x28 ] eax
je r-xdata
push eax
call [ ResumeThread@IAT ]
push 0xffffffff
push [ ebp - 0xc ]
call [ WaitForSingleObject@IAT ]
push [ ebp - 0xc ]
call edi
test [ ebp + 0x8 ] 0x4
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ esi + 0x28 ]
call [ SuspendThread@IAT ]
push [ ebp - 0x8 ]
call [ SetEvent@IAT ]
push 0x1
pop eax
jmp r-xdata
push 0xffffffff
push [ esi + 0x28 ]
call [ WaitForSingleObject@IAT ]
push [ esi + 0x28 ]
call edi
mov [ esi + 0x28 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_426dbd
push ecx
push ebx
push ebp
push esi
push edi
push 0x1
xor ebx ebx
mov esi ecx
pop edi
mov [ esp + 0x10 ] ebx
mov eax [ esi ]
mov ecx esi
call [ eax + 0x5c ]
test eax eax
je r-xdata
lea ebp [ esi + 0x30 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esi ]
lea ebp [ esi + 0x30 ]
push ebp
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esi ]
inc [ esp + 0x10 ]
push eax
mov ecx esi
call [ edx + 0x60 ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push 0x1
mov [ esp + 0x14 ] ebx
pop edi
cmp edi ebx
jne r-xdata
xor edi edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
sub_426e3c
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax + 0x4 ]
cmp esi 0x200
je r-xdata
mov edx [ eax + 0x14 ]
mov edi [ eax + 0x18 ]
cmp [ ecx + 0x5c ] edx
jne r-xdata
cmp esi 0xa0
je r-xdata
mov edx [ eax + 0x14 ]
mov esi [ eax + 0x18 ]
mov [ ecx + 0x5c ] edx
mov [ ecx + 0x60 ] esi
mov eax [ eax + 0x4 ]
mov [ ecx + 0x64 ] eax
cmp [ ecx + 0x60 ] edi
jne r-xdata
cmp esi 0xf
je r-xdata
cmp esi [ ecx + 0x64 ]
je r-xdata
xor eax eax
jmp r-xdata
cmp esi 0x118
jne r-xdata
pop edi
pop esi
retn 0x4
push 0x1
pop eax
sub_426e99
push ebx
push ebp
xor ebp ebp
push esi
cmp [ esp + 0x10 ] ebp
push edi
jg r-xdata
call sub_439511
add eax 0x1070
push sub_438ff4
mov ecx eax
call sub_439bd8
cmp [ eax + 0x10 ] ebp
jne r-xdata
mov edi [ ecx + 0x1c ]
mov ebx 0x363
cmp edi ebp
je r-xdata
xor eax eax
cmp [ esp + 0x14 ] ebp
pop edi
pop esi
pop ebp
pop ebx
setl al
retn 0x4
call sub_427665
push 0x1
call sub_42766e
call sub_439511
add eax 0x1070
push sub_438ff4
mov ecx eax
call sub_439bd8
mov esi [ eax + 0x8 ]
mov eax [ edi + 0x1c ]
cmp eax ebp
je r-xdata
cmp [ esi + 0x1c ] ebp
je r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov esi [ esi + 0x54 ]
jmp r-xdata
cmp esi edi
je r-xdata
push ebp
push 0x1
pop esi
push esi
push ebx
push [ edi + 0x1c ]
push edi
call sub_4214a9
push esi
push esi
push ebp
push esi
push ebx
push [ edi + 0x1c ]
call sub_422fb4
cmp esi ebp
je r-xdata
cmp [ esi + 0x88 ] ebp
jne r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push ebp
mov ecx esi
call sub_425541
push ebp
push 0x1
push ebx
push [ esi + 0x1c ]
push esi
call sub_4214a9
push 0x1
push 0x1
push ebp
push 0x1
push ebx
push [ esi + 0x1c ]
call sub_422fb4
cmp [ esi + 0x88 ] ebp
jl r-xdata
or [ esi + 0x88 ] 0xffffffff
push eax
mov ecx esi
call sub_425541
mov eax [ esi + 0x88 ]
cmp eax ebp
jle r-xdata
sub_426fb0
push ecx
mov eax [ ecx ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] ecx
call [ eax + 0x28 ]
mov esi eax
xor ebp ebp
cmp esi ebp
je r-xdata
xor eax eax
mov ebx [ esp + 0x18 ]
mov edi 0xc000
mov eax [ esi + 0x4 ]
push ebp
push ebp
push edi
push ebp
push ebp
push eax
push [ esi + 0x4 ]
call sub_4225d6
cmp eax ebp
jne r-xdata
mov esi [ esi ]
cmp esi ebp
jne r-xdata
mov ecx [ eax + 0x10 ]
mov ecx [ ecx ]
cmp ecx [ ebx + 0x4 ]
je r-xdata
push [ ebx + 0xc ]
mov ecx [ esp + 0x14 ]
push [ ebx + 0x8 ]
call [ eax + 0x14 ]
push 0x1
pop eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp eax edi
jae r-xdata
jmp r-xdata
push ebp
push ebp
push edi
add eax 0x18
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
push eax
call sub_4225d6
cmp eax ebp
je r-xdata
sub_42702b
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi ] 0x0
jne r-xdata
call sub_408030
mov esi eax
test esi esi
je r-xdata
push edi
call sub_426fb0
test eax eax
jne r-xdata
push edi
push eax
call sub_42357c
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x4
xor eax eax
push [ edi ]
call sub_42166a
mov ecx eax
call sub_422d9d
cmp eax esi
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x90 ]
jmp r-xdata
sub_427088
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp eax 0xf
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
push 0x0
push [ ecx ]
call [ ValidateRect@IAT ]
retn 0x8
sub_4270ad
push esi
call sub_439511
cmp [ eax + 0x14 ] 0x0
mov esi [ esp + 0x8 ]
jne r-xdata
push sub_43860d
mov ecx rw-data
call sub_439bd8
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push esi
push [ eax + 0x30 ]
call [ CallNextHookEx@IAT ]
test esi esi
jge r-xdata
call sub_426ac9
test eax eax
je r-xdata
cmp esi 0x8001
jne r-xdata
push [ esp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push esi
call [ edx + 0x70 ]
jmp r-xdata
pop esi
retn 0xc
sub_427105
mov eax [ esp + 0x4 ]
push esi
cmp [ eax + 0x4 ] 0x100
jne r-xdata
xor eax eax
cmp [ eax + 0x8 ] 0x70
jne r-xdata
mov eax [ eax + 0xc ]
shr eax 0x10
test ah 0x40
jne r-xdata
mov esi [ GetKeyState@IAT ]
push 0x10
call esi
test ax ax
jl r-xdata
push 0x11
call esi
test ax ax
jl r-xdata
push 0x12
call esi
test ax ax
jl r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0x4
sub_42717b
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
sub eax ebx
je r-xdata
call sub_408030
cmp [ rw-data ] 0x333
mov edi eax
jae r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
push [ esi ]
call sub_42166a
cmp eax ebx
je r-xdata
sub eax 0x7fff
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] ebx
je r-xdata
push esi
call sub_427105
test eax eax
je r-xdata
mov ecx eax
call sub_422eaa
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
push ebx
push 0xe146
push 0x111
push [ edi + 0x1c ]
jmp r-xdata
mov ecx edi
call sub_4245bf
test eax eax
je r-xdata
cmp eax 0x108
ja r-xdata
call [ SendMessageA@IAT ]
jmp r-xdata
cmp [ edi + 0x50 ] ebx
je r-xdata
push sub_43860d
mov ecx rw-data
call sub_439bd8
mov ebx eax
cmp [ ebx + 0xbc ] 0x0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_408030
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x1c ] ebx
je r-xdata
push 0x7
lea edi [ ebp - 0x20 ]
pop ecx
mov [ ebx + 0xbc ] 0x1
[ edi ] [ esi ]
mov esi [ ebp - 0x4 ]
mov ecx [ esi + 0x20 ]
call sub_425568
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov ecx [ esi + 0x4 ]
cmp ecx 0x100
jne r-xdata
and [ ebx + 0xbc ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
test eax eax
je r-xdata
cmp ecx 0x202
jne r-xdata
cmp [ esi + 0x8 ] 0xd
je r-xdata
and [ ebx + 0xbc ] 0x0
push ebx
push 0xe146
push 0x111
push [ eax + 0x1c ]
sub_4272e0
push esi
mov esi ecx
xor eax eax
push edi
push eax
lea edi [ esi + 0x30 ]
push eax
push eax
push edi
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x34 ] 0x36a
je r-xdata
push 0x1
pop eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x58 ]
test eax eax
jne r-xdata
push edi
call [ TranslateMessage@IAT ]
push edi
call [ DispatchMessageA@IAT ]
sub_427320
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi 0x100
push edi
lea eax [ ebp - 0x104 ]
push esi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
call sub_4273a4
mov edi eax
mov eax esi
sub eax edi
cmp eax 0x2
jbe r-xdata
push ebx
mov edi esi
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_424b68
xor eax eax
test edi edi
setg al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add edi esi
push edi
lea eax [ edi - 0x1 ]
push eax
call sub_424e0f
push eax
push [ ebp + 0x8 ]
call sub_4273a4
mov ebx eax
mov eax edi
sub eax ebx
cmp eax 0x2
jle r-xdata
mov ecx [ ebp - 0x4 ]
push 0xffffffff
call sub_424e5e
xor eax eax
test ebx ebx
setg al
pop ebx
pop edi
pop esi
leave
retn 0x4
sub_4273a4
push esi
call sub_439511
push [ esp + 0x10 ]
mov esi [ esp + 0x10 ]
mov eax [ eax + 0xc ]
push esi
push [ esp + 0x10 ]
push eax
call [ LoadStringA@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0xc
and [ esi ] al
sub_4273cb
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
movsx eax [ ebp + 0x14 ]
push eax
push esi
call sub_409172
pop ecx
test eax eax
pop ecx
jne r-xdata
movsx edi [ ebp + 0x14 ]
sub eax esi
push esi
call [ lstrlenA@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_42496a
inc esi
mov eax ebx
dec ebx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push esi
push eax
call sub_424e86
push eax
call sub_408e20
add esp 0xc
push 0x1
pop eax
push edi
push esi
call sub_409172
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
sub_427443
mov eax sub_43e03e
call sub_408db8
push esi
call sub_439537
mov esi eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x18 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_42e816
call sub_42509e
push 0x48
mov ebx eax
call sub_4250b0
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_427768
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x18 ] eax
call sub_42509e
pop ebx
sub_4274e8
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_427443
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_41fb55
push 0x1
mov [ eax ] esi
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_427515
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_427443
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41fba5
sub_427583
mov eax [ esp + 0xc ]
xor ecx ecx
cmp eax ecx
je r-xdata
cmp [ esp + 0x8 ] ecx
je r-xdata
mov [ eax ] ecx
xor eax eax
retn 0xc
mov eax [ esp + 0x4 ]
cmp eax ecx
je r-xdata
mov [ eax ] cl
sub_4275a4
push ebp
mov ebp esp
sub esp 0x204
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x204 ]
push 0x200
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x204 ]
push [ ebp + 0x8 ]
push eax
call sub_430da0
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_430dd8
mov [ ebp + 0xc ] 0xf020
leave
retn 0x8
sub_42760f
push esi
push edi
call [ GetLastError@IAT ]
push sub_43860d
mov ecx rw-data
mov edi eax
call sub_439bd8
push edi
mov esi eax
call [ SetLastError@IAT ]
lea eax [ esi + 0x10 ]
pop edi
pop esi
retn
sub_427637
push esi
push edi
call sub_42760f
mov edi eax
mov esi [ edi ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov [ edi ] eax
pop edi
pop esi
retn
call sub_427571
sub_42766e
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_439537
mov ebx eax
xor esi esi
mov eax [ ebx + 0x10 ]
cmp eax esi
je r-xdata
xor eax eax
pop edi
cmp [ ebx + 0x10 ] eax
pop esi
pop ebx
setne al
pop ebp
retn 0x4
dec eax
cmp eax esi
mov [ ebx + 0x10 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
call sub_439511
mov edi [ eax + 0x4 ]
push sub_43860d
mov ecx rw-data
call sub_439bd8
test edi edi
mov esi eax
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x20 ]
call sub_42788c
mov ecx [ ebx + 0x1c ]
call sub_42788c
mov ecx [ ebx + 0x18 ]
call sub_42788c
mov ecx [ ebx + 0x14 ]
call sub_42788c
mov ecx [ ebx + 0x24 ]
call sub_42788c
call sub_426ac9
cmp eax esi
je r-xdata
cmp [ edi + 0xb8 ] 0x0
je r-xdata
push eax
call sub_409b20
cmp eax [ edi + 0xb8 ]
pop ecx
jae r-xdata
mov eax [ eax + 0x54 ]
cmp eax esi
je r-xdata
mov eax [ esi + 0xc ]
and [ ebp + 0x8 ] 0x0
test eax eax
je r-xdata
push esi
push esi
call eax
push [ edi + 0xb8 ]
call sub_40941c
test eax eax
pop ecx
mov [ esi + 0xc ] eax
jne r-xdata
push eax
call sub_409b20
push [ esi + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_4094a8
pop ecx
pop ecx
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40941c
pop ecx
mov [ esi + 0xc ] eax
sub_427768
mov eax sub_43e092
call sub_408db8
push ecx
push esi
mov esi ecx
push edi
push 0xa
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x10 ] esi
call sub_41f98c
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x20 ]
push 0x4
mov ecx edi
call sub_41f98c
push 0x0
push 0x7
mov ecx edi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_41f9cf
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x40 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x44 ] eax
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_4277cd
mov eax sub_43e09c
call sub_408db8
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov esi ecx
jne r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_41fb00
test eax eax
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
lea ecx [ esi + 0x20 ]
push edi
call sub_41fb00
test eax eax
je r-xdata
push sub_42e816
call sub_42509e
mov ecx [ esi + 0x3c ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] eax
call sub_425c99
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x40 ]
mov [ ecx + eax ] edi
add ecx eax
cmp [ esi + 0x44 ] 0x2
jne r-xdata
push edi
lea ecx [ esi + 0x20 ]
call sub_41fb55
push [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
call sub_42509e
mov eax [ esi + 0x40 ]
mov [ eax + ebx ] edi
add eax ebx
cmp [ esi + 0x44 ] 0x2
jne r-xdata
call sub_41b163
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax ebx
jmp r-xdata
mov [ eax + 0x4 ] edi
sub_42788c
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ esi + 0x20 ]
call sub_41fa14
push edi
lea edi [ esi + 0x20 ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
and [ eax + 0x4 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41fbe7
mov eax [ esi + 0x40 ]
add eax [ ebp - 0x4 ]
and [ eax ] 0x0
cmp [ esi + 0x44 ] 0x2
jne r-xdata
pop edi
sub_427932
push esi
push edi
mov edi [ GetSysColor@IAT ]
mov esi ecx
push 0xf
call edi
push 0x10
mov [ esi + 0x28 ] eax
call edi
push 0x14
mov [ esi + 0x2c ] eax
call edi
push 0x12
mov [ esi + 0x30 ] eax
call edi
push 0x6
mov [ esi + 0x34 ] eax
call edi
mov edi [ GetSysColorBrush@IAT ]
push 0xf
mov [ esi + 0x38 ] eax
call edi
push 0x6
mov [ esi + 0x24 ] eax
call edi
mov [ esi + 0x20 ] eax
pop edi
pop esi
retn
sub_427976
push ebx
push esi
push edi
mov edi [ GetSystemMetrics@IAT ]
mov esi ecx
push 0xb
call edi
push 0xc
mov [ esi + 0x8 ] eax
call edi
cmp [ esi + 0x68 ] 0x0
mov [ esi + 0xc ] eax
je r-xdata
call sub_439fbe
call sub_439f8e
jmp r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx [ GetDeviceCaps@IAT ]
mov edi eax
push 0x58
push edi
call ebx
push 0x5a
push edi
mov [ esi + 0x18 ] eax
call ebx
push edi
push 0x0
mov [ esi + 0x1c ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
retn
sub_4279ce
push ebp
mov ebp esp
sub esp 0x80
push ebx
push esi
push edi
push 0x0
call [ GetDC@IAT ]
mov ebx eax
push 0x3c
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call sub_408d60
add esp 0xc
push 0x48
push 0x5a
push ebx
call [ GetDeviceCaps@IAT ]
push eax
movzx eax [ ebp + 0xc ]
push eax
call [ MulDiv@IAT ]
push [ ebp + 0x8 ]
mov [ ebp - 0x70 ] 0x190
neg eax
mov [ ebp - 0x80 ] eax
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x69 ] 0x1
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x80 ]
push eax
call [ CreateFontIndirectA@IAT ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
mov edi [ GetDialogBaseUnits@IAT ]
call edi
movzx esi ax
call edi
mov edi eax
shr edi 0x10
mov esi [ SelectObject@IAT ]
push eax
push ebx
call esi
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x44 ]
push eax
push ebx
call [ GetTextMetricsA@IAT ]
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x34 ]
lea edi [ ecx + eax ]
lea eax [ ebp - 0xc ]
push eax
push 0x34
push r--data
push ebx
call [ GetTextExtentPoint32A@IAT ]
mov eax [ ebp - 0xc ]
push 0x34
add eax 0x1a
pop ecx
cdq
idiv ecx
push [ ebp + 0xc ]
push ebx
mov [ ebp - 0x4 ] eax
call esi
push [ ebp + 0x8 ]
call [ DeleteObject@IAT ]
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebx
push 0x0
call [ ReleaseDC@IAT ]
push 0x4
push esi
push [ ebp + 0x10 ]
call [ MulDiv@IAT ]
mov esi [ ebp + 0x18 ]
push 0x8
push edi
push [ ebp + 0x14 ]
mov [ esi ] eax
call [ MulDiv@IAT ]
mov [ esi + 0x4 ] eax
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_427b07
push esi
push edi
mov edi [ esp + 0xc ]
xor eax eax
cmp edi eax
mov esi ecx
jne r-xdata
push edi
call sub_427cc1
pop ecx
push eax
push edi
mov ecx esi
call sub_427b77
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
sub_427b36
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
cmp ebx eax
mov esi ecx
jne r-xdata
push edi
push ebx
call [ GlobalLock@IAT ]
mov edi eax
push edi
call sub_427cc1
pop ecx
push eax
push edi
mov ecx esi
call sub_427b77
push ebx
call [ GlobalUnlock@IAT ]
pop edi
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn 0x4
sub_427b77
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
add eax 0x40
push eax
push 0x40
call [ GlobalAlloc@IAT ]
test eax eax
mov [ esi ] eax
je r-xdata
pop esi
retn 0x8
push edi
push eax
call [ GlobalLock@IAT ]
push [ esi + 0x4 ]
mov edi eax
push [ esp + 0x10 ]
push edi
call sub_408e20
add esp 0xc
cmp [ edi + 0x2 ] 0xffff
jne r-xdata
mov eax [ edi ]
mov eax [ edi + 0xc ]
jmp r-xdata
push [ esi ]
not eax
shr eax 0x6
and eax 0x1
mov [ esi + 0x8 ] eax
call [ GlobalUnlock@IAT ]
push 0x1
pop eax
pop edi
sub_427be5
push ebp
push esi
push edi
mov ebp ecx
call sub_439511
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
push [ esp + 0x14 ]
push esi
call [ FindResourceA@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push ebx
push edi
push esi
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
push edi
push esi
mov ebx eax
call [ SizeofResource@IAT ]
push eax
push ebx
mov ecx ebp
call sub_427b77
push 0x1
pop eax
pop ebx
sub_427c40
push esi
push edi
mov edi ecx
push [ edi ]
call [ GlobalLock@IAT ]
cmp [ eax + 0x2 ] 0xffff
jne r-xdata
mov esi [ eax ]
mov esi [ eax + 0xc ]
jmp r-xdata
push [ edi ]
call [ GlobalUnlock@IAT ]
mov eax esi
pop edi
and eax 0x40
pop esi
retn
sub_427c6b
mov eax [ esp + 0x4 ]
cmp [ eax + 0x2 ] 0xffff
jne r-xdata
add eax 0x12
add eax 0x1a
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
mov cx [ eax ]
push 0x2
cmp cx 0xffff
pop edx
jne r-xdata
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
jmp r-xdata
mov cx [ eax ]
add eax edx
test cx cx
jne r-xdata
mov cx [ eax ]
jmp r-xdata
retn
sub_427cc1
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
cmp [ ebx + 0x2 ] 0xffff
push ebx
sete al
mov esi eax
call sub_427c6b
cmp [ ebx + 0x2 ] 0xffff
pop ecx
jne r-xdata
mov ecx [ ebx ]
mov ecx [ ebx + 0xc ]
jmp r-xdata
test esi esi
je r-xdata
mov ecx esi
push edi
neg ecx
sbb ecx ecx
and ecx 0x2
inc ecx
lea edi [ eax + ecx * 2 ]
push edi
call sub_409155
pop ecx
lea eax [ edi + eax * 2 + 0x2 ]
pop edi
test cl 0x40
je r-xdata
mov cx [ ebx + 0x8 ]
mov cx [ ebx + 0x10 ]
jmp r-xdata
sub eax ebx
pop esi
pop ebx
retn
neg esi
sbb esi esi
and esi 0x6
add esi 0x12
movzx edx cx
test cx cx
jbe r-xdata
add eax 0x2
add eax 0x4
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
jmp r-xdata
add eax 0x2
add eax 0x4
jmp r-xdata
test cx cx
je r-xdata
movzx ecx [ eax ]
dec edx
lea eax [ eax + ecx + 0x2 ]
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
jmp r-xdata
add eax 0x3
and al 0xfc
add eax esi
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
test cx cx
je r-xdata
sub_427d79
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x2 ] 0xffff
jne r-xdata
mov eax [ esi ]
mov eax [ esi + 0xc ]
jmp r-xdata
push esi
call sub_427c6b
mov edx [ esp + 0x14 ]
pop ecx
mov cx [ eax ]
push 0x0
mov [ edx ] cx
xor ecx ecx
cmp [ esi + 0x2 ] 0xffff
push 0x0
push 0x20
push 0x20
setne cl
dec ecx
and ecx 0x2
inc ecx
lea esi [ eax + ecx * 2 ]
mov ecx [ esp + 0x1c ]
call sub_424e86
push eax
push 0xffffffff
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov ecx [ esp + 0xc ]
push 0xffffffff
call sub_424e5e
push 0x1
pop eax
pop esi
retn
xor eax eax
pop esi
retn
test al 0x40
jne r-xdata
sub_427de8
push esi
mov esi ecx
push edi
push [ esi ]
call [ GlobalLock@IAT ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
call sub_427d79
add esp 0xc
mov edi eax
push [ esi ]
call [ GlobalUnlock@IAT ]
mov eax edi
pop edi
pop esi
retn 0x8
sub_427e16
push ebp
mov ebp esp
sub esp 0x50
push edi
xor edi edi
cmp [ ecx + 0x4 ] edi
mov [ ebp - 0x8 ] ecx
jne r-xdata
push ebx
push esi
push [ ecx ]
call [ GlobalLock@IAT ]
mov ebx eax
xor ecx ecx
mov ax [ ebx + 0x2 ]
cmp ax 0xffff
sete cl
cmp ax 0xffff
mov [ ebp - 0x4 ] ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
mov eax [ ebx + 0xc ]
jmp r-xdata
pop edi
leave
retn 0x8
or [ ebx ] 0x40
or [ ebx + 0xc ] 0x40
jmp r-xdata
mov esi [ ebp - 0x4 ]
and eax 0x40
neg esi
sbb esi esi
mov [ ebp - 0xc ] eax
and esi 0x2
inc esi
shl esi 0x1
cmp [ ebp - 0x4 ] edi
je r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edi + 0x3 ]
and al 0xfc
lea edi [ edi + edx + 0x3 ]
mov [ ebp - 0xc ] eax
and edi 0xfffffffc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ edi + esi ]
push eax
call sub_409155
pop ecx
lea ecx [ esi + eax * 2 + 0x2 ]
lea eax [ ebp - 0x50 ]
push 0x20
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push edi
call [ MultiByteToWideChar@IAT ]
lea eax [ esi + eax * 2 ]
push ebx
mov [ ebp + 0x8 ] eax
call sub_427c6b
pop ecx
mov edi eax
xor ecx ecx
mov [ ebp - 0x10 ] edi
cmp [ ebp - 0xc ] ecx
je r-xdata
mov dx [ ebx + 0x8 ]
mov dx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ebp + 0xc ]
sub eax esi
push eax
mov [ ecx ] dx
lea eax [ ebp - 0x50 ]
add ecx esi
push eax
push ecx
call sub_409d30
mov esi [ ebp - 0x8 ]
sub edi [ ebp - 0xc ]
add esp 0xc
push [ esi ]
add [ esi + 0x4 ] edi
call [ GlobalUnlock@IAT ]
and [ esi + 0x8 ] 0x0
push 0x1
pop eax
pop esi
pop ebx
test dx dx
jbe r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
sub ebx eax
add ebx [ ecx + 0x4 ]
push ebx
push eax
push edi
call sub_409d30
add esp 0xc
sub_427f30
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
mov esi [ GetStockObject@IAT ]
push edi
push 0xa
mov [ ebp - 0x4 ] ecx
pop ebx
mov edi r--data
push 0x11
call esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
push 0x3c
push eax
call [ GetObjectA@IAT ]
test eax eax
je r-xdata
push 0xd
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
lea edi [ ebp - 0x24 ]
call [ GetDC@IAT ]
mov esi eax
mov eax [ ebp - 0x40 ]
test eax eax
jge r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push edi
call sub_427e16
pop edi
pop esi
pop ebx
leave
retn 0x4
mov [ ebp + 0x8 ] ebx
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push eax
push 0x48
push [ ebp - 0x40 ]
call [ MulDiv@IAT ]
push esi
push 0x0
mov ebx eax
call [ ReleaseDC@IAT ]
neg eax
mov [ ebp - 0x40 ] eax
sub_427fc1
push esi
mov esi ecx
push [ esi ]
call [ GlobalLock@IAT ]
cmp [ eax + 0x2 ] 0xffff
jne r-xdata
movsx edx [ eax + 0xe ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] edx
movsx eax [ eax + 0x10 ]
movsx edx [ eax + 0x16 ]
mov ecx [ esp + 0x8 ]
mov [ ecx ] edx
movsx eax [ eax + 0x18 ]
jmp r-xdata
mov [ ecx + 0x4 ] eax
push [ esi ]
call [ GlobalUnlock@IAT ]
pop esi
retn 0x4
sub_428001
mov eax sub_43e12c
call sub_408db8
sub esp 0x10
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
call sub_427de8
lea eax [ ebp - 0x1c ]
mov ecx edi
push eax
call sub_427fc1
push [ ebp + 0x8 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
call sub_4279ce
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4249df
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_427fc1
call [ GetDialogBaseUnits@IAT ]
mov ecx eax
push 0x4
movzx eax cx
imul eax [ esi ]
cdq
pop edi
idiv edi
push 0x8
mov [ esi ] eax
mov eax ecx
shr eax 0x10
imul eax [ esi + 0x4 ]
cdq
pop ecx
idiv ecx
mov [ esi + 0x4 ] eax
pop esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4280a1
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call [ lstrlenA@IAT ]
push 0x0
push 0x0
push edi
mov ebx eax
call sub_43a78c
dec eax
mov esi ebx
sub esi eax
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
lea ecx [ esi + edi ]
mov [ ebp - 0x4 ] ecx
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
cmp [ ebp + 0xc ] eax
jge r-xdata
cmp [ edi ] 0x5c
lea ebx [ edi + 0x2 ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp esi 0x3
jle r-xdata
cmp [ edi + 0x1 ] 0x5c
jne r-xdata
push ecx
jmp r-xdata
mov ecx rw-data
mov eax [ ebp + 0x8 ]
mov esi ebx
sub esi edi
lea eax [ esi + eax + 0x5 ]
cmp [ ebp + 0xc ] eax
jge r-xdata
push ebx
call sub_40a09f
mov ebx eax
pop ecx
cmp [ ebx ] 0x5c
jne r-xdata
cmp [ ebx ] 0x5c
je r-xdata
push edi
call [ lstrcpyA@IAT ]
jmp r-xdata
push ebx
call [ lstrlenA@IAT ]
lea eax [ eax + esi + 0x4 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
push [ ebp - 0x4 ]
push ebx
call sub_40a09f
pop ecx
mov ebx eax
jmp r-xdata
and [ esi + edi ] 0x0
mov esi [ lstrcatA@IAT ]
push r--data
push edi
call esi
push ebx
push edi
call esi
push ebx
call sub_40a09f
mov ebx eax
pop ecx
cmp [ ebx ] 0x5c
jne r-xdata
jmp r-xdata
sub_428172
mov eax sub_43e18b
call sub_408db8
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
lea ebx [ esi + 0xc ]
mov [ ebx ] eax
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x10 ] eax
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_4250b0
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
mov [ ebp - 0x4 ] 0x3
je r-xdata
xor eax eax
push sub_4249df
mov [ eax ] edi
push sub_4084e0
add eax 0x4
push edi
push 0x4
push eax
mov [ ebp + 0x14 ] eax
call sub_40a0b6
mov eax [ ebp + 0x14 ]
jmp r-xdata
push [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x4 ] edi
mov [ esi + 0x14 ] eax
call sub_424b68
push [ ebp + 0x10 ]
lea ecx [ esi + 0x10 ]
call sub_424b68
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x18 ] eax
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x14
sub_428246
push ebx
mov bl [ esp + 0x8 ]
push esi
mov esi ecx
test bl 0x2
je r-xdata
mov ecx esi
call sub_4249df
test bl 0x1
je r-xdata
push edi
lea edi [ esi - 0x4 ]
push sub_4249df
push [ edi ]
push 0x4
push esi
call sub_40a138
test bl 0x1
je r-xdata
mov eax esi
push esi
call sub_4250d9
pop ecx
mov eax edi
pop edi
jmp r-xdata
push edi
call sub_4250d9
pop ecx
pop esi
pop ebx
retn 0x4
sub_428291
mov eax sub_43e1b9
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x4 ] 0x2
test ecx ecx
je r-xdata
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_4249df
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x10 ]
call sub_4249df
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0xc ]
call sub_4249df
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x3
call sub_428246
sub_4282ee
push ebp
mov ebp esp
sub esp 0x104
push esi
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
mov esi ecx
push eax
call sub_42904c
mov eax [ esi + 0x4 ]
xor edi edi
dec eax
test eax eax
jle r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_424b68
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x8 ]
lea ecx [ ebp - 0x104 ]
push ecx
mov eax [ eax + edi * 4 ]
push eax
call sub_4291e2
test eax eax
jne r-xdata
test edi edi
jle r-xdata
mov eax [ esi + 0x4 ]
inc edi
dec eax
cmp edi eax
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi * 4 ]
lea eax [ ecx - 0x4 ]
push eax
call sub_424b18
dec edi
jmp r-xdata
sub_42835f
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi * 4 ]
call sub_42496a
lea ecx [ eax + edi * 4 ]
call sub_42496a
pop edi
pop esi
retn 0x4
lea ecx [ eax + edi * 4 + 0x4 ]
push ecx
lea ecx [ eax + edi * 4 ]
call sub_424b18
inc edi
jmp r-xdata
mov eax [ esi + 0x4 ]
dec eax
cmp edi eax
mov eax [ esi + 0x8 ]
jge r-xdata
sub_42839a
push ebp
mov ebp esp
sub esp 0x108
mov eax [ ebp + 0xc ]
push esi
mov esi eax
mov eax [ ecx + 0x8 ]
shl esi 0x2
mov [ ebp - 0x4 ] ecx
mov eax [ eax + esi ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx 0x104
push edi
push ebx
call sub_424e0f
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
push [ eax + esi ]
push edi
call [ lstrcpyA@IAT ]
push 0x0
push 0x0
push edi
call sub_43a78c
push 0x1
pop esi
push edi
sub esi eax
call [ lstrlenA@IAT ]
add esi eax
mov eax [ ebp + 0x14 ]
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0xffffffff
je r-xdata
mov cl [ esi + edi ]
and [ eax + edi ] 0x0
push edi
add eax edi
push [ ebp + 0x10 ]
mov [ ebp + 0xf ] cl
mov [ ebp + 0x14 ] eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov al [ ebp + 0xf ]
mov [ esi + edi ] al
je r-xdata
pop esi
leave
retn 0x14
mov ecx [ ebp + 0x8 ]
push 0xffffffff
call sub_424e5e
push 0x1
pop eax
pop edi
pop ebx
lea ecx [ ebp - 0x108 ]
lea eax [ esi + edi ]
push ebx
push ecx
push eax
mov [ ebp + 0xc ] eax
call sub_4292a5
sub ebx esi
lea eax [ ebp - 0x108 ]
push ebx
push eax
push [ ebp + 0xc ]
call [ lstrcpynA@IAT ]
push [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
push [ eax + 0x18 ]
push edi
call sub_4280a1
lea eax [ ebp - 0x108 ]
push ebx
push eax
push [ ebp + 0x14 ]
call sub_4292a5
lea eax [ ebp - 0x108 ]
push ebx
push eax
push edi
call [ lstrcpynA@IAT ]
jmp r-xdata
sub_4284a0
mov eax sub_43e1dc
call sub_408db8
sub esp 0x124
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov ecx [ edi + 0x1c ]
mov eax [ esi + 0xc ]
lea ebx [ edi + 0x1c ]
mov [ ebp - 0x18 ] eax
cmp [ ecx - 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ eax ]
xor eax eax
cmp [ ecx - 0x8 ] eax
jne r-xdata
test eax eax
je r-xdata
cmp [ esi + 0xc ] eax
je r-xdata
mov ebx [ ebx ]
cmp [ ebx - 0x8 ] eax
je r-xdata
mov eax [ esi + 0x4 ]
push 0x0
mov [ ebp + 0x8 ] eax
mov eax 0x100
push eax
push eax
mov ecx ebx
call sub_424e0f
push eax
mov eax [ ebp - 0x18 ]
push [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ GetMenuStringA@IAT ]
push 0xffffffff
mov ecx ebx
call sub_424e5e
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
xor ebx ebx
cmp [ edi + 0x4 ] eax
jle r-xdata
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax ]
jmp r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xc ]
lea eax [ ebp - 0x130 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
lea eax [ ebp - 0x130 ]
push eax
call [ lstrlenA@IAT ]
mov ecx [ rw-data ]
mov [ ebp + eax - 0x130 ] 0x5c
and [ ebp + eax - 0x12f ] 0x0
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
xor ebx ebx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
jle r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
add eax ebx
push 0x0
push eax
push [ ecx + 0x4 ]
call [ DeleteMenu@IAT ]
inc ebx
cmp ebx [ edi + 0x4 ]
jl r-xdata
mov eax [ esi + 0xc ]
dec [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ GetMenuItemCount@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x18 ] 0x1
call sub_4249df
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_4249df
jmp r-xdata
push 0x1
push eax
lea eax [ ebp - 0x130 ]
mov ecx edi
push eax
lea eax [ ebp - 0x14 ]
push ebx
push eax
call sub_42839a
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ eax - 0x8 ]
add eax eax
push eax
call sub_424e0f
mov ecx [ ebp + 0x8 ]
and [ eax ] 0x0
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_424e5e
mov eax [ edi + 0x14 ]
push 0xa
xor edx edx
pop ecx
lea eax [ eax + ebx + 0x1 ]
div ecx
lea eax [ ebp - 0x2c ]
push edx
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x20 ]
push eax
call sub_424a4d
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x2
push ecx
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_424c0e
mov eax [ eax ]
mov ecx [ esi + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ esi + 0x4 ]
push [ ebp + 0x8 ]
lea edx [ ecx + 0x1 ]
mov [ esi + 0x8 ] edx
lea edx [ eax + 0x1 ]
push eax
mov eax [ esi + 0xc ]
push 0x400
push ecx
mov [ esi + 0x4 ] edx
push [ eax + 0x4 ]
call [ InsertMenuA@IAT ]
lea ecx [ ebp - 0x1c ]
call sub_4249df
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_4249df
inc ebx
cmp ebx [ edi + 0x4 ]
jl r-xdata
cmp dl 0x26
jne r-xdata
mov eax [ ebp - 0x18 ]
mov dl [ ecx ]
mov [ ebp + 0xb ] dl
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
mov [ eax ] dl
inc eax
mov dl [ ecx ]
mov [ eax ] dl
inc eax
inc ecx
jmp r-xdata
mov dl [ ebp + 0xb ]
mov [ eax ] dl
inc eax
inc ecx
mov dl [ ecx ]
test dl dl
je r-xdata
sub_4286e1
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x10 ]
mov eax [ eax - 0x8 ]
add eax 0x5
push eax
call sub_4250b0
pop ecx
mov [ ebp - 0x4 ] eax
call sub_439511
mov eax [ eax + 0x4 ]
xor edi edi
push edi
push edi
push [ esi + 0xc ]
mov ecx eax
mov [ ebp - 0x8 ] eax
call sub_432125
cmp [ esi + 0x4 ] edi
jle r-xdata
push [ ebp - 0x4 ]
call sub_4250d9
pop ecx
pop edi
pop esi
leave
retn
push ebx
mov edi ebx
cmp edi [ esi + 0x4 ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
push edi
push [ ebp - 0x4 ]
push [ esi + 0xc ]
call sub_432125
lea ebx [ edi + 0x1 ]
push ebx
push [ esi + 0x10 ]
push [ ebp - 0x4 ]
call [ wsprintfA@IAT ]
mov eax [ esi + 0x8 ]
add esp 0xc
mov edi [ eax + edi * 4 ]
cmp [ edi - 0x8 ] 0x0
je r-xdata
pop ebx
sub_42875f
mov eax sub_43e1f0
call sub_408db8
sub esp 0xc
push esi
mov esi ecx
push edi
mov eax [ esi + 0x10 ]
mov eax [ eax - 0x8 ]
add eax 0x5
push eax
call sub_4250b0
pop ecx
mov [ ebp - 0x10 ] eax
call sub_439511
mov eax [ eax + 0x4 ]
xor edi edi
cmp [ esi + 0x4 ] edi
mov [ ebp - 0x14 ] eax
jle r-xdata
push [ ebp - 0x10 ]
call sub_4250d9
pop ecx
pop edi
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push ebx
mov eax [ esi + 0x10 ]
lea ebx [ edi + 0x1 ]
push ebx
push eax
push [ ebp - 0x10 ]
call [ wsprintfA@IAT ]
mov eax [ esi + 0xc ]
add esp 0xc
mov ecx [ ebp - 0x14 ]
push rw-data
push [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_43a38c
and [ ebp - 0x4 ] 0x0
push eax
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi * 4 ]
call sub_424b18
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_4249df
mov edi ebx
cmp edi [ esi + 0x4 ]
jl r-xdata
pop ebx
sub_428867
mov eax sub_43e313
call sub_408db8
sub esp 0x18
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0xc ] eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_42755b
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x1c ] 0x0
or [ ebp - 0x18 ] 0xffffffff
mov edi r--data
push 0x0
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x24 ] edi
call sub_424b68
lea eax [ ebp - 0x24 ]
mov ecx esi
push eax
mov [ ebp - 0x4 ] 0x4
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4289c4
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] edi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x5
call sub_4249df
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_4298f9
sub_428907
mov eax sub_43e333
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
cmp [ esi + 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0xc ]
call sub_4249df
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ esi + 0x8 ] 0x0
je r-xdata
call sub_428bdf
sub_42894f
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov ebx ecx
push 0x10
call sub_4250b0
test eax eax
pop ecx
je r-xdata
xor edi edi
push 0xffffffff
mov ecx eax
call sub_428848
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
pop edi
pop ebx
leave
retn
test edi edi
je r-xdata
push esi
mov esi [ GetCurrentProcess@IAT ]
push 0x2
push 0x0
lea eax [ ebp - 0x4 ]
push 0x0
push eax
call esi
push eax
push [ ebx + 0x4 ]
call esi
push eax
call [ DuplicateHandle@IAT ]
test eax eax
pop esi
jne r-xdata
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_429814
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x4 ]
sub_4289c4
push ebp
mov ebp esp
sub esp 0x110
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0xc ]
and [ esi + 0x8 ] 0x0
or [ esi + 0x4 ] 0xffffffff
lea ebx [ esi + 0xc ]
and edi 0xffff7fff
mov ecx ebx
call sub_42496a
push [ ebp + 0x8 ]
lea eax [ ebp - 0x110 ]
push eax
call sub_42904c
lea eax [ ebp - 0x110 ]
mov ecx ebx
push eax
call sub_424b68
mov eax edi
xor ecx ecx
and eax 0x3
sub eax ecx
je r-xdata
mov ecx 0x80000000
dec eax
je r-xdata
xor eax eax
cmp eax 0x10
je r-xdata
mov ecx 0x40000000
jmp r-xdata
dec eax
jne r-xdata
push 0x3
pop edi
and edi 0x2000
neg edi
sbb edi edi
and edi 0x2
inc edi
inc edi
jmp r-xdata
cmp eax 0x20
je r-xdata
mov eax edi
push 0x1
and eax 0x70
pop ebx
je r-xdata
mov ecx 0xc0000000
jmp r-xdata
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov eax ebx
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
push 0x0
push 0x80
lea edx [ ebp - 0xc ]
push edi
push edx
push eax
push ecx
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x30
je r-xdata
xor eax eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
mov [ esi + 0xc ] eax
call sub_4299ba
push [ ebp + 0x8 ]
lea ecx [ esi + 0x10 ]
mov [ esi + 0x8 ] eax
call sub_424b68
and [ ebp - 0x8 ] 0x0
mov edx edi
not edx
shr edx 0x7
and edx ebx
mov [ ebp - 0xc ] 0xc
test edi 0x1000
mov [ ebp - 0x4 ] edx
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
pop eax
jmp r-xdata
push 0x3
sub_428ae1
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea eax [ ebp + 0xc ]
push 0x0
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push eax
call [ GetLastError@IAT ]
push eax
call sub_429814
pop ebp
retn 0x8
sub_428b1b
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
lea eax [ ebp + 0xc ]
push 0x0
push eax
push edi
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_429814
push [ esi + 0xc ]
push 0xffffffff
push 0xd
call sub_4298f9
sub_428b66
push esi
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ SetFilePointer@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
pop esi
retn 0x8
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_429814
sub_428b95
push esi
push 0x1
push 0x0
push 0x0
push [ ecx + 0x4 ]
call [ SetFilePointer@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax esi
pop esi
retn
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_429814
sub_428bdf
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
or [ esi + 0x4 ] 0xffffffff
and [ esi + 0x8 ] 0x0
lea ecx [ esi + 0xc ]
call sub_42496a
test edi edi
pop edi
pop esi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov edi eax
neg edi
sbb edi edi
inc edi
retn
push 0x0
call [ GetLastError@IAT ]
push eax
call sub_429814
sub_428c40
push 0x0
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ LockFile@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_429814
sub_428c69
push 0x0
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ UnlockFile@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_429814
sub_428c92
push esi
mov esi ecx
push 0x0
mov eax [ esi ]
push [ esp + 0xc ]
call [ eax + 0x28 ]
push [ esi + 0x4 ]
call [ SetEndOfFile@IAT ]
test eax eax
pop esi
jne r-xdata
retn 0x4
push eax
call [ GetLastError@IAT ]
push eax
call sub_429814
sub_428cbe
push ebx
push esi
mov esi ecx
push edi
push 0x1
push 0x0
mov eax [ esi ]
call [ eax + 0x28 ]
mov edi eax
mov eax [ esi ]
push 0x2
push 0x0
mov ecx esi
call [ eax + 0x28 ]
mov ebx eax
mov eax [ esi ]
push 0x0
push edi
mov ecx esi
call [ eax + 0x28 ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
sub_428d30
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push r--data
push [ ebp + 0x8 ]
call sub_428d72
test eax eax
jl r-xdata
leave
retn 0x10
mov eax [ ebp - 0x4 ]
push esi
push [ ebp + 0x14 ]
mov ecx [ eax ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0xc ]
mov esi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
pop esi
sub_428d72
mov eax sub_43e350
call sub_408db8
push ecx
push esi
mov esi [ ebp + 0x10 ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
and [ esi ] 0x0
push eax
call sub_428e0f
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x10 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
push eax
push [ ebp - 0x10 ]
call sub_428e7e
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
call [ LoadLibraryA@IAT ]
test eax eax
je r-xdata
mov esi 0x80040154
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
call sub_4249df
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov esi 0x800401f9
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
mov esi eax
jmp r-xdata
sub_428e0f
push ebp
mov ebp esp
sub esp 0x104
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
movzx ecx [ eax + 0xf ]
push ecx
movzx ecx [ eax + 0xe ]
push ecx
movzx ecx [ eax + 0xd ]
push ecx
movzx ecx [ eax + 0xc ]
push ecx
movzx ecx [ eax + 0xb ]
push ecx
movzx ecx [ eax + 0xa ]
push ecx
movzx ecx [ eax + 0x9 ]
push ecx
movzx ecx [ eax + 0x8 ]
push ecx
movzx ecx [ eax + 0x6 ]
push ecx
movzx ecx [ eax + 0x4 ]
push ecx
push [ eax ]
lea eax [ ebp - 0x104 ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov ecx [ ebp + 0x8 ]
add esp 0x34
lea eax [ ebp - 0x104 ]
push eax
call sub_424a4d
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_428e7e
push ebp
mov ebp esp
sub esp 0x10
push ebx
lea eax [ ebp - 0x8 ]
push esi
mov esi [ RegOpenKeyA@IAT ]
push eax
xor ebx ebx
push r--data
push 0x80000000
mov [ ebp - 0x8 ] ebx
call esi
test eax eax
jne r-xdata
mov eax ebx
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x4 ]
push edi
push eax
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
call esi
mov edi [ RegCloseKey@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
call edi
pop edi
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ebx
push eax
push r--data
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call edi
mov ecx [ ebp + 0xc ]
mov esi 0x104
push esi
call sub_424e0f
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] esi
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
push r--data
push [ ebp + 0x8 ]
call [ RegQueryValueExA@IAT ]
mov ecx [ ebp + 0xc ]
push 0xffffffff
mov esi eax
call sub_424e5e
push [ ebp + 0x8 ]
xor eax eax
cmp esi ebx
sete al
mov ebx eax
call edi
sub_428f2a
push ebp
mov ebp esp
sub esp 0x16c
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ eax ] bl
push 0x800
lea eax [ ebp - 0x16c ]
push 0x160
push eax
push ebx
push [ ebp + 0xc ]
call [ SHGetFileInfoA@IAT ]
test eax eax
je r-xdata
xor eax eax
test [ ebp - 0x162 ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
lea ecx [ ebp - 0xc ]
push eax
push r--data
push ebx
push r--data
call sub_428d30
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
jmp r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
lea esp [ ebp - 0x178 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov esi eax
inc esi
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_40a070
mov edi esp
push esi
push edi
push 0xffffffff
push [ ebp + 0xc ]
mov [ edi ] bx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
xor edi edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
push ebx
push edi
push eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
test eax eax
jl r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
push ebx
push ebx
push [ ebp + 0x14 ]
mov ecx [ eax ]
push [ ebp + 0x10 ]
push eax
call [ ecx + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
push 0x1
pop ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push 0x2
push eax
push ecx
mov edx [ ecx ]
call [ edx + 0x4c ]
test eax eax
jl r-xdata
sub_42904c
mov eax sub_43e364
call sub_408db8
sub esp 0x14c
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
mov esi 0x104
push edi
push esi
push [ ebp + 0xc ]
call [ GetFullPathNameA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
xor esi esi
push eax
push edi
mov [ ebp - 0x4 ] esi
call sub_42911c
push esi
lea eax [ ebp - 0x10 ]
push esi
push eax
lea eax [ ebp - 0x18 ]
push eax
push esi
push esi
push esi
push [ ebp + 0x8 ]
call [ GetVolumeInformationA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp + 0xc ]
push edi
call [ lstrcpynA@IAT ]
xor eax eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_4249df
mov eax esi
test [ ebp - 0x10 ] 0x2
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
test [ ebp - 0x10 ] 0x4
jne r-xdata
push edi
call [ CharUpperA@IAT ]
push 0x1
pop esi
lea eax [ ebp - 0x158 ]
push eax
push [ ebp + 0xc ]
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ FindClose@IAT ]
lea eax [ ebp - 0x12c ]
push eax
push [ ebp - 0x14 ]
call [ lstrcpyA@IAT ]
sub_42911c
mov ecx [ esp + 0x8 ]
push ebx
push esi
mov esi 0x104
push edi
push esi
call sub_424e0f
xor ebx ebx
mov edi eax
push esi
push ebx
push edi
call sub_408d60
add esp 0xc
push esi
push [ esp + 0x14 ]
push edi
call [ lstrcpynA@IAT ]
mov cl [ edi ]
mov eax edi
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
mov cl [ edi ]
mov eax edi
inc eax
inc eax
mov cl [ eax + 0x1 ]
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
jne r-xdata
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp [ eax ] bl
je r-xdata
cmp cl 0x5c
je r-xdata
cmp cl 0x2f
je r-xdata
push eax
call sub_40a09f
pop ecx
mov cl [ eax ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
push 0xffffffff
call sub_424e5e
pop edi
pop esi
pop ebx
retn 0x8
mov [ eax + 0x1 ] bl
cmp cl 0x2f
je r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
push eax
call sub_40a09f
pop ecx
cmp cl 0x2f
je r-xdata
cmp cl bl
je r-xdata
push eax
call sub_40a09f
pop ecx
mov cl [ eax ]
jmp r-xdata
cmp cl 0x5c
je r-xdata
push eax
call sub_40a09f
pop ecx
jmp r-xdata
cmp cl bl
je r-xdata
cmp cl 0x2f
jne r-xdata
mov cl [ eax ]
cmp cl bl
je r-xdata
sub_4291e2
push ebp
mov ebp esp
sub esp 0x618
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edi
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push 0x2a
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push 0x1
pop eax
mov esi [ lstrlenA@IAT ]
push edi
call esi
push [ ebp + 0xc ]
mov ebx eax
call esi
cmp ebx eax
jne r-xdata
call [ GetThreadLocale@IAT ]
mov esi [ GetStringTypeExA@IAT ]
mov ebx eax
lea eax [ ebp - 0x208 ]
push eax
push 0xffffffff
push edi
push 0x1
push ebx
call esi
lea eax [ ebp - 0x410 ]
push eax
push 0xffffffff
push edi
push 0x4
push ebx
call esi
lea eax [ ebp - 0x618 ]
push eax
push 0xffffffff
push [ ebp + 0xc ]
push 0x1
push ebx
call esi
cmp [ edi ] 0x0
mov eax edi
je r-xdata
xor esi esi
inc esi
push eax
inc esi
call sub_40a09f
cmp [ eax ] 0x0
pop ecx
jne r-xdata
mov cx [ ebp + esi - 0x208 ]
cmp cx [ ebp + esi - 0x618 ]
jne r-xdata
test [ ebp + esi - 0x410 ] 0x80
je r-xdata
sub_4292a5
push ebp
mov ebp esp
sub esp 0x104
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
mov esi edi
jne r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call GetFileTitleA
test ax ax
je r-xdata
lea esi [ ebp - 0x104 ]
mov [ ebp + 0x10 ] 0x104
test edi edi
jne r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_43a78c
jmp r-xdata
xor eax eax
push esi
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_4292fb
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi 0x104
lea eax [ ebp - 0x104 ]
push esi
push eax
push [ ebp + 0x8 ]
call [ GetModuleFileNameA@IAT ]
mov ecx [ ebp + 0xc ]
push esi
push esi
call sub_424e0f
push eax
lea eax [ ebp - 0x104 ]
push eax
call [ GetShortPathNameA@IAT ]
test eax eax
pop esi
jne r-xdata
mov ecx [ ebp + 0xc ]
push 0xffffffff
call sub_424e5e
leave
retn 0x8
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_424b68
sub_429355
mov eax sub_43e3a3
call sub_408db8
sub esp 0x120
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x12c ]
push esi
push eax
call sub_429488
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x1
mov eax 0x100
pop esi
lea ecx [ ebp - 0x10 ]
push eax
push eax
mov [ ebp - 0x4 ] esi
call sub_424e0f
push eax
lea eax [ ebp - 0x11a ]
push eax
call sub_43a78c
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_424e5e
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_424754
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4293d7
mov eax sub_43e3cf
call sub_408db8
sub esp 0x120
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x12c ]
push esi
push eax
call sub_429488
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push 0x1
mov eax 0x100
pop esi
lea ecx [ ebp - 0x10 ]
push eax
push eax
mov [ ebp - 0x4 ] esi
call sub_424e0f
push eax
lea eax [ ebp - 0x11a ]
push eax
call sub_4292a5
push 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_424e5e
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_424754
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_429459
push ebp
mov ebp esp
sub esp 0x11c
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x11c ]
push eax
call sub_429488
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10a ]
push eax
call sub_424a4d
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_429488
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x118
push 0x0
mov edi ecx
push esi
call sub_408d60
add esp 0xc
lea eax [ esi + 0x12 ]
push 0x104
push [ edi + 0xc ]
push eax
call [ lstrcpynA@IAT ]
mov eax [ edi + 0x4 ]
or ebx 0xffffffff
cmp eax ebx
je r-xdata
push 0x1
pop eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ GetFileTime@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
push [ edi + 0x4 ]
call [ GetFileSize@IAT ]
cmp eax ebx
mov [ esi + 0xc ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi [ edi + 0xc ]
cmp [ edi - 0x8 ] 0x0
jne r-xdata
push edi
call [ GetFileAttributesA@IAT ]
cmp eax ebx
je r-xdata
and [ esi + 0x10 ] 0x0
jmp r-xdata
mov [ esi + 0x10 ] al
lea eax [ ebp - 0x8 ]
push ebx
push eax
lea ecx [ ebp + 0x8 ]
call sub_41b296
mov eax [ eax ]
push ebx
mov [ esi ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_41b296
mov eax [ eax ]
push ebx
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_41b296
mov eax [ eax ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
sub_429562
push ebp
mov ebp esp
sub esp 0x140
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
lea edi [ esi + 0x12 ]
push edi
call sub_42904c
test eax eax
jne r-xdata
lea eax [ ebp - 0x140 ]
push eax
push [ ebp + 0x8 ]
call [ FindFirstFileA@IAT ]
or edi 0xffffffff
cmp eax edi
jne r-xdata
and [ edi ] al
jmp r-xdata
push eax
call [ FindClose@IAT ]
mov al [ ebp - 0x140 ]
push edi
and al 0x7f
lea ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] al
mov eax [ ebp - 0x120 ]
mov [ esi + 0xc ] eax
lea eax [ ebp - 0x13c ]
push eax
call sub_41b296
mov eax [ eax ]
push edi
mov [ esi ] eax
lea eax [ ebp - 0x134 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_41b296
mov eax [ eax ]
push edi
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_41b296
mov eax [ eax ]
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
pop edi
pop esi
leave
retn 0x8
push 0x1
pop eax
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] eax
sub_429614
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push esi
mov ecx edi
call sub_41b321
mov eax [ eax + 0x14 ]
push esi
add eax 0x76c
mov ecx edi
mov [ ebp - 0x18 ] ax
call sub_41b321
mov eax [ eax + 0x10 ]
push esi
inc eax
mov ecx edi
mov [ ebp - 0x16 ] ax
call sub_41b321
mov ax [ eax + 0xc ]
push esi
mov ecx edi
mov [ ebp - 0x12 ] ax
call sub_41b321
mov ax [ eax + 0x8 ]
push esi
mov ecx edi
mov [ ebp - 0x10 ] ax
call sub_41b321
mov ax [ eax + 0x4 ]
push esi
mov ecx edi
mov [ ebp - 0xe ] ax
call sub_41b321
mov ax [ eax ]
mov [ ebp - 0xa ] si
mov [ ebp - 0xc ] ax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ SystemTimeToFileTime@IAT ]
mov edi [ GetLastError@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
call [ LocalFileTimeToFileTime@IAT ]
test eax eax
jne r-xdata
push esi
call edi
push eax
call sub_429814
pop edi
pop esi
leave
retn
push esi
call edi
push eax
call sub_429814
sub_4296c7
push ebp
mov ebp esp
sub esp 0x24
push ebx
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
call [ GetFileAttributesA@IAT ]
mov ebx [ GetLastError@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
movzx eax [ esi + 0x10 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
push edi
call ebx
push eax
call sub_429814
cmp [ esi + 0x4 ] edi
lea eax [ esi + 0x4 ]
je r-xdata
test [ ebp - 0x4 ] 0x1
je r-xdata
movzx eax [ esi + 0x10 ]
cmp eax [ ebp - 0x4 ]
pop esi
je r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push eax
call sub_429614
cmp [ esi + 0x8 ] edi
lea eax [ esi + 0x8 ]
pop ecx
pop ecx
je r-xdata
push eax
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
test eax eax
jne r-xdata
pop edi
pop ebx
leave
retn 0x8
test [ ebp - 0x4 ] 0x1
jne r-xdata
cmp [ esi ] edi
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push eax
call sub_429614
pop ecx
lea eax [ ebp - 0x14 ]
pop ecx
mov [ ebp - 0x8 ] eax
push edi
call ebx
push eax
call sub_429814
push eax
push [ ebp + 0x8 ]
call [ SetFileAttributesA@IAT ]
test eax eax
jne r-xdata
push edi
push 0x80
push 0x3
push edi
push 0x1
push 0xc0000000
push [ ebp + 0x8 ]
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
call sub_429614
pop ecx
lea eax [ ebp - 0x1c ]
pop ecx
mov [ ebp - 0xc ] eax
push edi
call ebx
push eax
call sub_429814
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push edi
call [ SetFileTime@IAT ]
test eax eax
jne r-xdata
push 0x0
call ebx
push eax
call sub_429814
push edi
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
push eax
call ebx
push eax
call sub_429814
xor edi edi
push eax
call ebx
push eax
call sub_429814
sub_429859
mov eax sub_43e3ec
call sub_408db8
push ecx
mov eax [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
test eax eax
mov edi 0xf1a0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x10 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_424754
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx edi
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
add eax edi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43239f
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
call sub_4249df
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_427320
sub_4298f9
mov eax sub_43e414
call sub_408db8
push ecx
push ecx
push esi
push 0x14
call sub_4250b0
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_42755b
mov eax [ rw-data ]
lea ecx [ esi + 0x10 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0xc ] eax
call sub_424b68
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x10 ]
push r--data
push eax
mov [ ebp - 0x10 ] esi
call sub_408dd7
pop esi
sub_429964
mov eax [ esp + 0x4 ]
cmp eax 0x16
jg r-xdata
sub eax 0x17
je r-xdata
je r-xdata
push 0x2
dec eax
je r-xdata
push 0xa
jmp r-xdata
dec eax
je r-xdata
push 0x4
jmp r-xdata
sub eax 0x4
je r-xdata
pop eax
retn 0x4
push 0x5
jmp r-xdata
dec eax
je r-xdata
push 0xd
jmp r-xdata
sub eax 0x8
je r-xdata
sub eax 0x3
je r-xdata
push 0xb
jmp r-xdata
push 0x1
jmp r-xdata
sub eax 0x4
je r-xdata
push 0x6
jmp r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_4299ba
mov eax [ esp + 0x4 ]
mov ecx 0x10b
cmp eax ecx
ja r-xdata
sub eax 0x3e3
je r-xdata
je r-xdata
push 0xa
dec eax
je r-xdata
push 0x3
jmp r-xdata
cmp eax 0x3e
ja r-xdata
dec eax
je r-xdata
pop eax
cmp eax 0x6b
ja r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
mov ecx 0x90
cmp eax ecx
ja r-xdata
je r-xdata
push 0x8
jmp r-xdata
cmp eax 0x19
ja r-xdata
push 0x5
jmp r-xdata
push 0x1
jmp r-xdata
mov ecx 0xb6
cmp eax ecx
ja r-xdata
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x47
ja r-xdata
cmp eax 0x27
ja r-xdata
je r-xdata
sub eax 0xb7
je r-xdata
je r-xdata
cmp eax 0x75
ja r-xdata
sub eax 0x50
je r-xdata
je r-xdata
add eax 0xffffffcc
cmp eax 0x8
ja r-xdata
je r-xdata
push 0x9
jmp r-xdata
cmp eax 0x18
ja r-xdata
sub eax 0x8
je r-xdata
push 0x6
jmp r-xdata
sub eax 0x91
je r-xdata
sub eax 0x7b
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
sub eax 0x40
je r-xdata
jmp [ eax * 4 + jump_table_429c14 ]
push 0xd
jmp r-xdata
cmp eax 0x20
ja r-xdata
jmp [ eax * 4 + jump_table_429bb0 ]
dec eax
dec eax
je r-xdata
push 0x7
jmp r-xdata
sub eax 0x9
je r-xdata
dec eax
je r-xdata
sub eax 0x6c
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
sub eax 0x21
je r-xdata
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0xd
je r-xdata
sub eax 0x7
je r-xdata
dec eax
je r-xdata
push 0xc
jmp r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
push 0xb
jmp r-xdata
sub eax 0x1a
je r-xdata
retn 0x4
dec eax
dec eax
jne r-xdata
sub eax 0x6
je r-xdata
sub eax 0x6
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
je r-xdata
dec eax
dec eax
je r-xdata
dec eax
je r-xdata
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
dec eax
je r-xdata
jmp r-xdata
dec eax
jne r-xdata
dec eax
jne r-xdata
jmp r-xdata
push 0xe
jmp r-xdata
sub_429c38
push ebx
push esi
push edi
or ebx 0xffffffff
call sub_426ac9
mov esi eax
call sub_439511
push [ esp + 0x1c ]
mov edi [ eax + 0x4 ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call sub_43a60c
test eax eax
je r-xdata
call sub_43c14f
pop edi
mov eax ebx
pop esi
pop ebx
retn 0x10
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x84 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x54 ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ebx eax
sub_42cfba
mov eax sub_43db5a
call sub_408db8
push esi
call sub_439537
mov esi eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x1c ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_42e816
call sub_42509e
push 0x48
mov ebx eax
call sub_4250b0
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x2
push 0x4
push r--data
call sub_427768
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x1c ] eax
call sub_42509e
pop ebx
sub_42d041
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_42cfba
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_41fb55
mov [ eax ] esi
mov eax [ esi ]
push [ esi + 0x4 ]
mov ecx esi
call [ eax + 0xc ]
push 0x1
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_42d078
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_42cfba
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41fba5
sub_42d0bf
mov eax sub_43db6c
call sub_408db8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_42d078
push eax
call [ DeleteDC@IAT ]
sub_42d113
push ebp
mov ebp esp
sub esp 0x14
push esi
push 0x14
lea eax [ ebp - 0x14 ]
push 0x0
mov esi ecx
push eax
call sub_408d60
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0x14
push [ esi + 0x4 ]
call [ StartDocA@IAT ]
pop esi
leave
retn 0x4
sub_42d14b
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi [ SaveDC@IAT ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push eax
call edi
mov ebx eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
push eax
call edi
test eax eax
je r-xdata
or ebx 0xffffffff
sub_42d17c
push esi
mov esi ecx
push edi
mov edi [ RestoreDC@IAT ]
mov ecx [ esi + 0x4 ]
push 0x1
cmp ecx [ esi + 0x8 ]
pop eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
xor eax eax
push [ esp + 0xc ]
push esi
call edi
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
sub_42d1d1
push ebx
push esi
push edi
mov esi ecx
push [ esp + 0x10 ]
call [ GetStockObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
xor eax eax
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push ebx
push ecx
call edi
push eax
call sub_42e313
pop edi
pop esi
pop ebx
retn 0x4
push ebx
push esi
call edi
sub_42d20d
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_42e313
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_42d253
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_42e313
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_42d299
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_42e313
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_42d2df
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push ecx
call edi
push eax
push esi
call edi
sub_42d346
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetBkColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42d375
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetBkMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42d3a3
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetPolyFillMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42d3d1
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetROP2@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42d3ff
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetStretchBltMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42d42d
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetTextColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42d45c
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetMapMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42d48a
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_42d4d6
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ OffsetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_42d522
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_42d56e
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_42d5c6
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetWindowOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_42d612
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ OffsetWindowOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_42d65e
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_42d6aa
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_42d712
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectClipRgn@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_42d752
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ ExcludeClipRect@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
call edi
sub_42d794
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx [ ExcludeClipRect@IAT ]
push edi
mov edi ecx
xor eax eax
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push ecx
call ebx
pop edi
pop esi
pop ebx
retn 0x4
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push edi
call ebx
sub_42d7d6
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ IntersectClipRect@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
call edi
sub_42d818
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx [ IntersectClipRect@IAT ]
push edi
mov edi ecx
xor eax eax
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push ecx
call ebx
pop edi
pop esi
pop ebx
retn 0x4
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push edi
call ebx
sub_42d85a
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ OffsetClipRgn@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push ecx
call edi
pop edi
pop esi
retn 0x8
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push esi
call edi
sub_42d890
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ OffsetClipRgn@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push ecx
call edi
pop edi
pop esi
retn 0x8
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push esi
call edi
sub_42d8c6
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ MoveToEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_42d912
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esi + 0x4 ]
call [ LineTo@IAT ]
pop esi
retn 0x8
cmp [ esi + 0x4 ] eax
je r-xdata
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
call [ MoveToEx@IAT ]
sub_42d947
push ebx
push esi
mov esi ecx
or ebx 0xffffffff
push edi
mov edi [ SetTextAlign@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0x10 ]
push eax
call edi
pop edi
mov eax ebx
pop esi
pop ebx
retn 0x4
push [ esp + 0x10 ]
push esi
call edi
mov ebx eax
sub_42d97c
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetTextJustification@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push ecx
call edi
pop edi
pop esi
retn 0x8
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push esi
call edi
sub_42d9b2
push esi
mov esi ecx
push edi
mov edi [ SetTextCharacterExtra@IAT ]
mov ecx [ esi + 0x4 ]
mov eax 0x8000000
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42d9e3
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetMapperFlags@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42da12
push esi
mov esi ecx
push r--data
call [ GetModuleHandleA@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x78
or esi 0xffffffff
call [ SetLastError@IAT ]
push [ esi + 0x4 ]
call eax
mov esi eax
jmp r-xdata
mov eax esi
pop esi
retn
sub_42da48
push esi
push edi
mov esi ecx
push r--data
call [ GetModuleHandleA@IAT ]
push r--data
push eax
xor edi edi
call [ GetProcAddress@IAT ]
cmp eax edi
je r-xdata
cmp [ esp + 0xc ] edi
je r-xdata
push [ esp + 0xc ]
push [ esi + 0x4 ]
call eax
mov edi eax
jmp r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push 0x78
or edi 0xffffffff
call [ SetLastError@IAT ]
sub_42da8e
push ebx
push ebp
mov ebp [ ScreenToClient@IAT ]
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
push edi
push [ esi + 0x1c ]
call ebp
lea ebx [ edi + 0x8 ]
push ebx
push [ esi + 0x1c ]
call ebp
mov ecx esi
call sub_425380
test eax __dos_header
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ edi ]
mov ecx [ ebx ]
mov [ edi ] ecx
mov [ ebx ] eax
sub_42daca
push ebx
push ebp
mov ebp [ ClientToScreen@IAT ]
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
push edi
push [ esi + 0x1c ]
call ebp
lea ebx [ edi + 0x8 ]
push ebx
push [ esi + 0x1c ]
call ebp
mov ecx esi
call sub_425380
test eax __dos_header
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ edi ]
mov ecx [ ebx ]
mov [ edi ] ecx
mov [ ebx ] eax
sub_42db06
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push [ ebp + 0x24 ]
mov esi ecx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ ArcTo@IAT ]
mov edi eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn 0x20
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ GetCurrentPositionEx@IAT ]
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ esi + 0x8 ]
call [ MoveToEx@IAT ]
sub_42db5e
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetArcDirection@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42db8c
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push [ ebp + 0x10 ]
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ PolyDraw@IAT ]
mov edi eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn 0xc
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ GetCurrentPositionEx@IAT ]
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ esi + 0x8 ]
call [ MoveToEx@IAT ]
sub_42dbd5
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ PolylineTo@IAT ]
mov edi eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn 0x8
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ GetCurrentPositionEx@IAT ]
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ esi + 0x8 ]
call [ MoveToEx@IAT ]
sub_42dc1b
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetColorAdjustment@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_42dc49
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ PolyBezierTo@IAT ]
mov edi eax
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn 0x8
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call [ GetCurrentPositionEx@IAT ]
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ esi + 0x8 ]
call [ MoveToEx@IAT ]
sub_42dc8f
push esi
mov esi ecx
push [ esp + 0x8 ]
push [ esi + 0x4 ]
call [ SelectClipPath@IAT ]
test eax eax
je r-xdata
pop esi
retn 0x4
mov eax [ esi + 0x4 ]
push ebx
cmp eax [ esi + 0x8 ]
push 0x1
pop ebx
je r-xdata
mov eax ebx
pop ebx
push edi
push 0x0
push 0x0
push 0x0
push 0x0
call [ CreateRectRgn@IAT ]
mov edi eax
push edi
push [ esi + 0x4 ]
call [ GetClipRgn@IAT ]
test eax eax
jl r-xdata
xor ebx ebx
push edi
push [ esi + 0x8 ]
call [ SelectClipRgn@IAT ]
test eax eax
jne r-xdata
push edi
call [ DeleteObject@IAT ]
pop edi
sub_42dced
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ ExtSelectClipRgn@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
test ebx ebx
jne r-xdata
push [ esp + 0x14 ]
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push [ esp + 0x14 ]
push eax
push esi
call edi
sub_42dd35
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov eax 0x20b
push edi
movzx ecx [ esi + 0x4 ]
cmp ecx eax
jg r-xdata
sub ecx 0x20c
je r-xdata
je r-xdata
movsx edx [ esi + 0x6 ]
mov ecx [ ebp + 0x18 ]
push edx
movsx edx [ esi + 0x8 ]
mov eax [ ecx ]
push edx
lea edx [ ebp - 0x40 ]
push edx
call [ eax + 0x48 ]
dec ecx
je r-xdata
movsx eax [ esi + 0x6 ]
push eax
mov ecx [ ebp + 0x18 ]
movsx eax [ esi + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42d5c6
jmp r-xdata
sub ecx 0x1e
je r-xdata
movsx edx [ esi + 0x6 ]
mov ecx [ ebp + 0x18 ]
push edx
movsx edx [ esi + 0x8 ]
mov eax [ ecx ]
push edx
lea edx [ ebp - 0x38 ]
push edx
call [ eax + 0x38 ]
jmp r-xdata
dec ecx
je r-xdata
push 0x1
pop eax
pop edi
pop esi
pop ebx
leave
retn 0x14
mov ecx [ ebp + 0x18 ]
mov eax [ ecx ]
call [ eax + 0x1c ]
jmp r-xdata
sub ecx 0xe5
je r-xdata
movsx edx [ esi + 0x6 ]
mov ecx [ ebp + 0x18 ]
push edx
movsx edx [ esi + 0x8 ]
mov eax [ ecx ]
push edx
lea edx [ ebp - 0x30 ]
push edx
call [ eax + 0x40 ]
jmp r-xdata
sub ecx 0x3
je r-xdata
mov ecx [ ebp + 0x18 ]
movsx edx [ esi + 0x6 ]
mov eax [ ecx ]
push edx
call [ eax + 0x34 ]
jmp r-xdata
sub ecx 0x24
je r-xdata
movsx edx [ esi + 0x6 ]
mov ecx [ ebp + 0x18 ]
push edx
movsx edx [ esi + 0x8 ]
mov eax [ ecx ]
push edx
lea edx [ ebp - 0x28 ]
push edx
call [ eax + 0x3c ]
jmp r-xdata
sub ecx 0x1ff
je r-xdata
mov ecx [ ebp + 0x18 ]
movsx edx [ esi + 0x6 ]
mov eax [ ecx ]
push edx
call [ eax + 0x20 ]
jmp r-xdata
sub ecx 0x6
je r-xdata
movsx edx [ esi + 0x6 ]
push edx
mov ecx [ ebp + 0x18 ]
movsx edx [ esi + 0x8 ]
push edx
mov eax [ ecx ]
movsx edx [ esi + 0xa ]
push edx
movsx edx [ esi + 0xc ]
push edx
lea edx [ ebp - 0x20 ]
push edx
call [ eax + 0x4c ]
jmp r-xdata
dec ecx
dec ecx
je r-xdata
movzx eax [ esi + 0x6 ]
mov ecx [ ebp + 0xc ]
mov edi [ ecx + eax * 4 ]
push edi
mov [ ebp + 0x10 ] edi
call [ GetObjectType@IAT ]
test eax eax
jne r-xdata
sub ecx 0xd4
je r-xdata
movsx edx [ esi + 0x6 ]
push edx
mov ecx [ ebp + 0x18 ]
movsx edx [ esi + 0x8 ]
push edx
mov eax [ ecx ]
movsx edx [ esi + 0xa ]
push edx
movsx edx [ esi + 0xc ]
push edx
lea edx [ ebp - 0x18 ]
push edx
call [ eax + 0x44 ]
jmp r-xdata
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ PlayMetaFileRecord@IAT ]
jmp r-xdata
cmp eax 0x6
jne r-xdata
push 0xd
call [ GetStockObject@IAT ]
mov ebx [ ebp + 0x18 ]
mov edi [ SelectObject@IAT ]
push eax
mov [ ebp - 0x4 ] eax
push [ ebx + 0x4 ]
call edi
push [ ebp + 0x10 ]
mov [ ebp + 0x18 ] eax
push [ ebx + 0x4 ]
call edi
cmp eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
jne r-xdata
mov ecx [ ebp + 0x18 ]
push [ esi + 0x6 ]
mov eax [ ecx ]
call [ eax + 0x2c ]
jmp r-xdata
sub ecx 0x8
jne r-xdata
mov esi [ ebp + 0x18 ]
push edi
mov ebx [ esi ]
call sub_42e313
push eax
mov ecx esi
call [ ebx + 0x28 ]
jmp r-xdata
push [ ebp + 0x18 ]
push [ ebx + 0x4 ]
call edi
push [ ebp - 0x8 ]
push [ ebx + 0x4 ]
call edi
jmp r-xdata
push [ ebp + 0x10 ]
mov esi [ ebx ]
call sub_42e313
push eax
mov ecx ebx
call [ esi + 0x28 ]
jmp r-xdata
mov ecx [ ebp + 0x18 ]
push [ esi + 0x6 ]
mov eax [ ecx ]
call [ eax + 0x30 ]
jmp r-xdata
sub_42df75
push esi
mov esi ecx
push 0x2
push [ esi + 0x4 ]
call [ GetDeviceCaps@IAT ]
cmp eax 0x5
jne r-xdata
push esi
push sub_42dd35
push [ esp + 0x10 ]
push [ esi + 0x4 ]
call [ EnumMetaFile@IAT ]
push [ esp + 0x8 ]
push [ esi + 0x4 ]
call [ PlayMetaFile@IAT ]
jmp r-xdata
pop esi
retn 0x4
sub_42dfae
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x8 ]
push edi
mov esi ecx
push eax
push [ esi + 0x8 ]
call [ GetWindowExtEx@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x8 ]
call [ GetViewportExtEx@IAT ]
push [ ebp - 0x8 ]
call sub_408e11
pop ecx
push eax
push [ ebp - 0x10 ]
call sub_408e11
mov esi [ ebp + 0x8 ]
mov edi [ MulDiv@IAT ]
pop ecx
push eax
push [ esi ]
call edi
push [ ebp - 0x4 ]
mov [ esi ] eax
call sub_408e11
pop ecx
push eax
push [ ebp - 0xc ]
call sub_408e11
pop ecx
push eax
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
pop edi
pop esi
leave
retn 0x4
sub_42e017
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
push [ esi + 0x8 ]
call [ GetWindowExtEx@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x8 ]
call [ GetViewportExtEx@IAT ]
push [ ebp - 0x8 ]
call sub_408e11
pop ecx
push eax
push [ ebp - 0x10 ]
call sub_408e11
mov esi [ ebp + 0x8 ]
mov edi [ MulDiv@IAT ]
pop ecx
push eax
push [ esi ]
call edi
push [ ebp - 0x4 ]
mov [ esi ] eax
call sub_408e11
pop ecx
push eax
push [ ebp - 0xc ]
call sub_408e11
pop ecx
push eax
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
pop edi
pop esi
leave
retn 0x4
sub_42e080
mov eax sub_43db80
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_42cf8a
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
test eax eax
mov [ esi ] r--data
je r-xdata
push eax
mov [ esi + 0x10 ] eax
call [ GetDC@IAT ]
push eax
mov ecx esi
call sub_42d041
test eax eax
jne r-xdata
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_42e551
sub_42e0f2
mov eax sub_43db94
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_42d078
push eax
push [ esi + 0x10 ]
call [ ReleaseDC@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_42d0bf
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_42e134
mov eax sub_43dba8
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_42cf8a
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
test eax eax
mov [ esi ] r--data
je r-xdata
push eax
mov [ esi + 0x10 ] eax
call [ GetWindowDC@IAT ]
push eax
mov ecx esi
call sub_42d041
test eax eax
jne r-xdata
mov eax [ eax + 0x1c ]
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_42e551
sub_42e1a6
mov eax sub_43dbbc
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_42d078
push eax
push [ esi + 0x10 ]
call [ ReleaseDC@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_42d0bf
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_42e1e8
mov eax sub_43dbd0
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_42cf8a
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
lea ecx [ esi + 0x14 ]
mov eax [ eax + 0x1c ]
push ecx
push eax
mov [ esi + 0x10 ] eax
call [ BeginPaint@IAT ]
push eax
mov ecx esi
call sub_42d041
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_42e551
sub_42e25a
mov eax sub_43dbe4
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x14 ]
push eax
push [ esi + 0x10 ]
call [ EndPaint@IAT ]
mov ecx esi
call sub_42d078
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_42d0bf
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_42e2a1
mov eax sub_43dbfa
call sub_408db8
push esi
call sub_439537
mov esi eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x20 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_42e816
call sub_42509e
push 0x48
mov ebx eax
call sub_4250b0
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_427768
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x20 ] eax
call sub_42509e
pop ebx
sub_42e328
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_42e2a1
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_41fb55
push 0x1
mov [ eax ] esi
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_42e355
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_42e2a1
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41fba5
sub_42e395
mov eax sub_43dc0c
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ esi + 0x4 ] 0x0
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreatePen@IAT ]
push eax
mov ecx esi
call sub_42e328
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
call sub_42e551
sub_42e3e5
mov eax sub_43dc20
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ esi + 0x4 ] 0x0
push [ ebp + 0x18 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ExtCreatePen@IAT ]
push eax
mov ecx esi
call sub_42e328
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x14
call sub_42e551
sub_42e43b
mov eax sub_43dc34
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ esi + 0x4 ] 0x0
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call [ CreateSolidBrush@IAT ]
push eax
mov ecx esi
call sub_42e328
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_42e551
sub_42e485
mov eax sub_43dc48
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ esi + 0x4 ] 0x0
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
push [ ebp + 0x8 ]
call [ CreateHatchBrush@IAT ]
push eax
mov ecx esi
call sub_42e328
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
call sub_42e551
sub_42e4d2
mov eax sub_43dc5c
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ esi + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
push [ eax + 0x4 ]
call [ CreatePatternBrush@IAT ]
push eax
mov ecx esi
call sub_42e328
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_42e551
sub_42e51f
push esi
mov esi ecx
push [ esp + 0x8 ]
call [ GlobalLock@IAT ]
push [ esp + 0xc ]
push eax
call [ CreateDIBPatternBrushPt@IAT ]
push eax
mov ecx esi
call sub_42e328
push [ esp + 0x8 ]
mov esi eax
call [ GlobalUnlock@IAT ]
mov eax esi
pop esi
retn 0x8
sub_42e56a
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_408dd7
mov eax [ ecx + 0x1c ]
push 0x0
push 0x0
push 0x10
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
retn
sub_42e596
push ebp
mov ebp esp
sub esp 0x100
lea eax [ ebp - 0x100 ]
push 0x100
push eax
push [ ebp + 0x8 ]
call sub_4273a4
test eax eax
je r-xdata
leave
retn 0x8
push esi
push edi
lea eax [ ebp - 0x100 ]
push 0xa
push eax
call sub_409172
mov edi [ ebp + 0xc ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
lea eax [ ebp - 0x100 ]
push 0x20
add edi 0x1c
push eax
push edi
call [ lstrcpynA@IAT ]
push 0x1
pop eax
pop edi
pop esi
lea eax [ esi + 0x1 ]
push eax
call sub_409bf0
pop ecx
mov [ edi ] eax
push 0x48
push [ rw-data ]
push eax
call [ MulDiv@IAT ]
mov [ edi ] eax
and [ esi ] 0x0
sub_42e60e
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
and eax 0xf
cmp eax [ ebp + 0xc ]
je r-xdata
leave
retn 0x8
lea eax [ ebp - 0xc ]
push 0xa
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
lea eax [ ebp - 0xc ]
push r--data
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
sub_42e658
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp - 0x20 ]
push 0x20
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
leave
retn 0x8
sub_42e683
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp + 0xc ]
push edi
push eax
push [ ebp + 0x8 ]
call [ ClientToScreen@IAT ]
mov edi [ GetWindow@IAT ]
push 0x5
push [ ebp + 0x8 ]
xor eax eax
push esi
call [ GetDlgCtrlID@IAT ]
cmp ax 0xffff
je r-xdata
push 0x2
push esi
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
call edi
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_42e6f8
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov esi eax
mov eax 0x100
cmp esi eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowTextA@IAT ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextA@IAT ]
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x100 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x8
sub_42e769
push ebx
push esi
push edi
call [ GetFocus@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
push 0x3
push esi
call sub_42e60e
mov ebx [ GetParent@IAT ]
test eax eax
jne r-xdata
test edi edi
je r-xdata
push esi
call ebx
mov esi eax
cmp esi edi
je r-xdata
push 0x0
push 0x0
push 0x14f
push esi
call [ SendMessageA@IAT ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
push 0x2
push esi
call sub_42e60e
test eax eax
je r-xdata
push edi
call ebx
mov edi eax
call [ GetDesktopWindow@IAT ]
cmp edi eax
je r-xdata
sub_42e7e0
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x4
push edi
call [ GlobalFlags@IAT ]
and eax 0xff
mov ecx eax
dec eax
test ecx ecx
je r-xdata
push edi
call [ GlobalFree@IAT ]
push esi
lea esi [ eax + 0x1 ]
push edi
call [ GlobalUnlock@IAT ]
dec esi
jne r-xdata
pop esi
sub_42e816
push esi
call sub_439281
mov esi eax
test esi esi
je r-xdata
call sub_41b163
xor eax eax
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_409b20
pop ecx
mov ecx [ esp + 0x8 ]
lea edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
sub eax ecx
sub eax 0x4
push eax
push [ esi + 0xc ]
call sub_409cb5
pop ecx
pop ecx
push [ esi + 0xc ]
call sub_4094a8
and [ esi + 0xc ] 0x0
pop ecx
jmp r-xdata
push 0x1
pop eax
pop esi
retn
sub_42e868
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax 0xff
mov ecx [ esi ]
mov edx [ ecx - 0x8 ]
cmp edx eax
jge r-xdata
mov ecx [ ebp + 0x8 ]
cmp edx 0xfffe
push eax
jge r-xdata
mov ecx [ ebp + 0x8 ]
mov al dl
push eax
call sub_4085a7
jmp r-xdata
call sub_4085a7
mov ecx [ ebp + 0x8 ]
push 0xffff
call sub_4085ca
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
push [ eax - 0x8 ]
call sub_40854f
call sub_4085a7
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
mov ax [ eax - 0x8 ]
push eax
call sub_4085ca
jmp r-xdata
mov esi [ esi ]
mov ecx [ ebp + 0x8 ]
push [ esi - 0x8 ]
push esi
call sub_42ed62
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn 0x8
sub_42e8e1
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
call sub_4085f1
cmp [ ebp - 0x1 ] 0xff
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_408620
cmp [ ebp - 0x4 ] 0xfffe
jne r-xdata
movzx eax [ ebp - 0x1 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0xffff
jne r-xdata
or eax 0xffffffff
jmp r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
call sub_408575
mov eax [ ebp - 0x8 ]
jmp r-xdata
sub_42e938
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor ebx ebx
push [ ebp + 0x8 ]
call sub_42e8e1
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
lea esi [ ebx + 0x1 ]
imul esi [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x1
pop ebx
push [ ebp + 0x8 ]
call sub_42e8e1
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
lea eax [ esi + ebx ]
push eax
mov ecx edi
call sub_424e86
mov ecx [ ebp + 0x8 ]
push esi
push [ edi ]
call sub_42ec53
cmp eax esi
je r-xdata
mov ecx [ ebp + 0xc ]
push 0x0
call sub_424e86
jmp r-xdata
test ebx ebx
je r-xdata
push 0x0
push 0x3
call sub_42f198
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ edi ]
mov ecx [ ebp - 0x4 ]
push eax
and [ eax + ecx * 2 ] 0x0
mov ecx [ rw-data ]
mov [ edi ] ecx
mov ecx edi
lea esi [ eax - 0xc ]
call sub_424b8f
push esi
call sub_4250d9
pop ecx
sub_42e9d0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x14 ]
not eax
test al 0x1
mov eax [ ebp + 0x10 ]
mov ecx eax
je r-xdata
dec eax
test ecx ecx
je r-xdata
dec eax
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
retn 0xc
lea esi [ eax + 0x1 ]
lea esi [ eax + 0x1 ]
push [ ebp + 0xc ]
push edi
call sub_42e938
add [ ebp + 0xc ] 0x4
dec esi
jne r-xdata
push [ ebp + 0xc ]
push edi
call sub_42e868
add [ ebp + 0xc ] 0x4
dec esi
jne r-xdata
jmp r-xdata
sub_42ea1e
push ebp
mov ebp esp
sub esp 0x44
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_408620
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
call sub_408620
cmp [ ebp - 0x2 ] 0x40
jae r-xdata
xor eax eax
movzx eax [ ebp - 0x2 ]
mov ecx [ ebp + 0x8 ]
push eax
movzx esi [ ebp - 0x2 ]
lea eax [ ebp - 0x44 ]
push eax
call sub_42ec53
cmp eax esi
jne r-xdata
and [ ebp + esi - 0x44 ] 0x0
call sub_439511
push 0x0
mov esi eax
call sub_43a141
mov esi [ esi + 0x1c ]
xor esi esi
push [ esi ]
lea eax [ ebp - 0x44 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x8
push 0x0
call sub_43a1b1
mov eax esi
jmp r-xdata
mov esi [ esi + 0x14 ]
jmp r-xdata
test esi esi
je r-xdata
sub_42eaa9
push esi
mov esi ecx
push edi
push [ esi ]
call [ lstrlenA@IAT ]
mov ecx [ esp + 0xc ]
mov edi eax
mov ax [ esi + 0x8 ]
push edi
push eax
call sub_4085ca
mov ecx eax
call sub_4085ca
mov ecx [ esp + 0xc ]
movzx eax di
push eax
push [ esi ]
call sub_42ed62
pop edi
pop esi
retn 0x4
sub_42eae1
mov eax sub_43e4af
call sub_408db8
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ ebx ]
push edi
lea ecx [ esi + 0x10 ]
mov [ ebp - 0x10 ] esi
push ecx
mov ecx ebx
call [ eax + 0x18 ]
mov ecx [ ebp + 0xc ]
or [ esi + 0xc ] 0xffffffff
push 0x1
mov [ esi + 0x14 ] ecx
pop eax
xor edi edi
not ecx
test al cl
mov [ ebp - 0x4 ] edi
mov [ esi + 0x20 ] ebx
mov [ esi + 0x38 ] edi
mov [ esi + 0x34 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] eax
je r-xdata
mov [ esi + 0x3c ] 0x40
mov [ esi + 0x3c ] 0x10
jmp r-xdata
mov [ esi + 0x1c ] ecx
mov [ esi + 0x1c ] eax
mov [ esi + 0x2c ] edi
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x2c ] ecx
mov ecx [ ebp + 0x10 ]
mov eax 0x80
mov [ esi + 0x40 ] 0x89
cmp ecx eax
mov [ esi + 0x8 ] edi
jge r-xdata
mov eax [ esi + 0x2c ]
mov ecx [ ebp + 0x10 ]
add ecx eax
test [ esi + 0x14 ] 0x1
mov [ esi + 0x28 ] ecx
je r-xdata
mov eax [ ebx ]
push edi
push edi
push edi
push 0x3
mov ecx ebx
call [ eax + 0x50 ]
cmp eax edi
mov [ esi + 0x8 ] eax
jne r-xdata
mov eax [ esi + 0x1c ]
cmp [ esi + 0x2c ] edi
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0x24 ] eax
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax ecx
mov [ ebp + 0x10 ] edi
push [ esi + 0x1c ]
call sub_4250b0
pop ecx
mov [ esi + 0x2c ] eax
mov [ esi + 0x18 ] edi
jmp r-xdata
sub_42ebbd
mov eax sub_43e4c7
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov ecx esi
call sub_42ec03
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
test [ esi + 0x14 ] 0x2
jne r-xdata
call sub_42ec45
sub_42ec03
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x18 ] edi
mov [ esi + 0x20 ] edi
jne r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx edi
je r-xdata
push [ esi + 0x2c ]
call sub_4250d9
pop ecx
mov [ esi + 0x2c ] edi
mov [ esi + 0x24 ] edi
mov ecx [ esi + 0x34 ]
mov [ esi + 0x38 ] edi
cmp ecx edi
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ esi + 0x34 ] edi
pop edi
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_42ec53
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
mov eax [ esi + 0x24 ]
push edi
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
xor eax eax
jmp r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_408e20
add [ esi + 0x24 ] edi
add [ ebp + 0x8 ] edi
add esp 0xc
sub ebx edi
je r-xdata
mov edi ebx
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0xc ]
pop edi
sub eax ebx
mov eax ebx
xor edx edx
div [ esi + 0x1c ]
mov edi ebx
sub edi edx
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] edi
sub ebx [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
ja r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
mov ecx [ esi + 0x20 ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
call [ eax + 0x34 ]
add [ ebp + 0x8 ] eax
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
test eax eax
jbe r-xdata
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x28 ]
lea edi [ esi + 0x2c ]
push eax
mov edx [ ecx ]
push edi
push [ esi + 0x1c ]
push 0x0
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] ebx
cmp ebx eax
ja r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_408e20
add [ esi + 0x24 ] edi
add esp 0xc
sub ebx edi
mov edi ebx
mov eax [ esi + 0x2c ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x2c ]
mov [ esi + 0x24 ] eax
lea ecx [ eax + edi ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
cmp edi ebx
jb r-xdata
mov ecx [ esi + 0x20 ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
push [ ebp - 0x8 ]
call [ eax + 0x34 ]
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_42ed62
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
test ebx ebx
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi + 0x24 ]
mov edi [ esi + 0x28 ]
sub edi eax
cmp ebx edi
jae r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_408e20
add [ esi + 0x24 ] edi
add [ ebp + 0x8 ] edi
add esp 0xc
sub ebx edi
je r-xdata
mov edi ebx
mov ecx esi
call sub_42edf2
mov eax ebx
xor edx edx
div [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
mov edi ebx
mov eax [ ecx ]
sub edi edx
push edi
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
add [ ebp + 0x8 ] edi
sub ebx edi
cmp [ esi + 0x8 ] 0x0
je r-xdata
push ebx
push [ ebp + 0x8 ]
push [ esi + 0x24 ]
call sub_408e20
add esp 0xc
add [ esi + 0x24 ] ebx
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x28 ]
lea edi [ esi + 0x2c ]
push eax
mov edx [ ecx ]
push edi
push [ esi + 0x1c ]
push 0x1
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
sub_42edf2
push esi
mov esi ecx
push edi
test [ esi + 0x14 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov edx [ esi + 0x2c ]
push ebx
xor ebx ebx
cmp [ esi + 0x8 ] ebx
lea edi [ esi + 0x2c ]
jne r-xdata
mov edx [ esi + 0x28 ]
mov eax [ esi + 0x24 ]
cmp edx eax
je r-xdata
cmp eax edx
je r-xdata
cmp eax edx
je r-xdata
mov eax [ esi + 0x28 ]
mov [ esi + 0x24 ] eax
jmp r-xdata
mov ecx [ esi + 0x20 ]
sub eax edx
push 0x1
push eax
mov edi [ ecx ]
call [ edi + 0x28 ]
mov ecx [ esi + 0x20 ]
lea edx [ esi + 0x28 ]
push edx
push edi
push [ esi + 0x1c ]
mov eax [ ecx ]
push 0x1
call [ eax + 0x50 ]
mov ecx [ esi + 0x20 ]
push ebp
push ebx
sub eax edx
mov ebp [ ecx ]
push ebx
push eax
push 0x2
call [ ebp + 0x50 ]
pop ebp
mov eax [ edi ]
pop ebx
mov [ esi + 0x24 ] eax
mov ecx [ esi + 0x20 ]
sub eax edx
push eax
push edx
mov ebx [ ecx ]
call [ ebx + 0x38 ]
jmp r-xdata
pop edi
pop esi
retn
sub_42ee6e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
mov eax [ ebp + 0x8 ]
push edi
mov ecx [ esi + 0x24 ]
mov edi [ esi + 0x28 ]
lea ebx [ esi + 0x28 ]
sub edi ecx
add eax edi
cmp [ esi + 0x8 ] 0x0
mov [ ebp - 0x8 ] eax
jne r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x2c ]
cmp ecx eax
jbe r-xdata
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x2c ]
push ebx
push edi
push [ esi + 0x1c ]
mov eax [ ecx ]
push 0x0
call [ eax + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x24 ] eax
mov ecx [ esi + 0x20 ]
push 0x1
neg edi
mov eax [ ecx ]
push edi
call [ eax + 0x28 ]
mov eax [ esi + 0x28 ]
pop edi
sub eax [ esi + 0x24 ]
pop esi
pop ebx
cmp eax [ ebp - 0x8 ]
jae r-xdata
test edi edi
jle r-xdata
leave
retn 0x4
push 0x0
push 0x3
call sub_42f198
mov ebx [ esi + 0x1c ]
mov [ ebp - 0x4 ] edi
sub ebx edi
add edi eax
push edi
push ecx
push eax
call sub_409d30
mov eax [ esi + 0x2c ]
add esp 0xc
mov [ esi + 0x24 ] eax
lea ecx [ eax + edi ]
mov [ ebx ] ecx
mov eax [ esi + 0x2c ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x24 ] eax
add eax ecx
mov [ esi + 0x28 ] eax
jmp r-xdata
test ebx ebx
jbe r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov ecx [ esi + 0x20 ]
push ebx
push edi
mov eax [ ecx ]
call [ eax + 0x34 ]
add [ ebp - 0x4 ] eax
add edi eax
sub ebx eax
test eax eax
jbe r-xdata
sub_42ef30
push esi
push edi
mov edi [ esp + 0xc ]
mov eax 0xffff
cmp edi eax
mov esi ecx
jae r-xdata
push eax
mov ecx esi
call sub_4085ca
push edi
mov ecx esi
call sub_40854f
push edi
call sub_4085ca
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_42ef5e
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x2 ]
push esi
mov esi ecx
push eax
call sub_408620
cmp [ ebp - 0x2 ] 0xffff
je r-xdata
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
call sub_408575
mov eax [ ebp - 0x8 ]
movzx eax [ ebp - 0x2 ]
jmp r-xdata
pop esi
leave
retn
sub_42efab
mov eax sub_43e4d4
call sub_408db8
sub esp 0x14
push ebx
mov ebx [ ebp + 0xc ]
push esi
xor esi esi
push edi
cmp ebx esi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
jge r-xdata
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] esi
neg ebx
and [ esi + edi ] 0x0
mov eax edi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
mov ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x11 ]
push eax
call sub_4085f1
mov al [ ebp - 0x11 ]
cmp al 0xa
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp al 0xd
je r-xdata
mov [ esi + edi ] al
inc esi
jmp r-xdata
mov ecx [ ebp - 0x1c ]
lea eax [ ebp - 0x11 ]
push eax
call sub_4085f1
mov al [ ebp - 0x11 ]
mov [ esi + edi ] al
inc esi
mov [ ebp - 0x18 ] esi
jmp r-xdata
cmp esi ebx
jge r-xdata
sub_42f013
mov ecx [ ebp - 0x20 ]
cmp [ ecx + 0x8 ] 0x3
jne r-xdata
push 0x0
push 0x0
call sub_408dd7
mov edi [ ebp + 0x8 ]
mov esi [ ebp - 0x18 ]
and [ esi + edi ] 0x0
mov eax edi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x8
call sub_427571
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax r-xdata
retn
mov eax r-xdata
retn
sub_42f05d
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov ebp ecx
push rw-data
mov ecx edi
call sub_424b68
push 0x80
mov ecx edi
call sub_424e0f
mov esi eax
push 0x0
mov ecx edi
call sub_424e0f
mov ecx [ edi ]
mov ecx [ ecx - 0x8 ]
test ecx ecx
je r-xdata
push esi
call [ lstrlenA@IAT ]
cmp eax 0x80
jl r-xdata
xor eax eax
pop edi
test ebx ebx
pop esi
pop ebp
setne al
pop ebx
retn 0x4
cmp [ ecx + eax - 0x1 ] 0xa
jne r-xdata
cmp [ eax + esi - 0x1 ] 0xa
je r-xdata
dec ecx
push ecx
mov ecx edi
call sub_424e86
mov eax [ edi ]
mov ecx edi
mov ebx [ eax - 0x8 ]
lea eax [ ebx + 0x80 ]
push eax
call sub_424e0f
mov esi eax
add esi ebx
jmp r-xdata
push 0xffffff80
push esi
mov ecx ebp
call sub_42efab
push 0xffffffff
mov ecx edi
mov ebx eax
call sub_424e5e
test ebx ebx
je r-xdata
sub_42f0f8
mov eax sub_43e4f0
call sub_408db8
push ecx
mov eax [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
test eax eax
mov edi 0xf1b0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0xc ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_424754
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx edi
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push [ ebp + 0x10 ]
add eax edi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43239f
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ lstrcpynA@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
call sub_4249df
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
push 0x1
pop eax
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_427320
sub_42f198
mov eax sub_43e518
call sub_408db8
push ecx
push ecx
push esi
push 0x10
call sub_4250b0
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_42755b
mov eax [ rw-data ]
lea ecx [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
call sub_424b68
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x10 ]
push r--data
push eax
mov [ ebp - 0x10 ] esi
call sub_408dd7
pop esi
int3
sub_430b04
push esi
lea esi [ ecx + 0x84 ]
push edi
mov [ esi ] 0x1
call sub_408030
mov edi eax
mov ecx edi
call sub_431b2a
mov eax [ edi + 0x50 ]
push 0x0
push 0x0
push 0x36a
mov [ esi ] eax
push [ edi + 0x1c ]
call [ PostMessageA@IAT ]
pop edi
pop esi
retn
sub_430b3a
push esi
push edi
mov esi ecx
xor edi edi
push edi
mov ecx [ esi + 0x1c ]
call sub_425541
mov eax [ esi + 0x1c ]
push edi
push [ eax + 0x1c ]
call [ ShowOwnedPopups@IAT ]
mov ecx [ esi + 0x1c ]
push 0x13
push edi
push edi
push edi
push edi
push rw-data
call sub_4254f2
pop edi
pop esi
retn
sub_430b6c
push esi
push edi
mov esi ecx
push 0x2
call sub_43a141
mov edi [ esp + 0xc ]
add [ esi + 0xa0 ] edi
mov eax [ esi + 0xa0 ]
test eax eax
jle r-xdata
push [ esi + 0xa4 ]
and [ esi + 0xa0 ] 0x0
call [ SetCursor@IAT ]
push [ rw-data ]
call [ SetCursor@IAT ]
test edi edi
jle r-xdata
push 0x2
call sub_43a1b1
pop edi
pop esi
retn 0x4
cmp [ esi + 0xa0 ] 0x1
jne r-xdata
mov [ esi + 0xa4 ] eax
jmp r-xdata
sub_430c58
mov eax [ esp + 0x4 ]
push esi
lea esi [ ecx + 0xa8 ]
push edi
lea edi [ eax - 0xe110 ]
mov edx [ ecx ]
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov eax [ eax + edi * 4 ]
push eax
call [ edx + 0x7c ]
test eax eax
jne r-xdata
push 0x1
pop eax
pop edi
pop esi
retn 0x4
mov ecx [ esi ]
push edi
mov eax [ ecx ]
call [ eax ]
sub_430c8b
push esi
call sub_408030
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x64 ]
sub_430cb9
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
push edi
xor ebx ebx
mov edi ecx
push ebx
mov [ ebp - 0x10 ] edi
call sub_430c8b
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_430e31
xor esi esi
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
cmp edi ebx
je r-xdata
push ebx
push ebx
push 0x376
push [ ebp - 0x4 ]
call [ SendMessageA@IAT ]
cmp eax ebx
je r-xdata
cmp esi ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
lea esi [ edi + 0x9c ]
mov esi eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
test bl 0xf0
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
test edi edi
je r-xdata
mov eax ebx
and eax 0xf
cmp eax 0x1
jbe r-xdata
add eax 0x30000
mov [ esi ] eax
lea eax [ ebp - 0x114 ]
push 0x104
push eax
push 0x0
lea edi [ ebp - 0x114 ]
call [ GetModuleFileNameA@IAT ]
mov edi [ edi + 0x78 ]
jmp r-xdata
or ebx 0x30
cmp eax 0x2
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
push ebx
push edi
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call [ MessageBoxA@IAT ]
test esi esi
mov edi eax
je r-xdata
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x10 ]
push 0x1
call sub_430c8b
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x1
push [ ebp - 0x4 ]
call [ EnableWindow@IAT ]
sub_430da0
push ebp
mov ebp esp
call sub_439511
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
xor ecx ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_430cb9
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x8c ]
jmp r-xdata
pop ebp
retn 0xc
sub_430dd8
mov eax sub_43df2c
call sub_408db8
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_427320
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
push esi
push eax
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
call sub_430da0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_4249df
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov eax [ ebp + 0x8 ]
sub_430e31
push ebx
mov ebx [ GetParent@IAT ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
test ebp ebp
mov esi ebp
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
call sub_430ed9
test eax eax
jne r-xdata
test esi esi
mov edi esi
mov eax esi
je r-xdata
push esi
call ebx
mov esi eax
jmp r-xdata
mov esi [ eax + 0x1c ]
call sub_408030
test eax eax
jne r-xdata
test ebp ebp
jne r-xdata
push eax
mov edi eax
call ebx
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor esi esi
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
test edi edi
je r-xdata
push esi
call [ GetLastActivePopup@IAT ]
mov esi eax
and [ ebx ] 0x0
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push 0x0
push edi
mov [ ebx ] edi
call [ EnableWindow@IAT ]
jmp r-xdata
sub_430efc
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_42518f
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x4
call sub_41b17c
sub_430f2b
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
call sub_42e56a
pop esi
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call [ SetFocus@IAT ]
cmp [ esi + 0xc ] 0x0
je r-xdata
push 0xffffffff
push 0x0
push 0xb1
push [ esi + 0x8 ]
call [ SendMessageA@IAT ]
sub_430f60
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
inc eax
push esi
xor esi esi
mov cl [ eax ]
cmp cl 0x6c
je r-xdata
inc eax
cmp cl 0x73
jne r-xdata
inc ecx
mov [ ebp + 0x8 ] ecx
jmp r-xdata
cmp dl 0x9
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
pop esi
mov dl [ ecx ]
cmp dl 0x20
je r-xdata
cmp [ eax ] 0x64
mov bl [ ecx ]
jne r-xdata
cmp bl 0x2d
je r-xdata
lea eax [ ebp + 0x8 ]
push 0xa
push eax
push ecx
call sub_4098ed
jmp r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp + 0x8 ]
push 0xa
push eax
push ecx
call sub_409b09
add esp 0xc
test eax eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
cmp bl 0x30
jne r-xdata
inc ecx
mov [ ebp + 0x8 ] ecx
jmp r-xdata
cmp dl 0x9
jne r-xdata
mov dl [ ecx ]
cmp dl 0x20
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
test esi esi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx ]
mov [ ecx ] eax
movsx ecx ax
cmp ecx eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx ]
mov [ ecx ] ax
jmp r-xdata
push 0x1
pop eax
sub_431005
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
push [ ebp + 0xc ]
call sub_430ee5
cmp [ esi ] 0x0
mov edi eax
je r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push eax
call [ wvsprintfA@IAT ]
lea eax [ ebp - 0x20 ]
push eax
push edi
call sub_42e6f8
lea eax [ ebp - 0x20 ]
push 0x20
push eax
push edi
call [ GetWindowTextA@IAT ]
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push eax
call sub_430f60
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
push 0xffffffff
push eax
push [ ebp + 0x14 ]
call sub_430dd8
mov ecx esi
call sub_430f2b
jmp r-xdata
sub_431075
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
movzx eax [ ebx ]
cmp [ edi ] 0x0
mov [ ebp + 0x10 ] eax
je r-xdata
push eax
push 0xf116
push r--data
push [ ebp + 0xc ]
push edi
call sub_431005
add esp 0x14
push esi
lea eax [ ebp + 0x10 ]
mov esi 0xf116
push eax
push esi
push r--data
push [ ebp + 0xc ]
push edi
call sub_431005
add esp 0x14
cmp [ ebp + 0x10 ] 0xff
jle r-xdata
mov al [ ebp + 0x10 ]
pop esi
mov [ ebx ] al
jmp r-xdata
push 0xffffffff
push 0x0
push esi
call sub_430dd8
mov ecx edi
call sub_430f2b
pop edi
pop ebx
pop ebp
retn 0xc
sub_4310e6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
movsx ecx [ ecx ]
push ecx
push 0xf110
push r--data
push [ ebp + 0x10 ]
push 0xf110
push r--data
jmp r-xdata
push [ ebp + 0xc ]
push eax
call sub_431005
add esp 0x14
pop ebp
retn 0xc
sub_431121
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
push [ ecx ]
push [ ebp + 0x10 ]
jmp r-xdata
push 0xf110
push r--data
push [ ebp + 0xc ]
push eax
call sub_431005
add esp 0x14
pop ebp
retn 0xc
sub_431150
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
push [ ecx ]
push [ ebp + 0x10 ]
jmp r-xdata
push 0xf117
push r--data
push [ ebp + 0xc ]
push eax
call sub_431005
add esp 0x14
pop ebp
retn 0xc
sub_43117f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
push [ ecx ]
push [ ebp + 0x10 ]
jmp r-xdata
push 0xf110
push r--data
push [ ebp + 0xc ]
push eax
call sub_431005
add esp 0x14
pop ebp
retn 0xc
sub_4311ae
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
push [ ecx ]
push [ ebp + 0x10 ]
jmp r-xdata
push 0xf117
push r--data
push [ ebp + 0xc ]
push eax
call sub_431005
add esp 0x14
pop ebp
retn 0xc
sub_4311dd
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx edi
call sub_430ee5
cmp [ edi ] 0x0
mov esi eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ eax ]
push esi
call sub_42e6f8
push esi
call [ GetWindowTextLengthA@IAT ]
lea ecx [ eax + 0x1 ]
push ecx
mov ecx [ ebp + 0x10 ]
push eax
call sub_424e86
push eax
push esi
call [ GetWindowTextA@IAT ]
mov ecx [ ebp + 0x10 ]
push 0xffffffff
call sub_424e5e
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_43122f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
push [ ebp + 0xc ]
call sub_430ee5
cmp [ esi ] 0x0
mov edi eax
je r-xdata
push [ ebp + 0x10 ]
push edi
call sub_42e6f8
push edi
call [ GetWindowTextLengthA@IAT ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
call [ GetWindowTextA@IAT ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x10
sub_43126d
push esi
mov esi [ esp + 0x8 ]
push edi
mov ecx esi
push [ esp + 0x10 ]
call sub_430efc
xor edi edi
cmp [ esi ] edi
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
cmp edx edi
jl r-xdata
push edi
push edi
push 0xf0
push eax
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov [ ecx ] edi
cmp edx 0x2
jle r-xdata
pop edi
pop esi
retn 0xc
push edi
push [ ecx ]
push 0xf1
push eax
call [ SendMessageA@IAT ]
sub_4312bf
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
push [ esp + 0x18 ]
mov ecx edi
call sub_430efc
xor ebp ebp
mov esi eax
cmp [ edi ] ebp
je r-xdata
mov edi [ SendMessageA@IAT ]
xor ebx ebx
mov eax [ esp + 0x1c ]
or [ eax ] 0xffffffff
push 0x2
push esi
call [ GetWindow@IAT ]
mov esi eax
cmp esi ebp
je r-xdata
mov eax [ esp + 0x14 ]
push ebp
cmp [ eax ] ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x20000
je r-xdata
mov ecx [ esp + 0x20 ]
xor eax eax
cmp ebx [ ecx ]
sete al
push eax
push 0xf1
push esi
call edi
push ebp
push 0xf0
push esi
call edi
test eax eax
je r-xdata
push ebp
push ebp
push 0x87
push esi
call edi
test al 0x40
je r-xdata
inc ebx
mov eax [ esp + 0x1c ]
mov [ eax ] ebx
jmp r-xdata
sub_431350
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx esi
call sub_430efc
mov ebx eax
xor eax eax
cmp [ esi ] eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ eax ]
push 0xffffffff
push 0x18c
push ebx
call [ SendMessageA@IAT ]
mov esi [ SendMessageA@IAT ]
push edi
push eax
push eax
push 0x188
push ebx
call esi
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_42496a
push 0x0
push edi
push 0x18a
push ebx
call esi
mov ecx [ ebp + 0x10 ]
push eax
call sub_424e86
push eax
push edi
push 0x189
push ebx
call esi
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
push 0xffffffff
call sub_424e5e
pop edi
jmp r-xdata
sub_4313d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
push [ ebp + 0xc ]
call sub_430efc
cmp [ esi ] 0x0
mov edi eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ SendMessageA@IAT ]
push [ eax ]
push 0xffffffff
push 0x1a2
push edi
call esi
test eax eax
jl r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_431350
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push 0x0
push eax
push 0x186
push edi
call esi
sub_431421
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
push [ ebp + 0xc ]
call sub_430efc
cmp [ esi ] 0x0
mov edi eax
je r-xdata
mov esi [ ebp + 0x10 ]
push [ esi ]
push 0xffffffff
push 0x14d
push edi
call [ SendMessageA@IAT ]
cmp eax 0xffffffff
jne r-xdata
push edi
call [ GetWindowTextLengthA@IAT ]
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push [ esi ]
push edi
call sub_42e6f8
mov ecx [ ebp + 0x10 ]
push 0x100
push 0xff
call sub_424e0f
lea ecx [ eax + 0x1 ]
push ecx
mov ecx [ ebp + 0x10 ]
push eax
call sub_424e86
jmp r-xdata
push eax
push edi
call [ GetWindowTextA@IAT ]
mov ecx [ ebp + 0x10 ]
push 0xffffffff
call sub_424e5e
jmp r-xdata
sub_4314a0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
mov ecx esi
call sub_430efc
cmp [ esi ] 0x0
mov ebx eax
je r-xdata
mov edi [ ebp + 0x10 ]
mov esi [ SendMessageA@IAT ]
push [ edi ]
push 0xffffffff
push 0x158
push ebx
call esi
test eax eax
jge r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_431421
jmp r-xdata
push 0x0
push eax
push 0x14e
push ebx
call esi
push [ edi ]
push ebx
call sub_42e6f8
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4314fd
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
mov ecx esi
call sub_430efc
xor ecx ecx
cmp [ esi ] ecx
pop esi
push ecx
je r-xdata
mov ecx [ esp + 0x10 ]
push [ ecx ]
push 0x186
push eax
call [ SendMessageA@IAT ]
push ecx
push 0x188
push eax
call [ SendMessageA@IAT ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
retn 0xc
sub_43153f
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
mov ecx esi
call sub_430efc
xor ecx ecx
cmp [ esi ] ecx
pop esi
push ecx
je r-xdata
mov ecx [ esp + 0x10 ]
push [ ecx ]
push 0x14e
push eax
call [ SendMessageA@IAT ]
push ecx
push 0x147
push eax
call [ SendMessageA@IAT ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
retn 0xc
sub_431581
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
mov ecx esi
call sub_430efc
cmp [ esi ] 0x0
pop esi
je r-xdata
mov ecx [ esp + 0xc ]
push 0x1
push [ ecx ]
push 0x2
push eax
call [ SetScrollPos@IAT ]
push 0x2
push eax
call [ GetScrollPos@IAT ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
retn 0xc
sub_4315bc
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
mov ecx esi
call sub_430efc
xor ecx ecx
cmp [ esi ] ecx
pop esi
je r-xdata
mov ecx [ esp + 0xc ]
push [ ecx ]
push 0x1
push 0x405
push eax
call [ SendMessageA@IAT ]
push ecx
push ecx
push 0x400
push eax
call [ SendMessageA@IAT ]
mov ecx [ esp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
retn 0xc
sub_431600
mov eax sub_43dfec
call sub_408db8
sub esp 0x40
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn 0x14
push esi
mov esi [ wsprintfA@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x4c ]
push [ ebp + 0x14 ]
push eax
call esi
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2c ]
push [ ebp + 0x14 ]
push eax
call esi
mov eax [ rw-data ]
add esp 0x18
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x2c ]
and [ ebp - 0x4 ] 0x0
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push eax
call sub_4323b6
push [ ebp + 0x18 ]
push 0x30
push [ ebp + 0x8 ]
call sub_430da0
lea ecx [ ebp + 0x8 ]
call sub_42496a
mov ecx edi
call sub_430f2b
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_4249df
pop esi
sub_431690
push ebp
mov ebp esp
mov al [ ebp + 0xc ]
cmp al [ ebp + 0x10 ]
jb r-xdata
movzx eax [ ebp + 0x14 ]
push 0xf112
push r--data
push eax
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_431600
cmp al [ ebp + 0x14 ]
jbe r-xdata
pop ebp
retn 0x10
sub_4316c0
push ebp
mov ebp esp
mov ax [ ebp + 0xc ]
cmp ax [ ebp + 0x10 ]
jl r-xdata
movsx eax [ ebp + 0x14 ]
push 0xf112
push r--data
push eax
movsx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_431600
cmp ax [ ebp + 0x14 ]
jle r-xdata
pop ebp
retn 0x10
sub_4316f3
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jl r-xdata
push 0xf112
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_431600
cmp eax [ ebp + 0x14 ]
jle r-xdata
pop ebp
retn 0x10
sub_43171f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jl r-xdata
push 0xf112
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_431600
cmp eax [ ebp + 0x14 ]
jle r-xdata
pop ebp
retn 0x10
sub_43174b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
push 0xf112
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_431600
cmp eax [ ebp + 0x14 ]
jbe r-xdata
pop ebp
retn 0x10
sub_431777
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
push 0xf112
push r--data
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_431600
cmp eax [ ebp + 0x14 ]
jbe r-xdata
pop ebp
retn 0x10
sub_4317a3
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx ] 0x0
jne r-xdata
push esi
push edi
push [ ebp + 0x10 ]
mov esi [ SendMessageA@IAT ]
mov edi 0x407
push 0x0
push edi
push [ ebx + 0x8 ]
call esi
push [ ebp + 0x14 ]
push 0x1
push edi
push [ ebx + 0x8 ]
call esi
pop edi
pop esi
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x14 ] eax
jb r-xdata
sub_4317e6
mov eax sub_43e000
call sub_408db8
sub esp 0x20
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi ] esi
je r-xdata
mov eax [ edi + 0x8 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax - 0x8 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
cmp [ edi + 0xc ] esi
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2c ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov eax [ rw-data ]
add esp 0xc
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] esi
push eax
mov esi 0xf114
lea eax [ ebp + 0x10 ]
push esi
push eax
call sub_43239f
push esi
push 0x30
push [ ebp + 0x10 ]
call sub_430da0
lea ecx [ ebp + 0x10 ]
call sub_42496a
mov ecx edi
call sub_430f2b
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x10 ]
call sub_4249df
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push 0xc5
push eax
call [ SendMessageA@IAT ]
sub_431892
push esi
push edi
mov edi [ esp + 0x14 ]
cmp [ edi + 0x1c ] 0x0
jne r-xdata
pop edi
pop esi
retn 0xc
mov esi [ esp + 0xc ]
push [ esp + 0x10 ]
mov ecx esi
call sub_430efc
push eax
mov ecx edi
call sub_42466d
test eax eax
jne r-xdata
push [ edi + 0x1c ]
mov esi [ esi + 0x4 ]
call [ GetParent@IAT ]
cmp [ esi + 0x1c ] eax
je r-xdata
call sub_41b17c
jmp r-xdata
push esi
mov ecx edi
call sub_4256c8
sub_4318de
mov eax sub_43e014
call sub_408db8
sub esp 0x20
push esi
lea eax [ ebp - 0x2c ]
push [ ebp + 0xc ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov eax [ rw-data ]
add esp 0xc
mov [ ebp + 0xc ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
mov esi 0xf114
lea eax [ ebp + 0xc ]
push esi
push eax
call sub_43239f
push esi
push 0x30
push [ ebp + 0xc ]
call sub_430da0
lea ecx [ ebp + 0xc ]
call sub_42496a
mov ecx [ ebp + 0x8 ]
call sub_430f2b
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_4249df
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_431956
mov eax sub_43e028
call sub_408db8
push ecx
mov eax [ rw-data ]
push esi
mov [ ebp - 0x10 ] eax
xor eax eax
mov esi 0xf115
push eax
mov [ ebp - 0x4 ] eax
push eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_432266
push esi
push 0x30
push [ ebp - 0x10 ]
call sub_430da0
lea ecx [ ebp - 0x10 ]
call sub_42496a
mov ecx [ ebp + 0x8 ]
call sub_430f2b
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_4319b6
push ecx
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] ecx
call [ GetCapture@IAT ]
mov esi [ SendMessageA@IAT ]
mov edi eax
xor ebp ebp
mov ebx 0x365
cmp edi ebp
je r-xdata
call [ GetFocus@IAT ]
push ebp
push ebp
push ebx
push edi
call esi
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
call sub_422d9d
cmp eax ebp
jne r-xdata
push ebp
push ebp
push ebx
push edi
call esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push edi
call sub_422d58
mov edi eax
cmp edi ebp
jne r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
push edi
call sub_422d58
jmp r-xdata
mov eax [ esp + 0x14 ]
push 0xe147
push 0x111
push [ eax + 0x1c ]
call esi
push ebp
push ebx
push edi
call esi
test eax eax
jne r-xdata
push eax
call [ GetLastActivePopup@IAT ]
mov edi eax
cmp edi ebp
je r-xdata
push edi
call sub_422d58
jmp r-xdata
mov edi eax
push ebp
cmp edi ebp
je r-xdata
sub_431a58
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov ecx esi
call sub_4319b6
cmp eax 0x3f107
je r-xdata
pop esi
retn
call sub_439511
mov eax [ eax + 0x4 ]
push 0x1
push [ esi + 0x4c ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x98 ]
pop esi
retn
sub_431ad0
push ecx
push ecx
cmp [ rw-data ] 0x0
push esi
push edi
mov edi ecx
jne r-xdata
mov eax [ edi ]
lea ecx [ esp + 0x8 ]
push ecx
push 0x0
push 0x0
push 0xe145
mov ecx edi
call [ eax + 0xc ]
mov esi [ LoadCursorA@IAT ]
push 0x7f8b
push 0x0
call esi
test eax eax
mov [ rw-data ] eax
jne r-xdata
call sub_439511
mov eax [ eax + 0xc ]
push 0x7901
push eax
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ecx
pop ecx
retn
sub_431b2a
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
push 0x1
mov esi ecx
pop ebx
cmp [ esi + 0x50 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_431ad0
test eax eax
je r-xdata
mov eax 0x367
push 0x3
push eax
push eax
push [ esi + 0x1c ]
lea eax [ ebp - 0x34 ]
push eax
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
mov edi [ esi + 0x50 ]
mov [ esi + 0x50 ] ebx
xor ebx ebx
cmp edi 0x2
je r-xdata
cmp edi ebx
push ebx
jne r-xdata
mov ecx [ esi + 0x68 ]
cmp ecx ebx
je r-xdata
push 0xe002
push 0x362
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
cmp eax ebx
mov [ ebp - 0xc ] eax
jne r-xdata
push 0xe145
push 0x111
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
mov [ esi + 0x50 ] 0x2
jmp r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x60 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] ebx
push eax
call [ GetCursorPos@IAT ]
push ebx
mov ecx esi
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call sub_431cd2
mov [ ebp - 0x4 ] ebx
call sub_439511
mov edi [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xe001
mov ecx [ esi + 0x68 ]
push ebx
mov eax [ ecx ]
call [ eax + 0x60 ]
mov [ esi + 0x50 ] ebx
jmp r-xdata
mov edi [ ReleaseCapture@IAT ]
mov [ esi + 0x50 ] ebx
call edi
push [ esi + 0x1c ]
call [ SetCapture@IAT ]
push eax
call sub_42166a
call edi
push ebx
mov edi [ SendMessageA@IAT ]
push [ ebp - 0xc ]
push 0x362
push [ esi + 0x1c ]
call edi
mov ecx [ esi + 0x68 ]
cmp ecx ebx
je r-xdata
push ebx
push ebx
push ebx
lea eax [ ebp - 0x34 ]
push ebx
push eax
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov edx [ edi ]
inc [ ebp - 0x4 ]
push eax
mov ecx edi
call [ edx + 0x60 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_431e9b
test eax eax
je r-xdata
push ebx
push ebx
push 0x36a
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
cmp [ esi + 0x50 ] ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
call [ WaitMessage@IAT ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
push 0x1
push [ ebp - 0x8 ]
mov eax [ ecx ]
call [ eax + 0x98 ]
push ebx
push 0xe147
push 0x111
push [ esi + 0x1c ]
call edi
jmp r-xdata
sub_431cd2
push ebp
mov ebp esp
sub esp 0x10
push edi
xor edi edi
cmp [ ecx + 0x50 ] edi
mov [ ebp - 0x4 ] ecx
jne r-xdata
push esi
call [ GetCapture@IAT ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
call [ WindowFromPoint@IAT ]
push eax
call sub_42166a
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ eax + 0x1c ]
xor esi esi
jmp r-xdata
pop edi
leave
retn 0xc
test ebx ebx
je r-xdata
push edi
push esi
call [ GetWindowThreadProcessId@IAT ]
mov edi eax
push ebx
mov ecx eax
call sub_422d9d
mov [ ebp - 0x10 ] eax
call [ GetActiveWindow@IAT ]
push eax
call sub_42166a
mov ecx eax
call sub_422d9d
mov ebx eax
mov [ ebp - 0xc ] edi
call [ GetCurrentThreadId@IAT ]
cmp esi edi
mov [ ebp + 0xc ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ecx + 0x1c ]
jne r-xdata
call [ GetDesktopWindow@IAT ]
cmp esi eax
je r-xdata
push [ rw-data ]
call [ ReleaseCapture@IAT ]
test esi esi
je r-xdata
mov eax esi
pop esi
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
cmp [ ebp + 0xc ] edi
je r-xdata
cmp [ ebp + 0xc ] edi
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ecx + 0x1c ]
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
push esi
push [ eax + 0x1c ]
call sub_434b7c
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
pop ebx
test eax eax
je r-xdata
call [ ReleaseCapture@IAT ]
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp [ ebp - 0x8 ] eax
je r-xdata
xor esi esi
jmp r-xdata
push [ rw-data ]
jmp r-xdata
push eax
call [ SetCapture@IAT ]
call [ SetCursor@IAT ]
sub_431de8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push edi
mov edi [ ScreenToClient@IAT ]
push eax
push esi
call edi
movzx eax [ ebp + 0x10 ]
movzx ecx [ ebp + 0xc ]
mov ebx [ SendMessageA@IAT ]
shl eax 0x10
or eax ecx
push eax
push 0x0
push 0x366
push esi
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
call [ GetParent@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
or eax 0xffffffff
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
lea eax [ ebp + 0xc ]
push eax
push esi
call edi
movzx eax [ ebp + 0x10 ]
movzx ecx [ ebp + 0xc ]
shl eax 0x10
or eax ecx
push eax
push 0x0
push 0x366
push esi
jmp r-xdata
call ebx
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0xc ]
push eax
push esi
call [ ClientToScreen@IAT ]
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
sub_431e9b
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x4 ] ecx
mov eax [ esi + 0x4 ]
cmp eax 0x367
je r-xdata
push 0x1
push eax
push eax
push 0x0
mov ecx 0x100
cmp eax ecx
jne r-xdata
mov ebx 0x200
cmp eax ebx
jb r-xdata
cmp [ esi + 0x8 ] 0x1b
je r-xdata
cmp eax 0xa0
jb r-xdata
cmp eax 0x209
jbe r-xdata
cmp eax 0x112
je r-xdata
cmp eax 0xa9
ja r-xdata
lea eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
push [ esi + 0x18 ]
push [ esi + 0x14 ]
call sub_431cd2
mov ebx eax
xor edi edi
cmp ebx edi
je r-xdata
call [ GetCapture@IAT ]
mov edi [ PeekMessageA@IAT ]
test eax eax
je r-xdata
cmp eax ecx
jb r-xdata
push 0x1
pop eax
jmp r-xdata
cmp [ ebp + 0x8 ] edi
mov eax [ esi + 0x4 ]
je r-xdata
mov eax [ esi + 0x4 ]
xor ebx ebx
push ebx
push eax
push eax
push ebx
push esi
call edi
test eax eax
je r-xdata
call [ ReleaseCapture@IAT ]
push 0x1
push eax
push eax
push 0x0
push esi
call [ PeekMessageA@IAT ]
test eax eax
je r-xdata
cmp eax 0x108
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push 0x1
push eax
push eax
push edi
push esi
call [ PeekMessageA@IAT ]
jmp r-xdata
cmp eax 0x201
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetCursorPos@IAT ]
push ebx
mov eax [ esi + 0x4 ]
push eax
push eax
push ebx
push esi
call [ GetMessageA@IAT ]
mov ecx [ ebp - 0x4 ]
push esi
mov eax [ ecx ]
call [ eax + 0x90 ]
test eax eax
jne r-xdata
push 0x3
push 0x209
push ebx
lea eax [ ebp - 0x28 ]
push 0x0
push eax
call edi
test eax eax
jne r-xdata
push esi
call [ DispatchMessageA@IAT ]
jmp r-xdata
movzx eax [ esi + 0x18 ]
movzx ecx [ esi + 0x14 ]
shl eax 0x10
or eax ecx
push eax
push edi
push 0x84
push ebx
call [ SendMessageA@IAT ]
cmp eax 0x5
je r-xdata
push 0x1
pop ebx
jmp r-xdata
push esi
call [ TranslateMessage@IAT ]
mov eax [ esi + 0x4 ]
cmp eax 0x112
je r-xdata
call [ ReleaseCapture@IAT ]
mov eax 0xa1
push eax
push eax
push edi
push esi
call [ GetMessageA@IAT ]
push esi
call [ DispatchMessageA@IAT ]
lea eax [ ebp - 0xc ]
push eax
call [ GetCursorPos@IAT ]
push edi
jmp r-xdata
cmp eax 0x3
je r-xdata
push 0x1
push eax
push eax
push edi
push esi
call [ PeekMessageA@IAT ]
mov eax ebx
jmp r-xdata
push esi
call [ DispatchMessageA@IAT ]
cmp eax 0x104
jb r-xdata
push [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push [ ebp - 0xc ]
call sub_431cd2
cmp eax 0x1
jne r-xdata
cmp eax 0x107
ja r-xdata
push eax
call sub_431e81
mov ecx [ ebp + 0xc ]
push 0x1
mov [ ecx ] eax
mov eax [ esi + 0x4 ]
push eax
push eax
push edi
jmp r-xdata
push [ esi + 0x18 ]
push [ esi + 0x14 ]
push ebx
call sub_431de8
mov ecx [ ebp + 0xc ]
xor ebx ebx
mov [ ecx ] eax
mov eax [ esi + 0x4 ]
push esi
call [ PeekMessageA@IAT ]
xor eax eax
sub_4320b0
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
cmp [ esi + 0x7c ] 0x0
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x10 ]
push [ esi + 0x90 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WritePrivateProfileStringA@IAT ]
push [ ebp + 0x8 ]
call sub_43a2da
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn 0xc
push edi
lea eax [ ebp + 0x10 ]
push 0x4
push eax
push 0x4
push 0x0
push [ ebp + 0xc ]
push esi
call [ RegSetValueExA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
pop edi
jmp r-xdata
sub_432125
push ebp
mov ebp esp
cmp [ ecx + 0x7c ] 0x0
push esi
push edi
je r-xdata
push [ ecx + 0x90 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WritePrivateProfileStringA@IAT ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
call sub_43a246
mov esi eax
test esi esi
jne r-xdata
call sub_43a2da
mov esi eax
test esi esi
je r-xdata
call sub_43a2da
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push esi
call [ RegDeleteKeyA@IAT ]
jmp r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
call [ lstrlenA@IAT ]
inc eax
push eax
push [ ebp + 0x10 ]
push 0x1
push 0x0
push [ ebp + 0xc ]
push esi
call [ RegSetValueExA@IAT ]
push [ ebp + 0xc ]
push esi
call [ RegDeleteValueA@IAT ]
jmp r-xdata
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
sub_4321c5
push ebp
mov ebp esp
push ecx
cmp [ ecx + 0x7c ] 0x0
push esi
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
push ebx
mov ebx [ ebp + 0x14 ]
lea eax [ ebx + ebx + 0x1 ]
push eax
call sub_4250b0
pop ecx
mov edi eax
xor ecx ecx
test ebx ebx
jbe r-xdata
push [ ebp + 0x8 ]
call sub_43a2da
mov esi eax
test esi esi
je r-xdata
and [ edi + ecx * 2 ] 0x0
mov ecx [ ebp - 0x4 ]
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_432125
push edi
mov esi eax
call sub_4250d9
pop ecx
mov eax esi
pop ebx
mov esi edi
pop edi
pop esi
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x3
push 0x0
push [ ebp + 0xc ]
push esi
call [ RegSetValueExA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
jmp r-xdata
mov eax [ ebp + 0x10 ]
add eax ecx
mov dl [ eax ]
and dl 0xf
add dl 0x41
mov [ esi ] dl
mov al [ eax ]
shr al 0x4
add al 0x41
inc ecx
mov [ esi + 0x1 ] al
inc esi
inc esi
cmp ecx ebx
jb r-xdata
sub_432266
push ebp
mov ebp esp
sub esp 0x100
lea eax [ ebp - 0x100 ]
push 0x100
push eax
push [ ebp + 0xc ]
call sub_4273a4
test eax eax
je r-xdata
leave
retn 0x10
push [ ebp + 0x14 ]
lea eax [ ebp - 0x100 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4322a0
sub_4322a0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi esi
cmp [ esi ] bl
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx ebx
call sub_424e0f
mov edi eax
mov cl [ edi ]
cmp cl 0x25
jne r-xdata
sub edi [ ebx ]
mov ecx ebx
push edi
call sub_424e5e
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov cl [ esi ]
cmp cl 0x25
jne r-xdata
movzx eax cl
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x30
jl r-xdata
movzx eax cl
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x30
jl r-xdata
inc edi
inc ebx
inc edi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
inc esi
jmp r-xdata
mov [ edi ] cl
inc edi
inc esi
cmp al 0x41
jl r-xdata
cmp al 0x39
jle r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp [ esi ] 0x0
je r-xdata
cmp al 0x5a
jg r-xdata
movsx eax al
sub eax 0x31
cmp al 0x39
jle r-xdata
inc ebx
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
mov [ edi ] 0x3f
inc edi
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
push eax
call [ lstrlenA@IAT ]
add ebx eax
jmp r-xdata
movsx eax al
sub eax 0x38
jmp r-xdata
push eax
push edi
call [ lstrcpyA@IAT ]
push edi
call [ lstrlenA@IAT ]
add edi eax
jmp r-xdata
inc edi
inc edi
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc esi
inc esi
cmp eax [ ebp + 0x14 ]
jl r-xdata
sub_4323b6
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
push 0x2
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_432266
leave
retn 0x10
sub_433a2c
push ebp
mov ebp esp
push 0x0
mov eax [ ecx ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
call [ eax + 0x54 ]
pop ebp
retn 0x14
sub_433a4e
mov eax sub_43dd1c
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_421ee2
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d24
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_433a86
push ebp
mov ebp esp
push 0x0
mov eax [ ecx ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
call [ eax + 0x54 ]
pop ebp
retn 0x14
sub_433aa8
mov eax sub_43dd30
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_421ee2
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d24
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_433ae0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
xor eax eax
push esi
mov ecx edi
call sub_4252bd
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
inc esi
jmp r-xdata
pop edi
pop esi
retn 0x8
cmp esi [ esp + 0x10 ]
jg r-xdata
sub_433b0b
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
push 0x1
pop eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42368f
jmp r-xdata
pop ebp
retn 0x10
sub_433b5a
mov eax sub_43dd44
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_421ee2
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d24
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_433bb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
dec eax
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xbc ]
jmp r-xdata
dec eax
je r-xdata
push 0x1
pop eax
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xc4 ]
jmp r-xdata
dec eax
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
shr edx 0x10
push edx
movzx edx [ ebp + 0xc ]
push edx
call [ eax + 0xc8 ]
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
shr edx 0x10
push edx
movzx edx [ ebp + 0xc ]
push edx
call [ eax + 0xcc ]
sub eax 0xa
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xc0 ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42368f
jmp r-xdata
pop ebp
retn 0x10
sub_433c49
push esi
push edi
push 0x0
mov esi [ SendMessageA@IAT ]
push [ esp + 0x10 ]
mov edi ecx
push 0x18a
push [ edi + 0x1c ]
call esi
mov ecx [ esp + 0x10 ]
push eax
call sub_424e86
push eax
push [ esp + 0x10 ]
push 0x189
push [ edi + 0x1c ]
call esi
mov ecx [ esp + 0x10 ]
push 0xffffffff
call sub_424e5e
pop edi
pop esi
retn 0x8
sub_433c8c
movzx eax [ esp + 0x8 ]
movzx edx [ esp + 0x4 ]
shl eax 0x10
or eax edx
push eax
push 0x0
push 0x1a9
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
mov edx [ esp + 0xc ]
mov ecx eax
shr ecx 0x10
neg cx
sbb ecx ecx
neg ecx
mov [ edx ] ecx
movzx eax ax
retn 0xc
sub_433ce5
mov eax sub_43dd58
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_421ee2
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d24
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_433d2b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x2b
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xb8 ]
dec eax
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xbc ]
jmp r-xdata
dec eax
je r-xdata
push 0x1
pop eax
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xc4 ]
jmp r-xdata
sub eax 0xc
je r-xdata
mov eax [ ecx ]
push [ ebp + 0x10 ]
call [ eax + 0xc0 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42368f
jmp r-xdata
pop ebp
retn 0x10
sub_433d92
push esi
push edi
push 0x0
mov esi [ SendMessageA@IAT ]
push [ esp + 0x10 ]
mov edi ecx
push 0x149
push [ edi + 0x1c ]
call esi
mov ecx [ esp + 0x10 ]
push eax
call sub_424e86
push eax
push [ esp + 0x10 ]
push 0x148
push [ edi + 0x1c ]
call esi
mov ecx [ esp + 0x10 ]
push 0xffffffff
call sub_424e5e
pop edi
pop esi
retn 0x8
sub_433df6
mov eax sub_43dd6c
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_421ee2
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d24
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_433e4f
mov eax sub_43dd80
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_421ee2
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d24
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_433ea8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ rw-data ]
push [ esi + 0x8 ]
call [ GetMapMode@IAT ]
mov edi eax
cmp edi 0x7
jge r-xdata
mov edi [ GetDeviceCaps@IAT ]
push 0x58
push [ esi + 0x8 ]
call edi
push 0x5a
mov ebx eax
push [ esi + 0x8 ]
call edi
jmp r-xdata
cmp edi 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ MulDiv@IAT ]
push ebx
mov ebx 0x9ec
push ebx
mov [ ebp - 0x4 ] eax
push [ esi ]
call edi
push [ ebp - 0x4 ]
mov [ esi ] eax
push ebx
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push 0x3
mov ecx esi
call [ eax + 0x34 ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_42e017
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_433f36
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
test esi esi
je r-xdata
mov edi [ rw-data ]
mov eax [ rw-data ]
push [ esi + 0x8 ]
call [ GetMapMode@IAT ]
mov edi eax
cmp edi 0x7
jge r-xdata
mov ebx [ GetDeviceCaps@IAT ]
push 0x58
push [ esi + 0x8 ]
call ebx
push 0x5a
mov edi eax
push [ esi + 0x8 ]
call ebx
jmp r-xdata
cmp edi 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov ebx 0x9ec
push ebx
push edi
push [ esi ]
mov edi [ MulDiv@IAT ]
mov [ ebp - 0x4 ] eax
call edi
push ebx
mov [ esi ] eax
push [ ebp - 0x4 ]
push [ esi + 0x4 ]
call edi
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push 0x3
mov ecx esi
call [ eax + 0x34 ]
push [ ebp + 0x8 ]
mov ecx esi
call sub_42dfae
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_433ffa
push ebp
mov ebp esp
sub esp 0x10
push edi
push 0x8
call sub_43a141
cmp [ rw-data ] 0x0
jne r-xdata
push 0x8
call sub_43a1b1
push [ rw-data ]
call sub_42e313
pop edi
leave
retn
xor edx edx
lea eax [ ebp - 0x10 ]
mov ecx edx
mov edi 0x5555
and ecx 0x1
shl edi cl
inc edx
mov [ eax ] di
inc eax
inc eax
cmp edx 0x8
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push 0x1
push 0x8
push 0x8
call [ CreateBitmap@IAT ]
mov edi eax
test edi edi
je r-xdata
push edi
call [ CreatePatternBrush@IAT ]
push edi
mov [ rw-data ] eax
call [ DeleteObject@IAT ]
sub_43406d
mov eax sub_43de80
call sub_408db8
sub esp 0x38
push ebx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x2c ]
call j_sub_403f90
mov esi r--data
mov [ ebp - 0x2c ] esi
xor ebx ebx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] ebx
call j_sub_403f90
mov [ ebp - 0x1c ] esi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
call j_sub_403f90
mov [ ebp - 0x14 ] esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
call [ CreateRectRgnIndirect@IAT ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_42e328
push [ ebp + 0x8 ]
lea eax [ ebp - 0x44 ]
push eax
call [ CopyRect@IAT ]
mov eax [ ebp + 0x10 ]
neg eax
push eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ InflateRect@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ IntersectRect@IAT ]
lea eax [ ebp - 0x44 ]
push eax
call [ CreateRectRgnIndirect@IAT ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_42e328
push ebx
push ebx
push ebx
push ebx
call [ CreateRectRgn@IAT ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_42e328
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
neg eax
sbb eax eax
push 0x3
and eax [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
push eax
and ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x28 ]
call [ CombineRgn@IAT ]
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp [ ebp + 0x24 ] ebx
jne r-xdata
call sub_433ffa
mov [ ebp + 0x20 ] eax
lea ecx [ ebp - 0x24 ]
call j_sub_403f90
mov [ ebp - 0x24 ] esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x3
call j_sub_403f90
mov [ ebp - 0x34 ] esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x4
cmp esi ebx
je r-xdata
mov eax [ ebp + 0x20 ]
mov [ ebp + 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x24 ]
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
je r-xdata
push ebx
push ebx
push ebx
push ebx
call [ CreateRectRgn@IAT ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_42e328
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
push [ ebp - 0x18 ]
call [ SetRectRgn@IAT ]
lea eax [ ebp - 0x44 ]
push esi
push eax
call [ CopyRect@IAT ]
mov eax [ ebp + 0x1c ]
neg eax
push eax
mov eax [ ebp + 0x18 ]
neg eax
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ InflateRect@IAT ]
lea eax [ ebp - 0x44 ]
push esi
push eax
lea eax [ ebp - 0x44 ]
push eax
call [ IntersectRect@IAT ]
push [ ebp - 0x38 ]
push [ ebp - 0x3c ]
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push [ ebp - 0x10 ]
call [ SetRectRgn@IAT ]
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
neg eax
sbb eax eax
push 0x3
and eax [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
push eax
and ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x20 ]
call [ CombineRgn@IAT ]
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x24 ]
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
cmp [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x34 ]
jne r-xdata
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
call [ CreateRectRgn@IAT ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_42e328
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x24 ]
neg eax
sbb eax eax
push 0x3
and eax [ ebp - 0x28 ]
neg ecx
sbb ecx ecx
push eax
and ecx [ ebp - 0x20 ]
push ecx
push [ ebp - 0x30 ]
call [ CombineRgn@IAT ]
push eax
mov ecx edi
call sub_42d712
mov eax [ edi ]
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push [ ebp + 0x20 ]
mov ecx edi
call sub_42d253
mov ecx [ ebp - 0x3c ]
mov esi eax
mov eax [ ebp - 0x38 ]
sub ecx [ ebp - 0x44 ]
sub eax [ ebp - 0x40 ]
push 0x5a0049
push eax
push ecx
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push [ edi + 0x4 ]
call [ PatBlt@IAT ]
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
call sub_42d712
mov eax [ edi ]
lea ecx [ ebp - 0x44 ]
push ecx
mov ecx edi
call [ eax + 0x50 ]
push [ ebp + 0x24 ]
mov ecx edi
call sub_42d253
mov ecx [ ebp - 0x3c ]
mov esi eax
mov eax [ ebp - 0x38 ]
sub ecx [ ebp - 0x44 ]
sub eax [ ebp - 0x40 ]
push 0x5a0049
push eax
push ecx
push [ ebp - 0x40 ]
push [ ebp - 0x44 ]
push [ edi + 0x4 ]
call [ PatBlt@IAT ]
push esi
mov ecx edi
call sub_42d253
push ebx
mov ecx edi
call sub_42d712
mov esi r--data
mov [ ebp - 0x34 ] esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x5
call sub_42e37f
mov [ ebp - 0x24 ] esi
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x6
call sub_42e37f
mov [ ebp - 0x14 ] esi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x7
call sub_42e37f
mov [ ebp - 0x1c ] esi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x8
call sub_42e37f
mov [ ebp - 0x2c ] esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x9
call sub_42e37f
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x20
push esi
mov ecx edi
call sub_42d253
sub_434371
push esi
mov esi ecx
push [ esp + 0xc ]
push [ esi + 0x4 ]
call [ SetBkColor@IAT ]
xor eax eax
push eax
push eax
push eax
push [ esp + 0x14 ]
push 0x2
push eax
push eax
push [ esi + 0x4 ]
call [ ExtTextOutA@IAT ]
pop esi
retn 0x8
sub_43439b
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
push [ ebp + 0x18 ]
push [ esi + 0x4 ]
call [ SetBkColor@IAT ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
add eax edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
add ecx eax
xor eax eax
mov [ ebp - 0x4 ] ecx
push eax
push eax
lea ecx [ ebp - 0x10 ]
push eax
push ecx
push 0x2
push eax
push eax
push [ esi + 0x4 ]
call [ ExtTextOutA@IAT ]
pop esi
leave
retn 0x14
sub_4343e7
mov eax [ esp + 0x4 ]
push esi
push edi
push [ esp + 0x14 ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
mov edi [ eax + 0xc ]
push [ esp + 0x14 ]
mov eax [ eax + 0x8 ]
sub edi edx
sub eax esi
push edi
push eax
push edx
push esi
call sub_434412
pop edi
pop esi
retn 0xc
sub_434412
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x18 ]
lea eax [ esi - 0x1 ]
push 0x1
push eax
push ebx
push [ ebp + 0x8 ]
call sub_43439b
mov edi [ ebp + 0x14 ]
push [ ebp + 0x18 ]
mov ecx [ ebp - 0x4 ]
lea eax [ edi - 0x1 ]
push eax
push 0x1
push ebx
push [ ebp + 0x8 ]
call sub_43439b
push [ ebp + 0x1c ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax esi
push edi
push 0xffffffff
push ebx
push eax
call sub_43439b
push [ ebp + 0x1c ]
mov ecx [ ebp - 0x4 ]
add ebx edi
push 0xffffffff
push esi
push ebx
push [ ebp + 0x8 ]
call sub_43439b
pop edi
pop esi
pop ebx
leave
retn 0x18
sub_43447c
push ebp
mov ebp esp
sub esp 0x3c
push esi
push 0x3c
lea eax [ ebp - 0x3c ]
push 0x0
mov esi ecx
push eax
call sub_408d60
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x20 ]
push 0x20
mov [ ebp - 0x25 ] 0x1
push [ ebp + 0xc ]
push eax
call [ lstrcpynA@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x3c ]
mov ecx esi
push eax
call sub_4344c1
pop esi
leave
retn 0xc
sub_4344c1
push ebp
mov ebp esp
sub esp 0x50
mov eax [ ebp + 0xc ]
push ebx
test eax eax
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx eax
mov ebx [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
call [ CreateFontIndirectA@IAT ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_42e328
pop edi
pop ebx
leave
retn 0x8
push ebx
push edi
call [ ReleaseDC@IAT ]
push esi
mov esi [ ebp + 0x8 ]
push 0xf
lea edi [ ebp - 0x50 ]
pop ecx
push 0x5a
push ebx
[ edi ] [ esi ]
call [ GetDeviceCaps@IAT ]
imul eax [ ebp - 0x50 ]
cdq
mov ecx 0x2d0
mov esi [ DPtoLP@IAT ]
idiv ecx
push 0x1
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x14 ]
push eax
push ebx
call esi
lea eax [ ebp - 0xc ]
push 0x1
xor edi edi
push eax
push ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
call esi
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x8 ]
push eax
call sub_408e11
neg eax
cmp [ ebp + 0xc ] edi
pop ecx
mov [ ebp - 0x50 ] eax
pop esi
jne r-xdata
sub_43455f
mov eax [ ecx ]
mov edx [ ecx + 0x8 ]
cmp eax edx
jle r-xdata
mov eax [ ecx + 0x4 ]
mov edx [ ecx + 0xc ]
cmp eax edx
jle r-xdata
mov [ ecx ] edx
mov [ ecx + 0x8 ] eax
retn
mov [ ecx + 0x4 ] edx
mov [ ecx + 0xc ] eax
sub_4345f4
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ MulDiv@IAT ]
push edi
push ebx
push [ ebp + 0xc ]
mov edi ecx
push [ edi + 0xc ]
call esi
push ebx
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
push [ edi + 0x8 ]
call esi
push ebx
mov [ ebp - 0x4 ] eax
push [ ebp + 0xc ]
push [ edi + 0x4 ]
call esi
push ebx
mov [ ebp + 0x10 ] eax
push [ ebp + 0xc ]
push [ edi ]
call esi
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea esi [ ebp - 0x18 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_4346c7
call sub_439511
add eax 0x2c
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
retn
jmp r-xdata
push esi
call sub_4346ef
test eax eax
jne r-xdata
pop esi
retn
push 0x1
call sub_4346e0
call sub_439511
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
call sub_439511
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
push 0x0
call sub_43c0d3
call sub_425568
test eax eax
je r-xdata
mov ecx [ esi + 0x1c ]
mov eax [ ecx ]
call [ eax + 0x58 ]
pop esi
retn
sub_434720
push esi
mov esi [ GetVersion@IAT ]
push edi
call esi
mov edi 0x80000000
test edi eax
je r-xdata
call esi
test edi eax
jne r-xdata
call esi
cmp ax 0x4
je r-xdata
and [ rw-data ] 0x0
call esi
cmp ax 0x3
jne r-xdata
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
retn
sub_43476b
mov eax sub_43e231
call sub_408db8
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_421249
xor edi edi
push 0xa
lea ecx [ esi + 0x6c ]
mov [ ebp - 0x4 ] edi
call sub_41e5ba
mov eax [ rw-data ]
mov [ esi + 0xac ] eax
or [ esi + 0x40 ] 0xffffffff
lea eax [ esi + 0x58 ]
push eax
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x3c ] 0x1
mov [ esi + 0x9c ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0xb8 ] edi
call [ SetRectEmpty@IAT ]
or [ esi + 0x88 ] 0xffffffff
mov ecx esi
mov [ esi + 0x50 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0xb0 ] edi
mov [ esi + 0xb4 ] edi
call sub_4348b0
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_434849
mov eax sub_43e25d
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_4348d4
mov eax [ esi + 0xa4 ]
test eax eax
je r-xdata
lea ecx [ esi + 0xac ]
mov [ ebp - 0x4 ] 0x1
call sub_4249df
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x6c ]
call sub_41e619
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_421d24
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push eax
call sub_4250d9
pop ecx
sub_4348f8
push esi
mov esi ecx
call sub_439511
push [ esp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call [ LoadAcceleratorsA@IAT ]
xor ecx ecx
mov [ esi + 0x48 ] eax
test eax eax
setne cl
mov eax ecx
pop esi
retn 0x4
sub_43491e
mov eax [ ecx ]
push esi
mov esi [ ecx + 0x48 ]
call [ eax + 0xbc ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
mov ecx eax
call [ edx + 0xa8 ]
test eax eax
je r-xdata
mov esi eax
sub_434942
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov eax [ edi + 0x4 ]
cmp eax 0x201
je r-xdata
push [ edi ]
call sub_42e769
cmp eax 0xa1
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
push edi
mov ecx esi
call sub_421f7a
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x4
mov eax [ edi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax [ ecx ]
push edi
call [ eax + 0x54 ]
test eax eax
jne r-xdata
xor eax eax
cmp eax 0x108
ja r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe8 ]
test eax eax
je r-xdata
push edi
push eax
push [ esi + 0x1c ]
call [ TranslateAcceleratorA@IAT ]
test eax eax
je r-xdata
sub_4349e1
push esi
mov esi ecx
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4215d1
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
sub_434a02
sub esp 0x1c
push ebp
push esi
mov esi ecx
xor ebp ebp
cmp [ esi + 0x50 ] ebp
je r-xdata
pop esi
pop ebp
add esp 0x1c
retn
push ebx
push edi
mov edi 0x367
push 0x3
push edi
push edi
push [ esi + 0x1c ]
lea eax [ esp + 0x20 ]
push eax
call [ PeekMessageA@IAT ]
mov ebx [ PostMessageA@IAT ]
test eax eax
jne r-xdata
call [ GetCapture@IAT ]
cmp eax [ esi + 0x1c ]
jne r-xdata
push ebp
push ebp
push edi
push [ esi + 0x1c ]
call ebx
mov ecx esi
call sub_422eaa
push ebp
push ebp
mov [ esi + 0x50 ] ebp
push 0x36a
mov [ eax + 0x50 ] ebp
push [ esi + 0x1c ]
call ebx
pop edi
pop ebx
call [ ReleaseCapture@IAT ]
sub_434a6d
push esi
mov esi ecx
call sub_422eaa
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov ecx esi
call sub_4215d1
push [ rw-data ]
call [ SetCursor@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0xc
sub_434a97
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
test esi esi
jne r-xdata
call sub_439511
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_4245bf
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
push 0x1
push esi
mov ecx eax
call [ edx + 0x98 ]
mov esi [ edi + 0x8c ]
add esi 0x20000
mov esi [ edi + 0x90 ]
add esi 0x10000
jmp r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
test esi esi
je r-xdata
sub_434b05
push ebx
push esi
push edi
mov esi ecx
movzx edi [ esp + 0x10 ]
call sub_422eaa
xor ecx ecx
cmp [ eax + 0x50 ] ecx
je r-xdata
push [ esp + 0x14 ]
mov ecx esi
push [ esp + 0x14 ]
call sub_422c14
cmp [ esp + 0x14 ] ecx
jne r-xdata
cmp edi 0xe146
je r-xdata
mov ebx 0xe147
cmp edi ebx
je r-xdata
cmp edi 0xe145
je r-xdata
add edi 0x10000
push edi
mov edi [ SendMessageA@IAT ]
push ecx
push 0x365
push [ esi + 0x1c ]
call edi
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push eax
push ebx
push 0x111
push [ esi + 0x1c ]
call edi
pop edi
pop esi
pop ebx
retn 0x8
sub_434b7c
mov eax [ esp + 0x8 ]
push 0x1
pop eax
jmp r-xdata
push eax
call sub_422d58
test eax eax
je r-xdata
retn 0x8
xor eax eax
jmp r-xdata
cmp [ esp + 0x4 ] eax
je r-xdata
sub_434b9c
push ecx
push ebx
mov ebx ecx
push ebp
push esi
inc [ ebx + 0xa0 ]
cmp [ ebx + 0xa0 ] 0x1
lea eax [ ebx + 0xa0 ]
push edi
ja r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
call sub_422d9d
push 0x5
mov [ esp + 0x14 ] eax
xor ebp ebp
call [ GetDesktopWindow@IAT ]
mov edi [ GetWindow@IAT ]
push eax
call edi
mov esi eax
test esi esi
je r-xdata
push esi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
push 0x2
push esi
call edi
mov esi eax
test esi esi
jne r-xdata
push esi
call sub_421691
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push [ eax + 0x1c ]
call sub_434b7c
test eax eax
je r-xdata
lea eax [ ebp * 4 + 0x4 ]
push eax
call sub_4250b0
pop ecx
mov [ ebx + 0xa4 ] eax
push 0x5
xor ebp ebp
call [ GetDesktopWindow@IAT ]
push eax
push 0x0
push 0x0
push 0x36c
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0xa4 ]
and [ eax + ebp * 4 ] 0x0
push esi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
inc ebp
push 0x2
push esi
jmp r-xdata
push esi
call sub_421691
test eax eax
je r-xdata
call edi
mov esi eax
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push [ eax + 0x1c ]
call sub_434b7c
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x36c
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
push eax
push esi
call [ EnableWindow@IAT ]
mov eax [ ebx + 0xa4 ]
mov [ eax + ebp * 4 ] esi
inc ebp
sub_434cb8
push esi
mov esi ecx
mov ecx [ esi + 0xa0 ]
lea eax [ esi + 0xa0 ]
test ecx ecx
je r-xdata
pop esi
retn
dec ecx
test ecx ecx
mov [ eax ] ecx
ja r-xdata
mov eax [ esi + 0xa4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push [ esi + 0xa4 ]
call sub_4250d9
and [ esi + 0xa4 ] 0x0
pop ecx
push edi
xor edi edi
mov eax [ esi + 0xa4 ]
add edi 0x4
cmp [ edi + eax ] 0x0
jne r-xdata
mov eax [ esi + 0xa4 ]
push 0x1
push [ eax + edi ]
call [ EnableWindow@IAT ]
push [ edi + eax ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
pop edi
sub_434d27
push ecx
push ebp
push esi
mov [ esp + 0x8 ] ecx
push 0x5
call [ GetDesktopWindow@IAT ]
mov ebp [ GetWindow@IAT ]
push eax
call ebp
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
pop ecx
retn 0x4
push ebx
mov ebx [ ShowWindow@IAT ]
push edi
push 0x2
push esi
call ebp
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x1c ]
cmp eax esi
je r-xdata
push esi
call sub_421691
mov edi eax
test edi edi
je r-xdata
pop edi
pop ebx
push esi
push eax
call sub_434b7c
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
cmp [ esp + 0x18 ] 0x0
jne r-xdata
test eax 0x18000000
jne r-xdata
and eax 0x18000000
cmp eax 0x10000000
jne r-xdata
test [ edi + 0x24 ] 0x2
je r-xdata
push 0x0
push esi
call ebx
or [ edi + 0x24 ] 0x2
jmp r-xdata
push 0x4
push esi
call ebx
and [ edi + 0x24 ] 0xfffffffd
sub_434dbf
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
xor ebx ebx
mov esi ecx
cmp edi ebx
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_42166a
test eax eax
jne r-xdata
test [ esi + 0x24 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
cmp edi ebx
jne r-xdata
push ebx
call sub_425583
push ebx
call [ SetFocus@IAT ]
jmp r-xdata
mov eax [ esi + 0x24 ]
mov ebx [ SendMessageA@IAT ]
test al 0x80
push ebp
je r-xdata
cmp [ esi + 0xa0 ] ebx
jne r-xdata
test [ esi + 0x24 ] 0x20
pop ebp
je r-xdata
and al 0x7f
mov ecx esi
mov [ esi + 0x24 ] eax
mov eax [ esi ]
call [ eax + 0x8c ]
mov ebp [ esi + 0x1c ]
call [ GetActiveWindow@IAT ]
cmp eax ebp
jne r-xdata
neg edi
sbb edi edi
mov ecx esi
and edi 0xfffffff0
add edi 0x20
push edi
call sub_434e75
mov eax [ esi ]
or [ esi + 0x24 ] 0x80
mov ecx esi
call [ eax + 0x88 ]
jmp r-xdata
push 0x0
push 0x1
push 0x86
push [ esi + 0x1c ]
call ebx
push 0x0
push 0x1
push 0x6
push ebp
call ebx
sub_434e75
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_425366
test eax 0x40000000
je r-xdata
mov ecx esi
call sub_422eaa
mov edi eax
mov edi esi
jmp r-xdata
push 0x5
call [ GetDesktopWindow@IAT ]
mov ebx [ GetWindow@IAT ]
push eax
mov ecx edi
call sub_425568
mov ecx [ esp + 0x14 ]
not ecx
test cl 0x8
je r-xdata
test [ esp + 0x14 ] 0xc
mov ebp [ SendMessageA@IAT ]
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
push esi
push [ edi + 0x1c ]
call sub_434b7c
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x86
push [ edi + 0x1c ]
call ebp
test eax eax
je r-xdata
push 0x2
push esi
jmp r-xdata
push 0x0
push [ esp + 0x18 ]
push 0x36d
push esi
call ebp
cmp edi esi
je r-xdata
call ebx
mov esi eax
test esi esi
je r-xdata
or [ esi + 0x25 ] 0x2
push 0x0
push 0x1
push 0x86
push [ edi + 0x1c ]
call ebp
and [ esi + 0x25 ] 0xfd
jmp r-xdata
sub_434f1f
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test ah 0x80
je r-xdata
push 0x8
call sub_424301
mov [ esi + 0x28 ] r--data
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x1
pop eax
pop esi
retn 0x4
or [ esi + 0x2d ] 0x2
or ah 0x40
mov [ esi + 0x20 ] eax
sub_434f63
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
xor ebx ebx
cmp [ ebp + 0x1c ] edi
mov esi ecx
je r-xdata
push [ ebp + 0xc ]
lea ecx [ esi + 0xac ]
call sub_424b68
mov eax [ ebp + 0x18 ]
cmp eax edi
je r-xdata
call sub_439511
push [ ebp + 0x1c ]
mov eax [ eax + 0xc ]
push eax
call [ LoadMenuA@IAT ]
mov ebx eax
cmp ebx edi
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ebx
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi ecx
sub eax edx
push edi
push eax
push ecx
push edx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x20 ]
call sub_421bf2
test eax eax
jne r-xdata
mov edi [ eax + 0x1c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
jmp r-xdata
push 0x1
pop eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call [ DestroyMenu@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x20
sub_434ffb
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
push esi
mov ecx [ ebx ]
push edi
call sub_425c99
mov edi eax
xor esi esi
cmp edi esi
je r-xdata
xor eax eax
jmp r-xdata
push ebx
mov eax [ edi ]
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
push ecx
push 0x50800000
push esi
push esi
mov ecx edi
call [ eax + 0x54 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ rw-data ] esi
je r-xdata
mov eax edi
mov ecx edi
call sub_425380
mov ecx 0x200
test ecx eax
je r-xdata
push 0x20
push esi
push ecx
mov ecx [ ebp - 0x4 ]
call sub_4253cb
sub_435073
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0x0
je r-xdata
push 0xe900
push eax
call sub_434ffb
test eax eax
je r-xdata
retn 0x8
sub_4350a4
push esi
mov esi ecx
call sub_4215d1
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
push [ esp + 0xc ]
mov eax [ esi ]
mov ecx esi
push [ esp + 0xc ]
call [ eax + 0xdc ]
test eax eax
jne r-xdata
pop esi
retn 0x8
push 0x0
push 0xe001
push 0x362
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
xor eax eax
sub_4350f3
push ebp
mov ebp esp
sub esp 0x58
push esi
push edi
mov esi ecx
call sub_439511
movzx ecx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
push ecx
push eax
call [ LoadIconA@IAT ]
mov edi eax
test edi edi
je r-xdata
xor eax eax
push 0x30
lea eax [ ebp - 0x58 ]
push 0x0
push eax
call sub_408d60
mov eax [ ebp + 0x8 ]
add esp 0xc
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x38 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
cmp [ ebp - 0x30 ] 0x0
je r-xdata
call sub_439511
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x28 ]
push ecx
push [ ebp - 0x30 ]
push eax
call [ GetClassInfoA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x28 ]
call sub_4223f4
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
sub_435176
mov eax sub_43e270
call sub_408db8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x8c ] edi
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor ebx ebx
push edi
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
call sub_427320
test eax eax
je r-xdata
push 0x8
call sub_424301
push edi
mov ecx esi
push [ ebp + 0xc ]
call sub_4350f3
push [ ebp + 0x14 ]
mov ecx [ esi + 0xac ]
movzx edi di
push ebx
push edi
push [ ebp + 0x10 ]
push rw-data
push [ ebp + 0xc ]
push ecx
push eax
mov ecx esi
call sub_434f63
test eax eax
je r-xdata
push 0xa
push ebx
push [ ebp + 0x8 ]
lea eax [ esi + 0xac ]
push eax
call sub_4273cb
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
push [ esi + 0x1c ]
call [ GetMenu@IAT ]
push edi
mov ecx esi
mov [ esi + 0x44 ] eax
call sub_4348f8
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push 0x1
pop ebx
push 0x1
push 0x1
push ebx
push ebx
push 0x364
push [ esi + 0x1c ]
call sub_422fb4
sub_435240
mov eax [ esp + 0x4 ]
push esi
test eax eax
mov esi ecx
jne r-xdata
push eax
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
pop esi
retn 0x4
mov eax [ esi ]
call [ eax + 0xbc ]
test eax eax
je r-xdata
mov eax [ esi + 0x44 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xa4 ]
test eax eax
jne r-xdata
sub_435276
push ebx
push esi
push edi
mov esi ecx
xor edi edi
call sub_435a17
test eax eax
jne r-xdata
xor ebx ebx
cmp [ esp + 0x14 ] ebx
je r-xdata
push 0x1
push 0xe900
push [ esi + 0x1c ]
call sub_422f3b
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
push 0x1
push 0x1
push ebx
push ebx
push 0x364
push [ esi + 0x1c ]
call sub_422fb4
cmp edi ebx
je r-xdata
push r--data
mov ecx ebx
call sub_425c67
test eax eax
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xe0 ]
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ ecx ]
call [ eax + 0xa0 ]
or ebx 0xffffffff
call sub_439511
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi ]
push esi
push ebx
mov ecx edi
call [ eax + 0xe8 ]
push 0x0
push ebx
mov ecx esi
mov edi ebx
call sub_435a1e
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xcc ]
test edi edi
je r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
mov eax [ edi ]
push edi
push edi
push 0x1
mov ecx edi
call [ eax + 0xe4 ]
mov ebx [ eax + 0x74 ]
or [ eax + 0x74 ] 0xffffffff
sub_43533c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x9c ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xbc ]
mov esi eax
test esi esi
je r-xdata
push ebx
call eax
test eax eax
je r-xdata
call sub_439511
mov edi [ eax + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x8c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
test esi esi
je r-xdata
cmp [ edi + 0x1c ] ebx
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x58 ]
cmp [ esi + 0x48 ] 0x0
je r-xdata
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x60 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx edi
call sub_430b3a
push 0x0
mov ecx edi
call sub_430c06
call sub_4346a7
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x88 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x7c ]
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov ecx eax
call sub_422d1a
cmp eax ebx
jne r-xdata
call sub_439511
cmp [ eax + 0x14 ] 0x0
jne r-xdata
push eax
call sub_4346e0
jmp r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x94 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
push 0x0
call sub_43c0d3
jmp r-xdata
sub_435433
push esi
push edi
mov esi ecx
call sub_435fef
cmp [ esi + 0x44 ] 0x0
je r-xdata
call sub_439511
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
mov edi [ esi + 0x44 ]
call [ GetMenu@IAT ]
cmp eax edi
je r-xdata
mov ecx esi
call sub_421da0
pop edi
pop esi
retn
cmp [ eax + 0x1c ] esi
jne r-xdata
push edi
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
push 0x0
push 0x2
push 0x0
push [ esi + 0x1c ]
call [ WinHelpA@IAT ]
sub_435486
push esi
push 0x0
push [ esp + 0xc ]
lea esi [ ecx + 0x6c ]
mov ecx esi
call sub_41e870
test eax eax
je r-xdata
pop esi
retn 0x4
push eax
mov ecx esi
call sub_41e813
sub_4354a7
mov eax sub_43e284
call sub_408db8
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
call sub_439281
mov esi eax
mov [ ebp - 0x10 ] esi
mov ebx [ esi + 0xc4 ]
mov [ esi + 0xc4 ] edi
mov [ ebp - 0x14 ] ebx
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_435a17
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_425861
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0xc ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_439511
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0xc4 ] ebx
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
xor eax eax
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0xc ]
test eax eax
jne r-xdata
sub_43554f
push esi
call sub_435a17
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0xc
call sub_42159c
push [ eax + 0xc ]
push [ eax + 0x8 ]
push 0x114
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_435578
push esi
call sub_435a17
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0xc
call sub_42159c
push [ eax + 0xc ]
push [ eax + 0x8 ]
push 0x115
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_4355a1
push esi
push edi
push [ esp + 0x10 ]
mov edi [ esp + 0x10 ]
mov esi ecx
push edi
call sub_4237ff
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
call sub_426ac9
cmp [ eax + 0x1c ] esi
jne r-xdata
test di di
je r-xdata
push 0x0
push 0x0
push 0x36a
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
pop edi
xor eax eax
pop esi
retn 0x8
mov ecx esi
call sub_435a17
test eax eax
jne r-xdata
xor eax eax
shr edi 0x10
test di di
jne r-xdata
mov edx [ eax ]
push eax
push eax
push 0x0
mov ecx eax
call [ edx + 0xe4 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xc0 ]
mov ecx eax
call sub_435a17
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ ecx ]
push eax
call [ edx + 0x58 ]
sub_43562f
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
call sub_4215d1
mov ecx ebx
call sub_425366
test eax 0x40000000
je r-xdata
mov ecx ebx
call sub_422eaa
mov esi eax
mov esi ebx
jmp r-xdata
cmp esi edi
je r-xdata
mov edi ebx
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
push 0x1
pop eax
mov ecx edi
call sub_422eaa
cmp esi eax
jne r-xdata
neg eax
sbb eax eax
mov ecx ebx
and al 0xfc
add eax 0x8
push eax
call sub_434e75
mov ecx ebx
call sub_435a17
mov esi eax
test esi esi
jne r-xdata
or ecx 0x20
mov [ esi + 0x24 ] ecx
xor eax eax
jmp r-xdata
push 0x0
push 0x40
push 0x36d
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xc0 ]
mov ecx eax
call sub_435a17
mov esi eax
test esi esi
je r-xdata
and [ esi + 0x24 ] 0xffffffdf
mov ecx [ esi + 0x24 ]
test eax eax
pop edi
je r-xdata
mov eax [ esi ]
push ebx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0xe8 ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
push esi
push esi
push 0x1
mov ecx esi
call [ eax + 0xe4 ]
sub_435703
push esi
mov esi ecx
push edi
test [ esi + 0x24 ] 0x20
je r-xdata
mov edi [ esp + 0xc ]
push 0x1
pop edi
jmp r-xdata
mov eax [ esi ]
push 0x0
push edi
push 0x86
mov ecx esi
call [ eax + 0xa0 ]
pop edi
pop esi
retn 0x4
xor edi edi
mov ecx esi
call sub_425568
test eax eax
jne r-xdata
sub_43573a
push esi
push edi
mov edi ecx
call sub_422eaa
mov ecx [ esp + 0xc ]
and ecx 0xfff0
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov ecx edi
call sub_4215d1
mov eax 0xf040
cmp ecx eax
ja r-xdata
mov eax ecx
sub eax 0xf050
je r-xdata
je r-xdata
add ecx 0xffff1000
mov esi [ SendMessageA@IAT ]
shr ecx 0x4
add ecx 0x1ef00
push ecx
push 0x0
push 0x365
push [ edi + 0x1c ]
call esi
test eax eax
jne r-xdata
sub eax 0x10
je r-xdata
mov eax ecx
sub eax 0xf000
je r-xdata
pop edi
pop esi
retn 0x8
push eax
push 0xe147
push 0x111
push [ edi + 0x1c ]
call esi
jmp r-xdata
sub eax 0xc0
sub eax 0x10
je r-xdata
sub eax 0x10
jne r-xdata
sub eax 0x10
jmp r-xdata
je r-xdata
sub_4357cf
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
push edi
push [ ecx + 0x1c ]
call [ SetActiveWindow@IAT ]
push eax
call sub_42166a
mov esi [ DragQueryFileA@IAT ]
xor ebx ebx
push ebx
push ebx
push 0xffffffff
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x4 ] eax
call sub_439511
cmp [ ebp - 0x4 ] ebx
mov edi [ eax + 0x4 ]
jbe r-xdata
push [ ebp + 0x8 ]
call [ DragFinish@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x108 ]
push 0x104
push eax
push ebx
push [ ebp + 0x8 ]
call esi
mov eax [ edi ]
lea ecx [ ebp - 0x108 ]
push ecx
mov ecx edi
call [ eax + 0x7c ]
inc ebx
cmp ebx [ ebp - 0x4 ]
jb r-xdata
sub_435841
push esi
mov esi ecx
call sub_439511
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
cmp [ eax + 0x1c ] esi
jne r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0x88 ]
pop esi
retn
sub_435866
cmp [ esp + 0x4 ] 0x0
push esi
push edi
mov edi ecx
je r-xdata
pop edi
pop esi
retn 0x4
call sub_439511
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x1
call sub_4346e0
push 0x1
mov ecx esi
call sub_430c06
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
sub_43589e
push ebp
mov ebp esp
sub esp 0x108
push esi
mov [ ebp - 0x4 ] ecx
call sub_439511
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor eax eax
pop esi
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
shr ecx 0x10
test cx cx
je r-xdata
mov ax [ esi + 0xb0 ]
cmp [ ebp + 0xc ] ax
jne r-xdata
cmp cx [ esi + 0xb2 ]
jne r-xdata
push ebx
push edi
mov edi [ GlobalGetAtomNameA@IAT ]
lea ecx [ ebp - 0x108 ]
push 0x103
push ecx
push eax
call edi
mov ebx [ GlobalAddAtomA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call ebx
lea eax [ ebp - 0x108 ]
push 0x103
push eax
mov ax [ esi + 0xb2 ]
push eax
call edi
lea eax [ ebp - 0x108 ]
push eax
call ebx
movzx eax [ esi + 0xb2 ]
movzx ecx [ esi + 0xb0 ]
shl eax 0x10
or eax ecx
push eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x1c ]
push 0x3e4
push [ ebp + 0x8 ]
call [ SendMessageA@IAT ]
pop edi
pop ebx
sub_435961
push ebp
mov ebp esp
sub esp 0x210
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
lea eax [ ebp - 0x8 ]
push eax
mov edi 0x3e8
push [ ebp + 0xc ]
mov ebx ecx
push edi
call UnpackDDElParam
push [ ebp - 0x4 ]
call [ GlobalLock@IAT ]
push 0x208
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpynA@IAT ]
push [ ebp - 0x4 ]
call [ GlobalUnlock@IAT ]
push [ ebp - 0x4 ]
mov esi 0x3e4
push 0x8000
push esi
push edi
push [ ebp + 0xc ]
call ReuseDDElParam
push eax
push [ ebx + 0x1c ]
push esi
push [ ebp + 0x8 ]
call [ PostMessageA@IAT ]
mov ecx ebx
call sub_425568
pop edi
pop esi
test eax eax
pop ebx
je r-xdata
xor eax eax
leave
retn 0x8
call sub_439511
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x210 ]
push ecx
mov ecx eax
mov edx [ eax ]
call [ edx + 0x94 ]
sub_435a1e
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x98 ]
cmp ebx edi
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
and [ esi + 0x98 ] 0x0
test edi edi
je r-xdata
cmp [ esi + 0x98 ] 0x0
jne r-xdata
mov eax [ edi ]
push edi
push ebx
push 0x0
mov ecx edi
call [ eax + 0xe4 ]
test ebx ebx
mov [ esi + 0x98 ] ebx
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
push edi
push ebx
push 0x1
mov ecx ebx
call [ eax + 0xe4 ]
sub_435aa3
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_436923
xor ebx ebx
mov esi eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx edi
neg eax
sbb eax eax
and al 0xc0
add eax 0x80
or al 0x17
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4254f2
mov eax [ edi ]
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0xc4 ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ edi ]
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0xc4 ]
or [ esi + 0xb8 ] 0xc
jmp r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xc8 ]
mov ecx edi
call sub_436934
test eax eax
jne r-xdata
mov ecx edi
call sub_436934
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ edi + 0x70 ]
cmp ecx ebx
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setne al
mov eax [ ecx ]
call [ eax + 0xe0 ]
jmp r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
or [ esi + 0x88 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
lea eax [ esi + 0x88 ]
je r-xdata
or [ esi + 0x88 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
lea eax [ esi + 0x88 ]
je r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xc8 ]
push ebx
jmp r-xdata
mov [ eax ] ebx
jmp r-xdata
push 0x8
mov [ eax ] 0x8
jmp r-xdata
mov ecx esi
call sub_425541
jmp r-xdata
sub_435bbc
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov ebx ecx
push edi
mov [ ebp - 0x4 ] ebx
push [ ebx + 0x1c ]
call sub_42e769
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebx + 0x68 ]
mov esi [ ebp + 0x8 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_425a3b
mov [ ebp - 0x20 ] esi
call sub_439281
mov eax [ eax + 0x54 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x0
push [ ebp + 0xc ]
push esi
call [ eax + 0x74 ]
test eax eax
jne r-xdata
push [ ebx + 0x1c ]
mov edi [ GetMenu@IAT ]
call edi
test eax eax
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0xc ] eax
test eax eax
jbe r-xdata
mov ecx ebx
call sub_422d9d
test eax eax
je r-xdata
mov edi [ GetMenuItemID@IAT ]
push [ eax + 0x1c ]
call edi
mov edi eax
test edi edi
je r-xdata
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0xc ]
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
push edi
call [ GetMenuItemCount@IAT ]
xor ebx ebx
mov [ ebp + 0x10 ] eax
test eax eax
jle r-xdata
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call edi
test eax eax
mov [ ebp - 0x28 ] eax
je r-xdata
and [ ebp - 0x1c ] 0x0
cmp [ ebx + 0x3c ] 0x0
je r-xdata
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_4274b5
test eax eax
mov [ ebp - 0x1c ] eax
je r-xdata
mov ebx [ ebp - 0x4 ]
push ebx
push edi
call [ GetSubMenu@IAT ]
cmp eax [ esi + 0x4 ]
je r-xdata
xor eax eax
cmp eax 0xf000
jae r-xdata
push 0x0
push [ eax + 0x4 ]
call edi
test eax eax
mov [ ebp - 0x28 ] eax
je r-xdata
push edi
call sub_4274b5
mov [ ebp - 0x8 ] eax
inc ebx
cmp ebx [ ebp + 0x10 ]
jl r-xdata
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
add [ ebp - 0x24 ] eax
push 0x1
pop eax
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call edi
cmp eax [ ebp - 0x28 ]
jne r-xdata
push eax
push 0x0
jmp r-xdata
inc [ ebp - 0x24 ]
jmp r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_425c00
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
mov ebx eax
cmp ebx [ ebp - 0xc ]
jae r-xdata
cmp [ ebp - 0x24 ] ebx
jae r-xdata
sub_435d3d
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
call sub_422eaa
mov ecx [ esi + 0x68 ]
mov edi [ ebp + 0x8 ]
test ecx ecx
mov ebx eax
je r-xdata
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x7c ]
test eax eax
jne r-xdata
test edi edi
je r-xdata
and [ esi + 0x24 ] 0xffffffbf
cmp [ ebx + 0x50 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
and [ esi + 0x90 ] 0x0
test [ ebp + 0xc ] 0x810
jne r-xdata
mov [ esi + 0x90 ] 0xe002
mov [ esi + 0x90 ] 0xe001
jmp r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_42166a
test eax eax
je r-xdata
cmp edi 0xf000
jb r-xdata
mov eax [ esi + 0x90 ]
cmp eax [ esi + 0x94 ]
je r-xdata
push [ eax + 0x1c ]
call [ UpdateWindow@IAT ]
jmp r-xdata
push 0x0
push [ esi + 0x90 ]
push 0x362
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd4 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x36a
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
cmp edi 0xff00
jb r-xdata
cmp edi 0xf1f0
jae r-xdata
mov [ esi + 0x90 ] edi
jmp r-xdata
mov [ esi + 0x90 ] 0xef1f
jmp r-xdata
add edi 0xffff1000
shr edi 0x4
add edi 0xef00
or [ ebx + 0x24 ] 0x40
sub_435e4e
mov ecx [ esp + 0x8 ]
push esi
push 0xff
call sub_424e0f
mov esi eax
push 0x100
push esi
push [ esp + 0x10 ]
call sub_4273a4
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
push 0xffffffff
call sub_424e5e
pop esi
retn 0x8
push 0xa
push esi
call sub_409172
pop ecx
test eax eax
pop ecx
je r-xdata
and [ eax ] 0x0
sub_435eb5
mov eax sub_43e298
call sub_408db8
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x94 ]
and [ esi + 0x24 ] 0xffffffbf
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call [ eax + 0xd4 ]
mov ebx eax
xor eax eax
cmp ebx eax
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov edi [ ebp + 0x8 ]
cmp edi eax
je r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
push eax
mov ecx ebx
call sub_4253fc
mov ecx ebx
call sub_422d1a
test eax eax
je r-xdata
cmp edi 0xef06
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4249df
jmp r-xdata
mov [ eax + 0x94 ] edi
mov [ eax + 0x90 ] edi
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push edi
mov ecx esi
call [ eax + 0xc4 ]
mov eax [ ebp - 0x10 ]
cmp [ esi + 0x9c ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov [ esi + 0x94 ] edi
mov [ esi + 0x90 ] edi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov edi 0xf005
sub_435f90
push esi
mov esi ecx
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_423aa1
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov eax [ esi + 0x90 ]
cmp eax [ esi + 0x94 ]
je r-xdata
push eax
mov ecx esi
call sub_435fd8
sub_435fef
mov eax sub_43e2ac
call sub_408db8
sub esp 0x1c
push esi
mov esi ecx
push 0xa
lea ecx [ ebp - 0x28 ]
call sub_41e5ba
mov esi [ esi + 0x70 ]
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov esi [ ebp - 0x24 ]
push edi
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_41e619
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax esi
mov esi [ esi ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x78 ] 0x0
je r-xdata
test esi esi
jne r-xdata
push edi
lea ecx [ ebp - 0x28 ]
call sub_41e6dd
mov eax [ ecx ]
call [ eax + 0x58 ]
jmp r-xdata
call sub_422d1a
mov edx [ eax ]
mov ecx eax
call [ edx + 0x58 ]
jmp r-xdata
mov eax esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0xd0 ]
test eax eax
je r-xdata
pop edi
test esi esi
je r-xdata
sub_43607a
cmp [ esp + 0x4 ] 0x0
push esi
push edi
je r-xdata
xor eax eax
mov esi [ ecx + 0x70 ]
mov eax esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
push [ edi + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
cmp eax [ esp + 0xc ]
jne r-xdata
test esi esi
je r-xdata
mov eax edi
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4360ae
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x4 ]
call sub_43607a
test eax eax
je r-xdata
mov [ esi + 0x1c ] 0x1
push edi
mov edi [ esi ]
mov ecx eax
call sub_425366
shr eax 0x1c
and eax 0x1
mov ecx esi
push eax
call [ edi + 0x4 ]
pop edi
jmp r-xdata
pop esi
retn 0x4
sub_4360e3
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_43607a
mov esi eax
test esi esi
je r-xdata
xor eax eax
push 0x0
mov ecx esi
call sub_425366
not eax
shr eax 0x1c
and eax 0x1
mov ecx edi
push eax
push esi
call sub_435aa3
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_43611c
mov eax sub_43e2c0
call sub_408db8
sub esp 0x104
mov eax [ rw-data ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] eax
mov esi [ ebp + 0xc ]
mov edi 0xfffffdf8
xor ebx ebx
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
cmp eax edi
mov [ ebp - 0x4 ] ebx
jne r-xdata
cmp eax 0xfffffdee
jne r-xdata
test [ esi + 0x64 ] 0x1
jne r-xdata
cmp ecx ebx
je r-xdata
test [ esi + 0xb4 ] 0x1
je r-xdata
push ecx
call [ GetDlgCtrlID@IAT ]
movzx ecx ax
cmp [ esi + 0x8 ] edi
push 0x50
push [ ebp - 0x10 ]
lea eax [ esi + 0x10 ]
push eax
jne r-xdata
lea eax [ ebp - 0x110 ]
push 0x100
push eax
push ecx
call sub_4273a4
test eax eax
je r-xdata
call sub_425008
add esp 0xc
call [ lstrcpynA@IAT ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xa
lea eax [ ebp - 0x110 ]
push 0x1
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4273cb
mov eax [ ebp + 0x10 ]
push 0x213
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] ebx
push [ esi ]
call [ SetWindowPos@IAT ]
push 0x1
pop ebx
sub_4361f3
push ebx
push esi
mov esi [ esp + 0xc ]
push 0x1
pop ebx
mov eax [ esi + 0x4 ]
sub eax 0xe701
je r-xdata
push 0x14
pop eax
dec eax
je r-xdata
mov eax 0x90
jmp r-xdata
dec eax
je r-xdata
push edi
mov edi [ esi ]
push eax
call [ GetKeyState@IAT ]
movsx eax ax
and eax ebx
mov ecx esi
push eax
call [ edi ]
pop edi
mov eax 0x91
jmp r-xdata
sub eax 0x3
je r-xdata
cmp [ rw-data ] 0x0
push 0x15
pop eax
jne r-xdata
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov ebx 0x8000
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_436254
push esi
mov esi ecx
call sub_408030
cmp eax esi
jne r-xdata
mov eax [ esp + 0x8 ]
mov [ eax + 0x1c ] 0x1
mov ecx [ esp + 0x8 ]
xor edx edx
cmp [ esi + 0x50 ] edx
mov eax [ ecx ]
setne dl
push edx
call [ eax + 0x4 ]
jmp r-xdata
pop esi
retn 0x4
sub_436283
push esi
mov esi ecx
call sub_425366
test ah 0x80
je r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xbc ]
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x68 ]
test eax eax
jne r-xdata
push 0x0
test eax eax
je r-xdata
push [ eax + 0x1c ]
jmp r-xdata
mov ecx esi
call sub_4362c7
sub_4362c7
push ebp
mov ebp esp
sub esp 0x204
push esi
push edi
mov esi ecx
call sub_425366
test ah 0x40
je r-xdata
push [ esi + 0xac ]
lea eax [ ebp - 0x204 ]
push eax
call [ lstrcpyA@IAT ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebp - 0x204 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov edi [ lstrcatA@IAT ]
je r-xdata
lea eax [ ebp - 0x204 ]
push eax
push [ esi + 0x1c ]
call sub_42e6f8
pop edi
pop esi
leave
retn 0x4
mov edi [ lstrcatA@IAT ]
lea eax [ ebp - 0x204 ]
push r--data
push eax
call edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x204 ]
push eax
call edi
mov eax [ esi + 0x40 ]
test eax eax
jle r-xdata
push [ esi + 0xac ]
lea eax [ ebp - 0x204 ]
push eax
call edi
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x204 ]
push eax
call [ lstrcpyA@IAT ]
mov eax [ esi + 0x40 ]
test eax eax
jle r-xdata
push eax
lea eax [ ebp - 0x204 ]
push r--data
push eax
call [ lstrlenA@IAT ]
lea eax [ ebp + eax - 0x204 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x204 ]
push r--data
push eax
call edi
push eax
lea eax [ ebp - 0x204 ]
push r--data
push eax
call [ lstrlenA@IAT ]
lea eax [ ebp + eax - 0x204 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
sub_4363c4
sub esp 0xc
push ebx
push ebp
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0xc0 ]
xor ebx ebx
mov [ esp + 0x18 ] eax
cmp [ esp + 0x20 ] ebx
je r-xdata
mov ebp [ esi + 0x70 ]
mov edi [ esp + 0x24 ]
cmp ebp ebx
mov [ esp + 0x10 ] ebx
je r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx ebx
je r-xdata
mov eax [ esp + 0x10 ]
cmp [ esp + 0x20 ] ebx
mov [ edi + 0x8 ] eax
je r-xdata
mov eax ebp
mov ebp [ ebp ]
mov ebx [ eax + 0x8 ]
push [ ebx + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
cmp eax 0xe800
mov [ esp + 0x14 ] eax
jb r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x5c ]
mov ebp [ GetDlgItem@IAT ]
push 0xea21
push [ esi + 0x1c ]
mov [ esi + 0x9c ] ebx
call ebp
test eax eax
mov [ esp + 0x20 ] eax
mov ebx 0xe900
je r-xdata
mov eax [ edi + 0x10 ]
push ebx
mov ecx esi
mov [ esi + 0x9c ] eax
call sub_434d27
push [ edi ]
mov ebp [ GetDlgItem@IAT ]
push [ esi + 0x1c ]
call ebp
push ebx
push eax
mov [ esp + 0x28 ] eax
call [ ShowWindow@IAT ]
push [ esi + 0x1c ]
call [ GetMenu@IAT ]
cmp eax ebx
mov [ edi + 0x4 ] eax
je r-xdata
test ebp ebp
jne r-xdata
cmp eax 0xe81f
ja r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
push ebx
push [ esi + 0x1c ]
call ebp
test eax eax
je r-xdata
mov eax [ esi + 0x48 ]
push 0x7915
mov [ edi + 0x14 ] eax
mov ecx esi
mov [ esi + 0x48 ] ebx
call sub_4348f8
mov ebx 0xe900
cmp [ edi ] ebx
je r-xdata
push 0x1
push ebx
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
push ebx
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
and [ esi + 0xb8 ] 0xfffffffe
xor ebx ebx
push 0x1
lea ecx [ eax - 0xe800 ]
pop eax
shl eax cl
mov ecx ebx
mov [ esp + 0x24 ] eax
mov eax [ ebx ]
call [ eax + 0xc8 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x68 ]
test ecx ecx
je r-xdata
push 0x1
push 0x0
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
push [ edi + 0x4 ]
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
push ebx
push 0xfffffff4
push [ esp + 0x28 ]
call [ SetWindowLongA@IAT ]
push 0xea21
push 0xfffffff4
push eax
call [ SetWindowLongA@IAT ]
mov eax [ esp + 0x20 ]
push ebx
push [ esi + 0x1c ]
call ebp
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xd0 ]
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
or [ esp + 0x10 ] eax
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x5c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
push 0xea21
push 0xfffffff4
push eax
call [ SetWindowLongA@IAT ]
jmp r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
push 0x1
and eax [ esp + 0x28 ]
mov ecx esi
push eax
push ebx
call sub_435aa3
cmp [ esp + 0x14 ] 0xe81f
je r-xdata
push 0x5
push [ esp + 0x24 ]
call [ ShowWindow@IAT ]
mov eax [ edi + 0x14 ]
push 0x1
mov ecx esi
mov [ esi + 0x48 ] eax
call sub_434d27
push eax
push [ esi + 0x1c ]
call ebp
mov [ esp + 0x20 ] eax
sub_4365f3
push esi
mov esi ecx
test [ esi + 0xb8 ] 0x1
je r-xdata
test [ esi + 0xb8 ] 0x2
je r-xdata
mov eax [ esi ]
push [ esi + 0xa8 ]
call [ eax + 0xe4 ]
mov eax [ esi + 0xb8 ]
test al 0x8
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xe0 ]
mov eax [ esi + 0x90 ]
cmp eax [ esi + 0x94 ]
je r-xdata
mov edx [ esi ]
and eax 0x4
push eax
mov ecx esi
call [ edx + 0xc8 ]
push [ esi + 0x1c ]
call [ UpdateWindow@IAT ]
and [ esi + 0xb8 ] 0x0
pop esi
retn
push eax
mov ecx esi
call sub_435fd8
sub_436665
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0xb0 ] edi
jne r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0xb8 ]
lea ecx [ esi + 0xb8 ]
push ebx
push 0x1
pop ebx
test al 0x4
mov [ esi + 0xb0 ] ebx
je r-xdata
and al 0xf3
cmp [ ebp + 0x8 ] edi
mov [ ecx ] eax
je r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx esi
call sub_425366
test ah 0x20
je r-xdata
mov ecx [ esi + 0x68 ]
cmp ecx edi
je r-xdata
push ebx
lea eax [ esi + 0x58 ]
push edi
push eax
push 0x2
push 0xe900
push 0xffff
push edi
mov ecx esi
call sub_4232bb
mov eax 0x7fff
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov ebx 0xffff
push 0xe900
push ebx
push edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
call sub_4232bb
lea eax [ ebp - 0x10 ]
push 0x1
push eax
lea eax [ esi + 0x58 ]
push eax
push 0x2
push 0xe900
push ebx
push edi
mov ecx esi
call sub_4232bb
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push edi
push ecx
mov ecx esi
call [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
push 0x16
sub eax [ ebp - 0xc ]
mov ecx esi
push eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
push eax
push edi
push edi
push edi
call sub_4254f2
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0xb0 ] edi
pop ebx
sub_436752
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
dec eax
je r-xdata
xor edx edx
push 0x1
push edx
push [ ebp + 0xc ]
push 0x1
push 0xe900
push 0xffff
push edx
call sub_4232bb
dec eax
je r-xdata
push 0x1
pop eax
dec eax
jne r-xdata
xor edx edx
cmp [ ebp + 0xc ] edx
jne r-xdata
push [ ebp + 0xc ]
lea esi [ ecx + 0x58 ]
push esi
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
cmp [ ecx + 0x58 ] edx
lea eax [ ecx + 0x58 ]
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
push esi
call [ CopyRect@IAT ]
jmp r-xdata
push eax
call [ SetRectEmpty@IAT ]
jmp r-xdata
cmp [ eax + 0x8 ] edx
jne r-xdata
pop esi
pop ebp
retn 0x8
cmp [ eax + 0x4 ] edx
jne r-xdata
cmp [ eax + 0xc ] edx
je r-xdata
sub_436801
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ GetKeyState@IAT ]
push edi
mov edi ecx
push 0x11
call esi
test ax ax
jge r-xdata
xor ebx ebx
push 0x8
pop ebx
jmp r-xdata
xor eax eax
push 0x4
pop eax
jmp r-xdata
push 0x10
call esi
test ax ax
jge r-xdata
mov edi [ ebp + 0x8 ]
movzx eax bx
shl edi 0x10
or edi eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
movzx ecx bx
shl eax 0x10
or eax ecx
push eax
push 0x20a
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
mov ebx eax
jmp r-xdata
or ebx eax
call [ GetFocus@IAT ]
mov esi eax
call [ GetDesktopWindow@IAT ]
test esi esi
mov [ ebp - 0x4 ] eax
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
leave
retn 0x8
test esi esi
je r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
push [ ebp + 0xc ]
push edi
push 0x20a
push esi
call [ SendMessageA@IAT ]
push esi
mov ebx eax
call [ GetParent@IAT ]
test ebx ebx
mov esi eax
jne r-xdata
sub_4368a4
push esi
mov esi [ esp + 0x8 ]
push edi
cmp esi 0xffffffff
mov edi ecx
jne r-xdata
push esi
mov ecx edi
call sub_4368f4
cmp esi 0xffffffff
je r-xdata
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x4
push esi
mov ecx edi
call sub_425541
push esi
mov ecx edi
call sub_4368f4
push [ edi + 0x1c ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
push 0x1
jmp r-xdata
push 0x9
pop esi
sub_4368f4
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn 0x4
cmp eax 0x6
je r-xdata
cmp eax 0x7
je r-xdata
cmp eax 0x8
je r-xdata
cmp eax 0x4
je r-xdata
push [ ecx + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call [ BringWindowToTop@IAT ]
sub_436934
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0xd0 ]
test eax eax
je r-xdata
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov eax [ esi + 0x78 ]
pop esi
retn
xor eax eax
pop esi
retn
cmp [ eax + 0x78 ] 0x0
je r-xdata
push 0x1
pop eax
pop esi
retn
sub_43852a
mov eax sub_43db09
call sub_408db8
push ecx
push 0x3c
call sub_4250b0
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_421249
sub_438562
mov eax sub_43db1e
call sub_408db8
push ecx
push esi
mov ecx rw-data
call sub_408425
mov esi eax
mov [ ebp - 0x10 ] esi
xor eax eax
cmp esi eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov ecx esi
call sub_421249
mov [ esi ] r--data
mov eax esi
sub_43860d
mov eax sub_43db31
call sub_408db8
push ecx
push 0x118
call sub_439765
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_4391db
sub_438641
mov eax sub_43db45
call sub_408db8
push ecx
push 0x10
call sub_439765
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_4389d7
sub_438785
push esi
mov ecx rw-data
call sub_408425
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov ecx esi
call sub_42cf8a
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_4388c1
push ebp
mov ebp esp
sub esp 0x90
push ebx
push esi
push edi
call [ GetMenuCheckMarkDimensions@IAT ]
movsx ebx ax
shr eax 0x10
movsx ecx ax
cmp ebx 0x20
mov [ ebp - 0xc ] ecx
jle r-xdata
lea eax [ ebx - 0x4 ]
lea esi [ ebx + 0xf ]
cdq
sub eax edx
sar esi 0x4
mov edi eax
mov eax esi
sar edi 0x1
shl eax 0x4
add edi eax
sub edi ebx
cmp edi 0xc
jle r-xdata
push 0x20
pop ebx
push 0x20
pop eax
cmp ecx eax
jle r-xdata
push 0xc
pop edi
push 0x80
lea eax [ ebp - 0x90 ]
push 0xff
push eax
call sub_408d60
mov eax [ ebp - 0xc ]
add esp 0xc
add eax 0xfffffffa
mov [ ebp - 0x4 ] r--data
sar eax 0x1
imul eax esi
add esi esi
mov [ ebp - 0x8 ] 0x5
lea edx [ ebp + eax * 2 - 0x90 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx edi
movzx ax [ eax ]
shl eax cl
inc [ ebp - 0x4 ]
xor ecx ecx
not eax
mov cl ah
mov [ edx + 0x1 ] al
mov [ edx ] cl
add edx esi
dec [ ebp - 0x8 ]
jne r-xdata
lea eax [ ebp - 0x90 ]
push eax
push 0x1
push 0x1
push [ ebp - 0xc ]
push ebx
call [ CreateBitmap@IAT ]
pop edi
pop esi
test eax eax
mov [ rw-data ] eax
pop ebx
jne r-xdata
leave
retn
push 0x7fe3
push eax
call [ LoadBitmapA@IAT ]
mov [ rw-data ] eax
sub_4389fb
mov eax sub_43dea8
call sub_408db8
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_439085
xor edi edi
mov [ esi ] r--data
cmp [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov [ esi + 0x78 ] edi
push [ ebp + 0x8 ]
call sub_40964b
pop ecx
mov [ esi + 0x78 ] eax
jmp r-xdata
call sub_439511
mov ebx eax
push sub_438ff4
lea ecx [ ebx + 0x1070 ]
call sub_439bd8
mov [ eax + 0x4 ] esi
call [ GetCurrentThread@IAT ]
mov [ esi + 0x28 ] eax
call [ GetCurrentThreadId@IAT ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x2c ] eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x68 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0xb2 ] di
mov [ esi + 0xb0 ] di
mov [ esi + 0x70 ] edi
mov [ esi + 0xac ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0xb4 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0xb8 ] 0x200
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_438b01
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0x80 ] 0x0
lea eax [ ecx + 0x80 ]
jne r-xdata
and [ rw-data ] 0x0
mov eax [ ecx ]
push 0x0
call [ eax + 0xc ]
jmp r-xdata
and [ rw-data ] 0x0
mov [ eax ] edx
push 0x1
pop eax
retn
sub_438b45
mov eax sub_43debe
call sub_408db8
push ecx
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
push 0x0
push r--data
push r--data
mov ecx esi
call sub_43a320
mov ecx [ ebp - 0xc ]
mov [ esi + 0xb4 ] eax
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
push 0x20
call sub_4250b0
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1e
push [ ebp + 0x8 ]
push r--data
push r--data
push 0x0
call sub_428172
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0xa8 ] eax
mov edx [ eax ]
mov ecx eax
call [ edx + 0xc ]
sub_438bc1
push 0x1
pop eax
cmp [ rw-data ] eax
jle r-xdata
retn 0x4
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x1
inc ecx
pop edx
cmp al 0x2f
jne r-xdata
mov ecx [ rw-data ]
lea esi [ eax + 0x1 ]
xor edx edx
xor ebx ebx
mov ecx [ ecx + eax * 4 ]
cmp esi [ rw-data ]
mov al [ ecx ]
sete bl
cmp al 0x2d
je r-xdata
pop edi
pop esi
pop ebx
mov eax [ edi ]
push ebx
push edx
push ecx
mov ecx edi
call [ eax + 0xc ]
mov eax esi
cmp eax [ rw-data ]
jl r-xdata
sub_438c14
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0x14 ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x18 ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x1c ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x20 ] ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x1
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn
sub_438c6f
mov eax sub_43def1
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x3
call sub_4249df
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x2
call sub_4249df
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x1
call sub_4249df
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x14 ]
call sub_4249df
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_438cc6
cmp [ esp + 0x8 ] 0x0
push esi
push [ esp + 0x8 ]
mov esi ecx
je r-xdata
call sub_438dad
call sub_438cef
jmp r-xdata
push [ esp + 0x10 ]
mov ecx esi
call sub_438dfd
pop esi
retn 0xc
sub_438cef
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ lstrcmpA@IAT ]
push esi
push edi
push r--data
mov esi ecx
push ebx
call ebp
test eax eax
jne r-xdata
push r--data
push ebx
call ebp
test eax eax
jne r-xdata
mov [ esi + 0x10 ] 0x3
jmp r-xdata
mov edi [ lstrcmpiA@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
mov [ esi + 0x10 ] 0x2
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov [ esi + 0x10 ] 0x5
push r--data
push ebx
call edi
test eax eax
je r-xdata
push r--data
push ebx
call ebp
test eax eax
jne r-xdata
push r--data
push ebx
call edi
test eax eax
jne r-xdata
push eax
call sub_4346e0
mov [ esi + 0x10 ] 0x4
jmp r-xdata
push r--data
push ebx
call edi
test eax eax
jne r-xdata
push eax
call sub_4346e0
mov [ esi + 0x8 ] 0x1
jmp r-xdata
push eax
call sub_4346e0
mov [ esi + 0xc ] 0x1
and [ esi + 0x4 ] 0x0
jmp r-xdata
sub_438dad
mov eax ecx
push edi
mov edx [ eax + 0x14 ]
lea ecx [ eax + 0x14 ]
cmp [ edx - 0x8 ] 0x0
je r-xdata
push [ esp + 0x8 ]
call sub_424b68
mov edx [ eax + 0x10 ]
cmp edx 0x3
jne r-xdata
pop edi
retn 0x4
mov edi [ eax + 0x18 ]
lea ecx [ eax + 0x18 ]
cmp [ edi - 0x8 ] 0x0
je r-xdata
cmp edx edx
jne r-xdata
mov edi [ eax + 0x1c ]
lea ecx [ eax + 0x1c ]
cmp [ edi - 0x8 ] 0x0
je r-xdata
cmp edx edx
jne r-xdata
lea ecx [ eax + 0x20 ]
mov eax [ eax + 0x20 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
sub_438dfd
xor eax eax
cmp [ esp + 0x4 ] eax
je r-xdata
retn 0x4
cmp [ ecx + 0x10 ] eax
push 0x1
pop edx
jne r-xdata
cmp [ ecx + 0x8 ] eax
jne r-xdata
push esi
mov esi [ ecx + 0x14 ]
cmp [ esi - 0x8 ] eax
pop esi
je r-xdata
mov [ ecx + 0x4 ] eax
cmp [ ecx + 0xc ] eax
jne r-xdata
mov [ ecx + 0x10 ] edx
mov eax edx
sub_438e2c
mov eax sub_43df04
call sub_408db8
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x80 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ esi + 0xa8 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
call sub_439511
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
mov eax [ esi + 0x94 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x98 ]
cmp eax ebx
je r-xdata
push eax
call sub_42e7e0
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
mov ax [ esi + 0xb0 ]
push edi
mov edi [ GlobalDeleteAtom@IAT ]
cmp ax bx
je r-xdata
push eax
call sub_42e7e0
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
mov ax [ esi + 0xb2 ]
cmp ax bx
je r-xdata
push eax
call edi
mov ecx [ esi + 0xac ]
pop edi
cmp ecx ebx
je r-xdata
push eax
call edi
call sub_439511
mov ecx [ eax + 0x10 ]
cmp ecx [ esi + 0x78 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp [ eax + 0x4 ] esi
jne r-xdata
mov [ eax + 0x10 ] ebx
push [ esi + 0x78 ]
call sub_4094a8
push [ esi + 0x7c ]
call sub_4094a8
push [ esi + 0x88 ]
call sub_4094a8
push [ esi + 0x8c ]
call sub_4094a8
push [ esi + 0x90 ]
call sub_4094a8
or [ ebp - 0x4 ] 0xffffffff
add esp 0x14
mov ecx esi
mov [ esi + 0x28 ] ebx
call sub_43c0f6
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov [ eax + 0x4 ] ebx
sub_438f62
push esi
mov esi ecx
mov ecx [ esi + 0xa8 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
pop esi
retn
push eax
push r--data
push r--data
mov ecx esi
call sub_4320b0
sub_438f92
push esi
mov esi ecx
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
call sub_439511
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x10 ] 0x5
je r-xdata
mov eax [ esi + 0xbc ]
test eax eax
je r-xdata
mov ecx esi
call sub_438f62
mov eax [ esi + 0x38 ]
pop esi
retn
call eax
sub_438fe5
mov ecx rw-data
jmp r-xdata
jmp r-xdata
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_438ff4
mov eax sub_43df19
call sub_408db8
push ecx
push 0x3c
call sub_439765
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_4393f3
sub_439025
mov eax sub_43df68
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_425715
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x50 ] eax
mov eax [ ebp + 0xc ]
mov ecx esi
mov [ esi ] r--data
mov [ esi + 0x4c ] eax
call sub_4390c2
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
sub_439085
mov eax sub_43df7c
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_425715
xor eax eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
call sub_4390c2
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4390c2
push esi
mov esi ecx
push edi
xor edi edi
lea eax [ esi + 0x5c ]
mov [ esi + 0x1c ] edi
push eax
mov [ esi + 0x20 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x64 ] edi
call [ GetCursorPos@IAT ]
mov [ esi + 0x58 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x24 ] 0x1
pop edi
pop esi
retn
sub_43912a
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
je r-xdata
push sub_438672
mov ecx rw-data
call sub_439c9a
mov esi eax
cmp [ esi + 0x4 ] edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov [ esi + 0xc ] r-xdata
mov [ esi + 0x10 ] sub_4134a0
mov [ esi + 0x14 ] sub_413560
mov [ esi + 0x18 ] sub_4136e0
mov [ esi + 0x1c ] r-xdata
mov [ esi + 0x20 ] sub_413b10
mov [ esi + 0x24 ] sub_413f20
mov [ esi + 0x28 ] sub_4137b0
mov [ esi + 0x2c ] sub_4138f0
call sub_439511
push [ eax + 0x8 ]
call [ esi + 0xc ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
call sub_439511
push [ eax + 0x8 ]
call [ esi + 0x14 ]
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x1
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
sub_43920d
mov eax sub_43dfa4
call sub_408db8
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0xcc ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xcc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push eax
call edi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call sub_4094a8
pop ecx
sub_4392b7
mov eax ecx
xor edx edx
lea ecx [ eax + 0x103c ]
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
or [ eax + 0x104c ] 0xffffffff
lea ecx [ eax + 0x1048 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov cl [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x28 ] 0x1c
mov [ eax + 0x20 ] 0x14
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] cl
mov [ eax + 0x30 ] 0x1
mov [ eax + 0x1040 ] 0x18
retn 0x4
sub_439335
mov eax sub_43dfc6
call sub_408db8
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x1044 ]
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov ecx [ esi + 0x106c ]
lea edi [ esi + 0x106c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1070 ]
call sub_439c7c
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
lea edx [ esi + 0x1048 ]
push edx
call [ eax + 0xc ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_4393af
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
mov eax [ esi + 0xc ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
pop esi
leave
retn 0x4
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_41fbe7
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push eax
call sub_4250d9
pop ecx
sub_43942d
mov eax sub_43dfd8
call sub_408db8
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
call sub_41e74f
push eax
call sub_4250d9
pop ecx
mov ecx [ esi + 0x38 ]
jmp r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
sub_4394f2
mov ecx rw-data
jmp r-xdata
jmp r-xdata
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_43954e
push esi
mov esi ecx
lea eax [ esi + 0x20 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x1c ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_439583
push esi
push 0x1074
call sub_439765
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push 0x1
mov ecx esi
call sub_4392b7
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_43971f
mov edx [ ecx ]
test edx edx
jne r-xdata
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp edx esi
jne r-xdata
xor eax eax
jmp r-xdata
test edx edx
je r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + esi ]
mov [ ecx ] eax
jmp r-xdata
retn 0x4
pop esi
mov ecx [ ecx + 0x4 ]
push edi
push 0x1
pop eax
test edx edx
pop edi
je r-xdata
mov edx edi
test edx edx
jne r-xdata
mov eax [ ecx + esi ]
mov [ ecx + edx ] eax
mov edi [ ecx + edx ]
cmp edi esi
je r-xdata
sub_439797
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
call sub_41b163
sub_4397d9
push esi
mov esi ecx
push edi
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call [ TlsFree@IAT ]
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edi [ eax + 0x4 ]
push 0x0
push eax
mov ecx esi
call sub_439ae6
test edi edi
mov eax edi
jne r-xdata
add esi 0x1c
push esi
call [ DeleteCriticalSection@IAT ]
pop edi
pop esi
retn
push eax
call [ GlobalHandle@IAT ]
mov edi eax
push edi
call [ GlobalUnlock@IAT ]
push edi
call [ GlobalFree@IAT ]
sub_439830
push ecx
push ecx
push ebp
push esi
mov esi ecx
push edi
lea eax [ esi + 0x1c ]
push eax
mov [ esp + 0x14 ] eax
call [ EnterCriticalSection@IAT ]
mov ebp [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
cmp edi ebp
jge r-xdata
push 0x1
pop edi
cmp ebp edi
jle r-xdata
mov eax [ esi + 0x10 ]
test [ eax + edi * 8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
add ebp 0x20
test eax eax
push ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add eax 0x8
cmp edi [ esi + 0xc ]
jl r-xdata
push eax
call [ GlobalHandle@IAT ]
mov ebx eax
push ebx
call [ GlobalUnlock@IAT ]
mov eax ebp
push 0x2002
shl eax 0x3
push eax
push ebx
call [ GlobalReAlloc@IAT ]
mov eax ebp
shl eax 0x3
push eax
push 0x2002
call [ GlobalAlloc@IAT ]
jmp r-xdata
cmp edi ebp
jl r-xdata
inc edi
add eax 0x8
cmp edi ebp
jl r-xdata
mov eax [ esi + 0x10 ]
or [ eax + edi * 8 ] 0x1
push [ esp + 0x10 ]
lea eax [ eax + edi * 8 ]
lea eax [ edi + 0x1 ]
mov [ esi + 0x8 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ecx
pop ecx
retn
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
push [ esp + 0x10 ]
call ebx
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx eax
imul ecx ecx 0x1fffffff
add ecx ebp
lea eax [ ebx + eax * 8 ]
shl ecx 0x3
push ecx
push 0x0
push eax
call sub_408d60
add esp 0xc
mov [ esi + 0x10 ] ebx
mov [ esi + 0x4 ] ebp
pop ebx
push [ esi + 0x10 ]
call [ GlobalHandle@IAT ]
push eax
call ebx
push [ esp + 0x14 ]
call [ LeaveCriticalSection@IAT ]
call sub_41b163
mov ebx [ GlobalLock@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
test [ eax ] 0x1
je r-xdata
sub_439942
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x1c ]
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov esi [ edi + 0x14 ]
mov ebx [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ edi + 0x10 ]
push [ ebp - 0x4 ]
and [ eax + ebx * 8 ] 0xfffffffe
lea eax [ eax + ebx * 8 ]
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp ebx [ esi + 0x8 ]
jge r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + ebx * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_43999f
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
push [ esi ]
call [ TlsGetValue@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x10
call sub_439765
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea ebx [ edi + 0x8 ]
cmp eax [ ebx ]
jl r-xdata
xor edi edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + edx * 4 ] ecx
pop ebx
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0xc ]
push 0x2
shl ecx 0x2
push ecx
push eax
call [ LocalReAlloc@IAT ]
mov eax [ esi + 0xc ]
shl eax 0x2
push eax
push 0x0
call [ LocalAlloc@IAT ]
jmp r-xdata
and [ edi + 0x8 ] 0x0
and [ edi + 0xc ] 0x0
lea ebx [ edi + 0x8 ]
lea eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] edi
call [ EnterCriticalSection@IAT ]
push edi
lea ecx [ esi + 0x14 ]
call sub_43970c
lea eax [ esi + 0x1c ]
push eax
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
mov eax [ ebx ]
mov ecx eax
imul ecx ecx 0x3fffffff
add ecx [ esi + 0xc ]
shl ecx 0x2
push ecx
mov ecx [ edi + 0xc ]
push 0x0
lea eax [ ecx + eax * 4 ]
push eax
call sub_408d60
mov eax [ esi + 0xc ]
add esp 0xc
mov [ ebx ] eax
push edi
push [ esi ]
call [ TlsSetValue@IAT ]
call sub_41b163
test eax eax
mov [ edi + 0xc ] eax
jne r-xdata
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
sub_439aa5
push esi
mov esi ecx
push edi
lea edi [ esi + 0x1c ]
push edi
call [ EnterCriticalSection@IAT ]
push 0x1
pop ecx
cmp [ esi + 0xc ] ecx
jle r-xdata
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
retn 0x4
mov eax [ esi + 0x10 ]
cmp [ eax + ecx * 8 + 0x4 ] 0x0
lea eax [ eax + ecx * 8 ]
jne r-xdata
inc ecx
cmp ecx [ esi + 0xc ]
jl r-xdata
test [ eax ] 0x1
je r-xdata
mov edx [ esp + 0xc ]
mov [ eax + 0x4 ] edx
sub_439ae6
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x1
mov ebx ecx
pop edi
cmp [ esi + 0x8 ] edi
mov [ ebp - 0x4 ] edi
jle r-xdata
lea edi [ ebx + 0x1c ]
push edi
call [ EnterCriticalSection@IAT ]
push esi
lea ecx [ ebx + 0x14 ]
call sub_43971f
push edi
call [ LeaveCriticalSection@IAT ]
push [ esi + 0xc ]
call [ LocalFree@IAT ]
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push 0x0
push [ ebx ]
call [ TlsSetValue@IAT ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x10 ]
cmp [ ecx + edi * 8 + 0x4 ] eax
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + edi * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax + edi * 4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_439b7f
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x1c ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push [ esi ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
pop esi
pop ebx
retn 0x8
push edi
push [ esp + 0xc ]
mov ecx esi
push eax
call sub_439ae6
jmp r-xdata
push [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov ecx esi
push eax
call sub_439ae6
test edi edi
mov eax edi
jne r-xdata
pop edi
sub_439bd8
push esi
push edi
mov edi ecx
cmp [ edi ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ edi ]
push [ eax ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
xor esi esi
cmp esi [ eax + 0x8 ]
jge r-xdata
call sub_439830
mov [ edi ] eax
mov ecx rw-data
mov eax ecx
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
call [ esp + 0xc ]
mov ecx [ rw-data ]
mov esi eax
push esi
push [ edi ]
call sub_43999f
mov eax [ eax + 0xc ]
mov esi [ eax + esi * 4 ]
jmp r-xdata
xor ecx ecx
call sub_439797
mov ecx eax
jmp r-xdata
test esi esi
jne r-xdata
mov [ rw-data ] ecx
sub_439c4f
push esi
mov esi [ ecx ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ eax ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax + esi * 4 ]
pop esi
retn
sub_439c7c
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_439942
sub_439c9a
mov eax sub_43e070
call sub_408db8
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] esp
cmp [ esi ] edi
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push 0x10
call sub_43a141
mov [ ebp - 0x4 ] edi
cmp [ esi ] edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call sub_43a1b1
call [ ebp + 0x8 ]
mov [ esi ] eax
sub_439ce5
push 0x10
call sub_43a1b1
xor edi edi
push edi
push edi
call sub_408dd7
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_439d7f
mov eax sub_43e0e4
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push 0x0
call eax
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call [ FreeLibrary@IAT ]
sub_439dc0
mov eax sub_43e0f8
call sub_408db8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
call eax
sub_439df6
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
je r-xdata
push sub_438672
mov ecx rw-data
call sub_439c9a
mov esi eax
cmp [ esi + 0x4 ] ebx
jne r-xdata
push 0x1
pop eax
jmp r-xdata
cmp [ esi + 0x8 ] ebx
jne r-xdata
push r--data
call [ LoadLibraryA@IAT ]
cmp eax ebx
mov [ esi + 0x8 ] eax
je r-xdata
pop esi
pop ebx
retn
call sub_439511
push [ eax + 0x8 ]
call [ esi + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
push edi
mov edi [ GetProcAddress@IAT ]
push 0xc
push eax
call edi
push 0xd
mov [ esi + 0xc ] eax
push [ esi + 0x8 ]
call edi
push 0x10
mov [ esi + 0x10 ] eax
push [ esi + 0x8 ]
call edi
push 0x18
mov [ esi + 0x14 ] eax
push [ esi + 0x8 ]
call edi
push 0x6
mov [ esi + 0x18 ] eax
push [ esi + 0x8 ]
call edi
push 0x15
mov [ esi + 0x1c ] eax
push [ esi + 0x8 ]
call edi
push 0x16
mov [ esi + 0x20 ] eax
push [ esi + 0x8 ]
call edi
push 0x3
mov [ esi + 0x24 ] eax
push [ esi + 0x8 ]
call edi
push 0x19
mov [ esi + 0x28 ] eax
push [ esi + 0x8 ]
call edi
mov [ esi + 0x2c ] eax
pop edi
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] ebx
cmp eax ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
je r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
mov [ esi + 0x4 ] 0x1
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x8 ] ebx
cmp [ esi + 0x1c ] ebx
je r-xdata
cmp [ esi + 0x20 ] ebx
je r-xdata
cmp [ esi + 0x10 ] ebx
je r-xdata
call sub_439511
push [ eax + 0x8 ]
call [ esi + 0xc ]
test eax eax
jne r-xdata
sub_439f55
mov ecx rw-data
jmp r-xdata
jmp r-xdata
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_439f8e
cmp [ rw-data ] 0x0
je r-xdata
retn
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
inc eax
push 0x3
mov [ rw-data ] eax
call esi
inc eax
mov [ rw-data ] 0x1
mov [ rw-data ] eax
pop esi
sub_439fe0
push ebx
push esi
push edi
mov esi ecx
call [ GetVersion@IAT ]
xor ecx ecx
push 0x1
mov cl ah
movzx edx al
movzx ecx cl
shl edx 0x8
add ecx edx
mov [ esi + 0x54 ] ecx
mov ecx eax
shr ecx 0x1f
cmp al 0x4
mov [ esi + 0x58 ] ecx
sbb eax eax
pop ecx
inc eax
xor ebx ebx
sub ecx eax
cmp eax ebx
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] ecx
mov [ esi + 0x64 ] eax
mov [ esi + 0x68 ] ebx
je r-xdata
mov ecx esi
call sub_427976
mov ecx esi
mov [ esi + 0x24 ] ebx
call sub_427932
mov edi [ LoadCursorA@IAT ]
push 0x7f02
push ebx
call edi
push 0x7f00
push ebx
mov [ esi + 0x3c ] eax
call edi
mov [ esi + 0x40 ] eax
xor eax eax
cmp [ esi + 0x5c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x44 ] ebx
pop edi
setne al
inc eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebx
retn
push ebx
call [ GetProcessVersion@IAT ]
cmp eax 0x40000
sbb eax eax
inc eax
mov [ esi + 0x68 ] eax
sub_43a07b
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push eax
call [ GetOEMCP@IAT ]
push eax
call [ GetCPInfo@IAT ]
push 0x1
pop eax
cmp eax [ ebp - 0x14 ]
sbb eax eax
neg eax
leave
retn
sub_43a0ae
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
push 0x1
pop esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
cmp al 0x4
jae r-xdata
and [ rw-data ] 0x0
push rw-data
call [ InitializeCriticalSection@IAT ]
test eax 0x80000000
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
sub_43a0f3
cmp [ rw-data ] 0x0
je r-xdata
retn
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
push edi
mov edi [ DeleteCriticalSection@IAT ]
push rw-data
call edi
mov esi rw-data
mov ebx rw-data
add ebx 0x18
add esi 0x4
cmp ebx rw-data
jl r-xdata
push ebx
call edi
dec [ esi ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
sub_43a141
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
call sub_43a0ae
pop ebx
retn 0x4
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi * 4 + rw-data ] ebx
mov ebx [ EnterCriticalSection@IAT ]
lea esi [ edi * 4 + rw-data ]
jne r-xdata
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call ebx
pop edi
pop esi
push ebp
mov ebp rw-data
push ebp
call ebx
cmp [ esi ] 0x0
jne r-xdata
push ebp
call [ LeaveCriticalSection@IAT ]
pop ebp
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi ]
sub_43a1d8
push esi
mov esi ecx
push edi
push [ esi + 0x7c ]
call sub_4094a8
push [ esp + 0x10 ]
call sub_40964b
push [ esi + 0x90 ]
lea edi [ esi + 0x90 ]
mov [ esi + 0x7c ] eax
call sub_4094a8
push [ esi + 0x78 ]
call sub_40964b
add esp 0x10
mov [ edi ] eax
pop edi
pop esi
retn 0x4
sub_43a213
push ebp
mov ebp esp
sub esp 0x100
push esi
lea eax [ ebp - 0x100 ]
push 0x100
push eax
push [ ebp + 0x8 ]
mov esi ecx
call sub_4273a4
lea eax [ ebp - 0x100 ]
mov ecx esi
push eax
call sub_43a1d8
pop esi
leave
retn 0x4
sub_43a246
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
mov esi 0x2001f
xor edi edi
push eax
push esi
push edi
mov ebx ecx
push r--data
push 0x80000001
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] edi
mov esi [ RegCloseKey@IAT ]
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push esi
push edi
push edi
push edi
push [ ebx + 0x7c ]
mov ebx [ RegCreateKeyExA@IAT ]
push [ ebp - 0x4 ]
call ebx
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push edi
push esi
push edi
push edi
push edi
push [ eax + 0x90 ]
push [ ebp - 0x8 ]
call ebx
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
call esi
sub_43a2da
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
push edi
mov [ ebp - 0x4 ] esi
call sub_43a246
mov edi eax
cmp edi esi
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x2001f
push esi
push esi
push esi
push [ ebp + 0x8 ]
push edi
call [ RegCreateKeyExA@IAT ]
push edi
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
sub_43a320
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ecx + 0x7c ] 0x0
push esi
je r-xdata
push [ ecx + 0x90 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetPrivateProfileIntA@IAT ]
push [ ebp + 0x8 ]
call sub_43a2da
mov esi eax
test esi esi
jne r-xdata
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push [ ebp + 0xc ]
mov [ ebp + 0x8 ] 0x4
push esi
call [ RegQueryValueExA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
test edi edi
pop edi
jne r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
pop esi
leave
retn 0xc
sub_43a38c
mov eax sub_43e140
call sub_408db8
mov eax 0x100c
call sub_40a070
push edi
xor edi edi
cmp [ ecx + 0x7c ] edi
mov [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
push [ ebp + 0xc ]
call sub_43a2da
cmp eax edi
mov [ ebp - 0x10 ] eax
jne r-xdata
push [ ecx + 0x90 ]
lea eax [ ebp - 0x1018 ]
push 0x1000
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetPrivateProfileStringA@IAT ]
lea eax [ ebp - 0x1018 ]
push eax
mov [ ebp + 0x14 ] rw-data
mov ecx [ rw-data ]
push ebx
push esi
mov [ ebp + 0xc ] ecx
lea ecx [ ebp - 0x18 ]
mov esi [ RegQueryValueExA@IAT ]
push ecx
lea ecx [ ebp - 0x14 ]
push edi
push ecx
push edi
mov [ ebp - 0x4 ] edi
push [ ebp + 0x10 ]
push eax
call esi
mov ebx eax
cmp ebx edi
jne r-xdata
push [ ebp + 0x14 ]
jmp r-xdata
push [ ebp - 0x10 ]
call [ RegCloseKey@IAT ]
pop esi
cmp ebx edi
pop ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
lea ecx [ ebp + 0xc ]
push eax
push [ ebp - 0x18 ]
call sub_424e0f
push eax
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp + 0x10 ]
push [ ebp - 0x10 ]
call esi
push 0xffffffff
lea ecx [ ebp + 0xc ]
mov ebx eax
call sub_424e5e
mov ecx [ ebp + 0x8 ]
call sub_424a4d
push [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
call sub_424a4d
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_424754
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_4249df
jmp r-xdata
sub_43a49d
mov eax sub_43e154
call sub_408db8
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
xor edi edi
mov [ esi ] edi
mov [ ebx ] edi
cmp [ ecx + 0x7c ] edi
je r-xdata
push edi
lea eax [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43a38c
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov eax [ eax - 0x8 ]
cmp eax edi
mov [ ebp + 0x8 ] eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_43a2da
cmp eax edi
mov [ ebp + 0x14 ] eax
jne r-xdata
cdq
sub eax edx
sar eax 0x1
push eax
mov [ ebx ] eax
call sub_4250b0
cmp [ ebp + 0x8 ] 0x0
pop ecx
mov [ esi ] eax
jle r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_4249df
jmp r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
lea ecx [ ebp - 0x10 ]
push edi
push ecx
push edi
mov edi [ RegQueryValueExA@IAT ]
push [ ebp + 0xc ]
push eax
call edi
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_4249df
mov eax [ ebp + 0xc ]
add eax edi
mov cl [ eax + 0x1 ]
mov al [ eax ]
shl cl 0x4
add cl al
mov eax edi
cdq
sub eax edx
mov edx [ esi ]
sub cl 0x51
sar eax 0x1
inc edi
inc edi
mov [ eax + edx ] cl
cmp edi [ ebp + 0x8 ]
jl r-xdata
push [ ebp + 0x14 ]
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
push eax
call sub_4250b0
pop ecx
mov [ esi ] eax
lea ecx [ ebp + 0x10 ]
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
call edi
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
push 0x1
pop eax
push [ esi ]
call sub_4250d9
pop ecx
mov [ esi ] ebx
jmp r-xdata
sub_43a5c5
mov eax sub_43e2d5
call sub_408db8
push ecx
push 0xbc
call sub_4250b0
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_43476b
sub_43a60c
push esi
mov esi [ SetErrorMode@IAT ]
push 0x0
call esi
or ax 0x8001
push eax
call esi
call sub_439511
mov esi [ esp + 0x8 ]
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
call sub_439511
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_439511
cmp [ eax + 0x14 ] 0x0
pop esi
jne r-xdata
mov ecx [ esp + 0xc ]
mov [ eax + 0x68 ] esi
mov [ eax + 0x6c ] ecx
mov ecx [ esp + 0x10 ]
mov [ eax + 0x70 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0x74 ] ecx
mov ecx eax
call sub_43a66f
push 0x1
pop eax
retn 0x10
call sub_426c03
sub_43a66f
push ebp
mov ebp esp
sub esp 0x30c
push ebx
push esi
push edi
mov esi ecx
call sub_439511
mov edi eax
mov eax [ esi + 0x68 ]
mov ebx 0x104
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x68 ]
mov [ edi + 0xc ] eax
lea eax [ ebp - 0x20c ]
push ebx
push eax
push [ esi + 0x68 ]
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x20c ]
push 0x2e
push eax
call sub_40a630
and [ eax ] 0x0
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x108 ]
push ebx
push eax
lea eax [ ebp - 0x20c ]
push eax
call sub_43a78c
xor ebx ebx
cmp [ esi + 0x88 ] ebx
jne r-xdata
cmp [ esi + 0x78 ] ebx
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_40964b
pop ecx
mov [ esi + 0x88 ] eax
mov eax [ esi + 0x78 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x8c ] ebx
lea edi [ esi + 0x8c ]
jne r-xdata
lea eax [ ebp - 0x30c ]
push 0x100
push eax
push 0xe000
call sub_4273a4
test eax eax
je r-xdata
cmp [ esi + 0x90 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
push r--data
push ebx
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call sub_40964b
mov [ edi ] eax
and [ ebx ] 0x0
pop ecx
push [ esi + 0x88 ]
lea eax [ ebp - 0x30c ]
push eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x108 ]
push r--data
push eax
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call sub_40964b
pop ecx
mov [ esi + 0x90 ] eax
call sub_40964b
pop ecx
mov [ esi + 0x78 ] eax
sub_43a78c
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi esi
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov al [ esi ]
cmp al 0x5c
je r-xdata
push [ esp + 0x14 ]
push edi
push [ esp + 0x18 ]
call [ lstrcpynA@IAT ]
xor eax eax
push edi
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
push esi
call sub_40a09f
pop ecx
mov edi eax
cmp al 0x2f
je r-xdata
pop edi
pop esi
retn 0xc
cmp [ esi ] 0x0
je r-xdata
cmp al 0x3a
jne r-xdata
push esi
call sub_40a09f
pop ecx
mov esi eax
jmp r-xdata
sub_43c0a6
mov eax sub_43de94
call sub_408db8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x4
push ecx
call sub_42e750
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_43c0f6
mov eax sub_43df90
call sub_408db8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x28 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
call sub_439537
cmp [ eax + 0x4 ] esi
jne r-xdata
push eax
call [ CloseHandle@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_42572f
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
and [ eax + 0x4 ] 0x0
sub_43c14f
push ebx
push ebp
push esi
push edi
call sub_439511
push 0x1
mov ebp eax
call sub_43a141
add ebp 0x34
xor ebx ebx
mov esi ebp
push 0x1
mov [ ebp ] bl
call sub_43a1b1
call sub_439511
mov eax [ eax + 0x4 ]
cmp eax ebx
je r-xdata
push 0xa
push esi
call sub_409172
pop ecx
mov edi eax
pop ecx
mov [ edi ] bl
call sub_439511
push [ eax + 0x8 ]
push esi
call [ UnregisterClassA@IAT ]
lea esi [ edi + 0x1 ]
jmp r-xdata
call sub_439281
mov esi eax
mov ecx [ esi + 0xcc ]
lea edi [ esi + 0xcc ]
cmp ecx ebx
je r-xdata
mov eax [ eax + 0x54 ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
call sub_439511
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xb8 ]
test eax eax
je r-xdata
push ebx
push 0x1
call eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
cmp eax ebx
je r-xdata
mov [ edi ] ebx
mov eax [ esi + 0x2c ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0x30 ] ebx
push eax
call edi
mov [ esi + 0x2c ] ebx
j_sub_4048b0
jmp sub_4048b0
j_sub_4266ac#2
jmp j_sub_4266ac
j_sub_405f90#2
jmp sub_405f90
j_sub_4042e0#2
jmp sub_4042e0
j_sub_4043e0
jmp sub_4043e0
j_sub_401a50
jmp sub_401a50
j_sub_407c30#2
jmp sub_407c30
j_sub_404360
jmp sub_404360
j_sub_405b00#2
jmp sub_405b00
j_sub_403fb0
jmp sub_403fb0
j_sub_4058e0
jmp sub_4058e0
j_sub_405de0#2
jmp sub_405de0
j_sub_4023a0
jmp sub_4023a0
j_sub_404e30
jmp sub_404e30
j_sub_404390
jmp sub_404390
j_sub_402380
jmp sub_402380
j_sub_405b00
jmp sub_405b00
j_sub_402af0
jmp sub_402af0
j_sub_404360#2
jmp sub_404360
j_sub_405db0
jmp sub_405db0
j_sub_402db0
jmp sub_402db0
j_sub_404070
jmp sub_404070
j_sub_404880#2
jmp sub_404880
j_sub_402a30
jmp sub_402a30
j_sub_405ad0
jmp sub_405ad0
j_sub_407480
jmp sub_407480
j_sub_402d70
jmp sub_402d70
j_sub_4022c0
jmp sub_4022c0
j_sub_404e70
jmp sub_404e70
j_sub_404d70
jmp sub_404d70
j_sub_407210
jmp sub_407210
j_sub_405970
jmp sub_405970
j_sub_404dc0
jmp sub_404dc0
j_sub_402a70
jmp sub_402a70
j_sub_402d30
jmp sub_402d30
j_sub_401a20
jmp sub_401a20
j_sub_404fd0
jmp sub_404fd0
j_sub_405e50
jmp sub_405e50
j_sub_402cc0
jmp sub_402cc0
j_sub_404c70#2
jmp sub_404c70
j_sub_405940#2
jmp sub_405940
j_sub_4027e0
jmp sub_4027e0
j_sub_401820
jmp sub_401820
j_sub_402270
jmp sub_402270
j_sub_4029d0
jmp sub_4029d0
j_sub_401bb0
jmp sub_401bb0
j_sub_407850
jmp sub_407850
j_sub_402950
jmp sub_402950
j_sub_405bd0
jmp sub_405bd0
j_sub_404900
jmp sub_404900
j_sub_4021f0
jmp sub_4021f0
j_sub_403460
jmp sub_403460
j_sub_4019c0
jmp sub_4019c0
j_sub_407aa0
jmp sub_407aa0
j_sub_404880
jmp sub_404880
j_sub_404b00
jmp sub_404b00
j_sub_402ea0
jmp sub_402ea0
j_sub_405f90
jmp sub_405f90
j_sub_4026b0
jmp sub_4026b0
j_sub_401840
jmp sub_401840
j_sub_425ef9#2
jmp j_sub_425ef9
j_sub_404cf0
jmp sub_404cf0
j_sub_405040
jmp sub_405040
j_sub_405ab0
jmp sub_405ab0
j_sub_403230
jmp sub_403230
j_sub_407930
jmp sub_407930
j_sub_402040#2
jmp sub_402040
j_sub_402ab0
jmp sub_402ab0
j_sub_4022a0
jmp sub_4022a0
j_sub_4023e0
jmp sub_4023e0
j_sub_402d00
jmp sub_402d00
j_sub_404ca0
jmp sub_404ca0
j_sub_402b20
jmp sub_402b20
j_sub_4021b0
jmp sub_4021b0
j_sub_403270
jmp sub_403270
j_sub_402de0
jmp sub_402de0
j_sub_405660
jmp sub_405660
j_sub_402a00
jmp sub_402a00
j_sub_407660
jmp sub_407660
j_sub_407770
jmp sub_407770
j_sub_402850
jmp sub_402850
j_sub_406610
jmp sub_406610
j_sub_403fb0#2
jmp sub_403fb0
j_sub_402b90
jmp sub_402b90
j_sub_401e20
jmp sub_401e20
j_sub_4075c0
jmp sub_4075c0
j_sub_406ea0
jmp sub_406ea0
j_sub_405e30
jmp sub_405e30
j_sub_402910
jmp sub_402910
j_sub_404400
jmp sub_404400
j_sub_406e60
jmp sub_406e60
j_sub_405e70
jmp sub_405e70
j_sub_404f80
jmp sub_404f80
j_sub_407460
jmp sub_407460
j_sub_401690#2
jmp sub_401690
j_sub_401f10
jmp sub_401f10
j_sub_405920
jmp sub_405920
j_sub_4057d0
jmp sub_4057d0
j_sub_404310
jmp sub_404310
j_sub_401670
jmp sub_401670
j_sub_405940
jmp sub_405940
j_sub_402040
jmp sub_402040
j_sub_405de0
jmp sub_405de0
j_sub_407c30
jmp sub_407c30
j_sub_404c70
jmp sub_404c70
j_sub_405900
jmp sub_405900
j_sub_402c50
jmp sub_402c50
j_sub_402070
jmp sub_402070
j_sub_4033d0
jmp sub_4033d0
j_sub_404be0
jmp sub_404be0
j_sub_438e2c#2
jmp j_sub_438e2c
j_sub_406050
jmp sub_406050
j_sub_405fc0
jmp sub_405fc0
j_sub_403530
jmp sub_403530
j_sub_401690
jmp sub_401690
j_sub_402b60
jmp sub_402b60
j_sub_401db0
jmp sub_401db0
j_sub_4042e0
jmp sub_4042e0
j_sub_407750
jmp sub_407750
j_sub_405cf0
jmp sub_405cf0
j_sub_406aa0
jmp sub_406aa0
j_sub_405060
jmp sub_405060
j_sub_402c10
jmp sub_402c10
sub_401670
retn 0x4
sub_401690
push esi
mov esi ecx
call j_sub_401750
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
add esp 0x4
sub_401820
retn
sub_4019a0
mov eax [ esp + 0x4 ]
push eax
call j_sub_401840
retn 0x4
sub_4019c0
mov edx [ esp + 0x4 ]
mov ecx [ ecx + 0x8 ]
push esi
xor al al
mov esi [ edx + 0x8 ]
cmp ecx esi
pop esi
jne r-xdata
retn 0x4
mov al 0x1
sub_4019f0
mov edx [ esp + 0x4 ]
mov ecx [ ecx + 0x8 ]
push esi
xor al al
mov esi [ edx + 0x8 ]
cmp ecx esi
pop esi
jge r-xdata
retn 0x4
mov al 0x1
sub_401a20
mov edx [ esp + 0x4 ]
mov ecx [ ecx + 0x8 ]
push esi
xor al al
mov esi [ edx + 0x8 ]
cmp ecx esi
pop esi
jle r-xdata
retn 0x4
mov al 0x1
sub_402040
push esi
mov esi ecx
call j_sub_402070
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
add esp 0x4
sub_402270
mov al [ esp + 0x4 ]
test al al
mov [ ecx + 0x54 ] al
je r-xdata
retn 0x4
call j_sub_4021f0
sub_4022a0
mov al [ ecx + 0x54 ]
retn
sub_402380
mov al [ ecx + 0xb5 ]
retn
sub_4023a0
mov eax [ esp + 0x4 ]
mov [ ecx + 0xb5 ] 0x0
mov [ ecx + 0xb8 ] eax
mov al [ esp + 0x8 ]
test al al
je r-xdata
retn 0x8
call j_sub_404030
sub_4023e0
mov eax [ ecx + 0xb8 ]
retn
sub_403f90
mov eax ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x0
retn
sub_403fb0
push esi
mov esi ecx
call j_sub_403fe0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
add esp 0x4
sub_4042e0
push esi
mov esi ecx
call j_sub_404310
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
add esp 0x4
sub_404360
push esi
mov esi ecx
call j_sub_404390
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
add esp 0x4
sub_4043e0
mov eax r--data
retn
sub_404880
push esi
mov esi ecx
call j_sub_4048b0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
add esp 0x4
sub_404c70
push esi
mov esi ecx
call j_sub_404ca0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
add esp 0x4
sub_405040
retn
sub_4058e0
retn 0x4
sub_405900
mov eax [ ecx + 0x1c ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_405920
mov eax [ ecx + 0x1c ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_405940
push esi
mov esi ecx
call sub_433a4e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
add esp 0x4
sub_405ab0
mov eax r--data
retn
sub_405ad0
push esi
mov esi ecx
push 0x0
call sub_4389fb
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_405b00
push esi
mov esi ecx
call j_sub_438e2c#2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
add esp 0x4
j_sub_438e2c
jmp sub_438e2c
sub_405b50
call sub_405b70
jmp sub_405b90
sub_405b70
mov ecx rw-data
jmp j_sub_405ad0
sub_405b90
push sub_405bb0
call sub_408b10
pop ecx
retn
sub_405bb0
mov ecx rw-data
jmp j_sub_438e2c#2
sub_405db0
push esi
push 0x0
mov esi ecx
push 0x64
call sub_4262ce
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_405de0
push esi
mov esi ecx
call j_sub_425ef9#2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
add esp 0x4
j_sub_425ef9
jmp sub_425ef9
sub_405e30
retn 0x4
sub_405e50
mov eax r--data
retn
sub_405f90
push esi
mov esi ecx
call j_sub_405cf0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
add esp 0x4
sub_407460
mov eax r--data
retn
sub_407750
mov eax [ ecx + 0x208 ]
retn
j_sub_4266ac
jmp sub_4266ac
sub_407c30
push esi
mov esi ecx
call sub_433ce5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
add esp 0x4
sub_408019
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push eax
call sub_42166a
retn
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
sub_408044
push [ esp + 0x4 ]
call sub_4250d9
pop ecx
retn 0x4
sub_408051
call sub_439511
mov ecx [ eax + 0x4 ]
jmp sub_42599e
sub_40805e
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_427565
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_408088
push esi
mov esi ecx
call sub_4080a4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_4080a4
mov [ ecx ] r--data
retn
sub_4080ab
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_427565
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_4080d5
push esi
mov esi ecx
call sub_4080f1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_4080f1
mov [ ecx ] r--data
retn
sub_4080f8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
retn 0x8
sub_40810c
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
retn 0x4
sub_40811c
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ TextOutA@IAT ]
retn 0x10
sub_408195
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ DrawTextA@IAT ]
retn 0x10
sub_4081e1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
retn 0x10
sub_4081fd
push esi
mov esi ecx
call sub_433aa8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_408219
push esi
mov esi ecx
call sub_433b5a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_408235
push esi
mov esi ecx
call sub_433df6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_408251
push esi
mov esi ecx
call sub_433e4f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_40826d
mov eax [ ecx ]
jmp [ eax + 0xc4 ]
sub_40827d
retn
sub_40827e
push esi
mov esi ecx
call sub_40829a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_40829a
mov eax sub_43e064
call sub_408db8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_42753f
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4082c3
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_427565
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_4082ed
push esi
mov esi ecx
call sub_408309
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_408309
mov [ ecx ] r--data
retn
sub_408310
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_427565
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_40833a
push esi
mov esi ecx
call sub_408356
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_408356
mov [ ecx ] r--data
retn
sub_40835d
push esi
mov esi ecx
call sub_408379
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_4083e9
push esi
mov esi ecx
call sub_4083fd
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
pop esi
retn
sub_4084e0
mov eax ecx
mov ecx [ rw-data ]
mov [ eax ] ecx
retn
sub_4084eb
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ eax + 0xc4 ] ecx
retn
sub_4084f7
retn
sub_4084f8
push esi
mov esi ecx
call sub_408514
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_408514
mov eax sub_43e378
call sub_408db8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x10
call sub_4249df
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_408540
push [ esp + 0x4 ]
add ecx 0xc
call sub_424b68
retn 0x4
sub_408653
push esi
mov esi ecx
call sub_40866f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_40866f
mov eax sub_43e52c
call sub_408db8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0xc
call sub_4249df
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_4086cf
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_4086d6
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_4086dd
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_408769
mov eax [ esp + 0x4 ]
push [ eax + 0x1c ]
push [ eax + 0x28 ]
push 0x0
push [ eax + 0x18 ]
call sub_40bbca
add esp 0x10
retn 0x4
sub_40891f
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4089c4
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_408a4e
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4089c4
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_408a7a
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_408b10
push [ esp + 0x4 ]
call sub_408a92
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_408c7e
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_40ce5d
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_40ce24
sub_408ca1
retn
sub_408ccb
push esi
mov esi ecx
call sub_408ca2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_408ce7
mov eax [ esp + 0x4 ]
add ecx 0x9
add eax 0x9
push ecx
push eax
call sub_40d110
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
retn 0x4
sub_408d02
mov eax [ esp + 0x4 ]
add ecx 0x9
add eax 0x9
push ecx
push eax
call sub_40d110
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
retn 0x4
sub_408d3d
lea eax [ ecx + 0x8 ]
retn
sub_408d41
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_408d4c
mov eax ecx
retn 0x4
sub_408db8
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_409676
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_40979a
push rw-data
push rw-data
call sub_40979a
add esp 0x10
retn
call eax
sub_4096a3
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_4096e3
add esp 0xc
retn
sub_4096b4
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_4096e3
add esp 0xc
retn
sub_4096c5
push 0x1
push 0x0
push 0x0
call sub_4096e3
add esp 0xc
retn
sub_4096d4
push 0x1
push 0x1
push 0x0
call sub_4096e3
add esp 0xc
retn
sub_409788
push 0xd
call sub_40d076
pop ecx
retn
sub_409791
push 0xd
call sub_40d0d7
pop ecx
retn
sub_4098ed
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_409904
add esp 0x10
retn
sub_409b09
push 0x1
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_409904
add esp 0x10
retn
sub_409bf0
push [ esp + 0x4 ]
call sub_409b65
pop ecx
retn
sub_40a120
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a1b8
sub_40a1a0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a1b8
sub_40a1f4
push [ ebp - 0x14 ]
call sub_40a216
pop ecx
retn
sub_40a216
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_40c274
xor eax eax
retn
sub_40a604
mov eax [ rw-data ]
neg eax
sbb eax eax
and eax [ rw-data ]
retn
sub_40a614
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_40a22c
pop ecx
mov [ rw-data ] 0x1
sub_40a715
call sub_40c161
add eax 0x8
retn
sub_40a71e
call sub_40c161
add eax 0xc
retn
sub_40a727
push 0x1
push [ esp + 0x8 ]
call sub_40a743
pop ecx
pop ecx
retn
sub_40a735
push 0x0
push [ esp + 0x8 ]
call sub_40a743
pop ecx
pop ecx
retn
sub_40afc3
push 0x0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_40afde
add esp 0x14
retn
sub_40bc31
push [ ebp - 0x14 ]
call sub_40bc68
pop ecx
retn
sub_40bc68
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_40c274
xor eax eax
retn
sub_40bd9e
push [ ebp - 0x14 ]
call sub_40be14
pop ecx
retn
sub_40bff6
push 0x1
pop eax
retn
sub_40bffa
mov esp [ ebp - 0x18 ]
jmp sub_40c274
sub_40c058
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40c061
mov esp [ ebp - 0x18 ]
jmp sub_40c274
sub_40c130
call sub_40d00a
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_40c14e
mov eax [ esp + 0x4 ]
mov [ eax + 0x50 ] rw-data
mov [ eax + 0x14 ] 0x1
retn
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
sub_40c2bc
push 0x1
pop eax
retn
sub_40c2d5
call sub_40c161
cmp [ eax + 0x64 ] 0x0
je r-xdata
jmp sub_40c274
call sub_40c161
call [ eax + 0x64 ]
sub_40c32a
push 0x1
pop eax
retn
sub_40ce09
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_4089e6
add esp 0x8
pop ebp
retn 0x4
sub_40cfe1
push esi
mov esi [ InitializeCriticalSection@IAT ]
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
pop esi
retn
sub_40d0ec
push [ esp + 0x4 ]
push 0x0
call [ FatalAppExitA@IAT ]
push 0xff
call [ ExitProcess@IAT ]
sub_40d1da
push sub_40d194
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_40d1eb
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_40d41a
push 0x1
pop eax
retn
sub_40d4ce
push 0x1
pop eax
retn
sub_40d5b4
mov eax [ rw-data ]
retn
sub_40d5d5
mov eax [ rw-data ]
retn
sub_40d5db
mov eax [ esp + 0x4 ]
cmp eax 0x3f8
jbe r-xdata
push 0x1
mov [ rw-data ] eax
pop eax
retn
xor eax eax
retn
sub_40e738
mov eax [ esp + 0x4 ]
add eax 0xffffffe0
retn
sub_40ea1d
push 0x1
pop eax
retn
sub_40eac5
push 0xb
call sub_40d076
call sub_40eadb
push 0xb
call sub_40d0d7
pop ecx
pop ecx
retn
sub_40ed62
push esi
push 0xb
call sub_40d076
push [ esp + 0xc ]
call sub_40ed83
push 0xb
mov esi eax
call sub_40d0d7
add esp 0xc
mov eax esi
pop esi
retn
sub_40f663
xor eax eax
retn
sub_40f880
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40f89c
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40f8b8
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_40f8f8
push 0x3
push 0x0
push [ esp + 0xc ]
call sub_40f9c4
add esp 0xc
retn
sub_40f909
push 0x2
push 0x0
push [ esp + 0xc ]
call sub_40f9c4
add esp 0xc
retn
sub_40f91a
push 0x1
push 0x107
push [ esp + 0xc ]
call sub_40f9c4
add esp 0xc
retn
sub_40f92e
push 0x1
push 0x103
push [ esp + 0xc ]
call sub_40f9c4
add esp 0xc
retn
sub_40f942
push 0x3
push 0x117
push [ esp + 0xc ]
call sub_40f9c4
add esp 0xc
retn
sub_40f956
push 0x3
push 0x157
push [ esp + 0xc ]
call sub_40f9c4
add esp 0xc
retn
sub_40f96a
push 0x2
push 0x10
push [ esp + 0xc ]
call sub_40f9c4
add esp 0xc
retn
sub_40f97b
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_40f9c4
add esp 0xc
retn
sub_40f98c
push 0x8
push 0x0
push [ esp + 0xc ]
call sub_40f9c4
add esp 0xc
retn
sub_40fb7e
push esi
push 0xc
call sub_40d076
push [ esp + 0xc ]
call sub_40fb9f
push 0xc
mov esi eax
call sub_40d0d7
add esp 0xc
mov eax esi
pop esi
retn
sub_41084e
xor eax eax
retn
sub_410f08
or [ rw-data ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_41117f
mov eax [ esp + 0x4 ]
add eax 0x20
retn
sub_411664
call sub_40c161
add eax 0x58
retn
sub_41166d
call sub_40c161
add eax 0x54
retn
sub_41185b
mov eax [ rw-data ]
retn
sub_41194d
push 0x1
pop eax
retn
sub_4119aa
push 0x1
pop eax
retn
sub_411ad9
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_411a53
mov eax [ esp + 0x18 ]
add esp 0x10
retn
sub_411bab
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411b25
mov eax [ ebp + 0x10 ]
pop ebp
retn
sub_411e88
push 0x1
pop eax
retn
sub_411ef7
push 0x1
pop eax
retn
sub_412278
push 0x1
pop eax
retn
sub_412391
push 0x1
pop eax
retn
GetProcAddress
jmp [ GetProcAddress@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GlobalDeleteAtom
jmp [ GlobalDeleteAtom@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalAddAtomA
jmp [ GlobalAddAtomA@IAT ]
lstrcmpiA
jmp [ lstrcmpiA@IAT ]
GlobalGetAtomNameA
jmp [ GlobalGetAtomNameA@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
lstrcatA
jmp [ lstrcatA@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
LockResource
jmp [ LockResource@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
FindResourceA
jmp [ FindResourceA@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
MulDiv
jmp [ MulDiv@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
lstrlenA
jmp [ lstrlenA@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
lstrcpynA
jmp [ lstrcpynA@IAT ]
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
lstrcmpA
jmp [ lstrcmpA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
ResumeThread
jmp [ ResumeThread@IAT ]
SetThreadPriority
jmp [ SetThreadPriority@IAT ]
SuspendThread
jmp [ SuspendThread@IAT ]
CreateEventA
jmp [ CreateEventA@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
LocalFree
jmp [ LocalFree@IAT ]
InitializeCriticalSection
jmp [ InitializeCriticalSection@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
LocalReAlloc
jmp [ LocalReAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
GlobalFlags
jmp [ GlobalFlags@IAT ]
GetProcessVersion
jmp [ GetProcessVersion@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
GetPrivateProfileIntA
jmp [ GetPrivateProfileIntA@IAT ]
GetPrivateProfileStringA
jmp [ GetPrivateProfileStringA@IAT ]
WritePrivateProfileStringA
jmp [ WritePrivateProfileStringA@IAT ]
GetCurrentDirectoryA
jmp [ GetCurrentDirectoryA@IAT ]
SetErrorMode
jmp [ SetErrorMode@IAT ]
DuplicateHandle
jmp [ DuplicateHandle@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
LockFile
jmp [ LockFile@IAT ]
UnlockFile
jmp [ UnlockFile@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
MoveFileA
jmp [ MoveFileA@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
GetVolumeInformationA
jmp [ GetVolumeInformationA@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetThreadLocale
jmp [ GetThreadLocale@IAT ]
GetShortPathNameA
jmp [ GetShortPathNameA@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetFileTime
jmp [ GetFileTime@IAT ]
LocalFileTimeToFileTime
jmp [ LocalFileTimeToFileTime@IAT ]
SystemTimeToFileTime
jmp [ SystemTimeToFileTime@IAT ]
SetFileTime
jmp [ SetFileTime@IAT ]
SetFileAttributesA
jmp [ SetFileAttributesA@IAT ]
FileTimeToSystemTime
jmp [ FileTimeToSystemTime@IAT ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
ExitThread
jmp [ ExitThread@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetTimeZoneInformation
jmp [ GetTimeZoneInformation@IAT ]
GetSystemTime
jmp [ GetSystemTime@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
FreeEnvironmentStringsA
jmp [ FreeEnvironmentStringsA@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
GetEnvironmentStrings
jmp [ GetEnvironmentStrings@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
FatalAppExitA
jmp [ FatalAppExitA@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
LCMapStringA
jmp [ LCMapStringA@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
IsBadWritePtr
jmp [ IsBadWritePtr@IAT ]
GetStringTypeA
jmp [ GetStringTypeA@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
Sleep
jmp [ Sleep@IAT ]
IsBadReadPtr
jmp [ IsBadReadPtr@IAT ]
IsBadCodePtr
jmp [ IsBadCodePtr@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
EnumSystemLocalesA
jmp [ EnumSystemLocalesA@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
CompareStringA
jmp [ CompareStringA@IAT ]
CompareStringW
jmp [ CompareStringW@IAT ]
SetEnvironmentVariableA
jmp [ SetEnvironmentVariableA@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
GetDC
jmp [ GetDC@IAT ]
SendMessageA
jmp [ SendMessageA@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
CopyRect
jmp [ CopyRect@IAT ]
IntersectRect
jmp [ IntersectRect@IAT ]
InvalidateRect
jmp [ InvalidateRect@IAT ]
SetRectEmpty
jmp [ SetRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
EnumDesktopsW
jmp [ EnumDesktopsW@IAT ]
GetProcessWindowStation
jmp [ GetProcessWindowStation@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
InflateRect
jmp [ InflateRect@IAT ]
AppendMenuA
jmp [ AppendMenuA@IAT ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
GetSystemMetrics
jmp [ GetSystemMetrics@IAT ]
IsIconic
jmp [ IsIconic@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
SystemParametersInfoA
jmp [ SystemParametersInfoA@IAT ]
OffsetRect
jmp [ OffsetRect@IAT ]
RegisterWindowMessageA
jmp [ RegisterWindowMessageA@IAT ]
SetWindowPos
jmp [ SetWindowPos@IAT ]
SetWindowLongA
jmp [ SetWindowLongA@IAT ]
GetWindowLongA
jmp [ GetWindowLongA@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMessagePos
jmp [ GetMessagePos@IAT ]
GetMessageTime
jmp [ GetMessageTime@IAT ]
RemovePropA
jmp [ RemovePropA@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
SetPropA
jmp [ SetPropA@IAT ]
GetClassLongA
jmp [ GetClassLongA@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
GetKeyState
jmp [ GetKeyState@IAT ]
GetDlgCtrlID
jmp [ GetDlgCtrlID@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
GetWindowTextLengthA
jmp [ GetWindowTextLengthA@IAT ]
GetDlgItem
jmp [ GetDlgItem@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetMenuItemCount
jmp [ GetMenuItemCount@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
GetClassInfoA
jmp [ GetClassInfoA@IAT ]
wsprintfA
jmp [ wsprintfA@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
GetCapture
jmp [ GetCapture@IAT ]
IsChild
jmp [ IsChild@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
IsWindowVisible
jmp [ IsWindowVisible@IAT ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
BeginDeferWindowPos
jmp [ BeginDeferWindowPos@IAT ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
ScreenToClient
jmp [ ScreenToClient@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
SetFocus
jmp [ SetFocus@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
GetFocus
jmp [ GetFocus@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
MapWindowPoints
jmp [ MapWindowPoints@IAT ]
SendDlgItemMessageA
jmp [ SendDlgItemMessageA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
PostMessageA
jmp [ PostMessageA@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
TabbedTextOutA
jmp [ TabbedTextOutA@IAT ]
DrawTextA
jmp [ DrawTextA@IAT ]
GrayStringA
jmp [ GrayStringA@IAT ]
CharToOemA
jmp [ CharToOemA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
CheckDlgButton
jmp [ CheckDlgButton@IAT ]
CheckRadioButton
jmp [ CheckRadioButton@IAT ]
GetDlgItemInt
jmp [ GetDlgItemInt@IAT ]
GetDlgItemTextA
jmp [ GetDlgItemTextA@IAT ]
SetDlgItemInt
jmp [ SetDlgItemInt@IAT ]
SetDlgItemTextA
jmp [ SetDlgItemTextA@IAT ]
IsDlgButtonChecked
jmp [ IsDlgButtonChecked@IAT ]
ScrollWindowEx
jmp [ ScrollWindowEx@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
MoveWindow
jmp [ MoveWindow@IAT ]
ShowWindow
jmp [ ShowWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
GetNextDlgTabItem
jmp [ GetNextDlgTabItem@IAT ]
EnableMenuItem
jmp [ EnableMenuItem@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
SetMenuItemBitmaps
jmp [ SetMenuItemBitmaps@IAT ]
ModifyMenuA
jmp [ ModifyMenuA@IAT ]
GetMenuState
jmp [ GetMenuState@IAT ]
GetMenuCheckMarkDimensions
jmp [ GetMenuCheckMarkDimensions@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
GetCursorPos
jmp [ GetCursorPos@IAT ]
CreateDialogIndirectParamA
jmp [ CreateDialogIndirectParamA@IAT ]
GetActiveWindow
jmp [ GetActiveWindow@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
SetCursor
jmp [ SetCursor@IAT ]
ValidateRect
jmp [ ValidateRect@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
wvsprintfA
jmp [ wvsprintfA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
GetDesktopWindow
jmp [ GetDesktopWindow@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetDialogBaseUnits
jmp [ GetDialogBaseUnits@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuA
jmp [ InsertMenuA@IAT ]
DeleteMenu
jmp [ DeleteMenu@IAT ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
LoadAcceleratorsA
jmp [ LoadAcceleratorsA@IAT ]
TranslateAcceleratorA
jmp [ TranslateAcceleratorA@IAT ]
LoadMenuA
jmp [ LoadMenuA@IAT ]
SetMenu
jmp [ SetMenu@IAT ]
ReuseDDElParam
jmp [ ReuseDDElParam@IAT ]
UnpackDDElParam
jmp [ UnpackDDElParam@IAT ]
BringWindowToTop
jmp [ BringWindowToTop@IAT ]
CharUpperA
jmp [ CharUpperA@IAT ]
ExtCreateRegion
jmp [ ExtCreateRegion@IAT ]
GetRegionData
jmp [ GetRegionData@IAT ]
SetBitmapDimensionEx
jmp [ SetBitmapDimensionEx@IAT ]
SetDIBits
jmp [ SetDIBits@IAT ]
CreateCompatibleBitmap
jmp [ CreateCompatibleBitmap@IAT ]
GetDIBits
jmp [ GetDIBits@IAT ]
GetObjectA
jmp [ GetObjectA@IAT ]
StretchBlt
jmp [ StretchBlt@IAT ]
CreateCompatibleDC
jmp [ CreateCompatibleDC@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
OffsetRgn
jmp [ OffsetRgn@IAT ]
GetBitmapDimensionEx
jmp [ GetBitmapDimensionEx@IAT ]
CombineRgn
jmp [ CombineRgn@IAT ]
CreateRectRgn
jmp [ CreateRectRgn@IAT ]
RealizePalette
jmp [ RealizePalette@IAT ]
GetCurrentObject
jmp [ GetCurrentObject@IAT ]
BitBlt
jmp [ BitBlt@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
CreatePen
jmp [ CreatePen@IAT ]
CreateSolidBrush
jmp [ CreateSolidBrush@IAT ]
PtInRegion
jmp [ PtInRegion@IAT ]
CreatePolygonRgn
jmp [ CreatePolygonRgn@IAT ]
Polygon
jmp [ Polygon@IAT ]
CreateEllipticRgn
jmp [ CreateEllipticRgn@IAT ]
Ellipse
jmp [ Ellipse@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
SetTextColor
jmp [ SetTextColor@IAT ]
SetBkColor
jmp [ SetBkColor@IAT ]
DeleteDC
jmp [ DeleteDC@IAT ]
StartDocA
jmp [ StartDocA@IAT ]
SaveDC
jmp [ SaveDC@IAT ]
RestoreDC
jmp [ RestoreDC@IAT ]
SelectObject
jmp [ SelectObject@IAT ]
GetStockObject
jmp [ GetStockObject@IAT ]
SelectPalette
jmp [ SelectPalette@IAT ]
SetBkMode
jmp [ SetBkMode@IAT ]
SetPolyFillMode
jmp [ SetPolyFillMode@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetStretchBltMode
jmp [ SetStretchBltMode@IAT ]
SetMapMode
jmp [ SetMapMode@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
OffsetViewportOrgEx
jmp [ OffsetViewportOrgEx@IAT ]
SetViewportExtEx
jmp [ SetViewportExtEx@IAT ]
ScaleViewportExtEx
jmp [ ScaleViewportExtEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
OffsetWindowOrgEx
jmp [ OffsetWindowOrgEx@IAT ]
SetWindowExtEx
jmp [ SetWindowExtEx@IAT ]
ScaleWindowExtEx
jmp [ ScaleWindowExtEx@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
IntersectClipRect
jmp [ IntersectClipRect@IAT ]
OffsetClipRgn
jmp [ OffsetClipRgn@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
SetTextAlign
jmp [ SetTextAlign@IAT ]
SetTextJustification
jmp [ SetTextJustification@IAT ]
SetTextCharacterExtra
jmp [ SetTextCharacterExtra@IAT ]
SetMapperFlags
jmp [ SetMapperFlags@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
ArcTo
jmp [ ArcTo@IAT ]
SetArcDirection
jmp [ SetArcDirection@IAT ]
PolyDraw
jmp [ PolyDraw@IAT ]
PolylineTo
jmp [ PolylineTo@IAT ]
SetColorAdjustment
jmp [ SetColorAdjustment@IAT ]
PolyBezierTo
jmp [ PolyBezierTo@IAT ]
DeleteObject
jmp [ DeleteObject@IAT ]
GetClipRgn
jmp [ GetClipRgn@IAT ]
SelectClipPath
jmp [ SelectClipPath@IAT ]
ExtSelectClipRgn
jmp [ ExtSelectClipRgn@IAT ]
PlayMetaFileRecord
jmp [ PlayMetaFileRecord@IAT ]
GetObjectType
jmp [ GetObjectType@IAT ]
EnumMetaFile
jmp [ EnumMetaFile@IAT ]
PlayMetaFile
jmp [ PlayMetaFile@IAT ]
GetDeviceCaps
jmp [ GetDeviceCaps@IAT ]
GetViewportExtEx
jmp [ GetViewportExtEx@IAT ]
GetWindowExtEx
jmp [ GetWindowExtEx@IAT ]
ExtCreatePen
jmp [ ExtCreatePen@IAT ]
CreateHatchBrush
jmp [ CreateHatchBrush@IAT ]
CreatePatternBrush
jmp [ CreatePatternBrush@IAT ]
CreateDIBPatternBrushPt
jmp [ CreateDIBPatternBrushPt@IAT ]
PtVisible
jmp [ PtVisible@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
TextOutA
jmp [ TextOutA@IAT ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
Escape
jmp [ Escape@IAT ]
GetMapMode
jmp [ GetMapMode@IAT ]
PatBlt
jmp [ PatBlt@IAT ]
SetRectRgn
jmp [ SetRectRgn@IAT ]
CreateRectRgnIndirect
jmp [ CreateRectRgnIndirect@IAT ]
CreateFontIndirectA
jmp [ CreateFontIndirectA@IAT ]
DPtoLP
jmp [ DPtoLP@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetTextMetricsA
jmp [ GetTextMetricsA@IAT ]
GetFileTitleA
jmp [ GetFileTitleA@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegCreateKeyExA
jmp [ RegCreateKeyExA@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
RegSetValueExA
jmp [ RegSetValueExA@IAT ]
RegDeleteValueA
jmp [ RegDeleteValueA@IAT ]
RegDeleteKeyA
jmp [ RegDeleteKeyA@IAT ]
RegOpenKeyA
jmp [ RegOpenKeyA@IAT ]
DragAcceptFiles
jmp [ DragAcceptFiles@IAT ]
DragFinish
jmp [ DragFinish@IAT ]
DragQueryFileA
jmp [ DragQueryFileA@IAT ]
SHGetFileInfoA
jmp [ SHGetFileInfoA@IAT ]
InitCommonControls
jmp [ InitCommonControls@IAT ]
sub_412e60
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
xor ecx ecx
mov cx [ rw-data ]
push ecx
push eax
call [ GetPropA@IAT ]
retn
xor eax eax
retn
sub_413560
mov eax [ esp + 0x4 ]
push 0x0
push eax
call sub_413570
retn 0x4
sub_413780
xor ax ax
retn 0xc
sub_413790
mov ax 0x231
retn
sub_4137a0
mov eax [ rw-data ]
retn
sub_4137b0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
push 0x0
push 0x0
push 0xffff
push eax
call sub_414b70
add esp 0x10
retn 0x4
xor eax eax
retn 0x4
sub_413b80
xor eax eax
retn 0x8
sub_413c26
call [ EnterCriticalSection@IAT ]
push 0x0
call sub_414290
add esp 0x4
mov esi eax
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax esi
pop esi
retn
sub_413c50
mov eax [ esp + 0x10 ]
push 0x1
mov ecx [ esp + 0x10 ]
push eax
mov edx [ esp + 0x10 ]
push ecx
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_413c70
retn 0x10
sub_414940
cmp [ rw-data ] 0x35f
jb r-xdata
mov eax [ esp + 0x8 ]
and eax 0xffffffdf
cmp ax 0x9
ja r-xdata
xor eax eax
retn
xor eax eax
retn
mov eax 0x1
retn
sub_415d90
mov eax [ esp + 0x10 ]
push 0x2
mov ecx [ esp + 0x10 ]
push eax
mov edx [ esp + 0x10 ]
push ecx
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_415c40
add esp 0x14
retn 0x10
sub_415ff0
mov eax [ esp + 0x10 ]
push 0x1
mov ecx [ esp + 0x10 ]
push eax
mov edx [ esp + 0x10 ]
push ecx
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_415dc0
add esp 0x14
retn 0x10
sub_4162e6
or [ ecx ] ecx
pop es
or [ ecx ] ecx
or [ eax ] ecx
or [ eax ] cl
int3
sub_4166a7
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_429c38
retn 0x10
sub_4166bf
call sub_439511
mov ecx [ esp + 0x4 ]
test ecx ecx
mov [ eax + 0x14 ] cl
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call sub_40a22c
pop ecx
sub_4166dd
push 0x1
push 0x0
call sub_439d30
call sub_43a0f3
jmp sub_439d51
j_sub_4166f5
jmp sub_4166f5
sub_4166f5
push 0x600
push 0x0
call sub_4166bf
push sub_4166dd
call sub_408b10
pop ecx
mov [ rw-data ] al
retn
GetProfileStringA
jmp [ GetProfileStringA@IAT ]
IsWindowUnicode
jmp [ IsWindowUnicode@IAT ]
CharNextA
jmp [ CharNextA@IAT ]
DefDlgProcA
jmp [ DefDlgProcA@IAT ]
DrawFocusRect
jmp [ DrawFocusRect@IAT ]
ExcludeUpdateRgn
jmp [ ExcludeUpdateRgn@IAT ]
ShowCaret
jmp [ ShowCaret@IAT ]
HideCaret
jmp [ HideCaret@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
GetTextExtentPointA
jmp [ GetTextExtentPointA@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
sub_41b163
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_408dd7
sub_41b17c
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_408dd7
sub_41b2e2
push 0x0
call sub_40a927
pop ecx
mov ecx [ esp + 0x4 ]
mov [ ecx ] eax
mov eax ecx
retn 0x4
sub_41b3a7
push [ esp + 0x8 ]
mov ecx [ esp + 0x8 ]
call sub_40854f
retn 0x8
sub_41b3b7
push [ esp + 0x8 ]
mov ecx [ esp + 0x8 ]
call sub_408575
retn 0x8
sub_41b3c7
push [ esp + 0x8 ]
mov ecx [ esp + 0x8 ]
call sub_40854f
retn 0x8
sub_41b3d7
push [ esp + 0x8 ]
mov ecx [ esp + 0x8 ]
call sub_408575
retn 0x8
sub_41c83d
mov eax r--data
retn
sub_41c87c
push esi
mov esi ecx
call sub_41c8ed
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_41c9c2
push 0x0
push 0x0
push 0x401
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
xor eax eax
retn 0x8
sub_41c9d9
push 0x0
push [ esp + 0x8 ]
push 0x401
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
retn 0x4
sub_41cdeb
push 0x1
push [ esp + 0x8 ]
call sub_41cd48
retn 0x4
sub_41cdf9
push 0x400
push [ esp + 0x8 ]
call sub_41cd48
retn 0x4
sub_41ce8c
push [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
call sub_41ce9c
retn 0x8
sub_41e5ba
mov eax ecx
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x18 ] ecx
retn 0x4
sub_41e5dd
push esi
mov esi ecx
call sub_41e619
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_41e619
mov eax sub_43e204
call sub_408db8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41e5f9
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_41e69a
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_41e5f9
sub_41e893
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
add eax 0x4
push eax
call sub_4250b0
pop ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov [ ecx ] eax
retn 0xc
sub_41e8b3
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx ]
push ecx
call sub_4250d9
pop ecx
test esi esi
mov ecx esi
jne r-xdata
pop esi
sub_41f9b3
push esi
mov esi ecx
call sub_41fa3f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_41fa3f
mov eax sub_43e0d0
call sub_408db8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41fa14
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_41fab5
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_41fa14
sub_41fc59
mov eax ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x11
mov [ eax + 0x18 ] ecx
retn 0x4
sub_41fc80
push esi
mov esi ecx
call sub_41fd33
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_41fd33
mov eax sub_43e118
call sub_408db8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41fce1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
j_sub_421140
jmp sub_421140
sub_421140
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
retn
sub_421151
call sub_42115b
jmp sub_421168
sub_42115b
push 0x0
mov ecx rw-data
call sub_421287
retn
sub_421168
push sub_421174
call sub_408b10
pop ecx
retn
sub_421174
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_421d24
sub_42118f
call sub_421199
jmp sub_4211a6
sub_421199
push 0x1
mov ecx rw-data
call sub_421287
retn
sub_4211a6
push sub_4211b2
call sub_408b10
pop ecx
retn
sub_4211b2
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_421d24
sub_4211cd
call sub_4211d7
jmp sub_4211e4
sub_4211d7
push 0xffffffff
mov ecx rw-data
call sub_421287
retn
sub_4211e4
push sub_4211f0
call sub_408b10
pop ecx
retn
sub_4211f0
test [ rw-data ] 0x4
jne r-xdata
retn
or [ rw-data ] 0x4
mov ecx rw-data
jmp sub_421d24
sub_42120b
call sub_421215
jmp sub_421222
sub_421215
push 0xfffffffe
mov ecx rw-data
call sub_421287
retn
sub_421222
push sub_42122e
call sub_408b10
pop ecx
retn
sub_42122e
test [ rw-data ] 0x8
jne r-xdata
retn
or [ rw-data ] 0x8
mov ecx rw-data
jmp sub_421d24
sub_42126b
push esi
mov esi ecx
call sub_421d24
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_421302
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0xfffffff0
push [ esp + 0x14 ]
call sub_4212b3
retn 0x10
sub_42131c
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0xffffffec
push [ esp + 0x14 ]
call sub_4212b3
retn 0x10
sub_421336
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov ecx esi
call sub_425366
mov ecx [ esp + 0x10 ]
pop esi
mov [ ecx ] eax
retn 0xc
sub_421716
retn
sub_421cb8
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
push 0x1
pop eax
pop esi
retn 0x4
push 0x1
call sub_424301
mov [ esi + 0x28 ] r--data
sub_421ed0
retn
sub_421ed1
cmp [ ecx + 0x1c ] 0x0
mov eax [ ecx ]
je r-xdata
jmp [ eax + 0xa4 ]
jmp [ eax + 0x58 ]
sub_421f76
lea eax [ ecx + 0x28 ]
retn
sub_421f7a
push esi
mov esi ecx
call sub_439511
mov eax [ eax + 0x1034 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
push esi
push [ esp + 0xc ]
call eax
sub_422119
mov eax [ esp + 0x4 ]
push eax
mov [ eax ] 0x2c
push [ ecx + 0x1c ]
call [ GetWindowPlacement@IAT ]
retn 0x4
sub_422130
mov eax [ esp + 0x4 ]
push eax
mov [ eax ] 0x2c
push [ ecx + 0x1c ]
call [ SetWindowPlacement@IAT ]
retn 0x4
sub_4221ae
mov eax [ esp + 0x8 ]
push esi
push 0x0
mov esi ecx
push [ eax + 0xc ]
call sub_4235eb
test eax eax
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_4215d1
sub_4225d0
mov eax r--data
retn
sub_422616
push 0x1800
push 0x0
push rw-data
call sub_408d60
add esp 0xc
retn
sub_422be1
push esi
mov esi ecx
call sub_425a3b
mov [ esi ] r--data
mov [ esi + 0x28 ] 0x1
mov eax esi
pop esi
retn
sub_422bfa
mov eax [ esp + 0x4 ]
mov [ ecx + 0x18 ] 0x1
mov [ ecx + 0x28 ] eax
retn 0x4
sub_422c0b
retn 0x4
sub_422c0e
retn 0x4
sub_422c11
retn 0x4
sub_422eeb
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push eax
call sub_430e31
push eax
call sub_42166a
retn 0x8
mov eax [ eax + 0x1c ]
sub_423031
xor eax eax
retn 0x4
sub_4237ff
cmp [ esp + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn 0x8
call sub_439281
test [ eax + 0xdf ] 0x40
jne r-xdata
push 0x1
call sub_421f99
sub_423bea
mov eax 0xffff
retn 0x8
sub_423c50
mov eax r-xdata
retn
sub_423c56
mov esi [ ebp - 0x1c ]
push 0xf108
push 0x30
mov ecx esi
mov eax [ esi ]
call [ eax + 0x10 ]
mov ecx esi
call sub_427571
mov eax r-xdata
retn
sub_423c94
mov eax ecx
mov ecx [ esp + 0x8 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x8
sub_423e5f
push 0x1
pop eax
retn
sub_424219
mov eax [ ecx + 0x24 ]
and eax 0x10
retn
sub_424244
xor eax eax
retn 0x4
sub_4245b8
xor eax eax
retn
sub_4245bb
push 0x1
pop eax
retn
sub_4245bf
mov eax [ ecx + 0x90 ]
test eax eax
je r-xdata
xor eax eax
retn
cmp eax 0xe002
je r-xdata
cmp eax 0xe001
je r-xdata
push 0x1
pop eax
retn
sub_42465d
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ DragAcceptFiles@IAT ]
retn 0x4
sub_42473f
push [ esp + 0x4 ]
mov ecx rw-data
call sub_4084b4
retn
sub_42474e
mov eax rw-data
retn
sub_424787
call sub_424791
jmp sub_4247a0
sub_424791
push 0x40
push 0x50
mov ecx rw-data
call sub_4083c1
retn
sub_4247a0
push sub_4247ac
call sub_408b10
pop ecx
retn
sub_4247ac
mov ecx rw-data
jmp sub_4083e9
sub_4247b6
call sub_4247c0
jmp sub_4247d2
sub_4247c0
push 0x40
push 0x90
mov ecx rw-data
call sub_4083c1
retn
sub_4247d2
push sub_4247de
call sub_408b10
pop ecx
retn
sub_4247de
mov ecx rw-data
jmp sub_4083e9
sub_4247e8
call sub_4247f2
jmp sub_424804
sub_4247f2
push 0x40
push 0x110
mov ecx rw-data
call sub_4083c1
retn
sub_424804
push sub_424810
call sub_408b10
pop ecx
retn
sub_424810
mov ecx rw-data
jmp sub_4083e9
sub_42481a
call sub_424824
jmp sub_424836
sub_424824
push 0x40
push 0x210
mov ecx rw-data
call sub_4083c1
retn
sub_424836
push sub_424842
call sub_408b10
pop ecx
retn
sub_424842
mov ecx rw-data
jmp sub_4083e9
sub_424947
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
pop esi
retn 0x4
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx esi
call sub_4248ce
sub_424de2
lea eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
push 0x1
call sub_424d5c
mov eax esi
pop esi
retn 0x4
sub_424df7
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov eax [ eax ]
push eax
push [ eax - 0x8 ]
call sub_424d5c
mov eax esi
pop esi
retn 0x4
sub_424ed9
push esi
mov esi ecx
push 0x0
call sub_424e0f
mov ecx [ esi ]
pop esi
or [ ecx - 0xc ] 0xffffffff
retn
sub_424eeb
mov eax [ ecx ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
retn
mov [ eax - 0xc ] 0x1
sub_424f00
push 0x0
push [ esp + 0x8 ]
call sub_424f0e
retn 0x4
sub_424f5b
push esi
mov esi ecx
call sub_424988
push [ esi ]
call sub_40929e
pop ecx
pop esi
retn
sub_424f6d
push esi
mov esi ecx
call sub_424988
push [ esi ]
call sub_409328
pop ecx
pop esi
retn
sub_424f7f
push esi
mov esi ecx
call sub_424988
push [ esi ]
call sub_4093b2
pop ecx
pop esi
retn
sub_424f91
push esi
mov esi ecx
call sub_424988
mov eax [ esi ]
mov edx [ esp + 0x8 ]
mov cl [ esp + 0xc ]
pop esi
mov [ eax + edx ] cl
retn 0x8
sub_424faa
push esi
mov esi ecx
call sub_424988
mov esi [ esi ]
push esi
push esi
call [ CharToOemA@IAT ]
pop esi
retn
sub_424fbe
push esi
mov esi ecx
call sub_424988
mov esi [ esi ]
push esi
push esi
call [ OemToCharA@IAT ]
pop esi
retn
sub_425090
call sub_41b163
xor eax eax
retn
sub_425098
mov eax [ rw-data ]
retn
sub_4250e4
push [ esp + 0xc ]
mov ecx [ ecx + 0x34 ]
push [ esp + 0xc ]
mov eax [ ecx ]
push [ esp + 0xc ]
call [ eax + 0x54 ]
retn 0xc
sub_4250fb
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x4c ]
retn
retn
sub_4252bd
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x88 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ IsDlgButtonChecked@IAT ]
jmp r-xdata
retn 0x4
sub_425366
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x70 ]
push 0xfffffff0
push [ ecx + 0x1c ]
call [ GetWindowLongA@IAT ]
retn
sub_425380
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x74 ]
push 0xffffffec
push [ ecx + 0x1c ]
call [ GetWindowLongA@IAT ]
retn
sub_4253fc
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x80 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ SetWindowTextA@IAT ]
jmp r-xdata
retn 0x4
sub_425452
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x8c ]
push [ ecx + 0x1c ]
call [ GetWindowTextLengthA@IAT ]
retn
sub_42546d
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x90 ]
push [ ecx + 0x1c ]
call [ GetDlgCtrlID@IAT ]
retn
sub_425568
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xa4 ]
push [ ecx + 0x1c ]
call [ IsWindowEnabled@IAT ]
retn
sub_425583
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0xa8 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ EnableWindow@IAT ]
jmp r-xdata
retn 0x4
sub_4255aa
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xac ]
push [ ecx + 0x1c ]
call [ SetFocus@IAT ]
push eax
call sub_42166a
retn
sub_4255f2
cmp [ ecx + 0x38 ] 0x0
je r-xdata
retn 0xc
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x2
push [ esp + 0x14 ]
push ecx
call sub_4255cb
add esp 0x18
sub_425614
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
lea edx [ esp + 0x10 ]
push edx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ eax + 0x5c ]
sub_425657
push [ esp + 0x10 ]
mov ecx [ ecx + 0x38 ]
push [ esp + 0x10 ]
mov eax [ ecx ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ eax + 0xb4 ]
retn 0x10
sub_425675
mov ecx [ ecx + 0x38 ]
push [ esp + 0x8 ]
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0xb8 ]
retn 0x8
sub_4256c8
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax ]
push ecx
mov ecx eax
call [ edx + 0x8c ]
sub_425715
mov eax ecx
push 0x1
pop ecx
xor edx edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
retn
sub_425970
push 0x1
pop eax
retn 0x4
sub_425976
xor eax eax
retn 0x4
sub_42597b
xor eax eax
retn
sub_42597e
xor eax eax
retn
sub_425981
mov eax 0x80029c4a
retn 0x8
sub_425989
call sub_439511
mov eax [ eax + 0x4 ]
push 0x1
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_42599e
call sub_439511
mov eax [ eax + 0x4 ]
push 0xffffffff
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_4259b3
call sub_439511
mov eax [ eax + 0x4 ]
push 0x0
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_4259c8
mov eax r--data
retn
sub_4259ce
mov eax r--data
retn
sub_4259d4
mov eax r--data
retn
sub_4259da
mov eax r--data
retn
sub_425a12
push 0x1
pop eax
retn
sub_425a16
xor eax eax
retn 0x4
sub_425a1b
mov eax r--data
retn
sub_425a21
xor eax eax
retn 0x4
sub_425a26
xor eax eax
retn 0x4
sub_425a2b
mov eax r--data
retn
j_sub_430ecd
jmp sub_430ecd
j_sub_430ed9
jmp sub_430ed9
sub_425c61
mov eax r--data
retn
sub_425c79
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
call sub_425c67
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
retn
sub_425cd1
mov ecx [ ebp - 0x18 ]
call sub_427571
mov eax r-xdata
retn
sub_425cdf
mov eax [ ecx ]
call [ eax ]
xor ecx ecx
cmp [ eax + 0x8 ] 0xffff
setne cl
mov eax ecx
retn
sub_425cf2
push esi
call sub_439511
push 0x0
mov esi eax
call sub_43a141
lea ecx [ esi + 0x1c ]
push [ esp + 0x8 ]
call sub_43970c
push 0x0
call sub_43a1b1
pop esi
retn 0x4
sub_425d44
test ecx ecx
je r-xdata
xor eax eax
cmp ecx [ esp + 0x4 ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ecx + 0x10 ]
jmp sub_425d44
retn 0x4
sub_425d97
mov eax r--data
retn
sub_425edd
push esi
mov esi ecx
call sub_425ef9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_425f86
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_425f98
retn 0x8
sub_425f98
push esi
mov esi ecx
push [ esp + 0x8 ]
call [ LockResource@IAT ]
push [ esp + 0x10 ]
mov ecx esi
push 0x0
push [ esp + 0x14 ]
push eax
call sub_425fd1
pop esi
retn 0xc
sub_425fbb
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_425fd1
retn 0xc
sub_426040
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_426052
retn 0x8
sub_4261db
mov ecx [ ebp - 0x2c ]
call sub_427571
mov eax [ ebp - 0x24 ]
or [ eax + 0x2c ] 0xffffffff
mov eax r-xdata
retn
sub_42627f
mov eax [ esp + 0x4 ]
push 0x1
mov [ ecx + 0x58 ] eax
pop eax
retn 0x4
sub_426307
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
push 0x1
mov [ ecx + 0x44 ] eax
pop eax
retn 0x8
mov eax [ esp + 0x8 ]
mov [ ecx + 0x50 ] eax
sub_426321
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
push 0x1
mov [ ecx + 0x48 ] eax
mov eax [ esp + 0x10 ]
mov [ ecx + 0x4c ] eax
pop eax
retn 0xc
mov eax [ esp + 0x8 ]
mov [ ecx + 0x50 ] eax
sub_4264b7
mov ecx [ ebp - 0x24 ]
call sub_427571
mov eax [ ebp - 0x1c ]
or [ eax + 0x2c ] 0xffffffff
mov eax r-xdata
retn
sub_42651e
push esi
mov esi ecx
test [ esi + 0x24 ] 0x18
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
call [ EndDialog@IAT ]
pop esi
retn 0x4
mov eax [ esi ]
push [ esp + 0x8 ]
call [ eax + 0x74 ]
sub_426565
retn
sub_426644
retn 0x4
sub_4266ac
push esi
mov esi ecx
push 0x1
call sub_423bf2
test eax eax
je r-xdata
pop esi
retn
push 0x1
mov ecx esi
call sub_42651e
sub_4266c5
push 0x2
call sub_42651e
retn
sub_426749
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_423b12
retn 0xc
sub_42679b
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
xor eax eax
add eax 0x20000
jmp r-xdata
retn 0x8
sub_4267ae
mov eax r--data
retn
sub_426a22
lea ecx [ ebp - 0x50 ]
call sub_4216e8
mov eax [ ebp + 0x8 ]
push [ eax + 0x10 ]
mov [ eax + 0x18 ] 0x1
call [ SetEvent@IAT ]
push 0x0
push 0xffffffff
call sub_426bbe
sub_426ac9
call sub_439537
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
retn
call sub_439511
mov eax [ eax + 0x4 ]
sub_426da8
cmp [ ecx + 0x24 ] 0x0
je r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_426dba
xor eax eax
retn
sub_426e95
mov eax [ ecx + 0x38 ]
retn
sub_426fa4
push [ esp + 0x4 ]
call sub_426fb0
retn 0x4
sub_427150
mov eax [ esp + 0x4 ]
cmp [ eax + 0x4 ] 0x100
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x8 ] 0xd
jne r-xdata
push 0x1
pop eax
retn
sub_42716a
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx + 0x4 ] 0x202
sete al
retn
sub_4272c5
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
call [ GetActiveWindow@IAT ]
push eax
call sub_42166a
sub_4274ca
push 0x0
call sub_427443
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_41fb00
sub_42753f
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_427515
push eax
call [ DestroyMenu@IAT ]
retn
xor eax eax
retn
sub_427555
retn 0x4
sub_427558
retn 0x4
sub_42755b
mov eax ecx
mov [ eax + 0x4 ] 0x1
retn
sub_427565
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x4
sub_427571
cmp [ ecx + 0x4 ] 0x0
jle r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_4275f9
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
call sub_42760f
mov ecx [ eax ]
mov [ esi ] ecx
mov [ eax ] esi
mov eax esi
pop esi
retn
sub_427655
call sub_42760f
mov eax [ eax ]
test eax eax
je r-xdata
retn
and [ eax + 0x4 ] 0x0
sub_427665
call sub_439537
inc [ eax + 0x10 ]
retn
sub_4278f1
call sub_439537
mov ecx [ eax + 0x14 ]
jmp sub_42788c
sub_4278fe
call sub_439537
mov ecx [ eax + 0x24 ]
jmp sub_42788c
sub_42790b
call sub_439537
mov ecx [ eax + 0x1c ]
jmp sub_42788c
sub_427918
call sub_439537
mov ecx [ eax + 0x20 ]
jmp sub_42788c
sub_427925
call sub_439537
mov ecx [ eax + 0x18 ]
jmp sub_42788c
sub_427ad1
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx + 0x2 ] 0xffff
sete al
retn
sub_427ae1
mov eax [ esp + 0x4 ]
cmp [ eax + 0x2 ] 0xffff
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
jmp r-xdata
and eax 0x40
retn
sub_427af8
mov eax [ esp + 0x4 ]
neg eax
sbb eax eax
and eax 0x2
inc eax
shl eax 0x1
retn
sub_427bd7
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call [ GlobalFree@IAT ]
sub_427c3a
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42822a
push esi
mov esi ecx
call sub_428291
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_4287fd
cmp [ esp + 0x4 ] 0x5c
je r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x4 ] 0x2f
je r-xdata
xor eax eax
retn
sub_428812
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0xc ] ecx
or [ eax + 0x4 ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_42882c
push esi
mov esi ecx
call sub_428907
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_428848
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0xc ] ecx
mov ecx [ esp + 0x4 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
retn 0x4
sub_428bbe
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
push eax
call [ GetLastError@IAT ]
push eax
call sub_429814
sub_428c20
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
lea ecx [ esi + 0xc ]
call sub_42496a
pop esi
retn
push eax
call [ CloseHandle@IAT ]
or [ esi + 0x4 ] 0xffffffff
sub_428ceb
xor eax eax
retn 0x10
sub_428cf0
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ MoveFileA@IAT ]
test eax eax
jne r-xdata
retn 0x8
push eax
call [ GetLastError@IAT ]
push eax
call sub_429814
sub_428d12
push [ esp + 0x4 ]
call [ DeleteFileA@IAT ]
test eax eax
jne r-xdata
retn 0x4
push eax
call [ GetLastError@IAT ]
push eax
call sub_429814
sub_4297f4
mov eax [ esp + 0x4 ]
xor edx edx
push 0x1
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0x1c ]
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] dl
mov [ eax + 0x12 ] dl
pop eax
retn 0x4
sub_429814
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ esp + 0xc ]
call sub_4299ba
push eax
call sub_4298f9
sub_429835
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x8
push [ esp + 0x8 ]
call sub_40a71e
push [ eax ]
push [ esp + 0xc ]
call sub_429964
push eax
call sub_4298f9
sub_42cf8a
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_42cf9e
push esi
mov esi ecx
call sub_42d0bf
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_42d02c
push 0x1
call sub_42cfba
mov ecx eax
push [ esp + 0x4 ]
call sub_4277cd
retn 0x4
sub_42d0a9
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_42d078
push eax
call [ DeleteDC@IAT ]
retn
xor eax eax
retn
sub_42d0f5
mov eax [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
retn 0x4
sub_42d0ff
mov eax [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
retn 0x4
sub_42d109
and [ ecx + 0x8 ] 0x0
retn
sub_42d10e
and [ ecx + 0x4 ] 0x0
retn
sub_42d1ba
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ SelectObject@IAT ]
push eax
call sub_42e313
retn 0x8
sub_42d324
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
push eax
push [ ecx + 0x4 ]
call [ SelectPalette@IAT ]
push eax
call sub_42e313
retn 0x8
mov eax [ eax + 0x4 ]
sub_42d702
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ GetClipBox@IAT ]
retn 0x4
sub_42e0d6
push esi
mov esi ecx
call sub_42e0f2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_42e18a
push esi
mov esi ecx
call sub_42e1a6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_42e23e
push esi
mov esi ecx
call sub_42e25a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_42e313
push 0x1
call sub_42e2a1
mov ecx eax
push [ esp + 0x4 ]
call sub_4277cd
retn 0x4
sub_42e551
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_408dd7
sub_42e750
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn 0x4
push eax
call [ DeleteObject@IAT ]
and [ esi ] 0x0
sub_42ec45
push esi
mov esi ecx
call sub_42edf2
and [ esi + 0x20 ] 0x0
pop esi
retn
sub_42ef8e
push esi
mov esi ecx
push [ esp + 0x8 ]
call [ lstrlenA@IAT ]
push eax
mov ecx esi
push [ esp + 0xc ]
call sub_42ed62
pop esi
retn 0x4
sub_430bcb
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
push 0x1
pop eax
retn
mov eax [ ecx ]
jmp [ eax + 0x20 ]
sub_430bf4
mov ecx [ ecx + 0x80 ]
push [ esp + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x1c ]
retn 0x4
sub_430c06
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
retn 0x4
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x24 ]
sub_430c1c
mov ecx [ ecx + 0xa8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
mov eax [ ecx ]
call [ eax ]
jmp r-xdata
retn 0x4
sub_430c3e
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x30 ]
jmp r-xdata
retn 0x4
sub_430ecd
call sub_439281
mov eax [ eax + 0xc0 ]
retn
sub_430ed9
call sub_439281
mov eax [ eax + 0xc4 ]
retn
sub_430ee5
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_430efc
mov [ esi + 0xc ] 0x1
pop esi
retn 0x4
sub_431a8b
call sub_439511
mov eax [ eax + 0x4 ]
push 0x3
push 0x0
mov ecx eax
mov edx [ eax ]
call [ edx + 0x98 ]
retn
sub_431aa2
call sub_439511
mov eax [ eax + 0x4 ]
push 0xb
push 0x0
mov ecx eax
mov edx [ eax ]
call [ edx + 0x98 ]
retn
sub_431ab9
call sub_439511
mov eax [ eax + 0x4 ]
push 0x4
push 0x0
mov ecx eax
mov edx [ eax ]
call [ edx + 0x98 ]
retn
sub_431e81
mov eax [ esp + 0x4 ]
test eax eax
jl r-xdata
or eax 0xffffffff
cmp eax 0x15
jg r-xdata
add eax 0x40000
jmp r-xdata
retn 0x4
sub_43239f
lea eax [ esp + 0xc ]
push 0x1
push eax
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_432266
retn 0xc
sub_433b08
retn 0x4
sub_433b39
push 0x0
mov eax [ ecx ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push 0x0
push r--data
call [ eax + 0x54 ]
retn 0x10
sub_433b92
retn 0x4
sub_433b95
retn 0x4
sub_433b98
xor eax eax
retn 0x4
sub_433b9d
retn 0x4
sub_433ba0
call sub_4215d1
retn 0x8
sub_433ba8
call sub_4215d1
retn 0x8
sub_433cc4
push 0x0
mov eax [ ecx ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push 0x0
push r--data
call [ eax + 0x54 ]
retn 0x10
sub_433d1d
retn 0x4
sub_433d20
retn 0x4
sub_433d23
xor eax eax
retn 0x4
sub_433d28
retn 0x4
sub_433dd5
push 0x0
mov eax [ ecx ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push 0x0
push r--data
call [ eax + 0x54 ]
retn 0x10
sub_433e2e
push 0x0
mov eax [ ecx ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push 0x0
push r--data
call [ eax + 0x54 ]
retn 0x10
sub_433e87
push rw-data
call sub_42e750
retn
j_sub_433e97
jmp sub_433e97
sub_433e97
push sub_433e87
call sub_408b10
pop ecx
mov [ rw-data ] al
retn
sub_433fc4
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_42dfae
push [ esp + 0x8 ]
mov ecx esi
call sub_433ea8
pop esi
retn 0x4
sub_433fdf
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_433f36
push [ esp + 0x8 ]
mov ecx esi
call sub_42e017
pop esi
retn 0x4
sub_43457e
mov eax [ esp + 0x4 ]
mov edx [ eax ]
sub [ ecx ] edx
mov edx [ eax + 0x4 ]
sub [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
add [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
add [ ecx + 0xc ] eax
retn 0x4
sub_43459b
mov eax [ esp + 0x4 ]
sub [ ecx ] eax
mov eax [ esp + 0x8 ]
sub [ ecx + 0x4 ] eax
mov eax [ esp + 0xc ]
add [ ecx + 0x8 ] eax
mov eax [ esp + 0x10 ]
add [ ecx + 0xc ] eax
retn 0x10
sub_4345b9
mov eax [ esp + 0x4 ]
mov edx [ eax ]
add [ ecx ] edx
mov edx [ eax + 0x4 ]
add [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
sub [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
sub [ ecx + 0xc ] eax
retn 0x4
sub_4345d6
mov eax [ esp + 0x4 ]
add [ ecx ] eax
mov eax [ esp + 0x8 ]
add [ ecx + 0x4 ] eax
mov eax [ esp + 0xc ]
sub [ ecx + 0x8 ] eax
mov eax [ esp + 0x10 ]
sub [ ecx + 0xc ] eax
retn 0x10
sub_4346a7
call sub_439511
xor ecx ecx
cmp [ eax + 0x2c ] ecx
sete cl
mov eax ecx
retn
sub_4346b7
call sub_439511
add eax 0x2c
push eax
call [ InterlockedIncrement@IAT ]
retn
sub_4346ef
call sub_439511
mov eax [ eax + 0x30 ]
retn
sub_4346f8
jmp r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov eax 0x80000000
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
j_sub_434720
jmp sub_434720
sub_434765
mov eax r--data
retn
sub_43482d
push esi
mov esi ecx
call sub_434849
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_4348b0
push esi
mov esi ecx
call sub_439511
add eax 0x1070
push sub_438ff4
mov ecx eax
call sub_439bd8
push esi
lea ecx [ eax + 0x8 ]
call sub_43970c
pop esi
retn
sub_4348d4
push esi
mov esi ecx
call sub_439511
add eax 0x1070
push sub_438ff4
mov ecx eax
call sub_439bd8
push esi
lea ecx [ eax + 0x8 ]
call sub_43971f
pop esi
retn
sub_4349b9
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_4349c5
push esi
mov esi ecx
call sub_4215d1
mov ecx [ esi + 0x68 ]
pop esi
test ecx ecx
je r-xdata
retn 0x4
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x6c ]
sub_434aef
mov eax [ ecx + 0x8c ]
test eax eax
je r-xdata
xor eax eax
add eax 0x20000
jmp r-xdata
retn 0x8
sub_435095
mov eax [ esp + 0x4 ]
push [ eax ]
push eax
call sub_4350a4
retn 0x4
sub_4359fc
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
push 0x3e1
push [ esp + 0x10 ]
call [ PostMessageA@IAT ]
xor eax eax
retn 0x8
sub_435a17
mov eax [ ecx + 0x98 ]
retn
sub_435a78
mov eax [ ecx + 0x98 ]
test eax eax
je r-xdata
call sub_4215d1
mov ecx eax
call sub_4255aa
jmp r-xdata
retn 0x4
sub_435a93
call sub_435a17
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x3c ]
retn
sub_435b9e
push esi
mov esi ecx
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4215d1
pop esi
retn 0x4
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x78 ]
sub_435e92
test [ ecx + 0x24 ] 0x40
je r-xdata
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x362
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
retn 0x8
sub_435f7a
lea eax [ ecx + 0x4c ]
retn 0x8
sub_435f80
push 0x1
push 0xe801
push [ ecx + 0x1c ]
call sub_422f3b
retn
sub_435fc1
push [ esp + 0x4 ]
push 0x0
push 0x362
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
retn 0x4
sub_435fd8
push 0x0
push [ esp + 0x8 ]
push 0x362
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
retn 0x4
sub_4365df
mov eax [ esp + 0x4 ]
or [ ecx + 0xb8 ] 0x1
mov [ ecx + 0xa8 ] eax
retn 0x4
sub_436662
mov eax ecx
retn
sub_4367cc
push esi
mov esi ecx
call sub_4215d1
cmp [ esp + 0x8 ] 0x1
je r-xdata
pop esi
retn 0xc
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
sub_4367eb
cmp [ ecx + 0x98 ] 0x0
je r-xdata
call sub_4215d1
push 0x1
pop eax
jmp r-xdata
retn 0x4
sub_436923
push esi
mov esi ecx
call sub_422d1a
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x6c ]
sub_43855c
mov eax r--data
retn
sub_4385a2
push esi
mov esi ecx
call j_sub_421d24
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4084b4
j_sub_421d24
jmp sub_421d24
sub_4385c7
mov eax r--data
retn
sub_4385cd
call sub_4385d7
jmp sub_4385e6
sub_4385d7
push 0x40
push 0x3c
mov ecx rw-data
call sub_4083c1
retn
sub_4385e6
push sub_4385f2
call sub_408b10
pop ecx
retn
sub_4385f2
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_4083e9
sub_438672
push 0x30
call sub_439765
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_438687
push esi
mov esi ecx
call sub_439d7f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_439783
sub_4386a2
mov eax r--data
retn
sub_4386a8
call sub_4386b2
jmp sub_4386c4
sub_4386b2
push 0xf022
push 0x0
mov ecx rw-data
call sub_40805e
retn
sub_4386c4
push sub_4386d0
call sub_408b10
pop ecx
retn
sub_4386d0
mov ecx rw-data
jmp sub_4080a4
sub_4386da
mov eax r--data
retn
sub_4386e0
call sub_4386ea
jmp sub_4386fc
sub_4386ea
push 0xf024
push 0x0
mov ecx rw-data
call sub_4080ab
retn
sub_4386fc
push sub_438708
call sub_408b10
pop ecx
retn
sub_438708
mov ecx rw-data
jmp sub_4080f1
sub_438712
push 0x10
call sub_4250b0
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_42cf8a
retn
sub_438729
mov eax r--data
retn
sub_43872f
mov eax r--data
retn
sub_438735
mov eax r--data
retn
sub_43873b
mov eax r--data
retn
sub_438741
push 0x8
call sub_4250b0
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_43875b
mov eax r--data
retn
sub_438761
mov eax r--data
retn
sub_438767
mov eax r--data
retn
sub_43876d
mov eax r--data
retn
sub_438773
mov eax r--data
retn
sub_438779
mov eax r--data
retn
sub_43877f
mov eax r--data
retn
sub_4387ab
push esi
mov esi ecx
call j_sub_42d0bf
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4084b4
j_sub_42d0bf
jmp sub_42d0bf
sub_4387d0
mov eax r--data
retn
sub_4387d6
mov ecx rw-data
call sub_408425
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_4387f2
push esi
mov esi ecx
call sub_438812
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4084b4
sub_438812
mov eax sub_43dc70
call sub_408db8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_42e37f
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_43883b
mov eax r--data
retn
sub_438841
call sub_43884b
jmp sub_43885a
sub_43884b
push 0x40
push 0x10
mov ecx rw-data
call sub_4083c1
retn
sub_43885a
push sub_438866
call sub_408b10
pop ecx
retn
sub_438866
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_4083e9
sub_438881
call sub_43888b
jmp sub_43889a
sub_43888b
push 0x40
push 0x8
mov ecx rw-data
call sub_4083c1
retn
sub_43889a
push sub_4388a6
call sub_408b10
pop ecx
retn
sub_4388a6
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_4083e9
sub_4389a1
mov eax r--data
retn
sub_4389a7
mov eax r--data
retn
sub_4389ad
mov eax r--data
retn
sub_4389b3
mov eax r--data
retn
sub_4389b9
mov eax r--data
retn
sub_4389bf
mov eax r--data
retn
sub_4389c5
mov eax r--data
retn
sub_4389cb
mov eax r--data
retn
sub_4389d1
mov eax r--data
retn
sub_4389d7
mov eax ecx
mov [ eax ] r--data
retn
sub_4389e0
push esi
mov esi ecx
call sub_43c0a6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_439783
sub_438ae5
push esi
mov esi ecx
call sub_438e2c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_438b41
push 0x1
pop eax
retn
sub_438c53
push esi
mov esi ecx
call sub_438c6f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_438fc8
mov eax r--data
retn
sub_438fce
call sub_438fd8
jmp sub_438fd9
sub_438fd8
retn
sub_438fd9
push sub_438fe5
call sub_408b10
pop ecx
retn
sub_439069
push esi
mov esi ecx
call sub_43c0f6
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_4250d9
pop ecx
sub_4390f4
mov eax r--data
retn
sub_4390fa
push 0x4
call sub_439765
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_43910f
push esi
mov esi ecx
call sub_439dc0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_439783
sub_4391db
mov eax ecx
or [ eax + 0xd4 ] 0xffffffff
or [ eax + 0x104 ] 0xffffffff
mov [ eax ] r--data
retn
sub_4391f2
push esi
mov esi ecx
call sub_43920d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_439783
sub_439281
push sub_43860d
mov ecx rw-data
call sub_439bd8
retn
sub_439291
call sub_43929b
jmp sub_43929c
sub_43929b
retn
sub_43929c
push sub_4392a8
call sub_408b10
pop ecx
retn
sub_4392a8
mov ecx rw-data
jmp r-xdata
jmp sub_439c7c
sub_43931a
push esi
mov esi ecx
call sub_439335
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_439783
j_sub_439c7c
jmp sub_439c7c
sub_4393f3
mov eax ecx
and [ eax + 0x8 ] 0x0
and [ eax + 0xc ] 0x0
mov [ eax ] r--data
mov [ eax + 0xc ] 0x54
mov [ eax + 0x28 ] sub_425090
retn
sub_439412
push esi
mov esi ecx
call sub_43942d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_439783
sub_4394db
call sub_4394e5
jmp sub_4394e6
sub_4394e5
retn
sub_4394e6
push sub_4394f2
call sub_408b10
pop ecx
retn
sub_439501
push sub_439583
mov ecx rw-data
call sub_439c9a
retn
sub_439537
call sub_439511
add eax 0x1070
push sub_438ff4
mov ecx eax
call sub_439bd8
retn
sub_4395ab
push esi
mov esi ecx
call j_sub_439335
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_439783
j_sub_439335
jmp sub_439335
sub_4395cb
push 0x8
call sub_4250b0
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_4395e5
mov eax r--data
retn
sub_4395eb
mov ecx rw-data
call sub_408425
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_439607
push esi
mov esi ecx
call sub_439627
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_4084b4
sub_439627
mov eax sub_43e050
call sub_408db8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_42753f
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_439650
mov eax r--data
retn
sub_439656
call sub_439660
jmp sub_43966f
sub_439660
push 0x40
push 0x8
mov ecx rw-data
call sub_4083c1
retn
sub_43966f
push sub_43967b
call sub_408b10
pop ecx
retn
sub_43967b
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_4083e9
sub_439696
mov eax r--data
retn
sub_43969c
mov eax r--data
retn
sub_4396a2
call sub_4396ac
jmp sub_4396be
sub_4396ac
push 0xf023
push 0x0
mov ecx rw-data
call sub_4082c3
retn
sub_4396be
push sub_4396ca
call sub_408b10
pop ecx
retn
sub_4396ca
mov ecx rw-data
jmp sub_408309
sub_4396d4
mov eax r--data
retn
sub_4396da
call sub_4396e4
jmp sub_4396f6
sub_4396e4
push 0xf021
push 0x0
mov ecx rw-data
call sub_408310
retn
sub_4396f6
push sub_439702
call sub_408b10
pop ecx
retn
sub_439702
mov ecx rw-data
jmp sub_408356
sub_43970c
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
push esi
mov esi [ ecx ]
mov [ edx + eax ] esi
mov [ ecx ] eax
pop esi
retn 0x4
sub_439765
push esi
push [ esp + 0x8 ]
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn 0x4
call sub_41b163
sub_439783
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x4
push [ esp + 0x4 ]
call [ LocalFree@IAT ]
sub_439a89
push esi
mov esi ecx
call sub_439aa4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_439783
sub_439aa4
retn
sub_439d1a
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
call sub_439aa5
sub_439d30
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_439b7f
sub_439d4a
inc [ rw-data ]
retn
sub_439d51
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
dec [ rw-data ]
jne r-xdata
retn
call sub_4397d9
and [ rw-data ] 0x0
sub_439d79
mov eax r--data
retn
sub_439f08
push sub_438672
mov ecx rw-data
call sub_439c9a
retn
sub_439f18
call sub_439f22
jmp sub_439f23
sub_439f22
retn
sub_439f23
push sub_439f2f
call sub_408b10
pop ecx
retn
sub_439f2f
mov ecx rw-data
jmp r-xdata
jmp sub_439c7c
sub_439f3e
call sub_439f48
jmp sub_439f49
sub_439f48
retn
sub_439f49
push sub_439f55
call sub_408b10
pop ecx
retn
sub_439f64
call sub_439f6e
jmp sub_439f78
sub_439f6e
mov ecx rw-data
jmp sub_439fe0
sub_439f78
push sub_439f84
call sub_408b10
pop ecx
retn
sub_439f84
mov ecx rw-data
jmp sub_43c145
sub_439fbe
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
mov [ rw-data ] eax
call esi
and [ rw-data ] 0x0
mov [ rw-data ] eax
pop esi
retn
sub_43a09e
jmp r-xdata
call sub_43a07b
mov [ rw-data ] eax
retn
sub_43a1b1
cmp [ rw-data ] 0x0
jne r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
sub_43a1d2
mov eax r--data
retn
sub_43a5bf
mov eax r--data
retn
sub_43a5fa
mov eax r--data
retn
sub_43a600
mov eax r--data
retn
sub_43a606
mov eax r--data
retn
sub_43a7e2
mov eax r--data
retn
sub_43a7e8
mov eax r--data
retn
sub_43c0d3
call sub_426ac9
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ PostQuitMessage@IAT ]
retn 0x4
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
push 0x1
push 0x1
call eax
sub_43c145
add ecx 0x50
push ecx
call sub_42e750
retn
sub_43d260
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_4249df
sub_43d26b
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp j_sub_4048b0
sub_43d276
mov ecx [ ebp - 0x10 ]
add ecx 0x48
jmp j_sub_404ca0
sub_43d281
mov eax r--data
jmp sub_408733
sub_43d2a0
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_4249df
sub_43d2ab
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp j_sub_4048b0
sub_43d2b6
mov ecx [ ebp - 0x10 ]
add ecx 0x48
jmp j_sub_404ca0
sub_43d2c1
mov eax r--data
jmp sub_408733
sub_43d2e0
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_4249df
sub_43d2eb
mov ecx [ ebp - 0x14 ]
add ecx 0x40
jmp j_sub_4048b0
sub_43d2f6
mov ecx [ ebp - 0x14 ]
add ecx 0x48
jmp j_sub_404ca0
sub_43d301
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43d309
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43d311
mov eax r--data
jmp sub_408733
sub_43d330
lea ecx [ ebp - 0x1c ]
jmp sub_42d0bf
sub_43d338
lea ecx [ ebp - 0x2c ]
jmp sub_42d0bf
sub_43d340
mov eax r--data
jmp sub_408733
sub_43d350
lea ecx [ ebp - 0x34 ]
jmp sub_42d0bf
sub_43d358
mov eax r--data
jmp sub_408733
sub_43d370
mov ecx [ ebp - 0x10 ]
jmp sub_433a4e
sub_43d378
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp j_sub_4048b0
sub_43d383
mov ecx [ ebp - 0x10 ]
add ecx 0x44
jmp j_sub_404dc0
sub_43d38e
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_4249df
sub_43d399
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp sub_41c8ed
sub_43d3a4
mov eax r--data
jmp sub_408733
sub_43d3c0
mov ecx [ ebp - 0x14 ]
jmp sub_433a4e
sub_43d3c8
mov ecx [ ebp - 0x14 ]
add ecx 0x3c
jmp j_sub_4048b0
sub_43d3d3
mov ecx [ ebp - 0x14 ]
add ecx 0x44
jmp j_sub_404dc0
sub_43d3de
mov ecx [ ebp - 0x14 ]
add ecx 0x58
jmp sub_4249df
sub_43d3e9
mov ecx [ ebp - 0x14 ]
add ecx 0x5c
jmp sub_41c8ed
sub_43d3f4
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43d3fc
mov eax r--data
jmp sub_408733
sub_43d420
lea ecx [ ebp - 0x34 ]
jmp sub_42d0bf
sub_43d428
lea ecx [ ebp - 0x44 ]
jmp j_sub_404ca0
sub_43d430
lea ecx [ ebp - 0x44 ]
jmp j_sub_401820
sub_43d438
lea ecx [ ebp - 0x3c ]
jmp j_sub_404ca0
sub_43d440
lea ecx [ ebp - 0x3c ]
jmp j_sub_401820
sub_43d448
mov eax r--data
jmp sub_408733
sub_43d460
lea ecx [ ebp - 0x1c ]
jmp sub_42d0bf
sub_43d468
mov eax r--data
jmp sub_408733
sub_43d480
lea ecx [ ebp - 0x7c ]
jmp sub_42d0bf
sub_43d488
lea ecx [ ebp - 0x54 ]
jmp sub_42d0bf
sub_43d490
lea ecx [ ebp - 0x64 ]
jmp sub_42d0bf
sub_43d498
lea ecx [ ebp - 0x8c ]
jmp sub_42d0bf
sub_43d4a3
lea ecx [ ebp - 0x44 ]
jmp sub_42d0bf
sub_43d4ab
lea ecx [ ebp - 0xa0 ]
jmp j_sub_4048b0
sub_43d4b6
lea ecx [ ebp - 0xa8 ]
jmp j_sub_4048b0
sub_43d4c1
lea ecx [ ebp - 0x98 ]
jmp j_sub_4048b0
sub_43d4cc
lea ecx [ ebp - 0x98 ]
jmp j_sub_401820
sub_43d4d7
lea ecx [ ebp - 0xa8 ]
jmp j_sub_401820
sub_43d4e2
lea ecx [ ebp - 0xa0 ]
jmp j_sub_401820
sub_43d4ed
mov eax r--data
jmp sub_408733
sub_43d520
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43d528
mov eax r--data
jmp sub_408733
sub_43d540
lea ecx [ ebp - 0x1c ]
jmp sub_42d0bf
sub_43d548
lea ecx [ ebp - 0x24 ]
jmp j_sub_404310
sub_43d550
lea ecx [ ebp - 0x2c ]
jmp j_sub_404390
sub_43d558
mov eax [ ebp - 0x34 ]
push eax
call sub_4250d9
pop ecx
retn
sub_43d563
lea ecx [ ebp - 0x2c ]
jmp j_sub_401820
sub_43d56b
lea ecx [ ebp - 0x24 ]
jmp j_sub_401820
sub_43d573
mov eax r--data
jmp sub_408733
sub_43d590
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43d598
mov eax r--data
jmp sub_408733
sub_43d5b0
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43d5b8
mov eax r--data
jmp sub_408733
sub_43d5d0
lea ecx [ ebp - 0x60 ]
jmp sub_42e25a
sub_43d5d8
lea ecx [ ebp - 0x9c ]
jmp sub_42d0bf
sub_43d5e3
lea ecx [ ebp - 0xb4 ]
jmp j_sub_4048b0
sub_43d5ee
mov eax [ ebp - 0x64 ]
push eax
call sub_4250d9
pop ecx
retn
sub_43d5f9
lea ecx [ ebp - 0xb4 ]
jmp j_sub_401820
sub_43d604
mov eax r--data
jmp sub_408733
sub_43d620
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43d628
mov eax r--data
jmp sub_408733
sub_43d640
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43d648
mov eax r--data
jmp sub_408733
sub_43d660
mov eax [ ebp + 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call j_sub_405040
add esp 0x8
retn
sub_43d671
mov eax r--data
jmp sub_408733
sub_43d690
lea ecx [ ebp - 0xac ]
jmp j_sub_401750
sub_43d69b
mov ecx [ ebp - 0xb4 ]
jmp j_sub_401750
sub_43d6a6
mov ecx [ ebp - 0xb0 ]
jmp j_sub_401750
sub_43d6b1
lea ecx [ ebp - 0x5c ]
jmp j_sub_401750
sub_43d6b9
mov eax r--data
jmp sub_408733
sub_43d6d0
mov ecx [ ebp + 0x8 ]
jmp j_sub_401750
sub_43d6d8
mov ecx [ ebp + 0x4 ]
jmp j_sub_401750
sub_43d6e0
mov eax r--data
jmp sub_408733
sub_43d6f0
lea ecx [ ebp + 0x8 ]
jmp j_sub_401750
sub_43d6f8
mov eax r--data
jmp sub_408733
sub_43d710
lea ecx [ ebp + 0xa8 ]
jmp j_sub_401750
sub_43d71b
lea ecx [ ebp + 0x58 ]
jmp j_sub_401750
sub_43d723
lea ecx [ ebp + 0x8 ]
jmp j_sub_401750
sub_43d72b
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp j_sub_401750
sub_43d742
mov eax r--data
jmp sub_408733
sub_43d760
lea ecx [ ebp + 0xc ]
jmp j_sub_401750
sub_43d768
lea ecx [ ebp - 0x5c ]
jmp j_sub_401750
sub_43d770
mov eax r--data
jmp sub_408733
sub_43d780
lea ecx [ ebp - 0x218 ]
jmp j_sub_405cf0
sub_43d78b
lea ecx [ ebp - 0x218 ]
jmp sub_425ef9
sub_43d796
lea ecx [ ebp - 0x1bc ]
jmp j_sub_402070
sub_43d7a1
lea ecx [ ebp - 0x100 ]
jmp sub_433ce5
sub_43d7ac
lea ecx [ ebp - 0xc4 ]
jmp sub_433ce5
sub_43d7b7
lea ecx [ ebp - 0x88 ]
jmp sub_433ce5
sub_43d7c2
mov eax r--data
jmp sub_408733
sub_43d7e0
mov ecx [ ebp - 0x10 ]
jmp sub_425ef9
sub_43d7e8
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp j_sub_402070
sub_43d7f3
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_433ce5
sub_43d801
mov ecx [ ebp - 0x10 ]
add ecx 0x154
jmp sub_433ce5
sub_43d80f
mov ecx [ ebp - 0x10 ]
add ecx 0x190
jmp sub_433ce5
sub_43d81d
mov eax r--data
jmp sub_408733
sub_43d840
mov ecx [ ebp - 0x10 ]
jmp sub_425ef9
sub_43d848
mov ecx [ ebp - 0x10 ]
add ecx 0x5c
jmp j_sub_402070
sub_43d853
mov ecx [ ebp - 0x10 ]
add ecx 0x118
jmp sub_433ce5
sub_43d861
mov ecx [ ebp - 0x10 ]
add ecx 0x154
jmp sub_433ce5
sub_43d86f
mov ecx [ ebp - 0x10 ]
add ecx 0x190
jmp sub_433ce5
sub_43d87d
mov ecx [ ebp - 0x10 ]
add ecx 0x1cc
jmp sub_433ce5
sub_43d88b
mov eax r--data
jmp sub_408733
sub_43d8b0
mov eax [ ebp - 0x10 ]
push eax
call sub_4250d9
pop ecx
retn
sub_43d8bb
mov eax [ ebp - 0x10 ]
push eax
call sub_4250d9
pop ecx
retn
sub_43d8c6
mov eax [ ebp - 0x10 ]
push eax
call sub_4250d9
pop ecx
retn
sub_43d8d1
mov eax [ ebp - 0x10 ]
push eax
call sub_4250d9
pop ecx
retn
sub_43d8dc
mov eax [ ebp - 0x10 ]
push eax
call sub_4250d9
pop ecx
retn
sub_43d8e7
mov eax [ ebp - 0x10 ]
push eax
call sub_4250d9
pop ecx
retn
sub_43d8f2
mov eax [ ebp - 0x10 ]
push eax
call sub_4250d9
pop ecx
retn
sub_43d8fd
mov eax r--data
jmp sub_408733
sub_43d920
mov eax [ ebp - 0x54 ]
push eax
call sub_4250d9
pop ecx
retn
sub_43d92b
lea ecx [ ebp - 0x1c ]
jmp sub_42d0bf
sub_43d933
lea ecx [ ebp - 0x4c ]
jmp j_sub_404310
sub_43d93b
lea ecx [ ebp - 0x44 ]
jmp j_sub_404310
sub_43d943
lea ecx [ ebp - 0x44 ]
jmp j_sub_401820
sub_43d94b
lea ecx [ ebp - 0x4c ]
jmp j_sub_401820
sub_43d953
mov eax r--data
jmp sub_408733
sub_43d970
mov eax [ ebp - 0x40 ]
push eax
call sub_4250d9
pop ecx
retn
sub_43d97b
lea ecx [ ebp - 0x1c ]
jmp sub_42d0bf
sub_43d983
lea ecx [ ebp - 0x34 ]
jmp j_sub_404310
sub_43d98b
lea ecx [ ebp - 0x3c ]
jmp j_sub_404390
sub_43d993
lea ecx [ ebp - 0x3c ]
jmp j_sub_401820
sub_43d99b
lea ecx [ ebp - 0x34 ]
jmp j_sub_401820
sub_43d9a3
mov eax r--data
jmp sub_408733
sub_43d9c0
mov eax [ ebp - 0x44 ]
push eax
call sub_4250d9
pop ecx
retn
sub_43d9cb
lea ecx [ ebp - 0x1c ]
jmp sub_42d0bf
sub_43d9d3
lea ecx [ ebp - 0x34 ]
jmp j_sub_404310
sub_43d9db
lea ecx [ ebp - 0x3c ]
jmp j_sub_404390
sub_43d9e3
lea ecx [ ebp - 0x3c ]
jmp j_sub_401820
sub_43d9eb
lea ecx [ ebp - 0x34 ]
jmp j_sub_401820
sub_43d9f3
mov eax r--data
jmp sub_408733
sub_43da10
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43da18
mov eax r--data
jmp sub_408733
sub_43da30
lea ecx [ ebp - 0x68 ]
jmp j_sub_425ef9#2
sub_43da38
mov eax r--data
jmp sub_408733
sub_43da48
mov eax r--data
jmp sub_408733
sub_43da54
push [ ebp + 0x8 ]
call sub_4250d9
pop ecx
retn
sub_43da5e
mov eax r--data
jmp sub_408733
sub_43da68
mov eax r--data
jmp sub_408733
sub_43da74
mov ecx [ ebp - 0x10 ]
jmp sub_42572f
sub_43da7c
mov eax r--data
jmp sub_408733
sub_43da88
mov eax r--data
jmp sub_408733
sub_43da94
lea ecx [ ebp - 0x8 ]
jmp sub_408051
sub_43da9c
mov eax r--data
jmp sub_408733
sub_43daa8
lea ecx [ ebp - 0x24 ]
jmp sub_42d0bf
sub_43dab0
lea ecx [ ebp - 0x60 ]
jmp sub_421d24
sub_43dab8
lea ecx [ ebp - 0x24 ]
jmp sub_42d0bf
sub_43dac0
mov eax r--data
jmp sub_408733
sub_43dacc
lea ecx [ ebp - 0x48 ]
jmp sub_421d24
sub_43dad4
mov eax r--data
jmp sub_408733
sub_43dae0
mov eax r--data
jmp sub_408733
sub_43daec
lea ecx [ ebp - 0x74 ]
jmp sub_421d24
sub_43daf4
mov eax r--data
jmp sub_408733
sub_43db00
push [ ebp - 0x10 ]
call sub_408044
retn
sub_43db09
mov eax r--data
jmp sub_408733
sub_43db14
push [ ebp - 0x10 ]
call sub_42473f
pop ecx
retn
sub_43db1e
mov eax r--data
jmp sub_408733
sub_43db28
push [ ebp - 0x10 ]
call sub_439783
retn
sub_43db31
mov eax r--data
jmp sub_408733
sub_43db3c
push [ ebp - 0x10 ]
call sub_439783
retn
sub_43db45
mov eax r--data
jmp sub_408733
sub_43db50
push [ ebp + 0x8 ]
call sub_4250d9
pop ecx
retn
sub_43db5a
mov eax r--data
jmp sub_408733
sub_43db64
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43db6c
mov eax r--data
jmp sub_408733
sub_43db78
mov ecx [ ebp - 0x10 ]
jmp sub_42d0bf
sub_43db80
mov eax r--data
jmp sub_408733
sub_43db8c
mov ecx [ ebp - 0x10 ]
jmp sub_42d0bf
sub_43db94
mov eax r--data
jmp sub_408733
sub_43dba0
mov ecx [ ebp - 0x10 ]
jmp sub_42d0bf
sub_43dba8
mov eax r--data
jmp sub_408733
sub_43dbb4
mov ecx [ ebp - 0x10 ]
jmp sub_42d0bf
sub_43dbbc
mov eax r--data
jmp sub_408733
sub_43dbc8
mov ecx [ ebp - 0x10 ]
jmp sub_42d0bf
sub_43dbd0
mov eax r--data
jmp sub_408733
sub_43dbdc
mov ecx [ ebp - 0x10 ]
jmp sub_42d0bf
sub_43dbe4
mov eax r--data
jmp sub_408733
sub_43dbf0
push [ ebp + 0x8 ]
call sub_4250d9
pop ecx
retn
sub_43dbfa
mov eax r--data
jmp sub_408733
sub_43dc04
mov ecx [ ebp - 0x10 ]
jmp j_sub_403fe0
sub_43dc0c
mov eax r--data
jmp sub_408733
sub_43dc18
mov ecx [ ebp - 0x10 ]
jmp j_sub_403fe0
sub_43dc20
mov eax r--data
jmp sub_408733
sub_43dc2c
mov ecx [ ebp - 0x10 ]
jmp j_sub_403fe0
sub_43dc34
mov eax r--data
jmp sub_408733
sub_43dc40
mov ecx [ ebp - 0x10 ]
jmp j_sub_403fe0
sub_43dc48
mov eax r--data
jmp sub_408733
sub_43dc54
mov ecx [ ebp - 0x10 ]
jmp j_sub_403fe0
sub_43dc5c
mov eax r--data
jmp sub_408733
sub_43dc68
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43dc70
mov eax r--data
jmp sub_408733
sub_43dc7c
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43dc84
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_4249df
sub_43dc9b
mov eax r--data
jmp sub_408733
sub_43dca8
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43dcb0
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_4249df
sub_43dcc7
mov eax r--data
jmp sub_408733
sub_43dcd4
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43dcdc
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_4249df
sub_43dcf3
mov eax r--data
jmp sub_408733
sub_43dd00
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43dd08
mov eax r--data
jmp sub_408733
sub_43dd14
mov ecx [ ebp - 0x10 ]
jmp sub_421d24
sub_43dd1c
mov eax r--data
jmp sub_408733
sub_43dd28
mov ecx [ ebp - 0x10 ]
jmp sub_421d24
sub_43dd30
mov eax r--data
jmp sub_408733
sub_43dd3c
mov ecx [ ebp - 0x10 ]
jmp sub_421d24
sub_43dd44
mov eax r--data
jmp sub_408733
sub_43dd50
mov ecx [ ebp - 0x10 ]
jmp sub_421d24
sub_43dd58
mov eax r--data
jmp sub_408733
sub_43dd64
mov ecx [ ebp - 0x10 ]
jmp sub_421d24
sub_43dd6c
mov eax r--data
jmp sub_408733
sub_43dd78
mov ecx [ ebp - 0x10 ]
jmp sub_421d24
sub_43dd80
mov eax r--data
jmp sub_408733
sub_43dd8c
mov ecx [ ebp - 0x10 ]
jmp sub_421d24
sub_43dd94
mov eax r--data
jmp sub_408733
sub_43dda0
mov ecx [ ebp - 0x10 ]
jmp sub_421d24
sub_43dda8
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_41fd33
sub_43ddb3
mov eax r--data
jmp sub_408733
sub_43ddc0
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43ddc8
mov eax r--data
jmp sub_408733
sub_43ddd4
push [ ebp - 0x1c ]
call sub_408044
retn
sub_43dddd
mov eax r--data
jmp sub_408733
sub_43dde8
mov eax r--data
jmp sub_408733
sub_43ddf4
mov ecx [ ebp - 0x10 ]
jmp sub_421d24
sub_43ddfc
mov eax r--data
jmp sub_408733
sub_43de08
lea ecx [ ebp - 0x1c ]
jmp sub_4249df
sub_43de10
lea ecx [ ebp - 0x40 ]
jmp sub_427bd7
sub_43de18
mov eax r--data
jmp sub_408733
sub_43de24
mov eax r--data
jmp sub_408733
sub_43de30
lea ecx [ ebp - 0x2c ]
jmp j_sub_404ca0
sub_43de38
lea ecx [ ebp - 0x1c ]
jmp j_sub_404ca0
sub_43de40
lea ecx [ ebp - 0x14 ]
jmp j_sub_404ca0
sub_43de48
lea ecx [ ebp - 0x24 ]
jmp j_sub_404ca0
sub_43de50
lea ecx [ ebp - 0x34 ]
jmp j_sub_404ca0
sub_43de58
lea ecx [ ebp - 0x34 ]
jmp j_sub_401820
sub_43de60
lea ecx [ ebp - 0x24 ]
jmp j_sub_401820
sub_43de68
lea ecx [ ebp - 0x14 ]
jmp j_sub_401820
sub_43de70
lea ecx [ ebp - 0x1c ]
jmp j_sub_401820
sub_43de78
lea ecx [ ebp - 0x2c ]
jmp j_sub_401820
sub_43de80
mov eax r--data
jmp sub_408733
sub_43de8c
mov ecx [ ebp - 0x10 ]
jmp sub_40827d
sub_43de94
mov eax r--data
jmp sub_408733
sub_43dea0
mov ecx [ ebp - 0x10 ]
jmp sub_43c0f6
sub_43dea8
mov eax r--data
jmp sub_408733
sub_43deb4
push [ ebp - 0x10 ]
call sub_4250d9
pop ecx
retn
sub_43debe
mov eax r--data
jmp sub_408733
sub_43dec8
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43ded0
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_4249df
sub_43dedb
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_4249df
sub_43dee6
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_4249df
sub_43def1
mov eax r--data
jmp sub_408733
sub_43defc
mov ecx [ ebp - 0x10 ]
jmp sub_43c0f6
sub_43df04
mov eax r--data
jmp sub_408733
sub_43df10
push [ ebp - 0x10 ]
call sub_439783
retn
sub_43df19
mov eax r--data
jmp sub_408733
sub_43df24
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43df2c
mov eax r--data
jmp sub_408733
sub_43df38
lea ecx [ ebp - 0x50 ]
jmp sub_421d24
sub_43df40
mov eax r--data
jmp sub_408733
sub_43df4c
push [ ebp - 0x10 ]
call sub_408044
retn
sub_43df55
mov eax r--data
jmp sub_408733
sub_43df60
mov ecx [ ebp - 0x10 ]
jmp sub_42572f
sub_43df68
mov eax r--data
jmp sub_408733
sub_43df74
mov ecx [ ebp - 0x10 ]
jmp sub_42572f
sub_43df7c
mov eax r--data
jmp sub_408733
sub_43df88
mov ecx [ ebp - 0x10 ]
jmp sub_42572f
sub_43df90
mov eax r--data
jmp sub_408733
sub_43df9c
mov ecx [ ebp - 0x10 ]
jmp sub_40827d
sub_43dfa4
mov eax r--data
jmp sub_408733
sub_43dfb0
mov ecx [ ebp - 0x10 ]
jmp sub_40827d
sub_43dfb8
mov ecx [ ebp - 0x10 ]
add ecx 0x1070
jmp j_sub_439c7c
sub_43dfc6
mov eax r--data
jmp sub_408733
sub_43dfd0
mov ecx [ ebp - 0x10 ]
jmp sub_40827d
sub_43dfd8
mov eax r--data
jmp sub_408733
sub_43dfe4
lea ecx [ ebp + 0x8 ]
jmp sub_4249df
sub_43dfec
mov eax r--data
jmp sub_408733
sub_43dff8
lea ecx [ ebp + 0x10 ]
jmp sub_4249df
sub_43e000
mov eax r--data
jmp sub_408733
sub_43e00c
lea ecx [ ebp + 0xc ]
jmp sub_4249df
sub_43e014
mov eax r--data
jmp sub_408733
sub_43e020
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e028
mov eax r--data
jmp sub_408733
sub_43e034
push [ ebp + 0x8 ]
call sub_4250d9
pop ecx
retn
sub_43e03e
mov eax r--data
jmp sub_408733
sub_43e048
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43e050
mov eax r--data
jmp sub_408733
sub_43e05c
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43e064
mov eax r--data
jmp sub_408733
sub_43e070
mov eax r--data
jmp sub_408733
sub_43e07c
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41fa3f
sub_43e087
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_41fa3f
sub_43e092
mov eax r--data
jmp sub_408733
sub_43e09c
mov eax r--data
jmp sub_408733
sub_43e0a8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41fa3f
sub_43e0b3
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_41fa3f
sub_43e0be
mov eax r--data
jmp sub_408733
sub_43e0c8
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43e0d0
mov eax r--data
jmp sub_408733
sub_43e0dc
mov ecx [ ebp - 0x10 ]
jmp sub_40827d
sub_43e0e4
mov eax r--data
jmp sub_408733
sub_43e0f0
mov ecx [ ebp - 0x10 ]
jmp sub_40827d
sub_43e0f8
mov eax r--data
jmp sub_408733
sub_43e104
mov eax r--data
jmp sub_408733
sub_43e110
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43e118
mov eax r--data
jmp sub_408733
sub_43e124
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e12c
mov eax r--data
jmp sub_408733
sub_43e138
lea ecx [ ebp + 0xc ]
jmp sub_4249df
sub_43e140
mov eax r--data
jmp sub_408733
sub_43e14c
lea ecx [ ebp + 0xc ]
jmp sub_4249df
sub_43e154
mov eax r--data
jmp sub_408733
sub_43e160
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_4249df
sub_43e16b
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_4249df
sub_43e176
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_4249df
sub_43e181
push [ ebp - 0x14 ]
call sub_4250d9
pop ecx
retn
sub_43e18b
mov eax r--data
jmp sub_408733
sub_43e198
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_4249df
sub_43e1a3
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_4249df
sub_43e1ae
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_4249df
sub_43e1b9
mov eax r--data
jmp sub_408733
sub_43e1c4
lea ecx [ ebp - 0x14 ]
jmp sub_4249df
sub_43e1cc
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e1d4
lea ecx [ ebp - 0x20 ]
jmp sub_4249df
sub_43e1dc
mov eax r--data
jmp sub_408733
sub_43e1e8
lea ecx [ ebp - 0x18 ]
jmp sub_4249df
sub_43e1f0
mov eax r--data
jmp sub_408733
sub_43e1fc
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43e204
mov eax r--data
jmp sub_408733
sub_43e210
mov ecx [ ebp - 0x10 ]
jmp sub_421d24
sub_43e218
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_41e619
sub_43e223
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_4249df
sub_43e231
mov eax r--data
jmp sub_408733
sub_43e23c
mov ecx [ ebp - 0x10 ]
jmp sub_421d24
sub_43e244
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_41e619
sub_43e24f
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_4249df
sub_43e25d
mov eax r--data
jmp sub_408733
sub_43e268
lea ecx [ ebp + 0x8 ]
jmp sub_4249df
sub_43e270
mov eax r--data
jmp sub_408733
sub_43e27c
lea ecx [ ebp - 0x14 ]
jmp sub_4084eb
sub_43e284
mov eax r--data
jmp sub_408733
sub_43e290
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e298
mov eax r--data
jmp sub_408733
sub_43e2a4
lea ecx [ ebp - 0x28 ]
jmp sub_41e619
sub_43e2ac
mov eax r--data
jmp sub_408733
sub_43e2b8
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e2c0
mov eax r--data
jmp sub_408733
sub_43e2cc
push [ ebp - 0x10 ]
call sub_408044
retn
sub_43e2d5
mov eax r--data
jmp sub_408733
sub_43e2e0
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43e2e8
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_4249df
sub_43e2f3
lea ecx [ ebp - 0x24 ]
jmp sub_4084f7
sub_43e2fb
lea ecx [ ebp - 0x14 ]
jmp sub_4249df
sub_43e303
lea ecx [ ebp - 0x24 ]
jmp sub_408514
sub_43e30b
lea ecx [ ebp - 0x24 ]
jmp sub_4084f7
sub_43e313
mov eax r--data
jmp sub_408733
sub_43e320
mov ecx [ ebp - 0x10 ]
jmp j_sub_401820
sub_43e328
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_4249df
sub_43e333
mov eax r--data
jmp sub_408733
sub_43e340
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e348
lea ecx [ ebp + 0x10 ]
jmp sub_4249df
sub_43e350
mov eax r--data
jmp sub_408733
sub_43e35c
lea ecx [ ebp + 0x8 ]
jmp sub_4249df
sub_43e364
mov eax r--data
jmp sub_408733
sub_43e370
mov ecx [ ebp - 0x10 ]
jmp sub_4084f7
sub_43e378
mov eax r--data
jmp sub_408733
sub_43e384
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e38c
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_4249df
sub_43e3a3
mov eax r--data
jmp sub_408733
sub_43e3b0
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e3b8
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_4249df
sub_43e3cf
mov eax r--data
jmp sub_408733
sub_43e3dc
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e3e4
lea ecx [ ebp + 0x10 ]
jmp sub_4249df
sub_43e3ec
mov eax r--data
jmp sub_408733
sub_43e3f8
push [ ebp - 0x14 ]
call sub_408044
retn
sub_43e401
mov ecx [ ebp - 0x14 ]
jmp sub_4084f7
sub_43e409
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_4249df
sub_43e414
mov eax r--data
jmp sub_408733
sub_43e420
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e428
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_4249df
sub_43e43f
mov eax r--data
jmp sub_408733
sub_43e44c
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e454
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_4249df
sub_43e46b
mov eax r--data
jmp sub_408733
sub_43e478
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e480
mov eax [ ebp - 0x14 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x8 ]
jmp sub_4249df
sub_43e497
mov eax r--data
jmp sub_408733
sub_43e4a4
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_4249df
sub_43e4af
mov eax r--data
jmp sub_408733
sub_43e4bc
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_4249df
sub_43e4c7
mov eax r--data
jmp sub_408733
sub_43e4d4
mov eax r--data
jmp sub_408733
sub_43e4e0
lea ecx [ ebp - 0x10 ]
jmp sub_4249df
sub_43e4e8
lea ecx [ ebp + 0x10 ]
jmp sub_4249df
sub_43e4f0
mov eax r--data
jmp sub_408733
sub_43e4fc
push [ ebp - 0x14 ]
call sub_408044
retn
sub_43e505
mov ecx [ ebp - 0x14 ]
jmp sub_4084f7
sub_43e50d
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_4249df
sub_43e518
mov eax r--data
jmp sub_408733
sub_43e524
mov ecx [ ebp - 0x10 ]
jmp sub_4084f7
sub_43e52c
mov eax r--data
jmp sub_408733
